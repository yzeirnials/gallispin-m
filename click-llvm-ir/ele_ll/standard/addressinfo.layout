
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct ArchiveElement
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int date
        28 |   int uid
        32 |   int gid
        36 |   int mode
        40 |   class String data
        40 |     struct String::rep_t _r
        40 |       const char * data
        48 |       int length
        56 |       struct String::memo_t * memo
           | [sizeof=64, dsize=64, align=8,
           |  nvsize=64, nvalign=8]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2)
         0 |   uint32_t ip6_un1_flow
         4 |   uint16_t ip6_un1_plen
         6 |   uint8_t ip6_un1_nxt
         7 |   uint8_t ip6_un1_hlim
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2)
     0:0-3 |   unsigned int ip6_un3_fc
     0:4-7 |   unsigned int ip6_un3_v
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:17:5)
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2) ip6_un1
         0 |     uint32_t ip6_un1_flow
         4 |     uint16_t ip6_un1_plen
         6 |     uint8_t ip6_un1_nxt
         7 |     uint8_t ip6_un1_hlim
         0 |   uint8_t ip6_un2_vfc
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2) ip6_un3
     0:0-3 |     unsigned int ip6_un3_fc
     0:4-7 |     unsigned int ip6_un3_v
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9859378 prev 0x5640b9850b18 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b9859470 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5640b9859500 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5640b9859578 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5640b9859638 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5640b9859700 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5640b9859878 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5640b98597b0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5640b9859920 <col:24>
| `-OptimizeNoneAttr 0x5640b9859978 <col:34>
|-CXXMethodDecl 0x5640b98599c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5640b9859c78 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5640b9859a70 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5640b9859ae8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5640b9859b68 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5640b9859d30 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5640b9859d68 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5640b9859dd0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5640b9859e58 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5640b985a178 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5640b9859f10 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5640b9859f88 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5640b985a000 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5640b985a080 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5640b985a290 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5640b9861c08 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5640b9861c08
| `-ParmVarDecl 0x5640b9861d18 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5640b9861db8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5640b9861db8
| `-ParmVarDecl 0x5640b9861ec8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5640b9a864c8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b960ae40 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b960af58 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5640b960afe8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5640b960b0b8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5640b960b1a0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b960b3b8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5640b960b260 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b960b568 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5640b960b470 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5640b960b6b0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5640b960b620 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5640b960b7f8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5640b960b768 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b960b940 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5640b960b8b0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b960ba08 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x5640b960bb50 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x5640b960bac0 <col:28> col:31 'int'
|-CXXMethodDecl 0x5640b960bc18 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x5640b960bd60 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5640b960bcd0 <col:28> col:31 'int'
|-CXXMethodDecl 0x5640b960bed8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5640b960be18 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b960c020 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5640b960bf90 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b960c0e8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5640b960c2a8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5640b960c198 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5640b960c210 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b960c4f8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5640b960c368 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b960c3e0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5640b960c5a8 <col:86> "" ""
|-CXXMethodDecl 0x5640b960c818 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5640b960c688 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5640b960c700 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b960c9c8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5640b960c8d8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5640b960cb78 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5640b960ca80 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5640b960ce48 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5640b960cc30 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5640b960cca8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5640b960cd20 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b960d128 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5640b960cf10 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5640b960cf88 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b960d000 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5640b960d1e0 <col:115> "" ""
|-AccessSpecDecl 0x5640b960d250 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5640b960d288 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b960e7a0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5640b960e7a0
| `-ParmVarDecl 0x5640b960e8a8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5640b960e948 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5640b960e948
| `-ParmVarDecl 0x5640b960ea58 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5640b9644088 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5640b9835e80 <col:7>
|-CXXConstructorDecl 0x5640b9644160 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5640b9644160
| `-ParmVarDecl 0x5640b9644278 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5640b96442e8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5640b96442e8
| `-ParmVarDecl 0x5640b96443f8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5640b9838880 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b993c840 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x5640b993ca18 prev 0x5640b993c840 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5640b993caa8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5640b993cad0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b993e6a0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x5640b993e650 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x5640b993cf80 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x5640b993ce80 'type'
|     `-TemplateSpecializationType 0x5640b993ce10 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5640b993ccf0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x5640b993ccd0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5640b993ccb0 <col:24> 'unsigned long' 8
|       `-RecordType 0x5640b993cdf0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x5640b993cd10 'char_array'
|-TypedefDecl 0x5640b993e758 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x5640b993e720 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x5640b993e700 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x5640b993e6a0 'type'
|     `-ElaboratedType 0x5640b993e650 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x5640b993cf80 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x5640b993ce80 'type'
|         `-TemplateSpecializationType 0x5640b993ce10 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5640b993ccf0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x5640b993ccd0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5640b993ccb0 <col:24> 'unsigned long' 8
|           `-RecordType 0x5640b993cdf0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x5640b993cd10 'char_array'
|-CXXMethodDecl 0x5640b993e8d8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x5640b993e7e8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x5640b993e9c8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5640b993eaa8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5640b993eaa8
|-CXXMethodDecl 0x5640b993ed78 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x5640b993ec80 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x5640b993efb8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5640b993ee30 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b993eea8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5640b993f188 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5640b993f078 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b993f0f0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5640b993f2e8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x5640b993f3b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x5640b993f608 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5640b993f478 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5640b993f4f0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5640b993f868 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x5640b993f6d8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5640b993f750 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5640b993fa28 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5640b993f938 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5640b993fbe8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5640b993faf0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5640b993fca0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b993fd50 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b993ff88 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5640b993fe00 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b993fe78 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5640b9940228 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x5640b9940130 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x5640b99402f0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x5640b9940340 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5640b9940390 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b99e91d8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x5640b99f3318 prev 0x5640b99e91d8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5640b99f4330 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5640b99f42e0 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x5640b99f42c0 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x5640b99f4170 'type'
|     `-SubstTemplateTypeParmType 0x5640b993c410 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5640b95b0670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95b0618 'T'
|       `-RecordType 0x5640b993bf60 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5640b993be78 'sized_array_memory'
|-FieldDecl 0x5640b99f4430 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5640b99f4480 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5640b99f44b8 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x5640b99f33b0 'Element *' sugar
|   |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5640b95e8308 'T'
|   `-PointerType 0x5640b98428c0 'Element *'
|     `-RecordType 0x5640b9842640 'Element'
|       `-CXXRecord 0x5640b984c390 'Element'
|-TypedefDecl 0x5640b99f4548 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x5640b99f4510 'Element *&'
|   `-SubstTemplateTypeParmType 0x5640b99f33b0 'Element *' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-PointerType 0x5640b98428c0 'Element *'
|       `-RecordType 0x5640b9842640 'Element'
|         `-CXXRecord 0x5640b984c390 'Element'
|-TypedefDecl 0x5640b99f4608 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x5640b99f45d0 'Element *const &'
|   `-QualType 0x5640b99f33b1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5640b99f33b0 'Element *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b98428c0 'Element *'
|         `-RecordType 0x5640b9842640 'Element'
|           `-CXXRecord 0x5640b984c390 'Element'
|-TypedefDecl 0x5640b99f4698 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x5640b99f4660 'Element **'
|   `-SubstTemplateTypeParmType 0x5640b99f33b0 'Element *' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-PointerType 0x5640b98428c0 'Element *'
|       `-RecordType 0x5640b9842640 'Element'
|         `-CXXRecord 0x5640b984c390 'Element'
|-TypedefDecl 0x5640b99f4758 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x5640b99f4720 'Element *const *'
|   `-QualType 0x5640b99f33b1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5640b99f33b0 'Element *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b98428c0 'Element *'
|         `-RecordType 0x5640b9842640 'Element'
|           `-CXXRecord 0x5640b984c390 'Element'
|-TypedefDecl 0x5640b99f7810 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x5640b99f77c0 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x5640b99f77a0 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x5640b99f7730 'type'
|     `-SubstTemplateTypeParmType 0x5640b99f74f0 'Element *' sugar
|       |-TemplateTypeParmType 0x5640b95bb470 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95bb420 'T'
|       `-PointerType 0x5640b98428c0 'Element *'
|         `-RecordType 0x5640b9842640 'Element'
|           `-CXXRecord 0x5640b984c390 'Element'
|-TypedefDecl 0x5640b99f7878 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x5640b99f45d0 'Element *const &'
|   `-QualType 0x5640b99f33b1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5640b99f33b0 'Element *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b98428c0 'Element *'
|         `-RecordType 0x5640b9842640 'Element'
|           `-CXXRecord 0x5640b984c390 'Element'
|-TypedefDecl 0x5640b99f78d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b99f7938 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x5640b99f4660 'Element **'
|   `-SubstTemplateTypeParmType 0x5640b99f33b0 'Element *' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-PointerType 0x5640b98428c0 'Element *'
|       `-RecordType 0x5640b9842640 'Element'
|         `-CXXRecord 0x5640b984c390 'Element'
|-TypedefDecl 0x5640b99f79a0 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x5640b99f4720 'Element *const *'
|   `-QualType 0x5640b99f33b1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5640b99f33b0 'Element *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b98428c0 'Element *'
|         `-RecordType 0x5640b9842640 'Element'
|           `-CXXRecord 0x5640b984c390 'Element'
|-EnumDecl 0x5640b99f79f8 <line:134:5> col:5
| `-EnumConstantDecl 0x5640b99f7af0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5640b99f7ad0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5640b95e99e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5640b95e99c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5640b95e99a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5640b99f7b78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5640b99f7e08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99f7c30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b99f7cd0 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x5640b99f8098 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x5640b99f7f80 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x5640b99f8358 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x5640b99f8240 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x5640b99f8670 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x5640b99f8550 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x5640b99f8980 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x5640b99f8860 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x5640b99f8c70 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99f8ab8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b99f8b30 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5640b99f8dc8 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x5640b99f8ea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99f8f00 <col:30> Inherited
|-CXXMethodDecl 0x5640b99f8f48 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x5640b99f8ff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99f9050 <col:30> Inherited
|-CXXMethodDecl 0x5640b99f9118 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5640b99f91c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99f9220 <col:30> Inherited
|-CXXMethodDecl 0x5640b99f9268 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5640b99f9318 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99f9370 <col:30> Inherited
|-CXXMethodDecl 0x5640b99f93b8 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5640b99f9468 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99f94c0 <col:30> Inherited
|-CXXMethodDecl 0x5640b99f9508 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5640b99f95b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99f9610 <col:30> Inherited
|-CXXMethodDecl 0x5640b99f9638 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b99f96e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b99f9798 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5640b99f9958 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99f9848 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b99f98c0 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5640b99f9aa8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5640b99f9a18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99f9c58 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x5640b99f9b60 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b99f9d10 <col:20>
| `-OptimizeNoneAttr 0x5640b99f9d68 <col:30>
|-CXXMethodDecl 0x5640b99f9e88 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5640b99f9d90 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b99f9f40 <col:20>
| `-OptimizeNoneAttr 0x5640b99f9f98 <col:30>
|-CXXMethodDecl 0x5640b99fa050 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b99f9fc0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99fa198 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b99fa108 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99fa2c8 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x5640b99fa3f8 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x5640b99fa4c8 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x5640b99fa598 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x5640b99fa6d8 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b99fa648 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99fa820 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b99fa790 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99fa968 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5640b99fa8d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b99faa20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5640b99fab20 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5640b99faa90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b99fabd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5640b99fac98 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x5640b99fad98 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x5640b99faf18 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b99fae58 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x5640b99fb6d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5640b99fafd0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x5640b99fb638 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x5640b99fb538 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x5640b99fb7b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b99fb908 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b99fb878 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5640b99fb9c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5640b99fbc08 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99fba80 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x5640b99fbaf8 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5640b99fbdc8 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x5640b99fbcd8 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x5640b99fc018 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x5640b99fbe90 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x5640b99fbf08 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x5640b99fc0d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b99fc338 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x5640b99fc240 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x5640b99fc408 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5640b99fc408

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9620230 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5640b9620348 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5640b96203e8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5640b9620448 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5640b96204a8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5640b9620558 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9620860 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b9620978 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5640b9620a20 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5640b9620a88 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5640b9620b18 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5640b9626bb0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5640b9626fe8 <col:12>
|-CXXConstructorDecl 0x5640b9626cb8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9626dc8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5640b9620a20 'data' 'const char *'
| | `-ImplicitCastExpr 0x5640b9629570 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5640b9629540 <col:12> 'const char *const' lvalue .data 0x5640b9620a20
| |     `-DeclRefExpr 0x5640b9629520 <col:12> 'const String::rep_t' lvalue ParmVar 0x5640b9626dc8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5640b9620a88 'length' 'int'
| | `-ImplicitCastExpr 0x5640b9629600 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5640b96295d0 <col:12> 'const int' lvalue .length 0x5640b9620a88
| |     `-DeclRefExpr 0x5640b96295b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5640b9626dc8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5640b9620b18 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5640b9629690 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5640b9629660 <col:12> 'String::memo_t *const' lvalue .memo 0x5640b9620b18
| |     `-DeclRefExpr 0x5640b9629640 <col:12> 'const String::rep_t' lvalue ParmVar 0x5640b9626dc8 '' 'const String::rep_t &'
| `-CompoundStmt 0x5640b96296e8 <col:12>
|-CXXConstructorDecl 0x5640b9626e68 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5640b9626e68
| `-ParmVarDecl 0x5640b9626f78 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5640b962c4d0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5640b9637ee8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9637ff8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5640b9638510 <col:12>
|   |-BinaryOperator 0x5640b9638328 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5640b96382e0 <col:12> 'const char *' lvalue ->data 0x5640b9620a20
|   | | `-CXXThisExpr 0x5640b96382d0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5640b9638310 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5640b96382a0 <col:12> 'const char *const' lvalue .data 0x5640b9620a20
|   |     `-DeclRefExpr 0x5640b9638280 <col:12> 'const String::rep_t' lvalue ParmVar 0x5640b9637ff8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5640b96383f0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5640b96383a8 <col:12> 'int' lvalue ->length 0x5640b9620a88
|   | | `-CXXThisExpr 0x5640b9638398 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5640b96383d8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5640b9638368 <col:12> 'const int' lvalue .length 0x5640b9620a88
|   |     `-DeclRefExpr 0x5640b9638348 <col:12> 'const String::rep_t' lvalue ParmVar 0x5640b9637ff8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5640b96384b8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5640b9638470 <col:12> 'String::memo_t *' lvalue ->memo 0x5640b9620b18
|   | | `-CXXThisExpr 0x5640b9638460 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5640b96384a0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5640b9638430 <col:12> 'String::memo_t *const' lvalue .memo 0x5640b9620b18
|   |     `-DeclRefExpr 0x5640b9638410 <col:12> 'const String::rep_t' lvalue ParmVar 0x5640b9637ff8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5640b9638500 <col:12>
|     `-UnaryOperator 0x5640b96384e8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5640b96384d8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5640b9638068 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5640b9638068
  `-ParmVarDecl 0x5640b9638178 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b96177a0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5640b96178b8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5640b9617948 <col:16, col:22> col:16 public
|-TypedefDecl 0x5640b9617988 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5640b92e5dc0 'const char *'
|   `-QualType 0x5640b92e5311 'const char' const
|     `-BuiltinType 0x5640b92e5310 'char'
|-TypedefDecl 0x5640b9617a10 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5640b96179e0 'String::const_iterator' sugar
|   |-Typedef 0x5640b9617988 'const_iterator'
|   `-PointerType 0x5640b92e5dc0 'const char *'
|     `-QualType 0x5640b92e5311 'const char' const
|       `-BuiltinType 0x5640b92e5310 'char'
|-TypedefDecl 0x5640b9617b80 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5640b9617af0 'int (String::*)() const'
|   |-RecordType 0x5640b9617830 'String'
|   | `-CXXRecord 0x5640b96177a0 'String'
|   `-ParenType 0x5640b9617a90 'int () const' sugar
|     `-FunctionProtoType 0x5640b95eb620 'int () const' const cdecl
|       `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b9617be8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5640b9440200 'int64_t' sugar
|   |-Typedef 0x5640b934e2d0 'int64_t'
|   `-TypedefType 0x5640b93274d0 '__int64_t' sugar
|     |-Typedef 0x5640b93270a8 '__int64_t'
|     `-BuiltinType 0x5640b92e5390 'long'
|-TypedefDecl 0x5640b9617c50 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5640b9440120 'uint64_t' sugar
|   |-Typedef 0x5640b934e470 'uint64_t'
|   `-TypedefType 0x5640b9327560 '__uint64_t' sugar
|     |-Typedef 0x5640b9327118 '__uint64_t'
|     `-BuiltinType 0x5640b92e5430 'unsigned long'
|-TypedefDecl 0x5640b9617ce0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5640b9617cb0 'String::intmax_t' sugar
|   |-Typedef 0x5640b9617be8 'intmax_t'
|   `-TypedefType 0x5640b9440200 'int64_t' sugar
|     |-Typedef 0x5640b934e2d0 'int64_t'
|     `-TypedefType 0x5640b93274d0 '__int64_t' sugar
|       |-Typedef 0x5640b93270a8 '__int64_t'
|       `-BuiltinType 0x5640b92e5390 'long'
|-TypedefDecl 0x5640b9617d70 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5640b9617d40 'String::uintmax_t' sugar
|   |-Typedef 0x5640b9617c50 'uintmax_t'
|   `-TypedefType 0x5640b9440120 'uint64_t' sugar
|     |-Typedef 0x5640b934e470 'uint64_t'
|     `-TypedefType 0x5640b9327560 '__uint64_t' sugar
|       |-Typedef 0x5640b9327118 '__uint64_t'
|       `-BuiltinType 0x5640b92e5430 'unsigned long'
|-CXXConstructorDecl 0x5640b9617e30 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5640b9617fd8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5640b9617f18 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5640b9618188 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5640b96180c8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5640b96182e0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5640b9618250 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5640b96184f8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5640b96183a8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5640b9618428 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5640b9618718 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5640b96185c8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5640b9618648 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5640b9618938 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5640b96187e8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5640b9618868 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5640b9618b58 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5640b9618a08 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5640b9618a88 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5640b9618ce8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x5640b9618c20 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5640b9618e68 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5640b9618da8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5640b9618ff8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5640b9618f30 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5640b9619150 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5640b96190c0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5640b96192a8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5640b9619218 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5640b9619400 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5640b9619370 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5640b9619588 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5640b96194c8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5640b9619718 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5640b9619650 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5640b96198a8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5640b96197e0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5640b9619a38 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5640b9619970 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5640b9619b30 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5640b9619c58 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5640b9619dd8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5640b9619d10 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5640b9619f28 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5640b9619e98 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5640b9619fe0 <col:63> "" ""
|-CXXMethodDecl 0x5640b961a128 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5640b961a068 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5640b961a338 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5640b961a1e8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5640b961a268 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5640b961a558 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5640b961a400 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5640b961a480 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5640b961a838 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5640b961a618 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5640b961a698 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5640b9626680 <col:55> 'int' 10
| `-ParmVarDecl 0x5640b961a710 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5640b96266a0 <col:76> 'bool' true
|-CXXMethodDecl 0x5640b961ab18 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5640b961a900 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5640b961a980 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5640b96266b0 <col:56> 'int' 10
| `-ParmVarDecl 0x5640b961a9f8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5640b96266d0 <col:77> 'bool' true
|-CXXMethodDecl 0x5640b961ac20 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5640b961ace8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5640b961adb0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5640b961ae50 <col:20>
| `-OptimizeNoneAttr 0x5640b961aea8 <col:30>
|-CXXConversionDecl 0x5640b961af98 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5640b961b068 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5640b961b128 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5640b961b218 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5640b961b2d8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5640b961b458 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5640b961b390 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5640b961b5a8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5640b961b518 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5640b961b698 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5640b961b758 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5640b961b9a8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5640b961b810 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5640b961b890 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5640b961bc08 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5640b961ba70 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5640b961baf0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5640b961bcd8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b961bee8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5640b961bd90 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5640b961be10 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5640b961c108 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5640b961bfb0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5640b961c030 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5640b961c298 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5640b961c1d0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5640b961c388 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5640b961c4f8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5640b961c438 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5640b961c708 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5640b961c5b8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5640b961c638 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5640b961c920 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5640b961c7c8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5640b961c840 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5640b961cab0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5640b961c9e0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5640b961ccd0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5640b961cb70 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5640b961cbf0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5640b961ce20 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5640b961cd90 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5640b961cff8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5640b961cee0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5640b961cf60 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5640b961d148 <line:112:5, col:44> col:10 used glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5640b961d0b8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5640b961d360 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5640b961d200 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5640b961d280 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5640b96266e0 <col:39> 'int' 0
|-CXXMethodDecl 0x5640b961d580 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5640b961d420 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5640b961d4a0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5640b9626700 <col:48> 'int' 0
|-CXXMethodDecl 0x5640b961d760 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5640b961d640 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5640b961d6c0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5640b9626720 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5640b961d830 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5640b961d8f0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5640b961d9b0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5640b961da70 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5640b961db30 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5640b961dcd8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5640b961dbe0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5640b961de58 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5640b961dd90 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5640b961e030 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5640b961df18 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5640b961e1a8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5640b961e0e8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5640b961e2f0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5640b961e260 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5640b961e440 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5640b961e3b0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5640b961e618 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5640b961e500 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5640b961e580 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5640b961e7f8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5640b961e6e0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5640b961e760 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5640b961e948 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5640b961e8b8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5640b961eb58 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5640b961ea08 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5640b961ea88 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5640b961ecb8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5640b961ec20 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5640b961ee10 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5640b961ed78 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5640b961eeb8 <col:57> "" ""
|-CXXMethodDecl 0x5640b961efc8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5640b961ef38 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5640b961f118 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5640b961f088 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5640b961f298 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5640b961f1d0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5640b961f360 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5640b961f420 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5640b961f4e0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5640b961f580 <col:49> "" ""
|-CXXMethodDecl 0x5640b961f610 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5640b961f6d0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5640b961f7c0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5640b961f888 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5640b961f948 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5640b961fa08 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5640b961fb00 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5640b961fbc8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5640b961fc90 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5640b961fe68 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5640b961fd48 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5640b961fdc8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5640b9620090 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5640b961ff30 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5640b961ffb0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5640b96201a0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5640b9620208 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5640b9620230 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5640b9620348 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5640b96203e8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5640b9620448 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5640b96204a8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5640b9620558 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5640b96205c0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5640b96207f8 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5640b9620848 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b96207d8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5640b96206e8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5640b9620690 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5640b96206d0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5640b96206b0 <col:32> 'int' 8
|-CXXRecordDecl 0x5640b9620860 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5640b9620978 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5640b9620a20 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5640b9620a88 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5640b9620b18 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5640b9626bb0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5640b9626fe8 <col:12>
| |-CXXConstructorDecl 0x5640b9626cb8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5640b9626dc8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5640b9620a20 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5640b9629570 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5640b9629540 <col:12> 'const char *const' lvalue .data 0x5640b9620a20
| | |     `-DeclRefExpr 0x5640b9629520 <col:12> 'const String::rep_t' lvalue ParmVar 0x5640b9626dc8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5640b9620a88 'length' 'int'
| | | `-ImplicitCastExpr 0x5640b9629600 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5640b96295d0 <col:12> 'const int' lvalue .length 0x5640b9620a88
| | |     `-DeclRefExpr 0x5640b96295b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5640b9626dc8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5640b9620b18 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5640b9629690 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5640b9629660 <col:12> 'String::memo_t *const' lvalue .memo 0x5640b9620b18
| | |     `-DeclRefExpr 0x5640b9629640 <col:12> 'const String::rep_t' lvalue ParmVar 0x5640b9626dc8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5640b96296e8 <col:12>
| |-CXXConstructorDecl 0x5640b9626e68 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5640b9626e68
| | `-ParmVarDecl 0x5640b9626f78 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5640b962c4d0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5640b9637ee8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5640b9637ff8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5640b9638510 <col:12>
| |   |-BinaryOperator 0x5640b9638328 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5640b96382e0 <col:12> 'const char *' lvalue ->data 0x5640b9620a20
| |   | | `-CXXThisExpr 0x5640b96382d0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5640b9638310 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5640b96382a0 <col:12> 'const char *const' lvalue .data 0x5640b9620a20
| |   |     `-DeclRefExpr 0x5640b9638280 <col:12> 'const String::rep_t' lvalue ParmVar 0x5640b9637ff8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5640b96383f0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5640b96383a8 <col:12> 'int' lvalue ->length 0x5640b9620a88
| |   | | `-CXXThisExpr 0x5640b9638398 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5640b96383d8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5640b9638368 <col:12> 'const int' lvalue .length 0x5640b9620a88
| |   |     `-DeclRefExpr 0x5640b9638348 <col:12> 'const String::rep_t' lvalue ParmVar 0x5640b9637ff8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5640b96384b8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5640b9638470 <col:12> 'String::memo_t *' lvalue ->memo 0x5640b9620b18
| |   | | `-CXXThisExpr 0x5640b9638460 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5640b96384a0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5640b9638430 <col:12> 'String::memo_t *const' lvalue .memo 0x5640b9620b18
| |   |     `-DeclRefExpr 0x5640b9638410 <col:12> 'const String::rep_t' lvalue ParmVar 0x5640b9637ff8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5640b9638500 <col:12>
| |     `-UnaryOperator 0x5640b96384e8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5640b96384d8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5640b9638068 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5640b9638068
|   `-ParmVarDecl 0x5640b9638178 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5640b9620b90 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5640b9620dd8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5640b9620bf8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5640b9620c78 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5640b9620cf0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5640b9626b70 <col:79, line:261:5>
|   |-BinaryOperator 0x5640b96267e8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5640b9626780 <col:2, col:5> 'const char *' lvalue .data 0x5640b9620a20
|   | | `-MemberExpr 0x5640b9626750 <col:2> 'String::rep_t' lvalue ->_r 0x5640b9620b90
|   | |   `-CXXThisExpr 0x5640b9626740 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5640b96267d0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640b96267b0 <col:12> 'const char *' lvalue ParmVar 0x5640b9620bf8 'data' 'const char *'
|   |-BinaryOperator 0x5640b96268b0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5640b9626848 <col:2, col:5> 'int' lvalue .length 0x5640b9620a88
|   | | `-MemberExpr 0x5640b9626818 <col:2> 'String::rep_t' lvalue ->_r 0x5640b9620b90
|   | |   `-CXXThisExpr 0x5640b9626808 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5640b9626898 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640b9626878 <col:14> 'int' lvalue ParmVar 0x5640b9620c78 'length' 'int'
|   `-IfStmt 0x5640b9626b58 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5640b96269d0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5640b96269b8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5640b9626998 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5640b9626978 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5640b9626910 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5640b9620b18
|     |       | `-MemberExpr 0x5640b96268e0 <col:7> 'String::rep_t' lvalue ->_r 0x5640b9620b90
|     |       |   `-CXXThisExpr 0x5640b96268d0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5640b9626960 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5640b9626940 <col:17> 'String::memo_t *' lvalue ParmVar 0x5640b9620cf0 'memo' 'String::memo_t *'
|     `-CallExpr 0x5640b9626b30 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5640b9626b18 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b9626a20 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5640b960f808 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5640b9626a88 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5640b96203e8
|         `-ImplicitCastExpr 0x5640b9626a70 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5640b9626a50 <col:27> 'String::memo_t *' lvalue ParmVar 0x5640b9620cf0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5640b9621088 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5640b9620ea8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5640b9620f28 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5640b9620fa0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5640b9620b90 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5640b9626ff8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5640b9627188 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5640b96270f0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5640b9627060 <col:2> '<bound member function type>' ->assign_memo 0x5640b9620dd8
|     | `-ImplicitCastExpr 0x5640b9627128 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5640b9627050 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5640b9627140 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5640b9627090 <col:14> 'const char *' lvalue ParmVar 0x5640b9620ea8 'data' 'const char *'
|     |-ImplicitCastExpr 0x5640b9627158 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5640b96270b0 <col:20> 'int' lvalue ParmVar 0x5640b9620f28 'length' 'int'
|     `-ImplicitCastExpr 0x5640b9627170 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5640b96270d0 <col:28> 'String::memo_t *' lvalue ParmVar 0x5640b9620fa0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5640b9621218 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5640b9621158 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5640b96273e0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5640b9627360 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5640b96271b0 <col:2> '<bound member function type>' ->assign_memo 0x5640b9620dd8
|     | `-CXXThisExpr 0x5640b96271a0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5640b9627398 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5640b9627230 <col:14, col:19> 'const char *' lvalue .data 0x5640b9620a20
|     |   `-MemberExpr 0x5640b9627200 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5640b9620b90
|     |     `-DeclRefExpr 0x5640b96271e0 <col:14> 'const String' lvalue ParmVar 0x5640b9621158 'x' 'const String &'
|     |-ImplicitCastExpr 0x5640b96273b0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5640b96272b0 <col:25, col:30> 'int' lvalue .length 0x5640b9620a88
|     |   `-MemberExpr 0x5640b9627280 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5640b9620b90
|     |     `-DeclRefExpr 0x5640b9627260 <col:25> 'const String' lvalue ParmVar 0x5640b9621158 'x' 'const String &'
|     `-ImplicitCastExpr 0x5640b96273c8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5640b9627330 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5640b9620b18
|         `-MemberExpr 0x5640b9627300 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5640b9620b90
|           `-DeclRefExpr 0x5640b96272e0 <col:38> 'const String' lvalue ParmVar 0x5640b9621158 'x' 'const String &'
|-CXXMethodDecl 0x5640b96212e0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5640b9627da0 <col:31, line:278:5>
|   `-IfStmt 0x5640b9627d88 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5640b9627480 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5640b9627468 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5640b9627438 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5640b9620b18
|     |     `-MemberExpr 0x5640b9627408 <col:6> 'String::rep_t' lvalue ->_r 0x5640b9620b90
|     |       `-CXXThisExpr 0x5640b96273f8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5640b9627d60 <col:15, line:277:2>
|       |-ParenExpr 0x5640b9627930 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5640b9627900 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5640b9627590 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5640b9627578 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5640b9627560 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5640b9627520 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5640b96203e8
|       |   |       `-ImplicitCastExpr 0x5640b9627508 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5640b96274d8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5640b9620b18
|       |   |           `-MemberExpr 0x5640b96274a8 <col:27> 'String::rep_t' lvalue ->_r 0x5640b9620b90
|       |   |             `-CXXThisExpr 0x5640b9627498 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5640b96275f0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5640b96275d0 <col:54> 'int' 0
|       |   `-CallExpr 0x5640b9627860 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5640b9627848 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5640b96277c8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5640b96278a0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5640b96276d8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5640b96278b8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5640b9627708 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5640b96278d0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5640b9627740 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5640b96278e8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5640b96277b0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5640b9627798 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5640b9627760 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5640b9627c80 <line:274:6, line:275:22>
|       | |-CallExpr 0x5640b9627b40 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5640b9627b28 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5640b9627aa0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5640b9610c50 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5640b9627a70 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5640b96203e8
|       | |   `-ImplicitCastExpr 0x5640b9627a58 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5640b9627a28 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5640b9620b18
|       | |       `-MemberExpr 0x5640b96279f8 <col:40> 'String::rep_t' lvalue ->_r 0x5640b9620b90
|       | |         `-CXXThisExpr 0x5640b96279e8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5640b9627c40 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5640b9627c28 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5640b9627b68 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5640b9625ac0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5640b9627c68 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5640b9627bc8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5640b9620b18
|       |       `-MemberExpr 0x5640b9627b98 <col:15> 'String::rep_t' lvalue ->_r 0x5640b9620b90
|       |         `-CXXThisExpr 0x5640b9627b88 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5640b9627d40 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5640b9627cd8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5640b9620b18
|         | `-MemberExpr 0x5640b9627ca8 <col:6> 'String::rep_t' lvalue ->_r 0x5640b9620b90
|         |   `-CXXThisExpr 0x5640b9627c98 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5640b9627d28 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5640b9627d08 <col:16> 'int' 0
|-CXXMethodDecl 0x5640b9621578 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5640b9621398 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5640b9621418 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5640b9621490 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5640b9621650 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5640b96218a0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5640b9621708 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5640b9621788 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5640b9621800 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5640b9621a88 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5640b9621970 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5640b96219f0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5640b9621b88 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5640b9627e78 <col:41, line:286:5>
|   `-ReturnStmt 0x5640b9627e68 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5640b9627e38 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5640b9627e00 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5640b9627de8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5640b9627dc8 <col:46> 'int' 1
|-CXXMethodDecl 0x5640b9621e28 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5640b9621c40 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5640b9621cc0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5640b9621d40 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5640b9625ac0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5640b9621ef0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5640b9625b90 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5640b9625d60 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5640b9625c48 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5640b9625cc8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5640b9625e20 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5640b9625ee8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5640b9625fe8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5640b9626060 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5640b96260d8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5640b9626140 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5640b9626240 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5640b9626290 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b9626220 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5640b9626200 <col:22> 'int' 14
|-CXXMethodDecl 0x5640b96264a8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5640b96262c0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5640b9626340 <col:38> col:41 'int'
| `-ParmVarDecl 0x5640b96263c0 <col:43> col:46 'int'
|-FriendDecl 0x5640b96265b0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5640b9626640 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b9895ae0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x5640b9895cb8 prev 0x5640b9895ae0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5640b9895d48 <col:46, col:52> col:46 public
|-TypedefDecl 0x5640b9895d70 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b9897730 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x5640b98976e0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x5640b98976c0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x5640b9895f88 'type'
|     `-SubstTemplateTypeParmType 0x5640b9895f50 'String' sugar
|       |-TemplateTypeParmType 0x5640b95db040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95daff0 'T'
|       `-RecordType 0x5640b9617830 'String'
|         `-CXXRecord 0x5640b96177a0 'String'
|-TypedefDecl 0x5640b98977e8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x5640b98977b0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x5640b9897790 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5640b9897730 'type'
|     `-ElaboratedType 0x5640b98976e0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x5640b98976c0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x5640b9895f88 'type'
|         `-SubstTemplateTypeParmType 0x5640b9895f50 'String' sugar
|           |-TemplateTypeParmType 0x5640b95db040 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5640b95daff0 'T'
|           `-RecordType 0x5640b9617830 'String'
|             `-CXXRecord 0x5640b96177a0 'String'
|-CXXMethodDecl 0x5640b9897968 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x5640b9897878 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x5640b9897a58 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5640b9897b38 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x5640b9897e08 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5640b9897d10 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x5640b9898048 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5640b9897ec0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b9897f38 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5640b9898218 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5640b9898108 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b9898180 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5640b9898378 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5640b9898448 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5640b9898698 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5640b9898508 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5640b9898580 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5640b98988f8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x5640b9898768 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5640b98987e0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5640b9898ab8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5640b98989c8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5640b9898c78 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5640b9898b80 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5640b9898d30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b9898de0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b9899018 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5640b9898e90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b9898f08 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5640b98992b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5640b98991c0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x5640b9899380 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x5640b98993d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5640b9899420 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b984efd0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x5640b9894548 prev 0x5640b984efd0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5640b9895a50 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x5640b9895a00 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x5640b98959e0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5640b9895890 'type'
|     `-SubstTemplateTypeParmType 0x5640b9895720 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x5640b95b0df0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5640b95b0d98 'F'
|       `-RecordType 0x5640b9895380 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x5640b98952a0 'typed_array_memory'
|-FieldDecl 0x5640b9899470 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x5640b98994c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5640b98994f8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x5640b98945e0 'String' sugar
|   |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5640b95e8308 'T'
|   `-RecordType 0x5640b9617830 'String'
|     `-CXXRecord 0x5640b96177a0 'String'
|-TypedefDecl 0x5640b9899588 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x5640b9899550 'String &'
|   `-SubstTemplateTypeParmType 0x5640b98945e0 'String' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b9617830 'String'
|       `-CXXRecord 0x5640b96177a0 'String'
|-TypedefDecl 0x5640b9899618 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x5640b98995e0 'const String &'
|   `-QualType 0x5640b98945e1 'const String' const
|     `-SubstTemplateTypeParmType 0x5640b98945e0 'String' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b9617830 'String'
|         `-CXXRecord 0x5640b96177a0 'String'
|-TypedefDecl 0x5640b98996a8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x5640b9899670 'String *'
|   `-SubstTemplateTypeParmType 0x5640b98945e0 'String' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b9617830 'String'
|       `-CXXRecord 0x5640b96177a0 'String'
|-TypedefDecl 0x5640b9899738 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x5640b9899700 'const String *'
|   `-QualType 0x5640b98945e1 'const String' const
|     `-SubstTemplateTypeParmType 0x5640b98945e0 'String' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b9617830 'String'
|         `-CXXRecord 0x5640b96177a0 'String'
|-TypedefDecl 0x5640b989a390 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x5640b989a340 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x5640b989a320 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x5640b989a258 'type'
|     `-LValueReferenceType 0x5640b989a220 'const String &'
|       `-QualType 0x5640b9899fc1 'const String' const
|         `-SubstTemplateTypeParmType 0x5640b9899fc0 'String' sugar
|           |-TemplateTypeParmType 0x5640b95bad40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5640b95bace8 'T'
|           `-RecordType 0x5640b9617830 'String'
|             `-CXXRecord 0x5640b96177a0 'String'
|-TypedefDecl 0x5640b989a3f8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x5640b98995e0 'const String &'
|   `-QualType 0x5640b98945e1 'const String' const
|     `-SubstTemplateTypeParmType 0x5640b98945e0 'String' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b9617830 'String'
|         `-CXXRecord 0x5640b96177a0 'String'
|-TypedefDecl 0x5640b989a450 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b989a4b8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x5640b9899670 'String *'
|   `-SubstTemplateTypeParmType 0x5640b98945e0 'String' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b9617830 'String'
|       `-CXXRecord 0x5640b96177a0 'String'
|-TypedefDecl 0x5640b989a520 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x5640b9899700 'const String *'
|   `-QualType 0x5640b98945e1 'const String' const
|     `-SubstTemplateTypeParmType 0x5640b98945e0 'String' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b9617830 'String'
|         `-CXXRecord 0x5640b96177a0 'String'
|-EnumDecl 0x5640b989a578 <line:134:5> col:5
| `-EnumConstantDecl 0x5640b989a670 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5640b989a650 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5640b95e99e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5640b95e99c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5640b95e99a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5640b989a6f8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x5640b989a988 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b989a7b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b989a850 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x5640b989ac18 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x5640b989ab00 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x5640b989aed8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x5640b989adc0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x5640b989b1f0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x5640b989b0d0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x5640b989b500 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x5640b989b3e0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x5640b989b7f0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b989b638 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b989b6b0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5640b989b918 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5640b989b9c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b989ba20 <col:30> Inherited
|-CXXMethodDecl 0x5640b989ba68 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5640b989bb18 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b989bb70 <col:30> Inherited
|-CXXMethodDecl 0x5640b989bc38 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5640b989bce8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b989bd40 <col:30> Inherited
|-CXXMethodDecl 0x5640b989bd88 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5640b989be38 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b989be90 <col:30> Inherited
|-CXXMethodDecl 0x5640b989bed8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5640b989bf88 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b989bfe0 <col:30> Inherited
|-CXXMethodDecl 0x5640b989c028 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5640b989c0d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b989c130 <col:30> Inherited
|-CXXMethodDecl 0x5640b989c158 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b989c208 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b989c2b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5640b989c478 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b989c368 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b989c3e0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5640b989c5c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5640b989c538 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b989c778 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x5640b989c680 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b989c830 <col:20>
| `-OptimizeNoneAttr 0x5640b989c888 <col:30>
|-CXXMethodDecl 0x5640b989c9a8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x5640b989c8b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b989ca60 <col:20>
| `-OptimizeNoneAttr 0x5640b989cab8 <col:30>
|-CXXMethodDecl 0x5640b989cb70 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b989cae0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b989ccb8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b989cc28 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b989cde8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x5640b989cee8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x5640b989cfb8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x5640b989d088 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x5640b989d1c8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b989d138 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b989d310 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b989d280 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b989d458 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x5640b989d3c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b989d510 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5640b989d610 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5640b989d580 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b989d6c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5640b989d788 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x5640b989d888 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x5640b989da08 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b989d948 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x5640b989e1c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5640b989dac0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x5640b989e128 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x5640b989e028 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x5640b989e2a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b989e3f8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b989e368 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5640b989e4b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5640b989e6f8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b989e570 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5640b989e5e8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5640b989e888 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x5640b989e7c8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5640b989ea98 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x5640b989e950 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5640b989e9c8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5640b989eb58 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x5640b989edb8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x5640b989ecc0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x5640b989ee98 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x5640b994cab8 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b98d8d50 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x5640b98d8f28 prev 0x5640b98d8d50 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5640b98d8fb8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5640b98d8fe0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b98dabb0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x5640b98dab60 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x5640b98d9490 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x5640b98d9390 'type'
|     `-TemplateSpecializationType 0x5640b98d9320 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5640b98d9200 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x5640b98d91e0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5640b98d91c0 <col:24> 'unsigned long' 4
|       `-RecordType 0x5640b98d9300 'char_array<4>'
|         `-ClassTemplateSpecialization 0x5640b98d9220 'char_array'
|-TypedefDecl 0x5640b98dac68 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x5640b98dac30 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x5640b98dac10 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x5640b98dabb0 'type'
|     `-ElaboratedType 0x5640b98dab60 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x5640b98d9490 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x5640b98d9390 'type'
|         `-TemplateSpecializationType 0x5640b98d9320 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5640b98d9200 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x5640b98d91e0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5640b98d91c0 <col:24> 'unsigned long' 4
|           `-RecordType 0x5640b98d9300 'char_array<4>'
|             `-ClassTemplateSpecialization 0x5640b98d9220 'char_array'
|-CXXMethodDecl 0x5640b98dade8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x5640b98dacf8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x5640b98e4b10 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5640b98e4bf0 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5640b98e4bf0
|-CXXMethodDecl 0x5640b98e4eb8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x5640b98e4dc0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x5640b98e50f8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5640b98e4f70 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b98e4fe8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5640b98e52c8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5640b98e51b8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b98e5230 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5640b98e5428 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x5640b98e54f8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x5640b98e5748 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5640b98e55b8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x5640b98e5630 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5640b98e59a8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x5640b98e5818 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x5640b98e5890 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5640b98e5b68 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x5640b98e5a78 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5640b98e5d28 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x5640b98e5c30 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5640b98e5de0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b98e5e90 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b98e60c8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5640b98e5f40 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b98e5fb8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5640b98e6368 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x5640b98e6270 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x5640b98e6430 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x5640b98e6480 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5640b98e64d0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b99fc750 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x5640b99fc958 prev 0x5640b99fc750 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5640b99fd970 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x5640b99fd920 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x5640b99fd900 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x5640b99fd7b0 'type'
|     `-SubstTemplateTypeParmType 0x5640b98d8920 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x5640b95b0670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95b0618 'T'
|       `-RecordType 0x5640b98d8470 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x5640b98d8388 'sized_array_memory'
|-FieldDecl 0x5640b99fda70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x5640b99fdac0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5640b99fdaf8 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x5640b99fc9f0 'unsigned int' sugar
|   |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5640b95e8308 'T'
|   `-BuiltinType 0x5640b92e5410 'unsigned int'
|-TypedefDecl 0x5640b99fdb88 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x5640b99fdb50 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x5640b99fc9f0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-BuiltinType 0x5640b92e5410 'unsigned int'
|-TypedefDecl 0x5640b99fdc48 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x5640b99fdc10 'const unsigned int &'
|   `-QualType 0x5640b99fc9f1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5640b99fc9f0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-BuiltinType 0x5640b92e5410 'unsigned int'
|-TypedefDecl 0x5640b99fdcd8 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x5640b99fdca0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x5640b99fc9f0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-BuiltinType 0x5640b92e5410 'unsigned int'
|-TypedefDecl 0x5640b99fdd68 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x5640b99fdd30 'const unsigned int *'
|   `-QualType 0x5640b99fc9f1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5640b99fc9f0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-BuiltinType 0x5640b92e5410 'unsigned int'
|-TypedefDecl 0x5640b99fe950 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x5640b99fe900 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x5640b99fe8e0 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x5640b99fe870 'type'
|     `-SubstTemplateTypeParmType 0x5640b99fe630 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5640b95bb470 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95bb420 'T'
|       `-BuiltinType 0x5640b92e5410 'unsigned int'
|-TypedefDecl 0x5640b99fe9b8 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x5640b99fdc10 'const unsigned int &'
|   `-QualType 0x5640b99fc9f1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5640b99fc9f0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-BuiltinType 0x5640b92e5410 'unsigned int'
|-TypedefDecl 0x5640b99fea10 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b99fea78 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x5640b99fdca0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x5640b99fc9f0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-BuiltinType 0x5640b92e5410 'unsigned int'
|-TypedefDecl 0x5640b99feae0 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x5640b99fdd30 'const unsigned int *'
|   `-QualType 0x5640b99fc9f1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5640b99fc9f0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-BuiltinType 0x5640b92e5410 'unsigned int'
|-EnumDecl 0x5640b99feb38 <line:134:5> col:5
| `-EnumConstantDecl 0x5640b99fec30 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5640b99fec10 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5640b95e99e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5640b95e99c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5640b95e99a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5640b99fecb8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5640b99fef08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99fed70 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b99fee10 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x5640b99ff1c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5640b99ff0b0 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x5640b9a01078 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x5640b9a00f60 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x5640b9a013c0 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5640b9a012a0 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x5640b9a016d0 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x5640b9a015b0 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x5640b9a019c0 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a01808 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9a01880 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5640b9a01ae8 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x5640b9a01bc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a01c20 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a01c68 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x5640b9a01d18 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a01d70 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a01e08 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a01eb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a01f10 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a01f58 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a02008 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a02060 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a020a8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a02158 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a021b0 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a021f8 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a022a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a02300 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a02328 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b9a023d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b9a02488 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5640b9a02648 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a02538 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9a025b0 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5640b9a02798 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9a02708 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a02948 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x5640b9a02850 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b9a02a00 <col:20>
| `-OptimizeNoneAttr 0x5640b9a02a58 <col:30>
|-CXXMethodDecl 0x5640b9a02b78 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x5640b9a02a80 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b9a02c30 <col:20>
| `-OptimizeNoneAttr 0x5640b9a02c88 <col:30>
|-CXXMethodDecl 0x5640b9a02d40 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9a02cb0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a02e88 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b9a02df8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a02fb8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x5640b9a030e8 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x5640b9a031b8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x5640b9a03288 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x5640b9a033c8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9a03338 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a03510 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b9a03480 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a03658 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x5640b9a035c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b9a03710 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5640b9a03810 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5640b9a03780 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b9a038c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5640b9a03988 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x5640b9a03a88 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x5640b9a03c08 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b9a03b48 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x5640b9a043c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5640b9a03cc0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x5640b9a04328 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x5640b9a04228 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x5640b9a044a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b9a045f8 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b9a04568 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5640b9a046b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5640b9a048f8 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a04770 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x5640b9a047e8 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5640b9a04ab8 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x5640b9a049c8 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x5640b9a04d08 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x5640b9a04b80 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x5640b9a04bf8 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x5640b9a04dc8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b9a05028 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5640b9a04f30 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x5640b9a050f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5640b9a050f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b98d7758 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x5640b98d7968 prev 0x5640b98d7758 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5640b98d8cc0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x5640b98d8c70 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x5640b98d8c50 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x5640b98d8b00 'type'
|     `-SubstTemplateTypeParmType 0x5640b98d8920 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x5640b95b0670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95b0618 'T'
|       `-RecordType 0x5640b98d8470 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x5640b98d8388 'sized_array_memory'
|-FieldDecl 0x5640b98e6520 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x5640b98e6570 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5640b98e65a8 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x5640b98d7a00 'int' sugar
|   |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5640b95e8308 'T'
|   `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b98e6638 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x5640b98e6600 'int &'
|   `-SubstTemplateTypeParmType 0x5640b98d7a00 'int' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b98e66f8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x5640b98e66c0 'const int &'
|   `-QualType 0x5640b98d7a01 'const int' const
|     `-SubstTemplateTypeParmType 0x5640b98d7a00 'int' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b98e6788 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x5640b98e6750 'int *'
|   `-SubstTemplateTypeParmType 0x5640b98d7a00 'int' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b98e6818 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x5640b98e67e0 'const int *'
|   `-QualType 0x5640b98d7a01 'const int' const
|     `-SubstTemplateTypeParmType 0x5640b98d7a00 'int' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b98e7400 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x5640b98e73b0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x5640b98e7390 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x5640b98e7320 'type'
|     `-SubstTemplateTypeParmType 0x5640b98e70e0 'int' sugar
|       |-TemplateTypeParmType 0x5640b95bb470 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95bb420 'T'
|       `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b98e7468 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x5640b98e66c0 'const int &'
|   `-QualType 0x5640b98d7a01 'const int' const
|     `-SubstTemplateTypeParmType 0x5640b98d7a00 'int' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b98e74c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b98e7528 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x5640b98e6750 'int *'
|   `-SubstTemplateTypeParmType 0x5640b98d7a00 'int' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b98e7590 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x5640b98e67e0 'const int *'
|   `-QualType 0x5640b98d7a01 'const int' const
|     `-SubstTemplateTypeParmType 0x5640b98d7a00 'int' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-BuiltinType 0x5640b92e5370 'int'
|-EnumDecl 0x5640b98e75e8 <line:134:5> col:5
| `-EnumConstantDecl 0x5640b98e76e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5640b98e76c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5640b95e99e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5640b95e99c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5640b95e99a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5640b98e7768 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5640b98e79b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b98e7820 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b98e78c0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x5640b98e7c78 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x5640b98e7b60 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x5640b98e7f38 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x5640b98e7e20 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x5640b98e8280 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x5640b98e8160 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x5640b98e8590 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x5640b98e8470 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x5640b98e8880 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b98e86c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b98e8740 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5640b98e89a8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x5640b98e8a88 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b98e8ae0 <col:30> Inherited
|-CXXMethodDecl 0x5640b98e8b28 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x5640b98e8bd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b98e8c30 <col:30> Inherited
|-CXXMethodDecl 0x5640b98e8cf8 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5640b98e8da8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b98e8e00 <col:30> Inherited
|-CXXMethodDecl 0x5640b98e8e48 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5640b98e8ef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b98e8f50 <col:30> Inherited
|-CXXMethodDecl 0x5640b98e8f98 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5640b98e9048 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b98e90a0 <col:30> Inherited
|-CXXMethodDecl 0x5640b98e90e8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5640b98e9198 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b98e91f0 <col:30> Inherited
|-CXXMethodDecl 0x5640b98e9218 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b98e92c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b98e9378 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5640b98e9538 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b98e9428 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b98e94a0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5640b98e9688 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5640b98e95f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b98e9838 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x5640b98e9740 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b98e98f0 <col:20>
| `-OptimizeNoneAttr 0x5640b98e9948 <col:30>
|-CXXMethodDecl 0x5640b98e9a68 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x5640b98e9970 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b98e9b20 <col:20>
| `-OptimizeNoneAttr 0x5640b98e9b78 <col:30>
|-CXXMethodDecl 0x5640b98e9c30 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b98e9ba0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b98e9d78 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b98e9ce8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b98e9ea8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x5640b98e9fd8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x5640b98ea0a8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x5640b98ea178 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x5640b98ea2b8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b98ea228 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b98ea400 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b98ea370 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b98ea548 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x5640b98ea4b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b98ea600 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5640b98ea700 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5640b98ea670 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b98ea7b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5640b98ea878 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x5640b98ea978 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x5640b98eaaf8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b98eaa38 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x5640b98eb2b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5640b98eabb0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x5640b98eb218 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x5640b98eb118 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x5640b98eb398 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b98eb4e8 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b98eb458 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5640b98eb5a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5640b98eb7e8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b98eb660 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x5640b98eb6d8 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5640b98eb9a8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x5640b98eb8b8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x5640b98ebbf8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x5640b98eba70 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x5640b98ebae8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x5640b98ebcb8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x5640b98ebf18 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x5640b98ebe20 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x5640b98ebfe8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5640b98ebfe8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9a05340 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5640b9a05458 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x5640b9a054f8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x5640b9a05558 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x5640b9a055f0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5640b9a055f0
| `-ParmVarDecl 0x5640b9a05708 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x5640b9a057a8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5640b9a057a8
| `-ParmVarDecl 0x5640b9a058b8 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x5640b9a05958 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5640b9a05958
| `-ParmVarDecl 0x5640b9a05a68 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5640b9a05ad8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5640b9a05ad8
| `-ParmVarDecl 0x5640b9a05be8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x5640b9a05c70 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x5640b9a05c70

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b9a07200 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x5640b9a073d8 prev 0x5640b9a07200 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5640b9a07468 <col:46, col:52> col:46 public
|-TypedefDecl 0x5640b9a07490 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b9a0acb0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x5640b9a08e00 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x5640b9a08de0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x5640b9a076a8 'type'
|     `-SubstTemplateTypeParmType 0x5640b9a07670 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5640b95db040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95daff0 'T'
|       `-RecordType 0x5640b9a053d0 'Router::element_landmark_t'
|         `-CXXRecord 0x5640b9a05340 'element_landmark_t'
|-TypedefDecl 0x5640b9a0ad68 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x5640b9a0ad30 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x5640b9a0ad10 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x5640b9a0acb0 'type'
|     `-ElaboratedType 0x5640b9a08e00 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x5640b9a08de0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x5640b9a076a8 'type'
|         `-SubstTemplateTypeParmType 0x5640b9a07670 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x5640b95db040 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5640b95daff0 'T'
|           `-RecordType 0x5640b9a053d0 'Router::element_landmark_t'
|             `-CXXRecord 0x5640b9a05340 'element_landmark_t'
|-CXXMethodDecl 0x5640b9a0aee8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x5640b9a0adf8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x5640b9a0afd8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5640b9a0b0b8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5640b9a0b0b8
|-CXXMethodDecl 0x5640b9a0b388 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x5640b9a0b290 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x5640b9a0b5c8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5640b9a0b440 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b9a0b4b8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5640b9a0b798 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5640b9a0b688 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b9a0b700 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5640b9a0b8f8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x5640b9a0b9c8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x5640b9a0bc18 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5640b9a0ba88 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x5640b9a0bb00 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5640b9a0be78 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x5640b9a0bce8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x5640b9a0bd60 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5640b9a0c038 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x5640b9a0bf48 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5640b9a0c1f8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x5640b9a0c100 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5640b9a0c2b0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b9a0c360 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b9a0c598 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5640b9a0c410 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b9a0c488 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5640b9a0c838 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x5640b9a0c740 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x5640b9a0c900 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x5640b9a0c950 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5640b9a0c9a0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b9a05d60 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x5640b9a05f68 prev 0x5640b9a05d60 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5640b9a07170 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x5640b9a07120 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x5640b9a07100 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x5640b9a06fb0 'type'
|     `-SubstTemplateTypeParmType 0x5640b9a06e40 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x5640b95b0df0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5640b95b0d98 'F'
|       `-RecordType 0x5640b9a06aa0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x5640b9a069c0 'typed_array_memory'
|-FieldDecl 0x5640b9a0c9f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x5640b9a0ca40 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5640b9a0ca78 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x5640b9a06000 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5640b95e8308 'T'
|   `-RecordType 0x5640b9a053d0 'Router::element_landmark_t'
|     `-CXXRecord 0x5640b9a05340 'element_landmark_t'
|-TypedefDecl 0x5640b9a0cb08 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x5640b9a0cad0 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x5640b9a06000 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b9a053d0 'Router::element_landmark_t'
|       `-CXXRecord 0x5640b9a05340 'element_landmark_t'
|-TypedefDecl 0x5640b9a0cb98 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x5640b9a0cb60 'const Router::element_landmark_t &'
|   `-QualType 0x5640b9a06001 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5640b9a06000 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b9a053d0 'Router::element_landmark_t'
|         `-CXXRecord 0x5640b9a05340 'element_landmark_t'
|-TypedefDecl 0x5640b9a0cc28 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x5640b9a0cbf0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x5640b9a06000 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b9a053d0 'Router::element_landmark_t'
|       `-CXXRecord 0x5640b9a05340 'element_landmark_t'
|-TypedefDecl 0x5640b9a0ccb8 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x5640b9a0cc80 'const Router::element_landmark_t *'
|   `-QualType 0x5640b9a06001 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5640b9a06000 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b9a053d0 'Router::element_landmark_t'
|         `-CXXRecord 0x5640b9a05340 'element_landmark_t'
|-TypedefDecl 0x5640b9a0d910 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x5640b9a0d8c0 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x5640b9a0d8a0 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x5640b9a0d7d8 'type'
|     `-LValueReferenceType 0x5640b9a0d7a0 'const Router::element_landmark_t &'
|       `-QualType 0x5640b9a0d541 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x5640b9a0d540 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x5640b95bad40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5640b95bace8 'T'
|           `-RecordType 0x5640b9a053d0 'Router::element_landmark_t'
|             `-CXXRecord 0x5640b9a05340 'element_landmark_t'
|-TypedefDecl 0x5640b9a0d978 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x5640b9a0cb60 'const Router::element_landmark_t &'
|   `-QualType 0x5640b9a06001 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5640b9a06000 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b9a053d0 'Router::element_landmark_t'
|         `-CXXRecord 0x5640b9a05340 'element_landmark_t'
|-TypedefDecl 0x5640b9a0d9d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b9a0da38 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x5640b9a0cbf0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x5640b9a06000 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b9a053d0 'Router::element_landmark_t'
|       `-CXXRecord 0x5640b9a05340 'element_landmark_t'
|-TypedefDecl 0x5640b9a0daa0 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x5640b9a0cc80 'const Router::element_landmark_t *'
|   `-QualType 0x5640b9a06001 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5640b9a06000 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b9a053d0 'Router::element_landmark_t'
|         `-CXXRecord 0x5640b9a05340 'element_landmark_t'
|-EnumDecl 0x5640b9a0daf8 <line:134:5> col:5
| `-EnumConstantDecl 0x5640b9a0dbf0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5640b9a0dbd0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5640b95e99e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5640b95e99c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5640b95e99a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5640b9a0dc78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5640b9a0df08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a0dd30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9a0ddd0 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x5640b9a0e1c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x5640b9a0e0b0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x5640b9a0e488 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x5640b9a0e370 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x5640b9a0e7d0 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x5640b9a0e6b0 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x5640b9a0eae0 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x5640b9a0e9c0 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x5640b9a0edd0 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a0ec18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9a0ec90 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5640b9a0eef8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x5640b9a0efd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a0f030 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a0f078 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x5640b9a0f128 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a0f180 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a0f248 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a0f2f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a0f350 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a0f398 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a0f448 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a0f4a0 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a0f4e8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a0f598 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a0f5f0 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a0f638 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a0f6e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a0f740 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a0f768 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b9a0f818 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b9a0f8c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5640b9a0fa88 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a0f978 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9a0f9f0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5640b9a0fbd8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9a0fb48 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a0fd88 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x5640b9a0fc90 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b9a0fe40 <col:20>
| `-OptimizeNoneAttr 0x5640b9a0fe98 <col:30>
|-CXXMethodDecl 0x5640b9a0ffb8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x5640b9a0fec0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b9a10070 <col:20>
| `-OptimizeNoneAttr 0x5640b9a100c8 <col:30>
|-CXXMethodDecl 0x5640b9a10180 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9a100f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a102c8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b9a10238 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a103f8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x5640b9a10528 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x5640b9a105f8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x5640b9a106c8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x5640b9a10808 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9a10778 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a10950 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b9a108c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a10a98 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x5640b9a10a08 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b9a10b50 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5640b9a10c50 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5640b9a10bc0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b9a10d08 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5640b9a10dc8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x5640b9a10ec8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x5640b9a11048 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b9a10f88 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x5640b9a117d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5640b9a11100 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x5640b9a11738 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x5640b9a11638 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x5640b9a118b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b9a11a08 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b9a11978 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5640b9a11ac0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5640b9a11d08 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a11b80 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x5640b9a11bf8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5640b9a11e98 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x5640b9a11dd8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x5640b9a120a8 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x5640b9a11f60 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x5640b9a11fd8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x5640b9a12168 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b9a123c8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x5640b9a122d0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x5640b9a12498 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5640b9a12498

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b9975800 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x5640b99759d8 prev 0x5640b9975800 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5640b9975a68 <col:46, col:52> col:46 public
|-TypedefDecl 0x5640b9975a90 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b9977660 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x5640b9977610 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x5640b9975f40 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x5640b9975e40 'type'
|     `-TemplateSpecializationType 0x5640b9975dd0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5640b9975cb0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x5640b9975c90 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5640b9975c70 <col:24> 'unsigned long' 16
|       `-RecordType 0x5640b9975db0 'char_array<16>'
|         `-ClassTemplateSpecialization 0x5640b9975cd0 'char_array'
|-TypedefDecl 0x5640b9977718 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x5640b99776e0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x5640b99776c0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x5640b9977660 'type'
|     `-ElaboratedType 0x5640b9977610 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x5640b9975f40 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x5640b9975e40 'type'
|         `-TemplateSpecializationType 0x5640b9975dd0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5640b9975cb0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x5640b9975c90 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5640b9975c70 <col:24> 'unsigned long' 16
|           `-RecordType 0x5640b9975db0 'char_array<16>'
|             `-ClassTemplateSpecialization 0x5640b9975cd0 'char_array'
|-CXXMethodDecl 0x5640b9977898 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x5640b99777a8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x5640b9977988 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5640b9977a68 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5640b9977a68
|-CXXMethodDecl 0x5640b9977d38 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x5640b9977c40 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x5640b9977f78 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5640b9977df0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b9977e68 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5640b9978148 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5640b9978038 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b99780b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5640b99782a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x5640b9978378 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x5640b99785c8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5640b9978438 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x5640b99784b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5640b9978828 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x5640b9978698 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x5640b9978710 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5640b99789e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x5640b99788f8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5640b9978ba8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x5640b9978ab0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5640b9978c60 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b9978d10 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b9978f48 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5640b9978dc0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b9978e38 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5640b99791e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x5640b99790f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x5640b99792b0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x5640b9979300 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5640b9979350 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b9a12bb0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x5640b9a13e18 prev 0x5640b9a12bb0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5640b9a14ee0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x5640b9a14e90 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x5640b9a14e70 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x5640b9a14d20 'type'
|     `-SubstTemplateTypeParmType 0x5640b99753d0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x5640b95b0670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95b0618 'T'
|       `-RecordType 0x5640b9974f20 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x5640b9974e38 'sized_array_memory'
|-FieldDecl 0x5640b9a14fe0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x5640b9a15030 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5640b9a15068 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x5640b9a13eb0 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5640b95e8308 'T'
|   `-RecordType 0x5640b99f19b0 'Router::Connection'
|     `-CXXRecord 0x5640b99f1920 'Connection'
|-TypedefDecl 0x5640b9a15128 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x5640b9a150f0 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x5640b9a13eb0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b99f19b0 'Router::Connection'
|       `-CXXRecord 0x5640b99f1920 'Connection'
|-TypedefDecl 0x5640b9a151b8 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x5640b9a15180 'const Router::Connection &'
|   `-QualType 0x5640b9a13eb1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x5640b9a13eb0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b99f19b0 'Router::Connection'
|         `-CXXRecord 0x5640b99f1920 'Connection'
|-TypedefDecl 0x5640b9a15248 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x5640b9a15210 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x5640b9a13eb0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b99f19b0 'Router::Connection'
|       `-CXXRecord 0x5640b99f1920 'Connection'
|-TypedefDecl 0x5640b9a152d8 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x5640b9a152a0 'const Router::Connection *'
|   `-QualType 0x5640b9a13eb1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x5640b9a13eb0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b99f19b0 'Router::Connection'
|         `-CXXRecord 0x5640b99f1920 'Connection'
|-TypedefDecl 0x5640b9a15f30 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x5640b9a15ee0 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x5640b9a15ec0 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x5640b9a15df8 'type'
|     `-LValueReferenceType 0x5640b9a15dc0 'const Router::Connection &'
|       `-QualType 0x5640b9a15b61 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x5640b9a15b60 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x5640b95bad40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5640b95bace8 'T'
|           `-RecordType 0x5640b99f19b0 'Router::Connection'
|             `-CXXRecord 0x5640b99f1920 'Connection'
|-TypedefDecl 0x5640b9a15f98 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x5640b9a15180 'const Router::Connection &'
|   `-QualType 0x5640b9a13eb1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x5640b9a13eb0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b99f19b0 'Router::Connection'
|         `-CXXRecord 0x5640b99f1920 'Connection'
|-TypedefDecl 0x5640b9a15ff0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b9a16058 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x5640b9a15210 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x5640b9a13eb0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b99f19b0 'Router::Connection'
|       `-CXXRecord 0x5640b99f1920 'Connection'
|-TypedefDecl 0x5640b9a160c0 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x5640b9a152a0 'const Router::Connection *'
|   `-QualType 0x5640b9a13eb1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x5640b9a13eb0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b99f19b0 'Router::Connection'
|         `-CXXRecord 0x5640b99f1920 'Connection'
|-EnumDecl 0x5640b9a16118 <line:134:5> col:5
| `-EnumConstantDecl 0x5640b9a16210 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5640b9a161f0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5640b95e99e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5640b95e99c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5640b95e99a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5640b9a16298 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5640b9a16528 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a16350 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9a163f0 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x5640b9a167e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x5640b9a166d0 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x5640b9a16aa8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x5640b9a16990 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x5640b9a16df0 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x5640b9a16cd0 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x5640b9a17100 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x5640b9a16fe0 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x5640b9a173f0 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a17238 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9a172b0 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5640b9a17548 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x5640b9a17628 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a17680 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a176c8 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x5640b9a17778 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a177d0 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a17898 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a17948 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a179a0 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a179e8 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a17a98 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a17af0 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a17b38 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a17be8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a17c40 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a17c88 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a17d38 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a17d90 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a17db8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b9a17e68 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b9a17f18 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5640b9a180d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a17fc8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9a18040 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5640b9a18228 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9a18198 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a183d8 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x5640b9a182e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b9a18490 <col:20>
| `-OptimizeNoneAttr 0x5640b9a184e8 <col:30>
|-CXXMethodDecl 0x5640b9a18608 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x5640b9a18510 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b9a186c0 <col:20>
| `-OptimizeNoneAttr 0x5640b9a18718 <col:30>
|-CXXMethodDecl 0x5640b9a187d0 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9a18740 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a18918 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b9a18888 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a18a48 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x5640b9a18b78 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x5640b9a18c48 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x5640b9a18d18 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x5640b9a18e58 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9a18dc8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a18fa0 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b9a18f10 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a190e8 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x5640b9a19058 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b9a191a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5640b9a192a0 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5640b9a19210 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b9a19358 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5640b9a19418 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x5640b9a19518 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x5640b9a196c8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b9a195d8 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x5640b9a19e88 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5640b9a19780 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x5640b9a19de8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x5640b9a19ce8 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x5640b9a19f68 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b9a1a0b8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b9a1a028 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5640b9a1a170 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5640b9a1a3b8 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a1a230 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x5640b9a1a2a8 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5640b9a1a578 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x5640b9a1a488 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x5640b9a1a7c8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x5640b9a1a640 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x5640b9a1a6b8 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x5640b9a1a888 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b9a1aae8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x5640b9a1a9f0 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x5640b9a1abb8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5640b9a1abb8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9a367d0 prev 0x5640b9937d70 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5640b9a368c8 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x5640b9a36958 <col:22, col:28> col:22 public
|-EnumDecl 0x5640b9a36980 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x5640b9a36a98 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x5640b9a36a78 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x5640b9a36a60 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5640b9a36a40 <col:14> 'int' 999
| |-EnumConstantDecl 0x5640b9a36b40 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x5640b9a36b20 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x5640b9a36b08 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5640b9a36ae8 <col:14> 'int' 1
| |-EnumConstantDecl 0x5640b9a36bd0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x5640b9a36bb0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x5640b9a36b90 <col:17> 'int' 0
| |-EnumConstantDecl 0x5640b9a36c60 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x5640b9a36c40 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x5640b9a36c20 <col:13> 'int' 1
| |-EnumConstantDecl 0x5640b9a36cf0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x5640b9a36cd0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x5640b9a36cb0 <col:16> 'int' 2
| |-EnumConstantDecl 0x5640b9a36d80 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x5640b9a36d60 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x5640b9a36d40 <col:13> 'int' 3
| |-EnumConstantDecl 0x5640b9a36e10 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x5640b9a36df0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x5640b9a36dd0 <col:15> 'int' 4
| |-EnumConstantDecl 0x5640b9a36ea0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x5640b9a36e80 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x5640b9a36e60 <col:14> 'int' 5
| |-EnumConstantDecl 0x5640b9a36f30 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x5640b9a36f10 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x5640b9a36ef0 <col:12> 'int' 6
| `-EnumConstantDecl 0x5640b9a36fc0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x5640b9a36fa0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x5640b9a36f80 <col:13> 'int' 7
|-VarDecl 0x5640b9a37030 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x5640b9a370b8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x5640b9a37140 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x5640b9a371c8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x5640b9a37250 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x5640b9a372d8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x5640b9a37360 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x5640b9a373e8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x5640b9a37470 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x5640b9a374f8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x5640b9a37580 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x5640b9a37680 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x5640b9a3d998 '_nerrors' 'int'
| | `-IntegerLiteral 0x5640b9a3e128 <line:128:13> 'int' 0
| `-CompoundStmt 0x5640b9a3e198 <col:16, line:129:5>
|-CXXDestructorDecl 0x5640b9a37770 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x5640b9a3e1a8 <col:29, line:132:5>
|-CXXMethodDecl 0x5640b9a37928 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x5640b9a37860 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5640b9a379f0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5640b9a37ad8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5640b9a3e200 <col:44, line:161:5>
|   `-ReturnStmt 0x5640b9a3e1f0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x5640b9a3e1d8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5640b9a3e1b8 <col:9> 'ErrorHandler *' lvalue Var 0x5640b9a3d9f8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x5640b9a37c18 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x5640b9a37b88 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5640b9a37ce0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5640b9a3e260 <col:43, line:173:5>
|   `-ReturnStmt 0x5640b9a3e250 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x5640b9a3e238 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5640b9a3e218 <col:9> 'ErrorHandler *' lvalue Var 0x5640b9a3da70 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x5640b9a37d98 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x5640b9a37e18 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x5640b9a37f28 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x5640b9a37e98 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a38078 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x5640b9a37fe8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a381d0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x5640b9a38138 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a38328 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x5640b9a38290 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a38480 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x5640b9a383e8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a38690 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5640b9a38538 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x5640b9a385b8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a38868 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5640b9a38750 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x5640b9a387d0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a38a88 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5640b9a38928 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x5640b9a389a8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a38c68 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5640b9a38b48 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5640b9a38bc8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a38e48 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5640b9a38d28 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5640b9a38da8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a38fd0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x5640b9a38f08 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x5640b9a391a0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x5640b9a39088 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5640b9a39100 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x5640b9a3e4b8 <col:57, line:234:5>
|   `-ReturnStmt 0x5640b9a3e4a8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x5640b9a3e490 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5640b9a3e438 <col:9, col:41> 'int'
|         |-MemberExpr 0x5640b9a3e408 <col:9> '<bound member function type>' ->xmessage 0x5640b9a38fd0
|         | `-CXXThisExpr 0x5640b9a3e3f8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x5640b9a3e478 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5640b9a3e460 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5640b9a3e3d8 <col:18, col:40> 'String' (CXXTemporary 0x5640b9a3e3d8)
|               `-CallExpr 0x5640b9a3e3a0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x5640b9a3e388 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x5640b9a3e300 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5640b9a3c1c8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x5640b9a3e320 <col:31> 'const String' lvalue ParmVar 0x5640b9a39100 'str' 'const String &'
|                 `-DeclRefExpr 0x5640b9a3e340 <col:36> 'const String' lvalue ParmVar 0x5640b9a39088 'anno' 'const String &'
|-CXXMethodDecl 0x5640b9a39480 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5640b9a39260 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5640b9a392e0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x5640b9a39358 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5640b9a3e748 <col:68, line:243:5>
|   `-ReturnStmt 0x5640b9a3e738 <line:242:2, col:41>
|     `-ExprWithCleanups 0x5640b9a3e720 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5640b9a3e6c0 <col:9, col:41> 'int'
|         |-MemberExpr 0x5640b9a3e690 <col:9> '<bound member function type>' ->xmessage 0x5640b9a391a0
|         | `-CXXThisExpr 0x5640b9a3e680 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5640b9a3e558 <col:18> 'const String' lvalue ParmVar 0x5640b9a39260 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5640b9a3e708 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5640b9a3e6f0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5640b9a3e660 <col:24, col:40> 'String' (CXXTemporary 0x5640b9a3e660)
|               `-CXXMemberCallExpr 0x5640b9a3e5f8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x5640b9a3e588 <col:24> '<bound member function type>' ->vformat 0x5640b9a3a660
|                 | `-CXXThisExpr 0x5640b9a3e578 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5640b9a3e628 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5640b9a3e5b8 <col:32> 'const char *' lvalue ParmVar 0x5640b9a392e0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5640b9a3e640 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5640b9a3e5d8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5640b9a39358 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5640b9a39720 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x5640b9a39548 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5640b9a395c0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5640b9a39638 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x5640b9a3ea88 <col:23, line:254:5>
|   `-ReturnStmt 0x5640b9a3ea78 <line:253:2, col:71>
|     `-ExprWithCleanups 0x5640b9a3ea60 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x5640b9a3ea00 <col:9, col:71> 'int'
|         |-MemberExpr 0x5640b9a3e9d0 <col:9> '<bound member function type>' ->xmessage 0x5640b9a391a0
|         | `-CXXThisExpr 0x5640b9a3e9c0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x5640b9a3ea48 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x5640b9a3ea30 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x5640b9a3e980 <col:18, col:65> 'String' (CXXTemporary 0x5640b9a3e980)
|         |     `-CallExpr 0x5640b9a3e918 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x5640b9a3e900 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x5640b9a3e7e8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5640b9a3c1c8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x5640b9a3e808 <col:31> 'const String' lvalue ParmVar 0x5640b9a395c0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x5640b9a3e960 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x5640b9a3e948 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x5640b9a3e8e0 <col:37, col:64> 'String' (CXXTemporary 0x5640b9a3e8e0)
|         |             `-CallExpr 0x5640b9a3e8b0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x5640b9a3e898 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x5640b9a3e828 <col:37> 'String (const String &)' lvalue CXXMethod 0x5640b9a3c818 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x5640b9a3e848 <col:56> 'const String' lvalue ParmVar 0x5640b9a39548 'landmark' 'const String &'
|         `-DeclRefExpr 0x5640b9a3e9a0 <col:68> 'const String' lvalue ParmVar 0x5640b9a39638 'str' 'const String &'
|-CXXMethodDecl 0x5640b9a39aa0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5640b9a397e8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5640b9a39860 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5640b9a398e0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x5640b9a39958 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5640b9a3ed40 <col:34, line:267:5>
|   `-ReturnStmt 0x5640b9a3ed30 <line:266:2, col:51>
|     `-ExprWithCleanups 0x5640b9a3ed18 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x5640b9a3ecb0 <col:9, col:51> 'int'
|         |-MemberExpr 0x5640b9a3ec80 <col:9> '<bound member function type>' ->xmessage 0x5640b9a39720
|         | `-CXXThisExpr 0x5640b9a3ec70 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5640b9a3eb28 <col:18> 'const String' lvalue ParmVar 0x5640b9a397e8 'landmark' 'const String &'
|         |-DeclRefExpr 0x5640b9a3eb48 <col:28> 'const String' lvalue ParmVar 0x5640b9a39860 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5640b9a3ed00 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x5640b9a3ece8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5640b9a3ec50 <col:34, col:50> 'String' (CXXTemporary 0x5640b9a3ec50)
|               `-CXXMemberCallExpr 0x5640b9a3ebe8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x5640b9a3eb78 <col:34> '<bound member function type>' ->vformat 0x5640b9a3a660
|                 | `-CXXThisExpr 0x5640b9a3eb68 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5640b9a3ec18 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5640b9a3eba8 <col:42> 'const char *' lvalue ParmVar 0x5640b9a398e0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5640b9a3ec30 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5640b9a3ebc8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5640b9a39958 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5640b9a39bb0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x5640b9a3edc0 <col:25, line:288:5>
|   `-ReturnStmt 0x5640b9a3edb0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x5640b9a3ed98 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x5640b9a3ed68 <col:9> 'const int' lvalue ->_nerrors 0x5640b9a3d998
|         `-CXXThisExpr 0x5640b9a3ed58 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x5640b9a39dc0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x5640b9a39c68 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x5640b9a39ce8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a3a0a8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5640b9a39e88 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x5640b9a39f08 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x5640b9a39f80 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5640b9a3a240 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x5640b9a3a178 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a3a488 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5640b9a3a300 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x5640b9a3a378 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5640b9a3f020 <col:58, line:357:5>
|   `-ReturnStmt 0x5640b9a3f010 <line:356:2, col:29>
|     `-ExprWithCleanups 0x5640b9a3eff8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x5640b9a3efc8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5640b9a3efb0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5640b9a3ef90 <col:9, col:29> 'String' (CXXTemporary 0x5640b9a3ef90)
|             `-CallExpr 0x5640b9a3ef20 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x5640b9a3ef08 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5640b9a3ee88 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x5640b9a3a0a8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x5640b9a3ee28 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x5640b9a3ef58 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x5640b9a3ee48 <col:21> 'const char *' lvalue ParmVar 0x5640b9a3a300 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x5640b9a3ef70 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x5640b9a3ee68 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5640b9a3a378 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5640b9a3a660 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x5640b9a3a550 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x5640b9a3a5c8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5640b9a3a7b8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x5640b9a3a728 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x5640b9a3a900 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x5640b9a3a870 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x5640b9a3aba0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x5640b9a3a9b8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x5640b9a3aa38 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x5640b9a3aab0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x5640b9a3bd30 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x5640b9a3ac70 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x5640b9a3f138 <col:37, line:441:5>
|   `-IfStmt 0x5640b9a3f120 <line:439:2, line:440:8>
|     |-BinaryOperator 0x5640b9a3f0a8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x5640b9a3f078 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x5640b9a3f038 <col:6> 'int' lvalue ParmVar 0x5640b9a3ac70 'level' 'int'
|     | `-ImplicitCastExpr 0x5640b9a3f090 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x5640b9a3f058 <col:15> 'ErrorHandler::Level' EnumConstant 0x5640b9a36d80 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x5640b9a3f108 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x5640b9a3f0d8 <col:8> 'int' lvalue ->_nerrors 0x5640b9a3d998
|         `-CXXThisExpr 0x5640b9a3f0c8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x5640b9a3bdf8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x5640b9a3f1d0 <col:26, line:448:5>
|   `-BinaryOperator 0x5640b9a3f1b0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x5640b9a3f160 <col:2> 'int' lvalue ->_nerrors 0x5640b9a3d998
|     | `-CXXThisExpr 0x5640b9a3f150 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x5640b9a3f190 <col:13> 'int' 0
|-CXXMethodDecl 0x5640b9a3bfc0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x5640b9a3beb0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5640b9a3bf28 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x5640b9a3c1c8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x5640b9a3c080 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x5640b9a3c0f8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x5640b9a3c478 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x5640b9a3c288 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x5640b9a3c308 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x5640b9a3c388 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x5640b9a3c530 <col:59> 0 0
|-CXXMethodDecl 0x5640b9a3c6c8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x5640b9a3c5a8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x5640b9a3c628 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x5640b9a3f840 <col:70, line:534:5>
|   |-DeclStmt 0x5640b9a3f340 <line:528:2, col:20>
|   | |-VarDecl 0x5640b9a3f1f8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x5640b9a3f260 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x5640b9a3f298 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x5640b9a3f300 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x5640b9a3f410 <line:529:2, col:23>
|   | `-VarDecl 0x5640b9a3f370 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x5640b9a3f3f8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5640b9a3f3d8 <col:18> 'const char *' lvalue ParmVar 0x5640b9a3c5a8 'begin' 'const char *'
|   |-DoStmt 0x5640b9a3f7d8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x5640b9a3f708 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x5640b9a3f6f0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x5640b9a3f6d0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x5640b9a3f428 <col:6> 'const char *' lvalue Var 0x5640b9a3f370 'x' 'const char *'
|   | |     `-CallExpr 0x5640b9a3f620 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x5640b9a3f608 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x5640b9a3f5c0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x5640b9a3de70 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x5640b9a3f688 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x5640b9a3f670 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x5640b9a3f4e0 <col:20, col:27> 'String' (CXXTemporary 0x5640b9a3f4e0)
|   | |       |     `-CXXTemporaryObjectExpr 0x5640b9a3f4a8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x5640b9a3f6a0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5640b9a3f500 <col:30> 'const char *' lvalue Var 0x5640b9a3f370 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x5640b9a3f6b8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5640b9a3f520 <col:33> 'const char *' lvalue ParmVar 0x5640b9a3c628 'end' 'const char *'
|   | |       |-UnaryOperator 0x5640b9a3f560 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5640b9a3f540 <col:39> 'String' lvalue Var 0x5640b9a3f1f8 'name' 'String'
|   | |       |-UnaryOperator 0x5640b9a3f598 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5640b9a3f578 <col:46> 'String' lvalue Var 0x5640b9a3f298 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x5640b9a3f5b0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x5640b9a3f7c0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x5640b9a3f7a8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x5640b9a3f788 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x5640b9a3f758 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5640b961af98
|   |         `-ImplicitCastExpr 0x5640b9a3f740 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x5640b9a3f720 <col:11> 'String' lvalue Var 0x5640b9a3f1f8 'name' 'String'
|   `-ReturnStmt 0x5640b9a3f830 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x5640b9a3f818 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x5640b9a3f7f8 <col:9> 'const char *' lvalue Var 0x5640b9a3f370 'x' 'const char *'
|-CXXMethodDecl 0x5640b9a3c818 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x5640b9a3c788 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x5640b9a3fe48 <col:55, line:550:5>
|   `-IfStmt 0x5640b9a3fe20 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x5640b9a3fa80 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x5640b9a3fa68 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x5640b9a3fa50 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x5640b9a3fa30 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x5640b9a3fa00 <col:6> '<bound member function type>' .operator int (String::*)() const 0x5640b961af98
|     | |       `-DeclRefExpr 0x5640b9a3f8a0 <col:6> 'const String' lvalue ParmVar 0x5640b9a3c788 'x' 'const String &'
|     | `-BinaryOperator 0x5640b9a3f9e0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x5640b9a3f9b0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x5640b9a3f960 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x5640b9a3f948 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x5640b9a3f900 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x5640b96347d0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x5640b9a3f8c0 <col:11> 'const String' lvalue ParmVar 0x5640b9a3c788 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x5640b9a3f8e0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x5640b9a3f9c8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x5640b9a3f998 <col:19> 'char' 123
|     |-ReturnStmt 0x5640b9a3faf0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x5640b9a3fac0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x5640b9a3faa0 <col:13> 'const String' lvalue ParmVar 0x5640b9a3c788 'x' 'const String &'
|     `-IfStmt 0x5640b9a3fdf8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x5640b9a3fb88 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x5640b9a3fb70 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x5640b9a3fb50 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x5640b9a3fb20 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5640b961af98
|       |       `-DeclRefExpr 0x5640b9a3fb00 <col:11> 'const String' lvalue ParmVar 0x5640b9a3c788 'x' 'const String &'
|       |-ReturnStmt 0x5640b9a3fd10 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x5640b9a3fcf8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x5640b9a3fcc8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x5640b9a3fcb0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x5640b9a3fc90 <col:13, col:29> 'String' (CXXTemporary 0x5640b9a3fc90)
|       |         `-CallExpr 0x5640b9a3fc40 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x5640b9a3fc28 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x5640b9a3fba0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x5640b9a3bfc0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x5640b9a3fc70 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x5640b9a3fbc0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x5640b9a3fbe0 <col:28> 'const String' lvalue ParmVar 0x5640b9a3c788 'x' 'const String &'
|       `-ReturnStmt 0x5640b9a3fde8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x5640b9a3fdd0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x5640b9a3fda0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x5640b9a3fd88 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x5640b9a3fd68 <col:13, col:20> 'String' (CXXTemporary 0x5640b9a3fd68)
|                 `-CXXTemporaryObjectExpr 0x5640b9a3fd30 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x5640b9a3c9e0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x5640b9a3c8d0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x5640b9a3c948 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5640b9a3e118 <col:71> 'bool' false
|-CXXRecordDecl 0x5640b9a3ca90 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x5640b9a3cd88 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x5640b9a3cd20 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x5640b9a3ccc0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x5640b9a3cc80 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x5640b9617830 'String'
|       | `-CXXRecord 0x5640b96177a0 'String'
|       |-BuiltinType 0x5640b92e5370 'int'
|       `-DecayedType 0x5640b97cf110 '__va_list_tag *' sugar
|         |-TypedefType 0x5640b97cf0e0 'va_list' sugar
|         | |-Typedef 0x5640b95088e0 'va_list'
|         | `-TypedefType 0x5640b9508890 '__gnuc_va_list' sugar
|         |   |-Typedef 0x5640b94404b8 '__gnuc_va_list'
|         |   `-TypedefType 0x5640b9440420 '__builtin_va_list' sugar
|         |     |-Typedef 0x5640b9326bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x5640b9326b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x5640b92e60c0 '__va_list_tag'
|         |         `-CXXRecord 0x5640b92e6028 '__va_list_tag'
|         `-PointerType 0x5640b950e180 '__va_list_tag *'
|           `-RecordType 0x5640b92e60c0 '__va_list_tag'
|             `-CXXRecord 0x5640b92e6028 '__va_list_tag'
|-EnumDecl 0x5640b9a3cde0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x5640b9a3cee0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5640b9a3d440 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9a3cec0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x5640b9a3cea0 <col:16> 'int' 1
| |-EnumConstantDecl 0x5640b9a3cf70 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5640b9a3d458 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9a3cf50 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x5640b9a3cf30 <col:21> 'int' 2
| |-EnumConstantDecl 0x5640b9a3d000 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5640b9a3d470 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9a3cfe0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x5640b9a3cfc0 <col:22> 'int' 4
| |-EnumConstantDecl 0x5640b9a3d090 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5640b9a3d488 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9a3d070 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x5640b9a3d050 <col:17> 'int' 8
| |-EnumConstantDecl 0x5640b9a3d120 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5640b9a3d4a0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9a3d100 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x5640b9a3d0e0 <col:22> 'int' 16
| |-EnumConstantDecl 0x5640b9a3d1b0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5640b9a3d4b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9a3d190 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5640b9a3d170 <col:19> 'int' 32
| |-EnumConstantDecl 0x5640b9a3d240 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5640b9a3d4d0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9a3d220 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x5640b9a3d200 <col:17> 'int' 64
| |-EnumConstantDecl 0x5640b9a3d2d0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5640b9a3d4e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9a3d2b0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x5640b9a3d290 <col:14> 'int' 128
| |-EnumConstantDecl 0x5640b9a3d360 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5640b9a3d500 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9a3d340 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x5640b9a3d320 <col:16> 'int' 256
| `-EnumConstantDecl 0x5640b9a3d3f0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x5640b9a3d518 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b9a3d3d0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x5640b9a3d3b0 <col:12> 'int' 1024
|-CXXMethodDecl 0x5640b9a3d728 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x5640b9a3d540 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x5640b9a3d5e0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x5640b9a3d8b0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x5640b9a3d7e8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x5640b9a3d958 <line:580:3, col:10> col:3 private
|-FieldDecl 0x5640b9a3d998 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x5640b9a3d9f8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x5640b9a3da70 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x5640b9a3de70 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x5640b9a3dae8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x5640b9a3db68 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x5640b9a3dbe8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x5640b9a3dc60 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x5640b9a3dcd8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x5640b9a3dd50 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x5640b9a3df98 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x5640b9a3df98
| `-ParmVarDecl 0x5640b9a3e0a8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x5640b9a401a8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x5640b9a401a8
  `-ParmVarDecl 0x5640b9a402b8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b98478f0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5640b9847a40 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x5640b9847ac0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x5640b98488b8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5640b98488b8
| `-ParmVarDecl 0x5640b98489c8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x5640b9848a68 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5640b9848a68
| `-ParmVarDecl 0x5640b9848b78 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x5640b9848be8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5640b9848be8
|-CXXMethodDecl 0x5640b98494b8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5640b98494b8
| `-ParmVarDecl 0x5640b98495c8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x5640b9849638 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5640b9849638
| `-ParmVarDecl 0x5640b9849748 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x5640b9a36368 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x5640b9a36440 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9847bf0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5640b9847d18 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x5640b9847da0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x5640b9848d18 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5640b9848d18
| `-ParmVarDecl 0x5640b9848e28 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x5640b9848ec8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5640b9848ec8
| `-ParmVarDecl 0x5640b9848fd8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x5640b9849048 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5640b9849048
|-CXXMethodDecl 0x5640b98497e8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5640b98497e8
| `-ParmVarDecl 0x5640b98498f8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x5640b9849968 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5640b9849968
| `-ParmVarDecl 0x5640b9849a78 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x5640b9a364a0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x5640b9a36580 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9843278 prev 0x5640b9842710 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5640b9843370 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x5640b9843400 <col:17, col:23> col:17 public
|-EnumDecl 0x5640b9843428 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x5640b9843530 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b9844280 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843510 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x5640b98434f0 <col:11> 'int' 1
| |-EnumConstantDecl 0x5640b98435c0 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b9844298 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b98435a0 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x5640b9843580 <col:12> 'int' 2
| |-EnumConstantDecl 0x5640b9843650 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b98442b0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843630 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x5640b9843610 <col:17> 'int' 4
| |-EnumConstantDecl 0x5640b98436e0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b98442c8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b98436c0 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x5640b98436a0 <col:16> 'int' 0
| |-EnumConstantDecl 0x5640b9843770 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b98442e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843750 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5640b9843730 <col:19> 'int' 32
| |-EnumConstantDecl 0x5640b9843800 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b98442f8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b98437e0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x5640b98437c0 <col:10> 'int' 64
| |-EnumConstantDecl 0x5640b9843890 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b9844310 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843870 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x5640b9843850 <col:19> 'int' 128
| |-EnumConstantDecl 0x5640b9843920 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b9844328 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843900 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x5640b98438e0 <col:20> 'int' 256
| |-EnumConstantDecl 0x5640b98439b0 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b9844340 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843990 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x5640b9843970 <col:17> 'int' 512
| |-EnumConstantDecl 0x5640b9843a40 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b9844358 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843a20 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x5640b9843a00 <col:15> 'int' 1024
| |-EnumConstantDecl 0x5640b9843ad0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b9844370 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843ab0 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x5640b9843a90 <col:11> 'int' 2048
| |-EnumConstantDecl 0x5640b9843b60 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b9844388 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843b40 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x5640b9843b20 <col:16> 'int' 4096
| |-EnumConstantDecl 0x5640b9843bf0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b98443a0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843bd0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x5640b9843bb0 <col:13> 'int' 8192
| |-EnumConstantDecl 0x5640b9843c80 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b98443b8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843c60 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x5640b9843c40 <col:15> 'int' 16384
| |-EnumConstantDecl 0x5640b9843d50 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x5640b9843d30 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x5640b9843d10 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5640b9843cd0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x5640b9843cf0 <col:20> 'int' 26
| |-EnumConstantDecl 0x5640b9843e20 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x5640b9843e00 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x5640b9843de0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5640b9843da0 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x5640b9843dc0 <col:27> 'int' 27
| |-EnumConstantDecl 0x5640b9843eb0 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b98443d0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843e90 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x5640b9843e70 <col:17> 'int' 28
| |-EnumConstantDecl 0x5640b9843f80 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x5640b9843f60 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x5640b9843f40 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5640b9843f00 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x5640b9843f20 <col:18> 'int' EnumConstant 0x5640b9843eb0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9844010 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b98443e8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9843ff0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x5640b9843fd0 <col:25> 'int' 8
| |-EnumConstantDecl 0x5640b98440a0 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5640b9844400 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9844080 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x5640b9844060 <col:26> 'int' 16
| `-EnumConstantDecl 0x5640b9844230 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x5640b9844418 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b9844210 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x5640b98441f0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x5640b98441b0 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x5640b9844170 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x5640b9844130 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x5640b98440f0 <col:14> 'int' EnumConstant 0x5640b9843530 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x5640b9844110 <col:23> 'int' EnumConstant 0x5640b98435c0 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x5640b9844150 <col:33> 'int' EnumConstant 0x5640b9843650 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x5640b9844190 <col:48> 'int' EnumConstant 0x5640b9844010 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x5640b98441d0 <col:71> 'int' EnumConstant 0x5640b98440a0 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x5640b9844478 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x5640b9849e98 <col:39, line:64:5>
|   `-ReturnStmt 0x5640b9849e88 <line:63:2, col:9>
|     `-MemberExpr 0x5640b9849e58 <col:9> 'const String' lvalue ->_name 0x5640b98478a0
|       `-CXXThisExpr 0x5640b9849e48 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5640b9844538 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x5640b9849f18 <col:35, line:71:5>
|   `-ReturnStmt 0x5640b9849f08 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x5640b9849ef0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5640b9849ec0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5640b9847fb0
|         `-CXXThisExpr 0x5640b9849eb0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5640b9844688 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x5640b98445f0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x5640b984a098 <col:42, line:77:5>
|   `-ReturnStmt 0x5640b984a088 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x5640b984a070 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x5640b984a040 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x5640b9849fa0 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x5640b9849f70 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x5640b9849f30 <col:9> 'int' lvalue ParmVar 0x5640b98445f0 'op' 'int'
|         | `-ImplicitCastExpr 0x5640b9849f88 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x5640b9849f50 <col:15> 'Handler::Flags' EnumConstant 0x5640b98435c0 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x5640b9849fd0 <col:25> 'void *const' lvalue ->_write_user_data 0x5640b9847f50
|         | `-CXXThisExpr 0x5640b9849fc0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x5640b984a010 <col:44> 'void *const' lvalue ->_read_user_data 0x5640b9847ee8
|           `-CXXThisExpr 0x5640b984a000 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x5640b9844758 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x5640b984a118 <col:41, line:82:5>
|   `-ReturnStmt 0x5640b984a108 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x5640b984a0f0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5640b984a0c0 <col:9> 'void *const' lvalue ->_read_user_data 0x5640b9847ee8
|         `-CXXThisExpr 0x5640b984a0b0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5640b9844820 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x5640b984a198 <col:42, line:87:5>
|   `-ReturnStmt 0x5640b984a188 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x5640b984a170 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5640b984a140 <col:9> 'void *const' lvalue ->_write_user_data 0x5640b9847f50
|         `-CXXThisExpr 0x5640b984a130 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5640b98448e8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x5640b9844988 <col:52> "" ""
|-CXXMethodDecl 0x5640b9844a20 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x5640b9844ac0 <col:52> "" ""
|-CXXMethodDecl 0x5640b9844b50 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x5640b984a288 <col:34, line:98:5>
|   `-ReturnStmt 0x5640b984a278 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x5640b984a260 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5640b984a240 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5640b984a210 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5640b984a1c0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5640b9847fb0
|         |   `-CXXThisExpr 0x5640b984a1b0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5640b984a228 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5640b984a1f0 <col:18> 'Handler::Flags' EnumConstant 0x5640b9843530 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x5640b9844c10 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x5640b984a378 <col:36, line:104:5>
|   `-ReturnStmt 0x5640b984a368 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x5640b984a350 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5640b984a330 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5640b984a300 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5640b984a2b0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5640b9847fb0
|         |   `-CXXThisExpr 0x5640b984a2a0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5640b984a318 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5640b984a2e0 <col:18> 'Handler::Flags' EnumConstant 0x5640b9843650 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x5640b9844cd0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x5640b984a558 <col:38, line:113:5>
|   `-ReturnStmt 0x5640b984a548 <line:112:2, col:49>
|     `-BinaryOperator 0x5640b984a528 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x5640b984a4d0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x5640b984a4b0 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5640b984a480 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5640b984a3a0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5640b9847fb0
|       |   |   `-CXXThisExpr 0x5640b984a390 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x5640b984a498 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x5640b984a460 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x5640b984a440 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x5640b984a410 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x5640b984a3d0 <col:20> 'Handler::Flags' EnumConstant 0x5640b9843530 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x5640b984a428 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x5640b984a3f0 <col:29> 'Handler::Flags' EnumConstant 0x5640b9843890 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x5640b984a510 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x5640b984a4f0 <col:49> 'Handler::Flags' EnumConstant 0x5640b9843530 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x5640b9844d90 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x5640b984a648 <col:34, line:118:5>
|   `-ReturnStmt 0x5640b984a638 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x5640b984a620 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5640b984a600 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5640b984a5d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5640b984a580 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5640b9847fb0
|         |   `-CXXThisExpr 0x5640b984a570 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5640b984a5e8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5640b984a5b0 <col:18> 'Handler::Flags' EnumConstant 0x5640b98435c0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x5640b9844e50 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x5640b984a828 <col:39, line:127:5>
|   `-ReturnStmt 0x5640b984a818 <line:126:2, col:51>
|     `-BinaryOperator 0x5640b984a7f8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x5640b984a7a0 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x5640b984a780 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5640b984a750 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5640b984a670 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5640b9847fb0
|       |   |   `-CXXThisExpr 0x5640b984a660 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x5640b984a768 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x5640b984a730 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x5640b984a710 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x5640b984a6e0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x5640b984a6a0 <col:20> 'Handler::Flags' EnumConstant 0x5640b98435c0 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x5640b984a6f8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x5640b984a6c0 <col:30> 'Handler::Flags' EnumConstant 0x5640b9843920 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x5640b984a7e0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x5640b984a7c0 <col:51> 'Handler::Flags' EnumConstant 0x5640b98435c0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x5640b9844f10 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x5640b984a930 <col:33, line:132:5>
|   `-ReturnStmt 0x5640b984a920 <line:131:2, col:41>
|     `-BinaryOperator 0x5640b984a900 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x5640b984a880 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x5640b984a850 <col:9> '<bound member function type>' ->read_visible 0x5640b9844cd0
|       |   `-CXXThisExpr 0x5640b984a840 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x5640b984a8e0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x5640b984a8b0 <col:27> '<bound member function type>' ->write_visible 0x5640b9844e50
|           `-CXXThisExpr 0x5640b984a8a0 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x5640b9844fd0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x5640b984aa68 <col:51, line:138:5>
|   `-ReturnStmt 0x5640b984aa58 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x5640b984aa40 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x5640b984aa20 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x5640b984a9d8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x5640b984a9a8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x5640b984a958 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5640b9847fb0
|           |   `-CXXThisExpr 0x5640b984a948 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x5640b984a9c0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x5640b984a988 <col:26> 'Handler::Flags' EnumConstant 0x5640b9843770 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x5640b9845090 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x5640b984ab78 <col:50, line:144:5>
|   `-ReturnStmt 0x5640b984ab68 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x5640b984ab50 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x5640b984ab30 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x5640b984ab10 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x5640b984aae0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x5640b984aa90 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5640b9847fb0
|           |   `-CXXThisExpr 0x5640b984aa80 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x5640b984aaf8 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x5640b984aac0 <col:26> 'Handler::Flags' EnumConstant 0x5640b9843770 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x5640b9845150 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x5640b984ac68 <col:29, line:166:5>
|   `-ReturnStmt 0x5640b984ac58 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x5640b984ac40 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5640b984ac20 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5640b984abf0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5640b984aba0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5640b9847fb0
|         |   `-CXXThisExpr 0x5640b984ab90 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5640b984ac08 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5640b984abd0 <col:18> 'Handler::Flags' EnumConstant 0x5640b9843800 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x5640b98453d8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x5640b9845200 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x5640b9845278 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x5640b98452f0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5640b98455e8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x5640b98454a0 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x5640b9845518 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x5640b9849d80 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x5640b9849d60 <col:62> 'int' 0
| `-CompoundStmt 0x5640b984af08 <col:71, line:188:5>
|   `-ReturnStmt 0x5640b984aef8 <line:187:2, col:36>
|     `-ExprWithCleanups 0x5640b984aee0 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x5640b984aeb0 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5640b984ae98 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5640b984ae78 <col:9, col:36> 'String' (CXXTemporary 0x5640b984ae78)
|             `-CXXMemberCallExpr 0x5640b984add8 <col:9, col:36> 'String'
|               |-MemberExpr 0x5640b984ada8 <col:9> '<bound member function type>' ->call_read 0x5640b98453d8
|               | `-CXXThisExpr 0x5640b984ad98 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x5640b984ae10 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x5640b984acf0 <col:19> 'Element *' lvalue ParmVar 0x5640b98454a0 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x5640b984ae40 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x5640b984ae28 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x5640b984ad58 <col:22, col:29> 'String' (CXXTemporary 0x5640b984ad58)
|               |     `-CXXTemporaryObjectExpr 0x5640b984ad20 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x5640b984ae58 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x5640b984ad78 <col:32> 'ErrorHandler *' lvalue ParmVar 0x5640b9845518 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x5640b9845880 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x5640b98456a8 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x5640b9845720 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5640b9845798 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5640b9845a08 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x5640b9845948 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x5640b9845c38 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x5640b9845ac0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x5640b9845b38 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x5640b9845d38 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x5640b984af68 <col:50, line:225:5>
|   `-ReturnStmt 0x5640b984af58 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x5640b984af40 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x5640b984af20 <col:9> 'const Handler *' lvalue Var 0x5640b98480e0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x5640b9845dd8 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x5640b9845ee0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846a80 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9845ec0 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x5640b9845ea0 <col:11> 'Handler::Flags' EnumConstant 0x5640b9843530 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9845f70 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846a98 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9845f50 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x5640b9845f30 <col:12> 'Handler::Flags' EnumConstant 0x5640b98435c0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846000 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846ab0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9845fe0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x5640b9845fc0 <col:17> 'Handler::Flags' EnumConstant 0x5640b9843650 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846090 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846ac8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846070 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x5640b9846050 <col:16> 'Handler::Flags' EnumConstant 0x5640b98436e0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846120 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846ae0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846100 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x5640b98460e0 <col:19> 'Handler::Flags' EnumConstant 0x5640b9843770 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b98461b0 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846af8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846190 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x5640b9846170 <col:10> 'Handler::Flags' EnumConstant 0x5640b9843800 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846240 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846b10 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846220 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x5640b9846200 <col:19> 'Handler::Flags' EnumConstant 0x5640b9843890 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b98462d0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846b28 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b98462b0 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x5640b9846290 <col:20> 'Handler::Flags' EnumConstant 0x5640b9843920 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846360 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846b40 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846340 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x5640b9846320 <col:17> 'Handler::Flags' EnumConstant 0x5640b98439b0 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b98463f0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846b58 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b98463d0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x5640b98463b0 <col:15> 'Handler::Flags' EnumConstant 0x5640b9843a40 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846480 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846b70 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846460 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x5640b9846440 <col:11> 'Handler::Flags' EnumConstant 0x5640b9843ad0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846510 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846b88 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b98464f0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x5640b98464d0 <col:16> 'Handler::Flags' EnumConstant 0x5640b9843b60 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b98465a0 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846ba0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846580 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x5640b9846560 <col:13> 'Handler::Flags' EnumConstant 0x5640b9843bf0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846630 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846bb8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846610 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x5640b98465f0 <col:15> 'Handler::Flags' EnumConstant 0x5640b9843c80 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b98466c0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846bd0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b98466a0 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x5640b9846680 <col:20> 'Handler::Flags' EnumConstant 0x5640b9843d50 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846750 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846be8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846730 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x5640b9846710 <col:27> 'Handler::Flags' EnumConstant 0x5640b9843e20 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b98467e0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846c00 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b98467c0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x5640b98467a0 <col:22> 'Handler::Flags' EnumConstant 0x5640b9843eb0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846870 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846c18 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846850 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x5640b9846830 <col:18> 'Handler::Flags' EnumConstant 0x5640b9843f80 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846900 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846c30 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b98468e0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x5640b98468c0 <col:25> 'Handler::Flags' EnumConstant 0x5640b9844010 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846990 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5640b9846c48 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846970 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x5640b9846950 <col:26> 'Handler::Flags' EnumConstant 0x5640b98440a0 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x5640b9846a30 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x5640b9846c60 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b9846a10 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x5640b98469e0 <col:20> 'Handler::Flags' EnumConstant 0x5640b9844230 'f_special' 'Handler::Flags'
|-EnumDecl 0x5640b9846c78 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x5640b9846d80 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5640b98472e0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846d60 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x5640b9846d40 <col:12> 'Handler::Flags' EnumConstant 0x5640b9843530 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846e10 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5640b98472f8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846df0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x5640b9846dd0 <col:13> 'Handler::Flags' EnumConstant 0x5640b98435c0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846ea0 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5640b9847310 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846e80 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x5640b9846e60 <col:15> 'Handler::Flags' EnumConstant 0x5640b9843650 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846f30 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5640b9847328 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846f10 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x5640b9846ef0 <col:8> 'Handler::Flags' EnumConstant 0x5640b9843800 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9846fc0 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5640b9847340 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9846fa0 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x5640b9846f80 <col:9> 'Handler::Flags' EnumConstant 0x5640b9843ad0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9847050 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5640b9847358 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9847030 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x5640b9847010 <col:14> 'Handler::Flags' EnumConstant 0x5640b9843b60 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b98470e0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5640b9847370 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b98470c0 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x5640b98470a0 <col:11> 'Handler::Flags' EnumConstant 0x5640b9843bf0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9847170 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5640b9847388 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9847150 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x5640b9847130 <col:13> 'Handler::Flags' EnumConstant 0x5640b9843c80 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x5640b9847200 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5640b98473a0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b98471e0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x5640b98471c0 <col:20> 'Handler::Flags' EnumConstant 0x5640b9843eb0 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x5640b9847290 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x5640b98473b8 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b9847270 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x5640b9847250 <col:16> 'Handler::Flags' EnumConstant 0x5640b9843f80 'f_user0' 'Handler::Flags'
|-EnumDecl 0x5640b98473d0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x5640b9847490 <col:25> "" ""
| |-EnumConstantDecl 0x5640b9847540 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x5640b9847620 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9847520 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x5640b9847500 <col:14> 'Handler::Flags' EnumConstant 0x5640b98436e0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x5640b98475d0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x5640b9847638 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b98475b0 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x5640b9847590 <col:17> 'Handler::Flags' EnumConstant 0x5640b9843770 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x5640b98477b8 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x5640b9847660 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x5640b98476e0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x5640b984b628 <col:70, line:284:5>
|   |-ParenExpr 0x5640b984b448 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x5640b984b418 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x5640b984b148 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b984b118 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x5640b984b0c0 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x5640b984b0a0 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x5640b984b070 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x5640b984af90 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5640b9847fb0
|   |   |   |   |   `-CXXThisExpr 0x5640b984af80 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x5640b984b088 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x5640b984b050 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x5640b984b030 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x5640b984b000 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x5640b984afc0 <col:34> 'Handler::Flags' EnumConstant 0x5640b9843530 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x5640b984b018 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x5640b984afe0 <col:43> 'Handler::Flags' EnumConstant 0x5640b9844010 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x5640b984b100 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x5640b984b0e0 <col:69> 'Handler::Flags' EnumConstant 0x5640b9843530 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x5640b984b1a8 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b984b188 <col:85> 'int' 0
|   |   `-CallExpr 0x5640b984b378 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x5640b984b360 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b984b340 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b984b3b8 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b984b218 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x5640b984b3d0 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b984b268 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x5640b984b3e8 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b984b2a0 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x5640b984b400 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b984b328 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b984b310 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b984b2c0 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x5640b984b618 <line:283:2, col:38>
|     `-ExprWithCleanups 0x5640b984b600 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x5640b984b5d0 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5640b984b5b8 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5640b984b598 <col:9, col:38> 'String' (CXXTemporary 0x5640b984b598)
|             `-CallExpr 0x5640b984b530 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x5640b984b518 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x5640b984b4a8 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x5640b9847ac0
|               |   `-MemberExpr 0x5640b984b478 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x5640b9847b88
|               |     `-CXXThisExpr 0x5640b984b468 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x5640b984b560 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x5640b984b4d8 <col:22> 'Element *' lvalue ParmVar 0x5640b9847660 'e' 'Element *'
|               `-ImplicitCastExpr 0x5640b984b578 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x5640b984b4f8 <col:25> 'void *' lvalue ParmVar 0x5640b98476e0 'new_user_data' 'void *'
|-AccessSpecDecl 0x5640b9847868 <line:287:3, col:10> col:3 private
|-FieldDecl 0x5640b98478a0 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x5640b98478f0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5640b9847a40 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x5640b9847ac0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x5640b98488b8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5640b98488b8
| | `-ParmVarDecl 0x5640b98489c8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x5640b9848a68 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5640b9848a68
| | `-ParmVarDecl 0x5640b9848b78 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x5640b9848be8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5640b9848be8
| |-CXXMethodDecl 0x5640b98494b8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5640b98494b8
| | `-ParmVarDecl 0x5640b98495c8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x5640b9849638 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5640b9849638
| | `-ParmVarDecl 0x5640b9849748 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x5640b9a36368 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5640b9a36440 <col:5>
|-FieldDecl 0x5640b9847b88 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x5640b9847bf0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5640b9847d18 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x5640b9847da0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x5640b9848d18 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5640b9848d18
| | `-ParmVarDecl 0x5640b9848e28 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x5640b9848ec8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5640b9848ec8
| | `-ParmVarDecl 0x5640b9848fd8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x5640b9849048 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5640b9849048
| |-CXXMethodDecl 0x5640b98497e8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5640b98497e8
| | `-ParmVarDecl 0x5640b98498f8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x5640b9849968 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5640b9849968
| | `-ParmVarDecl 0x5640b9849a78 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x5640b9a364a0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5640b9a36580 <col:5>
|-FieldDecl 0x5640b9847e68 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x5640b9847ee8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x5640b9847f50 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x5640b9847fb0 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x5640b9848018 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x5640b9848080 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x5640b98480e0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x5640b9848200 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x5640b9848158 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x5640b9849e30 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5640b9849e18 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x5640b9849e00 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5640b9849de0 <col:30, col:37> 'String' (CXXTemporary 0x5640b9849de0)
|           `-CXXTemporaryObjectExpr 0x5640b9849da8 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x5640b98483a8 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x5640b98482e8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x5640b9848528 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x5640b9848460 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x5640b98486e8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x5640b9848728 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x5640b9848728
| `-ParmVarDecl 0x5640b9848808 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x5640b9849158 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x5640b9849158
| `-ParmVarDecl 0x5640b9849268 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x5640b9849308 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x5640b9849308
| `-ParmVarDecl 0x5640b9849418 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x5640b9849ae8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x5640b9849ae8
| `-ParmVarDecl 0x5640b9849bf8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x5640b9849c80 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x5640b9849c80

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b9a1b728 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x5640b9a1b938 prev 0x5640b9a1b728 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5640b9a1e6e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5640b9a1e690 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x5640b9a1e670 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x5640b9a1e520 'type'
|     `-SubstTemplateTypeParmType 0x5640b993c410 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5640b95b0670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95b0618 'T'
|       `-RecordType 0x5640b993bf60 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5640b993be78 'sized_array_memory'
|-FieldDecl 0x5640b9a1e7e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5640b9a1e830 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5640b9a1e868 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x5640b9a1b9d0 'void *' sugar
|   |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5640b95e8308 'T'
|   `-PointerType 0x5640b92e5ad0 'void *'
|     `-BuiltinType 0x5640b92e52d0 'void'
|-TypedefDecl 0x5640b9a1e8f8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x5640b9a1e8c0 'void *&'
|   `-SubstTemplateTypeParmType 0x5640b9a1b9d0 'void *' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-PointerType 0x5640b92e5ad0 'void *'
|       `-BuiltinType 0x5640b92e52d0 'void'
|-TypedefDecl 0x5640b9a1e9b8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x5640b9a1e980 'void *const &'
|   `-QualType 0x5640b9a1b9d1 'void *const' const
|     `-SubstTemplateTypeParmType 0x5640b9a1b9d0 'void *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b92e5ad0 'void *'
|         `-BuiltinType 0x5640b92e52d0 'void'
|-TypedefDecl 0x5640b9a1ea48 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x5640b9a1ea10 'void **'
|   `-SubstTemplateTypeParmType 0x5640b9a1b9d0 'void *' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-PointerType 0x5640b92e5ad0 'void *'
|       `-BuiltinType 0x5640b92e52d0 'void'
|-TypedefDecl 0x5640b9a1ead8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x5640b9a1eaa0 'void *const *'
|   `-QualType 0x5640b9a1b9d1 'void *const' const
|     `-SubstTemplateTypeParmType 0x5640b9a1b9d0 'void *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b92e5ad0 'void *'
|         `-BuiltinType 0x5640b92e52d0 'void'
|-TypedefDecl 0x5640b9a1f6c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x5640b9a1f670 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x5640b9a1f650 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x5640b9a1f5e0 'type'
|     `-SubstTemplateTypeParmType 0x5640b9a1f3a0 'void *' sugar
|       |-TemplateTypeParmType 0x5640b95bb470 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95bb420 'T'
|       `-PointerType 0x5640b92e5ad0 'void *'
|         `-BuiltinType 0x5640b92e52d0 'void'
|-TypedefDecl 0x5640b9a1f728 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x5640b9a1e980 'void *const &'
|   `-QualType 0x5640b9a1b9d1 'void *const' const
|     `-SubstTemplateTypeParmType 0x5640b9a1b9d0 'void *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b92e5ad0 'void *'
|         `-BuiltinType 0x5640b92e52d0 'void'
|-TypedefDecl 0x5640b9a1f780 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b9a1f7e8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x5640b9a1ea10 'void **'
|   `-SubstTemplateTypeParmType 0x5640b9a1b9d0 'void *' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-PointerType 0x5640b92e5ad0 'void *'
|       `-BuiltinType 0x5640b92e52d0 'void'
|-TypedefDecl 0x5640b9a1f850 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x5640b9a1eaa0 'void *const *'
|   `-QualType 0x5640b9a1b9d1 'void *const' const
|     `-SubstTemplateTypeParmType 0x5640b9a1b9d0 'void *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b92e5ad0 'void *'
|         `-BuiltinType 0x5640b92e52d0 'void'
|-EnumDecl 0x5640b9a1f8a8 <line:134:5> col:5
| `-EnumConstantDecl 0x5640b9a1f9a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5640b9a1f980 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5640b95e99e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5640b95e99c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5640b95e99a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5640b9a1fa28 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5640b9a1fc78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a1fae0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9a1fb80 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x5640b9a1ff38 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x5640b9a1fe20 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x5640b9a201f8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x5640b9a200e0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x5640b9a20540 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x5640b9a20420 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x5640b9a20850 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x5640b9a20730 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x5640b9a20b40 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a20988 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9a20a00 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5640b9a20c98 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x5640b9a20d78 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a20dd0 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a20e18 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x5640b9a20ec8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a20f20 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a20fe8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a21098 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a210f0 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a21138 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a211e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a21240 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a21288 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a21338 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a21390 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a213d8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x5640b9a21488 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9a214e0 <col:30> Inherited
|-CXXMethodDecl 0x5640b9a21508 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b9a215b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b9a21668 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5640b9a21828 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a21718 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9a21790 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5640b9a21978 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9a218e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a21b28 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x5640b9a21a30 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b9a21be0 <col:20>
| `-OptimizeNoneAttr 0x5640b9a21c38 <col:30>
|-CXXMethodDecl 0x5640b9a21d58 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5640b9a21c60 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b9a21e10 <col:20>
| `-OptimizeNoneAttr 0x5640b9a21e68 <col:30>
|-CXXMethodDecl 0x5640b9a21f20 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9a21e90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a22068 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b9a21fd8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a22198 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x5640b9a222c8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x5640b9a22398 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x5640b9a22468 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x5640b9a225a8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9a22518 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a226f0 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b9a22660 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9a22838 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5640b9a227a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b9a228f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5640b9a229f0 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5640b9a22960 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b9a22aa8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5640b9a22b68 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x5640b9a22c68 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x5640b9a22de8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b9a22d28 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x5640b9a235a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5640b9a22ea0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x5640b9a23508 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x5640b9a23408 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x5640b9a23688 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b9a237d8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b9a23748 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5640b9a23890 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5640b9a23ad8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9a23950 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x5640b9a239c8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5640b9a23c98 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x5640b9a23ba8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x5640b9a23ee8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x5640b9a23d60 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x5640b9a23dd8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x5640b9a23fa8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b9a24208 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x5640b9a24110 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x5640b9a242d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5640b9a242d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9a244d0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5640b9a245e8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x5640b9a24678 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x5640b9a24780 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x5640b9a247d0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b9a24760 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x5640b9a24740 <col:27> 'int' 4096
|-FieldDecl 0x5640b9a247f8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x5640b9a24860 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x5640b9a24a58 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x5640b9a24ae8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x5640b9a24ca8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x5640b9a24b48 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x5640b9a24bc0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x5640b9a247f8 'name' 'String'
| | `-CXXConstructExpr 0x5640b9a2fe58 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x5640b9a2fe18 <col:20> 'const String' lvalue ParmVar 0x5640b9a24b48 'n' 'const String &'
| |-CXXCtorInitializer Field 0x5640b9a24860 'nsig' 'int'
| | `-IntegerLiteral 0x5640b9a2feb0 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x5640b9a24a58 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x5640b9a2ff98 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5640b9a24ae8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x5640b9a2ff58 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x5640b9a2ff18 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x5640b9a24bc0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x5640b9a30228 <col:42, line:289:9>
|   `-CallExpr 0x5640b9a301d8 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x5640b9a301c0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5640b9a301a0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x5640b954ad28 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x5640b9a30210 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x5640b9a300e8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x5640b9a300c8 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x5640b9a300b0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5640b9a30060 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x5640b9a24a58
|     |     |   `-CXXThisExpr 0x5640b9a30050 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x5640b9a30090 <col:25> 'int' 0
|     |-IntegerLiteral 0x5640b9a30100 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x5640b9a30180 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x5640b9a30160 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x5640b9a30130 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x5640b9a24a58 non_odr_use_unevaluated
|           `-CXXThisExpr 0x5640b9a30120 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x5640b9a24d88 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x5640b9a24d88
| `-ParmVarDecl 0x5640b9a24e98 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x5640b9a24f38 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5640b9a24f38
| `-ParmVarDecl 0x5640b9a25048 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x5640b9a250e8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x5640b9a250e8
| `-ParmVarDecl 0x5640b9a251f8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x5640b9a25268 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5640b9a25268
| `-ParmVarDecl 0x5640b9a25378 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x5640b9a25400 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x5640b9a25400

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b99e7700 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5640b99e7818 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x5640b99e78a8 <col:21, col:27> col:21 public
|-EnumDecl 0x5640b99e78d0 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x5640b99e79e8 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x5640b99e79c8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5640b99e79b0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5640b99e7990 <col:32> 'int' 1
| `-EnumConstantDecl 0x5640b99e7a90 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x5640b99e7a70 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5640b99e7a58 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5640b99e7a38 <col:53> 'int' 1000
|-CXXConstructorDecl 0x5640b99e7b40 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x5640b99e8078 <col:19, col:21>
|-CXXDestructorDecl 0x5640b99e7c30 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x5640b99e8088 <col:28, col:30>
|-CXXMethodDecl 0x5640b99e7df0 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x5640b99e7d20 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x5640b99e7ef8 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x5640b99e7ef8
  `-ParmVarDecl 0x5640b99e8008 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<class NameDB *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class NameInfo
         0 |   class Vector<class NameDB *> _namedb_roots
         0 |     class vector_memory<class sized_array_memory<8> > vm_
         0 |       vector_memory<class sized_array_memory<8> >::type * l_
         8 |       vector_memory::size_type n_
        12 |       vector_memory::size_type capacity_
        16 |   class Vector<class NameDB *> _namedbs
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b993b460 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'NameDB *'
|-CXXRecordDecl 0x5640b993b668 prev 0x5640b993b460 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5640b993c7b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<NameDB *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5640b993c760 'typename array_memory<NameDB *>::type' sugar
|   `-TypedefType 0x5640b993c740 'conditional<true, sized_array_memory<8>, typed_array_memory<NameDB *> >::type' sugar
|     |-Typedef 0x5640b993c5f0 'type'
|     `-SubstTemplateTypeParmType 0x5640b993c410 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5640b95b0670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95b0618 'T'
|       `-RecordType 0x5640b993bf60 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5640b993be78 'sized_array_memory'
|-FieldDecl 0x5640b99403e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<NameDB *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5640b9940430 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5640b9940468 <line:118:5, col:15> col:15 value_type 'NameDB *':'NameDB *'
| `-SubstTemplateTypeParmType 0x5640b993b700 'NameDB *' sugar
|   |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5640b95e8308 'T'
|   `-PointerType 0x5640b99395e0 'NameDB *'
|     `-RecordType 0x5640b9937d50 'NameDB'
|       `-CXXRecord 0x5640b9946a28 'NameDB'
|-TypedefDecl 0x5640b9940528 <line:119:5, col:16> col:16 reference 'NameDB *&'
| `-LValueReferenceType 0x5640b99404f0 'NameDB *&'
|   `-SubstTemplateTypeParmType 0x5640b993b700 'NameDB *' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-PointerType 0x5640b99395e0 'NameDB *'
|       `-RecordType 0x5640b9937d50 'NameDB'
|         `-CXXRecord 0x5640b9946a28 'NameDB'
|-TypedefDecl 0x5640b99405e8 <line:120:5, col:22> col:22 const_reference 'NameDB *const &'
| `-LValueReferenceType 0x5640b99405b0 'NameDB *const &'
|   `-QualType 0x5640b993b701 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x5640b993b700 'NameDB *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b99395e0 'NameDB *'
|         `-RecordType 0x5640b9937d50 'NameDB'
|           `-CXXRecord 0x5640b9946a28 'NameDB'
|-TypedefDecl 0x5640b99406a8 <line:121:5, col:16> col:16 pointer 'NameDB **'
| `-PointerType 0x5640b9940670 'NameDB **'
|   `-SubstTemplateTypeParmType 0x5640b993b700 'NameDB *' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-PointerType 0x5640b99395e0 'NameDB *'
|       `-RecordType 0x5640b9937d50 'NameDB'
|         `-CXXRecord 0x5640b9946a28 'NameDB'
|-TypedefDecl 0x5640b9940768 <line:122:5, col:22> col:22 const_pointer 'NameDB *const *'
| `-PointerType 0x5640b9940730 'NameDB *const *'
|   `-QualType 0x5640b993b701 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x5640b993b700 'NameDB *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b99395e0 'NameDB *'
|         `-RecordType 0x5640b9937d50 'NameDB'
|           `-CXXRecord 0x5640b9946a28 'NameDB'
|-TypedefDecl 0x5640b9941340 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<NameDB *>::type':'NameDB *'
| `-ElaboratedType 0x5640b99412f0 'typename fast_argument<NameDB *>::type' sugar
|   `-TypedefType 0x5640b99412d0 'fast_argument<NameDB *, false>::type' sugar
|     |-Typedef 0x5640b9941260 'type'
|     `-SubstTemplateTypeParmType 0x5640b9941020 'NameDB *' sugar
|       |-TemplateTypeParmType 0x5640b95bb470 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95bb420 'T'
|       `-PointerType 0x5640b99395e0 'NameDB *'
|         `-RecordType 0x5640b9937d50 'NameDB'
|           `-CXXRecord 0x5640b9946a28 'NameDB'
|-TypedefDecl 0x5640b99413a8 <line:126:5, col:22> col:22 const_access_type 'NameDB *const &'
| `-LValueReferenceType 0x5640b99405b0 'NameDB *const &'
|   `-QualType 0x5640b993b701 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x5640b993b700 'NameDB *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b99395e0 'NameDB *'
|         `-RecordType 0x5640b9937d50 'NameDB'
|           `-CXXRecord 0x5640b9946a28 'NameDB'
|-TypedefDecl 0x5640b9941400 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b9941468 <line:130:5, col:16> col:16 iterator 'NameDB **'
| `-PointerType 0x5640b9940670 'NameDB **'
|   `-SubstTemplateTypeParmType 0x5640b993b700 'NameDB *' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-PointerType 0x5640b99395e0 'NameDB *'
|       `-RecordType 0x5640b9937d50 'NameDB'
|         `-CXXRecord 0x5640b9946a28 'NameDB'
|-TypedefDecl 0x5640b99414d0 <line:131:5, col:22> col:22 const_iterator 'NameDB *const *'
| `-PointerType 0x5640b9940730 'NameDB *const *'
|   `-QualType 0x5640b993b701 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x5640b993b700 'NameDB *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b99395e0 'NameDB *'
|         `-RecordType 0x5640b9937d50 'NameDB'
|           `-CXXRecord 0x5640b9946a28 'NameDB'
|-EnumDecl 0x5640b9941528 <line:134:5> col:5
| `-EnumConstantDecl 0x5640b9941620 <col:12, col:40> col:12 RESERVE_GROW 'Vector<NameDB *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5640b9941600 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5640b95e99e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5640b95e99c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5640b95e99a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5640b99416a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5640b9941938 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9941760 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9941800 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXConstructorDecl 0x5640b9941bf8 <line:139:5, col:37> col:12 Vector 'void (const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x5640b9941ae0 <col:19, col:36> col:36 x 'const Vector<NameDB *> &'
|-CXXConstructorDecl 0x5640b9941eb8 <line:141:5, col:32> col:12 Vector 'void (Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x5640b9941da0 <col:19, col:31> col:31 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x5640b9942200 <line:144:5, col:51> col:23 operator= 'Vector<NameDB *> &(const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x5640b99420e0 <col:33, col:50> col:50 x 'const Vector<NameDB *> &'
|-CXXMethodDecl 0x5640b9942510 <line:146:5, col:46> col:23 operator= 'Vector<NameDB *> &(Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x5640b99423f0 <col:33, col:45> col:45 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x5640b9942800 <line:148:5, col:70> col:23 assign 'Vector<NameDB *> &(Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9942648 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b99426c0 <col:43, col:69> col:63 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x5640b9942958 <line:150:5, col:55> col:49 begin 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x5640b9942a38 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9942a90 <col:30> Inherited
|-CXXMethodDecl 0x5640b9942ad8 <line:151:5, col:53> col:49 end 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x5640b9942b88 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9942be0 <col:30> Inherited
|-CXXMethodDecl 0x5640b9942ca8 <line:152:5, col:63> col:55 begin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x5640b9942d58 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9942db0 <col:30> Inherited
|-CXXMethodDecl 0x5640b9942df8 <line:153:5, col:61> col:55 end 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x5640b9942ea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9942f00 <col:30> Inherited
|-CXXMethodDecl 0x5640b9942f48 <line:154:5, col:64> col:55 cbegin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x5640b9942ff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9943050 <col:30> Inherited
|-CXXMethodDecl 0x5640b9943098 <line:155:5, col:62> col:55 cend 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x5640b9943148 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99431c0 <col:30> Inherited
|-CXXMethodDecl 0x5640b99431e8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b9943298 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b9943348 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5640b9943508 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99433f8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9943470 <col:37, col:63> col:57 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x5640b9943658 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5640b99435c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9943808 <line:163:5, col:65> col:43 operator[] 'NameDB *&(Vector::size_type)'
| |-ParmVarDecl 0x5640b9943710 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b99438c0 <col:20>
| `-OptimizeNoneAttr 0x5640b9943918 <col:30>
|-CXXMethodDecl 0x5640b9943a38 <line:164:5, col:73> col:49 operator[] 'NameDB *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5640b9943940 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b9943af0 <col:20>
| `-OptimizeNoneAttr 0x5640b9943b48 <col:30>
|-CXXMethodDecl 0x5640b9943c00 <line:165:5, col:29> col:15 at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9943b70 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9943d48 <line:166:5, col:37> col:21 at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b9943cb8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9943e78 <line:167:5, col:21> col:15 front 'NameDB *&()' inline
|-CXXMethodDecl 0x5640b9943fa8 <line:168:5, col:29> col:21 front 'NameDB *const &() const' inline
|-CXXMethodDecl 0x5640b9944078 <line:169:5, col:20> col:15 back 'NameDB *&()' inline
|-CXXMethodDecl 0x5640b9944148 <line:170:5, col:28> col:21 back 'NameDB *const &() const' inline
|-CXXMethodDecl 0x5640b9944288 <line:172:5, col:39> col:15 unchecked_at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b99441f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99443d0 <line:173:5, col:47> col:21 unchecked_at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b9944340 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9944518 <line:174:5, col:59> col:15 at_u 'NameDB *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5640b9944488 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b99445d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5640b99446d0 <line:175:5, col:71> col:21 at_u 'NameDB *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5640b9944640 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b9944788 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5640b9944848 <line:177:5, col:20> col:15 data 'NameDB **()' inline
|-CXXMethodDecl 0x5640b9944948 <line:178:5, col:28> col:21 data 'NameDB *const *() const' inline
|-CXXMethodDecl 0x5640b9944ac8 <line:180:5, col:48> col:17 push_back 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b9944a08 <col:27, col:47> col:47 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-FunctionTemplateDecl 0x5640b9945288 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5640b9944b80 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<NameDB *>':'fast_argument<NameDB *, false>'
| `-CXXMethodDecl 0x5640b99451e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (NameDB *&&)' inline
|   `-ParmVarDecl 0x5640b99450e8 <col:58, col:62> col:62 v 'NameDB *&&'
|-CXXMethodDecl 0x5640b9945368 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b99454b8 <line:186:5, col:49> col:17 push_front 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b9945428 <col:28, col:48> col:48 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x5640b9945570 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5640b99457b8 <line:189:5, col:62> col:21 insert 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9945630 <col:28, col:37> col:37 it 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x5640b99456a8 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x5640b9945978 <line:190:5, col:38> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator)' inline
| `-ParmVarDecl 0x5640b9945888 <col:27, col:36> col:36 it 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x5640b9945bc8 <line:191:5, col:49> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::iterator)' inline
| |-ParmVarDecl 0x5640b9945a40 <col:27, col:36> col:36 a 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x5640b9945ab8 <col:39, col:48> col:48 b 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x5640b9945c88 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b9945ee8 <line:195:5, col:34> col:17 swap 'void (Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x5640b9945df0 <col:22, col:33> col:33 x 'Vector<NameDB *> &'
`-CXXDestructorDecl 0x5640b9945fb8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5640b9945fb8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9937e00 <../dummy_inc/click/nameinfo.hh:11:1, line:243:1> line:11:7 referenced class NameInfo definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5640b9937f18 <col:1, col:7> col:7 implicit referenced class NameInfo
|-AccessSpecDecl 0x5640b9937fa8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x5640b9938030 <line:16:5, col:14> col:5 NameInfo 'void ()'
|-CXXDestructorDecl 0x5640b9938120 <line:23:5, col:15> col:5 ~NameInfo 'void ()' noexcept-unevaluated 0x5640b9938120
|-CXXMethodDecl 0x5640b9938220 <line:29:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x5640b99382e0 <line:35:5, col:32> col:17 static_cleanup 'void ()' static
|-EnumDecl 0x5640b9938380 <line:38:5, line:63:5> line:38:10 DBType
| |-EnumConstantDecl 0x5640b9938480 <line:39:2, col:11> col:2 T_NONE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b99391c0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938460 <col:11> 'int' Int: 0
| |     `-IntegerLiteral 0x5640b9938440 <col:11> 'int' 0
| |-EnumConstantDecl 0x5640b9938510 <line:40:2, col:19> col:2 T_SCHEDULEINFO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b99391d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b99384f0 <col:19> 'int' Int: 1
| |     `-IntegerLiteral 0x5640b99384d0 <col:19> 'int' 1
| |-EnumConstantDecl 0x5640b99385a0 <line:41:2, col:17> col:2 T_ANNOTATION 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b99391f0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938580 <col:17> 'int' Int: 2
| |     `-IntegerLiteral 0x5640b9938560 <col:17> 'int' 2
| |-EnumConstantDecl 0x5640b9938630 <line:42:2, col:18> col:2 T_SCRIPT_INSN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939208 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938610 <col:18> 'int' Int: 3
| |     `-IntegerLiteral 0x5640b99385f0 <col:18> 'int' 3
| |-EnumConstantDecl 0x5640b99386c0 <line:43:2, col:12> col:2 T_SIGNO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939220 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b99386a0 <col:12> 'int' Int: 4
| |     `-IntegerLiteral 0x5640b9938680 <col:12> 'int' 4
| |-EnumConstantDecl 0x5640b9938750 <line:44:2, col:15> col:2 T_SPINLOCK 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939238 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938730 <col:15> 'int' Int: 5
| |     `-IntegerLiteral 0x5640b9938710 <col:15> 'int' 5
| |-EnumConstantDecl 0x5640b99387e0 <line:45:2, col:20> col:2 T_ETHERNET_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939250 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b99387c0 <col:20> 'int' Int: 16777217
| |     `-IntegerLiteral 0x5640b99387a0 <col:20> 'int' 16777217
| |-EnumConstantDecl 0x5640b9938870 <line:46:2, col:14> col:2 T_IP_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939268 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938850 <col:14> 'int' Int: 67108865
| |     `-IntegerLiteral 0x5640b9938830 <col:14> 'int' 67108865
| |-EnumConstantDecl 0x5640b9938900 <line:47:2, col:16> col:2 T_IP_PREFIX 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939280 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b99388e0 <col:16> 'int' Int: 67108866
| |     `-IntegerLiteral 0x5640b99388c0 <col:16> 'int' 67108866
| |-EnumConstantDecl 0x5640b9938990 <line:48:2, col:15> col:2 T_IP_PROTO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939298 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938970 <col:15> 'int' Int: 67108867
| |     `-IntegerLiteral 0x5640b9938950 <col:15> 'int' 67108867
| |-EnumConstantDecl 0x5640b9938a20 <line:49:2, col:20> col:2 T_IPFILTER_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b99392b0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938a00 <col:20> 'int' Int: 67108868
| |     `-IntegerLiteral 0x5640b99389e0 <col:20> 'int' 67108868
| |-EnumConstantDecl 0x5640b9938ab0 <line:50:2, col:14> col:2 T_TCP_OPT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b99392c8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938a90 <col:14> 'int' Int: 67108869
| |     `-IntegerLiteral 0x5640b9938a70 <col:14> 'int' 67108869
| |-EnumConstantDecl 0x5640b9938b40 <line:51:2, col:25> col:2 T_IPREWRITER_PATTERN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b99392e0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938b20 <col:25> 'int' Int: 67108870
| |     `-IntegerLiteral 0x5640b9938b00 <col:25> 'int' 67108870
| |-EnumConstantDecl 0x5640b9938bd0 <line:52:2, col:16> col:2 T_ICMP_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b99392f8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938bb0 <col:16> 'int' Int: 67174400
| |     `-IntegerLiteral 0x5640b9938b90 <col:16> 'int' 67174400
| |-EnumConstantDecl 0x5640b9938c60 <line:53:2, col:16> col:2 T_ICMP_CODE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939310 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938c40 <col:16> 'int' Int: 67174656
| |     `-IntegerLiteral 0x5640b9938c20 <col:16> 'int' 67174656
| |-EnumConstantDecl 0x5640b9938cf0 <line:54:2, col:14> col:2 T_IP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939328 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938cd0 <col:14> 'int' Int: 67239936
| |     `-IntegerLiteral 0x5640b9938cb0 <col:14> 'int' 67239936
| |-EnumConstantDecl 0x5640b9938d80 <line:55:2, col:15> col:2 T_TCP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939340 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938d60 <col:15> 'int' Int: 67239942
| |     `-IntegerLiteral 0x5640b9938d40 <col:15> 'int' 67239942
| |-EnumConstantDecl 0x5640b9938e10 <line:56:2, col:15> col:2 T_UDP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939358 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938df0 <col:15> 'int' Int: 67239953
| |     `-IntegerLiteral 0x5640b9938dd0 <col:15> 'int' 67239953
| |-EnumConstantDecl 0x5640b9938ea0 <line:57:2, col:19> col:2 T_IP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939370 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938e80 <col:19> 'int' Int: 67305472
| |     `-IntegerLiteral 0x5640b9938e60 <col:19> 'int' 67305472
| |-EnumConstantDecl 0x5640b9938f30 <line:58:2, col:21> col:2 T_ICMP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b9939388 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938f10 <col:21> 'int' Int: 67305473
| |     `-IntegerLiteral 0x5640b9938ef0 <col:21> 'int' 67305473
| |-EnumConstantDecl 0x5640b9938fc0 <line:59:2, col:20> col:2 T_TCP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b99393a0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9938fa0 <col:20> 'int' Int: 67305478
| |     `-IntegerLiteral 0x5640b9938f80 <col:20> 'int' 67305478
| |-EnumConstantDecl 0x5640b9939050 <line:60:2, col:20> col:2 T_UDP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b99393b8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9939030 <col:20> 'int' Int: 67305489
| |     `-IntegerLiteral 0x5640b9939010 <col:20> 'int' 67305489
| |-EnumConstantDecl 0x5640b99390e0 <line:61:2, col:15> col:2 T_IP6_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x5640b99393d0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b99390c0 <col:15> 'int' Int: 100663297
| |     `-IntegerLiteral 0x5640b99390a0 <col:15> 'int' 100663297
| `-EnumConstantDecl 0x5640b9939170 <line:62:2, col:17> col:2 T_IP6_PREFIX 'NameInfo::DBType'
|   `-ImplicitCastExpr 0x5640b99393e8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b9939150 <col:17> 'int' Int: 100663298
|       `-IntegerLiteral 0x5640b9939130 <col:17> 'int' 100663298
|-CXXMethodDecl 0x5640b99396e8 <line:85:5, line:86:35> line:85:20 used getdb 'NameDB *(uint32_t, const Element *, size_t, bool)' static
| |-ParmVarDecl 0x5640b9939410 <col:26, col:35> col:35 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b9939488 <col:41, col:56> col:56 context 'const Element *'
| |-ParmVarDecl 0x5640b9939500 <line:86:5, col:12> col:12 value_size 'size_t':'unsigned long'
| `-ParmVarDecl 0x5640b9939578 <col:24, col:29> col:29 create 'bool'
|-CXXMethodDecl 0x5640b9939908 <line:104:5, col:61> col:17 installdb 'void (NameDB *, const Element *)' static
| |-ParmVarDecl 0x5640b99397b8 <col:27, col:35> col:35 db 'NameDB *'
| `-ParmVarDecl 0x5640b9939830 <col:39, col:54> col:54 context 'const Element *'
|-CXXMethodDecl 0x5640b9939a88 <line:112:5, col:39> col:17 used uninstalldb 'void (NameDB *)' static
| `-ParmVarDecl 0x5640b99399c8 <col:29, col:37> col:37 db 'NameDB *'
|-CXXMethodDecl 0x5640b9939e78 <line:127:5, line:128:65> line:127:17 used query 'bool (uint32_t, const Element *, const String &, void *, size_t)' static
| |-ParmVarDecl 0x5640b9939b40 <col:23, col:32> col:32 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b9939bb8 <col:38, col:53> col:53 context 'const Element *'
| |-ParmVarDecl 0x5640b9939c30 <line:128:9, col:23> col:23 name 'const String &'
| |-ParmVarDecl 0x5640b9939cb0 <col:29, col:35> col:35 value_store 'void *'
| `-ParmVarDecl 0x5640b9939d28 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x5640b993a1f8 <line:147:5, line:148:46> line:147:17 query_int 'bool (uint32_t, const Element *, const String &, int32_t *)' static
| |-ParmVarDecl 0x5640b9939f50 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b9939fc8 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x5640b993a040 <line:148:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x5640b993a0b8 <col:26, col:35> col:35 value_store 'int32_t *'
|-CXXMethodDecl 0x5640b993a578 <line:151:5, line:152:47> line:151:17 query_int 'bool (uint32_t, const Element *, const String &, uint32_t *)' static
| |-ParmVarDecl 0x5640b993a2c8 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b993a340 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x5640b993a3b8 <line:152:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x5640b993a430 <col:26, col:36> col:36 value_store 'uint32_t *'
|-CXXMethodDecl 0x5640b993a8f8 <line:167:5, line:168:43> line:167:19 used revquery 'String (uint32_t, const Element *, const void *, size_t)' static
| |-ParmVarDecl 0x5640b993a648 <col:28, col:37> col:37 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b993a6c0 <col:43, col:58> col:58 context 'const Element *'
| |-ParmVarDecl 0x5640b993a740 <line:168:7, col:19> col:19 value 'const void *'
| `-ParmVarDecl 0x5640b993a7b8 <col:26, col:33> col:33 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x5640b993abd8 <line:182:5, line:183:24> line:182:26 revquery_int 'String (uint32_t, const Element *, int32_t)' static inline
| |-ParmVarDecl 0x5640b993a9c8 <col:39, col:48> col:48 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b993aa40 <col:54, col:69> col:69 context 'const Element *'
| `-ParmVarDecl 0x5640b993aab8 <line:183:11, col:19> col:19 value 'int32_t':'int'
|-CXXMethodDecl 0x5640b993afd8 <line:202:5, line:203:66> line:202:24 define 'bool (uint32_t, const Element *, const String &, const void *, size_t)' static inline
| |-ParmVarDecl 0x5640b993aca0 <col:31, col:40> col:40 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b993ad18 <col:46, col:61> col:61 context 'const Element *'
| |-ParmVarDecl 0x5640b993ad90 <line:203:10, col:24> col:24 name 'const String &'
| |-ParmVarDecl 0x5640b993ae10 <col:30, col:42> col:42 value 'const void *'
| `-ParmVarDecl 0x5640b993ae88 <col:49, col:56> col:56 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x5640b993b368 <line:220:5, line:221:40> line:220:24 define_int 'bool (uint32_t, const Element *, const String &, int32_t)' static inline
| |-ParmVarDecl 0x5640b993b0b0 <col:35, col:44> col:44 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b993b128 <col:50, col:65> col:65 context 'const Element *'
| |-ParmVarDecl 0x5640b993b1b0 <line:221:7, col:21> col:21 name 'const String &'
| `-ParmVarDecl 0x5640b993b228 <col:27, col:35> col:35 value 'int32_t':'int'
|-AccessSpecDecl 0x5640b993b428 <line:230:3, col:10> col:3 private
|-FieldDecl 0x5640b99460a0 <line:232:5, col:22> col:22 _namedb_roots 'Vector<NameDB *>':'Vector<NameDB *>'
|-FieldDecl 0x5640b99461a0 <line:233:5, col:22> col:22 _namedbs 'Vector<NameDB *>':'Vector<NameDB *>'
|-CXXMethodDecl 0x5640b9946238 <line:235:5, col:73> col:20 install_dynamic_sentinel 'NameDB *()' inline
| `-CompoundStmt 0x5640b9946a10 <col:47, col:73>
|   `-ReturnStmt 0x5640b9946a00 <col:49, col:67>
|     `-CStyleCastExpr 0x5640b99469d8 <col:56, col:67> 'NameDB *' <BitCast>
|       `-CXXThisExpr 0x5640b99469b8 <col:67> 'NameInfo *' this
|-CXXMethodDecl 0x5640b9946598 <line:236:5, col:87> col:13 namedb 'NameDB *(uint32_t, size_t, const String &, NameDB *)'
| |-ParmVarDecl 0x5640b99462e8 <col:20, col:29> col:29 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b9946360 <col:35, col:42> col:42 size 'size_t':'unsigned long'
| |-ParmVarDecl 0x5640b99463d8 <col:48, col:62> col:62 prefix 'const String &'
| `-ParmVarDecl 0x5640b9946450 <col:70, col:78> col:78 installer 'NameDB *'
|-CXXConstructorDecl 0x5640b9946688 <line:11:7> col:7 implicit NameInfo 'void (const NameInfo &)' inline default noexcept-unevaluated 0x5640b9946688
| `-ParmVarDecl 0x5640b9946798 <col:7> col:7 'const NameInfo &'
`-CXXMethodDecl 0x5640b9946838 <col:7> col:7 implicit operator= 'NameInfo &(const NameInfo &)' inline default noexcept-unevaluated 0x5640b9946838
  `-ParmVarDecl 0x5640b9946948 <col:7> col:7 'const NameInfo &'

Layout: <CGRecordLayout
  LLVMType:%class.NameInfo = type { %class.Vector.13, %class.Vector.13 }
  NonVirtualBaseLLVMType:%class.NameInfo = type { %class.Vector.13, %class.Vector.13 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b99e8610 prev 0x5640b99af000 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5640b99e8708 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x5640b99e8798 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x5640b99e8808 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5640b99e88c8 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x5640b99e8988 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x5640b99e8a48 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x5640b99e8b08 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x5640b99e8ba8 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x5640b99e8d08 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x5640b99e8ce8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x5640b99e8cc8 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x5640b99e8c90 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x5640b99e8c70 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x5640b99e8ca8 <col:42> 'int' 1
|-CXXMethodDecl 0x5640b99e8da8 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x5640b99e8f18 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x5640b99e8e58 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x5640b99e9060 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x5640b99e8fd0 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x5640b99e9128 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x5640b99e9450 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x5640b99e9518 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x5640b99e9698 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x5640b99e95d0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x5640b99e9760 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x5640b99e9968 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x5640b99e9810 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x5640b99e9890 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x5640b99e9ac0 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x5640b99e9a30 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x5640b99e9c10 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x5640b99e9b80 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x5640b99e9d60 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x5640b99e9cd0 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x5640b99e9eb0 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x5640b99e9e20 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x5640b99ea080 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x5640b99e9f70 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x5640b99e9fe8 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x5640b99ea288 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x5640b99ea140 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x5640b99ea1b8 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x5640b9a2caa0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x5640b9a2ca80 <col:60> 'int' 0
|-CXXMethodDecl 0x5640b99ea518 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x5640b99ea348 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x5640b99ea3c0 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x5640b99ea438 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x5640b9a2cad8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x5640b9a2cab8 <col:76> 'int' 0
|-CXXMethodDecl 0x5640b99ea7b8 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x5640b99ea5e0 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x5640b99ea658 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x5640b99ea6d0 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x5640b9a2cb10 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x5640b9a2caf0 <col:84> 'int' 0
|-CXXMethodDecl 0x5640b99eab10 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5640b99ea880 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x5640b99ea8f8 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x5640b99ea978 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x5640b99eaa18 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5640b99eadc0 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5640b99eabe0 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x5640b99eac60 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x5640b99eacd8 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5640b99eb028 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5640b99eae88 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x5640b99eaf08 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x5640b99eaf80 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5640b99eb4e0 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x5640b99eb0f0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x5640b99eb170 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x5640b99eb218 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x5640b99eb390 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x5640b99eb5a0 <col:115> "" ""
|-CXXMethodDecl 0x5640b99eb960 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x5640b99eb620 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x5640b99eb6a0 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x5640b99eb718 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x5640b99eb860 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x5640b99eba20 <col:113> "" ""
|-CXXMethodDecl 0x5640b99ebb70 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x5640b99ebaa8 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x5640b99ebd40 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x5640b99ebc30 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x5640b99ebca8 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x5640b99ebf48 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x5640b99ebe00 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x5640b99ebe78 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x5640b99ec348 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x5640b99ec008 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x5640b99ec080 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x5640b99ec0f8 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5640b99ec178 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x5640b99ec1f0 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5640b9a2cb48 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5640b9a2cb28 <col:137> 'int' 0
|-CXXMethodDecl 0x5640b99ec758 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x5640b99ec420 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x5640b99ec498 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x5640b99ec510 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5640b99ec590 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x5640b99ec608 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5640b9a2cb80 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5640b9a2cb60 <col:139> 'int' 0
|-CXXMethodDecl 0x5640b99ecc08 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x5640b99ec830 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x5640b99ec8a8 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x5640b99ec920 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b99ec998 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5640b99eca18 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x5640b9a2cbb8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x5640b9a2cb98 <col:133> 'int' 0
| `-ParmVarDecl 0x5640b99eca98 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x5640b9a2cbf0 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x5640b9a2cbd0 <col:160> 'int' 0
|-CXXMethodDecl 0x5640b99ecfd0 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5640b99ecce8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x5640b99ecd60 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x5640b99ecdd8 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5640b99ece80 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5640b9a2cc28 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5640b9a2cc08 <col:116> 'int' 0
|-EnumDecl 0x5640b99ed090 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x5640b99ed190 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x5640b99ed1e0 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b99ed170 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x5640b99ed150 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x5640b99ed360 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x5640b99ed208 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x5640b99ed280 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x5640b99ed578 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x5640b99ed420 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x5640b99ed4a0 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x5640b99ed8a8 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x5640b99ed638 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x5640b99ed790 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x5640b99eda30 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x5640b99ed968 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x5640b99edbb0 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x5640b99edae8 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x5640b99eddc0 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x5640b99edc68 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x5640b99edce8 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x5640b99edf48 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x5640b99ede80 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x5640b99ee068 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x5640b99ee158 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x5640b99ee2c8 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x5640b99ee208 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x5640b99ee450 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x5640b99ee380 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x5640b99ee658 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x5640b99ee508 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x5640b99ee588 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x5640b99ee758 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x5640b99ee848 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x5640b99ee908 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x5640b99eeb08 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5640b99ee9b8 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x5640b99eea30 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5640b9a2ccd8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5640b9a2ccc0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x5640b9a2cca8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5640b9a2cc88 <col:58, col:65> 'String' (CXXTemporary 0x5640b9a2cc88)
|           `-CXXTemporaryObjectExpr 0x5640b9a2cc50 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x5640b99eecd8 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5640b99eebc8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x5640b99eec40 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5640b9a2cd88 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5640b9a2cd70 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x5640b9a2cd58 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5640b9a2cd38 <col:71, col:78> 'String' (CXXTemporary 0x5640b9a2cd38)
|           `-CXXTemporaryObjectExpr 0x5640b9a2cd00 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x5640b99eeea8 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5640b99eed98 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x5640b99eee10 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5640b9a2ce38 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5640b9a2ce20 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x5640b9a2ce08 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5640b9a2cde8 <col:71, col:78> 'String' (CXXTemporary 0x5640b9a2cde8)
|           `-CXXTemporaryObjectExpr 0x5640b9a2cdb0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x5640b99ef078 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5640b99eef68 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x5640b99eefe0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5640b9a2cee8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5640b9a2ced0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x5640b9a2ceb8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5640b9a2ce98 <col:70, col:77> 'String' (CXXTemporary 0x5640b9a2ce98)
|           `-CXXTemporaryObjectExpr 0x5640b9a2ce60 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x5640b99ef1f8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x5640b99ef138 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x5640b99ef418 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x5640b99ef2b0 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x5640b99ef328 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x5640b99ef518 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x5640b99ef518
|-CXXMethodDecl 0x5640b99ef620 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x5640b99ef6e0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5640b99ef7a0 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x5640b99ef860 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x5640b99efa58 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x5640b99ef910 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x5640b99ef988 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x5640b99efe10 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x5640b99efb18 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x5640b99efb90 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x5640b99efc08 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x5640b99efc80 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x5640b99efd00 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x5640b99f0170 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x5640b99efef0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x5640b99eff70 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x5640b99efff0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x5640b99f0070 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x5640b99f0250 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x5640b99f0390 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x5640b99f0300 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x5640b99f04e0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5640b99f0448 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5640b99f06e8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x5640b99f0598 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x5640b99f0610 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5640b99f0838 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x5640b99f07a8 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5640b99f0980 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x5640b99f08f0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x5640b99f0bc0 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x5640b99f0a40 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5640b99f0ae8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x5640b99f0d48 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x5640b99f0c80 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x5640b99f0df0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5640b99f0f08 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x5640b99f0fb0 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x5640b99f1018 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x5640b99f10d0 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x5640b9a2cf10 <col:16, line:150:9>
| |-CXXConstructorDecl 0x5640b99f12a8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x5640b99f1190 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x5640b99f1210 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x5640b99f0fb0 'idx' 'int'
| | | `-ImplicitCastExpr 0x5640b9a2cf60 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x5640b9a2cf20 <col:19> 'int' lvalue ParmVar 0x5640b99f1190 'i' 'int'
| | |-CXXCtorInitializer Field 0x5640b99f1018 'port' 'int'
| | | `-ImplicitCastExpr 0x5640b9a2cfe0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x5640b9a2cfa0 <col:28> 'int' lvalue ParmVar 0x5640b99f1210 'p' 'int'
| | `-CompoundStmt 0x5640b9a2d030 <col:31, line:153:9>
| |-CXXMethodDecl 0x5640b99f1488 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5640b99f1398 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x5640b9a2d230 <col:46, line:157:9>
| |   `-ReturnStmt 0x5640b9a2d220 <line:156:13, col:46>
| |     `-BinaryOperator 0x5640b9a2d200 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x5640b9a2d100 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x5640b9a2d0d0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5640b9a2d050 <col:20> 'const int' lvalue ->idx 0x5640b99f0fb0
| |       | |   `-CXXThisExpr 0x5640b9a2d040 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5640b9a2d0e8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5640b9a2d0a0 <col:27, col:29> 'const int' lvalue .idx 0x5640b99f0fb0
| |       |     `-DeclRefExpr 0x5640b9a2d080 <col:27> 'const Router::Port' lvalue ParmVar 0x5640b99f1398 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x5640b9a2d1e0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x5640b9a2d1b0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x5640b9a2d130 <col:36> 'const int' lvalue ->port 0x5640b99f1018
| |         |   `-CXXThisExpr 0x5640b9a2d120 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x5640b9a2d1c8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x5640b9a2d180 <col:44, col:46> 'const int' lvalue .port 0x5640b99f1018
| |             `-DeclRefExpr 0x5640b9a2d160 <col:44> 'const Router::Port' lvalue ParmVar 0x5640b99f1398 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5640b99f15d0 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5640b99f1540 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x5640b9a2d438 <col:46, line:160:9>
| |   `-ReturnStmt 0x5640b9a2d428 <line:159:13, col:46>
| |     `-BinaryOperator 0x5640b9a2d408 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x5640b9a2d308 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x5640b9a2d2d8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5640b9a2d258 <col:20> 'const int' lvalue ->idx 0x5640b99f0fb0
| |       | |   `-CXXThisExpr 0x5640b9a2d248 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5640b9a2d2f0 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5640b9a2d2a8 <col:27, col:29> 'const int' lvalue .idx 0x5640b99f0fb0
| |       |     `-DeclRefExpr 0x5640b9a2d288 <col:27> 'const Router::Port' lvalue ParmVar 0x5640b99f1540 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x5640b9a2d3e8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x5640b9a2d3b8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x5640b9a2d338 <col:36> 'const int' lvalue ->port 0x5640b99f1018
| |         |   `-CXXThisExpr 0x5640b9a2d328 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x5640b9a2d3d0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x5640b9a2d388 <col:44, col:46> 'const int' lvalue .port 0x5640b99f1018
| |             `-DeclRefExpr 0x5640b9a2d368 <col:44> 'const Router::Port' lvalue ParmVar 0x5640b99f1540 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5640b99f1718 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5640b99f1688 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x5640b9a2d760 <col:45, line:163:9>
| |   `-ReturnStmt 0x5640b9a2d750 <line:162:13, col:65>
| |     `-BinaryOperator 0x5640b9a2d730 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x5640b9a2d510 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x5640b9a2d4e0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5640b9a2d460 <col:20> 'const int' lvalue ->idx 0x5640b99f0fb0
| |       | |   `-CXXThisExpr 0x5640b9a2d450 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5640b9a2d4f8 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5640b9a2d4b0 <col:26, col:28> 'const int' lvalue .idx 0x5640b99f0fb0
| |       |     `-DeclRefExpr 0x5640b9a2d490 <col:26> 'const Router::Port' lvalue ParmVar 0x5640b99f1688 'x' 'const Router::Port &'
| |       `-ParenExpr 0x5640b9a2d710 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x5640b9a2d6f0 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x5640b9a2d5f0 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x5640b9a2d5c0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x5640b9a2d540 <col:36> 'const int' lvalue ->idx 0x5640b99f0fb0
| |           | |   `-CXXThisExpr 0x5640b9a2d530 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x5640b9a2d5d8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x5640b9a2d590 <col:43, col:45> 'const int' lvalue .idx 0x5640b99f0fb0
| |           |     `-DeclRefExpr 0x5640b9a2d570 <col:43> 'const Router::Port' lvalue ParmVar 0x5640b99f1688 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x5640b9a2d6d0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x5640b9a2d6a0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x5640b9a2d620 <col:52> 'const int' lvalue ->port 0x5640b99f1018
| |             |   `-CXXThisExpr 0x5640b9a2d610 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x5640b9a2d6b8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x5640b9a2d670 <col:59, col:61> 'const int' lvalue .port 0x5640b99f1018
| |                 `-DeclRefExpr 0x5640b9a2d650 <col:59> 'const Router::Port' lvalue ParmVar 0x5640b99f1688 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5640b99f1860 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5640b99f17d0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x5640b9a2da88 <col:46, line:166:9>
| |   `-ReturnStmt 0x5640b9a2da78 <line:165:13, col:66>
| |     `-BinaryOperator 0x5640b9a2da58 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x5640b9a2d838 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x5640b9a2d808 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5640b9a2d788 <col:20> 'const int' lvalue ->idx 0x5640b99f0fb0
| |       | |   `-CXXThisExpr 0x5640b9a2d778 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5640b9a2d820 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5640b9a2d7d8 <col:26, col:28> 'const int' lvalue .idx 0x5640b99f0fb0
| |       |     `-DeclRefExpr 0x5640b9a2d7b8 <col:26> 'const Router::Port' lvalue ParmVar 0x5640b99f17d0 'x' 'const Router::Port &'
| |       `-ParenExpr 0x5640b9a2da38 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x5640b9a2da18 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x5640b9a2d918 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x5640b9a2d8e8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x5640b9a2d868 <col:36> 'const int' lvalue ->idx 0x5640b99f0fb0
| |           | |   `-CXXThisExpr 0x5640b9a2d858 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x5640b9a2d900 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x5640b9a2d8b8 <col:43, col:45> 'const int' lvalue .idx 0x5640b99f0fb0
| |           |     `-DeclRefExpr 0x5640b9a2d898 <col:43> 'const Router::Port' lvalue ParmVar 0x5640b99f17d0 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x5640b9a2d9f8 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x5640b9a2d9c8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x5640b9a2d948 <col:52> 'const int' lvalue ->port 0x5640b99f1018
| |             |   `-CXXThisExpr 0x5640b9a2d938 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x5640b9a2d9e0 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x5640b9a2d998 <col:60, col:62> 'const int' lvalue .port 0x5640b99f1018
| |                 `-DeclRefExpr 0x5640b9a2d978 <col:60> 'const Router::Port' lvalue ParmVar 0x5640b99f17d0 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x5640b9a2daa0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x5640b9a2daa0
| | `-ParmVarDecl 0x5640b9a2dbb8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x5640b9a2dc58 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x5640b9a2dc58
| | `-ParmVarDecl 0x5640b9a2dd68 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x5640b9a2de00 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5640b9a2e0d0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x5640b9a2e0d0
| | `-ParmVarDecl 0x5640b9a2e1d8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x5640b9a2e248 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x5640b9a2e358 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x5640b9a2e678 <col:12>
|     |-BinaryOperator 0x5640b9a2e518 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x5640b9a2e4d0 <col:12> 'int' lvalue ->idx 0x5640b99f0fb0
|     | | `-CXXThisExpr 0x5640b9a2e4c0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x5640b9a2e500 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x5640b9a2e490 <col:12> 'int' xvalue .idx 0x5640b99f0fb0
|     |     `-CXXStaticCastExpr 0x5640b9a2e460 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x5640b9a2e430 <col:12> 'Router::Port' lvalue ParmVar 0x5640b9a2e358 '' 'Router::Port &&'
|     |-BinaryOperator 0x5640b9a2e620 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x5640b9a2e5d8 <col:12> 'int' lvalue ->port 0x5640b99f1018
|     | | `-CXXThisExpr 0x5640b9a2e5c8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x5640b9a2e608 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x5640b9a2e598 <col:12> 'int' xvalue .port 0x5640b99f1018
|     |     `-CXXStaticCastExpr 0x5640b9a2e568 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x5640b9a2e538 <col:12> 'Router::Port' lvalue ParmVar 0x5640b9a2e358 '' 'Router::Port &&'
|     `-ReturnStmt 0x5640b9a2e668 <col:12>
|       `-UnaryOperator 0x5640b9a2e650 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5640b9a2e640 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x5640b99f1920 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5640b99f1a38 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x5640b99f1c28 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x5640b99f1ce0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x5640b99f1c28 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x5640b9a2ddd8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x5640b9a2df10 <col:22, line:173:9>
| |-CXXConstructorDecl 0x5640b99f2018 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x5640b99f1da0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x5640b99f1e20 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x5640b99f1ea0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x5640b99f1f20 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x5640b99f1c28 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x5640b9a2df20 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x5640b9a2e958 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x5640b9a2e748 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x5640b9a2e710 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x5640b9a2e6f8 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x5640b9a2e3e0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x5640b9a2e248 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x5640b9a2dff0 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x5640b9a2dfd8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x5640b9a2df88 <col:13> 'Router::Port [2]' lvalue ->p 0x5640b99f1c28
| |   |   | |   `-CXXThisExpr 0x5640b9a2df78 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x5640b9a2dfb8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x5640b9a2e3c8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x5640b9a2e090 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x5640b9a2e060 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x5640b9a2e020 <col:25> 'int' lvalue ParmVar 0x5640b99f1ea0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x5640b9a2e078 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x5640b9a2e040 <col:33> 'int' lvalue ParmVar 0x5640b99f1f20 'to_port' 'int'
| |   `-ExprWithCleanups 0x5640b9a2e940 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x5640b9a2e908 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x5640b9a2e8f0 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x5640b9a2e8d0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x5640b9a2e248 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x5640b9a2e7d8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x5640b9a2e7c0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x5640b9a2e770 <col:13> 'Router::Port [2]' lvalue ->p 0x5640b99f1c28
| |       | |   `-CXXThisExpr 0x5640b9a2e760 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x5640b9a2e7a0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x5640b9a2e8b8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x5640b9a2e878 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x5640b9a2e848 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x5640b9a2e808 <col:25> 'int' lvalue ParmVar 0x5640b99f1da0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x5640b9a2e860 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x5640b9a2e828 <col:35> 'int' lvalue ParmVar 0x5640b99f1e20 'from_port' 'int'
| |-CXXMethodDecl 0x5640b99f21e8 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x5640b99f20f8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x5640b9a2ef18 <col:45, line:182:9>
| |   |-ParenExpr 0x5640b9a2edf8 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x5640b9a2edc8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x5640b9a2ea98 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x5640b9a2ea68 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x5640b9a2e9d0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x5640b9a2e9b8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x5640b9a2e978 <col:34> 'int' lvalue ParmVar 0x5640b99f20f8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x5640b9a2e998 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x5640b9a2ea48 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x5640b9a2ea30 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x5640b9a2e9f0 <col:44> 'int' lvalue ParmVar 0x5640b99f20f8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x5640b9a2ea10 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x5640b9a2eaf8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x5640b9a2ead8 <col:59> 'int' 0
| |   |   `-CallExpr 0x5640b9a2ed28 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x5640b9a2ed10 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x5640b9a2ecf0 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x5640b9a2ed68 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x5640b9a2eb68 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x5640b9a2ed80 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x5640b9a2eb90 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x5640b9a2ed98 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x5640b9a2ebc8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x5640b9a2edb0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x5640b9a2ecd8 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x5640b9a2ecc0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x5640b9a2ec68 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x5640b9a2ef08 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x5640b9a2eee8 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x5640b9a2eeb8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x5640b9a2ee28 <col:20> 'Router::Port const[2]' lvalue ->p 0x5640b99f1c28
| |       |   `-CXXThisExpr 0x5640b9a2ee18 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x5640b9a2eed0 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x5640b9a2ee58 <col:22> 'int' lvalue ParmVar 0x5640b99f20f8 'i' 'int'
| |-CXXMethodDecl 0x5640b99f2398 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x5640b99f22a8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x5640b9a2f490 <col:33, line:186:9>
| |   |-ParenExpr 0x5640b9a2f3b0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x5640b9a2f380 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x5640b9a2f058 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x5640b9a2f028 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x5640b9a2ef90 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x5640b9a2ef78 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x5640b9a2ef38 <col:34> 'int' lvalue ParmVar 0x5640b99f22a8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x5640b9a2ef58 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x5640b9a2f008 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x5640b9a2eff0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x5640b9a2efb0 <col:44> 'int' lvalue ParmVar 0x5640b99f22a8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x5640b9a2efd0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x5640b9a2f0b8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x5640b9a2f098 <col:59> 'int' 0
| |   |   `-CallExpr 0x5640b9a2f2e0 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x5640b9a2f2c8 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x5640b9a2f2a8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x5640b9a2f320 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x5640b9a2f128 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x5640b9a2f338 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x5640b9a2f150 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x5640b9a2f350 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x5640b9a2f188 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x5640b9a2f368 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x5640b9a2f290 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x5640b9a2f278 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x5640b9a2f228 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x5640b9a2f480 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x5640b9a2f460 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x5640b9a2f430 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x5640b9a2f3e0 <col:20> 'Router::Port [2]' lvalue ->p 0x5640b99f1c28
| |       |   `-CXXThisExpr 0x5640b9a2f3d0 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x5640b9a2f448 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x5640b9a2f410 <col:22> 'int' lvalue ParmVar 0x5640b99f22a8 'i' 'int'
| |-CXXMethodDecl 0x5640b99f2538 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x5640b99f2478 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x5640b9a2f868 <col:52, line:190:9>
| |   `-ReturnStmt 0x5640b9a2f858 <line:189:13, col:51>
| |     `-BinaryOperator 0x5640b9a2f838 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x5640b9a2f650 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x5640b9a2f638 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x5640b9a2f5f0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5640b99f1488 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x5640b9a2f528 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x5640b9a2f510 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x5640b9a2f4c0 <col:20> 'Router::Port const[2]' lvalue ->p 0x5640b99f1c28
| |       | | |   `-CXXThisExpr 0x5640b9a2f4b0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x5640b9a2f4f0 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x5640b9a2f5d0 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x5640b9a2f5b8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x5640b9a2f568 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x5640b99f1c28
| |       |   |   `-DeclRefExpr 0x5640b9a2f548 <col:28> 'const Router::Connection' lvalue ParmVar 0x5640b99f2478 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x5640b9a2f598 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x5640b9a2f800 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x5640b9a2f7e8 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x5640b9a2f7c8 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5640b99f1488 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x5640b9a2f700 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x5640b9a2f6e8 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x5640b9a2f698 <col:38> 'Router::Port const[2]' lvalue ->p 0x5640b99f1c28
| |         | |   `-CXXThisExpr 0x5640b9a2f688 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x5640b9a2f6c8 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x5640b9a2f7a8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x5640b9a2f790 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x5640b9a2f740 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x5640b99f1c28
| |           |   `-DeclRefExpr 0x5640b9a2f720 <col:46> 'const Router::Connection' lvalue ParmVar 0x5640b99f2478 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x5640b9a2f770 <col:50> 'int' 1
| `-CXXMethodDecl 0x5640b99f2680 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x5640b99f25f0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x5640b9a2fe00 <col:51, line:193:9>
|     `-ReturnStmt 0x5640b9a2fdf0 <line:192:13, col:69>
|       `-BinaryOperator 0x5640b9a2fdd0 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x5640b9a2f9f8 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x5640b9a2f9e0 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x5640b9a2f9c0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5640b99f1718 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x5640b9a2f8f8 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x5640b9a2f8e0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x5640b9a2f890 <col:20> 'Router::Port const[2]' lvalue ->p 0x5640b99f1c28
|         | | |   `-CXXThisExpr 0x5640b9a2f880 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x5640b9a2f8c0 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x5640b9a2f9a0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x5640b9a2f988 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x5640b9a2f938 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x5640b99f1c28
|         |   |   `-DeclRefExpr 0x5640b9a2f918 <col:27> 'const Router::Connection' lvalue ParmVar 0x5640b99f25f0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x5640b9a2f968 <col:31> 'int' 0
|         `-ParenExpr 0x5640b9a2fdb0 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x5640b9a2fd90 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x5640b9a2fba8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x5640b9a2fb90 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x5640b9a2fb70 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5640b99f1488 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x5640b9a2faa8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x5640b9a2fa90 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x5640b9a2fa40 <col:38> 'Router::Port const[2]' lvalue ->p 0x5640b99f1c28
|             | | |   `-CXXThisExpr 0x5640b9a2fa30 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x5640b9a2fa70 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x5640b9a2fb50 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x5640b9a2fb38 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x5640b9a2fae8 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x5640b99f1c28
|             |   |   `-DeclRefExpr 0x5640b9a2fac8 <col:46> 'const Router::Connection' lvalue ParmVar 0x5640b99f25f0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x5640b9a2fb18 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x5640b9a2fd58 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x5640b9a2fd40 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5640b9a2fd20 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5640b99f1718 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x5640b9a2fc58 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x5640b9a2fc40 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x5640b9a2fbf0 <col:56> 'Router::Port const[2]' lvalue ->p 0x5640b99f1c28
|               | |   `-CXXThisExpr 0x5640b9a2fbe0 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x5640b9a2fc20 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x5640b9a2fd00 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x5640b9a2fce8 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x5640b9a2fc98 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x5640b99f1c28
|                 |   `-DeclRefExpr 0x5640b9a2fc78 <col:63> 'const Router::Connection' lvalue ParmVar 0x5640b99f25f0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x5640b9a2fcc8 <col:67> 'int' 1
|-AccessSpecDecl 0x5640b99f2740 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x5640b99f2768 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x5640b99f2820 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x5640b99f28e0 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5640b99f2930 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5640b99f2980 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5640b99f29d0 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x5640b99f2a20 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x5640b99f2a70 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x5640b99f2b88 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5640b99f2b68 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x5640b99f2b50 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x5640b99f2b30 <col:25> 'int' 2
| |-EnumConstantDecl 0x5640b99f2c30 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5640b99f2c10 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x5640b99f2bf8 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x5640b99f2bd8 <col:48> 'int' 1
| |-EnumConstantDecl 0x5640b99f2cc0 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5640b99f2ca0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x5640b99f2c80 <col:71> 'int' 0
| |-EnumConstantDecl 0x5640b99f2d50 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5640b99f2d30 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x5640b99f2d10 <col:30> 'int' 1
| `-EnumConstantDecl 0x5640b99f2de0 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x5640b99f2dc0 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x5640b99f2da0 <col:50> 'int' 2
|-FieldDecl 0x5640b99f2e40 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x5640b99f2ea0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x5640b99f2f08 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x5640b99f2fa8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x5640b99f2f88 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x5640b99f2f58 <col:30> 'int' 1
|-FieldDecl 0x5640b99f3048 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x5640b99f3028 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x5640b99f2ff8 <col:33> 'int' 1
|-FieldDecl 0x5640b99f30e8 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x5640b99f30c8 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x5640b99f3098 <col:32> 'int' 1
|-FieldDecl 0x5640b99f3150 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x5640b99f31b0 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x5640b99fc4f0 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x5640b99fc5f0 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5640b99fc6f0 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5640b9a051e0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x5640b9a052f0 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x5640b9a05340 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x5640b9a05458 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x5640b9a054f8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x5640b9a05558 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x5640b9a055f0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5640b9a055f0
| | `-ParmVarDecl 0x5640b9a05708 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x5640b9a057a8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5640b9a057a8
| | `-ParmVarDecl 0x5640b9a058b8 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x5640b9a05958 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5640b9a05958
| | `-ParmVarDecl 0x5640b9a05a68 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x5640b9a05ad8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5640b9a05ad8
| | `-ParmVarDecl 0x5640b9a05be8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x5640b9a05c70 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x5640b9a05c70
|-FieldDecl 0x5640b9a12580 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x5640b9a125e0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x5640b9a126f0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x5640b9a12a48 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x5640b9a12b50 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5640b9a1aca0 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x5640b9a1adb0 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x5640b9a1aeb0 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5640b9a1afc0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5640b9a1b0d0 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5640b9a1b1e0 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5640b9a1b2f0 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x5640b9a1b340 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x5640b9a1b440 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x5640b9a1b490 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b9a1b420 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x5640b9a1b400 <col:29> 'int' 256
|-FieldDecl 0x5640b9a1b4f0 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x5640b9a1b558 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x5640b9a1b5c0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x5640b9a1b6c0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5640b9a243c0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x5640b9a24420 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x5640b9a24480 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x5640b9a244d0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x5640b9a245e8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x5640b9a24678 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x5640b9a24780 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x5640b9a247d0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x5640b9a24760 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x5640b9a24740 <col:27> 'int' 4096
| |-FieldDecl 0x5640b9a247f8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x5640b9a24860 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x5640b9a24a58 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x5640b9a24ae8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x5640b9a24ca8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x5640b9a24b48 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x5640b9a24bc0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x5640b9a247f8 'name' 'String'
| | | `-CXXConstructExpr 0x5640b9a2fe58 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x5640b9a2fe18 <col:20> 'const String' lvalue ParmVar 0x5640b9a24b48 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x5640b9a24860 'nsig' 'int'
| | | `-IntegerLiteral 0x5640b9a2feb0 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x5640b9a24a58 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x5640b9a2ff98 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x5640b9a24ae8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x5640b9a2ff58 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x5640b9a2ff18 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x5640b9a24bc0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x5640b9a30228 <col:42, line:289:9>
| |   `-CallExpr 0x5640b9a301d8 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x5640b9a301c0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x5640b9a301a0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x5640b954ad28 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x5640b9a30210 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x5640b9a300e8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x5640b9a300c8 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x5640b9a300b0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x5640b9a30060 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x5640b9a24a58
| |     |     |   `-CXXThisExpr 0x5640b9a30050 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x5640b9a30090 <col:25> 'int' 0
| |     |-IntegerLiteral 0x5640b9a30100 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x5640b9a30180 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x5640b9a30160 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x5640b9a30130 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x5640b9a24a58 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x5640b9a30120 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x5640b9a24d88 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x5640b9a24d88
| | `-ParmVarDecl 0x5640b9a24e98 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x5640b9a24f38 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5640b9a24f38
| | `-ParmVarDecl 0x5640b9a25048 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x5640b9a250e8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x5640b9a250e8
| | `-ParmVarDecl 0x5640b9a251f8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x5640b9a25268 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5640b9a25268
| | `-ParmVarDecl 0x5640b9a25378 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x5640b9a25400 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x5640b9a25400
|-FieldDecl 0x5640b9a254f0 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x5640b9a25550 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x5640b9a255b0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x5640b9a25610 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x5640b9a25670 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x5640b9a25780 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5640b9a25880 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5640b9a258e0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x5640b9a29820 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x5640b9a25968 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x5640b9a299d8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x5640b9a298e0 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x5640b9a29b20 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x5640b9a29a90 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x5640b9a29ec8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x5640b9a29bd8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x5640b9a29c50 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x5640b9a29cd0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x5640b9a29d48 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x5640b9a29dc0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5640b9a2cf00 <col:57> 'bool' false
|-CXXMethodDecl 0x5640b9a2a038 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5640b9a29fa0 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x5640b9a2a188 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5640b9a2a0f0 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x5640b9a2a2d8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5640b9a2a240 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x5640b9a2a430 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x5640b9a2a398 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x5640b9a2a750 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x5640b9a2a4e8 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x5640b9a2a560 <col:50> col:54 'bool'
| |-ParmVarDecl 0x5640b9a2a5e0 <col:56> col:59 'int'
| `-ParmVarDecl 0x5640b9a2a658 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x5640b9a2a8b8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5640b9a2a820 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x5640b9a2a980 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x5640b9a2aa40 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x5640b9a2ac40 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x5640b9a2aaf0 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x5640b9a2ab68 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x5640b9a2ad10 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x5640b9a2ae58 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x5640b9a2adc0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x5640b9a30460 <col:42, line:326:5>
|   `-ReturnStmt 0x5640b9a30450 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x5640b9a30438 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x5640b9a30418 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x5640b9a303e8 <col:16, col:45> '<bound member function type>' .back 0x5640b98ea178
|           `-ArraySubscriptExpr 0x5640b9a30368 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x5640b9a30338 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5640b9a30250 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x5640b9a12a48
|             |   `-CXXThisExpr 0x5640b9a30240 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x5640b9a30350 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x5640b9a30280 <col:38> 'bool' lvalue ParmVar 0x5640b9a2adc0 'isout' 'bool'
|-CXXMethodDecl 0x5640b9a2b028 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x5640b9a2af10 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x5640b9a2af88 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x5640b9a2b180 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x5640b9a2b0e8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x5640b9a2b428 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x5640b9a2b238 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x5640b9a2b2b0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x5640b9a2b330 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x5640b9a2b600 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x5640b9a2b4f0 <col:30> col:34 'bool'
| `-ParmVarDecl 0x5640b9a2b568 <col:36> col:40 'bool'
|-CXXMethodDecl 0x5640b9a2b788 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x5640b9a2b6c8 <col:30> col:33 'int'
|-CXXMethodDecl 0x5640b9a2ba20 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x5640b9a2b848 <col:23> col:26 'int'
| |-ParmVarDecl 0x5640b9a2b8c0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x5640b9a2b938 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x5640b9a2bc38 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x5640b9a2bae8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x5640b9a2bb60 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x5640b9a2be48 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x5640b9a2bd00 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x5640b9a2bd78 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x5640b9a2bfc8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x5640b9a2bf08 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x5640b9a2c1c8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x5640b9a2c080 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x5640b9a2c0f8 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x5640b9a2c3a0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5640b9a2c288 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x5640b9a2c308 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x5640b9a2c680 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5640b9a2c460 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x5640b9a2c4d8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5640b9a2c558 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x5640b9a2c5d0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x5640b9a2c760 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x5640b9a2c7c0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x5640b9a2ca40 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x5640b9a2c940 parent 0x5640b984c390 prev 0x5640b985bfb8 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x5640b9a2c820 <col:36> col:39 'int'
    `-ParmVarDecl 0x5640b9a2c8a0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b984c390 prev 0x5640b984c110 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5640b984c488 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5640b984c518 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5640b984c578 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x5640b984c668 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5640b984c768 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5640b984c938 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5640b984c7e8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5640b984c860 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5640b984cac8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5640b984ca00 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5640b984cb70 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5640b984cca8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5640b984cbe0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5640b984ce48 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5640b984cd88 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5640b984cfe8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5640b984cf28 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5640b984d090 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5640b984d190 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5640b984d270 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b984d170 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5640b984d150 <col:26> 'int' 1
| `-EnumConstantDecl 0x5640b984d220 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5640b984d288 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b984d200 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5640b984d1e0 <col:44> 'int' 2
|-CXXMethodDecl 0x5640b984d3d0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5640b984d2b8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5640b984d338 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5640b984d528 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5640b984d498 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5640b984d768 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5640b984d5e8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5640b984d660 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5640b984d818 <col:20>
| `-OptimizeNoneAttr 0x5640b984d870 <col:30>
|-CXXMethodDecl 0x5640b984d978 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5640b984d8b0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5640b984da20 <col:20>
| `-OptimizeNoneAttr 0x5640b984da78 <col:30>
|-CXXMethodDecl 0x5640b984dac8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5640b984db90 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5640b984dca8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5640b984dd30 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5640b984ddb8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5640b984de40 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x5640b984dec8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5640b984df58 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5640b984e018 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5640b984e0a0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x5640b984e128 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5640b984e1b0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5640b984e238 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5640b984e2c0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5640b984e350 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5640b984e410 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5640b984e4a0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5640b984e5f0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5640b984e558 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5640b984e780 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5640b984e6b0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5640b984ea30 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5640b984e838 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5640b984e8b8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5640b984e938 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5640b984eae8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5640b984ebf0 <line:80:9, col:33> col:9 referenced CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5640b984ee80 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b984ebd0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5640b984ebb0 <col:33> 'int' 0
| |-EnumConstantDecl 0x5640b984ec80 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5640b984ee98 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b984ec60 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5640b984ec40 <col:32> 'int' 20
| |-EnumConstantDecl 0x5640b984ed10 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5640b984eeb0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b984ecf0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5640b984ecd0 <col:38> 'int' 90
| |-EnumConstantDecl 0x5640b984eda0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5640b984eec8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b984ed80 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5640b984ed60 <col:35> 'int' 100
| `-EnumConstantDecl 0x5640b984ee30 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5640b984eee0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b984ee10 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5640b984edf0 <col:32> 'int' 2000
|-CXXMethodDecl 0x5640b984ef20 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5640b984f360 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5640b984f1d0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5640b984f248 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5640b984f430 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5640b984f5b0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5640b984f4e0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5640b984f7b8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5640b984f668 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5640b984f6e0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5640b984f8b8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5640b984f958 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5640b984fa20 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5640b984fab0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5640b984fce0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b984fa90 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5640b984fa70 <col:36> 'int' EnumConstant 0x5640b984fa20 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5640b984fb00 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5640b984fb50 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5640b984fba0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5640b984fbf0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5640b984fc40 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5640b984fc90 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5640b984fdc8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5640b984fd08 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5640b984fe90 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5640b984ff50 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5640b9850010 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5640b98500d0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5640b98501e8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5640b98502b0 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x5640b9850430 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5640b9850360 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5640b9850558 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5640b9850758 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5640b9850608 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5640b9850688 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5640b985e0a8 <col:54, line:127:5>
|   |-ParenExpr 0x5640b985df58 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5640b985df28 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5640b985dc18 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5640b985dbf0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5640b985dbd8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5640b985dbc0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5640b985db90 <col:31> 'Router *' lvalue ->_router 0x5640b985ba70
|   |   |         `-CXXThisExpr 0x5640b985db80 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5640b985dc78 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b985dc58 <col:48> 'int' 0
|   |   `-CallExpr 0x5640b985de88 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5640b985de70 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b985de50 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b985dec8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b985dce8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5640b985dee0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b985dd08 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5640b985def8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b985dd40 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5640b985df10 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b985de38 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b985de20 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b985ddd8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5640b985dff0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5640b985df88 <col:9> 'Router *' lvalue ->_router 0x5640b985ba70
|   | | `-CXXThisExpr 0x5640b985df78 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5640b985dfd8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640b985dfb8 <col:19> 'Router *' lvalue ParmVar 0x5640b9850608 'r' 'Router *'
|   `-BinaryOperator 0x5640b985e088 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5640b985e020 <col:9> 'int' lvalue ->_eindex 0x5640b985bad8
|     | `-CXXThisExpr 0x5640b985e010 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5640b985e070 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5640b985e050 <col:19> 'int' lvalue ParmVar 0x5640b9850688 'eindex' 'int'
|-CXXMethodDecl 0x5640b98508e0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5640b9850818 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5640b98509b0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5640b9850a78 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5640b9850b18 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5640b9850d68 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5640b9850be0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5640b9850c60 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5640b9850e18 <col:20>
| `-OptimizeNoneAttr 0x5640b9850e70 <col:30>
|-CXXMethodDecl 0x5640b9850f78 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5640b9850eb0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5640b9851020 <col:20>
| `-OptimizeNoneAttr 0x5640b9851078 <col:30>
|-CXXMethodDecl 0x5640b9851148 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5640b98510b8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5640b98511f0 <col:20>
| `-OptimizeNoneAttr 0x5640b9851248 <col:30>
|-CXXMethodDecl 0x5640b98513d8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5640b9851280 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5640b9851300 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5640b9851568 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5640b98514a0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5640b98516b8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5640b9851628 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5640b9851808 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5640b9851778 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5640b9851958 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5640b98518c8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5640b9851c18 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5640b9851a10 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5640b9851a90 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5640b9851b38 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5640b9851cf0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5640b9851db0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5640b9852080 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5640b9851f30 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5640b9851fa8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5640b98521a8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5640b9852380 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5640b9852260 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5640b98522e0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5640b9852568 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5640b9852448 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5640b98524c8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5640b98528d8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5640b9852628 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5640b98526a0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5640b9852720 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5640b985d690 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5640b985d670 <col:106> 'int' 0
| `-ParmVarDecl 0x5640b9852798 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5640b985d6c8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5640b985d6a8 <col:126> 'int' 0
|-CXXMethodDecl 0x5640b9852c78 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5640b98529a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5640b9852a40 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5640b9852ac0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5640b9852b38 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5640b985d700 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5640b985d6e0 <col:114> 'int' 0
|-CXXMethodDecl 0x5640b9853008 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5640b9852d50 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5640b9852dc8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5640b9852e48 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5640b985d718 <col:96> 'int' 0
| `-ParmVarDecl 0x5640b9852ec0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5640b985d758 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5640b985d738 <col:116> 'int' 0
|-CXXMethodDecl 0x5640b9853388 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5640b98530d8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5640b9853150 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5640b98531d0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5640b985d790 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5640b985d770 <col:109> 'int' 0
| `-ParmVarDecl 0x5640b9853248 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5640b985d7c8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5640b985d7a8 <col:129> 'int' 0
|-CXXMethodDecl 0x5640b9853708 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5640b9853458 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5640b98534d0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5640b9853550 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5640b98535c8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5640b985d800 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5640b985d7e0 <col:117> 'int' 0
|-CXXMethodDecl 0x5640b9853a98 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5640b98537e0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9853858 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5640b98538d8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5640b985d818 <col:99> 'int' 0
| `-ParmVarDecl 0x5640b9853950 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5640b985d858 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5640b985d838 <col:119> 'int' 0
|-CXXMethodDecl 0x5640b9853eb8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5640b9853b68 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5640b9853be8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5640b9853c60 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5640b9853ce0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5640b985d890 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5640b985d870 <col:108> 'int' 0
| `-ParmVarDecl 0x5640b9853d60 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5640b985d8c8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5640b985d8a8 <col:141> 'int' 0
|-CXXMethodDecl 0x5640b98542d8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5640b9853f90 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5640b9854010 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5640b9854088 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5640b9854108 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5640b9854188 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5640b985d8e0 <col:121> 'int' 0
|-CXXMethodDecl 0x5640b9854708 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5640b98543b8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5640b9854438 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5640b98544b0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5640b9854530 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5640b985d900 <col:98> 'int' 0
| `-ParmVarDecl 0x5640b98545b0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5640b985d920 <col:123> 'int' 0
|-CXXMethodDecl 0x5640b98549d0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5640b98547e0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5640b9854860 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5640b98548e0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5640b985d940 <col:80> 'int' 0
|-EnumDecl 0x5640b9854a88 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5640b9854b90 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5640b9854e20 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9854b70 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5640b9854b50 <col:42> 'int' 1
| |-EnumConstantDecl 0x5640b9854c20 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5640b9854e38 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9854c00 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5640b9854be0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5640b9854cb0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5640b9854e50 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9854c90 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5640b9854c70 <col:44> 'int' 4
| |-EnumConstantDecl 0x5640b9854d40 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5640b9854e68 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b9854d20 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5640b9854d00 <col:36> 'int' 7
| `-EnumConstantDecl 0x5640b9854dd0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5640b9854e80 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b9854db0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5640b9854d90 <col:34> 'int' 6
|-CXXMethodDecl 0x5640b9855138 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5640b9854ea8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5640b9854f48 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5640b9854fc8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5640b9855040 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5640b985d9f8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5640b985d9e0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5640b985d9c8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5640b985d9a8 <col:98, col:105> 'String' (CXXTemporary 0x5640b985d9a8)
|           `-CXXTemporaryObjectExpr 0x5640b985d970 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5640b98553d8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5640b9855208 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5640b9855280 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5640b98552f8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5640b985daa8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5640b985da90 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5640b985da78 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5640b985da58 <col:94, col:101> 'String' (CXXTemporary 0x5640b985da58)
| |         `-CXXTemporaryObjectExpr 0x5640b985da20 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5640b985e290 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5640b985e208 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5640b985e1d8 <col:9> '<bound member function type>' ->add_task_handlers 0x5640b9855138
|     | `-CXXThisExpr 0x5640b985e1c8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5640b985e248 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5640b985e148 <col:27> 'Task *' lvalue ParmVar 0x5640b9855208 'task' 'Task *'
|     |-ImplicitCastExpr 0x5640b985e260 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5640b985e168 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5640b9855280 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5640b985e278 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5640b985e188 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5640b9854dd0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5640b985e1a8 <col:62> 'const String' lvalue ParmVar 0x5640b98552f8 'prefix' 'const String &'
|-CXXMethodDecl 0x5640b98555e8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5640b98554a0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5640b9855518 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5640b985db58 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5640b985db40 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5640b985db28 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5640b985db08 <col:70, col:77> 'String' (CXXTemporary 0x5640b985db08)
| |         `-CXXTemporaryObjectExpr 0x5640b985dad0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5640b985e468 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5640b985e3e0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5640b985e3b0 <col:9> '<bound member function type>' ->add_task_handlers 0x5640b9855138
|     | `-CXXThisExpr 0x5640b985e3a0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5640b985e420 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5640b985e320 <col:27> 'Task *' lvalue ParmVar 0x5640b98554a0 'task' 'Task *'
|     |-ImplicitCastExpr 0x5640b985e438 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5640b985e340 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5640b985e450 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5640b985e360 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5640b9854dd0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5640b985e380 <col:57> 'const String' lvalue ParmVar 0x5640b9855518 'prefix' 'const String &'
|-CXXMethodDecl 0x5640b98558c8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5640b98556b0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9855730 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b98557a8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5640b9855b78 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5640b9855998 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9855a18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b9855a98 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5640b9855e68 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5640b9855c48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9855cc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b9855d40 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5640b9856118 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5640b9855f38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9855fb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b9856038 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5640b98563c8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5640b98561e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9856268 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b98562e8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5640b9856678 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5640b9856498 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9856518 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b9856590 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5640b9856928 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5640b9856748 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b98567c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b9856848 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5640b9856c38 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5640b9856a50 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9856ad0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b9856b50 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5640b9856f18 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5640b9856d08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9856d88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b9856e30 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5640b98571f8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5640b9856fe8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9857068 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b9857110 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5640b9857460 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5640b98572c8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5640b9857348 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5640b98573c0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5640b9857708 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5640b9857530 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5640b98575b0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5640b9857628 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5640b98579b8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5640b98577d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9857858 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b98578d8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5640b9857c68 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5640b9857a88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9857b08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b9857b80 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5640b9857f18 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5640b9857d38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9857db8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b9857e30 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5640b98581e8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5640b9857fe8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9858068 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5640b9858108 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5640b9858518 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5640b98582b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5640b9858338 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5640b98583b0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5640b9858428 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5640b985db70 <col:93> 'bool' false
|-CXXMethodDecl 0x5640b9858700 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5640b98585e8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5640b9858668 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5640b98588d8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5640b98587c0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5640b9858840 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5640b9858bb8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5640b9858998 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5640b9858a10 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5640b9858a90 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5640b9858b08 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5640b9858ea8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5640b9858c88 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5640b9858d00 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5640b9858d80 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5640b9858df8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5640b98590e0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5640b9858f80 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5640b9859000 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5640b98592c8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5640b98591a8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5640b9859228 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5640b9859378 prev 0x5640b9850b18 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5640b9859470 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5640b9859500 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5640b9859578 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5640b9859638 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5640b9859700 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5640b9859878 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5640b98597b0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5640b9859920 <col:24>
| | `-OptimizeNoneAttr 0x5640b9859978 <col:34>
| |-CXXMethodDecl 0x5640b98599c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5640b9859c78 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5640b9859a70 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5640b9859ae8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5640b9859b68 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5640b9859d30 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5640b9859d68 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5640b9859dd0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5640b9859e58 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5640b985a178 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5640b9859f10 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5640b9859f88 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5640b985a000 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5640b985a080 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5640b985a290 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5640b9861c08 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5640b9861c08
| | `-ParmVarDecl 0x5640b9861d18 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5640b9861db8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5640b9861db8
| | `-ParmVarDecl 0x5640b9861ec8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5640b9a864c8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5640b985a308 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5640b985a3a8 <col:38> "" ""
|-CXXMethodDecl 0x5640b985a438 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5640b985a4d8 <col:44> "" ""
|-AccessSpecDecl 0x5640b985a548 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5640b985a570 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5640b985a670 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5640b985a6c0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b985a650 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5640b985a630 <col:27> 'int' 4
|-FieldDecl 0x5640b985a778 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5640b985a928 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5640b985a9e0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5640b985ba70 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5640b985bad8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5640b985bc28 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5640b985bb68 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5640b985bdd8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5640b985bce8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5640b985bfb8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5640b985be98 <col:20> col:23 'int'
| `-ParmVarDecl 0x5640b985bf18 <col:25> col:28 'int'
|-CXXMethodDecl 0x5640b985c260 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5640b985c080 <col:23> col:26 'int'
| |-ParmVarDecl 0x5640b985c100 <col:28> col:31 'int'
| `-ParmVarDecl 0x5640b985c178 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5640b985c318 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5640b985c3e0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5640b985c430 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5640b985c480 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5640b985c660 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5640b985c510 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5640b985c588 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5640b985c908 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5640b985c728 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5640b985c7a8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5640b985c820 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5640b985cb28 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5640b985c9d8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5640b985ca58 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5640b985ce60 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5640b985cbe8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5640b985cc68 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5640b985cce0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5640b985cd60 <col:57> col:60 'int'
|-CXXMethodDecl 0x5640b985d048 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5640b985cf30 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5640b985cfb0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5640b985d198 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5640b985d108 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5640b985d518 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5640b985d258 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5640b985d2d8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5640b985d350 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5640b985d3d0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5640b985d630 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class AddressInfo
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9864d78 <../dummy_inc/click/standard/addressinfo.hh:108:1, line:132:1> line:108:7 class AddressInfo definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5640b9864ed8 <col:1, col:7> col:7 implicit referenced class AddressInfo
|-AccessSpecDecl 0x5640b9864f68 <col:38, col:44> col:38 public
|-CXXConstructorDecl 0x5640b9864ff0 <line:110:5, col:17> col:5 AddressInfo 'void ()'
|-CXXMethodDecl 0x5640b98650f0 <line:112:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5640b984dac8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5640b98674d0 <col:36, col:60>
|   `-ReturnStmt 0x5640b98674c0 <col:38, col:45>
|     `-ImplicitCastExpr 0x5640b98674a8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5640b9867480 <col:45> 'const char [12]' lvalue "AddressInfo"
|-CXXMethodDecl 0x5640b98651b8 <line:114:5, col:65> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x5640b984ef20 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x5640b9867530 <col:33, col:65>
|   `-ReturnStmt 0x5640b9867520 <col:35, col:42>
|     `-ImplicitCastExpr 0x5640b9867508 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x5640b98674e8 <col:42> 'Element::ConfigurePhase' EnumConstant 0x5640b984ebf0 'CONFIGURE_PHASE_FIRST' 'Element::ConfigurePhase'
|-CXXMethodDecl 0x5640b9865490 <line:115:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5640b984f360 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5640b9865340 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x5640b98653b8 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-EnumDecl 0x5640b9865540 <line:117:5, line:119:5> line:117:5
| `-EnumConstantDecl 0x5640b9865640 <line:118:9, col:22> col:9 f_nodevice 'AddressInfo::(anonymous enum at ../dummy_inc/click/standard/addressinfo.hh:117:5)'
|   `-ImplicitCastExpr 0x5640b9865690 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b9865620 <col:22> 'int' Int: 1
|       `-IntegerLiteral 0x5640b9865600 <col:22> 'int' 1
|-CXXMethodDecl 0x5640b9865928 <line:120:5, col:102> col:17 query_ip 'bool (const String &, unsigned char *, const Element *, int)' static
| |-ParmVarDecl 0x5640b98656b8 <col:26, col:40> col:40 s 'const String &'
| |-ParmVarDecl 0x5640b9865738 <col:43, col:58> col:58 store 'unsigned char *'
| |-ParmVarDecl 0x5640b98657b0 <col:65, col:80> col:80 context 'const Element *'
| `-ParmVarDecl 0x5640b9865830 <col:89, col:101> col:93 flags 'int' cinit
|   `-IntegerLiteral 0x5640b98673e0 <col:101> 'int' 0
|-CXXMethodDecl 0x5640b9865cf8 <line:121:5, col:134> col:17 query_ip_prefix 'bool (String, unsigned char *, unsigned char *, const Element *, int)' static
| |-ParmVarDecl 0x5640b98659f8 <col:33, col:40> col:40 s 'String' destroyed
| |-ParmVarDecl 0x5640b9865a78 <col:43, col:58> col:58 store_addr 'unsigned char *'
| |-ParmVarDecl 0x5640b9865af8 <col:70, col:85> col:85 store_mask 'unsigned char *'
| |-ParmVarDecl 0x5640b9865b70 <col:97, col:112> col:112 context 'const Element *'
| `-ParmVarDecl 0x5640b9865bf0 <col:121, col:133> col:125 flags 'int' cinit
|   `-IntegerLiteral 0x5640b9867400 <col:133> 'int' 0
|-CXXMethodDecl 0x5640b9866038 <line:123:5, col:96> col:17 query_ip6 'bool (String, unsigned char *, const Element *, int)' static
| |-ParmVarDecl 0x5640b9865dd0 <col:27, col:34> col:34 s 'String' destroyed
| |-ParmVarDecl 0x5640b9865e50 <col:37, col:52> col:52 store 'unsigned char *'
| |-ParmVarDecl 0x5640b9865ec8 <col:59, col:74> col:74 context 'const Element *'
| `-ParmVarDecl 0x5640b9865f48 <col:83, col:95> col:87 flags 'int' cinit
|   `-IntegerLiteral 0x5640b9867420 <col:95> 'int' 0
|-CXXMethodDecl 0x5640b9866408 <line:124:5, col:130> col:17 query_ip6_prefix 'bool (String, unsigned char *, int *, const Element *, int)' static
| |-ParmVarDecl 0x5640b9866108 <col:34, col:41> col:41 s 'String' destroyed
| |-ParmVarDecl 0x5640b9866188 <col:44, col:59> col:59 store_addr 'unsigned char *'
| |-ParmVarDecl 0x5640b9866208 <col:71, col:76> col:76 store_prefixlen 'int *'
| |-ParmVarDecl 0x5640b9866280 <col:93, col:108> col:108 context 'const Element *'
| `-ParmVarDecl 0x5640b9866300 <col:117, col:129> col:121 flags 'int' cinit
|   `-IntegerLiteral 0x5640b9867440 <col:129> 'int' 0
|-CXXMethodDecl 0x5640b9866700 <line:126:5, col:101> col:17 query_ethernet 'bool (String, unsigned char *, const Element *, int)' static
| |-ParmVarDecl 0x5640b98664e0 <col:32, col:39> col:39 s 'String' destroyed
| |-ParmVarDecl 0x5640b9866560 <col:42, col:57> col:57 store 'unsigned char *'
| |-ParmVarDecl 0x5640b98665d8 <col:64, col:79> col:79 context 'const Element *'
| `-ParmVarDecl 0x5640b9866658 <col:88, col:100> col:92 flags 'int' cinit
|   `-IntegerLiteral 0x5640b9867460 <col:100> 'int' 0
|-AccessSpecDecl 0x5640b98667c0 <line:128:3, col:10> col:3 private
|-CXXMethodDecl 0x5640b9866b88 <line:130:5, col:127> col:17 query_netdevice 'bool (const String &, unsigned char *, int, int, const Element *, int)' static
| |-ParmVarDecl 0x5640b98667f8 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x5640b9866878 <col:53, col:68> col:68 store 'unsigned char *'
| |-ParmVarDecl 0x5640b98668f8 <col:75, col:79> col:79 type 'int'
| |-ParmVarDecl 0x5640b9866978 <col:85, col:89> col:89 len 'int'
| |-ParmVarDecl 0x5640b98669f0 <col:94, col:109> col:109 context 'const Element *'
| `-ParmVarDecl 0x5640b9866a70 <col:118, col:122> col:122 flags 'int'
|-CXXConstructorDecl 0x5640b9866c88 <line:108:7> col:7 implicit AddressInfo 'void (const AddressInfo &)' inline default_delete noexcept-unevaluated 0x5640b9866c88
| `-ParmVarDecl 0x5640b9866d98 <col:7> col:7 'const AddressInfo &'
|-CXXConstructorDecl 0x5640b9866e38 <col:7> col:7 implicit AddressInfo 'void (AddressInfo &&)' inline default_delete noexcept-unevaluated 0x5640b9866e38
| `-ParmVarDecl 0x5640b9866f48 <col:7> col:7 'AddressInfo &&'
|-CXXMethodDecl 0x5640b9866fe8 <col:7> col:7 implicit operator= 'AddressInfo &(const AddressInfo &)' inline default_delete noexcept-unevaluated 0x5640b9866fe8
| `-ParmVarDecl 0x5640b98670f8 <col:7> col:7 'const AddressInfo &'
|-CXXMethodDecl 0x5640b9867168 <col:7> col:7 implicit operator= 'AddressInfo &(AddressInfo &&)' inline default_delete noexcept-unevaluated 0x5640b9867168
| `-ParmVarDecl 0x5640b9867278 <col:7> col:7 'AddressInfo &&'
`-CXXDestructorDecl 0x5640b9867300 <col:7> col:7 implicit ~AddressInfo 'void ()' inline default noexcept-unevaluated 0x5640b9867300
  `-Overrides: [ 0x5640b984c668 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.AddressInfo = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.AddressInfo.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct IP6AddressArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IPAddressArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9580f68 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b9581088 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x5640b9581150 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x5640b9651720 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5640b9656a38 <col:8>
|-CXXConstructorDecl 0x5640b9651828 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x5640b9651828
| `-ParmVarDecl 0x5640b9651938 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x5640b96519d8 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9651ae8 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x5640b9581150 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x5640b9656c50 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5640b9656c20 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x5640b9581150
| |     `-CXXStaticCastExpr 0x5640b9656bf0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x5640b9656bc0 <col:8> 'in_addr' lvalue ParmVar 0x5640b9651ae8 '' 'in_addr &&'
| `-CompoundStmt 0x5640b9656c98 <col:8>
`-CXXDestructorDecl 0x5640b9656ed0 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IP6Address
         0 |   struct in6_addr _addr
         0 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |       uint8_t [16] __u6_addr8
         0 |       uint16_t [8] __u6_addr16
         0 |       uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct ip6parts
         0 |   class IP6Address ip6
         0 |     struct in6_addr _addr
         0 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |         uint8_t [16] __u6_addr8
         0 |         uint16_t [8] __u6_addr16
         0 |         uint32_t [4] __u6_addr32
        16 |   int plen
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b958b2d8 </usr/include/netinet/in.h:214:5, line:219:7> line:214:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5640b958b4f8 <line:216:2, col:23> col:10 referenced __u6_addr8 'uint8_t [16]'
|-FieldDecl 0x5640b958b628 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
|-FieldDecl 0x5640b958b758 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
|-CXXConstructorDecl 0x5640b9a70098 <line:214:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x5640b9a708a8 <col:5>
|-CXXDestructorDecl 0x5640b9a70170 <col:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5640b9a70278 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9a70388 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x5640b9a72270 <col:5>
|-CXXConstructorDecl 0x5640b9a70428 <col:5> col:5 implicit used constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9a70538 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| `-CompoundStmt 0x5640b9a7e0c8 <col:5>
|-CXXMethodDecl 0x5640b9a70fd8 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9a710e8 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x5640b9a81ed0 <col:5>
|   `-ReturnStmt 0x5640b9a81ec0 <col:5>
|     `-UnaryOperator 0x5640b9a81ea8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5640b9a81e98 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
`-CXXMethodDecl 0x5640b9a71158 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x5640b9a71158
  `-ParmVarDecl 0x5640b9a71268 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.14 = type { [4 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9529a70 </usr/include/netinet/in.h:212:1, line:225:3> line:212:8 struct in6_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b958b248 <col:1, col:8> col:8 implicit struct in6_addr
|-CXXRecordDecl 0x5640b958b2d8 <line:214:5, line:219:7> line:214:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5640b958b4f8 <line:216:2, col:23> col:10 referenced __u6_addr8 'uint8_t [16]'
| |-FieldDecl 0x5640b958b628 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
| |-FieldDecl 0x5640b958b758 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
| |-CXXConstructorDecl 0x5640b9a70098 <line:214:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5640b9a708a8 <col:5>
| |-CXXDestructorDecl 0x5640b9a70170 <col:5> col:5 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5640b9a70278 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5640b9a70388 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x5640b9a72270 <col:5>
| |-CXXConstructorDecl 0x5640b9a70428 <col:5> col:5 implicit used constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x5640b9a70538 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| | `-CompoundStmt 0x5640b9a7e0c8 <col:5>
| |-CXXMethodDecl 0x5640b9a70fd8 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5640b9a710e8 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x5640b9a81ed0 <col:5>
| |   `-ReturnStmt 0x5640b9a81ec0 <col:5>
| |     `-UnaryOperator 0x5640b9a81ea8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5640b9a81e98 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
| `-CXXMethodDecl 0x5640b9a71158 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x5640b9a71158
|   `-ParmVarDecl 0x5640b9a71268 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
|-FieldDecl 0x5640b958b818 <col:5, line:219:9> col:9 referenced __in6_u 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
|-CXXConstructorDecl 0x5640b9a6ffa8 <line:212:8> col:8 implicit used in6_addr 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5640b958b818 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x5640b9a708b8 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void () noexcept'
| `-CompoundStmt 0x5640b9a70910 <col:8>
|-CXXConstructorDecl 0x5640b9a705a8 <col:8> col:8 implicit used constexpr in6_addr 'void (const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9a70688 <col:8> col:8 used 'const in6_addr &'
| |-CXXCtorInitializer Field 0x5640b958b818 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x5640b9a72280 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept'
| |   `-MemberExpr 0x5640b9a72240 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5640b958b818
| |     `-DeclRefExpr 0x5640b9a72220 <col:8> 'const in6_addr' lvalue ParmVar 0x5640b9a70688 '' 'const in6_addr &'
| `-CompoundStmt 0x5640b9a722e0 <col:8>
|-CXXConstructorDecl 0x5640b9a70728 <col:8> col:8 implicit used constexpr in6_addr 'void (in6_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9a70838 <col:8> col:8 used 'in6_addr &&'
| |-CXXCtorInitializer Field 0x5640b958b818 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x5640b9a7e0d8 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept'
| |   `-MemberExpr 0x5640b9a7e098 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' xvalue .__in6_u 0x5640b958b818
| |     `-CXXStaticCastExpr 0x5640b9a7e068 <col:8> 'in6_addr' xvalue static_cast<struct in6_addr &&> <NoOp>
| |       `-DeclRefExpr 0x5640b9a7e038 <col:8> 'in6_addr' lvalue ParmVar 0x5640b9a70838 '' 'in6_addr &&'
| `-CompoundStmt 0x5640b9a7e138 <col:8>
|-CXXMethodDecl 0x5640b9a712d8 <col:8> col:8 implicit used constexpr operator= 'in6_addr &(const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9a713e8 <col:8> col:8 used 'const in6_addr &'
| `-CompoundStmt 0x5640b9a81f60 <col:8>
|   |-CXXMemberCallExpr 0x5640b9a81ee8 <col:8> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue
|   | |-MemberExpr 0x5640b9a81e28 <col:8> '<bound member function type>' .operator= 0x5640b9a70fd8
|   | | `-MemberExpr 0x5640b9a81d38 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue ->__in6_u 0x5640b958b818
|   | |   `-CXXThisExpr 0x5640b9a81d28 <col:8> 'in6_addr *' this
|   | `-MemberExpr 0x5640b9a81df8 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5640b958b818
|   |   `-DeclRefExpr 0x5640b9a81dd8 <col:8> 'const in6_addr' lvalue ParmVar 0x5640b9a713e8 '' 'const in6_addr &'
|   `-ReturnStmt 0x5640b9a81f50 <col:8>
|     `-UnaryOperator 0x5640b9a81f20 <col:8> 'in6_addr' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5640b9a81f10 <col:8> 'in6_addr *' this
|-CXXMethodDecl 0x5640b9a71458 <col:8> col:8 implicit constexpr operator= 'in6_addr &(in6_addr &&)' inline default trivial noexcept-unevaluated 0x5640b9a71458
| `-ParmVarDecl 0x5640b9a71568 <col:8> col:8 'in6_addr &&'
`-CXXDestructorDecl 0x5640b9a71908 <col:8> col:8 implicit ~in6_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in6_addr = type { %union.anon.14 }
  NonVirtualBaseLLVMType:%struct.in6_addr = type { %union.anon.14 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9a63490 prev 0x5640b9874840 <../dummy_inc/click/ip6address.hh:14:1, line:175:1> line:14:7 referenced class IP6Address definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b9a63588 <col:1, col:7> col:7 implicit referenced class IP6Address
|-AccessSpecDecl 0x5640b9a63618 <col:20, col:26> col:20 public
|-TypedefDecl 0x5640b9a63650 <line:16:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x5640b943fc70 'uninitialized_type'
|   `-CXXRecord 0x5640b943fbd8 'uninitialized_type'
|-CXXConstructorDecl 0x5640b9a636e0 <line:19:5, line:21:5> line:19:12 IP6Address 'void ()' inline
| |-CXXCtorInitializer Field 0x5640b9a6ff28 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5640b9a70920 <col:12> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5640b9a70b40 <col:25, line:21:5>
|   `-CallExpr 0x5640b9a70af0 <line:20:2, col:33> 'void *'
|     |-ImplicitCastExpr 0x5640b9a70ad8 <col:2> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5640b9a70ab8 <col:2> 'void *(void *, int, size_t) throw()' lvalue Function 0x5640b954ad28 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x5640b9a70b28 <col:9, col:10> 'void *' <BitCast>
|     | `-UnaryOperator 0x5640b9a70a00 <col:9, col:10> 'struct in6_addr *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x5640b9a709d0 <col:10> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5640b9a6ff28
|     |     `-CXXThisExpr 0x5640b9a709c0 <col:10> 'IP6Address *' implicit this
|     |-IntegerLiteral 0x5640b9a70a18 <col:17> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x5640b9a70a98 <col:20, col:32> 'unsigned long' sizeof
|       `-ParenExpr 0x5640b9a70a78 <col:26, col:32> 'struct in6_addr':'in6_addr' lvalue
|         `-MemberExpr 0x5640b9a70a48 <col:27> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5640b9a6ff28 non_odr_use_unevaluated
|           `-CXXThisExpr 0x5640b9a70a38 <col:27> 'IP6Address *' implicit this
|-CXXConstructorDecl 0x5640b9a63830 <line:24:5, line:26:5> line:24:21 IP6Address 'void (const unsigned char *)' inline
| |-ParmVarDecl 0x5640b9a637a0 <col:32, col:53> col:53 used x 'const unsigned char *'
| |-CXXCtorInitializer Field 0x5640b9a6ff28 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5640b9a70b58 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5640b9a70da8 <col:56, line:26:5>
|   `-CallExpr 0x5640b9a70d28 <line:25:2, col:33> 'void *'
|     |-ImplicitCastExpr 0x5640b9a70d10 <col:2> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5640b9a70cf0 <col:2> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x5640b95499e8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
|     |-ImplicitCastExpr 0x5640b9a70d60 <col:9, col:10> 'void *' <BitCast>
|     | `-UnaryOperator 0x5640b9a70c38 <col:9, col:10> 'struct in6_addr *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x5640b9a70c08 <col:10> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5640b9a6ff28
|     |     `-CXXThisExpr 0x5640b9a70bf8 <col:10> 'IP6Address *' implicit this
|     |-ImplicitCastExpr 0x5640b9a70d90 <col:17> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x5640b9a70d78 <col:17> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x5640b9a70c50 <col:17> 'const unsigned char *' lvalue ParmVar 0x5640b9a637a0 'x' 'const unsigned char *'
|     `-UnaryExprOrTypeTraitExpr 0x5640b9a70cd0 <col:20, col:32> 'unsigned long' sizeof
|       `-ParenExpr 0x5640b9a70cb0 <col:26, col:32> 'struct in6_addr':'in6_addr' lvalue
|         `-MemberExpr 0x5640b9a70c80 <col:27> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5640b9a6ff28 non_odr_use_unevaluated
|           `-CXXThisExpr 0x5640b9a70c70 <col:27> 'IP6Address *' implicit this
|-CXXConstructorDecl 0x5640b9a63980 <line:31:5, line:33:5> line:31:21 IP6Address 'void (IPAddress)' inline
| |-ParmVarDecl 0x5640b9a638f0 <col:32, col:42> col:42 used x 'IPAddress'
| |-CXXCtorInitializer Field 0x5640b9a6ff28 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5640b9a70dc0 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5640b9a72160 <col:45, line:33:5>
|   `-ExprWithCleanups 0x5640b9a72148 <line:32:2, col:10> 'IP6Address' lvalue
|     `-CXXOperatorCallExpr 0x5640b9a72110 <col:2, col:10> 'IP6Address' lvalue
|       |-ImplicitCastExpr 0x5640b9a720f8 <col:8> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b9a72078 <col:8> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x5640b9a6f8c8 'operator=' 'IP6Address &(const struct in_addr &)'
|       |-UnaryOperator 0x5640b9a70e28 <col:2, col:3> 'IP6Address' lvalue prefix '*' cannot overflow
|       | `-CXXThisExpr 0x5640b9a70e18 <col:3> 'IP6Address *' this
|       `-MaterializeTemporaryExpr 0x5640b9a72060 <col:10> 'const struct in_addr':'const in_addr' lvalue
|         `-ImplicitCastExpr 0x5640b9a72048 <col:10> 'const struct in_addr':'const in_addr' <NoOp>
|           `-ImplicitCastExpr 0x5640b9a72030 <col:10> 'struct in_addr':'in_addr' <UserDefinedConversion>
|             `-CXXMemberCallExpr 0x5640b9a72010 <col:10> 'struct in_addr':'in_addr'
|               `-MemberExpr 0x5640b9a71fe0 <col:10> '<bound member function type>' .operator in_addr 0x5640b964ea50
|                 `-ImplicitCastExpr 0x5640b9a71fc8 <col:10> 'const IPAddress' lvalue <NoOp>
|                   `-DeclRefExpr 0x5640b9a70e40 <col:10> 'IPAddress' lvalue ParmVar 0x5640b9a638f0 'x' 'IPAddress'
|-CXXConstructorDecl 0x5640b9a63ad0 <line:36:5, col:40> col:14 IP6Address 'void (const String &)'
| `-ParmVarDecl 0x5640b9a63a40 <col:25, col:39> col:39 x 'const String &'
|-CXXConstructorDecl 0x5640b9a63cf8 <line:39:5, line:41:5> line:39:21 IP6Address 'void (const struct in6_addr &)' inline
| |-ParmVarDecl 0x5640b9a63c00 <col:32, col:55> col:55 used x 'const struct in6_addr &'
| |-CXXCtorInitializer Field 0x5640b9a6ff28 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5640b9a722f0 <line:40:4, col:11> 'struct in6_addr':'in6_addr' 'void (const in6_addr &) noexcept'
| |   `-DeclRefExpr 0x5640b9a72178 <col:10> 'const struct in6_addr':'const in6_addr' lvalue ParmVar 0x5640b9a63c00 'x' 'const struct in6_addr &'
| `-CompoundStmt 0x5640b9a72350 <col:13, line:41:5>
|-CXXConstructorDecl 0x5640b9a63ec8 <line:44:5, line:46:5> line:44:21 IP6Address 'void (const struct in_addr &)' inline
| |-ParmVarDecl 0x5640b9a63e00 <col:32, col:54> col:54 used x 'const struct in_addr &'
| |-CXXCtorInitializer Field 0x5640b9a6ff28 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5640b9a72360 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5640b9a72470 <col:57, line:46:5>
|   `-CXXOperatorCallExpr 0x5640b9a72438 <line:45:2, col:10> 'IP6Address' lvalue
|     |-ImplicitCastExpr 0x5640b9a72420 <col:8> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5640b9a72400 <col:8> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x5640b9a6f8c8 'operator=' 'IP6Address &(const struct in_addr &)'
|     |-UnaryOperator 0x5640b9a723c8 <col:2, col:3> 'IP6Address' lvalue prefix '*' cannot overflow
|     | `-CXXThisExpr 0x5640b9a723b8 <col:3> 'IP6Address *' this
|     `-DeclRefExpr 0x5640b9a723e0 <col:10> 'const struct in_addr':'const in_addr' lvalue ParmVar 0x5640b9a63e00 'x' 'const struct in_addr &'
|-CXXConstructorDecl 0x5640b9a64018 <line:49:5, line:51:5> line:49:12 used IP6Address 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x5640b9a63f88 <col:23, col:49> col:49 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x5640b9a6ff28 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5640b9a72488 <col:12> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5640b9a72538 <col:57, line:51:5>
|   `-CStyleCastExpr 0x5640b9a72510 <line:50:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x5640b9a724e0 <col:9> 'const uninitialized_type' lvalue ParmVar 0x5640b9a63f88 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x5640b9a641a8 <line:62:5, col:49> col:23 make_prefix 'IP6Address (int)' static
| `-ParmVarDecl 0x5640b9a640e0 <col:35, col:39> col:39 prefix_len 'int'
|-CXXMethodDecl 0x5640b9a642f8 <line:69:5, col:58> col:23 used make_inverted_prefix 'IP6Address (int)' static
| `-ParmVarDecl 0x5640b9a64268 <col:44, col:48> col:48 prefix_len 'int'
|-TypedefDecl 0x5640b9a644a8 <line:71:5, col:61> col:36 referenced unspecified_bool_type 'uint32_t (IP6Address::*)() const'
| `-MemberPointerType 0x5640b9a64420 'uint32_t (IP6Address::*)() const'
|   |-RecordType 0x5640b9813270 'IP6Address'
|   | `-CXXRecord 0x5640b9a63490 'IP6Address'
|   `-ParenType 0x5640b9a643c0 'uint32_t () const' sugar
|     `-FunctionProtoType 0x5640b960b070 'uint32_t () const' const cdecl
|       `-TypedefType 0x5640b943ff60 'uint32_t' sugar
|         |-Typedef 0x5640b934e408 'uint32_t'
|         `-TypedefType 0x5640b9327440 '__uint32_t' sugar
|           |-Typedef 0x5640b9327038 '__uint32_t'
|           `-BuiltinType 0x5640b92e5410 'unsigned int'
|-CXXConversionDecl 0x5640b9a645e8 <line:72:5, col:45> col:12 used operator unsigned int (IP6Address::*)() const 'IP6Address::unspecified_bool_type () const' inline
|-CXXConversionDecl 0x5640b9a64770 <line:74:5, col:62> col:5 operator const in6_addr & 'const struct in6_addr &() const'
| `-CompoundStmt 0x5640b9a725a0 <col:46, col:62>
|   `-ReturnStmt 0x5640b9a72590 <col:48, col:55>
|     `-MemberExpr 0x5640b9a72560 <col:55> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5640b9a6ff28
|       `-CXXThisExpr 0x5640b9a72550 <col:55> 'const IP6Address *' implicit this
|-CXXConversionDecl 0x5640b9a64960 <line:75:5, col:50> col:5 operator in6_addr & 'struct in6_addr &()'
| `-CompoundStmt 0x5640b9a72608 <col:34, col:50>
|   `-ReturnStmt 0x5640b9a725f8 <col:36, col:43>
|     `-MemberExpr 0x5640b9a725c8 <col:43> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5640b9a6ff28
|       `-CXXThisExpr 0x5640b9a725b8 <col:43> 'IP6Address *' implicit this
|-CXXMethodDecl 0x5640b9a64a60 <line:76:5, col:61> col:28 in6_addr 'const struct in6_addr &() const'
| `-CompoundStmt 0x5640b9a72670 <col:45, col:61>
|   `-ReturnStmt 0x5640b9a72660 <col:47, col:54>
|     `-MemberExpr 0x5640b9a72630 <col:54> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5640b9a6ff28
|       `-CXXThisExpr 0x5640b9a72620 <col:54> 'const IP6Address *' implicit this
|-CXXMethodDecl 0x5640b9a64b38 <line:77:5, col:49> col:22 in6_addr 'struct in6_addr &()'
| `-CompoundStmt 0x5640b9a726d8 <col:33, col:49>
|   `-ReturnStmt 0x5640b9a726c8 <col:35, col:42>
|     `-MemberExpr 0x5640b9a72698 <col:42> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5640b9a6ff28
|       `-CXXThisExpr 0x5640b9a72688 <col:42> 'IP6Address *' implicit this
|-CXXMethodDecl 0x5640b9a64c00 <line:79:5, col:66> col:20 data 'unsigned char *()'
| `-CompoundStmt 0x5640b9a72810 <col:27, col:66>
|   `-ReturnStmt 0x5640b9a72800 <col:29, col:63>
|     `-UnaryOperator 0x5640b9a727e8 <col:36, col:63> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5640b9a727c8 <col:37, col:63> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5640b9a727b0 <col:37, col:51> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5640b9a72760 <col:37, col:51> 'uint8_t [16]' lvalue .__u6_addr8 0x5640b958b4f8
|         |   `-MemberExpr 0x5640b9a72730 <col:37, col:43> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5640b958b818
|         |     `-MemberExpr 0x5640b9a72700 <col:37> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5640b9a6ff28
|         |       `-CXXThisExpr 0x5640b9a726f0 <col:37> 'IP6Address *' implicit this
|         `-IntegerLiteral 0x5640b9a72790 <col:62> 'int' 0
|-CXXMethodDecl 0x5640b9a64cc8 <line:80:5, col:78> col:26 used data 'const unsigned char *() const'
| `-CompoundStmt 0x5640b9a72988 <col:39, col:78>
|   `-ReturnStmt 0x5640b9a72978 <col:41, col:75>
|     `-UnaryOperator 0x5640b9a72960 <col:48, col:75> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5640b9a72940 <col:49, col:75> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5640b9a72928 <col:49, col:63> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5640b9a72898 <col:49, col:63> 'uint8_t const[16]' lvalue .__u6_addr8 0x5640b958b4f8
|         |   `-MemberExpr 0x5640b9a72868 <col:49, col:55> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5640b958b818
|         |     `-MemberExpr 0x5640b9a72838 <col:49> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5640b9a6ff28
|         |       `-CXXThisExpr 0x5640b9a72828 <col:49> 'const IP6Address *' implicit this
|         `-IntegerLiteral 0x5640b9a728c8 <col:74> 'int' 0
|-CXXMethodDecl 0x5640b9a64de8 <line:81:5, col:75> col:15 used data16 'uint16_t *()'
| `-CompoundStmt 0x5640b9a72af8 <col:24, col:75>
|   `-ReturnStmt 0x5640b9a72ae8 <col:26, col:72>
|     `-CStyleCastExpr 0x5640b9a72ac0 <col:33, col:72> 'uint16_t *' <BitCast>
|       `-UnaryOperator 0x5640b9a72a98 <col:45, col:72> 'uint8_t *' prefix '&' cannot overflow
|         `-ArraySubscriptExpr 0x5640b9a72a78 <col:46, col:72> 'uint8_t':'unsigned char' lvalue
|           |-ImplicitCastExpr 0x5640b9a72a60 <col:46, col:60> 'uint8_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x5640b9a72a10 <col:46, col:60> 'uint8_t [16]' lvalue .__u6_addr8 0x5640b958b4f8
|           |   `-MemberExpr 0x5640b9a729e0 <col:46, col:52> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5640b958b818
|           |     `-MemberExpr 0x5640b9a729b0 <col:46> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5640b9a6ff28
|           |       `-CXXThisExpr 0x5640b9a729a0 <col:46> 'IP6Address *' implicit this
|           `-IntegerLiteral 0x5640b9a72a40 <col:71> 'int' 0
|-CXXMethodDecl 0x5640b9a64ea8 <line:82:5, col:87> col:21 data16 'const uint16_t *() const'
| `-CompoundStmt 0x5640b9a72c80 <col:36, col:87>
|   `-ReturnStmt 0x5640b9a72c70 <col:38, col:84>
|     `-ImplicitCastExpr 0x5640b9a72c58 <col:45, col:84> 'const uint16_t *' <NoOp>
|       `-CStyleCastExpr 0x5640b9a72c30 <col:45, col:84> 'uint16_t *' <BitCast>
|         `-UnaryOperator 0x5640b9a72c08 <col:57, col:84> 'const uint8_t *' prefix '&' cannot overflow
|           `-ArraySubscriptExpr 0x5640b9a72be8 <col:58, col:84> 'const uint8_t':'const unsigned char' lvalue
|             |-ImplicitCastExpr 0x5640b9a72bd0 <col:58, col:72> 'const uint8_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5640b9a72b80 <col:58, col:72> 'uint8_t const[16]' lvalue .__u6_addr8 0x5640b958b4f8
|             |   `-MemberExpr 0x5640b9a72b50 <col:58, col:64> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5640b958b818
|             |     `-MemberExpr 0x5640b9a72b20 <col:58> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5640b9a6ff28
|             |       `-CXXThisExpr 0x5640b9a72b10 <col:58> 'const IP6Address *' implicit this
|             `-IntegerLiteral 0x5640b9a72bb0 <col:83> 'int' 0
|-CXXMethodDecl 0x5640b9a64f68 <line:83:5, col:75> col:15 used data32 'uint32_t *()'
| `-CompoundStmt 0x5640b9a72df0 <col:24, col:75>
|   `-ReturnStmt 0x5640b9a72de0 <col:26, col:72>
|     `-CStyleCastExpr 0x5640b9a72db8 <col:33, col:72> 'uint32_t *' <BitCast>
|       `-UnaryOperator 0x5640b9a72d90 <col:45, col:72> 'uint8_t *' prefix '&' cannot overflow
|         `-ArraySubscriptExpr 0x5640b9a72d70 <col:46, col:72> 'uint8_t':'unsigned char' lvalue
|           |-ImplicitCastExpr 0x5640b9a72d58 <col:46, col:60> 'uint8_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x5640b9a72d08 <col:46, col:60> 'uint8_t [16]' lvalue .__u6_addr8 0x5640b958b4f8
|           |   `-MemberExpr 0x5640b9a72cd8 <col:46, col:52> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5640b958b818
|           |     `-MemberExpr 0x5640b9a72ca8 <col:46> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5640b9a6ff28
|           |       `-CXXThisExpr 0x5640b9a72c98 <col:46> 'IP6Address *' implicit this
|           `-IntegerLiteral 0x5640b9a72d38 <col:71> 'int' 0
|-CXXMethodDecl 0x5640b9a65028 <line:84:5, col:87> col:21 used data32 'const uint32_t *() const'
| `-CompoundStmt 0x5640b9a72f78 <col:36, col:87>
|   `-ReturnStmt 0x5640b9a72f68 <col:38, col:84>
|     `-ImplicitCastExpr 0x5640b9a72f50 <col:45, col:84> 'const uint32_t *' <NoOp>
|       `-CStyleCastExpr 0x5640b9a72f28 <col:45, col:84> 'uint32_t *' <BitCast>
|         `-UnaryOperator 0x5640b9a72f00 <col:57, col:84> 'const uint8_t *' prefix '&' cannot overflow
|           `-ArraySubscriptExpr 0x5640b9a72ee0 <col:58, col:84> 'const uint8_t':'const unsigned char' lvalue
|             |-ImplicitCastExpr 0x5640b9a72ec8 <col:58, col:72> 'const uint8_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5640b9a72e78 <col:58, col:72> 'uint8_t const[16]' lvalue .__u6_addr8 0x5640b958b4f8
|             |   `-MemberExpr 0x5640b9a72e48 <col:58, col:64> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5640b958b818
|             |     `-MemberExpr 0x5640b9a72e18 <col:58> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5640b9a6ff28
|             |       `-CXXThisExpr 0x5640b9a72e08 <col:58> 'const IP6Address *' implicit this
|             `-IntegerLiteral 0x5640b9a72ea8 <col:83> 'int' 0
|-CXXMethodDecl 0x5640b9a650e8 <line:86:5, col:32> col:21 used hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b9a651b0 <line:88:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x5640b9a653d8 <line:89:5, col:80> col:17 matches_prefix 'bool (const IP6Address &, const IP6Address &) const' inline
| |-ParmVarDecl 0x5640b9a65288 <col:32, col:50> col:50 addr 'const IP6Address &'
| `-ParmVarDecl 0x5640b9a65300 <col:56, col:74> col:74 mask 'const IP6Address &'
|-CXXMethodDecl 0x5640b9a65558 <line:90:5, col:54> col:17 mask_as_specific 'bool (const IP6Address &) const' inline
| `-ParmVarDecl 0x5640b9a65498 <col:34, col:51> col:52 'const IP6Address &'
|-CXXMethodDecl 0x5640b9a65620 <line:97:5, line:99:5> line:97:10 has_ether_address 'bool () const'
| `-CompoundStmt 0x5640b9a73290 <col:36, line:99:5>
|   `-ReturnStmt 0x5640b9a73280 <line:98:2, col:81>
|     `-BinaryOperator 0x5640b9a73260 <col:9, col:81> 'bool' '&&'
|       |-BinaryOperator 0x5640b9a730d8 <col:9, col:41> 'bool' '=='
|       | |-ImplicitCastExpr 0x5640b9a730c0 <col:9, col:36> 'int' <IntegralCast>
|       | | `-ImplicitCastExpr 0x5640b9a730a8 <col:9, col:36> 'uint8_t':'unsigned char' <LValueToRValue>
|       | |   `-ArraySubscriptExpr 0x5640b9a73068 <col:9, col:36> 'const uint8_t':'const unsigned char' lvalue
|       | |     |-ImplicitCastExpr 0x5640b9a73050 <col:9, col:23> 'const uint8_t *' <ArrayToPointerDecay>
|       | |     | `-MemberExpr 0x5640b9a73000 <col:9, col:23> 'uint8_t const[16]' lvalue .__u6_addr8 0x5640b958b4f8
|       | |     |   `-MemberExpr 0x5640b9a72fd0 <col:9, col:15> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5640b958b818
|       | |     |     `-MemberExpr 0x5640b9a72fa0 <col:9> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5640b9a6ff28
|       | |     |       `-CXXThisExpr 0x5640b9a72f90 <col:9> 'const IP6Address *' implicit this
|       | |     `-IntegerLiteral 0x5640b9a73030 <col:34> 'int' 11
|       | `-IntegerLiteral 0x5640b9a73088 <col:41> 'int' 255
|       `-BinaryOperator 0x5640b9a73240 <col:49, col:81> 'bool' '=='
|         |-ImplicitCastExpr 0x5640b9a73228 <col:49, col:76> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x5640b9a73210 <col:49, col:76> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x5640b9a731d0 <col:49, col:76> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x5640b9a731b8 <col:49, col:63> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x5640b9a73168 <col:49, col:63> 'uint8_t const[16]' lvalue .__u6_addr8 0x5640b958b4f8
|         |     |   `-MemberExpr 0x5640b9a73138 <col:49, col:55> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5640b958b818
|         |     |     `-MemberExpr 0x5640b9a73108 <col:49> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5640b9a6ff28
|         |     |       `-CXXThisExpr 0x5640b9a730f8 <col:49> 'const IP6Address *' implicit this
|         |     `-IntegerLiteral 0x5640b9a73198 <col:74> 'int' 12
|         `-IntegerLiteral 0x5640b9a731f0 <col:81> 'int' 254
|-CXXMethodDecl 0x5640b9a65798 <line:104:5, col:41> col:10 ether_address 'bool (EtherAddress &) const'
| `-ParmVarDecl 0x5640b9a656d0 <col:24, col:38> col:38 x 'EtherAddress &'
|-CXXMethodDecl 0x5640b9a65860 <line:111:5, line:114:5> line:111:17 is_ip4_compatible 'bool () const' inline
| `-CompoundStmt 0x5640b9a73778 <col:43, line:114:5>
|   `-ReturnStmt 0x5640b9a73768 <line:112:2, line:113:24>
|     `-BinaryOperator 0x5640b9a73748 <line:112:9, line:113:24> 'bool' '&&'
|       |-BinaryOperator 0x5640b9a735a8 <line:112:9, col:44> 'bool' '&&'
|       | |-BinaryOperator 0x5640b9a73408 <col:9, col:24> 'bool' '=='
|       | | |-ImplicitCastExpr 0x5640b9a733d8 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | | `-ArraySubscriptExpr 0x5640b9a73398 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|       | | |   |-CXXMemberCallExpr 0x5640b9a73358 <col:9, col:16> 'const uint32_t *'
|       | | |   | `-MemberExpr 0x5640b9a73328 <col:9> '<bound member function type>' ->data32 0x5640b9a65028
|       | | |   |   `-CXXThisExpr 0x5640b9a73318 <col:9> 'const IP6Address *' implicit this
|       | | |   `-IntegerLiteral 0x5640b9a73378 <col:18> 'int' 0
|       | | `-ImplicitCastExpr 0x5640b9a733f0 <col:24> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x5640b9a733b8 <col:24> 'int' 0
|       | `-BinaryOperator 0x5640b9a73588 <col:29, col:44> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5640b9a73558 <col:29, col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-ArraySubscriptExpr 0x5640b9a73518 <col:29, col:39> 'const uint32_t':'const unsigned int' lvalue
|       |   |   |-CXXMemberCallExpr 0x5640b9a734d8 <col:29, col:36> 'const uint32_t *'
|       |   |   | `-MemberExpr 0x5640b9a734a8 <col:29> '<bound member function type>' ->data32 0x5640b9a65028
|       |   |   |   `-CXXThisExpr 0x5640b9a73498 <col:29> 'const IP6Address *' implicit this
|       |   |   `-IntegerLiteral 0x5640b9a734f8 <col:38> 'int' 1
|       |   `-ImplicitCastExpr 0x5640b9a73570 <col:44> 'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x5640b9a73538 <col:44> 'int' 0
|       `-BinaryOperator 0x5640b9a73728 <line:113:9, col:24> 'bool' '=='
|         |-ImplicitCastExpr 0x5640b9a736f8 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x5640b9a736b8 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x5640b9a73678 <col:9, col:16> 'const uint32_t *'
|         |   | `-MemberExpr 0x5640b9a73648 <col:9> '<bound member function type>' ->data32 0x5640b9a65028
|         |   |   `-CXXThisExpr 0x5640b9a73638 <col:9> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x5640b9a73698 <col:18> 'int' 2
|         `-ImplicitCastExpr 0x5640b9a73710 <col:24> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x5640b9a736d8 <col:24> 'int' 0
|-CXXMethodDecl 0x5640b9a65920 <line:120:5, line:123:5> line:120:17 is_ip4_mapped 'bool () const' inline
| `-CompoundStmt 0x5640b9a73cf0 <col:39, line:123:5>
|   `-ReturnStmt 0x5640b9a73ce0 <line:121:2, line:122:41>
|     `-BinaryOperator 0x5640b9a73cc0 <line:121:9, line:122:41> 'bool' '&&'
|       |-BinaryOperator 0x5640b9a73a90 <line:121:9, col:44> 'bool' '&&'
|       | |-BinaryOperator 0x5640b9a738f0 <col:9, col:24> 'bool' '=='
|       | | |-ImplicitCastExpr 0x5640b9a738c0 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | | `-ArraySubscriptExpr 0x5640b9a73880 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|       | | |   |-CXXMemberCallExpr 0x5640b9a73840 <col:9, col:16> 'const uint32_t *'
|       | | |   | `-MemberExpr 0x5640b9a73810 <col:9> '<bound member function type>' ->data32 0x5640b9a65028
|       | | |   |   `-CXXThisExpr 0x5640b9a73800 <col:9> 'const IP6Address *' implicit this
|       | | |   `-IntegerLiteral 0x5640b9a73860 <col:18> 'int' 0
|       | | `-ImplicitCastExpr 0x5640b9a738d8 <col:24> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x5640b9a738a0 <col:24> 'int' 0
|       | `-BinaryOperator 0x5640b9a73a70 <col:29, col:44> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5640b9a73a40 <col:29, col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-ArraySubscriptExpr 0x5640b9a73a00 <col:29, col:39> 'const uint32_t':'const unsigned int' lvalue
|       |   |   |-CXXMemberCallExpr 0x5640b9a739c0 <col:29, col:36> 'const uint32_t *'
|       |   |   | `-MemberExpr 0x5640b9a73990 <col:29> '<bound member function type>' ->data32 0x5640b9a65028
|       |   |   |   `-CXXThisExpr 0x5640b9a73980 <col:29> 'const IP6Address *' implicit this
|       |   |   `-IntegerLiteral 0x5640b9a739e0 <col:38> 'int' 1
|       |   `-ImplicitCastExpr 0x5640b9a73a58 <col:44> 'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x5640b9a73a20 <col:44> 'int' 0
|       `-BinaryOperator 0x5640b9a73ca0 <line:122:9, col:41> 'bool' '=='
|         |-ImplicitCastExpr 0x5640b9a73c88 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x5640b9a73ba0 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x5640b9a73b60 <col:9, col:16> 'const uint32_t *'
|         |   | `-MemberExpr 0x5640b9a73b30 <col:9> '<bound member function type>' ->data32 0x5640b9a65028
|         |   |   `-CXXThisExpr 0x5640b9a73b20 <col:9> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x5640b9a73b80 <col:18> 'int' 2
|         `-CallExpr 0x5640b9a73c60 <col:24, col:41> 'uint32_t':'unsigned int'
|           |-ImplicitCastExpr 0x5640b9a73c48 <col:24> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x5640b9a73c28 <col:24> 'uint32_t (uint32_t) throw()' lvalue Function 0x5640b958f688 'htonl' 'uint32_t (uint32_t) throw()'
|           `-IntegerLiteral 0x5640b9a73c08 <col:30> 'unsigned int' 65535
|-CXXMethodDecl 0x5640b9a659e0 <line:129:5, line:131:5> line:129:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x5640b9a73e80 <col:38, line:131:5>
|   `-ReturnStmt 0x5640b9a73e70 <line:130:9, col:47>
|     `-BinaryOperator 0x5640b9a73e50 <col:16, col:47> 'bool' '=='
|       |-ImplicitCastExpr 0x5640b9a73e38 <col:16, col:42> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x5640b9a73e20 <col:16, col:42> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x5640b9a73de0 <col:16, col:42> 'const uint8_t':'const unsigned char' lvalue
|       |     |-ImplicitCastExpr 0x5640b9a73dc8 <col:16, col:30> 'const uint8_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x5640b9a73d78 <col:16, col:30> 'uint8_t const[16]' lvalue .__u6_addr8 0x5640b958b4f8
|       |     |   `-MemberExpr 0x5640b9a73d48 <col:16, col:22> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5640b958b818
|       |     |     `-MemberExpr 0x5640b9a73d18 <col:16> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5640b9a6ff28
|       |     |       `-CXXThisExpr 0x5640b9a73d08 <col:16> 'const IP6Address *' implicit this
|       |     `-IntegerLiteral 0x5640b9a73da8 <col:41> 'int' 0
|       `-IntegerLiteral 0x5640b9a73e00 <col:47> 'int' 255
|-CXXMethodDecl 0x5640b9a65aa0 <line:137:5, line:139:5> line:137:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x5640b9a74258 <col:39, line:139:5>
|   `-ReturnStmt 0x5640b9a74248 <line:138:9, col:67>
|     `-BinaryOperator 0x5640b9a74228 <col:16, col:67> 'bool' '&&'
|       |-BinaryOperator 0x5640b9a74088 <col:16, col:47> 'bool' '=='
|       | |-ImplicitCastExpr 0x5640b9a74070 <col:16, col:26> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | `-ArraySubscriptExpr 0x5640b9a73f88 <col:16, col:26> 'const uint32_t':'const unsigned int' lvalue
|       | |   |-CXXMemberCallExpr 0x5640b9a73f48 <col:16, col:23> 'const uint32_t *'
|       | |   | `-MemberExpr 0x5640b9a73f18 <col:16> '<bound member function type>' ->data32 0x5640b9a65028
|       | |   |   `-CXXThisExpr 0x5640b9a73f08 <col:16> 'const IP6Address *' implicit this
|       | |   `-IntegerLiteral 0x5640b9a73f68 <col:25> 'int' 0
|       | `-CallExpr 0x5640b9a74048 <col:31, col:47> 'uint32_t':'unsigned int'
|       |   |-ImplicitCastExpr 0x5640b9a74030 <col:31> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5640b9a74010 <col:31> 'uint32_t (uint32_t) throw()' lvalue Function 0x5640b958f688 'htonl' 'uint32_t (uint32_t) throw()'
|       |   `-IntegerLiteral 0x5640b9a73ff0 <col:37> 'unsigned int' 4269801472
|       `-BinaryOperator 0x5640b9a74208 <col:52, col:67> 'bool' '=='
|         |-ImplicitCastExpr 0x5640b9a741d8 <col:52, col:62> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x5640b9a74198 <col:52, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x5640b9a74158 <col:52, col:59> 'const uint32_t *'
|         |   | `-MemberExpr 0x5640b9a74128 <col:52> '<bound member function type>' ->data32 0x5640b9a65028
|         |   |   `-CXXThisExpr 0x5640b9a74118 <col:52> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x5640b9a74178 <col:61> 'int' 1
|         `-ImplicitCastExpr 0x5640b9a741f0 <col:67> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x5640b9a741b8 <col:67> 'int' 0
|-CXXMethodDecl 0x5640b9a65b60 <line:145:5, col:29> col:15 ip4_address 'IPAddress () const'
|-CXXMethodDecl 0x5640b9a65d08 <line:154:5, col:53> col:24 operator&= 'IP6Address &(const IP6Address &)' inline
| `-ParmVarDecl 0x5640b9a65c10 <col:35, col:52> col:53 'const IP6Address &'
|-CXXMethodDecl 0x5640b9a65ec8 <line:155:5, col:58> col:24 operator&= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x5640b9a65dd8 <col:35, col:57> col:58 'const struct in6_addr &'
|-CXXMethodDecl 0x5640b9a66010 <line:156:5, col:53> col:24 operator|= 'IP6Address &(const IP6Address &)' inline
| `-ParmVarDecl 0x5640b9a65f80 <col:35, col:52> col:53 'const IP6Address &'
|-CXXMethodDecl 0x5640b9a6f5a0 <line:157:5, col:58> col:24 operator|= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x5640b9a6f510 <col:35, col:57> col:58 'const struct in6_addr &'
|-CXXMethodDecl 0x5640b9a6f700 <line:159:5, col:57> col:24 operator= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x5640b9a6f670 <col:34, col:56> col:57 'const struct in6_addr &'
|-CXXMethodDecl 0x5640b9a6f8c8 <line:160:5, col:56> col:24 used operator= 'IP6Address &(const struct in_addr &)' inline
| `-ParmVarDecl 0x5640b9a6f7d0 <col:34, col:55> col:56 'const struct in_addr &'
|-CXXMethodDecl 0x5640b9a6fa48 <line:162:5, col:35> col:10 used unparse 'void (StringAccum &) const'
| `-ParmVarDecl 0x5640b9a6f980 <col:18, col:31> col:31 sa 'StringAccum &'
|-CXXMethodDecl 0x5640b9a6fb10 <line:163:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x5640b9a6fbd0 <line:164:5, col:31> col:12 unparse_expanded 'String () const'
|-CXXMethodDecl 0x5640b9a6fc90 <line:166:5, col:42> col:12 s 'String () const'
| `-CompoundStmt 0x5640b9a743d8 <col:22, col:42>
|   `-ReturnStmt 0x5640b9a743c8 <col:24, col:39>
|     `-ExprWithCleanups 0x5640b9a743b0 <col:31, col:39> 'String'
|       `-CXXConstructExpr 0x5640b9a74380 <col:31, col:39> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5640b9a74368 <col:31, col:39> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5640b9a74348 <col:31, col:39> 'String' (CXXTemporary 0x5640b9a74348)
|             `-CXXMemberCallExpr 0x5640b9a74320 <col:31, col:39> 'String'
|               `-MemberExpr 0x5640b9a742f0 <col:31> '<bound member function type>' ->unparse 0x5640b9a6fb10
|                 `-CXXThisExpr 0x5640b9a742e0 <col:31> 'const IP6Address *' implicit this
|-CXXConversionDecl 0x5640b9a6fd60 <line:167:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x5640b9a6fe08 <col:51> "" ""
|-TypedefDecl 0x5640b9a6fe88 <line:169:5, col:31> col:31 parameter_type 'const IP6Address &'
| `-LValueReferenceType 0x5640b9a65250 'const IP6Address &'
|   `-QualType 0x5640b9813271 'const IP6Address' const
|     `-RecordType 0x5640b9813270 'IP6Address'
|       `-CXXRecord 0x5640b9a63490 'IP6Address'
|-AccessSpecDecl 0x5640b9a6fee0 <line:171:3, col:10> col:3 private
|-FieldDecl 0x5640b9a6ff28 <line:173:5, col:21> col:21 referenced _addr 'struct in6_addr':'in6_addr'
|-CXXMethodDecl 0x5640b9a70e60 <line:14:7> col:7 implicit operator= 'IP6Address &(const IP6Address &)' inline default trivial noexcept-unevaluated 0x5640b9a70e60
| `-ParmVarDecl 0x5640b9a70f38 <col:7> col:7 'const IP6Address &'
|-CXXMethodDecl 0x5640b9a71608 <col:7> col:7 implicit operator= 'IP6Address &(IP6Address &&)' inline default trivial noexcept-unevaluated 0x5640b9a71608
| `-ParmVarDecl 0x5640b9a71718 <col:7> col:7 'IP6Address &&'
|-CXXConstructorDecl 0x5640b9a71788 <col:7> col:7 implicit constexpr IP6Address 'void (const IP6Address &)' inline default trivial noexcept-unevaluated 0x5640b9a71788
| `-ParmVarDecl 0x5640b9a71898 <col:7> col:7 'const IP6Address &'
|-CXXConstructorDecl 0x5640b9a719f0 <col:7> col:7 implicit used constexpr IP6Address 'void (IP6Address &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9a71b08 <col:7> col:7 used 'IP6Address &&'
| |-CXXCtorInitializer Field 0x5640b9a6ff28 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5640b9a7e148 <col:7> 'struct in6_addr':'in6_addr' 'void (in6_addr &&) noexcept'
| |   `-MemberExpr 0x5640b9a7dff0 <col:7> 'struct in6_addr':'in6_addr' xvalue ._addr 0x5640b9a6ff28
| |     `-CXXStaticCastExpr 0x5640b9a7dfc0 <col:7> 'IP6Address' xvalue static_cast<class IP6Address &&> <NoOp>
| |       `-DeclRefExpr 0x5640b9a7df90 <col:7> 'IP6Address' lvalue ParmVar 0x5640b9a71b08 '' 'IP6Address &&'
| `-CompoundStmt 0x5640b9a7e1a8 <col:7>
`-CXXDestructorDecl 0x5640b9a7ddf8 <col:7> col:7 implicit referenced ~IP6Address 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IP6Address = type { %struct.in6_addr }
  NonVirtualBaseLLVMType:%class.IP6Address = type { %struct.in6_addr }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9a88178 <../elements/standard/addressinfo.cc:99:5, line:104:5> line:99:12 referenced struct ip6parts definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5640b9a88298 <col:5, col:12> col:12 implicit referenced struct ip6parts
|-FieldDecl 0x5640b9a88338 <line:100:2, col:13> col:13 referenced ip6 'IP6Address'
|-FieldDecl 0x5640b9a883a0 <line:101:2, col:6> col:6 referenced plen 'int'
|-CXXConstructorDecl 0x5640b9a88450 <line:102:2, line:103:2> line:102:2 used ip6parts 'void ()'
| |-CXXCtorInitializer Field 0x5640b9a88338 'ip6' 'IP6Address'
| | `-ExprWithCleanups 0x5640b9a88618 <col:15, col:48> 'IP6Address'
| |   `-CXXConstructExpr 0x5640b9a885e8 <col:15, col:48> 'IP6Address' 'void (const uninitialized_type &)'
| |     `-MaterializeTemporaryExpr 0x5640b9a885d0 <col:19, col:47> 'const IP6Address::uninitialized_t':'const uninitialized_type' lvalue
| |       `-ImplicitCastExpr 0x5640b9a885b8 <col:19, col:47> 'const IP6Address::uninitialized_t':'const uninitialized_type' <NoOp>
| |         `-CXXTemporaryObjectExpr 0x5640b9a88568 <col:19, col:47> 'IP6Address::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
| `-CompoundStmt 0x5640b9a88660 <col:50, line:103:2>
|-CXXConstructorDecl 0x5640b9a88728 <line:99:12> col:12 implicit constexpr ip6parts 'void (const ip6parts &)' inline default trivial noexcept-unevaluated 0x5640b9a88728
| `-ParmVarDecl 0x5640b9a88838 <col:12> col:12 'const ip6parts &'
`-CXXConstructorDecl 0x5640b9a888d8 <col:12> col:12 implicit constexpr ip6parts 'void (ip6parts &&)' inline default trivial noexcept-unevaluated 0x5640b9a888d8
  `-ParmVarDecl 0x5640b9a889e8 <col:12> col:12 'ip6parts &&'

Layout: <CGRecordLayout
  LLVMType:%struct.ip6parts = type { %class.IP6Address, i32 }
  NonVirtualBaseLLVMType:%struct.ip6parts = type { %class.IP6Address, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b97ce158 prev 0x5640b9811a78 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5640b97ce250 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x5640b97ce2e0 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x5640b97ce418 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x5640b97ce318 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x5640b97cf840 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x5640b97cf820 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x5640b97cf3b8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x5640b97cf8d0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x5640b97cf890 <col:17> 'ErrorHandler *' lvalue ParmVar 0x5640b97ce318 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x5640b97cf420 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x5640b97cf950 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x5640b97cf910 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x5640b97cf480 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x5640b97cf990 <col:54> 'bool' false
| `-CompoundStmt 0x5640b97cfa98 <col:61, line:38:5>
|   `-BinaryOperator 0x5640b97cfa78 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x5640b97cfa10 <col:9> 'const Element *' lvalue ->_context 0x5640b97cf358
|     | `-CXXThisExpr 0x5640b97cfa00 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x5640b97cfa60 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x5640b97cfa40 <col:20> 'int' 0
|-CXXConstructorDecl 0x5640b97ce628 <line:44:5, line:46:5> line:44:5 used ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x5640b97ce4d8 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x5640b97ce550 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x5640b97cf878 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x5640b97cf858 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x5640b97cf358 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x5640b97cfaf0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x5640b97cfab0 <col:20> 'const Element *' lvalue ParmVar 0x5640b97ce4d8 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x5640b97cf3b8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x5640b97cfb70 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x5640b97cfb30 <col:36> 'ErrorHandler *' lvalue ParmVar 0x5640b97ce550 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x5640b97cf420 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x5640b97cfbf0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x5640b97cfbb0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x5640b97cf480 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x5640b97cfc30 <col:73> 'bool' false
| `-CompoundStmt 0x5640b97cfca8 <col:80, line:46:5>
|-CXXMethodDecl 0x5640b97ce758 <line:49:5, line:51:5> line:49:20 used context 'const Element *() const'
| `-CompoundStmt 0x5640b97cfd20 <col:36, line:51:5>
|   `-ReturnStmt 0x5640b97cfd10 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x5640b97cfcf8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x5640b97cfcc8 <col:16> 'const Element *const' lvalue ->_context 0x5640b97cf358
|         `-CXXThisExpr 0x5640b97cfcb8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x5640b97ce848 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x5640b97cfda0 <col:32, line:57:5>
|   `-ReturnStmt 0x5640b97cfd90 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x5640b97cfd78 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x5640b97cfd48 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x5640b97cf3b8
|         `-CXXThisExpr 0x5640b97cfd38 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x5640b97ce908 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x5640b97cea90 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x5640b97ce9c0 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5640b97cebe0 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x5640b97ceb50 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5640b97ced30 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x5640b97ceca0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5640b97cef38 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x5640b97cede8 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x5640b97cee60 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x5640b97cf268 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x5640b97ceff8 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x5640b97cf078 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x5640b97cf140 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x5640b97cf320 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x5640b97cf358 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x5640b97cf3b8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x5640b97cf420 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x5640b97cf480 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x5640b97cf4d0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x5640b97cf4d0
| `-ParmVarDecl 0x5640b97cf5e8 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x5640b97cf688 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x5640b97cf688
| `-ParmVarDecl 0x5640b97cf798 <col:7> col:7 'const ArgContext &'
`-CXXConstructorDecl 0x5640b9a88b68 <col:7> col:7 implicit constexpr ArgContext 'void (ArgContext &&)' inline default trivial noexcept-unevaluated 0x5640b9a88b68
  `-ParmVarDecl 0x5640b9a88c78 <col:7> col:7 'ArgContext &&'

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class EtherAddressArg
         0 |   int flags_
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9704dc0 <../dummy_inc/click/etheraddress.hh:205:1, line:224:1> line:205:7 referenced class EtherAddressArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b9704ed8 <col:1, col:7> col:7 implicit referenced class EtherAddressArg
|-AccessSpecDecl 0x5640b9704f68 <col:25, col:31> col:25 public
|-TypedefDecl 0x5640b9704fa0 <line:206:5, col:18> col:18 enable_direct_parse 'void'
| `-BuiltinType 0x5640b92e52d0 'void'
|-CXXConstructorDecl 0x5640b97050e8 <line:207:5, col:53> col:5 used EtherAddressArg 'void (int)'
| |-ParmVarDecl 0x5640b9705010 <col:21, col:33> col:25 used flags 'int' cinit
| | `-IntegerLiteral 0x5640b9706350 <col:33> 'int' 0
| |-CXXCtorInitializer Field 0x5640b9705c80 'flags_' 'int'
| | `-ImplicitCastExpr 0x5640b97063f0 <col:45> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x5640b97063b0 <col:45> 'int' lvalue ParmVar 0x5640b9705010 'flags' 'int'
| `-CompoundStmt 0x5640b9706438 <col:52, col:53>
|-CXXMethodDecl 0x5640b97053a8 <line:208:5, line:210:5> line:208:17 used parse 'bool (const String &, EtherAddress &, const ArgContext &)' inline
| |-ParmVarDecl 0x5640b97051a8 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x5640b9705248 <col:42, col:56> col:56 used value 'EtherAddress &'
| |-ParmVarDecl 0x5640b97052c0 <col:63, col:88> col:81 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x5640b9706370 <col:88> 'const ArgContext' lvalue Var 0x5640b9704d58 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x5640b9706618 <col:100, line:210:5>
|   `-ReturnStmt 0x5640b9706608 <line:209:9, col:46>
|     `-CallExpr 0x5640b97065b0 <col:16, col:46> 'bool'
|       |-ImplicitCastExpr 0x5640b9706598 <col:16> 'bool (*)(const String &, EtherAddress &, const ArgContext &, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b9706550 <col:16> 'bool (const String &, EtherAddress &, const ArgContext &, int)' lvalue CXXMethod 0x5640b9705f48 'parse' 'bool (const String &, EtherAddress &, const ArgContext &, int)'
|       |-DeclRefExpr 0x5640b97064b0 <col:22> 'const String' lvalue ParmVar 0x5640b97051a8 'str' 'const String &'
|       |-DeclRefExpr 0x5640b97064d0 <col:27> 'EtherAddress' lvalue ParmVar 0x5640b9705248 'value' 'EtherAddress &'
|       |-DeclRefExpr 0x5640b97064f0 <col:34> 'const ArgContext' lvalue ParmVar 0x5640b97052c0 'args' 'const ArgContext &'
|       `-ImplicitCastExpr 0x5640b97065f0 <col:40> 'int' <LValueToRValue>
|         `-MemberExpr 0x5640b9706520 <col:40> 'int' lvalue ->flags_ 0x5640b9705c80
|           `-CXXThisExpr 0x5640b9706510 <col:40> 'EtherAddressArg *' implicit this
|-CXXMethodDecl 0x5640b9705648 <line:211:5, line:213:5> line:211:17 used parse 'bool (const String &, unsigned char *, const ArgContext &)' inline
| |-ParmVarDecl 0x5640b9705470 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x5640b97054f0 <col:42, col:57> col:57 used value 'unsigned char *'
| |-ParmVarDecl 0x5640b9705568 <col:64, col:89> col:82 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x5640b9706390 <col:89> 'const ArgContext' lvalue Var 0x5640b9704d58 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x5640b97067f0 <col:101, line:213:5>
|   `-ReturnStmt 0x5640b97067e0 <line:212:2, col:66>
|     `-CXXMemberCallExpr 0x5640b97067a8 <col:9, col:66> 'bool'
|       |-MemberExpr 0x5640b9706778 <col:9> '<bound member function type>' ->parse 0x5640b97053a8
|       | `-CXXThisExpr 0x5640b9706768 <col:9> 'EtherAddressArg *' implicit this
|       |-DeclRefExpr 0x5640b9706698 <col:15> 'const String' lvalue ParmVar 0x5640b9705470 'str' 'const String &'
|       |-UnaryOperator 0x5640b9706730 <col:20, col:59> 'EtherAddress' lvalue prefix '*' cannot overflow
|       | `-CXXReinterpretCastExpr 0x5640b9706700 <col:21, col:59> 'EtherAddress *' reinterpret_cast<class EtherAddress *> <BitCast>
|       |   `-ImplicitCastExpr 0x5640b97066e8 <col:54> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|       |     `-DeclRefExpr 0x5640b97066b8 <col:54> 'unsigned char *' lvalue ParmVar 0x5640b97054f0 'value' 'unsigned char *'
|       `-DeclRefExpr 0x5640b9706748 <col:62> 'const ArgContext' lvalue ParmVar 0x5640b9705568 'args' 'const ArgContext &'
|-CXXMethodDecl 0x5640b97058e8 <line:214:5, line:216:5> line:214:17 used direct_parse 'bool (const String &, EtherAddress &, Args &)' inline
| |-ParmVarDecl 0x5640b9705710 <col:30, col:44> col:44 used str 'const String &'
| |-ParmVarDecl 0x5640b9705788 <col:49, col:63> col:63 used value 'EtherAddress &'
| |-ParmVarDecl 0x5640b9705800 <col:70, col:76> col:76 used args 'Args &'
| `-CompoundStmt 0x5640b97069d8 <col:82, line:216:5>
|   `-ReturnStmt 0x5640b97069c8 <line:215:9, col:53>
|     `-CallExpr 0x5640b9706970 <col:16, col:53> 'bool'
|       |-ImplicitCastExpr 0x5640b9706958 <col:16> 'bool (*)(const String &, EtherAddress &, Args &, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b9706910 <col:16> 'bool (const String &, EtherAddress &, Args &, int)' lvalue CXXMethod 0x5640b9706278 'direct_parse' 'bool (const String &, EtherAddress &, Args &, int)'
|       |-DeclRefExpr 0x5640b9706870 <col:29> 'const String' lvalue ParmVar 0x5640b9705710 'str' 'const String &'
|       |-DeclRefExpr 0x5640b9706890 <col:34> 'EtherAddress' lvalue ParmVar 0x5640b9705788 'value' 'EtherAddress &'
|       |-DeclRefExpr 0x5640b97068b0 <col:41> 'Args' lvalue ParmVar 0x5640b9705800 'args' 'Args &'
|       `-ImplicitCastExpr 0x5640b97069b0 <col:47> 'int' <LValueToRValue>
|         `-MemberExpr 0x5640b97068e0 <col:47> 'int' lvalue ->flags_ 0x5640b9705c80
|           `-CXXThisExpr 0x5640b97068d0 <col:47> 'EtherAddressArg *' implicit this
|-CXXMethodDecl 0x5640b9705b88 <line:217:5, line:219:5> line:217:17 direct_parse 'bool (const String &, unsigned char *, Args &)' inline
| |-ParmVarDecl 0x5640b97059b0 <col:30, col:44> col:44 used str 'const String &'
| |-ParmVarDecl 0x5640b9705a30 <col:49, col:64> col:64 used value 'unsigned char *'
| |-ParmVarDecl 0x5640b9705aa8 <col:71, col:77> col:77 used args 'Args &'
| `-CompoundStmt 0x5640b9706bb0 <col:83, line:219:5>
|   `-ReturnStmt 0x5640b9706ba0 <line:218:2, col:73>
|     `-CXXMemberCallExpr 0x5640b9706b68 <col:9, col:73> 'bool'
|       |-MemberExpr 0x5640b9706b38 <col:9> '<bound member function type>' ->direct_parse 0x5640b97058e8
|       | `-CXXThisExpr 0x5640b9706b28 <col:9> 'EtherAddressArg *' implicit this
|       |-DeclRefExpr 0x5640b9706a58 <col:22> 'const String' lvalue ParmVar 0x5640b97059b0 'str' 'const String &'
|       |-UnaryOperator 0x5640b9706af0 <col:27, col:66> 'EtherAddress' lvalue prefix '*' cannot overflow
|       | `-CXXReinterpretCastExpr 0x5640b9706ac0 <col:28, col:66> 'EtherAddress *' reinterpret_cast<class EtherAddress *> <BitCast>
|       |   `-ImplicitCastExpr 0x5640b9706aa8 <col:61> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|       |     `-DeclRefExpr 0x5640b9706a78 <col:61> 'unsigned char *' lvalue ParmVar 0x5640b9705a30 'value' 'unsigned char *'
|       `-DeclRefExpr 0x5640b9706b08 <col:69> 'Args' lvalue ParmVar 0x5640b9705aa8 'args' 'Args &'
|-AccessSpecDecl 0x5640b9705c40 <line:220:3, col:10> col:3 private
|-FieldDecl 0x5640b9705c80 <line:221:5, col:9> col:9 referenced flags_ 'int'
|-CXXMethodDecl 0x5640b9705f48 <line:222:5, col:96> col:17 used parse 'bool (const String &, EtherAddress &, const ArgContext &, int)' static
| |-ParmVarDecl 0x5640b9705ce0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x5640b9705d58 <col:42, col:56> col:56 value 'EtherAddress &'
| |-ParmVarDecl 0x5640b9705dd0 <col:63, col:81> col:81 args 'const ArgContext &'
| `-ParmVarDecl 0x5640b9705e50 <col:87, col:91> col:91 flags 'int'
|-CXXMethodDecl 0x5640b9706278 <line:223:5, col:91> col:17 used direct_parse 'bool (const String &, EtherAddress &, Args &, int)' static
| |-ParmVarDecl 0x5640b9706018 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x5640b9706090 <col:49, col:63> col:63 value 'EtherAddress &'
| |-ParmVarDecl 0x5640b9706108 <col:70, col:76> col:76 args 'Args &'
| `-ParmVarDecl 0x5640b9706188 <col:82, col:86> col:86 flags 'int'
|-CXXConstructorDecl 0x5640b9a89938 <line:205:7> col:7 implicit constexpr EtherAddressArg 'void (const EtherAddressArg &)' inline default trivial noexcept-unevaluated 0x5640b9a89938
| `-ParmVarDecl 0x5640b9a89a48 <col:7> col:7 'const EtherAddressArg &'
|-CXXConstructorDecl 0x5640b9a89ae8 <col:7> col:7 implicit constexpr EtherAddressArg 'void (EtherAddressArg &&)' inline default trivial noexcept-unevaluated 0x5640b9a89ae8
| `-ParmVarDecl 0x5640b9a89bf8 <col:7> col:7 'EtherAddressArg &&'
`-CXXDestructorDecl 0x5640b9a89cc0 <col:7> col:7 implicit referenced ~EtherAddressArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.EtherAddressArg = type { i32 }
  NonVirtualBaseLLVMType:%class.EtherAddressArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9659d30 prev 0x5640b964d128 <../dummy_inc/click/ipaddress.hh:367:1, line:378:1> line:367:7 referenced class IPAddressArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b9659e28 <col:1, col:7> col:7 implicit class IPAddressArg
|-AccessSpecDecl 0x5640b9659eb8 <col:22, col:28> col:22 public
|-CXXMethodDecl 0x5640b965a2e0 <line:368:5, line:369:43> line:368:24 basic_parse 'const char *(const char *, const char *, unsigned char *, int &)' static
| |-ParmVarDecl 0x5640b9659ef8 <col:36, col:48> col:48 begin 'const char *'
| |-ParmVarDecl 0x5640b9659f78 <col:55, col:67> col:67 end 'const char *'
| |-ParmVarDecl 0x5640b965a0b0 <line:369:8, col:29> col:22 value 'unsigned char *':'unsigned char *'
| `-ParmVarDecl 0x5640b965a160 <col:32, col:37> col:37 nbytes 'int &'
|-CXXMethodDecl 0x5640b965a5a8 <line:370:5, line:371:44> line:370:17 used parse 'bool (const String &, IPAddress &, const ArgContext &)' static
| |-ParmVarDecl 0x5640b965a3b0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x5640b965a428 <col:42, col:53> col:53 result 'IPAddress &'
| `-ParmVarDecl 0x5640b965a4c8 <line:371:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x5640b965ef48 <col:34> 'const ArgContext' lvalue Var 0x5640b964d0c0 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x5640b965e9a0 <line:372:5, line:375:5> line:372:17 used parse 'bool (const String &, struct in_addr &, const ArgContext &)' static
| |-ParmVarDecl 0x5640b965a670 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x5640b965a760 <col:42, col:58> col:58 used result 'struct in_addr &'
| |-ParmVarDecl 0x5640b965a7d8 <line:373:9, col:34> col:27 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x5640b965ef68 <col:34> 'const ArgContext' lvalue Var 0x5640b964d0c0 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x5640b965f148 <col:46, line:375:5>
|   `-ReturnStmt 0x5640b965f138 <line:374:2, col:63>
|     `-CallExpr 0x5640b965f100 <col:9, col:63> 'bool'
|       |-ImplicitCastExpr 0x5640b965f0e8 <col:9> 'bool (*)(const String &, IPAddress &, const ArgContext &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b965f0a0 <col:9> 'bool (const String &, IPAddress &, const ArgContext &)' lvalue CXXMethod 0x5640b965a5a8 'parse' 'bool (const String &, IPAddress &, const ArgContext &)'
|       |-DeclRefExpr 0x5640b965f000 <col:15> 'const String' lvalue ParmVar 0x5640b965a670 'str' 'const String &'
|       |-CXXReinterpretCastExpr 0x5640b965f050 <col:20, col:56> 'IPAddress' lvalue reinterpret_cast<class IPAddress &> <LValueBitCast>
|       | `-DeclRefExpr 0x5640b965f020 <col:50> 'struct in_addr':'in_addr' lvalue ParmVar 0x5640b965a760 'result' 'struct in_addr &'
|       `-DeclRefExpr 0x5640b965f080 <col:59> 'const ArgContext' lvalue ParmVar 0x5640b965a7d8 'args' 'const ArgContext &'
|-CXXMethodDecl 0x5640b965ee78 <line:376:5, line:377:44> line:376:17 parse 'bool (const String &, Vector<IPAddress> &, const ArgContext &)' static
| |-ParmVarDecl 0x5640b965ea68 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x5640b965ece0 <col:42, col:61> col:61 result 'Vector<IPAddress> &'
| `-ParmVarDecl 0x5640b965ed58 <line:377:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x5640b965ef88 <col:34> 'const ArgContext' lvalue Var 0x5640b964d0c0 'blank_args' 'const ArgContext'
|-CXXConstructorDecl 0x5640b9aa2780 <line:367:7> col:7 implicit referenced constexpr IPAddressArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5640b9aa2888 <col:7> col:7 implicit constexpr IPAddressArg 'void (const IPAddressArg &)' inline default trivial noexcept-unevaluated 0x5640b9aa2888
| `-ParmVarDecl 0x5640b9aa2998 <col:7> col:7 'const IPAddressArg &'
|-CXXConstructorDecl 0x5640b9aa2a38 <col:7> col:7 implicit constexpr IPAddressArg 'void (IPAddressArg &&)' inline default trivial noexcept-unevaluated 0x5640b9aa2a38
| `-ParmVarDecl 0x5640b9aa2b48 <col:7> col:7 'IPAddressArg &&'
`-CXXDestructorDecl 0x5640b9aa2be8 <col:7> col:7 implicit referenced ~IPAddressArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPAddressArg = type { i8 }
  NonVirtualBaseLLVMType:%class.IPAddressArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPPrefixArg
         0 |   _Bool allow_bare_address
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b965f160 <../dummy_inc/click/ipaddress.hh:382:1, line:396:1> line:382:7 referenced class IPPrefixArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b965f278 <col:1, col:7> col:7 implicit referenced class IPPrefixArg
|-AccessSpecDecl 0x5640b965f308 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x5640b965f418 <line:383:5, line:385:5> line:383:5 used IPPrefixArg 'void (bool)'
| |-ParmVarDecl 0x5640b965f340 <col:17, col:44> col:22 used allow_bare_address_ 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5640b965fc50 <col:44> 'bool' false
| |-CXXCtorInitializer Field 0x5640b965fbe8 'allow_bare_address' 'bool'
| | `-ImplicitCastExpr 0x5640b965fce0 <line:384:23> 'bool' <LValueToRValue>
| |   `-DeclRefExpr 0x5640b965fca0 <col:23> 'bool' lvalue ParmVar 0x5640b965f340 'allow_bare_address_' 'bool'
| `-CompoundStmt 0x5640b965fd28 <col:44, line:385:5>
|-CXXMethodDecl 0x5640b965f768 <line:386:5, line:388:46> line:386:10 used parse 'bool (const String &, IPAddress &, IPAddress &, const ArgContext &) const'
| |-ParmVarDecl 0x5640b965f4d8 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x5640b965f550 <line:387:9, col:20> col:20 result_addr 'IPAddress &'
| |-ParmVarDecl 0x5640b965f5c8 <col:33, col:44> col:44 result_mask 'IPAddress &'
| `-ParmVarDecl 0x5640b965f640 <line:388:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x5640b965fc60 <col:34> 'const ArgContext' lvalue Var 0x5640b964d0c0 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x5640b965fb18 <line:389:5, line:394:5> line:389:10 used parse 'bool (const String &, struct in_addr &, struct in_addr &, const ArgContext &) const'
| |-ParmVarDecl 0x5640b965f838 <col:16, col:30> col:30 used str 'const String &'
| |-ParmVarDecl 0x5640b965f8c8 <line:390:9, col:25> col:25 used result_addr 'struct in_addr &'
| |-ParmVarDecl 0x5640b965f958 <col:38, col:54> col:54 used result_mask 'struct in_addr &'
| |-ParmVarDecl 0x5640b965f9d0 <line:391:9, col:34> col:27 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x5640b965fc80 <col:34> 'const ArgContext' lvalue Var 0x5640b964d0c0 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x5640b965ff38 <col:52, line:394:5>
|   `-ReturnStmt 0x5640b965ff28 <line:392:2, line:393:56>
|     `-CXXMemberCallExpr 0x5640b965fee8 <line:392:9, line:393:56> 'bool'
|       |-MemberExpr 0x5640b965feb8 <line:392:9> '<bound member function type>' ->parse 0x5640b965f768
|       | `-CXXThisExpr 0x5640b965fea8 <col:9> 'const IPPrefixArg *' implicit this
|       |-DeclRefExpr 0x5640b965fda8 <col:15> 'const String' lvalue ParmVar 0x5640b965f838 'str' 'const String &'
|       |-CXXReinterpretCastExpr 0x5640b965fdf8 <col:20, col:61> 'IPAddress' lvalue reinterpret_cast<class IPAddress &> <LValueBitCast>
|       | `-DeclRefExpr 0x5640b965fdc8 <col:50> 'struct in_addr':'in_addr' lvalue ParmVar 0x5640b965f8c8 'result_addr' 'struct in_addr &'
|       |-CXXReinterpretCastExpr 0x5640b965fe58 <line:393:8, col:49> 'IPAddress' lvalue reinterpret_cast<class IPAddress &> <LValueBitCast>
|       | `-DeclRefExpr 0x5640b965fe28 <col:38> 'struct in_addr':'in_addr' lvalue ParmVar 0x5640b965f958 'result_mask' 'struct in_addr &'
|       `-DeclRefExpr 0x5640b965fe88 <col:52> 'const ArgContext' lvalue ParmVar 0x5640b965f9d0 'args' 'const ArgContext &'
|-FieldDecl 0x5640b965fbe8 <line:395:5, col:10> col:10 allow_bare_address 'bool'
|-CXXConstructorDecl 0x5640b9aa3098 <line:382:7> col:7 implicit constexpr IPPrefixArg 'void (const IPPrefixArg &)' inline default trivial noexcept-unevaluated 0x5640b9aa3098
| `-ParmVarDecl 0x5640b9aa31a8 <col:7> col:7 'const IPPrefixArg &'
|-CXXConstructorDecl 0x5640b9aa3248 <col:7> col:7 implicit constexpr IPPrefixArg 'void (IPPrefixArg &&)' inline default trivial noexcept-unevaluated 0x5640b9aa3248
| `-ParmVarDecl 0x5640b9aa3358 <col:7> col:7 'IPPrefixArg &&'
`-CXXDestructorDecl 0x5640b9aa3420 <col:7> col:7 implicit referenced ~IPPrefixArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPPrefixArg = type { i8 }
  NonVirtualBaseLLVMType:%class.IPPrefixArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9a838c8 <../dummy_inc/click/ip6address.hh:373:1, line:383:1> line:373:8 referenced struct IP6AddressArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b9a839e8 <col:1, col:8> col:8 implicit struct IP6AddressArg
|-CXXMethodDecl 0x5640b9a83c90 <line:374:5, line:375:43> line:374:24 basic_parse 'const char *(const String &, IP6Address &, const ArgContext &)' static
| |-ParmVarDecl 0x5640b9a83a88 <col:36, col:50> col:50 str 'const String &'
| |-ParmVarDecl 0x5640b9a83b00 <col:55, col:67> col:67 result 'IP6Address &'
| `-ParmVarDecl 0x5640b9a83b78 <line:375:8, col:33> col:26 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x5640b9a842e8 <col:33> 'const ArgContext' lvalue Var 0x5640b9704d58 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x5640b9a83f28 <line:376:5, line:377:44> line:376:17 used parse 'bool (const String &, IP6Address &, const ArgContext &)' static
| |-ParmVarDecl 0x5640b9a83d58 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x5640b9a83dd0 <col:42, col:54> col:54 result 'IP6Address &'
| `-ParmVarDecl 0x5640b9a83e48 <line:377:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x5640b9a84308 <col:34> 'const ArgContext' lvalue Var 0x5640b9704d58 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x5640b9a84218 <line:378:5, line:381:5> line:378:17 parse 'bool (const String &, struct in6_addr &, const ArgContext &)' static
| |-ParmVarDecl 0x5640b9a83ff0 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x5640b9a84080 <col:42, col:59> col:59 used result 'struct in6_addr &'
| |-ParmVarDecl 0x5640b9a840f8 <line:379:9, col:34> col:27 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x5640b9a84328 <col:34> 'const ArgContext' lvalue Var 0x5640b9704d58 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x5640b9a844e8 <col:46, line:381:5>
|   `-ReturnStmt 0x5640b9a844d8 <line:380:9, col:71>
|     `-CallExpr 0x5640b9a844a0 <col:16, col:71> 'bool'
|       |-ImplicitCastExpr 0x5640b9a84488 <col:16> 'bool (*)(const String &, IP6Address &, const ArgContext &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b9a84438 <col:16> 'bool (const String &, IP6Address &, const ArgContext &)' lvalue CXXMethod 0x5640b9a83f28 'parse' 'bool (const String &, IP6Address &, const ArgContext &)'
|       |-DeclRefExpr 0x5640b9a84398 <col:22> 'const String' lvalue ParmVar 0x5640b9a83ff0 'str' 'const String &'
|       |-CXXReinterpretCastExpr 0x5640b9a843e8 <col:27, col:64> 'IP6Address' lvalue reinterpret_cast<class IP6Address &> <LValueBitCast>
|       | `-DeclRefExpr 0x5640b9a843b8 <col:58> 'struct in6_addr':'in6_addr' lvalue ParmVar 0x5640b9a84080 'result' 'struct in6_addr &'
|       `-DeclRefExpr 0x5640b9a84418 <col:67> 'const ArgContext' lvalue ParmVar 0x5640b9a840f8 'args' 'const ArgContext &'
|-CXXConstructorDecl 0x5640b9aa3ba0 <line:373:8> col:8 implicit referenced constexpr IP6AddressArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5640b9aa3ca8 <col:8> col:8 implicit constexpr IP6AddressArg 'void (const IP6AddressArg &)' inline default trivial noexcept-unevaluated 0x5640b9aa3ca8
| `-ParmVarDecl 0x5640b9aa3db8 <col:8> col:8 'const IP6AddressArg &'
|-CXXConstructorDecl 0x5640b9aa3e58 <col:8> col:8 implicit constexpr IP6AddressArg 'void (IP6AddressArg &&)' inline default trivial noexcept-unevaluated 0x5640b9aa3e58
| `-ParmVarDecl 0x5640b9aa3f68 <col:8> col:8 'IP6AddressArg &&'
`-CXXDestructorDecl 0x5640b9aa4008 <col:8> col:8 implicit referenced ~IP6AddressArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.IP6AddressArg = type { i8 }
  NonVirtualBaseLLVMType:%struct.IP6AddressArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IP6PrefixArg
         0 |   _Bool allow_bare_address
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9a84500 <../dummy_inc/click/ip6address.hh:387:1, line:401:1> line:387:7 referenced class IP6PrefixArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b9a84618 <col:1, col:7> col:7 implicit referenced class IP6PrefixArg
|-AccessSpecDecl 0x5640b9a846a8 <col:22, col:28> col:22 public
|-CXXConstructorDecl 0x5640b9a847b8 <line:388:5, line:390:5> line:388:5 used IP6PrefixArg 'void (bool)'
| |-ParmVarDecl 0x5640b9a846e0 <col:18, col:45> col:23 used allow_bare_address_ 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5640b9a85320 <col:45> 'bool' false
| |-CXXCtorInitializer Field 0x5640b9a852b8 'allow_bare_address' 'bool'
| | `-ImplicitCastExpr 0x5640b9a853d0 <line:389:23> 'bool' <LValueToRValue>
| |   `-DeclRefExpr 0x5640b9a85390 <col:23> 'bool' lvalue ParmVar 0x5640b9a846e0 'allow_bare_address_' 'bool'
| `-CompoundStmt 0x5640b9a85418 <col:44, line:390:5>
|-CXXMethodDecl 0x5640b9a84b08 <line:391:5, line:392:46> line:391:10 used parse 'bool (const String &, IP6Address &, int &, const ArgContext &) const'
| |-ParmVarDecl 0x5640b9a84878 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x5640b9a848f0 <col:35, col:47> col:47 addr 'IP6Address &'
| |-ParmVarDecl 0x5640b9a84970 <col:53, col:58> col:58 prefix_len 'int &'
| `-ParmVarDecl 0x5640b9a849e8 <line:392:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x5640b9a85330 <col:34> 'const ArgContext' lvalue Var 0x5640b9704d58 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x5640b9a84e38 <line:393:5, line:394:46> line:393:10 used parse 'bool (const String &, IP6Address &, IP6Address &, const ArgContext &) const'
| |-ParmVarDecl 0x5640b9a84bd8 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x5640b9a84c50 <col:35, col:47> col:47 addr 'IP6Address &'
| |-ParmVarDecl 0x5640b9a84cc8 <col:53, col:65> col:65 prefix 'IP6Address &'
| `-ParmVarDecl 0x5640b9a84d40 <line:394:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x5640b9a85350 <col:34> 'const ArgContext' lvalue Var 0x5640b9704d58 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x5640b9a851e8 <line:395:5, line:399:5> line:395:10 parse 'bool (const String &, struct in6_addr &, struct in6_addr &, const ArgContext &) const'
| |-ParmVarDecl 0x5640b9a84f08 <col:16, col:30> col:30 used str 'const String &'
| |-ParmVarDecl 0x5640b9a84f98 <col:35, col:52> col:52 used addr 'struct in6_addr &'
| |-ParmVarDecl 0x5640b9a85028 <col:58, col:75> col:75 used prefix 'struct in6_addr &'
| |-ParmVarDecl 0x5640b9a850a0 <line:396:9, col:34> col:27 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x5640b9a85370 <col:34> 'const ArgContext' lvalue Var 0x5640b9704d58 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x5640b9a85630 <col:52, line:399:5>
|   `-ReturnStmt 0x5640b9a85620 <line:397:9, line:398:66>
|     `-CXXMemberCallExpr 0x5640b9a855e0 <line:397:16, line:398:66> 'bool'
|       |-MemberExpr 0x5640b9a855b0 <line:397:16> '<bound member function type>' ->parse 0x5640b9a84e38
|       | `-CXXThisExpr 0x5640b9a855a0 <col:16> 'const IP6PrefixArg *' implicit this
|       |-DeclRefExpr 0x5640b9a854a0 <col:22> 'const String' lvalue ParmVar 0x5640b9a84f08 'str' 'const String &'
|       |-CXXReinterpretCastExpr 0x5640b9a854f0 <col:27, col:62> 'IP6Address' lvalue reinterpret_cast<class IP6Address &> <LValueBitCast>
|       | `-DeclRefExpr 0x5640b9a854c0 <col:58> 'struct in6_addr':'in6_addr' lvalue ParmVar 0x5640b9a84f98 'addr' 'struct in6_addr &'
|       |-CXXReinterpretCastExpr 0x5640b9a85550 <line:398:22, col:59> 'IP6Address' lvalue reinterpret_cast<class IP6Address &> <LValueBitCast>
|       | `-DeclRefExpr 0x5640b9a85520 <col:53> 'struct in6_addr':'in6_addr' lvalue ParmVar 0x5640b9a85028 'prefix' 'struct in6_addr &'
|       `-DeclRefExpr 0x5640b9a85580 <col:62> 'const ArgContext' lvalue ParmVar 0x5640b9a850a0 'args' 'const ArgContext &'
|-FieldDecl 0x5640b9a852b8 <line:400:5, col:10> col:10 allow_bare_address 'bool'
|-CXXConstructorDecl 0x5640b9aa4428 <line:387:7> col:7 implicit constexpr IP6PrefixArg 'void (const IP6PrefixArg &)' inline default trivial noexcept-unevaluated 0x5640b9aa4428
| `-ParmVarDecl 0x5640b9aa4538 <col:7> col:7 'const IP6PrefixArg &'
|-CXXConstructorDecl 0x5640b9aa45d8 <col:7> col:7 implicit constexpr IP6PrefixArg 'void (IP6PrefixArg &&)' inline default trivial noexcept-unevaluated 0x5640b9aa45d8
| `-ParmVarDecl 0x5640b9aa46e8 <col:7> col:7 'IP6PrefixArg &&'
`-CXXDestructorDecl 0x5640b9aa47b0 <col:7> col:7 implicit referenced ~IP6PrefixArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IP6PrefixArg = type { i8 }
  NonVirtualBaseLLVMType:%class.IP6PrefixArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class EtherAddress
         0 |   uint16_t [3] _data
           | [sizeof=6, dsize=6, align=1,
           |  nvsize=6, nvalign=1]

*** Dumping AST Record Layout
         0 | union (anonymous at ../elements/standard/addressinfo.cc:459:2)
         0 |   uint32_t [2] addr
         0 |   unsigned char [8] x
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9ac9ff8 <../elements/standard/addressinfo.cc:459:2, line:462:2> line:459:2 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x5640b9aca1b8 <line:460:6, col:21> col:15 referenced addr 'uint32_t [2]'
|-FieldDecl 0x5640b9aca270 <line:461:6, col:23> col:20 referenced x 'unsigned char [8]'
|-CXXConstructorDecl 0x5640b9aca3b8 <line:459:2> col:2 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x5640b9aca7e8 <col:2>
|-CXXConstructorDecl 0x5640b9aca4b8 <col:2> col:2 implicit constexpr  'void (const (anonymous union at ../elements/standard/addressinfo.cc:459:2) &)' inline default trivial noexcept-unevaluated 0x5640b9aca4b8
| `-ParmVarDecl 0x5640b9aca5c8 <col:2> col:2 'const (anonymous union at ../elements/standard/addressinfo.cc:459:2) &'
`-CXXConstructorDecl 0x5640b9aca668 <col:2> col:2 implicit constexpr  'void ((anonymous union at ../elements/standard/addressinfo.cc:459:2) &&)' inline default trivial noexcept-unevaluated 0x5640b9aca668
  `-ParmVarDecl 0x5640b9aca778 <col:2> col:2 '(anonymous union at ../elements/standard/addressinfo.cc:459:2) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.15 = type { [2 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct (anonymous at ../elements/standard/addressinfo.cc:546:5)
         0 |   unsigned char [16] c
        16 |   int p
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9ae4f10 <../elements/standard/addressinfo.cc:546:5, line:549:5> line:546:5 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x5640b9ae5090 <line:547:2, col:20> col:16 referenced c 'unsigned char [16]'
|-FieldDecl 0x5640b9ae50f8 <line:548:2, col:6> col:6 referenced p 'int'
|-CXXConstructorDecl 0x5640b9ae5238 <line:546:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x5640b9ae5668 <col:5>
|-CXXConstructorDecl 0x5640b9ae5338 <col:5> col:5 implicit constexpr  'void (const (anonymous struct at ../elements/standard/addressinfo.cc:546:5) &)' inline default trivial noexcept-unevaluated 0x5640b9ae5338
| `-ParmVarDecl 0x5640b9ae5448 <col:5> col:5 'const (anonymous struct at ../elements/standard/addressinfo.cc:546:5) &'
`-CXXConstructorDecl 0x5640b9ae54e8 <col:5> col:5 implicit constexpr  'void ((anonymous struct at ../elements/standard/addressinfo.cc:546:5) &&)' inline default trivial noexcept-unevaluated 0x5640b9ae54e8
  `-ParmVarDecl 0x5640b9ae55f8 <col:5> col:5 '(anonymous struct at ../elements/standard/addressinfo.cc:546:5) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { [16 x i8], i32 }
  NonVirtualBaseLLVMType:%struct.anon = type { [16 x i8], i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9824a28 prev 0x5640b9819c30 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b9824b20 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5640b9824c10 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5640b9824d38 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5640b9824eb8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5640b9825038 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5640b98251b8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5640b9835fe8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5640b9836858 <col:11>
|-CXXDestructorDecl 0x5640b98360c0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5640b98361f8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5640b98361f8
| `-ParmVarDecl 0x5640b9836308 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5640b98363a8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5640b98363a8
| `-ParmVarDecl 0x5640b98364b8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5640b9839278 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9839388 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5640b9839608 <col:11>
|   `-ReturnStmt 0x5640b98395f8 <col:11>
|     `-UnaryOperator 0x5640b98395e0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5640b98395d0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5640b98393f8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5640b98393f8
  `-ParmVarDecl 0x5640b9839508 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9825220 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b9825338 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5640b98253d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5640b9825440 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5640b98254a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5640b9825510 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5640b9825570 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5640b9825630 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5640b9825690 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5640b98256f0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5640b9835ef8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5640b98253d8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5640b9836868 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5640b98368c0 <col:12>
|-CXXConstructorDecl 0x5640b9836528 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5640b9836528
| `-ParmVarDecl 0x5640b9836638 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5640b98366d8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5640b98366d8
| `-ParmVarDecl 0x5640b98367e8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5640b9838960 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9813340 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5640b9813458 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5640b98134e8 <col:16, col:22> col:16 public
|-EnumDecl 0x5640b9813510 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5640b9813610 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5640b98136f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b98135f0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5640b98135d0 <col:21> 'int' 28
| `-EnumConstantDecl 0x5640b98136a0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5640b9813708 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b9813680 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5640b9813660 <col:22> 'int' 64
|-CXXMethodDecl 0x5640b9813a48 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5640b9813730 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b98137b0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5640b9813828 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b98138a0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5640b9813b08 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5640b9813d08 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5640b9813b80 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5640b9813bf8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5640b9813db8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5640b9813f18 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5640b9813e28 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5640b9813fc0 <col:72> warn_unused_result ""
|-TypedefDecl 0x5640b9814320 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5640b98142b0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5640b9814250 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5640b9814210 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5640b92e52d0 'void'
|       |-PointerType 0x5640b95936e0 'unsigned char *'
|       | `-BuiltinType 0x5640b92e53d0 'unsigned char'
|       |-TypedefType 0x5640b938fc50 'size_t' sugar
|       | |-Typedef 0x5640b9355b20 'size_t'
|       | `-BuiltinType 0x5640b92e5430 'unsigned long'
|       `-PointerType 0x5640b92e5ad0 'void *'
|         `-BuiltinType 0x5640b92e52d0 'void'
|-CXXMethodDecl 0x5640b9814798 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5640b9814390 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5640b9814408 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b98144a0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5640b9814520 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5640b982ee90 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5640b982ee78 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5640b982ee40 <col:58> 'int' 0
| |-ParmVarDecl 0x5640b98145a0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5640b982eeb8 <col:76> 'int' 0
| |-ParmVarDecl 0x5640b9814620 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5640b982eed8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5640b9814868 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5640b98148e8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5640b98149a8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5640b9814a48 <col:20>
| `-OptimizeNoneAttr 0x5640b9814aa0 <col:30>
|-CXXMethodDecl 0x5640b9814b18 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5640b9814bb8 <col:20>
| `-OptimizeNoneAttr 0x5640b9814c10 <col:30>
|-CXXMethodDecl 0x5640b9814c88 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5640b9814d28 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5640b9814dd8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5640b9814e78 <col:20>
| |-OptimizeNoneAttr 0x5640b9814ed0 <col:30>
| `-WarnUnusedResultAttr 0x5640b9814ef8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5640b9814f50 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5640b9814ff0 <col:20>
| `-OptimizeNoneAttr 0x5640b9815048 <col:30>
|-CXXMethodDecl 0x5640b9815098 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5640b9815138 <col:20>
| `-OptimizeNoneAttr 0x5640b9815190 <col:30>
|-CXXMethodDecl 0x5640b98151d8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5640b9815278 <col:20>
| `-OptimizeNoneAttr 0x5640b98152d0 <col:30>
|-CXXMethodDecl 0x5640b9815318 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b98153d8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b98154a0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5640b9815568 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5640b9815628 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b9815748 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5640b982efa0 <col:54, line:99:5>
|   `-ReturnStmt 0x5640b982ef90 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5640b982ef78 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5640b982ef48 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5640b9825a28
|         `-CXXThisExpr 0x5640b982ef38 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5640b98158e8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5640b98157f8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5640b982f050 <col:67, line:103:5>
|   `-BinaryOperator 0x5640b982f030 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5640b982efc8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5640b9825a28
|     | `-CXXThisExpr 0x5640b982efb8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5640b982f018 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5640b982eff8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5640b98157f8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5640b98159e0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5640b982f0d0 <col:33, line:107:5>
|   `-ReturnStmt 0x5640b982f0c0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5640b982f0a8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5640b982f078 <col:16> 'void *' lvalue ->_destructor_argument 0x5640b9825a90
|         `-CXXThisExpr 0x5640b982f068 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5640b9815aa0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5640b982f700 <col:25, line:113:5>
|   |-ParenExpr 0x5640b982f448 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5640b982f418 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5640b982f188 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5640b982f160 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5640b982f128 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5640b982f0f8 <col:24> '<bound member function type>' ->shared 0x5640b9814b18
|   |   |       `-ImplicitCastExpr 0x5640b982f148 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5640b982f0e8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5640b982f1e8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b982f1c8 <col:42> 'int' 0
|   |   `-CallExpr 0x5640b982f378 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5640b982f360 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b982f340 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b982f3b8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b982f258 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5640b982f3d0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b982f280 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b982f3e8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b982f2b8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5640b982f400 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b982f328 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b982f310 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b982f2d8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5640b982f648 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5640b982f478 <col:2> 'unsigned char *' lvalue ->_head 0x5640b9825830
|   | | `-CXXThisExpr 0x5640b982f468 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5640b982f630 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5640b982f610 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5640b982f4b8 <col:10> 'unsigned char *' lvalue ->_data 0x5640b9825898
|   |     | `-CXXThisExpr 0x5640b982f4a8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5640b982f5f8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5640b982f5d8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5640b982f4f8 <col:18> 'unsigned char *' lvalue ->_tail 0x5640b9825900
|   |         | `-CXXThisExpr 0x5640b982f4e8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5640b982f5c0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5640b982f5a0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5640b982f538 <col:26> 'unsigned char *' lvalue ->_end 0x5640b9825968
|   |             | `-CXXThisExpr 0x5640b982f528 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5640b982f588 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5640b982f568 <col:33> 'int' 0
|   `-BinaryOperator 0x5640b982f6e0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5640b982f678 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5640b9825a28
|     | `-CXXThisExpr 0x5640b982f668 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5640b982f6c8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5640b982f6a8 <col:16> 'int' 0
|-CXXMethodDecl 0x5640b9815be0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5640b9815b50 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5640b9815c88 <col:20>
| |-OptimizeNoneAttr 0x5640b9815ce0 <col:30>
| `-WarnUnusedResultAttr 0x5640b9815d08 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5640b9815dd8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5640b9815d48 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5640b9815e80 <col:20>
| |-OptimizeNoneAttr 0x5640b9815ed8 <col:30>
| `-WarnUnusedResultAttr 0x5640b9815f00 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5640b9816038 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5640b9815f40 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5640b98160e0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5640b98161e0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5640b9816150 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5640b9816288 <col:20>
| `-OptimizeNoneAttr 0x5640b98162e0 <col:30>
|-CXXMethodDecl 0x5640b98163a8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5640b9816318 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5640b9816450 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5640b9816550 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5640b98164c0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5640b98165f8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5640b98166f8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5640b9816668 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5640b98167a0 <col:20>
| `-OptimizeNoneAttr 0x5640b98167f8 <col:30>
|-CXXMethodDecl 0x5640b9816988 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5640b9816838 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5640b98168b0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5640b982eef8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5640b9816a38 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5640b9816c38 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5640b9816ab0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5640b9816b28 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b9816e48 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5640b9816cf8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5640b9816d70 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b9817058 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5640b9816f08 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5640b9816f88 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5640b982ef08 <col:39> 'int' 0
|-CXXMethodDecl 0x5640b9817128 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5640b98171f0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5640b98172b8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5640b9817378 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b9817440 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5640b9817588 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5640b98174f8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5640b9817758 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5640b9817648 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5640b98176c0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b9817828 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5640b98178e8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5640b9817988 <col:20>
| `-OptimizeNoneAttr 0x5640b98179e0 <col:30>
|-CXXMethodDecl 0x5640b9817a30 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5640b9817ad0 <col:20>
| `-OptimizeNoneAttr 0x5640b9817b28 <col:30>
|-CXXMethodDecl 0x5640b9817b78 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5640b9817c38 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b9817d00 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5640b9817da0 <col:20>
| `-OptimizeNoneAttr 0x5640b9817df8 <col:30>
|-CXXMethodDecl 0x5640b9817f48 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5640b9817e38 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5640b9817eb0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b9818098 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5640b9818008 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b9818170 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5640b9818230 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5640b98182d0 <col:20>
| `-OptimizeNoneAttr 0x5640b9818328 <col:30>
|-CXXMethodDecl 0x5640b9818378 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5640b9818418 <col:20>
| `-OptimizeNoneAttr 0x5640b9818470 <col:30>
|-CXXMethodDecl 0x5640b98184c0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5640b9818588 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5640b9818628 <col:20>
| `-OptimizeNoneAttr 0x5640b9818680 <col:30>
|-CXXMethodDecl 0x5640b98186c8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5640b98187e8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5640b9818958 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5640b9818898 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5640b9818a48 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5640b9818ae8 <col:20>
| `-OptimizeNoneAttr 0x5640b9818b40 <col:30>
|-CXXMethodDecl 0x5640b9818b90 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5640b9818c50 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b9818e88 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5640b9818d00 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5640b9818d78 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5640b9818f38 <col:20>
| `-OptimizeNoneAttr 0x5640b9818f90 <col:30>
|-CXXMethodDecl 0x5640b9819038 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5640b98190d8 <col:20>
| `-OptimizeNoneAttr 0x5640b9819130 <col:30>
|-CXXMethodDecl 0x5640b9819180 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5640b9819220 <col:20>
| `-OptimizeNoneAttr 0x5640b9819278 <col:30>
|-CXXMethodDecl 0x5640b98192c0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5640b9819360 <col:20>
| `-OptimizeNoneAttr 0x5640b98193b8 <col:30>
|-CXXMethodDecl 0x5640b98194b8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5640b98193f0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5640b9819560 <col:20>
| `-OptimizeNoneAttr 0x5640b98195b8 <col:30>
|-CXXMethodDecl 0x5640b9819778 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5640b98195f0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5640b9819668 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5640b9819828 <col:20>
| `-OptimizeNoneAttr 0x5640b9819880 <col:30>
|-CXXMethodDecl 0x5640b9819928 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5640b9819a48 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5640b9819b68 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5640b9819c08 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5640b9819c30 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5640b9819d58 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5640b9819df8 <col:20>
| `-OptimizeNoneAttr 0x5640b9819e50 <col:30>
|-CXXMethodDecl 0x5640b9819ef8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5640b9819f98 <col:20>
| `-OptimizeNoneAttr 0x5640b9819ff0 <col:30>
|-AccessSpecDecl 0x5640b981a018 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5640b981a040 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5640b981a140 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5640b981a190 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b981a120 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5640b981a100 <col:14> 'int' 48
|-CXXMethodDecl 0x5640b981a1f8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5640b981a298 <col:20>
| `-OptimizeNoneAttr 0x5640b981a2f0 <col:30>
|-CXXMethodDecl 0x5640b981a368 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5640b981a408 <col:20>
| `-OptimizeNoneAttr 0x5640b981a460 <col:30>
|-CXXMethodDecl 0x5640b981a528 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5640b981a498 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5640b981a6c8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5640b981a868 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5640b981a778 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5640b981a910 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5640b981aa10 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5640b981adc0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981a9f0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5640b981a9d0 <col:9> 'int' 0
| |-EnumConstantDecl 0x5640b981aaa0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5640b981add8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981aa80 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5640b981aa60 <col:14> 'int' 1
| |-EnumConstantDecl 0x5640b981ab30 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5640b981adf0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981ab10 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5640b981aaf0 <col:14> 'int' 2
| |-EnumConstantDecl 0x5640b981abc0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5640b981ae08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981aba0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5640b981ab80 <col:14> 'int' 3
| |-EnumConstantDecl 0x5640b981ac50 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5640b981ae20 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981ac30 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5640b981ac10 <col:13> 'int' 4
| |-EnumConstantDecl 0x5640b981ace0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5640b981ae38 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981acc0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5640b981aca0 <col:13> 'int' 5
| `-EnumConstantDecl 0x5640b981ad70 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5640b981ae50 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b981ad50 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5640b981ad30 <col:14> 'int' 6
|-CXXMethodDecl 0x5640b981aeb8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5640b981af58 <col:20>
| `-OptimizeNoneAttr 0x5640b981afb0 <col:30>
|-CXXMethodDecl 0x5640b981b0a8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5640b981afe8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5640b981b150 <col:20>
| `-OptimizeNoneAttr 0x5640b981b1a8 <col:30>
|-CXXMethodDecl 0x5640b981b218 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5640b981b340 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5640b981b4b8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5640b981b3f0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5640b981b580 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5640b981b648 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5640b981b788 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5640b981b6f8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5640b981b830 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5640b981b930 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5640b981bb30 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981b910 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5640b981b8f0 <col:23> 'int' 0
| |-EnumConstantDecl 0x5640b981b9c0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5640b981bb48 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981b9a0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5640b981b980 <col:45> 'int' 4
| |-EnumConstantDecl 0x5640b981ba50 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5640b981bb60 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981ba30 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5640b981ba10 <col:24> 'int' 0
| `-EnumConstantDecl 0x5640b981bae0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5640b981bb78 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b981bac0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5640b981baa0 <col:47> 'int' 16
|-CXXMethodDecl 0x5640b981bbd8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5640b981bd48 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5640b981bc88 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5640b981bdf0 <col:20>
| `-OptimizeNoneAttr 0x5640b981be48 <col:30>
|-CXXMethodDecl 0x5640b981be98 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5640b982f820 <col:18, col:36>
|   `-ReturnStmt 0x5640b982f810 <col:20, col:33>
|     `-ImplicitCastExpr 0x5640b982f7f8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5640b982f7d8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5640b982f7a8 <col:27> '<bound member function type>' ->xanno 0x5640b9819ef8
|           `-CXXThisExpr 0x5640b982f798 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5640b981bf90 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5640b982f930 <col:30, col:48>
|   `-ReturnStmt 0x5640b982f920 <col:32, col:45>
|     `-ImplicitCastExpr 0x5640b982f908 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5640b982f8e8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5640b982f8b8 <col:39> '<bound member function type>' ->xanno 0x5640b9819d58
|           `-CXXThisExpr 0x5640b982f8a8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5640b981c078 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5640b982fac8 <col:24, col:50>
|   `-ReturnStmt 0x5640b982fab8 <col:26, col:47>
|     `-UnaryOperator 0x5640b982faa0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5640b982fa80 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5640b982fa68 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5640b982fa18 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5640b9824d38
|         |   `-CXXMemberCallExpr 0x5640b982f9f8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5640b982f9c8 <col:34> '<bound member function type>' ->xanno 0x5640b9819ef8
|         |       `-CXXThisExpr 0x5640b982f9b8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5640b982fa48 <col:46> 'int' 0
|-CXXMethodDecl 0x5640b981c180 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5640b982fc98 <col:36, col:62>
|   `-ReturnStmt 0x5640b982fc88 <col:38, col:59>
|     `-UnaryOperator 0x5640b982fc70 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5640b982fc50 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5640b982fc38 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5640b982fbb0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5640b9824d38
|         |   `-CXXMemberCallExpr 0x5640b982fb90 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5640b982fb60 <col:46> '<bound member function type>' ->xanno 0x5640b9819d58
|         |       `-CXXThisExpr 0x5640b982fb50 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5640b982fbe0 <col:58> 'int' 0
|-CXXMethodDecl 0x5640b981c298 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5640b982fe30 <col:26, col:53>
|   `-ReturnStmt 0x5640b982fe20 <col:28, col:50>
|     `-UnaryOperator 0x5640b982fe08 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5640b982fde8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5640b982fdd0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5640b982fd80 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5640b9825038
|         |   `-CXXMemberCallExpr 0x5640b982fd60 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5640b982fd30 <col:36> '<bound member function type>' ->xanno 0x5640b9819ef8
|         |       `-CXXThisExpr 0x5640b982fd20 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5640b982fdb0 <col:49> 'int' 0
|-CXXMethodDecl 0x5640b981c3b8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5640b9830008 <col:38, col:65>
|   `-ReturnStmt 0x5640b982fff8 <col:40, col:62>
|     `-UnaryOperator 0x5640b982ffe0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5640b982ffc0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5640b982ffa8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5640b982ff18 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5640b9825038
|         |   `-CXXMemberCallExpr 0x5640b982fef8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5640b982fec8 <col:48> '<bound member function type>' ->xanno 0x5640b9819d58
|         |       `-CXXThisExpr 0x5640b982feb8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5640b982ff48 <col:61> 'int' 0
|-CXXMethodDecl 0x5640b981c568 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5640b981c470 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5640b98306d8 <col:34, line:463:5>
|   |-ParenExpr 0x5640b9830520 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5640b98304f0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5640b9830158 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b9830128 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b9830078 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b9830060 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b9830020 <col:23> 'int' lvalue ParmVar 0x5640b981c470 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b9830040 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b9830108 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5640b98300d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b9830098 <col:33> 'int' lvalue ParmVar 0x5640b981c470 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5640b98300f0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5640b98300b8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5640b98301b8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b9830198 <col:56> 'int' 0
|   |   `-CallExpr 0x5640b9830450 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5640b9830438 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b9830418 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b9830490 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b98302a8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5640b98304a8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b98302d8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b98304c0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b9830310 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5640b98304d8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b9830400 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b98303e8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b98303a8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5640b98306c8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5640b98306b0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5640b9830690 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5640b9830660 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5640b9830610 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5640b9824d38
|         |   `-CXXMemberCallExpr 0x5640b98305f0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5640b98305c0 <col:9> '<bound member function type>' ->xanno 0x5640b9819d58
|         |       `-CXXThisExpr 0x5640b98305b0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5640b9830678 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5640b9830640 <col:21> 'int' lvalue ParmVar 0x5640b981c470 'i' 'int'
|-CXXMethodDecl 0x5640b981c7b8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5640b981c628 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5640b981c6a0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5640b9830d68 <col:40, line:472:5>
|   |-ParenExpr 0x5640b9830b80 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5640b9830b50 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5640b9830830 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b9830800 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b9830750 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b9830738 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b98306f8 <col:23> 'int' lvalue ParmVar 0x5640b981c628 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b9830718 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b98307e0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5640b98307b0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b9830770 <col:33> 'int' lvalue ParmVar 0x5640b981c628 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5640b98307c8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5640b9830790 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5640b9830890 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b9830870 <col:56> 'int' 0
|   |   `-CallExpr 0x5640b9830ab0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5640b9830a98 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b9830a78 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b9830af0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9830900 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5640b9830b08 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9830930 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b9830b20 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b9830968 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5640b9830b38 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b9830a60 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b9830a48 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b9830a08 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5640b9830d48 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5640b9830cf0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5640b9830cc0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5640b9830c70 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5640b9824d38
|     | |   `-CXXMemberCallExpr 0x5640b9830c50 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5640b9830c20 <col:2> '<bound member function type>' ->xanno 0x5640b9819ef8
|     | |       `-CXXThisExpr 0x5640b9830c10 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5640b9830cd8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5640b9830ca0 <col:14> 'int' lvalue ParmVar 0x5640b981c628 'i' 'int'
|     `-ImplicitCastExpr 0x5640b9830d30 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5640b9830d10 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5640b981c6a0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5640b981c978 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5640b981c880 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5640b98314e8 <col:36, line:485:5>
|   |-ParenExpr 0x5640b9831250 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5640b9831220 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5640b9830f00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b9830ed0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b9830de0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b9830dc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b9830d88 <col:23> 'int' lvalue ParmVar 0x5640b981c880 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b9830da8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b9830eb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5640b9830e98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b9830e00 <col:33> 'int' lvalue ParmVar 0x5640b981c880 'i' 'int'
|   |   |     `-BinaryOperator 0x5640b9830e78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5640b9830e60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5640b9830e20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5640b9830e40 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5640b9830f60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b9830f40 <col:60> 'int' 0
|   |   `-CallExpr 0x5640b9831180 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5640b9831168 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b9831148 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b98311c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9830fd0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5640b98311d8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9831008 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b98311f0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b9831040 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5640b9831208 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b9831130 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b9831118 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b98310d8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5640b98314d8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5640b98314c0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5640b98314a8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5640b9831478 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5640b9831418 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5640b98313e8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5640b9831360 <col:61, col:70> 'char const[48]' lvalue ->c 0x5640b9824c10
|             |   `-CXXMemberCallExpr 0x5640b9831340 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5640b9831310 <col:61> '<bound member function type>' ->xanno 0x5640b9819d58
|             |       `-CXXThisExpr 0x5640b9831300 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5640b9831400 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5640b9831390 <col:74> 'int' lvalue ParmVar 0x5640b981c880 'i' 'int'
|-CXXMethodDecl 0x5640b981cbc8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5640b981ca38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5640b981cab0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5640b9831c38 <col:42, line:500:5>
|   |-ParenExpr 0x5640b98319d0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5640b98319a0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5640b9831680 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b9831650 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b9831560 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b9831548 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b9831508 <col:23> 'int' lvalue ParmVar 0x5640b981ca38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b9831528 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b9831630 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5640b9831618 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b9831580 <col:33> 'int' lvalue ParmVar 0x5640b981ca38 'i' 'int'
|   |   |     `-BinaryOperator 0x5640b98315f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5640b98315e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5640b98315a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5640b98315c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5640b98316e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b98316c0 <col:60> 'int' 0
|   |   `-CallExpr 0x5640b9831900 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5640b98318e8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b98318c8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b9831940 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9831750 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5640b9831958 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9831788 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b9831970 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b98317c0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5640b9831988 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b98318b0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b9831898 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b9831858 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5640b9831c18 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5640b9831bc8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5640b9831b98 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5640b9831b40 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5640b9831b10 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5640b9831ac0 <col:48, col:57> 'char [48]' lvalue ->c 0x5640b9824c10
|     |     |   `-CXXMemberCallExpr 0x5640b9831aa0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5640b9831a70 <col:48> '<bound member function type>' ->xanno 0x5640b9819ef8
|     |     |       `-CXXThisExpr 0x5640b9831a60 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5640b9831b28 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5640b9831af0 <col:61> 'int' lvalue ParmVar 0x5640b981ca38 'i' 'int'
|     `-ImplicitCastExpr 0x5640b9831c00 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5640b9831be0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5640b981cab0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5640b981cd88 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5640b981cc90 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5640b9832398 <col:35, line:513:5>
|   |-ParenExpr 0x5640b98320a8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5640b9832078 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5640b9831dd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b9831da0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b9831cb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b9831c98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b9831c58 <col:23> 'int' lvalue ParmVar 0x5640b981cc90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b9831c78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b9831d80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5640b9831d68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b9831cd0 <col:33> 'int' lvalue ParmVar 0x5640b981cc90 'i' 'int'
|   |   |     `-BinaryOperator 0x5640b9831d48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5640b9831d30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5640b9831cf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5640b9831d10 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5640b9831e30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b9831e10 <col:60> 'int' 0
|   |   `-CallExpr 0x5640b9831fd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5640b9831fc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b9831fa0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b9832018 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9831ea0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5640b9832030 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9831ed8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b9832048 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b9831f10 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5640b9832060 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b9831f88 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b9831f70 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b9831f30 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5640b9832388 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5640b9832370 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5640b9832358 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5640b9832328 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5640b98322a0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5640b9832270 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5640b9832220 <col:60, col:69> 'char const[48]' lvalue ->c 0x5640b9824c10
|             |   `-CXXMemberCallExpr 0x5640b9832200 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5640b98321d0 <col:60> '<bound member function type>' ->xanno 0x5640b9819d58
|             |       `-CXXThisExpr 0x5640b98321c0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5640b9832288 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5640b9832250 <col:73> 'int' lvalue ParmVar 0x5640b981cc90 'i' 'int'
|-CXXMethodDecl 0x5640b981cfd8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5640b981ce48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5640b981cec0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5640b9832ab8 <col:41, line:528:5>
|   |-ParenExpr 0x5640b9832840 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5640b9832810 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5640b9832530 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b9832500 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b9832410 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b98323f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b98323b8 <col:23> 'int' lvalue ParmVar 0x5640b981ce48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b98323d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b98324e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5640b98324c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b9832430 <col:33> 'int' lvalue ParmVar 0x5640b981ce48 'i' 'int'
|   |   |     `-BinaryOperator 0x5640b98324a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5640b9832490 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5640b9832450 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5640b9832470 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5640b9832590 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b9832570 <col:60> 'int' 0
|   |   `-CallExpr 0x5640b9832770 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5640b9832758 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b9832738 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b98327b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9832600 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5640b98327c8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9832638 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b98327e0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b9832670 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5640b98327f8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b9832720 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b9832708 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b98326c8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5640b9832a98 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5640b9832a48 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5640b9832a18 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5640b98329c0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5640b9832980 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5640b9832930 <col:47, col:56> 'char [48]' lvalue ->c 0x5640b9824c10
|     |     |   `-CXXMemberCallExpr 0x5640b9832910 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5640b98328e0 <col:47> '<bound member function type>' ->xanno 0x5640b9819ef8
|     |     |       `-CXXThisExpr 0x5640b98328d0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5640b9832998 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5640b9832960 <col:60> 'int' lvalue ParmVar 0x5640b981ce48 'i' 'int'
|     `-ImplicitCastExpr 0x5640b9832a80 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5640b9832a60 <col:65> 'int16_t':'short' lvalue ParmVar 0x5640b981cec0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5640b981d198 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5640b981d0a0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5640b9833188 <col:36, line:541:5>
|   |-ParenExpr 0x5640b9832f28 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5640b9832ef8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5640b9832c50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b9832c20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b9832b30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b9832b18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b9832ad8 <col:23> 'int' lvalue ParmVar 0x5640b981d0a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b9832af8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b9832c00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5640b9832be8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b9832b50 <col:33> 'int' lvalue ParmVar 0x5640b981d0a0 'i' 'int'
|   |   |     `-BinaryOperator 0x5640b9832bc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5640b9832bb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5640b9832b70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5640b9832b90 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5640b9832cb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b9832c90 <col:60> 'int' 0
|   |   `-CallExpr 0x5640b9832e58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5640b9832e40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b9832e20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b9832e98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9832d20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5640b9832eb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9832d58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b9832ec8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b9832d90 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5640b9832ee0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b9832e08 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b9832df0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b9832db0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5640b9833178 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5640b9833160 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5640b9833148 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5640b9833118 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5640b98330c0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5640b9833090 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5640b9833040 <col:61, col:70> 'char const[48]' lvalue ->c 0x5640b9824c10
|             |   `-CXXMemberCallExpr 0x5640b9833020 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5640b9832ff0 <col:61> '<bound member function type>' ->xanno 0x5640b9819d58
|             |       `-CXXThisExpr 0x5640b9832fe0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5640b98330a8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5640b9833070 <col:74> 'int' lvalue ParmVar 0x5640b981d0a0 'i' 'int'
|-CXXMethodDecl 0x5640b981d368 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5640b981d258 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5640b981d2d0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5640b981d418 <col:20>
| `-OptimizeNoneAttr 0x5640b981d470 <col:30>
|-CXXMethodDecl 0x5640b981d5a8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5640b981d4b0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5640b9833858 <col:35, line:562:5>
|   |-ParenExpr 0x5640b98335f8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5640b98335c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5640b9833320 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b98332f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b9833200 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b98331e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b98331a8 <col:23> 'int' lvalue ParmVar 0x5640b981d4b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b98331c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b98332d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5640b98332b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b9833220 <col:33> 'int' lvalue ParmVar 0x5640b981d4b0 'i' 'int'
|   |   |     `-BinaryOperator 0x5640b9833298 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5640b9833280 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5640b9833240 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5640b9833260 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5640b9833380 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b9833360 <col:60> 'int' 0
|   |   `-CallExpr 0x5640b9833528 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5640b9833510 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b98334f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b9833568 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b98333f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5640b9833580 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9833428 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b9833598 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b9833460 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5640b98335b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b98334d8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b98334c0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b9833480 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5640b9833848 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5640b9833830 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5640b9833818 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5640b98337e8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5640b9833790 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5640b9833760 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5640b9833710 <col:60, col:69> 'char const[48]' lvalue ->c 0x5640b9824c10
|             |   `-CXXMemberCallExpr 0x5640b98336f0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5640b98336c0 <col:60> '<bound member function type>' ->xanno 0x5640b9819d58
|             |       `-CXXThisExpr 0x5640b98336b0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5640b9833778 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5640b9833740 <col:73> 'int' lvalue ParmVar 0x5640b981d4b0 'i' 'int'
|-CXXMethodDecl 0x5640b981d7b8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5640b981d668 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5640b981d6e0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5640b9833f38 <col:41, line:577:5>
|   |-ParenExpr 0x5640b9833cc8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5640b9833c98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5640b98339f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b98339c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b98338d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b98338b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b9833878 <col:23> 'int' lvalue ParmVar 0x5640b981d668 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b9833898 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b98339a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5640b9833988 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b98338f0 <col:33> 'int' lvalue ParmVar 0x5640b981d668 'i' 'int'
|   |   |     `-BinaryOperator 0x5640b9833968 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5640b9833950 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5640b9833910 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5640b9833930 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5640b9833a50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b9833a30 <col:60> 'int' 0
|   |   `-CallExpr 0x5640b9833bf8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5640b9833be0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b9833bc0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b9833c38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9833ac0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5640b9833c50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9833af8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b9833c68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b9833b30 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5640b9833c80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b9833ba8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b9833b90 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b9833b50 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5640b9833f18 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5640b9833ec8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5640b9833e98 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5640b9833e38 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5640b9833e08 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5640b9833db8 <col:47, col:56> 'char [48]' lvalue ->c 0x5640b9824c10
|     |     |   `-CXXMemberCallExpr 0x5640b9833d98 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5640b9833d68 <col:47> '<bound member function type>' ->xanno 0x5640b9819ef8
|     |     |       `-CXXThisExpr 0x5640b9833d58 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5640b9833e20 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5640b9833de8 <col:60> 'int' lvalue ParmVar 0x5640b981d668 'i' 'int'
|     `-ImplicitCastExpr 0x5640b9833f00 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5640b9833ee0 <col:65> 'int32_t':'int' lvalue ParmVar 0x5640b981d6e0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5640b981d978 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5640b981d880 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5640b9834668 <col:36, line:591:5>
|   |-ParenExpr 0x5640b98343a8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5640b9834378 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5640b98340d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b98340a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b9833fb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b9833f98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b9833f58 <col:23> 'int' lvalue ParmVar 0x5640b981d880 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b9833f78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b9834080 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5640b9834068 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b9833fd0 <col:33> 'int' lvalue ParmVar 0x5640b981d880 'i' 'int'
|   |   |     `-BinaryOperator 0x5640b9834048 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5640b9834030 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5640b9833ff0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5640b9834010 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5640b9834130 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b9834110 <col:60> 'int' 0
|   |   `-CallExpr 0x5640b98342d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5640b98342c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b98342a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b9834318 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b98341a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5640b9834330 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b98341d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b9834348 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b9834210 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5640b9834360 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b9834288 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b9834270 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b9834230 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5640b9834658 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5640b9834640 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5640b9834628 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5640b98345f8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5640b9834570 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5640b9834540 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5640b98344f0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5640b9824c10
|             |   `-CXXMemberCallExpr 0x5640b98344d0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5640b98344a0 <col:61> '<bound member function type>' ->xanno 0x5640b9819d58
|             |       `-CXXThisExpr 0x5640b9834490 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5640b9834558 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5640b9834520 <col:74> 'int' lvalue ParmVar 0x5640b981d880 'i' 'int'
|-CXXMethodDecl 0x5640b981dbc8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5640b981da38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5640b981dab0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5640b9834d48 <col:42, line:606:5>
|   |-ParenExpr 0x5640b9834ad8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5640b9834aa8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5640b9834800 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b98347d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b98346e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b98346c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b9834688 <col:23> 'int' lvalue ParmVar 0x5640b981da38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b98346a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b98347b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5640b9834798 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b9834700 <col:33> 'int' lvalue ParmVar 0x5640b981da38 'i' 'int'
|   |   |     `-BinaryOperator 0x5640b9834778 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5640b9834760 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5640b9834720 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5640b9834740 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5640b9834860 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b9834840 <col:60> 'int' 0
|   |   `-CallExpr 0x5640b9834a08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5640b98349f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b98349d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b9834a48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b98348d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5640b9834a60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9834908 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b9834a78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b9834940 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5640b9834a90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b98349b8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b98349a0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b9834960 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5640b9834d28 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5640b9834cd8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5640b9834ca8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5640b9834c48 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5640b9834c18 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5640b9834bc8 <col:48, col:57> 'char [48]' lvalue ->c 0x5640b9824c10
|     |     |   `-CXXMemberCallExpr 0x5640b9834ba8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5640b9834b78 <col:48> '<bound member function type>' ->xanno 0x5640b9819ef8
|     |     |       `-CXXThisExpr 0x5640b9834b68 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5640b9834c30 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5640b9834bf8 <col:61> 'int' lvalue ParmVar 0x5640b981da38 'i' 'int'
|     `-ImplicitCastExpr 0x5640b9834d10 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5640b9834cf0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5640b981dab0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5640b981dd60 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5640b981dc90 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5640b98355b8 <col:33, line:620:5>
|   |-ParenExpr 0x5640b9835330 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5640b9835300 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5640b9834f50 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b9834f20 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b9834dc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b9834da8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b9834d68 <col:23> 'int' lvalue ParmVar 0x5640b981dc90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b9834d88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b9834f00 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5640b9834ee8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b9834de0 <col:33> 'int' lvalue ParmVar 0x5640b981dc90 'i' 'int'
|   |   |     `-BinaryOperator 0x5640b9834ec8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5640b9834eb0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5640b9834e00 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5640b9834e88 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5640b9834e70 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5640b9834e38 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5640b9834fb0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b9834f90 <col:79> 'int' 0
|   |   `-CallExpr 0x5640b9835260 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5640b9835248 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b9835228 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b98352a0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9835098 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5640b98352b8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b98350e0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b98352d0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b9835118 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5640b98352e8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b9835210 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b98351f8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b98351b8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5640b98355a8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5640b9835590 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5640b9835578 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5640b9835548 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5640b98354c0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5640b9835490 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5640b9835440 <col:67, col:76> 'char const[48]' lvalue ->c 0x5640b9824c10
|             |   `-CXXMemberCallExpr 0x5640b9835420 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5640b98353f0 <col:67> '<bound member function type>' ->xanno 0x5640b9819d58
|             |       `-CXXThisExpr 0x5640b98353e0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5640b98354a8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5640b9835470 <col:80> 'int' lvalue ParmVar 0x5640b981dc90 'i' 'int'
|-CXXMethodDecl 0x5640b981df78 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5640b981de20 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5640b981dea0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5640b9835de0 <col:45, line:635:5>
|   |-ParenExpr 0x5640b9835b28 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5640b9835af8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5640b98357c0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5640b9835790 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5640b9835630 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5640b9835618 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5640b98355d8 <col:23> 'int' lvalue ParmVar 0x5640b981de20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5640b98355f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5640b9835770 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5640b9835758 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5640b9835650 <col:33> 'int' lvalue ParmVar 0x5640b981de20 'i' 'int'
|   |   |     `-BinaryOperator 0x5640b9835738 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5640b9835720 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5640b9835670 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5640b981a140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5640b98356f8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5640b98356e0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5640b98356a8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5640b9835820 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5640b9835800 <col:79> 'int' 0
|   |   `-CallExpr 0x5640b9835a58 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5640b9835a40 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b9835a20 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5640b9835a98 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b9835890 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5640b9835ab0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5640b98358d8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5640b9835ac8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5640b9835910 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5640b9835ae0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5640b9835a08 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5640b98359f0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5640b98359a8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5640b9835dc0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5640b9835d28 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5640b9835cf8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5640b9835c98 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5640b9835c68 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5640b9835c18 <col:54, col:63> 'char [48]' lvalue ->c 0x5640b9824c10
|     |     |   `-CXXMemberCallExpr 0x5640b9835bf8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5640b9835bc8 <col:54> '<bound member function type>' ->xanno 0x5640b9819ef8
|     |     |       `-CXXThisExpr 0x5640b9835bb8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5640b9835c80 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5640b9835c48 <col:67> 'int' lvalue ParmVar 0x5640b981de20 'i' 'int'
|     `-CXXConstCastExpr 0x5640b9835d90 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5640b9835d78 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5640b9835d40 <col:91> 'const void *' lvalue ParmVar 0x5640b981dea0 'x' 'const void *'
|-CXXMethodDecl 0x5640b981e048 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5640b9835e68 <col:34, line:640:5>
|   `-ReturnStmt 0x5640b9835e58 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5640b9835e40 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5640b9835e10 <col:16> 'Packet *' lvalue ->_data_packet 0x5640b98257c8
|         `-CXXThisExpr 0x5640b9835e00 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5640b981e188 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5640b981e0f8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5640b982ef28 <col:46> 'bool' true
|-CXXMethodDecl 0x5640b981e308 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5640b981e240 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5640b981e3b0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5640b981eb60 <line:660:22> "" ""
| |-EnumConstantDecl 0x5640b981e4b0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5640b981ebd0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981e490 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5640b981e470 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5640b9813610 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5640b981e540 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5640b981ebe8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981e520 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5640b981e500 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5640b98136a0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5640b981e5d0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5640b981ec00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981e5b0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5640b981e590 <col:21> 'int' 0
| |-EnumConstantDecl 0x5640b981e660 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5640b981ec18 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981e640 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5640b981e620 <col:19> 'int' 16
| |-EnumConstantDecl 0x5640b981e6f0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5640b981ec30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981e6d0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5640b981e6b0 <col:21> 'int' 16
| |-EnumConstantDecl 0x5640b981e780 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5640b981ec48 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981e760 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5640b981e740 <col:19> 'int' 32
| |-EnumConstantDecl 0x5640b981e810 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5640b981ec60 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981e7f0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5640b981e7d0 <col:19> 'int' EnumConstant 0x5640b981e660 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5640b981e8a0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5640b981ec78 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981e880 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5640b981e860 <col:19> 'int' EnumConstant 0x5640b981e780 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5640b981e970 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5640b981ec90 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981e950 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5640b981e930 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5640b981e8f0 <col:23> 'int' EnumConstant 0x5640b981e8a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5640b981e910 <col:40> 'int' 2
| |-EnumConstantDecl 0x5640b981ea40 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5640b981eca8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b981ea20 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5640b981ea00 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5640b981e9c0 <col:23> 'int' EnumConstant 0x5640b981e8a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5640b981e9e0 <col:40> 'int' 4
| `-EnumConstantDecl 0x5640b981eb10 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5640b981ecc0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b981eaf0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5640b981ead0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5640b981ea90 <col:23> 'int' EnumConstant 0x5640b981e8a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5640b981eab0 <col:40> 'int' 8
|-CXXMethodDecl 0x5640b981ed00 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5640b981eda0 <col:68> "" ""
|-CXXMethodDecl 0x5640b981ee38 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5640b981eed8 <col:45> "" ""
|-CXXMethodDecl 0x5640b981ef70 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5640b981f010 <col:57> "" ""
|-CXXMethodDecl 0x5640b981f0a8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5640b981f148 <col:45> "" ""
|-CXXMethodDecl 0x5640b981f1e0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5640b981f280 <col:57> "" ""
|-CXXMethodDecl 0x5640b981f310 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5640b981f3b0 <col:51> "" ""
|-CXXMethodDecl 0x5640b981f440 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5640b981f4e0 <col:63> "" ""
|-CXXMethodDecl 0x5640b981f570 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5640b981f610 <col:53> "" ""
|-CXXMethodDecl 0x5640b981f6a0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5640b981f740 <col:65> "" ""
|-CXXMethodDecl 0x5640b981f858 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5640b981f7c8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5640b981f900 <col:61> "" ""
|-CXXMethodDecl 0x5640b981fa98 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5640b981f988 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5640b981fa00 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5640b981fb48 <col:67> "" ""
|-CXXMethodDecl 0x5640b981fc60 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5640b981fbd0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5640b981fd08 <col:63> "" ""
|-CXXMethodDecl 0x5640b981fea0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5640b981fd90 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5640b981fe08 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5640b981ff50 <col:69> "" ""
|-CXXMethodDecl 0x5640b9820068 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5640b981ffd8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5640b9820110 <col:63> "" ""
|-CXXMethodDecl 0x5640b98227e8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5640b98226d8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5640b9822750 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5640b9822898 <col:69> "" ""
|-CXXMethodDecl 0x5640b98229b0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5640b9822920 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5640b9822a58 <col:62> "" ""
|-CXXMethodDecl 0x5640b9822bf0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5640b9822ae0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5640b9822b58 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5640b9822ca0 <col:68> "" ""
|-CXXMethodDecl 0x5640b9822db8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5640b9822d28 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5640b9822e60 <col:63> "" ""
|-CXXMethodDecl 0x5640b9822ff8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5640b9822ee8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5640b9822f60 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5640b98230a8 <col:69> "" ""
|-CXXMethodDecl 0x5640b9823138 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5640b98231d8 <col:64> "" ""
|-CXXMethodDecl 0x5640b9823268 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5640b9823308 <col:52> "" ""
|-CXXMethodDecl 0x5640b9823398 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5640b9823438 <col:67> "" ""
|-CXXMethodDecl 0x5640b98234c8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5640b9823568 <col:55> "" ""
|-CXXMethodDecl 0x5640b9823680 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5640b98235f0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5640b9823728 <col:58> "" ""
|-CXXMethodDecl 0x5640b98238c0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5640b98237b0 <col:33> col:36 'int'
| |-ParmVarDecl 0x5640b9823828 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5640b9823970 <col:62> "" ""
|-CXXMethodDecl 0x5640b9823a88 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5640b98239f8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5640b9823b30 <col:58> "" ""
|-CXXMethodDecl 0x5640b9823cc8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5640b9823bb8 <col:33> col:36 'int'
| |-ParmVarDecl 0x5640b9823c30 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5640b9823d78 <col:62> "" ""
|-CXXMethodDecl 0x5640b9823e90 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5640b9823e00 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5640b9823f38 <col:60> "" ""
|-CXXMethodDecl 0x5640b98240d0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5640b9823fc0 <col:34> col:37 'int'
| |-ParmVarDecl 0x5640b9824038 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5640b9824180 <col:64> "" ""
|-CXXMethodDecl 0x5640b9824298 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5640b9824208 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5640b9824340 <col:58> "" ""
|-CXXMethodDecl 0x5640b98244d8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5640b98243c8 <col:33> col:36 'int'
| |-ParmVarDecl 0x5640b9824440 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5640b9824588 <col:62> "" ""
|-CXXMethodDecl 0x5640b98246a0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5640b9824610 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5640b9824748 <col:59> "" ""
|-CXXMethodDecl 0x5640b98248e0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5640b98247d0 <col:33> col:36 'int'
| |-ParmVarDecl 0x5640b9824848 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5640b9824990 <col:63> "" ""
|-AccessSpecDecl 0x5640b9824a00 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5640b9824a28 prev 0x5640b9819c30 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5640b9824b20 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5640b9824c10 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5640b9824d38 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5640b9824eb8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5640b9825038 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5640b98251b8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5640b9835fe8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5640b9836858 <col:11>
| |-CXXDestructorDecl 0x5640b98360c0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5640b98361f8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5640b98361f8
| | `-ParmVarDecl 0x5640b9836308 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5640b98363a8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5640b98363a8
| | `-ParmVarDecl 0x5640b98364b8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5640b9839278 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5640b9839388 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5640b9839608 <col:11>
| |   `-ReturnStmt 0x5640b98395f8 <col:11>
| |     `-UnaryOperator 0x5640b98395e0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5640b98395d0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5640b98393f8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5640b98393f8
|   `-ParmVarDecl 0x5640b9839508 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5640b9825220 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5640b9825338 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5640b98253d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5640b9825440 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5640b98254a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5640b9825510 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5640b9825570 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5640b9825630 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5640b9825690 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5640b98256f0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5640b9835ef8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5640b98253d8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5640b9836868 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5640b98368c0 <col:12>
| |-CXXConstructorDecl 0x5640b9836528 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5640b9836528
| | `-ParmVarDecl 0x5640b9836638 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5640b98366d8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5640b98366d8
| | `-ParmVarDecl 0x5640b98367e8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5640b9838960 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5640b9825768 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5640b98257c8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5640b9825830 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5640b9825898 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5640b9825900 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5640b9825968 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5640b98259c8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5640b9825a28 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5640b9825a90 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5640b9825b18 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5640b9825768 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5640b9835e90 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5640b98259c8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5640b98368d0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5640b9836930 <col:21, line:755:5>
|-CXXConstructorDecl 0x5640b9825cb8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5640b9825bf8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5640b9825db0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5640b9825f98 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5640b9825ea0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5640b9826268 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5640b9826050 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b98260c8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5640b9826140 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b9826488 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5640b9826338 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5640b98263b0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5640b982ea68 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5640b9826548 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5640b98265c0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5640b9826638 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5640b982ebc0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5640b982eb30 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b982ed08 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5640b982ec78 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5640b982ee00 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b996d3c0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b996d4d8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x5640b996d5a8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x5640b996d608 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x5640b996d670 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x5640b996d6f8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x5640b996d960 <col:16, line:46:5>
|   |-BinaryOperator 0x5640b996d8a8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x5640b996d7c8 <col:9> 'TaskLink *' lvalue ->_prev 0x5640b996d5a8
|   | | `-CXXThisExpr 0x5640b996d7b8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x5640b996d890 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x5640b996d870 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x5640b996d808 <col:17> 'TaskLink *' lvalue ->_next 0x5640b996d608
|   |     | `-CXXThisExpr 0x5640b996d7f8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x5640b996d858 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x5640b996d838 <col:25> 'int' 0
|   `-BinaryOperator 0x5640b996d940 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x5640b996d8d8 <col:9> 'unsigned int' lvalue ->_pass 0x5640b996d670
|     | `-CXXThisExpr 0x5640b996d8c8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x5640b996d928 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5640b996d908 <col:17> 'int' 0
|-CXXConstructorDecl 0x5640b99ca5e8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x5640b99ca5e8
| `-ParmVarDecl 0x5640b99ca6f8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x5640b99ca798 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x5640b99ca798
| `-ParmVarDecl 0x5640b99ca8a8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x5640b99caa98 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x5640b99caa98
|-CXXMethodDecl 0x5640b99cb298 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x5640b99cb298
| `-ParmVarDecl 0x5640b99cb3a8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x5640b99cb418 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x5640b99cb418
  `-ParmVarDecl 0x5640b99cb528 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b996fec8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5640b996fff8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x5640b9970058 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x5640b99700b8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x5640b99e3038 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x5640b99e3110 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5640b99e3110
|-CXXConstructorDecl 0x5640b99e33c8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5640b99e33c8
| `-ParmVarDecl 0x5640b99e34d8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x5640b99e3578 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5640b99e3578
  `-ParmVarDecl 0x5640b99e3688 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon.16 = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon.16 = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b996fd20 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5640b996fe38 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x5640b996fec8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5640b996fff8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x5640b9970058 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x5640b99700b8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x5640b99e3038 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x5640b99e3110 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5640b99e3110
| |-CXXConstructorDecl 0x5640b99e33c8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5640b99e33c8
| | `-ParmVarDecl 0x5640b99e34d8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x5640b99e3578 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5640b99e3578
|   `-ParmVarDecl 0x5640b99e3688 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x5640b9970178 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x5640b99701d8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x5640b9970178 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5640b996fff8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x5640b9970230 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x5640b9970178 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5640b9970058 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x5640b9970288 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x5640b9970178 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5640b99700b8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x5640b99702e0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5640b99e2f48 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5640b99e38a8 <col:11>
|-CXXConstructorDecl 0x5640b99e3218 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5640b99e3218
| `-ParmVarDecl 0x5640b99e3328 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x5640b99e3728 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5640b99e3728
  `-ParmVarDecl 0x5640b99e3838 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b97e4cc0 prev 0x5640b97dbb00 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b97e4db8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x5640b97e4e58 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x5640b97ebc20 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5640b97ec008 <col:11>
|-CXXConstructorDecl 0x5640b97ebd00 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b97ebde8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5640b97ec750 <col:11>
|-CXXConstructorDecl 0x5640b97ebe88 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b97ebf98 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x5640b97edfa8 <col:11>
|-CXXDestructorDecl 0x5640b97ed2b8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5640b94f3e68 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b94f3f78 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5640b94f4840 <col:11>
|   `-ReturnStmt 0x5640b94f4830 <col:11>
|     `-UnaryOperator 0x5640b94f4818 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5640b94f4808 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x5640b94f3fe8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5640b94f40f8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x5640b995dbf0 <col:11>
    `-ReturnStmt 0x5640b995dbe0 <col:11>
      `-UnaryOperator 0x5640b995dbc8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5640b995dbb8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b97dacb8 prev 0x5640b97da9c8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b97dadb0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x5640b97dae40 <col:19, col:25> col:19 public
|-TypedefDecl 0x5640b97dae78 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x5640b9440040 'int32_t' sugar
|   |-Typedef 0x5640b934e268 'int32_t'
|   `-TypedefType 0x5640b93273b0 '__int32_t' sugar
|     |-Typedef 0x5640b9326fc8 '__int32_t'
|     `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b97daee0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x5640b9440200 'int64_t' sugar
|   |-Typedef 0x5640b934e2d0 'int64_t'
|   `-TypedefType 0x5640b93274d0 '__int64_t' sugar
|     |-Typedef 0x5640b93270a8 '__int64_t'
|     `-BuiltinType 0x5640b92e5390 'long'
|-EnumDecl 0x5640b97daf38 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x5640b97db0b0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x5640b97db090 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x5640b97db068 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x5640b97db050 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x5640b97db020 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x5640b97db1a8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x5640b97db188 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x5640b97db160 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x5640b97db148 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x5640b97db120 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x5640b97db100 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x5640b97db1f8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x5640b97db300 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5640b97db850 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b97db2e0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x5640b97db2c0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x5640b97db390 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5640b97db868 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b97db370 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5640b97db350 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x5640b97db420 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5640b97db880 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b97db400 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x5640b97db3e0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x5640b97db4b0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5640b97db898 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b97db490 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5640b97db470 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x5640b97db540 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5640b97db8b0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b97db520 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x5640b97db500 <col:25> 'int' 1000
| |-EnumConstantDecl 0x5640b97db5d0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5640b97db8c8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b97db5b0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x5640b97db590 <col:24> 'int' 1000
| |-EnumConstantDecl 0x5640b97db660 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5640b97db8e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b97db640 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x5640b97db620 <col:26> 'int' EnumConstant 0x5640b97db300 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x5640b97db730 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5640b97db8f8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b97db710 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x5640b97db6f0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x5640b97db6b0 <col:27> 'int' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x5640b97db6d0 <col:44> 'int' EnumConstant 0x5640b97db5d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x5640b97db800 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x5640b97db910 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b97db7e0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x5640b97db7c0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x5640b97db780 <col:27> 'int' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x5640b97db7a0 <col:44> 'int' EnumConstant 0x5640b97db4b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x5640b97db928 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x5640b97dba30 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x5640b97dba80 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b97dba10 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x5640b97db9f0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x5640b97dbaa8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x5640b943fc70 'uninitialized_type'
|   `-CXXRecord 0x5640b943fbd8 'uninitialized_type'
|-CXXRecordDecl 0x5640b97dbb00 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x5640b97dbc10 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x5640b97e5e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5640b97ec018 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5640b97ec138 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x5640b97ec0f0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x5640b97ec080 <col:9> '<bound member function type>' ->assign 0x5640b97e0858
|     | `-CXXThisExpr 0x5640b97ec070 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5640b97ec0b0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5640b97ec120 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5640b97ec0d0 <col:19> 'int' 0
|-CXXConstructorDecl 0x5640b97dbe58 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x5640b97dbcd0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x5640b97dbd48 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5640b97e7950 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5640b97e7930 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x5640b97e5e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5640b97ec150 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5640b97ec2a0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x5640b97ec228 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x5640b97ec1b8 <col:9> '<bound member function type>' ->assign 0x5640b97e0858
|     | `-CXXThisExpr 0x5640b97ec1a8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5640b97ec270 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5640b97ec258 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5640b97ec1e8 <col:16> 'long' lvalue ParmVar 0x5640b97dbcd0 'sec' 'long'
|     `-ImplicitCastExpr 0x5640b97ec288 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5640b97ec208 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97dbd48 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5640b97dc0b8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5640b97dbf28 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x5640b97dbfa0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5640b97e7988 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5640b97e7968 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x5640b97e5e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5640b97ec2b8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5640b97ec3f0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x5640b97ec390 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x5640b97ec320 <col:9> '<bound member function type>' ->assign 0x5640b97e0858
|     | `-CXXThisExpr 0x5640b97ec310 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5640b97ec3c0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5640b97ec350 <col:16> 'int' lvalue ParmVar 0x5640b97dbf28 'sec' 'int'
|     `-ImplicitCastExpr 0x5640b97ec3d8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5640b97ec370 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97dbfa0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5640b97dc318 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x5640b97dc188 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x5640b97dc200 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5640b97e79c0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5640b97e79a0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x5640b97e5e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5640b97ec408 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5640b97ec558 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x5640b97ec4e0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x5640b97ec470 <col:9> '<bound member function type>' ->assign 0x5640b97e0858
|     | `-CXXThisExpr 0x5640b97ec460 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5640b97ec528 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5640b97ec510 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5640b97ec4a0 <col:16> 'unsigned long' lvalue ParmVar 0x5640b97dc188 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x5640b97ec540 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5640b97ec4c0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97dc200 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5640b97dd4b0 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x5640b97dc3e8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x5640b97dc460 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5640b97e79f8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5640b97e79d8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x5640b97e5e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5640b97ec570 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5640b97ec6c0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x5640b97ec648 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x5640b97ec5d8 <col:9> '<bound member function type>' ->assign 0x5640b97e0858
|     | `-CXXThisExpr 0x5640b97ec5c8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5640b97ec690 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5640b97ec678 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5640b97ec608 <col:16> 'unsigned int' lvalue ParmVar 0x5640b97dc3e8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x5640b97ec6a8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5640b97ec628 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97dc460 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5640b97dd610 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x5640b97dd580 <col:31> col:37 'double'
|-CXXConstructorDecl 0x5640b97dd7a8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x5640b97dd6e8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x5640b97dd9d8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x5640b97dd8e0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x5640b97ddb88 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x5640b97ddac8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x5640b97e5e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5640b97ec760 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x5640b97ec6d8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x5640b97ddac8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5640b97ec7c0 <col:19, line:214:5>
|-CXXConstructorDecl 0x5640b97ddd58 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x5640b97ddc98 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x5640b97e5e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5640b97ec7d0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5640b97ec880 <col:53, line:219:5>
|   `-CStyleCastExpr 0x5640b97ec858 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x5640b97ec828 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x5640b97ddc98 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x5640b97ddf48 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x5640b97ddec0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x5640b97daa60 'Timestamp'
|   | `-CXXRecord 0x5640b97dacb8 'Timestamp'
|   `-ParenType 0x5640b97dde60 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x5640b97dde30 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x5640b97db000 'Timestamp::seconds_type' sugar
|         |-Typedef 0x5640b97dae78 'seconds_type'
|         `-TypedefType 0x5640b9440040 'int32_t' sugar
|           |-Typedef 0x5640b934e268 'int32_t'
|           `-TypedefType 0x5640b93273b0 '__int32_t' sugar
|             |-Typedef 0x5640b9326fc8 '__int32_t'
|             `-BuiltinType 0x5640b92e5370 'int'
|-CXXConversionDecl 0x5640b97de088 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5640b97de158 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x5640b97ec988 <col:37, line:231:5>
|   `-ReturnStmt 0x5640b97ec978 <line:227:9, col:23>
|     `-BinaryOperator 0x5640b97ec958 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x5640b97ec928 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5640b97ec8d8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x5640b97e4e58
|       |   `-MemberExpr 0x5640b97ec8a8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x5640b97e5e08
|       |     `-CXXThisExpr 0x5640b97ec898 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5640b97ec940 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x5640b97ec908 <col:23> 'int' 0
|-CXXMethodDecl 0x5640b97de218 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x5640b97de2d8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b97de398 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b97de458 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b97de518 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b97de688 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x5640b97de5c8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x5640b97de7d0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x5640b97de740 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b97de898 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5640b97de938 <col:54> "" ""
|-CXXMethodDecl 0x5640b97de9c8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5640b97dea68 <col:54> "" ""
|-CXXMethodDecl 0x5640b97deaf8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5640b97deb98 <col:54> "" ""
|-CXXMethodDecl 0x5640b97dec98 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x5640b97ded68 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x5640b97dee98 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x5640b97def90 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x5640b97df0c8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5640b97ecba0 <col:39, line:271:5>
|   `-ReturnStmt 0x5640b97ecb90 <line:267:9, col:61>
|     `-CallExpr 0x5640b97ecb30 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5640b97ecb18 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b97ec9a0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5640b97e6138 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5640b97ecb60 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5640b97eca00 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x5640b97e4e58
|       |   `-MemberExpr 0x5640b97ec9d0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x5640b97e5e08
|       |     `-CXXThisExpr 0x5640b97ec9c0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5640b97ecb78 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5640b97ecaa0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5640b97eca70 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5640b97eca30 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5640b97eca88 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5640b97eca50 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db5d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5640b97df188 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5640b97ecd60 <col:39, line:279:5>
|   `-ReturnStmt 0x5640b97ecd50 <line:275:9, col:61>
|     `-CallExpr 0x5640b97eccf0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5640b97eccd8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b97ecbb8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5640b97e6138 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5640b97ecd20 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5640b97ecc18 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x5640b97e4e58
|       |   `-MemberExpr 0x5640b97ecbe8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x5640b97e5e08
|       |     `-CXXThisExpr 0x5640b97ecbd8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5640b97ecd38 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5640b97eccb8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5640b97ecc88 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5640b97ecc48 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5640b97ecca0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5640b97ecc68 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db4b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5640b97df248 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5640b97ecef8 <col:39, line:287:5>
|   `-ReturnStmt 0x5640b97ecee8 <line:283:9, col:53>
|     `-BinaryOperator 0x5640b97ecec8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x5640b97ece98 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5640b97ecdb8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x5640b97e4e58
|       |   `-MemberExpr 0x5640b97ecd88 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x5640b97e5e08
|       |     `-CXXThisExpr 0x5640b97ecd78 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5640b97eceb0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x5640b97ece78 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5640b97ece58 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5640b97ece28 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5640b97ecde8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db300 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5640b97ece40 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5640b97ece08 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5640b97df338 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5640b97ee190 <col:40, line:293:5>
|   |-DeclStmt 0x5640b97ed040 <line:291:9, col:48>
|   | `-VarDecl 0x5640b97ecf20 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x5640b97ed020 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x5640b97ecfc8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5640b97ecf98 <col:22> '<bound member function type>' ->subsec 0x5640b97de2d8
|   |     |   `-CXXThisExpr 0x5640b97ecf88 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x5640b97ed008 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x5640b97ecfe8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db730 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5640b97ee180 <line:292:9, col:70>
|     `-ExprWithCleanups 0x5640b97ee168 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5640b97ee138 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5640b97ee120 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5640b97ee100 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5640b97ee0d0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5640b97ede68 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5640b97ede50 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5640b97ed058 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x5640b97ecf20 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5640b97ee070 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5640b97ee058 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5640b97ee028 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5640b97ede80 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x5640b97eddf0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x5640b97eddd8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5640b97edd88 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5640b97dac08 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5640b97edd28 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5640b97ed088 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5640b97ed078 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5640b97edd70 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5640b97edd58 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5640b97ed548 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5640b97ed0b0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x5640b97ed140 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5640b97ed110 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5640b97ed0d0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db730 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x5640b97ed128 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5640b97ed0f0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x5640b97ecf20 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x5640b97ee0a0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5640b97ede38 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5640b97ede28 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x5640b97df3f8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5640b97ee6e8 <col:40, line:302:5>
|   |-DeclStmt 0x5640b97ee2e0 <line:297:9, col:48>
|   | `-VarDecl 0x5640b97ee1c0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x5640b97ee2c0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x5640b97ee268 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5640b97ee238 <col:22> '<bound member function type>' ->subsec 0x5640b97de2d8
|   |     |   `-CXXThisExpr 0x5640b97ee228 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x5640b97ee2a8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x5640b97ee288 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db800 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5640b97ee6d8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x5640b97ee6c0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5640b97ee690 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5640b97ee678 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5640b97ee658 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5640b97ee628 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5640b97ee550 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5640b97ee538 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5640b97ee2f8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x5640b97ee1c0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5640b97ee5c8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5640b97ee5b0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5640b97ee580 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5640b97ee568 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x5640b97ee4d8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x5640b97ee4c0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5640b97ee4a0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5640b97dac08 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5640b97ee440 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5640b97ee328 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5640b97ee318 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5640b97ee488 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5640b97ee470 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5640b97ee400 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5640b97ee350 <col:39> 'int' 0
|               |               `-BinaryOperator 0x5640b97ee3e0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5640b97ee3b0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5640b97ee370 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db800 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x5640b97ee3c8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5640b97ee390 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x5640b97ee1c0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x5640b97ee5f8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5640b97ee520 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5640b97ee510 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x5640b97df4b8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5640b97ee770 <col:40, line:306:5>
|   `-ReturnStmt 0x5640b97ee760 <line:305:9, col:17>
|     `-CXXConstructExpr 0x5640b97ee730 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x5640b97ee718 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5640b97ee708 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x5640b97df658 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x5640b97df568 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x5640b97df828 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x5640b97df730 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x5640b97df918 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x5640b97dfa88 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x5640b97df9c8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x5640b97ee8b8 <col:56, line:320:5>
|   `-ReturnStmt 0x5640b97ee8a8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x5640b97ee890 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x5640b97ee860 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5640b97ee848 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5640b97ee808 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5640b97ee7d8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5640b97ee798 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5640b97df9c8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x5640b97ee7f0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5640b97ee7b8 <col:31> 'int' 0
|-CXXMethodDecl 0x5640b97dfcc8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5640b97dfb40 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5640b97dfbb8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97eea88 <col:72, line:326:5>
|   `-ReturnStmt 0x5640b97eea78 <line:325:9, col:51>
|     `-ExprWithCleanups 0x5640b97eea60 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5640b97eea30 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5640b97eea18 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5640b97ee9d8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5640b97ee9c0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5640b97ee8e0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5640b97dfb40 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5640b97ee980 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5640b97ee968 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5640b97ee900 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5640b97e45b0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5640b97ee9a8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5640b97ee920 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97dfbb8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b97dfe78 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5640b97dfd88 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5640b97ef150 <col:56, line:337:5>
|   |-DeclStmt 0x5640b97eed88 <line:329:9, col:51>
|   | `-VarDecl 0x5640b97eeab0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5640b97eed70 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5640b97eed40 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5640b97eed28 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5640b97eed10 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5640b97eece0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5640b97eecc8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5640b97eecb0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5640b97eeba0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5640b97eef40 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5640b97eedf0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5640b97e4e58
|   | | `-MemberExpr 0x5640b97eedc0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5640b97e5e08
|   | |   `-DeclRefExpr 0x5640b97eeda0 <col:9> 'Timestamp' lvalue Var 0x5640b97eeab0 't' 'Timestamp'
|   | `-BinaryOperator 0x5640b97eef20 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5640b97eeef0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640b97eee20 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x5640b97dfd88 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5640b97eef08 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5640b97eeed0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5640b97eeeb0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5640b97eee80 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5640b97eee40 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5640b97eee98 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5640b97eee60 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db5d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5640b97ef138 <line:336:9, col:16>
|     `-CXXConstructExpr 0x5640b97ef108 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5640b97ef0f0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5640b97ef0d0 <col:16> 'Timestamp' lvalue Var 0x5640b97eeab0 't' 'Timestamp'
|-CXXMethodDecl 0x5640b97e0040 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5640b97dff30 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5640b97dffa8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97ef308 <col:72, line:343:5>
|   `-ReturnStmt 0x5640b97ef2f8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x5640b97ef2e0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5640b97ef2b0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5640b97ef298 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5640b97ef258 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5640b97ef240 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5640b97ef188 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5640b97dff30 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5640b97ef200 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5640b97ef1e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5640b97ef1a8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5640b97e46f8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5640b97ef228 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5640b97ef1c8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97dffa8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b97e0190 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5640b97e0100 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5640b97ef750 <col:56, line:354:5>
|   |-DeclStmt 0x5640b97ef4f8 <line:346:9, col:51>
|   | `-VarDecl 0x5640b97ef330 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5640b97ef4e0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5640b97ef4b0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5640b97ef498 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5640b97ef480 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5640b97ef450 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5640b97ef438 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5640b97ef420 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5640b97ef3f0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5640b97ef6b0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5640b97ef560 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5640b97e4e58
|   | | `-MemberExpr 0x5640b97ef530 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5640b97e5e08
|   | |   `-DeclRefExpr 0x5640b97ef510 <col:9> 'Timestamp' lvalue Var 0x5640b97ef330 't' 'Timestamp'
|   | `-BinaryOperator 0x5640b97ef690 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5640b97ef660 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640b97ef590 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x5640b97e0100 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5640b97ef678 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5640b97ef640 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5640b97ef620 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5640b97ef5f0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5640b97ef5b0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5640b97ef608 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5640b97ef5d0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db4b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5640b97ef738 <line:353:9, col:16>
|     `-CXXConstructExpr 0x5640b97ef708 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5640b97ef6f0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5640b97ef6d0 <col:16> 'Timestamp' lvalue Var 0x5640b97ef330 't' 'Timestamp'
|-CXXMethodDecl 0x5640b97e0358 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5640b97e0248 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5640b97e02c0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97ef908 <col:72, line:360:5>
|   `-ReturnStmt 0x5640b97ef8f8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x5640b97ef8e0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5640b97ef8b0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5640b97ef898 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5640b97ef858 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5640b97ef840 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5640b97ef788 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5640b97e0248 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5640b97ef800 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5640b97ef7e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5640b97ef7a8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5640b97e4840 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5640b97ef828 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5640b97ef7c8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97e02c0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b97e04a8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5640b97e0418 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5640b97fc278 <col:56, line:371:5>
|   |-DeclStmt 0x5640b97efaf8 <line:363:9, col:51>
|   | `-VarDecl 0x5640b97ef930 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5640b97efae0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5640b97efab0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5640b97efa98 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5640b97efa80 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5640b97efa50 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5640b97efa38 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5640b97efa20 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5640b97ef9f0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5640b97fc1d8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5640b97efb60 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5640b97e4e58
|   | | `-MemberExpr 0x5640b97efb30 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5640b97e5e08
|   | |   `-DeclRefExpr 0x5640b97efb10 <col:9> 'Timestamp' lvalue Var 0x5640b97ef930 't' 'Timestamp'
|   | `-CallExpr 0x5640b97fc178 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x5640b97fc160 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5640b97efb90 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5640b97e6138 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x5640b97fc1a8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640b97efbb0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x5640b97e0418 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5640b97fc1c0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x5640b97fc140 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x5640b97fc110 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x5640b97efbd0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db300 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x5640b97fc128 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x5640b97efbf0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5640b97fc260 <line:370:9, col:16>
|     `-CXXConstructExpr 0x5640b97fc230 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5640b97fc218 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5640b97fc1f8 <col:16> 'Timestamp' lvalue Var 0x5640b97ef930 't' 'Timestamp'
|-CXXMethodDecl 0x5640b97e0598 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x5640b97fc3b8 <col:39, line:377:5>
|   `-ReturnStmt 0x5640b97fc3a8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x5640b97fc390 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x5640b97fc360 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5640b97fc348 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5640b97fc308 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x5640b97fc2b0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x5640b97fc2f0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5640b97fc2d0 <col:29> 'int' 1
|-CXXMethodDecl 0x5640b97e0658 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x5640b97fc498 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x5640b97fc450 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x5640b97fc3e0 <col:9> '<bound member function type>' ->assign 0x5640b97e0858
|     | `-CXXThisExpr 0x5640b97fc3d0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5640b97fc410 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5640b97fc480 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5640b97fc430 <col:19> 'int' 0
|-CXXMethodDecl 0x5640b97e0858 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5640b97e0708 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5640b97e0780 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5640b97e7a30 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5640b97e7a10 <col:60> 'int' 0
| `-CompoundStmt 0x5640b97fc690 <col:63, line:395:5>
|   `-BinaryOperator 0x5640b97fc670 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x5640b97fc4f0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x5640b97e4e58
|     | `-MemberExpr 0x5640b97fc4c0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x5640b97e5e08
|     |   `-CXXThisExpr 0x5640b97fc4b0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x5640b97fc650 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x5640b97fc5e0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x5640b97fc580 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x5640b97fc568 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x5640b97fc550 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x5640b97fc520 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5640b97e0708 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x5640b97fc5c8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x5640b97fc5a8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x5640b97fc638 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x5640b97fc620 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x5640b97fc600 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97e0780 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b97e0a28 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5640b97e0918 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5640b97e0990 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97fc7e8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x5640b97fc7a0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x5640b97fc6b8 <col:9> '<bound member function type>' ->assign 0x5640b97e0858
|     | `-CXXThisExpr 0x5640b97fc6a8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5640b97fc7d0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5640b97fc6e8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5640b97e0918 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5640b97fc760 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5640b97fc748 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b97fc708 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5640b97e46f8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5640b97fc788 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5640b97fc728 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97e0990 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b97e0bf8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5640b97e0ae8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5640b97e0b60 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97fc940 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x5640b97fc8f8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x5640b97fc810 <col:9> '<bound member function type>' ->assign 0x5640b97e0858
|     | `-CXXThisExpr 0x5640b97fc800 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5640b97fc928 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5640b97fc840 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5640b97e0ae8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5640b97fc8b8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5640b97fc8a0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b97fc860 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5640b97e4840 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5640b97fc8e0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5640b97fc880 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97e0b60 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b97e0dc8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5640b97e0cb8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5640b97e0d30 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5640b97e7a68 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5640b97e7a48 <col:57> 'int' 0
| `-DeprecatedAttr 0x5640b97e0e78 <col:75> "" ""
|-CXXMethodDecl 0x5640b97e1008 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5640b97e0ef8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5640b97e0f70 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5640b97e10b8 <col:74> "" ""
|-CXXMethodDecl 0x5640b97e1248 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5640b97e1138 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5640b97e11b0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5640b97e12f8 <col:74> "" ""
|-CXXMethodDecl 0x5640b97e1388 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x5640b97e1428 <col:42> "" ""
|-CXXMethodDecl 0x5640b97e3c60 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x5640b97e3b40 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5640b97e3bc0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x5640b97e3d30 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x5640b97e3df0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x5640b97e3e90 <col:20>
| `-OptimizeNoneAttr 0x5640b97e3ee8 <col:30>
|-CXXMethodDecl 0x5640b97e3f30 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x5640b97e3ff0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x5640b97e40b0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x5640b97e4170 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x5640b97e4230 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x5640b97e42f0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x5640b97e43b0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x5640b97e4470 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x5640b97e45b0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5640b97e4520 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97fca88 <col:58, line:512:5>
|   `-ReturnStmt 0x5640b97fca78 <line:511:9, col:53>
|     `-BinaryOperator 0x5640b97fca58 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5640b97fca28 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5640b97fc958 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97e4520 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5640b97fca40 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5640b97fca08 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5640b97fc9e8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5640b97fc9b8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5640b97fc978 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5640b97fc9d0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5640b97fc998 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db5d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5640b97e46f8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5640b97e4668 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97fcbd0 <col:58, line:516:5>
|   `-ReturnStmt 0x5640b97fcbc0 <line:515:9, col:53>
|     `-BinaryOperator 0x5640b97fcba0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5640b97fcb70 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5640b97fcaa0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97e4668 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5640b97fcb88 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5640b97fcb50 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5640b97fcb30 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5640b97fcb00 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5640b97fcac0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5640b97fcb18 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5640b97fcae0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db4b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5640b97e4840 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5640b97e47b0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97fcd18 <col:58, line:520:5>
|   `-ReturnStmt 0x5640b97fcd08 <line:519:9, col:53>
|     `-BinaryOperator 0x5640b97fcce8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5640b97fccb8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5640b97fcbe8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97e47b0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5640b97fccd0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5640b97fcc98 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5640b97fcc78 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5640b97fcc48 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5640b97fcc08 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db300 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5640b97fcc60 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5640b97fcc28 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5640b97e4988 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5640b97e48f8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97fce60 <col:60, line:524:5>
|   `-ReturnStmt 0x5640b97fce50 <line:523:9, col:55>
|     `-BinaryOperator 0x5640b97fce30 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5640b97fce00 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5640b97fcd30 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97e48f8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5640b97fce18 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5640b97fcde0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5640b97fcdc0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5640b97fcd90 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5640b97fcd50 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5640b97fcda8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5640b97fcd70 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db5d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5640b97e4ad0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5640b97e4a40 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97fcfa8 <col:60, line:528:5>
|   `-ReturnStmt 0x5640b97fcf98 <line:527:9, col:55>
|     `-BinaryOperator 0x5640b97fcf78 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5640b97fcf48 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5640b97fce78 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97e4a40 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5640b97fcf60 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5640b97fcf28 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5640b97fcf08 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5640b97fced8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5640b97fce98 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5640b97fcef0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5640b97fceb8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db4b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5640b97e4c18 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5640b97e4b88 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97fd0f0 <col:60, line:532:5>
|   `-ReturnStmt 0x5640b97fd0e0 <line:531:9, col:55>
|     `-BinaryOperator 0x5640b97fd0c0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5640b97fd090 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5640b97fcfc0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97e4b88 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5640b97fd0a8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5640b97fd070 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5640b97fd050 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5640b97fd020 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5640b97fcfe0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db300 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5640b97fd038 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5640b97fd000 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5640b97db660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x5640b97e4cc0 prev 0x5640b97dbb00 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5640b97e4db8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x5640b97e4e58 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x5640b97ebc20 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5640b97ec008 <col:11>
| |-CXXConstructorDecl 0x5640b97ebd00 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5640b97ebde8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5640b97ec750 <col:11>
| |-CXXConstructorDecl 0x5640b97ebe88 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x5640b97ebf98 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x5640b97edfa8 <col:11>
| |-CXXDestructorDecl 0x5640b97ed2b8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5640b94f3e68 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5640b94f3f78 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5640b94f4840 <col:11>
| |   `-ReturnStmt 0x5640b94f4830 <col:11>
| |     `-UnaryOperator 0x5640b94f4818 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5640b94f4808 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x5640b94f3fe8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x5640b94f40f8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x5640b995dbf0 <col:11>
|     `-ReturnStmt 0x5640b995dbe0 <col:11>
|       `-UnaryOperator 0x5640b995dbc8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5640b995dbb8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x5640b97e4ec0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x5640b97e4fc0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5640b97e51c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b97e4fa0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5640b97e4f80 <col:21> 'int' 0
| |-EnumConstantDecl 0x5640b97e5050 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5640b97e51d8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b97e5030 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x5640b97e5010 <col:23> 'int' 1
| |-EnumConstantDecl 0x5640b97e50e0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5640b97e51f0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b97e50c0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x5640b97e50a0 <col:23> 'int' 2
| `-EnumConstantDecl 0x5640b97e5170 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x5640b97e5208 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b97e5150 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x5640b97e5130 <col:27> 'int' 3
|-CXXMethodDecl 0x5640b97e5248 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x5640b97e5310 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x5640b97e5518 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x5640b97e53c0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x5640b97e5440 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x5640b97e7a80 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x5640b97e5728 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x5640b97e55d8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x5640b97e5650 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x5640b97e57f8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x5640b97e58b8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x5640b97e5a28 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x5640b97e5968 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x5640b97e5af0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x5640b97e5bb0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x5640b97e5c70 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x5640b97e5d30 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x5640b97e5dd0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x5640b97e5e08 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x5640b97e5e78 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x5640b97fd108 <col:27, line:684:5>
|-CXXMethodDecl 0x5640b97e5f38 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x5640b97fd118 <col:27, line:696:5>
|-CXXMethodDecl 0x5640b97e6138 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x5640b97e5fe8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x5640b97e6060 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97fd2a0 <col:66, line:700:5>
|   `-ReturnStmt 0x5640b97fd290 <line:699:9, col:31>
|     `-CallExpr 0x5640b97fd230 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x5640b97fd218 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b97fd1c8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x5640b96684e8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x5640b97fd260 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x5640b97fd188 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x5640b97e5fe8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x5640b97fd278 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5640b97fd1a8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97e6060 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b97e64a8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x5640b97e61f8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x5640b97e6270 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x5640b97e62e8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x5640b97e6360 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b97fd5f0 <col:64, line:707:5>
|   |-DeclStmt 0x5640b97fd330 <line:704:9, col:24>
|   | `-VarDecl 0x5640b97fd2c8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x5640b97fd540 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x5640b97fd348 <col:9> 'int32_t':'int' lvalue ParmVar 0x5640b97e6270 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x5640b97fd528 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x5640b97fd4c0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x5640b97fd4a8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5640b97fd428 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x5640b966d7b8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x5640b97fd4f8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5640b97fd3c8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x5640b97e62e8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x5640b97fd510 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5640b97fd3e8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b97e6360 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x5640b97fd408 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x5640b97fd2c8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x5640b97fd5d0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x5640b97fd560 <col:9> 'int32_t':'int' lvalue ParmVar 0x5640b97e61f8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x5640b97fd5b8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x5640b97fd5a0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x5640b97fd580 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x5640b97fd2c8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x5640b97e6748 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x5640b97e6578 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x5640b97e65f0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x5640b97e6668 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x5640b97e69e8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x5640b97e6810 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x5640b97e6888 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x5640b97e6900 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x5640b97e6b78 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x5640b97e6ab0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x5640b97e6d78 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x5640b97e6c30 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x5640b97e6ca8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x5640b97e7048 <line:717:5, col:73> col:24
| `-FunctionDecl 0x5640b97e6f88 parent 0x5640b92e5278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5640b97e6e38 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x5640b97e6eb0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x5640b97e7268 <line:718:5, col:72> col:24
| `-FunctionDecl 0x5640b97e71a8 parent 0x5640b92e5278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5640b97e7098 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x5640b97e7110 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x5640b97e7430 <line:719:5, col:57> col:29
| `-FunctionDecl 0x5640b97e7378 parent 0x5640b92e5278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x5640b97e72b8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x5640b97e76b8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x5640b97e75f8 parent 0x5640b92e5278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5640b97e74a8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x5640b97e7520 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x5640b97e78d8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x5640b97e7818 parent 0x5640b92e5278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5640b97e7708 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x5640b97e7780 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x5640b97ed160 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b97ed248 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x5640b97e5e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5640b97edcb8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x5640b97edc70 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x5640b97e5e08
| |     `-DeclRefExpr 0x5640b97edc50 <col:7> 'const Timestamp' lvalue ParmVar 0x5640b97ed248 '' 'const Timestamp &'
| `-CompoundStmt 0x5640b97edd18 <col:7>
|-CXXConstructorDecl 0x5640b97ed3c8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b97ed4d8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x5640b97e5e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5640b97edfb8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x5640b97edf60 <col:7> 'Timestamp::rep_t' xvalue ._t 0x5640b97e5e08
| |     `-CXXStaticCastExpr 0x5640b97edf30 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x5640b97edf00 <col:7> 'Timestamp' lvalue ParmVar 0x5640b97ed4d8 '' 'Timestamp &&'
| `-CompoundStmt 0x5640b97ee018 <col:7>
|-CXXDestructorDecl 0x5640b97ed588 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5640b94f3cb8 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b94f3dc8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x5640b94f48b8 <col:7>
|   |-CXXMemberCallExpr 0x5640b94f4858 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x5640b94f4798 <col:7> '<bound member function type>' .operator= 0x5640b94f3e68
|   | | `-MemberExpr 0x5640b94f46a8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x5640b97e5e08
|   | |   `-CXXThisExpr 0x5640b94f4698 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x5640b94f4768 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x5640b97e5e08
|   |   `-DeclRefExpr 0x5640b94f4748 <col:7> 'const Timestamp' lvalue ParmVar 0x5640b94f3dc8 '' 'const Timestamp &'
|   `-ReturnStmt 0x5640b94f48a8 <col:7>
|     `-UnaryOperator 0x5640b94f4890 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5640b94f4880 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x5640b94f4168 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5640b94f4278 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x5640b995dc68 <col:7>
    |-CXXMemberCallExpr 0x5640b995dc08 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x5640b995db70 <col:7> '<bound member function type>' .operator= 0x5640b94f3fe8
    | | `-MemberExpr 0x5640b995da40 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x5640b97e5e08
    | |   `-CXXThisExpr 0x5640b995da30 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x5640b995db40 <col:7> 'Timestamp::rep_t' xvalue ._t 0x5640b97e5e08
    |   `-CXXStaticCastExpr 0x5640b995db10 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x5640b995dae0 <col:7> 'Timestamp' lvalue ParmVar 0x5640b94f4278 '' 'Timestamp &&'
    `-ReturnStmt 0x5640b995dc58 <col:7>
      `-UnaryOperator 0x5640b995dc40 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5640b995dc30 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b9974358 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x5640b9974568 prev 0x5640b9974358 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5640b9975770 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x5640b9975720 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x5640b9975700 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x5640b99755b0 'type'
|     `-SubstTemplateTypeParmType 0x5640b99753d0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x5640b95b0670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95b0618 'T'
|       `-RecordType 0x5640b9974f20 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x5640b9974e38 'sized_array_memory'
|-FieldDecl 0x5640b99793a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x5640b99793f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5640b9979428 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x5640b9974600 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5640b95e8308 'T'
|   `-RecordType 0x5640b9973500 'TimerSet::heap_element'
|     `-CXXRecord 0x5640b9973470 'heap_element'
|-TypedefDecl 0x5640b99794e8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x5640b99794b0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x5640b9974600 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b9973500 'TimerSet::heap_element'
|       `-CXXRecord 0x5640b9973470 'heap_element'
|-TypedefDecl 0x5640b9979578 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x5640b9979540 'const TimerSet::heap_element &'
|   `-QualType 0x5640b9974601 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5640b9974600 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b9973500 'TimerSet::heap_element'
|         `-CXXRecord 0x5640b9973470 'heap_element'
|-TypedefDecl 0x5640b9979608 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x5640b99795d0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x5640b9974600 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b9973500 'TimerSet::heap_element'
|       `-CXXRecord 0x5640b9973470 'heap_element'
|-TypedefDecl 0x5640b99796c8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x5640b9979690 'const TimerSet::heap_element *'
|   `-QualType 0x5640b9974601 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5640b9974600 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b9973500 'TimerSet::heap_element'
|         `-CXXRecord 0x5640b9973470 'heap_element'
|-TypedefDecl 0x5640b997a320 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x5640b997a2d0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x5640b997a2b0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x5640b997a1e8 'type'
|     `-LValueReferenceType 0x5640b997a1b0 'const TimerSet::heap_element &'
|       `-QualType 0x5640b9979f51 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x5640b9979f50 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x5640b95bad40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5640b95bace8 'T'
|           `-RecordType 0x5640b9973500 'TimerSet::heap_element'
|             `-CXXRecord 0x5640b9973470 'heap_element'
|-TypedefDecl 0x5640b997a388 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x5640b9979540 'const TimerSet::heap_element &'
|   `-QualType 0x5640b9974601 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5640b9974600 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b9973500 'TimerSet::heap_element'
|         `-CXXRecord 0x5640b9973470 'heap_element'
|-TypedefDecl 0x5640b997a3e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b997a448 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x5640b99795d0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x5640b9974600 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b9973500 'TimerSet::heap_element'
|       `-CXXRecord 0x5640b9973470 'heap_element'
|-TypedefDecl 0x5640b997a4b0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x5640b9979690 'const TimerSet::heap_element *'
|   `-QualType 0x5640b9974601 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5640b9974600 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b9973500 'TimerSet::heap_element'
|         `-CXXRecord 0x5640b9973470 'heap_element'
|-EnumDecl 0x5640b997a508 <line:134:5> col:5
| `-EnumConstantDecl 0x5640b997a600 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5640b997a5e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5640b95e99e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5640b95e99c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5640b95e99a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5640b997a688 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5640b997a918 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b997a740 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b997a7e0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x5640b997abd8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5640b997aac0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x5640b997ae98 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x5640b997ad80 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x5640b997b1e0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5640b997b0c0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x5640b997b4f0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x5640b997b3d0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x5640b997b7e0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b997b628 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b997b6a0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5640b997b938 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x5640b997ba18 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b997ba70 <col:30> Inherited
|-CXXMethodDecl 0x5640b997bab8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x5640b997bb68 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b997bbc0 <col:30> Inherited
|-CXXMethodDecl 0x5640b997bc88 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5640b997bd38 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b997bd90 <col:30> Inherited
|-CXXMethodDecl 0x5640b997bdd8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5640b997be88 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b997bee0 <col:30> Inherited
|-CXXMethodDecl 0x5640b997c770 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5640b997c820 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b997c878 <col:30> Inherited
|-CXXMethodDecl 0x5640b997c8c0 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5640b997c970 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b997c9c8 <col:30> Inherited
|-CXXMethodDecl 0x5640b997c9f0 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b997caa0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b997cb50 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5640b997cd10 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b997cc00 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b997cc78 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5640b997ce60 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5640b997cdd0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b997d008 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x5640b997cf18 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b997d0c0 <col:20>
| `-OptimizeNoneAttr 0x5640b997d118 <col:30>
|-CXXMethodDecl 0x5640b997d238 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x5640b997d140 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b997d2f0 <col:20>
| `-OptimizeNoneAttr 0x5640b997d348 <col:30>
|-CXXMethodDecl 0x5640b997d400 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b997d370 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b997d548 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b997d4b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b997d678 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x5640b997d7a8 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x5640b997d878 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x5640b997d948 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x5640b997da88 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b997d9f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b997dbd0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b997db40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b997dd18 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x5640b997dc88 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b997ddd0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5640b997ded0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5640b997de40 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b997df88 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5640b997e048 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x5640b997e148 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x5640b997e2f8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b997e208 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x5640b997eab8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5640b997e3b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x5640b997ea18 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x5640b997e918 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x5640b997eb98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b997ece8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b997ec58 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5640b997eda0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5640b997efe8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b997ee60 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x5640b997eed8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5640b997f1a8 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x5640b997f0b8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x5640b997f3f8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x5640b997f270 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x5640b997f2e8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x5640b997f4b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b997f718 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5640b997f620 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x5640b997f7e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5640b997f7e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b997f930 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x5640b997fb38 prev 0x5640b997f930 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5640b9980b50 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5640b9980b00 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x5640b9980ae0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x5640b9980990 'type'
|     `-SubstTemplateTypeParmType 0x5640b993c410 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5640b95b0670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95b0618 'T'
|       `-RecordType 0x5640b993bf60 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5640b993be78 'sized_array_memory'
|-FieldDecl 0x5640b9980c50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5640b9980ca0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5640b9980cd8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x5640b997fbd0 'Timer *' sugar
|   |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5640b95e8308 'T'
|   `-PointerType 0x5640b984cef0 'Timer *'
|     `-RecordType 0x5640b984c040 'Timer'
|       `-CXXRecord 0x5640b99574e8 'Timer'
|-TypedefDecl 0x5640b9980d98 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x5640b9980d60 'Timer *&'
|   `-SubstTemplateTypeParmType 0x5640b997fbd0 'Timer *' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-PointerType 0x5640b984cef0 'Timer *'
|       `-RecordType 0x5640b984c040 'Timer'
|         `-CXXRecord 0x5640b99574e8 'Timer'
|-TypedefDecl 0x5640b9980e58 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x5640b9980e20 'Timer *const &'
|   `-QualType 0x5640b997fbd1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5640b997fbd0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b984cef0 'Timer *'
|         `-RecordType 0x5640b984c040 'Timer'
|           `-CXXRecord 0x5640b99574e8 'Timer'
|-TypedefDecl 0x5640b9980f18 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x5640b9980ee0 'Timer **'
|   `-SubstTemplateTypeParmType 0x5640b997fbd0 'Timer *' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-PointerType 0x5640b984cef0 'Timer *'
|       `-RecordType 0x5640b984c040 'Timer'
|         `-CXXRecord 0x5640b99574e8 'Timer'
|-TypedefDecl 0x5640b9980fd8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x5640b9980fa0 'Timer *const *'
|   `-QualType 0x5640b997fbd1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5640b997fbd0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b984cef0 'Timer *'
|         `-RecordType 0x5640b984c040 'Timer'
|           `-CXXRecord 0x5640b99574e8 'Timer'
|-TypedefDecl 0x5640b9981bb0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x5640b9981b60 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x5640b9981b40 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x5640b9981ad0 'type'
|     `-SubstTemplateTypeParmType 0x5640b9981890 'Timer *' sugar
|       |-TemplateTypeParmType 0x5640b95bb470 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95bb420 'T'
|       `-PointerType 0x5640b984cef0 'Timer *'
|         `-RecordType 0x5640b984c040 'Timer'
|           `-CXXRecord 0x5640b99574e8 'Timer'
|-TypedefDecl 0x5640b9981c18 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x5640b9980e20 'Timer *const &'
|   `-QualType 0x5640b997fbd1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5640b997fbd0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b984cef0 'Timer *'
|         `-RecordType 0x5640b984c040 'Timer'
|           `-CXXRecord 0x5640b99574e8 'Timer'
|-TypedefDecl 0x5640b9981c70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b9981cd8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x5640b9980ee0 'Timer **'
|   `-SubstTemplateTypeParmType 0x5640b997fbd0 'Timer *' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-PointerType 0x5640b984cef0 'Timer *'
|       `-RecordType 0x5640b984c040 'Timer'
|         `-CXXRecord 0x5640b99574e8 'Timer'
|-TypedefDecl 0x5640b9981d40 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x5640b9980fa0 'Timer *const *'
|   `-QualType 0x5640b997fbd1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5640b997fbd0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-PointerType 0x5640b984cef0 'Timer *'
|         `-RecordType 0x5640b984c040 'Timer'
|           `-CXXRecord 0x5640b99574e8 'Timer'
|-EnumDecl 0x5640b9981d98 <line:134:5> col:5
| `-EnumConstantDecl 0x5640b9981e90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5640b9981e70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5640b95e99e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5640b95e99c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5640b95e99a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5640b9981f18 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5640b99821a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9981fd0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9982070 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x5640b9982468 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5640b9982350 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x5640b9982728 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x5640b9982610 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x5640b9982a70 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5640b9982950 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x5640b9982d80 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x5640b9982c60 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x5640b9983070 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9982eb8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9982f30 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5640b99831c8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x5640b99832a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9983300 <col:30> Inherited
|-CXXMethodDecl 0x5640b9983348 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x5640b99833f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9983450 <col:30> Inherited
|-CXXMethodDecl 0x5640b9983518 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5640b99835c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9983620 <col:30> Inherited
|-CXXMethodDecl 0x5640b9983668 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5640b9983718 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9983770 <col:30> Inherited
|-CXXMethodDecl 0x5640b99837b8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5640b9983868 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99838c0 <col:30> Inherited
|-CXXMethodDecl 0x5640b9983908 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5640b99839b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b9983a10 <col:30> Inherited
|-CXXMethodDecl 0x5640b9983a38 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b9983ae8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b9983b98 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5640b9983d58 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9983c48 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b9983cc0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5640b9983ea8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9983e18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9984058 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x5640b9983f60 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b9984110 <col:20>
| `-OptimizeNoneAttr 0x5640b9984168 <col:30>
|-CXXMethodDecl 0x5640b9984288 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5640b9984190 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b9984340 <col:20>
| `-OptimizeNoneAttr 0x5640b9984398 <col:30>
|-CXXMethodDecl 0x5640b9984450 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b99843c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9984598 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b9984508 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99846c8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x5640b9985838 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x5640b9985908 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x5640b99859d8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x5640b9985b18 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b9985a88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9985c60 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b9985bd0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b9985da8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5640b9985d18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b9985e60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5640b9985f60 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5640b9985ed0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b9986018 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5640b99860d8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x5640b99861d8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x5640b9986358 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b9986298 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x5640b9986b18 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5640b9986410 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x5640b9986a78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x5640b9986978 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x5640b9986bf8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b9986d48 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b9986cb8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5640b9986e00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5640b9987048 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b9986ec0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x5640b9986f38 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5640b9987208 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x5640b9987118 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x5640b9987458 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x5640b99872d0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x5640b9987348 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x5640b9987518 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b9987778 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5640b9987680 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x5640b9987848 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5640b9987848

Layout: <CGRecordLayout
  LLVMType:%class.Vector.18 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.18 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9950c70 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5640b9950d88 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x5640b9950e18 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x5640b9950ea0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x5640b9950f90 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x5640b9951090 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x5640b9951150 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x5640b9951210 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x5640b9951338 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x5640b9951338
| `-ParmVarDecl 0x5640b9951448 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x5640b99885f8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x5640b99885f8
  `-ParmVarDecl 0x5640b9988708 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b99725f0 prev 0x5640b995b6f8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5640b99726e8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x5640b9972778 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x5640b9972800 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x5640b99728f8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x5640b9988a70 <col:43, col:67>
|   `-ReturnStmt 0x5640b9988a60 <col:45, col:52>
|     `-CXXConstructExpr 0x5640b9988a30 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x5640b9988a00 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x5640b9974140
|         `-CXXThisExpr 0x5640b99889f0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5640b99729b8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x5640b9972bc0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x5640b9972a68 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x5640b9972ae0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x5640b9972cb8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x5640b9972d80 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x5640b9988af0 <col:39, col:67>
|   `-ReturnStmt 0x5640b9988ae0 <col:41, col:48>
|     `-ImplicitCastExpr 0x5640b9988ac8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5640b9988a98 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x5640b9974228
|         `-CXXThisExpr 0x5640b9988a88 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5640b9972e48 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x5640b9988b70 <col:35, col:59>
|   `-ReturnStmt 0x5640b9988b60 <col:37, col:44>
|     `-ImplicitCastExpr 0x5640b9988b48 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5640b9988b18 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x5640b9974290
|         `-CXXThisExpr 0x5640b9988b08 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5640b9972f90 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x5640b9972f00 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x5640b99730d8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5640b9973048 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5640b99732d8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x5640b9973190 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x5640b9973208 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x5640b99733a8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x5640b9973448 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x5640b9973470 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5640b9973588 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x5640b9973628 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x5640b9973688 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x5640b99737b8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x5640b99736e8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x5640b9973628 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x5640b9988c48 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x5640b9988bf0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x5640b9988bc0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x5640b9958b58
|   |       `-ImplicitCastExpr 0x5640b9988c10 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x5640b9988ba8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x5640b9988b88 <col:17> 'Timer *' lvalue ParmVar 0x5640b99736e8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x5640b9973688 't' 'Timer *'
|   | `-ImplicitCastExpr 0x5640b9988ce0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640b9988ca0 <col:41> 'Timer *' lvalue ParmVar 0x5640b99736e8 't_' 'Timer *'
|   `-CompoundStmt 0x5640b9988d30 <col:45, line:44:2>
|-CXXRecordDecl 0x5640b9973880 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5640b9973998 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x5640b9973be8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x5640b9973a68 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x5640b9973ae0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x5640b9988e60 <col:71, line:49:2>
|     `-ReturnStmt 0x5640b9988e50 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x5640b9988e18 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x5640b9988e00 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5640b9988de0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x5640b980a258 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x5640b9988d60 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x5640b9973628
|         | `-DeclRefExpr 0x5640b9988d40 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x5640b9973a68 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x5640b9988db0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x5640b9973628
|           `-DeclRefExpr 0x5640b9988d90 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x5640b9973ae0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x5640b9973cb0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5640b9973dc8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x5640b9974048 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x5640b9973e68 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x5640b9973f40 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x5640b9989068 <col:63, line:54:2>
|     `-BinaryOperator 0x5640b9989048 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x5640b9988ef8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x5640b995ab98
|       | `-ImplicitCastExpr 0x5640b9988ee0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x5640b9988eb0 <col:6, col:9> 'Timer *' lvalue ->t 0x5640b9973688
|       |     `-ImplicitCastExpr 0x5640b9988e98 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x5640b9988e78 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x5640b9973f40 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x5640b9989030 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x5640b9989010 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x5640b9988fb8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x5640b9988f98 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x5640b9988f68 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x5640b9988f28 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x5640b9973f40 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x5640b9988f80 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x5640b9988f48 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x5640b9973e68 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x5640b9988ff8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x5640b9988fd8 <col:39> 'int' 1
|-FieldDecl 0x5640b9974140 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x5640b99741b0 <col:44, col:53> aligned
|   `-ConstantExpr 0x5640b9974190 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x5640b9974110 <col:52> 'int' 8
|-FieldDecl 0x5640b9974228 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x5640b9974290 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x5640b99742f8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x5640b997f8d0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x5640b9987930 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x5640b9987990 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x5640b99879f0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x5640b9987a50 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b9987b40 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x5640b9987ab0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x5640b9987c08 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x5640b99894c0 <col:29, line:81:5>
|   `-IfStmt 0x5640b9989498 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x5640b9989150 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x5640b99890f0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x5640b99890c0 <col:6, col:18> '<bound member function type>' .size 0x5640b997c9f0
|     |     `-ImplicitCastExpr 0x5640b9989138 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x5640b9989090 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x5640b997f8d0
|     |         `-CXXThisExpr 0x5640b9989080 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x5640b9989340 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x5640b9989328 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x5640b9989308 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x5640b94f3cb8 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x5640b9989178 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x5640b9974140
|     | | `-CXXThisExpr 0x5640b9989168 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x5640b99892f0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x5640b99892c0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x5640b9973628
|     |     `-CXXMemberCallExpr 0x5640b9989298 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x5640b9989268 <col:22, col:34> '<bound member function type>' .unchecked_at 0x5640b997da88
|     |       | `-MemberExpr 0x5640b99891b8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x5640b997f8d0
|     |       |   `-CXXThisExpr 0x5640b99891a8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x5640b9989248 <col:47> 'int' 0
|     `-ExprWithCleanups 0x5640b9989480 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x5640b9989448 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x5640b9989430 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5640b9989410 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x5640b94f4168 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x5640b9989388 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x5640b9974140
|         | `-CXXThisExpr 0x5640b9989378 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x5640b99893f8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5640b99893c8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x5640b9987d48 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x5640b9987cb8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x5640b9987e10 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x5640b9987ed0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x5640b9987f90 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x5640b9988080 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x5640b99880e8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x5640b99880e8
| `-ParmVarDecl 0x5640b99881f8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x5640b9988298 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x5640b9988298
| `-ParmVarDecl 0x5640b99883a8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x5640b9988448 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x5640b9988448
| `-ParmVarDecl 0x5640b9988558 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x5640b9988778 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x5640b9988778
| `-ParmVarDecl 0x5640b9988888 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x5640b9988910 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x5640b9988910

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.17, %class.Vector.18, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.17, %class.Vector.18, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b99b0468 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x5640b99b0698 prev 0x5640b99b0468 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5640b99b1770 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5640b99b1720 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x5640b99b1700 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x5640b99b15b0 'type'
|     `-SubstTemplateTypeParmType 0x5640b993c410 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5640b95b0670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95b0618 'T'
|       `-RecordType 0x5640b993bf60 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5640b993be78 'sized_array_memory'
|-FieldDecl 0x5640b99b1870 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5640b99b18c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5640b99b18f8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x5640b99b0730 'pollfd' sugar
|   |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5640b95e8308 'T'
|   `-RecordType 0x5640b99ae520 'pollfd'
|     `-CXXRecord 0x5640b99ae490 'pollfd'
|-TypedefDecl 0x5640b99b19b8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x5640b99b1980 'pollfd &'
|   `-SubstTemplateTypeParmType 0x5640b99b0730 'pollfd' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b99ae520 'pollfd'
|       `-CXXRecord 0x5640b99ae490 'pollfd'
|-TypedefDecl 0x5640b99b1a78 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x5640b99b1a40 'const pollfd &'
|   `-QualType 0x5640b99b0731 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5640b99b0730 'pollfd' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b99ae520 'pollfd'
|         `-CXXRecord 0x5640b99ae490 'pollfd'
|-TypedefDecl 0x5640b99b1b08 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x5640b99b1ad0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x5640b99b0730 'pollfd' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b99ae520 'pollfd'
|       `-CXXRecord 0x5640b99ae490 'pollfd'
|-TypedefDecl 0x5640b99b1bc8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x5640b99b1b90 'const pollfd *'
|   `-QualType 0x5640b99b0731 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5640b99b0730 'pollfd' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b99ae520 'pollfd'
|         `-CXXRecord 0x5640b99ae490 'pollfd'
|-TypedefDecl 0x5640b99b27a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x5640b99b2750 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x5640b99b2730 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x5640b99b26c0 'type'
|     `-SubstTemplateTypeParmType 0x5640b99b2480 'pollfd' sugar
|       |-TemplateTypeParmType 0x5640b95bb470 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95bb420 'T'
|       `-RecordType 0x5640b99ae520 'pollfd'
|         `-CXXRecord 0x5640b99ae490 'pollfd'
|-TypedefDecl 0x5640b99b2808 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x5640b99b1a40 'const pollfd &'
|   `-QualType 0x5640b99b0731 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5640b99b0730 'pollfd' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b99ae520 'pollfd'
|         `-CXXRecord 0x5640b99ae490 'pollfd'
|-TypedefDecl 0x5640b99b2860 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b99b28c8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x5640b99b1ad0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x5640b99b0730 'pollfd' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b99ae520 'pollfd'
|       `-CXXRecord 0x5640b99ae490 'pollfd'
|-TypedefDecl 0x5640b99b2930 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x5640b99b1b90 'const pollfd *'
|   `-QualType 0x5640b99b0731 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5640b99b0730 'pollfd' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b99ae520 'pollfd'
|         `-CXXRecord 0x5640b99ae490 'pollfd'
|-EnumDecl 0x5640b99b2988 <line:134:5> col:5
| `-EnumConstantDecl 0x5640b99b2a80 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5640b99b2a60 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5640b95e99e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5640b95e99c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5640b95e99a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5640b99b2b08 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5640b99b2d98 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99b2bc0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b99b2c60 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x5640b99b3058 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5640b99b2f40 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x5640b99b3318 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x5640b99b3200 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x5640b99b3660 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5640b99b3540 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x5640b99b3970 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x5640b99b3850 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x5640b99b3c60 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99b3aa8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b99b3b20 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5640b99b3db8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x5640b99b3e98 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99b3ef0 <col:30> Inherited
|-CXXMethodDecl 0x5640b99b3f38 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x5640b99b3fe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99b4040 <col:30> Inherited
|-CXXMethodDecl 0x5640b99b4108 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5640b99b41b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99b4210 <col:30> Inherited
|-CXXMethodDecl 0x5640b99b4258 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5640b99b4308 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99b4360 <col:30> Inherited
|-CXXMethodDecl 0x5640b99b43a8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5640b99b4458 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99b44b0 <col:30> Inherited
|-CXXMethodDecl 0x5640b99b44f8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5640b99b45a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99b4600 <col:30> Inherited
|-CXXMethodDecl 0x5640b99b4628 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b99b46d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b99b4788 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5640b99b4948 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99b4838 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b99b48b0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5640b99b4a98 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5640b99b4a08 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99b4c48 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x5640b99b4b50 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b99b4d00 <col:20>
| `-OptimizeNoneAttr 0x5640b99b4d58 <col:30>
|-CXXMethodDecl 0x5640b99b4e78 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x5640b99b4d80 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b99b4f30 <col:20>
| `-OptimizeNoneAttr 0x5640b99b4f88 <col:30>
|-CXXMethodDecl 0x5640b99b5040 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b99b4fb0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99b5188 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b99b50f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99b52b8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x5640b99b53e8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x5640b99b54b8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x5640b99b5588 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x5640b99b56c8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b99b5638 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99b5810 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b99b5780 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99b5958 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x5640b99b58c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b99b5a10 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5640b99b5b10 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5640b99b5a80 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b99b5bc8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5640b99b5c88 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x5640b99b5d88 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x5640b99b5f38 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b99b5e48 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x5640b99b66f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5640b99b5ff0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x5640b99b6658 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x5640b99b6558 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x5640b99b67d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b99b6928 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b99b6898 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5640b99b69e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5640b99b6c28 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99b6aa0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5640b99b6b18 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5640b99b6de8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x5640b99b6cf8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5640b99b7038 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x5640b99b6eb0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5640b99b6f28 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5640b99b70f8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b99b7358 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5640b99b7260 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x5640b99b7428 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5640b99b7428

Layout: <CGRecordLayout
  LLVMType:%class.Vector.19 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.19 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b99b9940 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x5640b99b9b18 prev 0x5640b99b9940 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5640b99b9ba8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5640b99b9bd0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b99bb7a0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x5640b99bb750 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x5640b99ba080 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x5640b99b9f80 'type'
|     `-TemplateSpecializationType 0x5640b99b9f10 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5640b99b9df0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x5640b99b9dd0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5640b99b9db0 <col:24> 'unsigned long' 24
|       `-RecordType 0x5640b99b9ef0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x5640b99b9e10 'char_array'
|-TypedefDecl 0x5640b99bb858 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x5640b99bb820 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x5640b99bb800 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x5640b99bb7a0 'type'
|     `-ElaboratedType 0x5640b99bb750 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x5640b99ba080 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x5640b99b9f80 'type'
|         `-TemplateSpecializationType 0x5640b99b9f10 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5640b99b9df0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x5640b99b9dd0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5640b99b9db0 <col:24> 'unsigned long' 24
|           `-RecordType 0x5640b99b9ef0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x5640b99b9e10 'char_array'
|-CXXMethodDecl 0x5640b99bb9d8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x5640b99bb8e8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x5640b99bbac8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5640b99bbba8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5640b99bbba8
|-CXXMethodDecl 0x5640b99bbe78 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5640b99bbd80 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x5640b99bc0b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5640b99bbf30 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b99bbfa8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5640b99bc288 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5640b99bc178 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b99bc1f0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5640b99bc3e8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5640b99bc4b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5640b99bc708 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5640b99bc578 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5640b99bc5f0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5640b99bc968 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x5640b99bc7d8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5640b99bc850 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5640b99bcb28 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5640b99bca38 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5640b99bcce8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5640b99bcbf0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5640b99bcda0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b99bce50 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b99bd088 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5640b99bcf00 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5640b99bcf78 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5640b99bd328 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5640b99bd230 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x5640b99bd3f0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x5640b99bd440 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5640b99bd490 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.21 = type { %struct.char_array.22*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.21 = type { %struct.char_array.22*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b99b7570 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x5640b99b7778 prev 0x5640b99b7570 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5640b99b98b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x5640b99b9860 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x5640b99b9840 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x5640b99b96f8 'type'
|     `-SubstTemplateTypeParmType 0x5640b99b84e0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x5640b95b0670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95b0618 'T'
|       `-RecordType 0x5640b9895200 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x5640b9895118 'sized_array_memory'
|-FieldDecl 0x5640b99bd4e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x5640b99bd530 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5640b99bd568 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x5640b99b7810 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5640b95e8308 'T'
|   `-RecordType 0x5640b99affd0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x5640b99aff40 'SelectorInfo'
|-TypedefDecl 0x5640b99bd628 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5640b99bd5f0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x5640b99b7810 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b99affd0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5640b99aff40 'SelectorInfo'
|-TypedefDecl 0x5640b99bd6e8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5640b99bd6b0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5640b99b7811 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5640b99b7810 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b99affd0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5640b99aff40 'SelectorInfo'
|-TypedefDecl 0x5640b99bd778 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x5640b99bd740 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5640b99b7810 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b99affd0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5640b99aff40 'SelectorInfo'
|-TypedefDecl 0x5640b99bd838 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5640b99bd800 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5640b99b7811 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5640b99b7810 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b99affd0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5640b99aff40 'SelectorInfo'
|-TypedefDecl 0x5640b99be490 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x5640b99be440 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x5640b99be420 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x5640b99be358 'type'
|     `-LValueReferenceType 0x5640b99be320 'const SelectSet::SelectorInfo &'
|       `-QualType 0x5640b99be0c1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x5640b99be0c0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x5640b95bad40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5640b95bace8 'T'
|           `-RecordType 0x5640b99affd0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x5640b99aff40 'SelectorInfo'
|-TypedefDecl 0x5640b99be4f8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5640b99bd6b0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5640b99b7811 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5640b99b7810 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b99affd0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5640b99aff40 'SelectorInfo'
|-TypedefDecl 0x5640b99be550 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-TypedefDecl 0x5640b99be5b8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x5640b99bd740 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5640b99b7810 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5640b95e8308 'T'
|     `-RecordType 0x5640b99affd0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5640b99aff40 'SelectorInfo'
|-TypedefDecl 0x5640b99be620 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5640b99bd800 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5640b99b7811 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5640b99b7810 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5640b95e8360 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5640b95e8308 'T'
|       `-RecordType 0x5640b99affd0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5640b99aff40 'SelectorInfo'
|-EnumDecl 0x5640b99be678 <line:134:5> col:5
| `-EnumConstantDecl 0x5640b99be770 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5640b99be750 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5640b95e99e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5640b95e99c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5640b95e99a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5640b99be7f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5640b99bea88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99be8b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b99be950 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x5640b99bed48 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5640b99bec30 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x5640b99bf008 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5640b99beef0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5640b99bf350 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5640b99bf230 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x5640b99bf660 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5640b99bf540 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5640b99bf950 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99bf798 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b99bf810 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5640b99bfaa8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5640b99bfb88 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99bfbe0 <col:30> Inherited
|-CXXMethodDecl 0x5640b99bfc28 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5640b99bfcd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99bfd30 <col:30> Inherited
|-CXXMethodDecl 0x5640b99bfdf8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5640b99bfea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99bff00 <col:30> Inherited
|-CXXMethodDecl 0x5640b99bff48 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5640b99bfff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99c0050 <col:30> Inherited
|-CXXMethodDecl 0x5640b99c0098 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5640b99c0148 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99c01a0 <col:30> Inherited
|-CXXMethodDecl 0x5640b99c01e8 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5640b99c0298 <col:20> Inherited
| `-OptimizeNoneAttr 0x5640b99c02f0 <col:30> Inherited
|-CXXMethodDecl 0x5640b99c0318 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b99c03c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5640b99c0478 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5640b99c0638 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99c0528 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5640b99c05a0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5640b99c0788 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5640b99c06f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99c0938 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x5640b99c0840 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b99c09f0 <col:20>
| `-OptimizeNoneAttr 0x5640b99c0a48 <col:30>
|-CXXMethodDecl 0x5640b99c0b68 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x5640b99c0a70 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5640b99c0c20 <col:20>
| `-OptimizeNoneAttr 0x5640b99c0c78 <col:30>
|-CXXMethodDecl 0x5640b99c0d30 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b99c0ca0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99c0e78 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b99c0de8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99c0fa8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5640b99c10d8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5640b99c11a8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5640b99c1278 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5640b99c13b8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5640b99c1328 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99c1500 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5640b99c1470 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5640b99c36a0 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x5640b99c3610 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b99c3758 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5640b99c3858 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5640b99c37c8 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5640b99c3910 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5640b99c39c8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x5640b99c3ac8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x5640b99c3c78 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b99c3b88 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x5640b99c4438 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5640b99c3d30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x5640b99c4398 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x5640b99c4298 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x5640b99c4518 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5640b99c4668 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5640b99c45d8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5640b99c4720 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5640b99c4968 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5640b99c47e0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5640b99c4858 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5640b99c4b28 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x5640b99c4a38 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5640b99c4d78 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x5640b99c4bf0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5640b99c4c68 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5640b99c4e38 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5640b99c5098 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5640b99c4fa0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x5640b99c5168 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5640b99c5168

Layout: <CGRecordLayout
  LLVMType:%class.Vector.20 = type { %class.vector_memory.21 }
  NonVirtualBaseLLVMType:%class.Vector.20 = type { %class.vector_memory.21 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b99af120 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5640b99af238 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x5640b99af2c8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x5640b99af350 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x5640b99af440 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x5640b99af440
|-CXXMethodDecl 0x5640b99af540 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x5640b99af7e0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x5640b99af5f8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x5640b99af670 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x5640b99af6f0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x5640b99afa50 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x5640b99af8b0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x5640b99af928 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x5640b99af9a8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x5640b99afba8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x5640b99afb18 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x5640b99afc70 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x5640b99c6818 <col:34, line:50:5>
|   |-BinaryOperator 0x5640b99c61e8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x5640b99c61a8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x5640b99b03f8
|   | | `-CXXThisExpr 0x5640b99c6198 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x5640b99c61d8 <col:23> 'bool' true
|   `-CallExpr 0x5640b99c67f0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x5640b99c67d8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5640b99c6758 <col:2> 'void (long)' lvalue Function 0x5640b99c6658 'ignore_result' 'void (long)' (FunctionTemplate 0x5640b95ab618 'ignore_result')
|     `-CallExpr 0x5640b99c6400 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x5640b99c63e8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b99c6368 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x5640b998c4e8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x5640b99c6438 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x5640b99c6310 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x5640b99c62f8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x5640b99c62a8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x5640b99b0398
|       |   |   `-CXXThisExpr 0x5640b99c6298 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x5640b99c62d8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x5640b99c6468 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x5640b99c6450 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x5640b99c6330 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x5640b99c6480 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5640b99c6348 <col:41> 'int' 1
|-CXXMethodDecl 0x5640b99afdb0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5640b99afd20 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5640b99afe78 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x5640b99aff18 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x5640b99aff40 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5640b99b0058 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x5640b99b00f8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x5640b99b0158 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x5640b99b01c0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x5640b99b0270 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x5640b99b00f8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x5640b99c6878 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5640b99c6838 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x5640b99b0158 'write' 'Element *'
|   | `-ImplicitCastExpr 0x5640b99c68f8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5640b99c68b8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x5640b99b01c0 'pollfd' 'int'
|   | `-UnaryOperator 0x5640b99c6958 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x5640b99c6938 <col:35> 'int' 1
|   `-CompoundStmt 0x5640b99c69d0 <line:64:2, line:65:2>
|-FieldDecl 0x5640b99b0398 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x5640b99b03f8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x5640b99b7510 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x5640b99c5250 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x5640b99c5488 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x5640b99c52b8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x5640b99c5330 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x5640b99c53a8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x5640b99c5670 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x5640b99c5558 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x5640b99c55d8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x5640b99c58b8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x5640b99c5738 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x5640b99c57b8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x5640b99c5ac8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x5640b99c5978 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x5640b99c59f0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x5640b99c5c18 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x5640b99c5b88 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x5640b99c5ce0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x5640b99c5da0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x5640b99c5e68 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x5640b99c5e68
| `-ParmVarDecl 0x5640b99c5f78 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x5640b99c6018 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x5640b99c6018
  `-ParmVarDecl 0x5640b99c6128 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.19, %class.Vector.20 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.19, %class.Vector.20 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b994fbd8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5640b994fcf8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x5640b994fd88 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x5640b994fe10 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x5640b994ff00 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x5640b9950000 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x5640b99500c0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x5640b9950180 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x5640b9950268 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x5640b9950388 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x5640b9950388
| `-ParmVarDecl 0x5640b9950498 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x5640b99dce60 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x5640b99dce60
  `-ParmVarDecl 0x5640b99dcf68 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9970598 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b99706b8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x5640b9970758 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x5640b99707b8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x5640b99cabc8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5640b99cabc8
| `-ParmVarDecl 0x5640b99cacd8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x5640b99cad78 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5640b99cad78
| `-ParmVarDecl 0x5640b99cae88 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x5640b99caef8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5640b99caef8
|-CXXMethodDecl 0x5640b99dd008 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5640b99dd008
| `-ParmVarDecl 0x5640b99dd118 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x5640b99dd188 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5640b99dd188
| `-ParmVarDecl 0x5640b99dd298 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x5640b99e3908 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x5640b99e39e0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9951ad0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b9951be8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x5640b9951c78 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x5640b9951d00 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x5640b9951dc0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x5640b92e5370 'int'
|-CXXMethodDecl 0x5640b9951e88 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x5640b9951f28 <col:45> always_inline
|-CXXMethodDecl 0x5640b9952058 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x5640b9951f90 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x5640b9952100 <col:49> always_inline
|-CXXConstructorDecl 0x5640b99521f8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5640b99521f8
| `-ParmVarDecl 0x5640b9952308 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x5640b99523a8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5640b99523a8
| `-ParmVarDecl 0x5640b99524b8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x5640b99cafe0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x5640b99cafe0
|-CXXMethodDecl 0x5640b99dd338 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5640b99dd338
| `-ParmVarDecl 0x5640b99dd448 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x5640b99dd4b8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5640b99dd4b8
  `-ParmVarDecl 0x5640b99dd5c8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b99c6e40 prev 0x5640b99af090 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5640b99c6f38 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x5640b99c6fc8 <col:22, col:28> col:22 public
|-EnumDecl 0x5640b99c6ff0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x5640b99c7108 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x5640b99c70e8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5640b99c70d0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5640b99c70b0 <col:32> 'int' 1
| `-EnumConstantDecl 0x5640b99c71b0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x5640b99c7190 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5640b99c7178 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5640b99c7158 <col:53> 'int' 1000
|-CXXMethodDecl 0x5640b99c7250 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x5640b99c7310 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5640b99c73f8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x5640b99dd688 <col:34, col:52>
|   `-ReturnStmt 0x5640b99dd678 <col:36, col:43>
|     `-MemberExpr 0x5640b99dd648 <col:43> 'TimerSet' lvalue ->_timers 0x5640b99c90c8
|       `-CXXThisExpr 0x5640b99dd638 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5640b99c74e8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x5640b99dd6f0 <col:46, col:64>
|   `-ReturnStmt 0x5640b99dd6e0 <col:48, col:55>
|     `-MemberExpr 0x5640b99dd6b0 <col:55> 'const TimerSet' lvalue ->_timers 0x5640b99c90c8
|       `-CXXThisExpr 0x5640b99dd6a0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5640b99c75d8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x5640b99dd758 <col:36, col:55>
|   `-ReturnStmt 0x5640b99dd748 <col:38, col:45>
|     `-MemberExpr 0x5640b99dd718 <col:45> 'SelectSet' lvalue ->_selects 0x5640b99c9128
|       `-CXXThisExpr 0x5640b99dd708 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5640b99c76c8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x5640b99dd7c0 <col:48, col:67>
|   `-ReturnStmt 0x5640b99dd7b0 <col:50, col:57>
|     `-MemberExpr 0x5640b99dd780 <col:57> 'const SelectSet' lvalue ->_selects 0x5640b99c9128
|       `-CXXThisExpr 0x5640b99dd770 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5640b99c7788 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x5640b99c7878 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x5640b99c79e8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x5640b99c7928 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x5640b99c7ab0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x5640b99c7ef8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x5640b99c7b60 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x5640b99c7de0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x5640b99c7fc8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x5640b99c8088 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x5640b99c8148 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x5640b99c8288 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x5640b99c81f8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x5640b99c8350 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x5640b99c8410 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x5640b99c84d0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x5640b99c8590 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x5640b99c86d0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5640b99c8640 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5640b99c8798 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x5640b99c8858 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x5640b99c88f8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x5640b99c89c0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5640b99c8a10 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5640b99c8a60 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5640b99c8ab0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5640b99c8b00 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5640b99c8b50 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5640b99c8ba0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5640b99c8bf0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5640b99c8c40 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5640b99c8c90 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x5640b99c8ce0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x5640b99c8dd8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x5640b99c8d48 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x5640b99c8f28 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x5640b99c8e98 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x5640b99c8fd0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x5640b99c9008 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x5640b99c9068 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x5640b99c90c8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x5640b99c9128 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x5640b99c91a8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x5640b99c9218 <col:40, col:50> aligned
|   `-ConstantExpr 0x5640b99c91f8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x5640b99c9178 <col:48> 'int' 64
|-FieldDecl 0x5640b99c9288 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x5640b99c92e8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x5640b99c93e0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x5640b99c94f0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x5640b99c9550 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x5640b99c95d0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x5640b99c9640 <col:36, col:46> aligned
|   `-ConstantExpr 0x5640b99c9620 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x5640b99c95a0 <col:44> 'int' 64
|-FieldDecl 0x5640b99c96b8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x5640b99c9718 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x5640b99c9768 <line:170:3, col:9> col:3 public
|-FieldDecl 0x5640b99c97a8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x5640b99c9810 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x5640b99c9860 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x5640b99c9a08 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x5640b99c9898 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x5640b99c9918 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x5640b99c9b08 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x5640b99c9b08
|-CXXMethodDecl 0x5640b99c9c10 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x5640b99c9cd8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x5640b99dd8b8 <col:34, line:217:5>
|   `-ReturnStmt 0x5640b99dd8a8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x5640b99dd890 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5640b99dd860 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x5640b996d670
|         `-ImplicitCastExpr 0x5640b99dd848 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x5640b99dd818 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x5640b996d608
|             `-MemberExpr 0x5640b99dd7e8 <col:16> 'const TaskLink' lvalue ->_task_link 0x5640b99c9008
|               `-CXXThisExpr 0x5640b99dd7d8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5640b99c9d98 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x5640b99c9e58 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x5640b99ddfe0 <col:39, line:226:5>
|   |-DeclStmt 0x5640b99ddb08 <line:223:9, col:68>
|   | `-VarDecl 0x5640b99dd8e0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x5640b99ddac0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x5640b99dda90 <col:24, col:38> '<bound member function type>' .compare_swap 0x5640b9611c60
|   |     | `-MemberExpr 0x5640b99dd958 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x5640b99c9288
|   |     |   `-CXXThisExpr 0x5640b99dd948 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x5640b99dda48 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x5640b99dda30 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x5640b99dda08 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x5640b99dd9e8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x5640b99ddaf0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x5640b99dda70 <col:66> 'int' 0
|   |-CStyleCastExpr 0x5640b99ddb50 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5640b99ddb20 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x5640b99dd8e0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x5640b99ddfc0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x5640b99ddf90 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x5640b99ddc68 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x5640b99ddc38 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5640b99ddc20 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x5640b99ddb78 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x5640b99dd8e0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x5640b99ddbf8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x5640b99ddbe0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x5640b99ddbb8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x5640b99ddb98 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x5640b99ddcc8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x5640b99ddca8 <col:60> 'int' 0
|       `-CallExpr 0x5640b99ddef0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x5640b99dded8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5640b99ddeb8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5640b9386a60 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x5640b99ddf30 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5640b99dddb8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x5640b99ddf48 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5640b99ddde8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x5640b99ddf60 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x5640b99dde28 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x5640b99ddf78 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x5640b99ddea0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x5640b99dde88 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x5640b99dde48 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x5640b99c9fa0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x5640b99c9f10 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x5640b99ca068 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x5640b99ca128 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x5640b99ca1e8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x5640b99ca2a8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x5640b99ca368 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x5640b99ca460 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x5640b99ca4c0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x5640b99ca550 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x5640b99ca918 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x5640b99ca918
| `-ParmVarDecl 0x5640b99caa28 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x5640b99cb0e8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x5640b99cb0e8
  `-ParmVarDecl 0x5640b99cb1f8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b996d980 prev 0x5640b984bf00 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x5640b996dab8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x5640b996db48 <col:33, col:39> col:33 public
|-EnumDecl 0x5640b996db70 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x5640b996dcb0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x5640b996dc90 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x5640b996dc70 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5640b996dc30 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x5640b996dc50 <col:26> 'int' 16
| `-EnumConstantDecl 0x5640b996dd80 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x5640b996dd60 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x5640b996dd40 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x5640b996dd00 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x5640b996dd20 <col:47> 'int' 31
|-EnumDecl 0x5640b996ddd0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x5640b996df10 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x5640b996e030 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5640b996def0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x5640b996ded0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x5640b996de90 <col:26> 'int' 1
| |       `-IntegerLiteral 0x5640b996deb0 <col:29> 'int' 15
| `-EnumConstantDecl 0x5640b996dfe0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x5640b996e048 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b996dfc0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x5640b996dfa0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x5640b996df60 <col:51> 'int' 1
|         `-IntegerLiteral 0x5640b996df80 <col:54> 'int' 10
|-CXXConstructorDecl 0x5640b996e218 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x5640b996e070 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x5640b996e0f0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x5640b996e370 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x5640b996e2e0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x5640b996e468 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x5640b996e468
|-CXXMethodDecl 0x5640b996e5f8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x5640b99716f8 <col:42, line:100:5>
|   `-ReturnStmt 0x5640b99716e8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x5640b99716d0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x5640b99716a0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x5640b9970420
|         `-CXXThisExpr 0x5640b9971690 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5640b996e6c0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x5640b9971778 <col:36, line:105:5>
|   `-ReturnStmt 0x5640b9971768 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x5640b9971750 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5640b9971720 <col:16> 'void *const' lvalue ->_thunk 0x5640b9970488
|         `-CXXThisExpr 0x5640b9971710 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5640b996e780 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x5640b99717f8 <col:37, line:110:5>
|   `-ReturnStmt 0x5640b99717e8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x5640b99717d0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x5640b99717a0 <col:16> 'Element *const' lvalue ->_owner 0x5640b9970548
|         `-CXXThisExpr 0x5640b9971790 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5640b996e840 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x5640b996e908 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x5640b996e9c8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x5640b996ea88 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x5640b99718e0 <col:35, line:137:5>
|   `-ReturnStmt 0x5640b99718d0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x5640b9971898 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x5640b9971868 <col:16, col:24> '<bound member function type>' ->router 0x5640b985e710
|         `-ImplicitCastExpr 0x5640b99718b8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x5640b9971850 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x5640b9971820 <col:16> 'Element *const' lvalue ->_owner 0x5640b9970548
|               `-CXXThisExpr 0x5640b9971810 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5640b996eb48 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x5640b996ed08 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x5640b996ebf8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x5640b996ec70 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x5640b996ef18 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x5640b996edc8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x5640b996ee40 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x5640b996efe8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x5640b99719f0 <col:35, line:181:5>
|   `-ReturnStmt 0x5640b99719e0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x5640b99719c8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x5640b99719b0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x5640b9971980 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x5640b9970058
|           `-MemberExpr 0x5640b9971938 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5640b9970178
|             `-MemberExpr 0x5640b9971908 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x5640b99703a8
|               `-CXXThisExpr 0x5640b99718f8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5640b996f0a8 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x5640b9971b08 <col:30, line:192:5>
|   `-BinaryOperator 0x5640b9971ae8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x5640b9971a90 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5640b9970058
|     | `-MemberExpr 0x5640b9971a48 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5640b9970178
|     |   `-MemberExpr 0x5640b9971a18 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5640b99703a8
|     |     `-CXXThisExpr 0x5640b9971a08 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x5640b9971ad0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x5640b9971ac0 <col:32> 'bool' false
|-CXXMethodDecl 0x5640b996f168 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x5640b9971e58 <col:30, line:206:5>
|   |-BinaryOperator 0x5640b9971c00 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x5640b9971ba8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5640b9970058
|   | | `-MemberExpr 0x5640b9971b60 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5640b9970178
|   | |   `-MemberExpr 0x5640b9971b30 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5640b99703a8
|   | |     `-CXXThisExpr 0x5640b9971b20 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x5640b9971be8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x5640b9971bd8 <col:32> 'bool' true
|   |-CallExpr 0x5640b9971ca0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x5640b9971c88 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640b9971c68 <col:9> 'void ()' lvalue Function 0x5640b994f790 'click_fence' 'void ()'
|   `-IfStmt 0x5640b9971e40 <line:204:9, line:205:32>
|     |-BinaryOperator 0x5640b9971d80 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x5640b9971d50 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x5640b9971d00 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x5640b99707b8
|     | |   `-MemberExpr 0x5640b9971cd0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x5640b9970830
|     | |     `-CXXThisExpr 0x5640b9971cc0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x5640b9971d68 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x5640b9971d30 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x5640b9971e00 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x5640b9971db0 <col:13> '<bound member function type>' ->complete_schedule 0x5640b9971230
|       | `-CXXThisExpr 0x5640b9971da0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x5640b9971e28 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x5640b9971de0 <col:31> 'int' 0
|-CXXMethodDecl 0x5640b996f228 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x5640b9971f80 <col:35, line:240:5>
|   `-BinaryOperator 0x5640b9971f60 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x5640b9971f08 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5640b9970058
|     | `-MemberExpr 0x5640b9971ec0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5640b9970178
|     |   `-MemberExpr 0x5640b9971e90 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5640b99703a8
|     |     `-CXXThisExpr 0x5640b9971e80 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x5640b9971f48 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x5640b9971f38 <col:32> 'bool' true
|-CXXMethodDecl 0x5640b996f2e8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x5640b9972198 <col:37, line:253:5>
|   |-BinaryOperator 0x5640b9972078 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x5640b9972020 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5640b9970058
|   | | `-MemberExpr 0x5640b9971fd8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5640b9970178
|   | |   `-MemberExpr 0x5640b9971fa8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5640b99703a8
|   | |     `-CXXThisExpr 0x5640b9971f98 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x5640b9972060 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x5640b9972050 <col:32> 'bool' false
|   `-BinaryOperator 0x5640b9972178 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x5640b9972120 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x5640b99700b8
|     | `-MemberExpr 0x5640b99720d8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5640b9970178
|     |   `-MemberExpr 0x5640b99720a8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5640b99703a8
|     |     `-CXXThisExpr 0x5640b9972098 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x5640b9972160 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x5640b9972150 <col:41> 'bool' true
|-CXXMethodDecl 0x5640b996f3a8 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x5640b9972318 <col:37, line:264:5>
|   |-BinaryOperator 0x5640b9972298 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x5640b9972240 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x5640b99700b8
|   | | `-MemberExpr 0x5640b99721f8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5640b9970178
|   | |   `-MemberExpr 0x5640b99721c8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5640b99703a8
|   | |     `-CXXThisExpr 0x5640b99721b8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x5640b9972280 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x5640b9972270 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x5640b99722f8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x5640b99722c8 <col:9> '<bound member function type>' ->reschedule 0x5640b996f168
|       `-CXXThisExpr 0x5640b99722b8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x5640b996f4f0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x5640b996f460 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x5640b996f5c0 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x5640b996f708 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x5640b996f678 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x5640b996f858 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x5640b996f7c8 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x5640b996f920 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x5640b996f9e0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x5640b996fa80 <col:53> "" ""
|-CXXMethodDecl 0x5640b996fb18 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x5640b996fbb8 <col:47> "" ""
|-AccessSpecDecl 0x5640b996fc28 <line:303:3, col:10> col:3 private
|-FieldDecl 0x5640b996fc68 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x5640b996fcd0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x5640b996fd20 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5640b996fe38 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x5640b996fec8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x5640b996fff8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x5640b9970058 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x5640b99700b8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x5640b99e3038 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x5640b99e3110 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5640b99e3110
| | |-CXXConstructorDecl 0x5640b99e33c8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5640b99e33c8
| | | `-ParmVarDecl 0x5640b99e34d8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x5640b99e3578 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5640b99e3578
| |   `-ParmVarDecl 0x5640b99e3688 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x5640b9970178 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x5640b99701d8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x5640b9970178 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5640b996fff8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x5640b9970230 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x5640b9970178 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5640b9970058 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x5640b9970288 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x5640b9970178 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5640b99700b8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x5640b99702e0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x5640b99e2f48 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5640b99e38a8 <col:11>
| |-CXXConstructorDecl 0x5640b99e3218 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5640b99e3218
| | `-ParmVarDecl 0x5640b99e3328 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x5640b99e3728 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5640b99e3728
|   `-ParmVarDecl 0x5640b99e3838 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x5640b99703a8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x5640b9970420 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x5640b9970488 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x5640b99704e8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x5640b9970548 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x5640b9970598 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5640b99706b8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x5640b9970758 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x5640b99707b8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x5640b99cabc8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5640b99cabc8
| | `-ParmVarDecl 0x5640b99cacd8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x5640b99cad78 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5640b99cad78
| | `-ParmVarDecl 0x5640b99cae88 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x5640b99caef8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5640b99caef8
| |-CXXMethodDecl 0x5640b99dd008 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5640b99dd008
| | `-ParmVarDecl 0x5640b99dd118 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x5640b99dd188 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5640b99dd188
| | `-ParmVarDecl 0x5640b99dd298 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x5640b99e3908 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5640b99e39e0 <col:11>
|-FieldDecl 0x5640b9970830 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x5640b9970978 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x5640b99708b8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x5640b9970b28 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x5640b9970a38 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x5640b9970bf0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x5640b9970cb0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x5640b9970d70 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x5640b9972428 <col:41, line:355:5>
|   `-ReturnStmt 0x5640b9972418 <line:354:9, col:38>
|     `-BinaryOperator 0x5640b99723f8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x5640b99723c8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x5640b9972378 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x5640b99707b8
|       |   `-MemberExpr 0x5640b9972348 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x5640b9970830
|       |     `-CXXThisExpr 0x5640b9972338 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x5640b99723e0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5640b99723a8 <col:38> 'int' 0
|-CXXMethodDecl 0x5640b9970e30 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x5640b9970f70 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x5640b9970ee0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x5640b99710e8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x5640b9971028 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x5640b9971230 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x5640b99711a0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x5640b99712f8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x5640b99714c0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x5640b99713a8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x5640b9971428 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x5640b99715c0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x5640b9971650 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b995ac48 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5640b995ad78 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x5640b995b868 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.23 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b99574e8 prev 0x5640b984bfb0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5640b99575e0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x5640b9957670 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x5640b99576d0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x5640b9957778 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x5640b9957898 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x5640b9957a38 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x5640b9957978 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x5640b9957c88 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x5640b9957af8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x5640b9957b78 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x5640b9957e18 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x5640b9957d50 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x5640b9957f98 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x5640b9957ed8 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x5640b9958148 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x5640b9958088 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x5640b9958240 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x5640b995ba40 <col:21, line:58:5>
|   `-IfStmt 0x5640b995ba28 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x5640b995b990 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x5640b995b960 <col:6> '<bound member function type>' ->scheduled 0x5640b9958a98
|     |   `-ImplicitCastExpr 0x5640b995b9b0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x5640b995b950 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x5640b995ba08 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x5640b995b9d8 <col:6> '<bound member function type>' ->unschedule 0x5640b995a0f0
|         `-CXXThisExpr 0x5640b995b9c8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x5640b9958340 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x5640b995bbe0 <col:26, line:65:5>
|   |-BinaryOperator 0x5640b995bb00 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5640b995ba98 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5640b995ad78
|   | | `-MemberExpr 0x5640b995ba68 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5640b995ae38
|   | |   `-CXXThisExpr 0x5640b995ba58 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5640b995bae8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640b995bac8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x5640b995b298 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5640b995bbc0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x5640b995bb30 <col:2> 'void *' lvalue ->_thunk 0x5640b995aeb8
|     | `-CXXThisExpr 0x5640b995bb20 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x5640b995bb98 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x5640b995bb60 <col:20> 'int' 1
|-CXXMethodDecl 0x5640b9958480 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x5640b99583f0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x5640b995bd40 <col:52, line:71:5>
|   |-CStyleCastExpr 0x5640b995bc30 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5640b995bc00 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x5640b99583f0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x5640b995bd20 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x5640b995bcf0 <col:2> '<bound member function type>' ->assign 0x5640b9958340
|       `-CXXThisExpr 0x5640b995bce0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x5640b9958650 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x5640b9958538 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x5640b99585b8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x5640b995bec0 <col:58, line:79:5>
|   |-BinaryOperator 0x5640b995be08 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5640b995bda0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5640b995ad78
|   | | `-MemberExpr 0x5640b995bd70 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5640b995ae38
|   | |   `-CXXThisExpr 0x5640b995bd60 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5640b995bdf0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640b995bdd0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x5640b9958538 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x5640b995bea0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x5640b995be38 <col:2> 'void *' lvalue ->_thunk 0x5640b995aeb8
|     | `-CXXThisExpr 0x5640b995be28 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5640b995be88 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x5640b995be68 <col:11> 'void *' lvalue ParmVar 0x5640b99585b8 'user_data' 'void *'
|-CXXMethodDecl 0x5640b99587a0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x5640b9958710 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x5640b995c058 <col:35, line:87:5>
|   |-BinaryOperator 0x5640b995bf88 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5640b995bf20 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5640b995ad78
|   | | `-MemberExpr 0x5640b995bef0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5640b995ae38
|   | |   `-CXXThisExpr 0x5640b995bee0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5640b995bf70 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640b995bf50 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x5640b995b470 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5640b995c038 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x5640b995bfb8 <col:2> 'void *' lvalue ->_thunk 0x5640b995aeb8
|     | `-CXXThisExpr 0x5640b995bfa8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5640b995c020 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x5640b995c008 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x5640b995bfe8 <col:11> 'Element *' lvalue ParmVar 0x5640b9958710 'element' 'Element *'
|-CXXMethodDecl 0x5640b99588e8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x5640b9958858 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x5640b995c1f0 <col:29, line:94:5>
|   |-BinaryOperator 0x5640b995c120 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5640b995c0b8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5640b995ad78
|   | | `-MemberExpr 0x5640b995c088 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5640b995ae38
|   | |   `-CXXThisExpr 0x5640b995c078 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5640b995c108 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640b995c0e8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x5640b995b648 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5640b995c1d0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x5640b995c150 <col:2> 'void *' lvalue ->_thunk 0x5640b995aeb8
|     | `-CXXThisExpr 0x5640b995c140 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5640b995c1b8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x5640b995c1a0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x5640b995c180 <col:11> 'Task *' lvalue ParmVar 0x5640b9958858 'task' 'Task *'
|-CXXMethodDecl 0x5640b99589d8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x5640b995c2d0 <col:37, line:100:5>
|   `-ReturnStmt 0x5640b995c2c0 <line:99:2, col:19>
|     `-BinaryOperator 0x5640b995c2a0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x5640b995c270 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x5640b995c220 <col:9> 'Element *const' lvalue ->_owner 0x5640b995af18
|       |   `-CXXThisExpr 0x5640b995c210 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x5640b995c288 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x5640b995c250 <col:19> 'int' 0
|-CXXMethodDecl 0x5640b9958a98 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x5640b995c390 <col:35, line:105:5>
|   `-ReturnStmt 0x5640b995c380 <line:104:2, col:23>
|     `-BinaryOperator 0x5640b995c360 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x5640b995c348 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x5640b995c2f8 <col:9> 'const int' lvalue ->_schedpos1 0x5640b995ab98
|       |   `-CXXThisExpr 0x5640b995c2e8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x5640b995c328 <col:23> 'int' 0
|-CXXMethodDecl 0x5640b9958b58 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x5640b995c3f8 <col:51, line:118:5>
|   `-ReturnStmt 0x5640b995c3e8 <line:117:2, col:9>
|     `-MemberExpr 0x5640b995c3b8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x5640b995abf8
|       `-CXXThisExpr 0x5640b995c3a8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5640b9958c18 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x5640b995c950 <col:37, line:136:5>
|   `-IfStmt 0x5640b995c928 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x5640b995c4b8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x5640b995c4a0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x5640b995c480 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x5640b995c450 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x5640b97de088
|     |       `-MemberExpr 0x5640b995c420 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x5640b995abf8
|     |         `-CXXThisExpr 0x5640b995c410 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x5640b995c898 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x5640b995c880 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x5640b995c850 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x5640b995c838 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x5640b995c800 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x5640b995c7e8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x5640b995c7c8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5640b980c860 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x5640b995c768 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x5640b995c750 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x5640b995c678 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x5640b995c660 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x5640b995c640 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5640b980c520 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x5640b995c5e0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x5640b995c4e0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x5640b995abf8
|     |         |     |   `-CXXThisExpr 0x5640b995c4d0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x5640b995c628 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x5640b995c610 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x5640b995c5c0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x5640b995c5a8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x5640b995c548 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x5640b97ffb80 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x5640b995c7b0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x5640b995c798 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x5640b995c730 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x5640b995c718 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x5640b995c6e8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x5640b965b0d0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x5640b995c918 <line:135:6, col:13>
|       `-CXXConstructExpr 0x5640b995c8e8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x5640b995c8b8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x5640b995abf8
|           `-CXXThisExpr 0x5640b995c8a8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x5640b9958cd8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x5640b995ca38 <col:35, line:141:5>
|   `-ReturnStmt 0x5640b995ca28 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x5640b995c9f0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x5640b995c9c0 <col:9, col:17> '<bound member function type>' ->router 0x5640b985e710
|         `-ImplicitCastExpr 0x5640b995ca10 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x5640b995c9a8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x5640b995c978 <col:9> 'Element *const' lvalue ->_owner 0x5640b995af18
|               `-CXXThisExpr 0x5640b995c968 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5640b9958d98 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x5640b995cab8 <col:37, line:146:5>
|   `-ReturnStmt 0x5640b995caa8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x5640b995ca90 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x5640b995ca60 <col:9> 'Element *const' lvalue ->_owner 0x5640b995af18
|         `-CXXThisExpr 0x5640b995ca50 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5640b9958e58 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x5640b995cb38 <col:41, line:151:5>
|   `-ReturnStmt 0x5640b995cb28 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x5640b995cb10 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x5640b995cae0 <col:9> 'RouterThread *const' lvalue ->_thread 0x5640b995af78
|         `-CXXThisExpr 0x5640b995cad0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5640b9958f20 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x5640b9959118 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x5640b9958fd0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x5640b9959048 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5640b995b858 <col:50> 'bool' false
|-CXXMethodDecl 0x5640b9959298 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x5640b99591d8 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x5640b99593e0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x5640b9959350 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x5640b9959528 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x5640b9959498 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x5640b9959670 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5640b99595e0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x5640b99597b8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5640b9959728 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x5640b9959880 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x5640b995cca0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x5640b995cc88 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x5640b995cc30 <col:2, col:47> 'void'
|       |-MemberExpr 0x5640b995cb60 <col:2> '<bound member function type>' ->schedule_at_steady 0x5640b99593e0
|       | `-CXXThisExpr 0x5640b995cb50 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5640b995cc70 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5640b995cc58 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x5640b995cc10 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x5640b995cbf8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x5640b995cbc8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x5640b965b0d0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x5640b99599c0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x5640b9959930 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x5640b9959b08 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5640b9959a78 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b995ce28 <col:56, line:241:5>
|   `-ExprWithCleanups 0x5640b995ce10 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x5640b995cdb8 <col:2, col:40> 'void'
|       |-MemberExpr 0x5640b995ccc8 <col:2> '<bound member function type>' ->schedule_after 0x5640b99599c0
|       | `-CXXThisExpr 0x5640b995ccb8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5640b995cdf8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5640b995cde0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x5640b995cd78 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x5640b995cd48 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x5640b995cd08 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b9959a78 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x5640b995cd60 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5640b995cd28 <col:38> 'int' 0
|-CXXMethodDecl 0x5640b9959c50 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5640b9959bc0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b995d098 <col:58, line:249:5>
|   `-ExprWithCleanups 0x5640b995d080 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x5640b995d028 <col:2, col:49> 'void'
|       |-MemberExpr 0x5640b995ce50 <col:2> '<bound member function type>' ->schedule_after 0x5640b99599c0
|       | `-CXXThisExpr 0x5640b995ce40 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5640b995d068 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5640b995d050 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x5640b995cfd0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x5640b995cfb8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5640b995cf28 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5640b97dfe78 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x5640b995d010 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x5640b995cff8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5640b995cf08 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b9959bc0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b9959d98 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x5640b9959d08 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x5640b995d278 <col:58, line:261:5>
|   `-ExprWithCleanups 0x5640b995d260 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x5640b995d208 <col:2, col:38> 'void'
|       |-MemberExpr 0x5640b995d0c0 <col:2> '<bound member function type>' ->schedule_at_steady 0x5640b99593e0
|       | `-CXXThisExpr 0x5640b995d0b0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5640b995d248 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5640b995d230 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x5640b995d1d0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x5640b995d1b8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5640b995d198 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5640b980c520 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x5640b995d168 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x5640b995d150 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x5640b995d100 <col:21> 'Timestamp' lvalue ->_expiry_s 0x5640b995abf8
|             |     `-CXXThisExpr 0x5640b995d0f0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x5640b995d130 <col:33> 'const Timestamp' lvalue ParmVar 0x5640b9959d08 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x5640b9959ee0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5640b9959e50 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b995d550 <col:58, line:270:5>
|   `-ExprWithCleanups 0x5640b995d538 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x5640b995d4e0 <col:2, col:79> 'void'
|       |-MemberExpr 0x5640b995d2a0 <col:2> '<bound member function type>' ->schedule_at_steady 0x5640b99593e0
|       | `-CXXThisExpr 0x5640b995d290 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5640b995d520 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5640b995d508 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x5640b995d4a0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x5640b995d3d8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x5640b995d3c0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x5640b995d350 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x5640b995d320 <col:31, col:41> '<bound member function type>' .sec 0x5640b965cbc8
|             | |     `-ImplicitCastExpr 0x5640b995d370 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x5640b995d2f0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x5640b995abf8
|             | |         `-CXXThisExpr 0x5640b995d2e0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x5640b995d3a8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x5640b995d388 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b9959e50 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x5640b995d468 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x5640b995d438 <col:60, col:70> '<bound member function type>' .subsec 0x5640b965d2c0
|                 `-ImplicitCastExpr 0x5640b995d488 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x5640b995d408 <col:60> 'Timestamp' lvalue ->_expiry_s 0x5640b995abf8
|                     `-CXXThisExpr 0x5640b995d3f8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x5640b995a028 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5640b9959f98 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5640b995d888 <col:60, line:279:5>
|   `-ExprWithCleanups 0x5640b995d870 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x5640b995d818 <col:2, col:65> 'void'
|       |-MemberExpr 0x5640b995d578 <col:2> '<bound member function type>' ->schedule_at_steady 0x5640b99593e0
|       | `-CXXThisExpr 0x5640b995d568 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5640b995d858 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5640b995d840 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x5640b995d7e0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x5640b995d7c8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5640b995d7a8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5640b980c520 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x5640b995d748 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x5640b995d730 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x5640b995d5b8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x5640b995abf8
|             |     `-CXXThisExpr 0x5640b995d5a8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x5640b995d790 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x5640b995d778 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x5640b995d6d8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x5640b995d6c0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x5640b995d690 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5640b97dfe78 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x5640b995d718 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x5640b995d700 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x5640b995d670 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x5640b9959f98 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5640b995a0f0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x5640b995a1b0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x5640b995dd50 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x5640b995d8e0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x5640b995d8b0 <col:2> '<bound member function type>' ->unschedule 0x5640b995a0f0
|   |   `-CXXThisExpr 0x5640b995d8a0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x5640b995dd38 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x5640b995dd00 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x5640b995dce8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5640b995d998 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x5640b94f4168 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x5640b995d910 <col:2> 'Timestamp' lvalue ->_expiry_s 0x5640b995abf8
|       | `-CXXThisExpr 0x5640b995d900 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5640b995d980 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x5640b995d950 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x5640b995a270 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x5640b995e0a8 <col:42, line:310:5>
|   |-IfStmt 0x5640b995def0 <line:306:2, line:307:23>
|   | |-CallExpr 0x5640b995de20 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x5640b995de08 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x5640b995dda8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x5640b97fdff0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x5640b995dee0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x5640b995dec8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x5640b995de98 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5640b995de80 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x5640b995de50 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x5640b995e098 <line:309:2, col:33>
|     `-ExprWithCleanups 0x5640b995e080 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x5640b995e050 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5640b995e038 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x5640b995dff8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x5640b995dfe0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5640b995dfb0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5640b97e0190 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x5640b995e020 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x5640b995df90 <col:30> 'int' 500
|-CXXMethodDecl 0x5640b995a3b0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x5640b995a320 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5640b995a458 <col:69> "" ""
|-CXXMethodDecl 0x5640b995a568 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x5640b995a4d8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5640b995a610 <col:70> "" ""
|-CXXMethodDecl 0x5640b995a720 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x5640b995a690 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5640b995a7c8 <col:71> "" ""
|-CXXMethodDecl 0x5640b995a8d8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x5640b995a848 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5640b995a980 <col:72> "" ""
|-EnumDecl 0x5640b995a9f0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x5640b995aaf0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x5640b995ab40 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5640b995aad0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x5640b995aab0 <col:25> 'int' 1
|-AccessSpecDecl 0x5640b995ab58 <line:339:3, col:10> col:3 private
|-FieldDecl 0x5640b995ab98 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x5640b995abf8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x5640b995ac48 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5640b995ad78 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x5640b995b868 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x5640b995ae38 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x5640b995aeb8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x5640b995af18 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x5640b995af78 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x5640b995b0c8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x5640b995afd8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x5640b995b298 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5640b995b180 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x5640b995b200 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x5640b995b470 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5640b995b358 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x5640b995b3d8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x5640b995b648 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5640b995b530 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x5640b995b5b0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x5640b995b818 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.23, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.23, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5640b9975cd0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x5640b9b112b8 <line:167:18>
|-CXXRecordDecl 0x5640b9b11378 prev 0x5640b9975cd0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x5640b9b11488 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b943fbd8 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b943fcf8 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x5640b9651b70 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5640b9651c50 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x5640b9651c50
| `-ParmVarDecl 0x5640b9651d38 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x5640b9651dd8 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x5640b9651dd8
| `-ParmVarDecl 0x5640b9651ee8 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x5640b97eebd0 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9a4a670 prev 0x5640b98761a0 <../dummy_inc/click/etheraddress.hh:9:1, line:148:1> line:9:7 referenced class EtherAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-PackedAttr 0x5640b97012f8 <line:148:18>
|-CXXRecordDecl 0x5640b9a4a768 <line:9:1, col:7> col:7 implicit referenced class EtherAddress
|-AccessSpecDecl 0x5640b9a4a7f8 <col:22, col:28> col:22 public
|-TypedefDecl 0x5640b9a4a830 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x5640b943fc70 'uninitialized_type'
|   `-CXXRecord 0x5640b943fbd8 'uninitialized_type'
|-CXXConstructorDecl 0x5640b9a4a8c0 <line:14:5, line:16:5> line:14:12 EtherAddress 'void ()' inline
| `-CompoundStmt 0x5640b97015f8 <col:27, line:16:5>
|   `-BinaryOperator 0x5640b97015d8 <line:15:2, col:35> 'uint16_t':'unsigned short' lvalue '='
|     |-ArraySubscriptExpr 0x5640b97013e0 <col:2, col:9> 'uint16_t':'unsigned short' lvalue
|     | |-ImplicitCastExpr 0x5640b97013c8 <col:2> 'uint16_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5640b9701378 <col:2> 'uint16_t [3]' lvalue ->_data 0x5640b97010f8
|     | |   `-CXXThisExpr 0x5640b9701368 <col:2> 'EtherAddress *' implicit this
|     | `-IntegerLiteral 0x5640b97013a8 <col:8> 'int' 0
|     `-ImplicitCastExpr 0x5640b97015c0 <col:13, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-BinaryOperator 0x5640b97015a0 <col:13, col:35> 'uint16_t':'unsigned short' lvalue '='
|         |-ArraySubscriptExpr 0x5640b9701478 <col:13, col:20> 'uint16_t':'unsigned short' lvalue
|         | |-ImplicitCastExpr 0x5640b9701460 <col:13> 'uint16_t *' <ArrayToPointerDecay>
|         | | `-MemberExpr 0x5640b9701410 <col:13> 'uint16_t [3]' lvalue ->_data 0x5640b97010f8
|         | |   `-CXXThisExpr 0x5640b9701400 <col:13> 'EtherAddress *' implicit this
|         | `-IntegerLiteral 0x5640b9701440 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x5640b9701588 <col:24, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|           `-BinaryOperator 0x5640b9701568 <col:24, col:35> 'uint16_t':'unsigned short' lvalue '='
|             |-ArraySubscriptExpr 0x5640b9701510 <col:24, col:31> 'uint16_t':'unsigned short' lvalue
|             | |-ImplicitCastExpr 0x5640b97014f8 <col:24> 'uint16_t *' <ArrayToPointerDecay>
|             | | `-MemberExpr 0x5640b97014a8 <col:24> 'uint16_t [3]' lvalue ->_data 0x5640b97010f8
|             | |   `-CXXThisExpr 0x5640b9701498 <col:24> 'EtherAddress *' implicit this
|             | `-IntegerLiteral 0x5640b97014d8 <col:30> 'int' 2
|             `-ImplicitCastExpr 0x5640b9701550 <col:35> 'uint16_t':'unsigned short' <IntegralCast>
|               `-IntegerLiteral 0x5640b9701530 <col:35> 'int' 0
|-CXXConstructorDecl 0x5640b9a4aa10 <line:22:5, line:24:5> line:22:21 EtherAddress 'void (const unsigned char *)' inline
| |-ParmVarDecl 0x5640b9a4a980 <col:34, col:55> col:55 used data 'const unsigned char *'
| `-CompoundStmt 0x5640b97017c0 <col:61, line:24:5>
|   `-CallExpr 0x5640b9701710 <line:23:2, col:23> 'void *'
|     |-ImplicitCastExpr 0x5640b97016f8 <col:2> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5640b97016d8 <col:2> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x5640b95499e8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
|     |-ImplicitCastExpr 0x5640b9701760 <col:9> 'void *' <BitCast>
|     | `-ImplicitCastExpr 0x5640b9701748 <col:9> 'uint16_t *' <ArrayToPointerDecay>
|     |   `-MemberExpr 0x5640b9701668 <col:9> 'uint16_t [3]' lvalue ->_data 0x5640b97010f8
|     |     `-CXXThisExpr 0x5640b9701658 <col:9> 'EtherAddress *' implicit this
|     |-ImplicitCastExpr 0x5640b9701790 <col:16> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x5640b9701778 <col:16> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x5640b9701698 <col:16> 'const unsigned char *' lvalue ParmVar 0x5640b9a4a980 'data' 'const unsigned char *'
|     `-ImplicitCastExpr 0x5640b97017a8 <col:22> 'size_t':'unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x5640b97016b8 <col:22> 'int' 6
|-CXXConstructorDecl 0x5640b9a4ab60 <line:27:5, line:29:5> line:27:12 EtherAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x5640b9a4aad0 <col:25, col:51> col:51 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x5640b9701830 <col:59, line:29:5>
|   `-CStyleCastExpr 0x5640b9701808 <line:28:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x5640b97017d8 <col:9> 'const uninitialized_type' lvalue ParmVar 0x5640b9a4aad0 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x5640b9a4ac58 <line:32:5, line:34:5> line:32:25 used make_broadcast 'EtherAddress ()' static
| `-CompoundStmt 0x5640b9701f78 <col:42, line:34:5>
|   `-ReturnStmt 0x5640b9701f68 <line:33:2, col:28>
|     `-ExprWithCleanups 0x5640b9701f50 <col:9, col:28> 'EtherAddress'
|       `-CXXConstructExpr 0x5640b9701f20 <col:9, col:28> 'EtherAddress' 'void (EtherAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5640b9701d58 <col:9, col:28> 'EtherAddress' xvalue
|           `-CXXFunctionalCastExpr 0x5640b9701cd0 <col:9, col:28> 'EtherAddress' functional cast to class EtherAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x5640b9701bc0 <col:9, col:28> 'EtherAddress' 'void (uint16_t)'
|               `-ImplicitCastExpr 0x5640b9701ba8 <col:22> 'uint16_t':'unsigned short' <IntegralCast>
|                 `-IntegerLiteral 0x5640b9701858 <col:22> 'int' 65535
|-CXXMethodDecl 0x5640b9a4ad18 <line:36:5, col:70> col:32 broadcast 'EtherAddress ()' static inline
| `-DeprecatedAttr 0x5640b9a4adb8 <col:59> "" ""
|-TypedefDecl 0x5640b9a4af38 <line:39:5, col:59> col:34 referenced unspecified_bool_type 'bool (EtherAddress::*)() const'
| `-MemberPointerType 0x5640b9a4aeb0 'bool (EtherAddress::*)() const'
|   |-RecordType 0x5640b984c370 'EtherAddress'
|   | `-CXXRecord 0x5640b9a4a670 'EtherAddress'
|   `-ParenType 0x5640b9a4ae50 'bool () const' sugar
|     `-FunctionProtoType 0x5640b9392990 'bool () const' const cdecl
|       `-BuiltinType 0x5640b92e52f0 'bool'
|-CXXConversionDecl 0x5640b9a4b078 <line:41:5, line:43:5> line:41:12 operator bool (EtherAddress::*)() const 'EtherAddress::unspecified_bool_type () const' inline
| `-CompoundStmt 0x5640b9702358 <col:51, line:43:5>
|   `-ReturnStmt 0x5640b9702348 <line:42:2, col:70>
|     `-ConditionalOperator 0x5640b9702318 <col:9, col:70> 'bool (EtherAddress::*)() const'
|       |-BinaryOperator 0x5640b9702240 <col:9, col:40> 'bool' '||'
|       | |-BinaryOperator 0x5640b9702158 <col:9, col:28> 'bool' '||'
|       | | |-ImplicitCastExpr 0x5640b9702110 <col:9, col:16> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x5640b97020f8 <col:9, col:16> 'uint16_t':'unsigned short' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x5640b9702040 <col:9, col:16> 'const uint16_t':'const unsigned short' lvalue
|       | | |     |-ImplicitCastExpr 0x5640b9702028 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       | | |     | `-MemberExpr 0x5640b9701fa0 <col:9> 'uint16_t const[3]' lvalue ->_data 0x5640b97010f8
|       | | |     |   `-CXXThisExpr 0x5640b9701f90 <col:9> 'const EtherAddress *' implicit this
|       | | |     `-IntegerLiteral 0x5640b9701fd0 <col:15> 'int' 0
|       | | `-ImplicitCastExpr 0x5640b9702140 <col:21, col:28> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x5640b9702128 <col:21, col:28> 'uint16_t':'unsigned short' <LValueToRValue>
|       | |     `-ArraySubscriptExpr 0x5640b97020d8 <col:21, col:28> 'const uint16_t':'const unsigned short' lvalue
|       | |       |-ImplicitCastExpr 0x5640b97020c0 <col:21> 'const uint16_t *' <ArrayToPointerDecay>
|       | |       | `-MemberExpr 0x5640b9702070 <col:21> 'uint16_t const[3]' lvalue ->_data 0x5640b97010f8
|       | |       |   `-CXXThisExpr 0x5640b9702060 <col:21> 'const EtherAddress *' implicit this
|       | |       `-IntegerLiteral 0x5640b97020a0 <col:27> 'int' 1
|       | `-ImplicitCastExpr 0x5640b9702228 <col:33, col:40> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x5640b9702210 <col:33, col:40> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x5640b97021f0 <col:33, col:40> 'const uint16_t':'const unsigned short' lvalue
|       |       |-ImplicitCastExpr 0x5640b97021d8 <col:33> 'const uint16_t *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x5640b9702188 <col:33> 'uint16_t const[3]' lvalue ->_data 0x5640b97010f8
|       |       |   `-CXXThisExpr 0x5640b9702178 <col:33> 'const EtherAddress *' implicit this
|       |       `-IntegerLiteral 0x5640b97021b8 <col:39> 'int' 2
|       |-UnaryOperator 0x5640b97022c8 <col:44, col:59> 'bool (EtherAddress::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x5640b9702298 <col:45, col:59> 'bool () const' CXXMethod 0x5640b9a4b148 'is_group' 'bool () const'
|       `-ImplicitCastExpr 0x5640b9702300 <col:70> 'bool (EtherAddress::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x5640b97022e0 <col:70> 'int' 0
|-CXXMethodDecl 0x5640b9a4b148 <line:49:5, line:51:5> line:49:17 used is_group 'bool () const' inline
| `-CompoundStmt 0x5640b9702518 <col:34, line:51:5>
|   `-ReturnStmt 0x5640b9702508 <line:50:2, col:21>
|     `-ImplicitCastExpr 0x5640b97024f0 <col:9, col:21> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5640b97024d0 <col:9, col:21> 'int' '&'
|         |-ImplicitCastExpr 0x5640b97024b8 <col:9, col:17> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x5640b97024a0 <col:9, col:17> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x5640b9702460 <col:9, col:17> 'const unsigned char' lvalue
|         |     |-CXXMemberCallExpr 0x5640b9702420 <col:9, col:14> 'const unsigned char *'
|         |     | `-MemberExpr 0x5640b97023f0 <col:9> '<bound member function type>' ->data 0x5640b9a4b5e0
|         |     |   `-CXXThisExpr 0x5640b97023e0 <col:9> 'const EtherAddress *' implicit this
|         |     `-IntegerLiteral 0x5640b9702440 <col:16> 'int' 0
|         `-IntegerLiteral 0x5640b9702480 <col:21> 'int' 1
|-CXXMethodDecl 0x5640b9a4b208 <line:57:5, line:59:5> line:57:17 is_local 'bool () const' inline
| `-CompoundStmt 0x5640b97026d8 <col:34, line:59:5>
|   `-ReturnStmt 0x5640b97026c8 <line:58:2, col:21>
|     `-ImplicitCastExpr 0x5640b97026b0 <col:9, col:21> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5640b9702690 <col:9, col:21> 'int' '&'
|         |-ImplicitCastExpr 0x5640b9702678 <col:9, col:17> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x5640b9702660 <col:9, col:17> 'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x5640b9702620 <col:9, col:17> 'const unsigned char' lvalue
|         |     |-CXXMemberCallExpr 0x5640b97025e0 <col:9, col:14> 'const unsigned char *'
|         |     | `-MemberExpr 0x5640b97025b0 <col:9> '<bound member function type>' ->data 0x5640b9a4b5e0
|         |     |   `-CXXThisExpr 0x5640b97025a0 <col:9> 'const EtherAddress *' implicit this
|         |     `-IntegerLiteral 0x5640b9702600 <col:16> 'int' 0
|         `-IntegerLiteral 0x5640b9702640 <col:21> 'int' 2
|-CXXMethodDecl 0x5640b9a4b2c8 <line:64:5, line:66:5> line:64:17 used is_broadcast 'bool () const' inline
| `-CompoundStmt 0x5640b97029d8 <col:38, line:66:5>
|   `-ReturnStmt 0x5640b97029c8 <line:65:2, col:43>
|     `-BinaryOperator 0x5640b97029a8 <col:9, col:43> 'bool' '=='
|       |-BinaryOperator 0x5640b9702968 <col:9, col:38> 'int' '+'
|       | |-BinaryOperator 0x5640b9702880 <col:9, col:27> 'int' '+'
|       | | |-ImplicitCastExpr 0x5640b9702838 <col:9, col:16> 'int' <IntegralCast>
|       | | | `-ImplicitCastExpr 0x5640b9702820 <col:9, col:16> 'uint16_t':'unsigned short' <LValueToRValue>
|       | | |   `-ArraySubscriptExpr 0x5640b9702768 <col:9, col:16> 'const uint16_t':'const unsigned short' lvalue
|       | | |     |-ImplicitCastExpr 0x5640b9702750 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       | | |     | `-MemberExpr 0x5640b9702700 <col:9> 'uint16_t const[3]' lvalue ->_data 0x5640b97010f8
|       | | |     |   `-CXXThisExpr 0x5640b97026f0 <col:9> 'const EtherAddress *' implicit this
|       | | |     `-IntegerLiteral 0x5640b9702730 <col:15> 'int' 0
|       | | `-ImplicitCastExpr 0x5640b9702868 <col:20, col:27> 'int' <IntegralCast>
|       | |   `-ImplicitCastExpr 0x5640b9702850 <col:20, col:27> 'uint16_t':'unsigned short' <LValueToRValue>
|       | |     `-ArraySubscriptExpr 0x5640b9702800 <col:20, col:27> 'const uint16_t':'const unsigned short' lvalue
|       | |       |-ImplicitCastExpr 0x5640b97027e8 <col:20> 'const uint16_t *' <ArrayToPointerDecay>
|       | |       | `-MemberExpr 0x5640b9702798 <col:20> 'uint16_t const[3]' lvalue ->_data 0x5640b97010f8
|       | |       |   `-CXXThisExpr 0x5640b9702788 <col:20> 'const EtherAddress *' implicit this
|       | |       `-IntegerLiteral 0x5640b97027c8 <col:26> 'int' 1
|       | `-ImplicitCastExpr 0x5640b9702950 <col:31, col:38> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x5640b9702938 <col:31, col:38> 'uint16_t':'unsigned short' <LValueToRValue>
|       |     `-ArraySubscriptExpr 0x5640b9702918 <col:31, col:38> 'const uint16_t':'const unsigned short' lvalue
|       |       |-ImplicitCastExpr 0x5640b9702900 <col:31> 'const uint16_t *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x5640b97028b0 <col:31> 'uint16_t const[3]' lvalue ->_data 0x5640b97010f8
|       |       |   `-CXXThisExpr 0x5640b97028a0 <col:31> 'const EtherAddress *' implicit this
|       |       `-IntegerLiteral 0x5640b97028e0 <col:37> 'int' 2
|       `-IntegerLiteral 0x5640b9702988 <col:43> 'int' 196605
|-CXXMethodDecl 0x5640b9a4b448 <line:69:5, line:75:5> line:69:24 is_broadcast 'bool (const unsigned char *)' static inline
| |-ParmVarDecl 0x5640b9a4b380 <col:37, col:58> col:58 used data 'const unsigned char *'
| `-CompoundStmt 0x5640b9702b28 <col:64, line:75:5>
|   `-ReturnStmt 0x5640b9702b18 <line:71:2, col:68>
|     `-CXXMemberCallExpr 0x5640b9702af8 <col:9, col:68> 'bool'
|       `-MemberExpr 0x5640b9702ac8 <col:9, col:55> '<bound member function type>' ->is_broadcast 0x5640b9a4b2c8
|         `-CXXReinterpretCastExpr 0x5640b9702a38 <col:9, col:52> 'const EtherAddress *' reinterpret_cast<const class EtherAddress *> <BitCast>
|           `-ImplicitCastExpr 0x5640b9702a20 <col:48> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|             `-DeclRefExpr 0x5640b97029f0 <col:48> 'const unsigned char *' lvalue ParmVar 0x5640b9a4b380 'data' 'const unsigned char *'
|-CXXMethodDecl 0x5640b9a4b518 <line:78:5, line:80:5> line:78:27 data 'unsigned char *()' inline
| `-CompoundStmt 0x5640b9702bf0 <col:34, line:80:5>
|   `-ReturnStmt 0x5640b9702be0 <line:79:2, col:48>
|     `-CXXReinterpretCastExpr 0x5640b9702bb0 <col:9, col:48> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
|       `-ImplicitCastExpr 0x5640b9702b98 <col:43> 'uint16_t *' <ArrayToPointerDecay> part_of_explicit_cast
|         `-MemberExpr 0x5640b9702b50 <col:43> 'uint16_t [3]' lvalue ->_data 0x5640b97010f8
|           `-CXXThisExpr 0x5640b9702b40 <col:43> 'EtherAddress *' implicit this
|-CXXMethodDecl 0x5640b9a4b5e0 <line:83:5, line:85:5> line:83:33 used data 'const unsigned char *() const' inline
| `-CompoundStmt 0x5640b9702cb8 <col:46, line:85:5>
|   `-ReturnStmt 0x5640b9702ca8 <line:84:2, col:54>
|     `-CXXReinterpretCastExpr 0x5640b9702c78 <col:9, col:54> 'const unsigned char *' reinterpret_cast<const unsigned char *> <BitCast>
|       `-ImplicitCastExpr 0x5640b9702c60 <col:49> 'const uint16_t *' <ArrayToPointerDecay> part_of_explicit_cast
|         `-MemberExpr 0x5640b9702c18 <col:49> 'uint16_t const[3]' lvalue ->_data 0x5640b97010f8
|           `-CXXThisExpr 0x5640b9702c08 <col:49> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x5640b9a4b728 <line:89:5, line:91:5> line:89:28 used sdata 'const uint16_t *() const' inline
| `-CompoundStmt 0x5640b9702d38 <col:42, line:91:5>
|   `-ReturnStmt 0x5640b9702d28 <line:90:2, col:9>
|     `-ImplicitCastExpr 0x5640b9702d10 <col:9> 'const uint16_t *' <ArrayToPointerDecay>
|       `-MemberExpr 0x5640b9702ce0 <col:9> 'uint16_t const[3]' lvalue ->_data 0x5640b97010f8
|         `-CXXThisExpr 0x5640b9702cd0 <col:9> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x5640b9a4b7e8 <line:94:5, line:97:5> line:94:19 hashcode 'size_t () const' inline
| `-CompoundStmt 0x5640b9703148 <col:36, line:97:5>
|   `-ReturnStmt 0x5640b9703138 <line:95:2, line:96:31>
|     `-BinaryOperator 0x5640b9703118 <line:95:9, line:96:31> 'unsigned long' '^'
|       |-ParenExpr 0x5640b9702f98 <line:95:9, col:46> 'unsigned long'
|       | `-BinaryOperator 0x5640b9702f78 <col:10, col:45> 'unsigned long' '|'
|       |   |-ImplicitCastExpr 0x5640b9702f60 <col:10, col:17> 'unsigned long' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x5640b9702f48 <col:10, col:17> 'uint16_t':'unsigned short' <LValueToRValue>
|       |   |   `-ArraySubscriptExpr 0x5640b9702dc8 <col:10, col:17> 'const uint16_t':'const unsigned short' lvalue
|       |   |     |-ImplicitCastExpr 0x5640b9702db0 <col:10> 'const uint16_t *' <ArrayToPointerDecay>
|       |   |     | `-MemberExpr 0x5640b9702d60 <col:10> 'uint16_t const[3]' lvalue ->_data 0x5640b97010f8
|       |   |     |   `-CXXThisExpr 0x5640b9702d50 <col:10> 'const EtherAddress *' implicit this
|       |   |     `-IntegerLiteral 0x5640b9702d90 <col:16> 'int' 2
|       |   `-ParenExpr 0x5640b9702f28 <col:21, col:45> 'size_t':'unsigned long'
|       |     `-BinaryOperator 0x5640b9702f08 <col:22, col:43> 'size_t':'unsigned long' '<<'
|       |       |-CStyleCastExpr 0x5640b9702ec0 <col:22, col:38> 'size_t':'unsigned long' <NoOp>
|       |       | `-ImplicitCastExpr 0x5640b9702ea8 <col:31, col:38> 'size_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|       |       |   `-ImplicitCastExpr 0x5640b9702e90 <col:31, col:38> 'uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
|       |       |     `-ArraySubscriptExpr 0x5640b9702e60 <col:31, col:38> 'const uint16_t':'const unsigned short' lvalue
|       |       |       |-ImplicitCastExpr 0x5640b9702e48 <col:31> 'const uint16_t *' <ArrayToPointerDecay>
|       |       |       | `-MemberExpr 0x5640b9702df8 <col:31> 'uint16_t const[3]' lvalue ->_data 0x5640b97010f8
|       |       |       |   `-CXXThisExpr 0x5640b9702de8 <col:31> 'const EtherAddress *' implicit this
|       |       |       `-IntegerLiteral 0x5640b9702e28 <col:37> 'int' 1
|       |       `-IntegerLiteral 0x5640b9702ee8 <col:43> 'int' 16
|       `-ParenExpr 0x5640b97030f8 <line:96:8, col:31> 'size_t':'unsigned long'
|         `-BinaryOperator 0x5640b97030d8 <col:9, col:30> 'size_t':'unsigned long' '<<'
|           |-CStyleCastExpr 0x5640b9703090 <col:9, col:25> 'size_t':'unsigned long' <NoOp>
|           | `-ImplicitCastExpr 0x5640b9703078 <col:18, col:25> 'size_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           |   `-ImplicitCastExpr 0x5640b9703060 <col:18, col:25> 'uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
|           |     `-ArraySubscriptExpr 0x5640b9703030 <col:18, col:25> 'const uint16_t':'const unsigned short' lvalue
|           |       |-ImplicitCastExpr 0x5640b9703018 <col:18> 'const uint16_t *' <ArrayToPointerDecay>
|           |       | `-MemberExpr 0x5640b9702fc8 <col:18> 'uint16_t const[3]' lvalue ->_data 0x5640b97010f8
|           |       |   `-CXXThisExpr 0x5640b9702fb8 <col:18> 'const EtherAddress *' implicit this
|           |       `-IntegerLiteral 0x5640b9702ff8 <col:24> 'int' 0
|           `-IntegerLiteral 0x5640b97030b8 <col:30> 'int' 9
|-CXXMethodDecl 0x5640b9a4b8a8 <line:109:5, line:111:5> line:109:19 used unparse 'String () const' inline
| `-CompoundStmt 0x5640b9703258 <col:35, line:111:5>
|   `-ReturnStmt 0x5640b9703248 <line:110:2, col:22>
|     `-ExprWithCleanups 0x5640b9703230 <col:9, col:22> 'String'
|       `-CXXConstructExpr 0x5640b9703200 <col:9, col:22> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5640b97031e8 <col:9, col:22> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5640b97031c8 <col:9, col:22> 'String' (CXXTemporary 0x5640b97031c8)
|             `-CXXMemberCallExpr 0x5640b97031a0 <col:9, col:22> 'String'
|               `-MemberExpr 0x5640b9703170 <col:9> '<bound member function type>' ->unparse_dash 0x5640b9a4ba28
|                 `-CXXThisExpr 0x5640b9703160 <col:9> 'const EtherAddress *' implicit this
|-CXXMethodDecl 0x5640b9a4b968 <line:118:5, col:28> col:12 unparse_colon 'String () const'
|-CXXMethodDecl 0x5640b9a4ba28 <line:126:5, col:27> col:12 used unparse_dash 'String () const'
|-CXXMethodDecl 0x5640b9a4bae8 <line:131:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x5640b9a4bb88 <col:44> "" ""
|-CXXConversionDecl 0x5640b9a4bc28 <line:136:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x5640b9a4bcd0 <col:51> "" ""
|-TypedefDecl 0x5640b9700fd8 <line:138:5, col:33> col:33 parameter_type 'const EtherAddress &'
| `-LValueReferenceType 0x5640b9700fa0 'const EtherAddress &'
|   `-QualType 0x5640b984c371 'const EtherAddress' const
|     `-RecordType 0x5640b984c370 'EtherAddress'
|       `-CXXRecord 0x5640b9a4a670 'EtherAddress'
|-AccessSpecDecl 0x5640b9701030 <line:140:2, col:9> col:2 private
|-FieldDecl 0x5640b97010f8 <line:142:5, col:21> col:14 referenced _data 'uint16_t [3]'
|-CXXConstructorDecl 0x5640b9701248 <line:144:5, line:146:5> line:144:5 used EtherAddress 'void (uint16_t)'
| |-ParmVarDecl 0x5640b9701158 <col:18, col:27> col:27 used m 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5640b9703500 <col:30, line:146:5>
|   `-BinaryOperator 0x5640b97034e0 <line:145:2, col:35> 'uint16_t':'unsigned short' lvalue '='
|     |-ArraySubscriptExpr 0x5640b97032e8 <col:2, col:9> 'uint16_t':'unsigned short' lvalue
|     | |-ImplicitCastExpr 0x5640b97032d0 <col:2> 'uint16_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5640b9703280 <col:2> 'uint16_t [3]' lvalue ->_data 0x5640b97010f8
|     | |   `-CXXThisExpr 0x5640b9703270 <col:2> 'EtherAddress *' implicit this
|     | `-IntegerLiteral 0x5640b97032b0 <col:8> 'int' 0
|     `-ImplicitCastExpr 0x5640b97034c8 <col:13, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-BinaryOperator 0x5640b97034a8 <col:13, col:35> 'uint16_t':'unsigned short' lvalue '='
|         |-ArraySubscriptExpr 0x5640b9703380 <col:13, col:20> 'uint16_t':'unsigned short' lvalue
|         | |-ImplicitCastExpr 0x5640b9703368 <col:13> 'uint16_t *' <ArrayToPointerDecay>
|         | | `-MemberExpr 0x5640b9703318 <col:13> 'uint16_t [3]' lvalue ->_data 0x5640b97010f8
|         | |   `-CXXThisExpr 0x5640b9703308 <col:13> 'EtherAddress *' implicit this
|         | `-IntegerLiteral 0x5640b9703348 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x5640b9703490 <col:24, col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|           `-BinaryOperator 0x5640b9703470 <col:24, col:35> 'uint16_t':'unsigned short' lvalue '='
|             |-ArraySubscriptExpr 0x5640b9703418 <col:24, col:31> 'uint16_t':'unsigned short' lvalue
|             | |-ImplicitCastExpr 0x5640b9703400 <col:24> 'uint16_t *' <ArrayToPointerDecay>
|             | | `-MemberExpr 0x5640b97033b0 <col:24> 'uint16_t [3]' lvalue ->_data 0x5640b97010f8
|             | |   `-CXXThisExpr 0x5640b97033a0 <col:24> 'EtherAddress *' implicit this
|             | `-IntegerLiteral 0x5640b97033e0 <col:30> 'int' 2
|             `-ImplicitCastExpr 0x5640b9703458 <col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-DeclRefExpr 0x5640b9703438 <col:35> 'uint16_t':'unsigned short' lvalue ParmVar 0x5640b9701158 'm' 'uint16_t':'unsigned short'
|-CXXConstructorDecl 0x5640b9701878 <line:9:7> col:7 implicit constexpr EtherAddress 'void (const EtherAddress &)' inline default trivial noexcept-unevaluated 0x5640b9701878
| `-ParmVarDecl 0x5640b9701988 <col:7> col:7 'const EtherAddress &'
|-CXXConstructorDecl 0x5640b9701a28 <col:7> col:7 implicit used constexpr EtherAddress 'void (EtherAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9701b38 <col:7> col:7 used 'EtherAddress &&'
| |-CXXCtorInitializer Field 0x5640b97010f8 '_data' 'uint16_t [3]'
| | `-ArrayInitLoopExpr 0x5640b9701ec0 <col:7> 'uint16_t [3]'
| |   |-OpaqueValueExpr 0x5640b9701e48 <col:7> 'uint16_t [3]' xvalue
| |   | `-MemberExpr 0x5640b9701e00 <col:7> 'uint16_t [3]' xvalue ._data 0x5640b97010f8
| |   |   `-CXXStaticCastExpr 0x5640b9701dd0 <col:7> 'EtherAddress' xvalue static_cast<class EtherAddress &&> <NoOp>
| |   |     `-DeclRefExpr 0x5640b9701da0 <col:7> 'EtherAddress' lvalue ParmVar 0x5640b9701b38 '' 'EtherAddress &&'
| |   `-ImplicitCastExpr 0x5640b9701ea8 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |     `-ArraySubscriptExpr 0x5640b9701e88 <col:7> 'uint16_t':'unsigned short' xvalue
| |       |-ImplicitCastExpr 0x5640b9701e70 <col:7> 'uint16_t *' <ArrayToPointerDecay>
| |       | `-OpaqueValueExpr 0x5640b9701e48 <col:7> 'uint16_t [3]' xvalue
| |       |   `-MemberExpr 0x5640b9701e00 <col:7> 'uint16_t [3]' xvalue ._data 0x5640b97010f8
| |       |     `-CXXStaticCastExpr 0x5640b9701dd0 <col:7> 'EtherAddress' xvalue static_cast<class EtherAddress &&> <NoOp>
| |       |       `-DeclRefExpr 0x5640b9701da0 <col:7> 'EtherAddress' lvalue ParmVar 0x5640b9701b38 '' 'EtherAddress &&'
| |       `-ArrayInitIndexExpr 0x5640b9701e60 <<invalid sloc>> 'unsigned long'
| `-CompoundStmt 0x5640b9701f10 <col:7>
`-CXXDestructorDecl 0x5640b9701bf0 <col:7> col:7 implicit referenced ~EtherAddress 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.EtherAddress = type { [3 x i16] }
  NonVirtualBaseLLVMType:%class.EtherAddress = type { [3 x i16] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b964d360 prev 0x5640b95b2398 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5640b964d458 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x5640b964d4e8 <col:19, col:25> col:19 public
|-TypedefDecl 0x5640b964d520 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x5640b943fc70 'uninitialized_type'
|   `-CXXRecord 0x5640b943fbd8 'uninitialized_type'
|-CXXConstructorDecl 0x5640b964d5e0 <line:20:5, line:22:5> line:20:12 IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x5640b9650d30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5640b9650dd8 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5640b9650d98 <col:10> 'int' 0
| `-CompoundStmt 0x5640b9650e20 <col:13, line:22:5>
|-CXXConstructorDecl 0x5640b964d730 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x5640b964d6a0 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x5640b9650d30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5640b9650e70 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x5640b9650e30 <col:10> 'unsigned int' lvalue ParmVar 0x5640b964d6a0 'x' 'unsigned int'
| `-CompoundStmt 0x5640b9650eb8 <col:13, line:27:5>
|-CXXConstructorDecl 0x5640b964d888 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x5640b964d7f8 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x5640b9650d30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5640b9650f20 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5640b9650f08 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x5640b9650ec8 <col:10> 'int' lvalue ParmVar 0x5640b964d7f8 'x' 'int'
| `-CompoundStmt 0x5640b9650f68 <col:13, line:31:5>
|-CXXConstructorDecl 0x5640b964d9e0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x5640b964d950 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x5640b9650d30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5640b9650fd0 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5640b9650fb8 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x5640b9650f78 <col:10> 'unsigned long' lvalue ParmVar 0x5640b964d950 'x' 'unsigned long'
| `-CompoundStmt 0x5640b9651018 <col:13, line:35:5>
|-CXXConstructorDecl 0x5640b964db38 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x5640b964daa8 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x5640b9650d30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5640b9651080 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5640b9651068 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x5640b9651028 <col:10> 'long' lvalue ParmVar 0x5640b964daa8 'x' 'long'
| `-CompoundStmt 0x5640b96510c8 <col:13, line:39:5>
|-CXXConstructorDecl 0x5640b964dcf8 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x5640b964dc08 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x5640b9650d30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5640b9651148 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5640b96510f8 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x5640b9581150
| |     `-DeclRefExpr 0x5640b96510d8 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x5640b964dc08 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x5640b9651190 <col:20, line:44:5>
|-CXXConstructorDecl 0x5640b964de88 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x5640b964ddc0 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x5640b96512f8 <col:51, line:56:5>
|   `-BinaryOperator 0x5640b96512d8 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x5640b96511b0 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x5640b9650d30
|     | `-CXXThisExpr 0x5640b96511a0 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x5640b96512c0 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5640b96512a8 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x5640b9651288 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x5640b9651258 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x5640b9651240 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x5640b96511e0 <col:47> 'const unsigned char *' lvalue ParmVar 0x5640b964ddc0 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x5640b964dfd8 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x5640b964df48 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x5640b964e188 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x5640b964e0c8 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x5640b9651368 <col:56, line:68:5>
|   `-CStyleCastExpr 0x5640b9651340 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x5640b9651310 <col:9> 'const uninitialized_type' lvalue ParmVar 0x5640b964e0c8 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x5640b964e318 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x5640b964e250 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x5640b964e408 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x5640b9652328 <col:46, line:83:5>
|   `-ReturnStmt 0x5640b9652318 <line:82:2, col:29>
|     `-ExprWithCleanups 0x5640b9652300 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x5640b96522d0 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5640b9652188 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x5640b9652070 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x5640b9651f58 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x5640b9651390 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x5640b964e4f8 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x5640b96523d8 <col:31, line:88:5>
|   `-ReturnStmt 0x5640b96523c8 <line:87:2, col:10>
|     `-UnaryOperator 0x5640b96523b0 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x5640b9652398 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x5640b9652380 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x5640b9652350 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5640b9650d30
|             `-CXXThisExpr 0x5640b9652340 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5640b964e5b8 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x5640b9652458 <col:34, line:93:5>
|   `-ReturnStmt 0x5640b9652448 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x5640b9652430 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5640b9652400 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5640b9650d30
|         `-CXXThisExpr 0x5640b96523f0 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x5640b964e688 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x5640b96524d8 <col:38, line:101:5>
|   `-ReturnStmt 0x5640b96524c8 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x5640b96524b0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5640b9652480 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5640b9650d30
|         `-CXXThisExpr 0x5640b9652470 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5640b964e758 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x5640b96527a8 <col:38, line:108:5>
|   `-ReturnStmt 0x5640b9652798 <line:107:2, col:58>
|     `-BinaryOperator 0x5640b9652778 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x5640b9652690 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x5640b9652670 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5640b9652658 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5640b9652500 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5640b9650d30
|       |   |   `-CXXThisExpr 0x5640b96524f0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5640b9652630 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5640b9652618 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5640b9652598 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x5640b958f688 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5640b9652578 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x5640b9652750 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5640b9652738 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5640b9652718 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x5640b958f688 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x5640b96526f8 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x5640b964e818 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x5640b9652a18 <col:39, line:112:5>
|   `-ReturnStmt 0x5640b9652a08 <line:111:2, col:56>
|     `-BinaryOperator 0x5640b96529e8 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x5640b9652900 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x5640b96528e0 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5640b96528c8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5640b96527d0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5640b9650d30
|       |   |   `-CXXThisExpr 0x5640b96527c0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5640b96528a0 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5640b9652888 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5640b9652868 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x5640b958f688 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5640b9652848 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x5640b96529c0 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5640b96529a8 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5640b9652988 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x5640b958f688 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x5640b9652968 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x5640b964e948 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x5640b964ea50 <line:115:5, col:38> col:12 used operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x5640b964eb60 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x5640b964fc28 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5640b964fce8 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5640b964fdb0 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x5640b964ffa8 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x5640b964fe60 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x5640b964fed8 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x5640b9650128 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5640b9650068 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x5640b9650270 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5640b96501e0 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x5640b9650418 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5640b9650328 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5640b9650560 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5640b96504d0 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5640b96506a8 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5640b9650618 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5640b9650770 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x5640b9650830 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x5640b96509a8 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x5640b96508e0 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x5640b9650a70 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x5640b9650b58 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x5640b9650c00 <col:51> "" ""
|-TypedefDecl 0x5640b9650ca0 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x5640b95b2430 'IPAddress'
|   `-CXXRecord 0x5640b964d360 'IPAddress'
|-AccessSpecDecl 0x5640b9650cf8 <line:150:3, col:10> col:3 private
|-FieldDecl 0x5640b9650d30 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5640b96513d8 <line:15:7> col:7 implicit constexpr IPAddress 'void (const IPAddress &)' inline default trivial noexcept-unevaluated 0x5640b96513d8
| `-ParmVarDecl 0x5640b96514e8 <col:7> col:7 'const IPAddress &'
|-CXXConstructorDecl 0x5640b9651588 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5640b9651698 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x5640b9650d30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5640b9652278 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5640b9652230 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x5640b9650d30
| |     `-CXXStaticCastExpr 0x5640b9652200 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x5640b96521d0 <col:7> 'IPAddress' lvalue ParmVar 0x5640b9651698 '' 'IPAddress &&'
| `-CompoundStmt 0x5640b96522c0 <col:7>
`-CXXDestructorDecl 0x5640b9651f88 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NameDB
         0 |   (NameDB vtable pointer)
         8 |   uint32_t _type
        16 |   class String _context
        16 |     struct String::rep_t _r
        16 |       const char * data
        24 |       int length
        32 |       struct String::memo_t * memo
        40 |   size_t _value_size
        48 |   class NameDB * _context_parent
        56 |   class NameDB * _context_sibling
        64 |   class NameDB * _context_child
        72 |   class NameInfo * _installed
           | [sizeof=80, dsize=80, align=8,
           |  nvsize=80, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9946a28 prev 0x5640b9937cb8 <../dummy_inc/click/nameinfo.hh:245:1, line:348:1> line:245:7 referenced class NameDB definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5640b9946b20 <col:1, col:7> col:7 implicit referenced class NameDB
|-AccessSpecDecl 0x5640b9946bb0 <col:16, col:22> col:16 public
|-CXXConstructorDecl 0x5640b9946e18 <line:253:5, col:74> col:12 used NameDB 'void (uint32_t, const String &, size_t)' inline
| |-ParmVarDecl 0x5640b9946be8 <col:19, col:28> col:28 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5640b9946c60 <col:34, col:48> col:48 context 'const String &'
| `-ParmVarDecl 0x5640b9946cd8 <col:57, col:64> col:64 value_size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x5640b9946f20 <line:259:5, line:261:5> line:259:13 used ~NameDB 'void () noexcept' virtual
| `-CompoundStmt 0x5640b99485a8 <col:23, line:261:5>
|   `-CallExpr 0x5640b9948580 <line:260:2, col:28> 'void'
|     |-ImplicitCastExpr 0x5640b9948568 <col:2, col:12> 'void (*)(NameDB *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5640b99484f8 <col:2, col:12> 'void (NameDB *)' lvalue CXXMethod 0x5640b9939a88 'uninstalldb' 'void (NameDB *)'
|     `-CXXThisExpr 0x5640b9948528 <col:24> 'NameDB *' this
|-CXXMethodDecl 0x5640b9947048 <line:264:5, line:266:5> line:264:14 type 'uint32_t () const'
| `-CompoundStmt 0x5640b9948628 <col:27, line:266:5>
|   `-ReturnStmt 0x5640b9948618 <line:265:2, col:9>
|     `-ImplicitCastExpr 0x5640b9948600 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5640b99485d0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_type 0x5640b9947e30
|         `-CXXThisExpr 0x5640b99485c0 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x5640b9947108 <line:269:5, line:271:5> line:269:19 context 'const String &() const'
| `-CompoundStmt 0x5640b9948690 <col:35, line:271:5>
|   `-ReturnStmt 0x5640b9948680 <line:270:2, col:9>
|     `-MemberExpr 0x5640b9948650 <col:9> 'const String' lvalue ->_context 0x5640b9947e90
|       `-CXXThisExpr 0x5640b9948640 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x5640b99471f8 <line:279:5, line:281:5> line:279:13 context_parent 'NameDB *() const'
| `-CompoundStmt 0x5640b9948710 <col:36, line:281:5>
|   `-ReturnStmt 0x5640b9948700 <line:280:2, col:9>
|     `-ImplicitCastExpr 0x5640b99486e8 <col:9> 'NameDB *' <LValueToRValue>
|       `-MemberExpr 0x5640b99486b8 <col:9> 'NameDB *const' lvalue ->_context_parent 0x5640b9947f50
|         `-CXXThisExpr 0x5640b99486a8 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x5640b99472e8 <line:284:5, line:286:5> line:284:12 value_size 'size_t () const'
| `-CompoundStmt 0x5640b9948790 <col:31, line:286:5>
|   `-ReturnStmt 0x5640b9948780 <line:285:2, col:9>
|     `-ImplicitCastExpr 0x5640b9948768 <col:9> 'size_t':'unsigned long' <LValueToRValue>
|       `-MemberExpr 0x5640b9948738 <col:9> 'const size_t':'const unsigned long' lvalue ->_value_size 0x5640b9947ef0
|         `-CXXThisExpr 0x5640b9948728 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x5640b99475b8 <line:295:5, col:78> col:18 query 'bool (const String &, void *, size_t)' virtual pure
| |-ParmVarDecl 0x5640b9947398 <col:24, col:38> col:38 name 'const String &'
| |-ParmVarDecl 0x5640b9947418 <col:44, col:50> col:50 value 'void *'
| `-ParmVarDecl 0x5640b9947490 <col:57, col:64> col:64 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x5640b9947818 <line:305:5, col:65> col:20 revquery 'String (const void *, size_t)' virtual
| |-ParmVarDecl 0x5640b9947688 <col:29, col:41> col:41 value 'const void *'
| `-ParmVarDecl 0x5640b9947700 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x5640b9947af8 <line:315:5, col:81> col:18 used define 'bool (const String &, const void *, size_t)' virtual
| |-ParmVarDecl 0x5640b99478d8 <col:25, col:39> col:39 name 'const String &'
| |-ParmVarDecl 0x5640b9947958 <col:45, col:57> col:57 value 'const void *'
| `-ParmVarDecl 0x5640b99479d0 <col:64, col:71> col:71 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x5640b9947d48 <line:324:5, col:61> col:17 define_int 'bool (const String &, int32_t)' inline
| |-ParmVarDecl 0x5640b9947bc0 <col:28, col:42> col:42 name 'const String &'
| `-ParmVarDecl 0x5640b9947c38 <col:48, col:56> col:56 value 'int32_t':'int'
|-AccessSpecDecl 0x5640b9947df8 <line:332:3, col:10> col:3 private
|-FieldDecl 0x5640b9947e30 <line:334:5, col:14> col:14 referenced _type 'uint32_t':'unsigned int'
|-FieldDecl 0x5640b9947e90 <line:335:5, col:12> col:12 referenced _context 'String'
|-FieldDecl 0x5640b9947ef0 <line:336:5, col:12> col:12 referenced _value_size 'size_t':'unsigned long'
|-FieldDecl 0x5640b9947f50 <line:337:5, col:13> col:13 referenced _context_parent 'NameDB *'
|-FieldDecl 0x5640b9947fb0 <line:338:5, col:13> col:13 _context_sibling 'NameDB *'
|-FieldDecl 0x5640b9948010 <line:339:5, col:13> col:13 _context_child 'NameDB *'
|-FieldDecl 0x5640b9948070 <line:340:5, col:15> col:15 _installed 'NameInfo *'
|-FriendDecl 0x5640b9948110 <line:346:5, col:18> col:12 'class NameInfo':'NameInfo'
|-CXXConstructorDecl 0x5640b9948178 <line:245:7> col:7 implicit NameDB 'void (const NameDB &)' inline default noexcept-unevaluated 0x5640b9948178
| `-ParmVarDecl 0x5640b9948288 <col:7> col:7 'const NameDB &'
`-CXXMethodDecl 0x5640b9948328 <col:7> col:7 implicit operator= 'NameDB &(const NameDB &)' inline default noexcept-unevaluated 0x5640b9948328
  `-ParmVarDecl 0x5640b9948438 <col:7> col:7 'const NameDB &'

Layout: <CGRecordLayout
  LLVMType:%class.NameDB = type { i32 (...)**, i32, %class.String, i64, %class.NameDB*, %class.NameDB*, %class.NameDB*, %class.NameInfo* }
  NonVirtualBaseLLVMType:%class.NameDB = type { i32 (...)**, i32, %class.String, i64, %class.NameDB*, %class.NameDB*, %class.NameDB*, %class.NameInfo* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union ifaddrs::(anonymous at /usr/include/ifaddrs.h:38:3)
         0 |   struct sockaddr * ifu_broadaddr
         0 |   struct sockaddr * ifu_dstaddr
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct ifaddrs
         0 |   struct ifaddrs * ifa_next
         8 |   char * ifa_name
        16 |   unsigned int ifa_flags
        24 |   struct sockaddr * ifa_addr
        32 |   struct sockaddr * ifa_netmask
        40 |   union ifaddrs::(anonymous at /usr/include/ifaddrs.h:38:3) ifa_ifu
        40 |     struct sockaddr * ifu_broadaddr
        40 |     struct sockaddr * ifu_dstaddr
        48 |   void * ifa_data
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b956f248 </usr/include/bits/socket.h:178:1, line:182:3> line:178:8 struct sockaddr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5640b956f368 <col:1, col:8> col:8 implicit struct sockaddr
|-FieldDecl 0x5640b956f430 <line:180:5, col:17> col:17 referenced sa_family 'sa_family_t':'unsigned short'
`-FieldDecl 0x5640b956f4e0 <line:181:5, col:20> col:10 sa_data 'char [14]'

Layout: <CGRecordLayout
  LLVMType:%struct.sockaddr = type { i16, [14 x i8] }
  NonVirtualBaseLLVMType:%struct.sockaddr = type { i16, [14 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9a610c0 </usr/include/ifaddrs.h:38:3, line:46:3> line:38:3 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x5640b9a61200 <line:44:5, col:22> col:22 ifu_broadaddr 'struct sockaddr *'
`-FieldDecl 0x5640b9a61278 <line:45:5, col:22> col:22 ifu_dstaddr 'struct sockaddr *'

Layout: <CGRecordLayout
  LLVMType:%union.anon.24 = type { %struct.sockaddr* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9a60c50 </usr/include/ifaddrs.h:29:1, line:57:1> line:29:8 struct ifaddrs definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5640b9a60d68 <col:1, col:8> col:8 implicit struct ifaddrs
|-FieldDecl 0x5640b9a60eb0 <line:31:3, col:19> col:19 referenced ifa_next 'struct ifaddrs *'
|-FieldDecl 0x5640b9a60f18 <line:33:3, col:9> col:9 referenced ifa_name 'char *'
|-FieldDecl 0x5640b9a60f80 <line:34:3, col:16> col:16 ifa_flags 'unsigned int'
|-FieldDecl 0x5640b9a60ff8 <line:36:3, col:20> col:20 referenced ifa_addr 'struct sockaddr *'
|-FieldDecl 0x5640b9a61070 <line:37:3, col:20> col:20 referenced ifa_netmask 'struct sockaddr *'
|-CXXRecordDecl 0x5640b9a610c0 <line:38:3, line:46:3> line:38:3 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x5640b9a61200 <line:44:5, col:22> col:22 ifu_broadaddr 'struct sockaddr *'
| `-FieldDecl 0x5640b9a61278 <line:45:5, col:22> col:22 ifu_dstaddr 'struct sockaddr *'
|-FieldDecl 0x5640b9a61338 <line:38:3, line:46:5> col:5 ifa_ifu 'union (anonymous union at /usr/include/ifaddrs.h:38:3)':'ifaddrs::(anonymous union at /usr/include/ifaddrs.h:38:3)'
`-FieldDecl 0x5640b9a613b8 <line:56:3, col:9> col:9 ifa_data 'void *'

Layout: <CGRecordLayout
  LLVMType:%struct.ifaddrs = type { %struct.ifaddrs*, i8*, i32, %struct.sockaddr*, %struct.sockaddr*, %union.anon.24, i8* }
  NonVirtualBaseLLVMType:%struct.ifaddrs = type { %struct.ifaddrs*, i8*, i32, %struct.sockaddr*, %struct.sockaddr*, %union.anon.24, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct sockaddr_in
         0 |   sa_family_t sin_family
         2 |   in_port_t sin_port
         4 |   struct in_addr sin_addr
         4 |     in_addr_t s_addr
         8 |   unsigned char [8] sin_zero
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b958baa0 </usr/include/netinet/in.h:238:1, line:249:3> line:238:8 struct sockaddr_in definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5640b958bbb8 <col:1, col:8> col:8 implicit struct sockaddr_in
|-FieldDecl 0x5640b958bc58 <line:240:5, col:17> col:17 sin_family 'sa_family_t':'unsigned short'
|-FieldDecl 0x5640b958bce0 <line:241:5, col:15> col:15 sin_port 'in_port_t':'unsigned short'
|-FieldDecl 0x5640b958bd50 <line:242:5, col:20> col:20 referenced sin_addr 'struct in_addr':'in_addr'
`-FieldDecl 0x5640b958c050 <line:245:5, line:248:32> line:245:19 sin_zero 'unsigned char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
  NonVirtualBaseLLVMType:%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct sockaddr_ll
         0 |   unsigned short sll_family
         2 |   unsigned short sll_protocol
         4 |   int sll_ifindex
         8 |   unsigned short sll_hatype
        10 |   unsigned char sll_pkttype
        11 |   unsigned char sll_halen
        12 |   unsigned char [8] sll_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5640b9a60338 </usr/include/netpacket/packet.h:22:1, line:31:3> line:22:8 struct sockaddr_ll definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5640b9a60458 <col:1, col:8> col:8 implicit struct sockaddr_ll
|-FieldDecl 0x5640b9a60500 <line:24:5, col:24> col:24 sll_family 'unsigned short'
|-FieldDecl 0x5640b9a60568 <line:25:5, col:24> col:24 sll_protocol 'unsigned short'
|-FieldDecl 0x5640b9a605d0 <line:26:5, col:9> col:9 sll_ifindex 'int'
|-FieldDecl 0x5640b9a60638 <line:27:5, col:24> col:24 referenced sll_hatype 'unsigned short'
|-FieldDecl 0x5640b9a606a0 <line:28:5, col:19> col:19 sll_pkttype 'unsigned char'
|-FieldDecl 0x5640b9a60708 <line:29:5, col:19> col:19 referenced sll_halen 'unsigned char'
`-FieldDecl 0x5640b9a607c0 <line:30:5, col:29> col:19 referenced sll_addr 'unsigned char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.sockaddr_ll = type { i16, i16, i32, i16, i8, i8, [8 x i8] }
  NonVirtualBaseLLVMType:%struct.sockaddr_ll = type { i16, i16, i32, i16, i8, i8, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
