
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd6d36c8 prev 0x55f8fd6cae68 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd6d37c0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55f8fd6d3850 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55f8fd6d38c8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55f8fd6d3988 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55f8fd6d3a50 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55f8fd6d3bc8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55f8fd6d3b00 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55f8fd6d3c70 <col:24>
| `-OptimizeNoneAttr 0x55f8fd6d3cc8 <col:34>
|-CXXMethodDecl 0x55f8fd6d3d10 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55f8fd6d3fc8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55f8fd6d3dc0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55f8fd6d3e38 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55f8fd6d3eb8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55f8fd6d4080 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55f8fd6d40b8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55f8fd6d4120 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55f8fd6d41a8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55f8fd6d44c8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55f8fd6d4260 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55f8fd6d42d8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55f8fd6d4350 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55f8fd6d43d0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55f8fd6d45e0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55f8fd6dbf58 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55f8fd6dbf58
| `-ParmVarDecl 0x55f8fd6dc068 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55f8fd6dc108 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55f8fd6dc108
| `-ParmVarDecl 0x55f8fd6dc218 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55f8fd7b9360 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd6c66e0 prev 0x55f8fd6c6460 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f8fd6c67d8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55f8fd6c6868 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55f8fd6c68c8 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x55f8fd6c69b8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55f8fd6c6ab8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55f8fd6c6c88 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55f8fd6c6b38 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55f8fd6c6bb0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55f8fd6c6e18 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55f8fd6c6d50 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55f8fd6c6ec0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55f8fd6c6ff8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55f8fd6c6f30 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55f8fd6c7198 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55f8fd6c70d8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55f8fd6c7338 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55f8fd6c7278 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55f8fd6c73e0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55f8fd6c74e0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55f8fd6c75c0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6c74c0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55f8fd6c74a0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55f8fd6c7570 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55f8fd6c75d8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd6c7550 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55f8fd6c7530 <col:44> 'int' 2
|-CXXMethodDecl 0x55f8fd6c7720 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55f8fd6c7608 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55f8fd6c7688 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55f8fd6c7878 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55f8fd6c77e8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55f8fd6c7ab8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55f8fd6c7938 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55f8fd6c79b0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55f8fd6c7b68 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6c7bc0 <col:30>
|-CXXMethodDecl 0x55f8fd6c7cc8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55f8fd6c7c00 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55f8fd6c7d70 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6c7dc8 <col:30>
|-CXXMethodDecl 0x55f8fd6c7e18 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55f8fd6c7ee0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55f8fd6c7ff8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55f8fd6c8080 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55f8fd6c8108 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55f8fd6c8190 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55f8fd6c8218 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55f8fd6c82a8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55f8fd6c8368 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55f8fd6c83f0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55f8fd6c8478 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55f8fd6c8500 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55f8fd6c8588 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55f8fd6c8610 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55f8fd6c86a0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55f8fd6c8760 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55f8fd6c87f0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55f8fd6c8940 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55f8fd6c88a8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55f8fd6c8ad0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55f8fd6c8a00 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55f8fd6c8d80 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55f8fd6c8b88 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55f8fd6c8c08 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55f8fd6c8c88 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55f8fd6c8e38 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55f8fd6c8f40 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f8fd6c91d0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6c8f20 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55f8fd6c8f00 <col:33> 'int' 0
| |-EnumConstantDecl 0x55f8fd6c8fd0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f8fd6c91e8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6c8fb0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55f8fd6c8f90 <col:32> 'int' 20
| |-EnumConstantDecl 0x55f8fd6c9060 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f8fd6c9200 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6c9040 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55f8fd6c9020 <col:38> 'int' 90
| |-EnumConstantDecl 0x55f8fd6c90f0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f8fd6c9218 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6c90d0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55f8fd6c90b0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55f8fd6c9180 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55f8fd6c9230 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd6c9160 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55f8fd6c9140 <col:32> 'int' 2000
|-CXXMethodDecl 0x55f8fd6c9270 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55f8fd6c96b0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f8fd6c9520 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55f8fd6c9598 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd6c9780 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55f8fd6c9900 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55f8fd6c9830 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd6c9b08 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f8fd6c99b8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55f8fd6c9a30 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd6c9c08 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55f8fd6c9ca8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55f8fd6c9d70 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f8fd6c9e00 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55f8fd6ca030 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6c9de0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55f8fd6c9dc0 <col:36> 'int' EnumConstant 0x55f8fd6c9d70 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f8fd6c9e50 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f8fd6c9ea0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f8fd6c9ef0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f8fd6c9f40 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f8fd6c9f90 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55f8fd6c9fe0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55f8fd6ca118 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55f8fd6ca058 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55f8fd6ca1e0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55f8fd6ca2a0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55f8fd6ca360 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55f8fd6ca420 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55f8fd6ca538 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55f8fd6ca600 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55f8fd6ca780 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55f8fd6ca6b0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55f8fd6ca8a8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55f8fd6caaa8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55f8fd6ca958 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55f8fd6ca9d8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55f8fd6d83f8 <col:54, line:127:5>
|   |-ParenExpr 0x55f8fd6d82a8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55f8fd6d8278 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6d7f68 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55f8fd6d7f40 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55f8fd6d7f28 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55f8fd6d7f10 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55f8fd6d7ee0 <col:31> 'Router *' lvalue ->_router 0x55f8fd6d5dc0
|   |   |         `-CXXThisExpr 0x55f8fd6d7ed0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55f8fd6d7fc8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6d7fa8 <col:48> 'int' 0
|   |   `-CallExpr 0x55f8fd6d81d8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6d81c0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6d81a0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6d8218 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6d8038 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55f8fd6d8230 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6d8058 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6d8248 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6d8090 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55f8fd6d8260 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6d8188 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6d8170 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6d8128 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55f8fd6d8340 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55f8fd6d82d8 <col:9> 'Router *' lvalue ->_router 0x55f8fd6d5dc0
|   | | `-CXXThisExpr 0x55f8fd6d82c8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55f8fd6d8328 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8fd6d8308 <col:19> 'Router *' lvalue ParmVar 0x55f8fd6ca958 'r' 'Router *'
|   `-BinaryOperator 0x55f8fd6d83d8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55f8fd6d8370 <col:9> 'int' lvalue ->_eindex 0x55f8fd6d5e28
|     | `-CXXThisExpr 0x55f8fd6d8360 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55f8fd6d83c0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd6d83a0 <col:19> 'int' lvalue ParmVar 0x55f8fd6ca9d8 'eindex' 'int'
|-CXXMethodDecl 0x55f8fd6cac30 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55f8fd6cab68 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55f8fd6cad00 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55f8fd6cadc8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55f8fd6cae68 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55f8fd6cb0b8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55f8fd6caf30 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55f8fd6cafb0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55f8fd6cb168 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6cb1c0 <col:30>
|-CXXMethodDecl 0x55f8fd6cb2c8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55f8fd6cb200 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55f8fd6cb370 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6cb3c8 <col:30>
|-CXXMethodDecl 0x55f8fd6cb498 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55f8fd6cb408 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55f8fd6cb540 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6cb598 <col:30>
|-CXXMethodDecl 0x55f8fd6cb728 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55f8fd6cb5d0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55f8fd6cb650 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55f8fd6cb8b8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55f8fd6cb7f0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55f8fd6cba08 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55f8fd6cb978 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55f8fd6cbb58 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55f8fd6cbac8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55f8fd6cbca8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55f8fd6cbc18 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55f8fd6cbf68 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55f8fd6cbd60 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55f8fd6cbde0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55f8fd6cbe88 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55f8fd6cc040 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55f8fd6cc100 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55f8fd6cc3d0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f8fd6cc280 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55f8fd6cc2f8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd6cc4f8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55f8fd6cc6d0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55f8fd6cc5b0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55f8fd6cc630 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55f8fd6cc8b8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55f8fd6cc798 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55f8fd6cc818 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55f8fd6ccc28 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55f8fd6cc978 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f8fd6cc9f0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f8fd6cca70 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f8fd6d79e0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f8fd6d79c0 <col:106> 'int' 0
| `-ParmVarDecl 0x55f8fd6ccae8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f8fd6d7a18 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f8fd6d79f8 <col:126> 'int' 0
|-CXXMethodDecl 0x55f8fd6ccfc8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f8fd6cccf8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f8fd6ccd90 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f8fd6cce10 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55f8fd6cce88 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f8fd6d7a50 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f8fd6d7a30 <col:114> 'int' 0
|-CXXMethodDecl 0x55f8fd6cd358 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f8fd6cd0a0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55f8fd6cd118 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f8fd6cd198 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55f8fd6d7a68 <col:96> 'int' 0
| `-ParmVarDecl 0x55f8fd6cd210 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f8fd6d7aa8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f8fd6d7a88 <col:116> 'int' 0
|-CXXMethodDecl 0x55f8fd6cd6d8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55f8fd6cd428 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55f8fd6cd4a0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f8fd6cd520 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f8fd6d7ae0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f8fd6d7ac0 <col:109> 'int' 0
| `-ParmVarDecl 0x55f8fd6cd598 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f8fd6d7b18 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f8fd6d7af8 <col:129> 'int' 0
|-CXXMethodDecl 0x55f8fd6cda58 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f8fd6cd7a8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55f8fd6cd820 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f8fd6cd8a0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55f8fd6cd918 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f8fd6d7b50 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f8fd6d7b30 <col:117> 'int' 0
|-CXXMethodDecl 0x55f8fd6cdde8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f8fd6cdb30 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6cdba8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f8fd6cdc28 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55f8fd6d7b68 <col:99> 'int' 0
| `-ParmVarDecl 0x55f8fd6cdca0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f8fd6d7ba8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f8fd6d7b88 <col:119> 'int' 0
|-CXXMethodDecl 0x55f8fd6ce208 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55f8fd6cdeb8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55f8fd6cdf38 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55f8fd6cdfb0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f8fd6ce030 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f8fd6d7be0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f8fd6d7bc0 <col:108> 'int' 0
| `-ParmVarDecl 0x55f8fd6ce0b0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55f8fd6d7c18 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55f8fd6d7bf8 <col:141> 'int' 0
|-CXXMethodDecl 0x55f8fd6ce628 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55f8fd6ce2e0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55f8fd6ce360 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55f8fd6ce3d8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f8fd6ce458 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55f8fd6ce4d8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55f8fd6d7c30 <col:121> 'int' 0
|-CXXMethodDecl 0x55f8fd6cea58 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55f8fd6ce708 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55f8fd6ce788 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55f8fd6ce800 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f8fd6ce880 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55f8fd6d7c50 <col:98> 'int' 0
| `-ParmVarDecl 0x55f8fd6ce900 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55f8fd6d7c70 <col:123> 'int' 0
|-CXXMethodDecl 0x55f8fd6ced20 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55f8fd6ceb30 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f8fd6cebb0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55f8fd6cec30 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55f8fd6d7c90 <col:80> 'int' 0
|-EnumDecl 0x55f8fd6cedd8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55f8fd6ceee0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f8fd6cf170 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6ceec0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55f8fd6ceea0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55f8fd6cef70 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f8fd6cf188 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6cef50 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55f8fd6cef30 <col:40> 'int' 2
| |-EnumConstantDecl 0x55f8fd6cf000 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f8fd6cf1a0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6cefe0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55f8fd6cefc0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55f8fd6cf090 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f8fd6cf1b8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6cf070 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55f8fd6cf050 <col:36> 'int' 7
| `-EnumConstantDecl 0x55f8fd6cf120 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55f8fd6cf1d0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd6cf100 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55f8fd6cf0e0 <col:34> 'int' 6
|-CXXMethodDecl 0x55f8fd6cf488 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55f8fd6cf1f8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55f8fd6cf298 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55f8fd6cf318 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55f8fd6cf390 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55f8fd6d7d48 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f8fd6d7d30 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f8fd6d7d18 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f8fd6d7cf8 <col:98, col:105> 'String' (CXXTemporary 0x55f8fd6d7cf8)
|           `-CXXTemporaryObjectExpr 0x55f8fd6d7cc0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55f8fd6cf728 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55f8fd6cf558 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55f8fd6cf5d0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55f8fd6cf648 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55f8fd6d7df8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55f8fd6d7de0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55f8fd6d7dc8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55f8fd6d7da8 <col:94, col:101> 'String' (CXXTemporary 0x55f8fd6d7da8)
| |         `-CXXTemporaryObjectExpr 0x55f8fd6d7d70 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55f8fd6d85e0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55f8fd6d8558 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55f8fd6d8528 <col:9> '<bound member function type>' ->add_task_handlers 0x55f8fd6cf488
|     | `-CXXThisExpr 0x55f8fd6d8518 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55f8fd6d8598 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f8fd6d8498 <col:27> 'Task *' lvalue ParmVar 0x55f8fd6cf558 'task' 'Task *'
|     |-ImplicitCastExpr 0x55f8fd6d85b0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f8fd6d84b8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55f8fd6cf5d0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55f8fd6d85c8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55f8fd6d84d8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55f8fd6cf120 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55f8fd6d84f8 <col:62> 'const String' lvalue ParmVar 0x55f8fd6cf648 'prefix' 'const String &'
|-CXXMethodDecl 0x55f8fd6cf938 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55f8fd6cf7f0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55f8fd6cf868 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55f8fd6d7ea8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55f8fd6d7e90 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55f8fd6d7e78 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55f8fd6d7e58 <col:70, col:77> 'String' (CXXTemporary 0x55f8fd6d7e58)
| |         `-CXXTemporaryObjectExpr 0x55f8fd6d7e20 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55f8fd6d87b8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55f8fd6d8730 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55f8fd6d8700 <col:9> '<bound member function type>' ->add_task_handlers 0x55f8fd6cf488
|     | `-CXXThisExpr 0x55f8fd6d86f0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55f8fd6d8770 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f8fd6d8670 <col:27> 'Task *' lvalue ParmVar 0x55f8fd6cf7f0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55f8fd6d8788 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55f8fd6d8690 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55f8fd6d87a0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55f8fd6d86b0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55f8fd6cf120 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55f8fd6d86d0 <col:57> 'const String' lvalue ParmVar 0x55f8fd6cf868 'prefix' 'const String &'
|-CXXMethodDecl 0x55f8fd6cfc18 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55f8fd6cfa00 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6cfa80 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6cfaf8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55f8fd6cfec8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55f8fd6cfce8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6cfd68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6cfde8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55f8fd6d01b8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55f8fd6cff98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d0018 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6d0090 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55f8fd6d0468 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55f8fd6d0288 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d0308 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6d0388 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55f8fd6d0718 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55f8fd6d0538 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d05b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6d0638 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55f8fd6d09c8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55f8fd6d07e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d0868 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6d08e0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55f8fd6d0c78 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55f8fd6d0a98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d0b18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6d0b98 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55f8fd6d0f88 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55f8fd6d0da0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d0e20 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6d0ea0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55f8fd6d1268 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55f8fd6d1058 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d10d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6d1180 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55f8fd6d1548 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55f8fd6d1338 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d13b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6d1460 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55f8fd6d17b0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55f8fd6d1618 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d1698 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55f8fd6d1710 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55f8fd6d1a58 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55f8fd6d1880 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d1900 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55f8fd6d1978 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55f8fd6d1d08 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55f8fd6d1b28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d1ba8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6d1c28 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55f8fd6d1fb8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55f8fd6d1dd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d1e58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6d1ed0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55f8fd6d2268 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55f8fd6d2088 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d2108 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6d2180 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55f8fd6d2538 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55f8fd6d2338 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d23b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f8fd6d2458 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55f8fd6d2868 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55f8fd6d2608 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d2688 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55f8fd6d2700 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55f8fd6d2778 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f8fd6d7ec0 <col:93> 'bool' false
|-CXXMethodDecl 0x55f8fd6d2a50 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f8fd6d2938 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55f8fd6d29b8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55f8fd6d2c28 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f8fd6d2b10 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55f8fd6d2b90 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55f8fd6d2f08 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f8fd6d2ce8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55f8fd6d2d60 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55f8fd6d2de0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55f8fd6d2e58 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd6d31f8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f8fd6d2fd8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55f8fd6d3050 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55f8fd6d30d0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55f8fd6d3148 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd6d3430 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55f8fd6d32d0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55f8fd6d3350 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55f8fd6d3618 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55f8fd6d34f8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55f8fd6d3578 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55f8fd6d36c8 prev 0x55f8fd6cae68 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f8fd6d37c0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55f8fd6d3850 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55f8fd6d38c8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55f8fd6d3988 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55f8fd6d3a50 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55f8fd6d3bc8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55f8fd6d3b00 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55f8fd6d3c70 <col:24>
| | `-OptimizeNoneAttr 0x55f8fd6d3cc8 <col:34>
| |-CXXMethodDecl 0x55f8fd6d3d10 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55f8fd6d3fc8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55f8fd6d3dc0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55f8fd6d3e38 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55f8fd6d3eb8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55f8fd6d4080 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55f8fd6d40b8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55f8fd6d4120 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55f8fd6d41a8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55f8fd6d44c8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55f8fd6d4260 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55f8fd6d42d8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55f8fd6d4350 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55f8fd6d43d0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55f8fd6d45e0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55f8fd6dbf58 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55f8fd6dbf58
| | `-ParmVarDecl 0x55f8fd6dc068 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55f8fd6dc108 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55f8fd6dc108
| | `-ParmVarDecl 0x55f8fd6dc218 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55f8fd7b9360 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f8fd6d4658 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55f8fd6d46f8 <col:38> "" ""
|-CXXMethodDecl 0x55f8fd6d4788 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55f8fd6d4828 <col:44> "" ""
|-AccessSpecDecl 0x55f8fd6d4898 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55f8fd6d48c0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55f8fd6d49c0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55f8fd6d4a10 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd6d49a0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55f8fd6d4980 <col:27> 'int' 4
|-FieldDecl 0x55f8fd6d4ac8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55f8fd6d4c78 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55f8fd6d4d30 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55f8fd6d5dc0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55f8fd6d5e28 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55f8fd6d5f78 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55f8fd6d5eb8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55f8fd6d6128 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55f8fd6d6038 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55f8fd6d6308 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55f8fd6d61e8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55f8fd6d6268 <col:25> col:28 'int'
|-CXXMethodDecl 0x55f8fd6d65b0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55f8fd6d63d0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55f8fd6d6450 <col:28> col:31 'int'
| `-ParmVarDecl 0x55f8fd6d64c8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55f8fd6d6668 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55f8fd6d6730 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55f8fd6d6780 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55f8fd6d67d0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55f8fd6d69b0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55f8fd6d6860 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55f8fd6d68d8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd6d6c58 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55f8fd6d6a78 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55f8fd6d6af8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55f8fd6d6b70 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd6d6e78 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55f8fd6d6d28 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55f8fd6d6da8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55f8fd6d71b0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55f8fd6d6f38 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55f8fd6d6fb8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55f8fd6d7030 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55f8fd6d70b0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55f8fd6d7398 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f8fd6d7280 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55f8fd6d7300 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55f8fd6d74e8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55f8fd6d7458 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55f8fd6d7868 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55f8fd6d75a8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55f8fd6d7628 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55f8fd6d76a0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55f8fd6d7720 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55f8fd6d7980 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Storage
         0 |   Storage::index_type _capacity
         4 |   volatile Storage::index_type _head
         8 |   volatile Storage::index_type _tail
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd79c818 <../dummy_inc/click/standard/storage.hh:9:1, line:54:1> line:9:7 referenced class Storage definition
|-DefinitionData pass_in_registers trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd79c938 <col:1, col:7> col:7 implicit referenced class Storage
|-AccessSpecDecl 0x55f8fd79c9c8 <col:17, col:23> col:17 public
|-TypedefDecl 0x55f8fd79ca00 <line:11:5, col:22> col:22 referenced index_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55f8fd2ba090 'uint32_t' sugar
|   |-Typedef 0x55f8fd1cc408 'uint32_t'
|   `-TypedefType 0x55f8fd1a5440 '__uint32_t' sugar
|     |-Typedef 0x55f8fd1a5038 '__uint32_t'
|     `-BuiltinType 0x55f8fd163410 'unsigned int'
|-TypedefDecl 0x55f8fd79ca68 <line:12:5, col:21> col:21 referenced signed_index_type 'int32_t':'int'
| `-TypedefType 0x55f8fd2ba170 'int32_t' sugar
|   |-Typedef 0x55f8fd1cc268 'int32_t'
|   `-TypedefType 0x55f8fd1a53b0 '__int32_t' sugar
|     |-Typedef 0x55f8fd1a4fc8 '__int32_t'
|     `-BuiltinType 0x55f8fd163370 'int'
|-VarDecl 0x55f8fd79caf0 <line:13:5, col:59> col:29 referenced invalid_index 'const Storage::index_type':'const unsigned int' static cinit
| `-CStyleCastExpr 0x55f8fd79cbb8 <col:45, col:59> 'Storage::index_type':'unsigned int' <NoOp>
|   `-ImplicitCastExpr 0x55f8fd79cba0 <col:58, col:59> 'Storage::index_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|     `-UnaryOperator 0x55f8fd79cb78 <col:58, col:59> 'int' prefix '-'
|       `-IntegerLiteral 0x55f8fd79cb58 <col:59> 'int' 1
|-CXXConstructorDecl 0x55f8fd79cca0 <line:15:5, col:38> col:5 Storage 'void ()'
| |-CXXCtorInitializer Field 0x55f8fd79e4f0 '_head' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x55f8fd79e5f8 <col:23> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f8fd79e5b8 <col:23> 'int' 0
| |-CXXCtorInitializer Field 0x55f8fd79e550 '_tail' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x55f8fd79e678 <col:33> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f8fd79e638 <col:33> 'int' 0
| `-CompoundStmt 0x55f8fd79e6c8 <col:36, col:38>
|-CXXConversionDecl 0x55f8fd79cda8 <line:17:5, col:52> col:5 operator bool 'bool () const'
| `-CompoundStmt 0x55f8fd79e7b8 <col:27, col:52>
|   `-ReturnStmt 0x55f8fd79e7a8 <col:29, col:45>
|     `-BinaryOperator 0x55f8fd79e788 <col:36, col:45> 'bool' '!='
|       |-ImplicitCastExpr 0x55f8fd79e758 <col:36> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x55f8fd79e6e8 <col:36> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x55f8fd79e4f0
|       |   `-CXXThisExpr 0x55f8fd79e6d8 <col:36> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x55f8fd79e770 <col:45> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x55f8fd79e728 <col:45> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x55f8fd79e550
|           `-CXXThisExpr 0x55f8fd79e718 <col:45> 'const Storage *' implicit this
|-CXXMethodDecl 0x55f8fd79ce78 <line:18:5, col:49> col:10 empty 'bool () const'
| `-CompoundStmt 0x55f8fd79e8b0 <col:24, col:49>
|   `-ReturnStmt 0x55f8fd79e8a0 <col:26, col:42>
|     `-BinaryOperator 0x55f8fd79e880 <col:33, col:42> 'bool' '=='
|       |-ImplicitCastExpr 0x55f8fd79e850 <col:33> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x55f8fd79e7e0 <col:33> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x55f8fd79e4f0
|       |   `-CXXThisExpr 0x55f8fd79e7d0 <col:33> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x55f8fd79e868 <col:42> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x55f8fd79e820 <col:42> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x55f8fd79e550
|           `-CXXThisExpr 0x55f8fd79e810 <col:42> 'const Storage *' implicit this
|-CXXMethodDecl 0x55f8fd79cf40 <line:19:5, col:16> col:9 size 'int () const'
|-CXXMethodDecl 0x55f8fd79d180 <line:20:5, col:48> col:9 used size 'int (Storage::index_type, Storage::index_type) const'
| |-ParmVarDecl 0x55f8fd79cff0 <col:14, col:25> col:25 head 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x55f8fd79d068 <col:31, col:42> col:42 tail 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x55f8fd79d258 <line:21:5, col:46> col:9 capacity 'int () const'
| `-CompoundStmt 0x55f8fd79e948 <col:26, col:46>
|   `-ReturnStmt 0x55f8fd79e938 <col:28, col:35>
|     `-ImplicitCastExpr 0x55f8fd79e920 <col:35> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55f8fd79e908 <col:35> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x55f8fd79e8d8 <col:35> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x55f8fd79e468
|           `-CXXThisExpr 0x55f8fd79e8c8 <col:35> 'const Storage *' implicit this
|-CXXMethodDecl 0x55f8fd79d348 <line:23:5, col:45> col:16 used head 'Storage::index_type () const'
| `-CompoundStmt 0x55f8fd79e9c8 <col:29, col:45>
|   `-ReturnStmt 0x55f8fd79e9b8 <col:31, col:38>
|     `-ImplicitCastExpr 0x55f8fd79e9a0 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f8fd79e970 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x55f8fd79e4f0
|         `-CXXThisExpr 0x55f8fd79e960 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x55f8fd79d408 <line:24:5, col:45> col:16 used tail 'Storage::index_type () const'
| `-CompoundStmt 0x55f8fd79ea48 <col:29, col:45>
|   `-ReturnStmt 0x55f8fd79ea38 <col:31, col:38>
|     `-ImplicitCastExpr 0x55f8fd79ea20 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f8fd79e9f0 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x55f8fd79e550
|         `-CXXThisExpr 0x55f8fd79e9e0 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x55f8fd79d5a8 <line:26:5, line:28:5> line:26:16 used next_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x55f8fd79d4b8 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x55f8fd79ec38 <col:43, line:28:5>
|   `-ReturnStmt 0x55f8fd79ec28 <line:27:2, col:32>
|     `-ParenExpr 0x55f8fd79ec08 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x55f8fd79ebd8 <col:10, col:31> 'unsigned int'
|         |-BinaryOperator 0x55f8fd79eaf0 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x55f8fd79eac0 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f8fd79ea60 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x55f8fd79d4b8 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x55f8fd79ead8 <col:13> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         |   `-MemberExpr 0x55f8fd79ea90 <col:13> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x55f8fd79e468
|         |     `-CXXThisExpr 0x55f8fd79ea80 <col:13> 'const Storage *' implicit this
|         |-BinaryOperator 0x55f8fd79eb80 <col:25, col:27> 'unsigned int' '+'
|         | |-ImplicitCastExpr 0x55f8fd79eb50 <col:25> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f8fd79eb10 <col:25> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x55f8fd79d4b8 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x55f8fd79eb68 <col:27> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x55f8fd79eb30 <col:27> 'int' 1
|         `-ImplicitCastExpr 0x55f8fd79ebc0 <col:31> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x55f8fd79eba0 <col:31> 'int' 0
|-CXXMethodDecl 0x55f8fd79d6f0 <line:29:5, line:31:5> line:29:16 used prev_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x55f8fd79d660 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x55f8fd79ee28 <col:43, line:31:5>
|   `-ReturnStmt 0x55f8fd79ee18 <line:30:2, col:32>
|     `-ParenExpr 0x55f8fd79edf8 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x55f8fd79edc8 <col:10, col:23> 'unsigned int'
|         |-BinaryOperator 0x55f8fd79ecc0 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x55f8fd79ec90 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f8fd79ec50 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x55f8fd79d660 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x55f8fd79eca8 <col:13> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x55f8fd79ec70 <col:13> 'int' 0
|         |-BinaryOperator 0x55f8fd79ed50 <col:17, col:19> 'unsigned int' '-'
|         | |-ImplicitCastExpr 0x55f8fd79ed20 <col:17> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f8fd79ece0 <col:17> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x55f8fd79d660 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x55f8fd79ed38 <col:19> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x55f8fd79ed00 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x55f8fd79edb0 <col:23> 'Storage::index_type':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x55f8fd79ed80 <col:23> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x55f8fd79e468
|             `-CXXThisExpr 0x55f8fd79ed70 <col:23> 'const Storage *' implicit this
|-CXXMethodDecl 0x55f8fd79d868 <line:34:5, col:54> col:10 set_capacity 'void (Storage::index_type)'
| |-ParmVarDecl 0x55f8fd79d7a8 <col:23, col:34> col:34 used c 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x55f8fd79eed8 <col:37, col:54>
|   `-BinaryOperator 0x55f8fd79eeb8 <col:39, col:51> 'Storage::index_type':'unsigned int' lvalue '='
|     |-MemberExpr 0x55f8fd79ee50 <col:39> 'Storage::index_type':'unsigned int' lvalue ->_capacity 0x55f8fd79e468
|     | `-CXXThisExpr 0x55f8fd79ee40 <col:39> 'Storage *' implicit this
|     `-ImplicitCastExpr 0x55f8fd79eea0 <col:51> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd79ee80 <col:51> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x55f8fd79d7a8 'c' 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x55f8fd79d9b0 <line:35:5, col:38> col:17 used set_head 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x55f8fd79d920 <col:26, col:37> col:37 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x55f8fd79daf8 <line:36:5, col:38> col:17 used set_tail 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x55f8fd79da68 <col:26, col:37> col:37 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x55f8fd79dc40 <line:37:5, col:46> col:17 used set_head_release 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x55f8fd79dbb0 <col:34, col:45> col:45 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x55f8fd79dd88 <line:38:5, col:46> col:17 set_tail_acquire 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x55f8fd79dcf8 <col:34, col:45> col:45 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x55f8fd79de78 <line:39:5, col:43> col:23 reserve_tail_atomic 'Storage::index_type ()' inline
|-CXXMethodDecl 0x55f8fd79e118 <line:41:5, line:43:35> line:41:24 packet_memory_barrier 'void (Packet *volatile &, volatile Storage::index_type &)' static inline
| |-ParmVarDecl 0x55f8fd79df60 <col:46, col:64> col:64 packet 'Packet *volatile &'
| |-ParmVarDecl 0x55f8fd79e008 <line:42:46, col:67> col:67 index 'volatile Storage::index_type &'
| `-DeprecatedAttr 0x55f8fd79e1c8 <line:43:24> "" ""
|-CXXMethodDecl 0x55f8fd79e318 <line:44:5, line:45:35> line:44:17 packet_memory_barrier 'void (Packet *volatile &)' inline
| |-ParmVarDecl 0x55f8fd79e250 <col:39, col:57> col:57 packet 'Packet *volatile &'
| `-DeprecatedAttr 0x55f8fd79e3c0 <line:45:24> "" ""
|-AccessSpecDecl 0x55f8fd79e430 <line:47:3, col:12> col:3 protected
|-FieldDecl 0x55f8fd79e468 <line:48:5, col:16> col:16 referenced _capacity 'Storage::index_type':'unsigned int'
|-AccessSpecDecl 0x55f8fd79e4b8 <line:50:3, col:10> col:3 private
|-FieldDecl 0x55f8fd79e4f0 <line:51:5, col:25> col:25 referenced _head 'volatile Storage::index_type':'volatile unsigned int'
|-FieldDecl 0x55f8fd79e550 <line:52:5, col:25> col:25 referenced _tail 'volatile Storage::index_type':'volatile unsigned int'
`-CXXDestructorDecl 0x55f8fd7a7050 <line:9:7> col:7 implicit ~Storage 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.Storage = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.Storage = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SimpleQueue
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class Storage (base)
       108 |     Storage::index_type _capacity
       112 |     volatile Storage::index_type _head
       116 |     volatile Storage::index_type _tail
       120 |   class Packet *volatile * _q
       128 |   volatile int _drops
       132 |   int _highwater_length
           | [sizeof=136, dsize=136, align=8,
           |  nvsize=136, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd485190 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd4852a8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55f8fd485338 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55f8fd485408 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55f8fd4854f0 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8fd485708 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f8fd4855b0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd4858b8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55f8fd4857c0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f8fd485a00 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55f8fd485970 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f8fd485b48 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f8fd485ab8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd485c90 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f8fd485c00 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd485d58 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55f8fd485ea0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55f8fd485e10 <col:28> col:31 'int'
|-CXXMethodDecl 0x55f8fd485f68 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55f8fd4860b0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55f8fd486020 <col:28> col:31 'int'
|-CXXMethodDecl 0x55f8fd486228 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55f8fd486168 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd486370 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55f8fd4862e0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd486438 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55f8fd4865f8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd4864e8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f8fd486560 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd486848 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd4866b8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f8fd486730 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f8fd4868f8 <col:86> "" ""
|-CXXMethodDecl 0x55f8fd486b68 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd4869d8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55f8fd486a50 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd486d18 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55f8fd486c28 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55f8fd486ec8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55f8fd486dd0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55f8fd487198 <line:81:5, col:98> col:28 used compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd486f80 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55f8fd486ff8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f8fd487070 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd487478 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd487260 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55f8fd4872d8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f8fd487350 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f8fd487530 <col:115> "" ""
|-AccessSpecDecl 0x55f8fd4875a0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55f8fd4875d8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd488af0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55f8fd488af0
| `-ParmVarDecl 0x55f8fd488bf8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55f8fd488c98 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55f8fd488c98
| `-ParmVarDecl 0x55f8fd488da8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55f8fd4be3d8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f8fd6b01d0 <col:7>
|-CXXConstructorDecl 0x55f8fd4be4b0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55f8fd4be4b0
| `-ParmVarDecl 0x55f8fd4be5c8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55f8fd4be638 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55f8fd4be638
| `-ParmVarDecl 0x55f8fd4be748 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55f8fd6b2bd0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd69ed78 prev 0x55f8fd693f80 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd69ee70 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55f8fd69ef60 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55f8fd69f088 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55f8fd69f208 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55f8fd69f388 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55f8fd69f508 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55f8fd6b0338 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f8fd6b0ba8 <col:11>
|-CXXDestructorDecl 0x55f8fd6b0410 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f8fd6b0548 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55f8fd6b0548
| `-ParmVarDecl 0x55f8fd6b0658 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55f8fd6b06f8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f8fd6b06f8
| `-ParmVarDecl 0x55f8fd6b0808 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55f8fd6b35c8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f8fd6b36d8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55f8fd6b3958 <col:11>
|   `-ReturnStmt 0x55f8fd6b3948 <col:11>
|     `-UnaryOperator 0x55f8fd6b3930 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f8fd6b3920 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55f8fd6b3748 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f8fd6b3748
  `-ParmVarDecl 0x55f8fd6b3858 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd69f570 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd69f688 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55f8fd69f728 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55f8fd69f790 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55f8fd69f7f8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55f8fd69f860 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55f8fd69f8c0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55f8fd69f980 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55f8fd69f9e0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55f8fd69fa40 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55f8fd6b0248 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55f8fd69f728 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55f8fd6b0bb8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55f8fd6b0c10 <col:12>
|-CXXConstructorDecl 0x55f8fd6b0878 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55f8fd6b0878
| `-ParmVarDecl 0x55f8fd6b0988 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55f8fd6b0a28 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55f8fd6b0a28
| `-ParmVarDecl 0x55f8fd6b0b38 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55f8fd6b2cb0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd68d690 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f8fd68d7a8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55f8fd68d838 <col:16, col:22> col:16 public
|-EnumDecl 0x55f8fd68d860 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55f8fd68d960 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55f8fd68da40 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd68d940 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55f8fd68d920 <col:21> 'int' 28
| `-EnumConstantDecl 0x55f8fd68d9f0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55f8fd68da58 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd68d9d0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55f8fd68d9b0 <col:22> 'int' 64
|-CXXMethodDecl 0x55f8fd68dd98 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55f8fd68da80 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f8fd68db00 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55f8fd68db78 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f8fd68dbf0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f8fd68de58 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55f8fd68e058 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd68ded0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55f8fd68df48 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f8fd68e108 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55f8fd68e268 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd68e178 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f8fd68e310 <col:72> warn_unused_result ""
|-TypedefDecl 0x55f8fd68e670 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55f8fd68e600 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55f8fd68e5a0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55f8fd68e560 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55f8fd1632d0 'void'
|       |-PointerType 0x55f8fd40da30 'unsigned char *'
|       | `-BuiltinType 0x55f8fd1633d0 'unsigned char'
|       |-TypedefType 0x55f8fd209d80 'size_t' sugar
|       | |-Typedef 0x55f8fd1d3b20 'size_t'
|       | `-BuiltinType 0x55f8fd163430 'unsigned long'
|       `-PointerType 0x55f8fd163ad0 'void *'
|         `-BuiltinType 0x55f8fd1632d0 'void'
|-CXXMethodDecl 0x55f8fd68eae8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55f8fd68e6e0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55f8fd68e758 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f8fd68e7f0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55f8fd68e870 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55f8fd6a91e0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55f8fd6a91c8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55f8fd6a9190 <col:58> 'int' 0
| |-ParmVarDecl 0x55f8fd68e8f0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55f8fd6a9208 <col:76> 'int' 0
| |-ParmVarDecl 0x55f8fd68e970 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55f8fd6a9228 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55f8fd68ebb8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55f8fd68ec38 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55f8fd68ecf8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55f8fd68ed98 <col:20>
| `-OptimizeNoneAttr 0x55f8fd68edf0 <col:30>
|-CXXMethodDecl 0x55f8fd68ee68 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55f8fd68ef08 <col:20>
| `-OptimizeNoneAttr 0x55f8fd68ef60 <col:30>
|-CXXMethodDecl 0x55f8fd68efd8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55f8fd68f078 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55f8fd68f128 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55f8fd68f1c8 <col:20>
| |-OptimizeNoneAttr 0x55f8fd68f220 <col:30>
| `-WarnUnusedResultAttr 0x55f8fd68f248 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55f8fd68f2a0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55f8fd68f340 <col:20>
| `-OptimizeNoneAttr 0x55f8fd68f398 <col:30>
|-CXXMethodDecl 0x55f8fd68f3e8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55f8fd68f488 <col:20>
| `-OptimizeNoneAttr 0x55f8fd68f4e0 <col:30>
|-CXXMethodDecl 0x55f8fd68f528 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55f8fd68f5c8 <col:20>
| `-OptimizeNoneAttr 0x55f8fd68f620 <col:30>
|-CXXMethodDecl 0x55f8fd68f668 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8fd68f728 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8fd68f7f0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f8fd68f8b8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f8fd68f978 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8fd68fa98 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55f8fd6a92f0 <col:54, line:99:5>
|   `-ReturnStmt 0x55f8fd6a92e0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55f8fd6a92c8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55f8fd6a9298 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f8fd69fd78
|         `-CXXThisExpr 0x55f8fd6a9288 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55f8fd68fc38 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55f8fd68fb48 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55f8fd6a93a0 <col:67, line:103:5>
|   `-BinaryOperator 0x55f8fd6a9380 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55f8fd6a9318 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f8fd69fd78
|     | `-CXXThisExpr 0x55f8fd6a9308 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55f8fd6a9368 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd6a9348 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55f8fd68fb48 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55f8fd68fd30 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55f8fd6a9420 <col:33, line:107:5>
|   `-ReturnStmt 0x55f8fd6a9410 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55f8fd6a93f8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f8fd6a93c8 <col:16> 'void *' lvalue ->_destructor_argument 0x55f8fd69fde0
|         `-CXXThisExpr 0x55f8fd6a93b8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55f8fd68fdf0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55f8fd6a9a50 <col:25, line:113:5>
|   |-ParenExpr 0x55f8fd6a9798 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55f8fd6a9768 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6a94d8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55f8fd6a94b0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55f8fd6a9478 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55f8fd6a9448 <col:24> '<bound member function type>' ->shared 0x55f8fd68ee68
|   |   |       `-ImplicitCastExpr 0x55f8fd6a9498 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55f8fd6a9438 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55f8fd6a9538 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6a9518 <col:42> 'int' 0
|   |   `-CallExpr 0x55f8fd6a96c8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6a96b0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6a9690 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6a9708 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6a95a8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55f8fd6a9720 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6a95d0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6a9738 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6a9608 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55f8fd6a9750 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6a9678 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6a9660 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6a9628 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55f8fd6a9998 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55f8fd6a97c8 <col:2> 'unsigned char *' lvalue ->_head 0x55f8fd69fb80
|   | | `-CXXThisExpr 0x55f8fd6a97b8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55f8fd6a9980 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55f8fd6a9960 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55f8fd6a9808 <col:10> 'unsigned char *' lvalue ->_data 0x55f8fd69fbe8
|   |     | `-CXXThisExpr 0x55f8fd6a97f8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55f8fd6a9948 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55f8fd6a9928 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55f8fd6a9848 <col:18> 'unsigned char *' lvalue ->_tail 0x55f8fd69fc50
|   |         | `-CXXThisExpr 0x55f8fd6a9838 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55f8fd6a9910 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55f8fd6a98f0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55f8fd6a9888 <col:26> 'unsigned char *' lvalue ->_end 0x55f8fd69fcb8
|   |             | `-CXXThisExpr 0x55f8fd6a9878 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55f8fd6a98d8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55f8fd6a98b8 <col:33> 'int' 0
|   `-BinaryOperator 0x55f8fd6a9a30 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55f8fd6a99c8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f8fd69fd78
|     | `-CXXThisExpr 0x55f8fd6a99b8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55f8fd6a9a18 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55f8fd6a99f8 <col:16> 'int' 0
|-CXXMethodDecl 0x55f8fd68ff30 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f8fd68fea0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f8fd68ffd8 <col:20>
| |-OptimizeNoneAttr 0x55f8fd690030 <col:30>
| `-WarnUnusedResultAttr 0x55f8fd690058 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55f8fd690128 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f8fd690098 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f8fd6901d0 <col:20>
| |-OptimizeNoneAttr 0x55f8fd690228 <col:30>
| `-WarnUnusedResultAttr 0x55f8fd690250 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55f8fd690388 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55f8fd690290 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f8fd690430 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55f8fd690530 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55f8fd6904a0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f8fd6905d8 <col:20>
| `-OptimizeNoneAttr 0x55f8fd690630 <col:30>
|-CXXMethodDecl 0x55f8fd6906f8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f8fd690668 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f8fd6907a0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55f8fd6908a0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55f8fd690810 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f8fd690948 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55f8fd690a48 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55f8fd6909b8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f8fd690af0 <col:20>
| `-OptimizeNoneAttr 0x55f8fd690b48 <col:30>
|-CXXMethodDecl 0x55f8fd690cd8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55f8fd690b88 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55f8fd690c00 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55f8fd6a9248 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55f8fd690d88 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55f8fd690f88 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd690e00 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55f8fd690e78 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd691198 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd691048 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f8fd6910c0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd6913a8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55f8fd691258 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55f8fd6912d8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55f8fd6a9258 <col:39> 'int' 0
|-CXXMethodDecl 0x55f8fd691478 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55f8fd691540 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f8fd691608 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f8fd6916c8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8fd691790 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55f8fd6918d8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55f8fd691848 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55f8fd691aa8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd691998 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55f8fd691a10 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd691b78 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55f8fd691c38 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55f8fd691cd8 <col:20>
| `-OptimizeNoneAttr 0x55f8fd691d30 <col:30>
|-CXXMethodDecl 0x55f8fd691d80 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55f8fd691e20 <col:20>
| `-OptimizeNoneAttr 0x55f8fd691e78 <col:30>
|-CXXMethodDecl 0x55f8fd691ec8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f8fd691f88 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8fd692050 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55f8fd6920f0 <col:20>
| `-OptimizeNoneAttr 0x55f8fd692148 <col:30>
|-CXXMethodDecl 0x55f8fd692298 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd692188 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55f8fd692200 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd6923e8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55f8fd692358 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd6924c0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55f8fd692580 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55f8fd692620 <col:20>
| `-OptimizeNoneAttr 0x55f8fd692678 <col:30>
|-CXXMethodDecl 0x55f8fd6926c8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55f8fd692768 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6927c0 <col:30>
|-CXXMethodDecl 0x55f8fd692810 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f8fd6928d8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55f8fd692978 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6929d0 <col:30>
|-CXXMethodDecl 0x55f8fd692a18 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55f8fd692b38 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55f8fd692ca8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55f8fd692be8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55f8fd692d98 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55f8fd692e38 <col:20>
| `-OptimizeNoneAttr 0x55f8fd692e90 <col:30>
|-CXXMethodDecl 0x55f8fd692ee0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f8fd692fa0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8fd6931d8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55f8fd693050 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55f8fd6930c8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f8fd693288 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6932e0 <col:30>
|-CXXMethodDecl 0x55f8fd693388 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55f8fd693428 <col:20>
| `-OptimizeNoneAttr 0x55f8fd693480 <col:30>
|-CXXMethodDecl 0x55f8fd6934d0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55f8fd693570 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6935c8 <col:30>
|-CXXMethodDecl 0x55f8fd693610 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55f8fd6936b0 <col:20>
| `-OptimizeNoneAttr 0x55f8fd693708 <col:30>
|-CXXMethodDecl 0x55f8fd693808 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55f8fd693740 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55f8fd6938b0 <col:20>
| `-OptimizeNoneAttr 0x55f8fd693908 <col:30>
|-CXXMethodDecl 0x55f8fd693ac8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55f8fd693940 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55f8fd6939b8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f8fd693b78 <col:20>
| `-OptimizeNoneAttr 0x55f8fd693bd0 <col:30>
|-CXXMethodDecl 0x55f8fd693c78 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55f8fd693d98 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55f8fd693eb8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55f8fd693f58 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55f8fd693f80 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55f8fd6940a8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55f8fd694148 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6941a0 <col:30>
|-CXXMethodDecl 0x55f8fd694248 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55f8fd6942e8 <col:20>
| `-OptimizeNoneAttr 0x55f8fd694340 <col:30>
|-AccessSpecDecl 0x55f8fd694368 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55f8fd694390 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55f8fd694490 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55f8fd6944e0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd694470 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55f8fd694450 <col:14> 'int' 48
|-CXXMethodDecl 0x55f8fd694548 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55f8fd6945e8 <col:20>
| `-OptimizeNoneAttr 0x55f8fd694640 <col:30>
|-CXXMethodDecl 0x55f8fd6946b8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55f8fd694758 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6947b0 <col:30>
|-CXXMethodDecl 0x55f8fd694878 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f8fd6947e8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55f8fd694a18 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55f8fd694bb8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55f8fd694ac8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55f8fd694c60 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55f8fd694d60 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f8fd695110 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd694d40 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55f8fd694d20 <col:9> 'int' 0
| |-EnumConstantDecl 0x55f8fd694df0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f8fd695128 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd694dd0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55f8fd694db0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55f8fd694e80 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f8fd695140 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd694e60 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55f8fd694e40 <col:14> 'int' 2
| |-EnumConstantDecl 0x55f8fd694f10 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f8fd695158 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd694ef0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55f8fd694ed0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55f8fd694fa0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f8fd695170 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd694f80 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55f8fd694f60 <col:13> 'int' 4
| |-EnumConstantDecl 0x55f8fd695030 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f8fd695188 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd695010 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55f8fd694ff0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55f8fd6950c0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55f8fd6951a0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd6950a0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55f8fd695080 <col:14> 'int' 6
|-CXXMethodDecl 0x55f8fd695208 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55f8fd6952a8 <col:20>
| `-OptimizeNoneAttr 0x55f8fd695300 <col:30>
|-CXXMethodDecl 0x55f8fd6953f8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55f8fd695338 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55f8fd6954a0 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6954f8 <col:30>
|-CXXMethodDecl 0x55f8fd695568 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55f8fd695690 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55f8fd695808 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55f8fd695740 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55f8fd6958d0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55f8fd695998 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55f8fd695ad8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55f8fd695a48 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55f8fd695b80 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55f8fd695c80 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f8fd695e80 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd695c60 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55f8fd695c40 <col:23> 'int' 0
| |-EnumConstantDecl 0x55f8fd695d10 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f8fd695e98 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd695cf0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55f8fd695cd0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55f8fd695da0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f8fd695eb0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd695d80 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55f8fd695d60 <col:24> 'int' 0
| `-EnumConstantDecl 0x55f8fd695e30 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55f8fd695ec8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd695e10 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55f8fd695df0 <col:47> 'int' 16
|-CXXMethodDecl 0x55f8fd695f28 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55f8fd696098 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55f8fd695fd8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55f8fd696140 <col:20>
| `-OptimizeNoneAttr 0x55f8fd696198 <col:30>
|-CXXMethodDecl 0x55f8fd6961e8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55f8fd6a9b70 <col:18, col:36>
|   `-ReturnStmt 0x55f8fd6a9b60 <col:20, col:33>
|     `-ImplicitCastExpr 0x55f8fd6a9b48 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55f8fd6a9b28 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55f8fd6a9af8 <col:27> '<bound member function type>' ->xanno 0x55f8fd694248
|           `-CXXThisExpr 0x55f8fd6a9ae8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55f8fd6962e0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55f8fd6a9c80 <col:30, col:48>
|   `-ReturnStmt 0x55f8fd6a9c70 <col:32, col:45>
|     `-ImplicitCastExpr 0x55f8fd6a9c58 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55f8fd6a9c38 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55f8fd6a9c08 <col:39> '<bound member function type>' ->xanno 0x55f8fd6940a8
|           `-CXXThisExpr 0x55f8fd6a9bf8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55f8fd6963c8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55f8fd6a9e18 <col:24, col:50>
|   `-ReturnStmt 0x55f8fd6a9e08 <col:26, col:47>
|     `-UnaryOperator 0x55f8fd6a9df0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f8fd6a9dd0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f8fd6a9db8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f8fd6a9d68 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55f8fd69f088
|         |   `-CXXMemberCallExpr 0x55f8fd6a9d48 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55f8fd6a9d18 <col:34> '<bound member function type>' ->xanno 0x55f8fd694248
|         |       `-CXXThisExpr 0x55f8fd6a9d08 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55f8fd6a9d98 <col:46> 'int' 0
|-CXXMethodDecl 0x55f8fd6964d0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55f8fd6a9fe8 <col:36, col:62>
|   `-ReturnStmt 0x55f8fd6a9fd8 <col:38, col:59>
|     `-UnaryOperator 0x55f8fd6a9fc0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f8fd6a9fa0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f8fd6a9f88 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f8fd6a9f00 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55f8fd69f088
|         |   `-CXXMemberCallExpr 0x55f8fd6a9ee0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f8fd6a9eb0 <col:46> '<bound member function type>' ->xanno 0x55f8fd6940a8
|         |       `-CXXThisExpr 0x55f8fd6a9ea0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55f8fd6a9f30 <col:58> 'int' 0
|-CXXMethodDecl 0x55f8fd6965e8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55f8fd6aa180 <col:26, col:53>
|   `-ReturnStmt 0x55f8fd6aa170 <col:28, col:50>
|     `-UnaryOperator 0x55f8fd6aa158 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f8fd6aa138 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55f8fd6aa120 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f8fd6aa0d0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55f8fd69f388
|         |   `-CXXMemberCallExpr 0x55f8fd6aa0b0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55f8fd6aa080 <col:36> '<bound member function type>' ->xanno 0x55f8fd694248
|         |       `-CXXThisExpr 0x55f8fd6aa070 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55f8fd6aa100 <col:49> 'int' 0
|-CXXMethodDecl 0x55f8fd696708 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55f8fd6aa358 <col:38, col:65>
|   `-ReturnStmt 0x55f8fd6aa348 <col:40, col:62>
|     `-UnaryOperator 0x55f8fd6aa330 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f8fd6aa310 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55f8fd6aa2f8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f8fd6aa268 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55f8fd69f388
|         |   `-CXXMemberCallExpr 0x55f8fd6aa248 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f8fd6aa218 <col:48> '<bound member function type>' ->xanno 0x55f8fd6940a8
|         |       `-CXXThisExpr 0x55f8fd6aa208 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55f8fd6aa298 <col:61> 'int' 0
|-CXXMethodDecl 0x55f8fd6968b8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55f8fd6967c0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55f8fd6aaa28 <col:34, line:463:5>
|   |-ParenExpr 0x55f8fd6aa870 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55f8fd6aa840 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6aa4a8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6aa478 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6aa3c8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6aa3b0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6aa370 <col:23> 'int' lvalue ParmVar 0x55f8fd6967c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6aa390 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6aa458 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f8fd6aa428 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6aa3e8 <col:33> 'int' lvalue ParmVar 0x55f8fd6967c0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55f8fd6aa440 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55f8fd6aa408 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55f8fd6aa508 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6aa4e8 <col:56> 'int' 0
|   |   `-CallExpr 0x55f8fd6aa7a0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6aa788 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6aa768 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6aa7e0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6aa5f8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55f8fd6aa7f8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6aa628 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6aa810 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6aa660 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55f8fd6aa828 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6aa750 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6aa738 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6aa6f8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55f8fd6aaa18 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55f8fd6aaa00 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55f8fd6aa9e0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f8fd6aa9b0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f8fd6aa960 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55f8fd69f088
|         |   `-CXXMemberCallExpr 0x55f8fd6aa940 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f8fd6aa910 <col:9> '<bound member function type>' ->xanno 0x55f8fd6940a8
|         |       `-CXXThisExpr 0x55f8fd6aa900 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55f8fd6aa9c8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55f8fd6aa990 <col:21> 'int' lvalue ParmVar 0x55f8fd6967c0 'i' 'int'
|-CXXMethodDecl 0x55f8fd696b08 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55f8fd696978 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55f8fd6969f0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55f8fd6ab0b8 <col:40, line:472:5>
|   |-ParenExpr 0x55f8fd6aaed0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55f8fd6aaea0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6aab80 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6aab50 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6aaaa0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6aaa88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6aaa48 <col:23> 'int' lvalue ParmVar 0x55f8fd696978 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6aaa68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6aab30 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f8fd6aab00 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6aaac0 <col:33> 'int' lvalue ParmVar 0x55f8fd696978 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55f8fd6aab18 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55f8fd6aaae0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55f8fd6aabe0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6aabc0 <col:56> 'int' 0
|   |   `-CallExpr 0x55f8fd6aae00 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6aade8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6aadc8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6aae40 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6aac50 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55f8fd6aae58 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6aac80 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6aae70 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6aacb8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55f8fd6aae88 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6aadb0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6aad98 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6aad58 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55f8fd6ab098 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55f8fd6ab040 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55f8fd6ab010 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55f8fd6aafc0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55f8fd69f088
|     | |   `-CXXMemberCallExpr 0x55f8fd6aafa0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55f8fd6aaf70 <col:2> '<bound member function type>' ->xanno 0x55f8fd694248
|     | |       `-CXXThisExpr 0x55f8fd6aaf60 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55f8fd6ab028 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f8fd6aaff0 <col:14> 'int' lvalue ParmVar 0x55f8fd696978 'i' 'int'
|     `-ImplicitCastExpr 0x55f8fd6ab080 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd6ab060 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55f8fd6969f0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55f8fd696cc8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55f8fd696bd0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f8fd6ab838 <col:36, line:485:5>
|   |-ParenExpr 0x55f8fd6ab5a0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f8fd6ab570 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6ab250 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6ab220 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6ab130 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6ab118 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6ab0d8 <col:23> 'int' lvalue ParmVar 0x55f8fd696bd0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6ab0f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6ab200 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f8fd6ab1e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6ab150 <col:33> 'int' lvalue ParmVar 0x55f8fd696bd0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f8fd6ab1c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f8fd6ab1b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f8fd6ab170 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f8fd6ab190 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f8fd6ab2b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6ab290 <col:60> 'int' 0
|   |   `-CallExpr 0x55f8fd6ab4d0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6ab4b8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6ab498 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6ab510 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ab320 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f8fd6ab528 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ab358 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6ab540 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6ab390 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55f8fd6ab558 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6ab480 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6ab468 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6ab428 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55f8fd6ab828 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55f8fd6ab810 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55f8fd6ab7f8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f8fd6ab7c8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55f8fd6ab768 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f8fd6ab738 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f8fd6ab6b0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f8fd69ef60
|             |   `-CXXMemberCallExpr 0x55f8fd6ab690 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f8fd6ab660 <col:61> '<bound member function type>' ->xanno 0x55f8fd6940a8
|             |       `-CXXThisExpr 0x55f8fd6ab650 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f8fd6ab750 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f8fd6ab6e0 <col:74> 'int' lvalue ParmVar 0x55f8fd696bd0 'i' 'int'
|-CXXMethodDecl 0x55f8fd696f18 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55f8fd696d88 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f8fd696e00 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f8fd6abf88 <col:42, line:500:5>
|   |-ParenExpr 0x55f8fd6abd20 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f8fd6abcf0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6ab9d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6ab9a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6ab8b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6ab898 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6ab858 <col:23> 'int' lvalue ParmVar 0x55f8fd696d88 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6ab878 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6ab980 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f8fd6ab968 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6ab8d0 <col:33> 'int' lvalue ParmVar 0x55f8fd696d88 'i' 'int'
|   |   |     `-BinaryOperator 0x55f8fd6ab948 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f8fd6ab930 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f8fd6ab8f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f8fd6ab910 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f8fd6aba30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6aba10 <col:60> 'int' 0
|   |   `-CallExpr 0x55f8fd6abc50 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6abc38 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6abc18 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6abc90 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6abaa0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f8fd6abca8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6abad8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6abcc0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6abb10 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55f8fd6abcd8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6abc00 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6abbe8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6abba8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55f8fd6abf68 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55f8fd6abf18 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f8fd6abee8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55f8fd6abe90 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f8fd6abe60 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f8fd6abe10 <col:48, col:57> 'char [48]' lvalue ->c 0x55f8fd69ef60
|     |     |   `-CXXMemberCallExpr 0x55f8fd6abdf0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f8fd6abdc0 <col:48> '<bound member function type>' ->xanno 0x55f8fd694248
|     |     |       `-CXXThisExpr 0x55f8fd6abdb0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f8fd6abe78 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f8fd6abe40 <col:61> 'int' lvalue ParmVar 0x55f8fd696d88 'i' 'int'
|     `-ImplicitCastExpr 0x55f8fd6abf50 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd6abf30 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f8fd696e00 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f8fd6970d8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55f8fd696fe0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55f8fd6ac6e8 <col:35, line:513:5>
|   |-ParenExpr 0x55f8fd6ac3f8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f8fd6ac3c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6ac120 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6ac0f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6ac000 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6abfe8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6abfa8 <col:23> 'int' lvalue ParmVar 0x55f8fd696fe0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6abfc8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6ac0d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f8fd6ac0b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6ac020 <col:33> 'int' lvalue ParmVar 0x55f8fd696fe0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f8fd6ac098 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f8fd6ac080 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f8fd6ac040 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f8fd6ac060 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f8fd6ac180 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6ac160 <col:60> 'int' 0
|   |   `-CallExpr 0x55f8fd6ac328 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6ac310 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6ac2f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6ac368 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ac1f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f8fd6ac380 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ac228 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6ac398 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6ac260 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55f8fd6ac3b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6ac2d8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6ac2c0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6ac280 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55f8fd6ac6d8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55f8fd6ac6c0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55f8fd6ac6a8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f8fd6ac678 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55f8fd6ac5f0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f8fd6ac5c0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f8fd6ac570 <col:60, col:69> 'char const[48]' lvalue ->c 0x55f8fd69ef60
|             |   `-CXXMemberCallExpr 0x55f8fd6ac550 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f8fd6ac520 <col:60> '<bound member function type>' ->xanno 0x55f8fd6940a8
|             |       `-CXXThisExpr 0x55f8fd6ac510 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f8fd6ac5d8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f8fd6ac5a0 <col:73> 'int' lvalue ParmVar 0x55f8fd696fe0 'i' 'int'
|-CXXMethodDecl 0x55f8fd697328 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55f8fd697198 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f8fd697210 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55f8fd6ace08 <col:41, line:528:5>
|   |-ParenExpr 0x55f8fd6acb90 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f8fd6acb60 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6ac880 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6ac850 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6ac760 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6ac748 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6ac708 <col:23> 'int' lvalue ParmVar 0x55f8fd697198 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6ac728 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6ac830 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f8fd6ac818 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6ac780 <col:33> 'int' lvalue ParmVar 0x55f8fd697198 'i' 'int'
|   |   |     `-BinaryOperator 0x55f8fd6ac7f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f8fd6ac7e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f8fd6ac7a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f8fd6ac7c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f8fd6ac8e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6ac8c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f8fd6acac0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6acaa8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6aca88 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6acb00 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ac950 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f8fd6acb18 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ac988 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6acb30 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6ac9c0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55f8fd6acb48 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6aca70 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6aca58 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6aca18 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55f8fd6acde8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55f8fd6acd98 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f8fd6acd68 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55f8fd6acd10 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f8fd6accd0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f8fd6acc80 <col:47, col:56> 'char [48]' lvalue ->c 0x55f8fd69ef60
|     |     |   `-CXXMemberCallExpr 0x55f8fd6acc60 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f8fd6acc30 <col:47> '<bound member function type>' ->xanno 0x55f8fd694248
|     |     |       `-CXXThisExpr 0x55f8fd6acc20 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f8fd6acce8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f8fd6accb0 <col:60> 'int' lvalue ParmVar 0x55f8fd697198 'i' 'int'
|     `-ImplicitCastExpr 0x55f8fd6acdd0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd6acdb0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55f8fd697210 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55f8fd6974e8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55f8fd6973f0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f8fd6ad4d8 <col:36, line:541:5>
|   |-ParenExpr 0x55f8fd6ad278 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f8fd6ad248 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6acfa0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6acf70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6ace80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6ace68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6ace28 <col:23> 'int' lvalue ParmVar 0x55f8fd6973f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6ace48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6acf50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f8fd6acf38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6acea0 <col:33> 'int' lvalue ParmVar 0x55f8fd6973f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f8fd6acf18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f8fd6acf00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f8fd6acec0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f8fd6acee0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f8fd6ad000 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6acfe0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f8fd6ad1a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6ad190 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6ad170 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6ad1e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ad070 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f8fd6ad200 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ad0a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6ad218 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6ad0e0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55f8fd6ad230 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6ad158 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6ad140 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6ad100 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55f8fd6ad4c8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55f8fd6ad4b0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55f8fd6ad498 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f8fd6ad468 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55f8fd6ad410 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f8fd6ad3e0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f8fd6ad390 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f8fd69ef60
|             |   `-CXXMemberCallExpr 0x55f8fd6ad370 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f8fd6ad340 <col:61> '<bound member function type>' ->xanno 0x55f8fd6940a8
|             |       `-CXXThisExpr 0x55f8fd6ad330 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f8fd6ad3f8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f8fd6ad3c0 <col:74> 'int' lvalue ParmVar 0x55f8fd6973f0 'i' 'int'
|-CXXMethodDecl 0x55f8fd6976b8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55f8fd6975a8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55f8fd697620 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f8fd697768 <col:20>
| `-OptimizeNoneAttr 0x55f8fd6977c0 <col:30>
|-CXXMethodDecl 0x55f8fd6978f8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55f8fd697800 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55f8fd6adba8 <col:35, line:562:5>
|   |-ParenExpr 0x55f8fd6ad948 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f8fd6ad918 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6ad670 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6ad640 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6ad550 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6ad538 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6ad4f8 <col:23> 'int' lvalue ParmVar 0x55f8fd697800 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6ad518 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6ad620 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f8fd6ad608 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6ad570 <col:33> 'int' lvalue ParmVar 0x55f8fd697800 'i' 'int'
|   |   |     `-BinaryOperator 0x55f8fd6ad5e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f8fd6ad5d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f8fd6ad590 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f8fd6ad5b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f8fd6ad6d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6ad6b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f8fd6ad878 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6ad860 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6ad840 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6ad8b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ad740 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f8fd6ad8d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ad778 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6ad8e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6ad7b0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55f8fd6ad900 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6ad828 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6ad810 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6ad7d0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55f8fd6adb98 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55f8fd6adb80 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55f8fd6adb68 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f8fd6adb38 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55f8fd6adae0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f8fd6adab0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f8fd6ada60 <col:60, col:69> 'char const[48]' lvalue ->c 0x55f8fd69ef60
|             |   `-CXXMemberCallExpr 0x55f8fd6ada40 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f8fd6ada10 <col:60> '<bound member function type>' ->xanno 0x55f8fd6940a8
|             |       `-CXXThisExpr 0x55f8fd6ada00 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f8fd6adac8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f8fd6ada90 <col:73> 'int' lvalue ParmVar 0x55f8fd697800 'i' 'int'
|-CXXMethodDecl 0x55f8fd697b08 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55f8fd6979b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f8fd697a30 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55f8fd6ae288 <col:41, line:577:5>
|   |-ParenExpr 0x55f8fd6ae018 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f8fd6adfe8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6add40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6add10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6adc20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6adc08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6adbc8 <col:23> 'int' lvalue ParmVar 0x55f8fd6979b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6adbe8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6adcf0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f8fd6adcd8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6adc40 <col:33> 'int' lvalue ParmVar 0x55f8fd6979b8 'i' 'int'
|   |   |     `-BinaryOperator 0x55f8fd6adcb8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f8fd6adca0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f8fd6adc60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f8fd6adc80 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f8fd6adda0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6add80 <col:60> 'int' 0
|   |   `-CallExpr 0x55f8fd6adf48 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6adf30 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6adf10 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6adf88 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ade10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f8fd6adfa0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ade48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6adfb8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6ade80 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55f8fd6adfd0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6adef8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6adee0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6adea0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55f8fd6ae268 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55f8fd6ae218 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f8fd6ae1e8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55f8fd6ae188 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f8fd6ae158 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f8fd6ae108 <col:47, col:56> 'char [48]' lvalue ->c 0x55f8fd69ef60
|     |     |   `-CXXMemberCallExpr 0x55f8fd6ae0e8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f8fd6ae0b8 <col:47> '<bound member function type>' ->xanno 0x55f8fd694248
|     |     |       `-CXXThisExpr 0x55f8fd6ae0a8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f8fd6ae170 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f8fd6ae138 <col:60> 'int' lvalue ParmVar 0x55f8fd6979b8 'i' 'int'
|     `-ImplicitCastExpr 0x55f8fd6ae250 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd6ae230 <col:65> 'int32_t':'int' lvalue ParmVar 0x55f8fd697a30 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55f8fd697cc8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55f8fd697bd0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f8fd6ae9b8 <col:36, line:591:5>
|   |-ParenExpr 0x55f8fd6ae6f8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f8fd6ae6c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6ae420 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6ae3f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6ae300 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6ae2e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6ae2a8 <col:23> 'int' lvalue ParmVar 0x55f8fd697bd0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6ae2c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6ae3d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f8fd6ae3b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6ae320 <col:33> 'int' lvalue ParmVar 0x55f8fd697bd0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f8fd6ae398 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f8fd6ae380 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f8fd6ae340 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f8fd6ae360 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55f8fd6ae480 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6ae460 <col:60> 'int' 0
|   |   `-CallExpr 0x55f8fd6ae628 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6ae610 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6ae5f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6ae668 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ae4f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55f8fd6ae680 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6ae528 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6ae698 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6ae560 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55f8fd6ae6b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6ae5d8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6ae5c0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6ae580 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55f8fd6ae9a8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55f8fd6ae990 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55f8fd6ae978 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f8fd6ae948 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55f8fd6ae8c0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f8fd6ae890 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f8fd6ae840 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f8fd69ef60
|             |   `-CXXMemberCallExpr 0x55f8fd6ae820 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f8fd6ae7f0 <col:61> '<bound member function type>' ->xanno 0x55f8fd6940a8
|             |       `-CXXThisExpr 0x55f8fd6ae7e0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f8fd6ae8a8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f8fd6ae870 <col:74> 'int' lvalue ParmVar 0x55f8fd697bd0 'i' 'int'
|-CXXMethodDecl 0x55f8fd697f18 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55f8fd697d88 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f8fd697e00 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55f8fd6af098 <col:42, line:606:5>
|   |-ParenExpr 0x55f8fd6aee28 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f8fd6aedf8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6aeb50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6aeb20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6aea30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6aea18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6ae9d8 <col:23> 'int' lvalue ParmVar 0x55f8fd697d88 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6ae9f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6aeb00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f8fd6aeae8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6aea50 <col:33> 'int' lvalue ParmVar 0x55f8fd697d88 'i' 'int'
|   |   |     `-BinaryOperator 0x55f8fd6aeac8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f8fd6aeab0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f8fd6aea70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f8fd6aea90 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55f8fd6aebb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6aeb90 <col:60> 'int' 0
|   |   `-CallExpr 0x55f8fd6aed58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6aed40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6aed20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6aed98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6aec20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55f8fd6aedb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6aec58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6aedc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6aec90 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55f8fd6aede0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6aed08 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6aecf0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6aecb0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55f8fd6af078 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55f8fd6af028 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f8fd6aeff8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55f8fd6aef98 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f8fd6aef68 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f8fd6aef18 <col:48, col:57> 'char [48]' lvalue ->c 0x55f8fd69ef60
|     |     |   `-CXXMemberCallExpr 0x55f8fd6aeef8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f8fd6aeec8 <col:48> '<bound member function type>' ->xanno 0x55f8fd694248
|     |     |       `-CXXThisExpr 0x55f8fd6aeeb8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f8fd6aef80 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f8fd6aef48 <col:61> 'int' lvalue ParmVar 0x55f8fd697d88 'i' 'int'
|     `-ImplicitCastExpr 0x55f8fd6af060 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd6af040 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55f8fd697e00 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55f8fd6980b0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55f8fd697fe0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55f8fd6af908 <col:33, line:620:5>
|   |-ParenExpr 0x55f8fd6af680 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55f8fd6af650 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6af2a0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6af270 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6af110 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6af0f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6af0b8 <col:23> 'int' lvalue ParmVar 0x55f8fd697fe0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6af0d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6af250 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55f8fd6af238 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6af130 <col:33> 'int' lvalue ParmVar 0x55f8fd697fe0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f8fd6af218 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f8fd6af200 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f8fd6af150 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55f8fd6af1d8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55f8fd6af1c0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55f8fd6af188 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55f8fd6af300 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6af2e0 <col:79> 'int' 0
|   |   `-CallExpr 0x55f8fd6af5b0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6af598 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6af578 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6af5f0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6af3e8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55f8fd6af608 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6af430 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6af620 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6af468 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55f8fd6af638 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6af560 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6af548 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6af508 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55f8fd6af8f8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55f8fd6af8e0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55f8fd6af8c8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f8fd6af898 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55f8fd6af810 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f8fd6af7e0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f8fd6af790 <col:67, col:76> 'char const[48]' lvalue ->c 0x55f8fd69ef60
|             |   `-CXXMemberCallExpr 0x55f8fd6af770 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f8fd6af740 <col:67> '<bound member function type>' ->xanno 0x55f8fd6940a8
|             |       `-CXXThisExpr 0x55f8fd6af730 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f8fd6af7f8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f8fd6af7c0 <col:80> 'int' lvalue ParmVar 0x55f8fd697fe0 'i' 'int'
|-CXXMethodDecl 0x55f8fd6982c8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55f8fd698170 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f8fd6981f0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55f8fd6b0130 <col:45, line:635:5>
|   |-ParenExpr 0x55f8fd6afe78 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55f8fd6afe48 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55f8fd6afb10 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f8fd6afae0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f8fd6af980 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f8fd6af968 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f8fd6af928 <col:23> 'int' lvalue ParmVar 0x55f8fd698170 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f8fd6af948 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f8fd6afac0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55f8fd6afaa8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f8fd6af9a0 <col:33> 'int' lvalue ParmVar 0x55f8fd698170 'i' 'int'
|   |   |     `-BinaryOperator 0x55f8fd6afa88 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f8fd6afa70 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f8fd6af9c0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f8fd694490 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55f8fd6afa48 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55f8fd6afa30 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55f8fd6af9f8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55f8fd6afb70 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f8fd6afb50 <col:79> 'int' 0
|   |   `-CallExpr 0x55f8fd6afda8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55f8fd6afd90 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd6afd70 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f8fd6afde8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6afbe0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55f8fd6afe00 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f8fd6afc28 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f8fd6afe18 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f8fd6afc60 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55f8fd6afe30 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f8fd6afd58 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f8fd6afd40 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f8fd6afcf8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55f8fd6b0110 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55f8fd6b0078 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f8fd6b0048 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55f8fd6affe8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f8fd6affb8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f8fd6aff68 <col:54, col:63> 'char [48]' lvalue ->c 0x55f8fd69ef60
|     |     |   `-CXXMemberCallExpr 0x55f8fd6aff48 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f8fd6aff18 <col:54> '<bound member function type>' ->xanno 0x55f8fd694248
|     |     |       `-CXXThisExpr 0x55f8fd6aff08 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f8fd6affd0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f8fd6aff98 <col:67> 'int' lvalue ParmVar 0x55f8fd698170 'i' 'int'
|     `-CXXConstCastExpr 0x55f8fd6b00e0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55f8fd6b00c8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55f8fd6b0090 <col:91> 'const void *' lvalue ParmVar 0x55f8fd6981f0 'x' 'const void *'
|-CXXMethodDecl 0x55f8fd698398 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55f8fd6b01b8 <col:34, line:640:5>
|   `-ReturnStmt 0x55f8fd6b01a8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55f8fd6b0190 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55f8fd6b0160 <col:16> 'Packet *' lvalue ->_data_packet 0x55f8fd69fb18
|         `-CXXThisExpr 0x55f8fd6b0150 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55f8fd6984d8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55f8fd698448 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f8fd6a9278 <col:46> 'bool' true
|-CXXMethodDecl 0x55f8fd698658 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55f8fd698590 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55f8fd698700 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55f8fd698eb0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55f8fd698800 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f8fd698f20 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6987e0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55f8fd6987c0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55f8fd68d960 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55f8fd698890 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f8fd698f38 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd698870 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55f8fd698850 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55f8fd68d9f0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55f8fd698920 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f8fd698f50 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd698900 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55f8fd6988e0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55f8fd6989b0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f8fd698f68 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd698990 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55f8fd698970 <col:19> 'int' 16
| |-EnumConstantDecl 0x55f8fd698a40 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f8fd698f80 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd698a20 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55f8fd698a00 <col:21> 'int' 16
| |-EnumConstantDecl 0x55f8fd698ad0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f8fd698f98 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd698ab0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55f8fd698a90 <col:19> 'int' 32
| |-EnumConstantDecl 0x55f8fd698b60 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f8fd698fb0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd698b40 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55f8fd698b20 <col:19> 'int' EnumConstant 0x55f8fd6989b0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55f8fd698bf0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f8fd698fc8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd698bd0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55f8fd698bb0 <col:19> 'int' EnumConstant 0x55f8fd698ad0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55f8fd698cc0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f8fd698fe0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd698ca0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55f8fd698c80 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55f8fd698c40 <col:23> 'int' EnumConstant 0x55f8fd698bf0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55f8fd698c60 <col:40> 'int' 2
| |-EnumConstantDecl 0x55f8fd698d90 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f8fd698ff8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd698d70 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55f8fd698d50 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55f8fd698d10 <col:23> 'int' EnumConstant 0x55f8fd698bf0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55f8fd698d30 <col:40> 'int' 4
| `-EnumConstantDecl 0x55f8fd698e60 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55f8fd699010 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd698e40 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55f8fd698e20 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55f8fd698de0 <col:23> 'int' EnumConstant 0x55f8fd698bf0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55f8fd698e00 <col:40> 'int' 8
|-CXXMethodDecl 0x55f8fd699050 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55f8fd6990f0 <col:68> "" ""
|-CXXMethodDecl 0x55f8fd699188 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55f8fd699228 <col:45> "" ""
|-CXXMethodDecl 0x55f8fd6992c0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55f8fd699360 <col:57> "" ""
|-CXXMethodDecl 0x55f8fd6993f8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55f8fd699498 <col:45> "" ""
|-CXXMethodDecl 0x55f8fd699530 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55f8fd6995d0 <col:57> "" ""
|-CXXMethodDecl 0x55f8fd699660 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55f8fd699700 <col:51> "" ""
|-CXXMethodDecl 0x55f8fd699790 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55f8fd699830 <col:63> "" ""
|-CXXMethodDecl 0x55f8fd6998c0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55f8fd699960 <col:53> "" ""
|-CXXMethodDecl 0x55f8fd6999f0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55f8fd699a90 <col:65> "" ""
|-CXXMethodDecl 0x55f8fd699ba8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55f8fd699b18 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55f8fd699c50 <col:61> "" ""
|-CXXMethodDecl 0x55f8fd699de8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55f8fd699cd8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55f8fd699d50 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55f8fd699e98 <col:67> "" ""
|-CXXMethodDecl 0x55f8fd699fb0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55f8fd699f20 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f8fd69a058 <col:63> "" ""
|-CXXMethodDecl 0x55f8fd69a1f0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55f8fd69a0e0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f8fd69a158 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55f8fd69a2a0 <col:69> "" ""
|-CXXMethodDecl 0x55f8fd69a3b8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55f8fd69a328 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f8fd69a460 <col:63> "" ""
|-CXXMethodDecl 0x55f8fd69cb38 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd69ca28 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f8fd69caa0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f8fd69cbe8 <col:69> "" ""
|-CXXMethodDecl 0x55f8fd69cd00 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55f8fd69cc70 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55f8fd69cda8 <col:62> "" ""
|-CXXMethodDecl 0x55f8fd69cf40 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55f8fd69ce30 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f8fd69cea8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55f8fd69cff0 <col:68> "" ""
|-CXXMethodDecl 0x55f8fd69d108 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55f8fd69d078 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f8fd69d1b0 <col:63> "" ""
|-CXXMethodDecl 0x55f8fd69d348 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55f8fd69d238 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f8fd69d2b0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55f8fd69d3f8 <col:69> "" ""
|-CXXMethodDecl 0x55f8fd69d488 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55f8fd69d528 <col:64> "" ""
|-CXXMethodDecl 0x55f8fd69d5b8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55f8fd69d658 <col:52> "" ""
|-CXXMethodDecl 0x55f8fd69d6e8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55f8fd69d788 <col:67> "" ""
|-CXXMethodDecl 0x55f8fd69d818 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55f8fd69d8b8 <col:55> "" ""
|-CXXMethodDecl 0x55f8fd69d9d0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55f8fd69d940 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f8fd69da78 <col:58> "" ""
|-CXXMethodDecl 0x55f8fd69dc10 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55f8fd69db00 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f8fd69db78 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55f8fd69dcc0 <col:62> "" ""
|-CXXMethodDecl 0x55f8fd69ddd8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55f8fd69dd48 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f8fd69de80 <col:58> "" ""
|-CXXMethodDecl 0x55f8fd69e018 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55f8fd69df08 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f8fd69df80 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55f8fd69e0c8 <col:62> "" ""
|-CXXMethodDecl 0x55f8fd69e1e0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55f8fd69e150 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55f8fd69e288 <col:60> "" ""
|-CXXMethodDecl 0x55f8fd69e420 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55f8fd69e310 <col:34> col:37 'int'
| |-ParmVarDecl 0x55f8fd69e388 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55f8fd69e4d0 <col:64> "" ""
|-CXXMethodDecl 0x55f8fd69e5e8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55f8fd69e558 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f8fd69e690 <col:58> "" ""
|-CXXMethodDecl 0x55f8fd69e828 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55f8fd69e718 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f8fd69e790 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55f8fd69e8d8 <col:62> "" ""
|-CXXMethodDecl 0x55f8fd69e9f0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55f8fd69e960 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55f8fd69ea98 <col:59> "" ""
|-CXXMethodDecl 0x55f8fd69ec30 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd69eb20 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f8fd69eb98 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f8fd69ece0 <col:63> "" ""
|-AccessSpecDecl 0x55f8fd69ed50 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55f8fd69ed78 prev 0x55f8fd693f80 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f8fd69ee70 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55f8fd69ef60 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55f8fd69f088 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55f8fd69f208 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55f8fd69f388 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55f8fd69f508 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55f8fd6b0338 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f8fd6b0ba8 <col:11>
| |-CXXDestructorDecl 0x55f8fd6b0410 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55f8fd6b0548 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55f8fd6b0548
| | `-ParmVarDecl 0x55f8fd6b0658 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55f8fd6b06f8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f8fd6b06f8
| | `-ParmVarDecl 0x55f8fd6b0808 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55f8fd6b35c8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f8fd6b36d8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55f8fd6b3958 <col:11>
| |   `-ReturnStmt 0x55f8fd6b3948 <col:11>
| |     `-UnaryOperator 0x55f8fd6b3930 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f8fd6b3920 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55f8fd6b3748 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f8fd6b3748
|   `-ParmVarDecl 0x55f8fd6b3858 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55f8fd69f570 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f8fd69f688 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55f8fd69f728 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55f8fd69f790 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55f8fd69f7f8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55f8fd69f860 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55f8fd69f8c0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55f8fd69f980 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55f8fd69f9e0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55f8fd69fa40 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55f8fd6b0248 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55f8fd69f728 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55f8fd6b0bb8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55f8fd6b0c10 <col:12>
| |-CXXConstructorDecl 0x55f8fd6b0878 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55f8fd6b0878
| | `-ParmVarDecl 0x55f8fd6b0988 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55f8fd6b0a28 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55f8fd6b0a28
| | `-ParmVarDecl 0x55f8fd6b0b38 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55f8fd6b2cb0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55f8fd69fab8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55f8fd69fb18 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55f8fd69fb80 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55f8fd69fbe8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55f8fd69fc50 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55f8fd69fcb8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55f8fd69fd18 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55f8fd69fd78 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55f8fd69fde0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55f8fd69fe68 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55f8fd69fab8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55f8fd6b01e0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55f8fd69fd18 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55f8fd6b0c20 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55f8fd6b0c80 <col:21, line:755:5>
|-CXXConstructorDecl 0x55f8fd6a0008 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55f8fd69ff48 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55f8fd6a0100 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55f8fd6a02e8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55f8fd6a01f0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55f8fd6a05b8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55f8fd6a03a0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f8fd6a0418 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f8fd6a0490 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd6a07d8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55f8fd6a0688 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55f8fd6a0700 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55f8fd6a8db8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55f8fd6a0898 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55f8fd6a0910 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55f8fd6a0988 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55f8fd6a8f10 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55f8fd6a8e80 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd6a9058 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55f8fd6a8fc8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55f8fd6a9150 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd7a3570 <../elements/standard/simplequeue.hh:65:1, line:114:1> line:65:7 referenced class SimpleQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-public 'Storage'
|-CXXRecordDecl 0x55f8fd7a3708 <col:1, col:7> col:7 implicit referenced class SimpleQueue
|-AccessSpecDecl 0x55f8fd7a3798 <col:54, col:60> col:54 public
|-CXXConstructorDecl 0x55f8fd7a3820 <line:67:5, col:17> col:5 used SimpleQueue 'void ()'
|-CXXMethodDecl 0x55f8fd7a3920 <line:69:5, col:40> col:9 drops 'int () const'
| `-CompoundStmt 0x55f8fd7a7198 <col:23, col:40>
|   `-ReturnStmt 0x55f8fd7a7188 <col:25, col:32>
|     `-ImplicitCastExpr 0x55f8fd7a7170 <col:32> 'int' <LValueToRValue>
|       `-MemberExpr 0x55f8fd7a7140 <col:32> 'const volatile int' lvalue ->_drops 0x55f8fd7a5dd8
|         `-CXXThisExpr 0x55f8fd7a7130 <col:32> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x55f8fd7a39e8 <line:70:5, col:62> col:9 highwater_length 'int () const'
| `-CompoundStmt 0x55f8fd7a7218 <col:34, col:62>
|   `-ReturnStmt 0x55f8fd7a7208 <col:36, col:43>
|     `-ImplicitCastExpr 0x55f8fd7a71f0 <col:43> 'int' <LValueToRValue>
|       `-MemberExpr 0x55f8fd7a71c0 <col:43> 'const int' lvalue ->_highwater_length 0x55f8fd7a5e40
|         `-CXXThisExpr 0x55f8fd7a71b0 <col:43> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x55f8fd7a3b58 <line:72:5, col:28> col:17 enq 'bool (Packet *)' inline
| `-ParmVarDecl 0x55f8fd7a3a98 <col:21, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x55f8fd7a3ca0 <line:73:5, col:33> col:17 lifo_enq 'void (Packet *)' inline
| `-ParmVarDecl 0x55f8fd7a3c10 <col:26, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x55f8fd7a3d68 <line:74:5, col:24> col:20 deq 'Packet *()' inline
|-CXXMethodDecl 0x55f8fd7a3eb0 <line:77:5, col:49> col:13 packet 'Packet *(int) const'
| |-ParmVarDecl 0x55f8fd7a3e20 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55f8fd7a7308 <col:33, col:49>
|   `-ReturnStmt 0x55f8fd7a72f8 <col:35, col:46>
|     `-ImplicitCastExpr 0x55f8fd7a72e0 <col:42, col:46> 'Packet *' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55f8fd7a72c0 <col:42, col:46> 'Packet *volatile' lvalue
|         |-ImplicitCastExpr 0x55f8fd7a7290 <col:42> 'Packet *volatile *' <LValueToRValue>
|         | `-MemberExpr 0x55f8fd7a7240 <col:42> 'Packet *volatile *const' lvalue ->_q 0x55f8fd7a5d70
|         |   `-CXXThisExpr 0x55f8fd7a7230 <col:42> 'const SimpleQueue *' implicit this
|         `-ImplicitCastExpr 0x55f8fd7a72a8 <col:45> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55f8fd7a7270 <col:45> 'int' lvalue ParmVar 0x55f8fd7a3e20 'i' 'int'
|-CXXMethodDecl 0x55f8fd7a3f78 <line:78:5, col:16> col:10 reset 'void ()'
|-FunctionTemplateDecl 0x55f8fd7a4258 <line:80:5, col:52> col:40 yank1
| |-TemplateTypeParmDecl 0x55f8fd7a4018 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x55f8fd7a41b8 <col:32, col:52> col:40 yank1 'Packet *(Filter)'
|   `-ParmVarDecl 0x55f8fd7a40c8 <col:46> col:52 'Filter'
|-FunctionTemplateDecl 0x55f8fd7a44c8 <line:81:5, col:57> col:40 yank1_peek
| |-TemplateTypeParmDecl 0x55f8fd7a42b8 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x55f8fd7a4428 <col:32, col:57> col:40 yank1_peek 'Packet *(Filter)'
|   `-ParmVarDecl 0x55f8fd7a4368 <col:51> col:57 'Filter'
|-FunctionTemplateDecl 0x55f8fd7a4a10 <line:82:5, col:67> col:36 yank
| |-TemplateTypeParmDecl 0x55f8fd7a4528 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x55f8fd7a4970 <col:32, col:67> col:36 yank 'int (Filter, Vector<Packet *> &)'
|   |-ParmVarDecl 0x55f8fd7a45d8 <col:41> col:47 'Filter'
|   `-ParmVarDecl 0x55f8fd7a4850 <col:49, col:66> col:67 'Vector<Packet *> &'
|-CXXMethodDecl 0x55f8fd7a4aa0 <line:84:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55f8fd6c7e18 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55f8fd7a7370 <col:36, col:60>
|   `-ReturnStmt 0x55f8fd7a7360 <col:38, col:45>
|     `-ImplicitCastExpr 0x55f8fd7a7348 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55f8fd7a7320 <col:45> 'const char [12]' lvalue "SimpleQueue"
|-CXXMethodDecl 0x55f8fd7a4b68 <line:85:5, col:58> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55f8fd6c7ee0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55f8fd7a73d0 <col:36, col:58>
|   `-ReturnStmt 0x55f8fd7a73c0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55f8fd7a73a8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55f8fd7a7388 <col:45> 'const char []' lvalue Var 0x55f8fd6c8218 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x55f8fd7a4c30 <line:86:5, col:53> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55f8fd6c82a8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55f8fd7a74b0 <col:36, col:53>
|   `-ReturnStmt 0x55f8fd7a74a0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55f8fd7a7488 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55f8fd7a7468 <col:45> 'const char [5]' lvalue "h/lh"
|-CXXMethodDecl 0x55f8fd7a4d80 <line:87:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55f8fd6c8ad0 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55f8fd7a4ce8 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x55f8fd7a5060 <line:89:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55f8fd6c96b0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55f8fd7a4f10 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x55f8fd7a4f88 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd7a51b8 <line:90:5, col:33> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55f8fd6c9900 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55f8fd7a5120 <col:20, col:32> col:33 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd7a5300 <line:91:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55f8fd6ca118 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55f8fd7a5270 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55f8fd7a53c8 <line:92:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x55f8fd6cc100 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x55f8fd7a74e8 <col:39, col:54>
|   `-ReturnStmt 0x55f8fd7a74d8 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x55f8fd7a74c8 <col:48> 'bool' true
|-CXXMethodDecl 0x55f8fd7a56a0 <line:93:5, col:56> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55f8fd6cc3d0 Element::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55f8fd7a5550 <col:26, col:40> col:41 'Vector<String> &'
| `-ParmVarDecl 0x55f8fd7a55c8 <col:43, col:55> col:56 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd7a5870 <line:94:5, col:44> col:10 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x55f8fd6c9b08 Element::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x55f8fd7a5760 <col:21, col:28> col:29 'Element *'
| `-ParmVarDecl 0x55f8fd7a57d8 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd7a5940 <line:95:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55f8fd6c9780 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55f8fd7a5b08 <line:97:5, col:32> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55f8fd6c6c88 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55f8fd7a59f8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x55f8fd7a5a70 <col:25, col:31> col:32 'Packet *'
|-CXXMethodDecl 0x55f8fd7a5c60 <line:98:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x55f8fd6c6e18 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55f8fd7a5bd0 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x55f8fd7a5d08 <line:100:3, col:12> col:3 protected
|-FieldDecl 0x55f8fd7a5d70 <line:102:5, col:24> col:24 referenced _q 'Packet *volatile *'
|-FieldDecl 0x55f8fd7a5dd8 <line:103:5, col:18> col:18 referenced _drops 'volatile int'
|-FieldDecl 0x55f8fd7a5e40 <line:104:5, col:9> col:9 referenced _highwater_length 'int'
|-FriendDecl 0x55f8fd7a5fa8 <line:106:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x55f8fd7a6108 <line:107:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-FriendDecl 0x55f8fd7a6268 <line:108:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x55f8fd7a63c8 <line:109:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-CXXMethodDecl 0x55f8fd7a6530 <line:111:5, col:47> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f8fd7a6418 <col:32, col:39> col:40 'Element *'
| `-ParmVarDecl 0x55f8fd7a6498 <col:42, col:46> col:47 'void *'
|-CXXMethodDecl 0x55f8fd7a6810 <line:112:5, col:75> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f8fd7a65f0 <col:30, col:42> col:43 'const String &'
| |-ParmVarDecl 0x55f8fd7a6668 <col:45, col:52> col:53 'Element *'
| |-ParmVarDecl 0x55f8fd7a66e8 <col:55, col:59> col:60 'void *'
| `-ParmVarDecl 0x55f8fd7a6760 <col:62, col:74> col:75 'ErrorHandler *'
|-CXXConstructorDecl 0x55f8fd7a68f8 <line:65:7> col:7 implicit SimpleQueue 'void (const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x55f8fd7a68f8
| `-ParmVarDecl 0x55f8fd7a6a08 <col:7> col:7 'const SimpleQueue &'
|-CXXConstructorDecl 0x55f8fd7a6aa8 <col:7> col:7 implicit SimpleQueue 'void (SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x55f8fd7a6aa8
| `-ParmVarDecl 0x55f8fd7a6bb8 <col:7> col:7 'SimpleQueue &&'
|-CXXMethodDecl 0x55f8fd7a6c58 <col:7> col:7 implicit operator= 'SimpleQueue &(const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x55f8fd7a6c58
| `-ParmVarDecl 0x55f8fd7a6d68 <col:7> col:7 'const SimpleQueue &'
|-CXXMethodDecl 0x55f8fd7a6dd8 <col:7> col:7 implicit operator= 'SimpleQueue &(SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x55f8fd7a6dd8
| `-ParmVarDecl 0x55f8fd7a6ee8 <col:7> col:7 'SimpleQueue &&'
`-CXXDestructorDecl 0x55f8fd7a6f70 <col:7> col:7 implicit used ~SimpleQueue 'void () noexcept' inline default
  |-Overrides: [ 0x55f8fd6c69b8 Element::~Element 'void () noexcept' ]
  `-CompoundStmt 0x55f8fd7b9440 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  NonVirtualBaseLLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class ActiveNotifier
         0 |   class Notifier (primary base)
         0 |     (Notifier vtable pointer)
         8 |     class NotifierSignal _signal
         8 |       union NotifierSignal::vmvalue _v
         8 |         class atomic_uint32_t * v1
         8 |         struct NotifierSignal::vmpair * vm
        16 |       uint32_t _mask
        24 |     enum Notifier::SearchOp _search_op
        32 |   class Task * _listener1
        40 |   ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierQueue
         0 |   class SimpleQueue (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       108 |     class Storage (base)
       108 |       Storage::index_type _capacity
       112 |       volatile Storage::index_type _head
       116 |       volatile Storage::index_type _tail
       120 |     class Packet *volatile * _q
       128 |     volatile int _drops
       132 |     int _highwater_length
       136 |   int _sleepiness
       144 |   class ActiveNotifier _empty_note
       144 |     class Notifier (primary base)
       144 |       (Notifier vtable pointer)
       152 |       class NotifierSignal _signal
       152 |         union NotifierSignal::vmvalue _v
       152 |           class atomic_uint32_t * v1
       152 |           struct NotifierSignal::vmpair * vm
       160 |         uint32_t _mask
       168 |       enum Notifier::SearchOp _search_op
       176 |     class Task * _listener1
       184 |     ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=192, dsize=192, align=8,
           |  nvsize=192, nvalign=8]

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd77fdd8 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd77fef8 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x55f8fd77ff98 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x55f8fd77fff8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x55f8fd789448 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x55f8fd789448

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd780060 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd780178 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x55f8fd780218 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x55f8fd7802a8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x55f8fd787fe0 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f8fd788418 <col:11>
|-CXXConstructorDecl 0x55f8fd7880e8 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x55f8fd7880e8
| `-ParmVarDecl 0x55f8fd7881f8 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x55f8fd788298 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x55f8fd788298
| `-ParmVarDecl 0x55f8fd7883a8 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x55f8fd789110 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd77dd10 prev 0x55f8fd6c63b0 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f8fd77de08 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x55f8fd77de98 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x55f8fd77dfc8 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x55f8fd77df40 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x55f8fd6c6440 'NotifierSignal'
|   | `-CXXRecord 0x55f8fd77dd10 'NotifierSignal'
|   `-ParenType 0x55f8fd77dee0 'bool () const' sugar
|     `-FunctionProtoType 0x55f8fd20cac0 'bool () const' const cdecl
|       `-BuiltinType 0x55f8fd1632f0 'bool'
|-CXXConstructorDecl 0x55f8fd77e058 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x55f8fd77e298 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd77e110 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x55f8fd77e188 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f8fd77e448 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x55f8fd77e388 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x55f8fd77e540 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x55f8fd77e668 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55f8fd77e728 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55f8fd77e7e8 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55f8fd77e8a8 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55f8fd77e998 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x55f8fd77eb08 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f8fd77ec88 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x55f8fd77ebc8 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x55f8fd77ed50 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x55f8fd77ee10 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x55f8fd77eed0 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x55f8fd77ef90 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x55f8fd77f248 <line:36:5, col:76> col:17
| `-FunctionDecl 0x55f8fd77f188 parent 0x55f8fd163278 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x55f8fd77f040 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x55f8fd77f0b8 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x55f8fd77f468 <line:37:5, col:76> col:17
| `-FunctionDecl 0x55f8fd77f3a8 parent 0x55f8fd163278 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x55f8fd77f298 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x55f8fd77f310 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x55f8fd77f5a8 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x55f8fd77f4b8 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x55f8fd77f6f0 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x55f8fd77f660 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x55f8fd77f9b8 <line:41:5, col:78> col:27
| `-FunctionDecl 0x55f8fd77f8f8 parent 0x55f8fd163278 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x55f8fd77f7a8 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x55f8fd77f820 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x55f8fd77fac8 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x55f8fd77fa08 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x55f8fd77fc48 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x55f8fd77fb80 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x55f8fd77fd10 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x55f8fd77fdb0 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x55f8fd77fdd8 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f8fd77fef8 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x55f8fd77ff98 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x55f8fd77fff8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x55f8fd789448 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x55f8fd789448
|-CXXRecordDecl 0x55f8fd780060 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f8fd780178 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x55f8fd780218 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x55f8fd7802a8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x55f8fd787fe0 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f8fd788418 <col:11>
| |-CXXConstructorDecl 0x55f8fd7880e8 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x55f8fd7880e8
| | `-ParmVarDecl 0x55f8fd7881f8 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x55f8fd788298 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x55f8fd788298
| | `-ParmVarDecl 0x55f8fd7883a8 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x55f8fd789110 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x55f8fd780320 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x55f8fd780380 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x55f8fd7803d0 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x55f8fd7804d0 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55f8fd7806d0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd7804b0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55f8fd780490 <col:14> 'int' 1
| |-EnumConstantDecl 0x55f8fd780560 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55f8fd7806e8 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd780540 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x55f8fd780520 <col:30> 'int' 2
| |-EnumConstantDecl 0x55f8fd7805f0 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55f8fd780700 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd7805d0 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x55f8fd7805b0 <col:52> 'int' 4
| `-EnumConstantDecl 0x55f8fd780680 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x55f8fd780718 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd780660 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x55f8fd780640 <col:23> 'int' 8
|-VarDecl 0x55f8fd780740 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x55f8fd780848 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x55f8fd7807b8 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x55f8fd780a10 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x55f8fd780900 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x55f8fd780978 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x55f8fd780c48 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x55f8fd780af8 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x55f8fd780b70 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd780cf8 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55f8fd780e18 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x55f8fd780ea8 <col:18, col:24> col:18 public
|-EnumDecl 0x55f8fd780ed0 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x55f8fd780fd0 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x55f8fd7810c0 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd780fb0 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x55f8fd780f90 <col:35> 'int' 0
| |-EnumConstantDecl 0x55f8fd781020 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x55f8fd781070 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x55f8fd781308 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x55f8fd7812a0 'void (*)(void *, Notifier *)'
|   `-ParenType 0x55f8fd781240 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x55f8fd781200 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x55f8fd1632d0 'void'
|       |-PointerType 0x55f8fd163ad0 'void *'
|       | `-BuiltinType 0x55f8fd1632d0 'void'
|       `-PointerType 0x55f8fd781160 'Notifier *'
|         `-RecordType 0x55f8fd780d90 'Notifier'
|           `-CXXRecord 0x55f8fd780cf8 'Notifier'
|-CXXConstructorDecl 0x55f8fd781448 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x55f8fd781370 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55f8fd7861e8 <col:35> 'Notifier::SearchOp' EnumConstant 0x55f8fd780fd0 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x55f8fd781658 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x55f8fd781508 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x55f8fd781580 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55f8fd786208 <col:65> 'Notifier::SearchOp' EnumConstant 0x55f8fd780fd0 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x55f8fd781758 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x55f8fd781888 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55f8fd7862c8 <col:37, line:85:5>
|   `-ReturnStmt 0x55f8fd7862b8 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x55f8fd786298 <col:9, col:29> 'bool'
|       `-MemberExpr 0x55f8fd786268 <col:9, col:17> '<bound member function type>' .initialized 0x55f8fd77ef90
|         `-MemberExpr 0x55f8fd786238 <col:9> 'const NotifierSignal' lvalue ->_signal 0x55f8fd785c08
|           `-CXXThisExpr 0x55f8fd786228 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x55f8fd781a90 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x55f8fd781940 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x55f8fd7819b8 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x55f8fd781b88 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x55f8fd781c78 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x55f8fd781d38 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55f8fd781e78 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x55f8fd781de8 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x55f8fd781f40 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x55f8fd782e10 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x55f8fd783080 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x55f8fd782ee0 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f8fd782f60 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x55f8fd7832d8 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x55f8fd783140 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f8fd7831c0 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x55f8fd783460 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x55f8fd783398 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x55f8fd7835a8 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x55f8fd783518 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x55f8fd783730 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x55f8fd783660 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x55f8fd7838a8 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x55f8fd7837e8 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x55f8fd783970 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x55f8fd7839f8 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x55f8fd783bc8 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x55f8fd783a70 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x55f8fd783af0 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x55f8fd783e68 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x55f8fd783c88 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55f8fd783d08 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x55f8fd783d80 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x55f8fd784108 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x55f8fd783f30 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55f8fd783fb0 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x55f8fd784028 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x55f8fd784488 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x55f8fd7841d0 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55f8fd784250 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x55f8fd7842c8 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f8fd784348 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x55f8fd784670 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x55f8fd784558 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x55f8fd7845d8 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x55f8fd7848c8 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x55f8fd784730 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55f8fd7847b0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x55f8fd784828 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x55f8fd784b28 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x55f8fd784990 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55f8fd784a10 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x55f8fd784a88 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x55f8fd784e10 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x55f8fd784bf0 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x55f8fd784c70 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x55f8fd784ce8 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f8fd784d68 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x55f8fd7850c8 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x55f8fd784ee0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55f8fd784f60 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x55f8fd784fe0 <col:78> col:81 'int'
| `-DeprecatedAttr 0x55f8fd785180 <col:98> "" ""
|-CXXMethodDecl 0x55f8fd785468 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x55f8fd785200 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55f8fd785280 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x55f8fd785300 <col:78> col:81 'int'
| |-ParmVarDecl 0x55f8fd785378 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x55f8fd785528 <col:110> "" ""
|-CXXMethodDecl 0x55f8fd785748 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x55f8fd7855a8 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55f8fd785628 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x55f8fd7856a8 <col:79> col:82 'int'
| `-DeprecatedAttr 0x55f8fd785800 <col:99> "" ""
|-CXXMethodDecl 0x55f8fd785aa0 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x55f8fd785880 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55f8fd785900 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x55f8fd785980 <col:79> col:82 'int'
| |-ParmVarDecl 0x55f8fd7859f8 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x55f8fd785b60 <col:111> "" ""
|-AccessSpecDecl 0x55f8fd785bd0 <line:123:3, col:10> col:3 private
|-FieldDecl 0x55f8fd785c08 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x55f8fd785c68 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x55f8fd785de0 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x55f8fd785cd0 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x55f8fd785d48 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x55f8fd785eb8 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x55f8fd785eb8
| `-ParmVarDecl 0x55f8fd785fc8 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x55f8fd786068 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x55f8fd786068
  `-ParmVarDecl 0x55f8fd786178 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd6e4000 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd6e4118 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55f8fd6e41e8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55f8fd6e4248 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55f8fd6e42b0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55f8fd6e4338 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55f8fd6e45a0 <col:16, line:46:5>
|   |-BinaryOperator 0x55f8fd6e44e8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55f8fd6e4408 <col:9> 'TaskLink *' lvalue ->_prev 0x55f8fd6e41e8
|   | | `-CXXThisExpr 0x55f8fd6e43f8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55f8fd6e44d0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55f8fd6e44b0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55f8fd6e4448 <col:17> 'TaskLink *' lvalue ->_next 0x55f8fd6e4248
|   |     | `-CXXThisExpr 0x55f8fd6e4438 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55f8fd6e4498 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55f8fd6e4478 <col:25> 'int' 0
|   `-BinaryOperator 0x55f8fd6e4580 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55f8fd6e4518 <col:9> 'unsigned int' lvalue ->_pass 0x55f8fd6e42b0
|     | `-CXXThisExpr 0x55f8fd6e4508 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55f8fd6e4568 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f8fd6e4548 <col:17> 'int' 0
|-CXXConstructorDecl 0x55f8fd770ad8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55f8fd770ad8
| `-ParmVarDecl 0x55f8fd770be8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55f8fd770c88 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55f8fd770c88
| `-ParmVarDecl 0x55f8fd770d98 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55f8fd770f88 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55f8fd770f88
|-CXXMethodDecl 0x55f8fd771788 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55f8fd771788
| `-ParmVarDecl 0x55f8fd771898 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55f8fd771908 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55f8fd771908
  `-ParmVarDecl 0x55f8fd771a18 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd6476c8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f8fd6477f8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55f8fd647858 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55f8fd6478b8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55f8fd777c98 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55f8fd777d70 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f8fd777d70
|-CXXConstructorDecl 0x55f8fd778028 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55f8fd778028
| `-ParmVarDecl 0x55f8fd778138 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55f8fd7781d8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55f8fd7781d8
  `-ParmVarDecl 0x55f8fd7782e8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd647518 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f8fd647638 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55f8fd6476c8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f8fd6477f8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55f8fd647858 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55f8fd6478b8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55f8fd777c98 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55f8fd777d70 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f8fd777d70
| |-CXXConstructorDecl 0x55f8fd778028 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55f8fd778028
| | `-ParmVarDecl 0x55f8fd778138 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55f8fd7781d8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55f8fd7781d8
|   `-ParmVarDecl 0x55f8fd7782e8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55f8fd647978 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55f8fd6479d8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55f8fd647978 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55f8fd6477f8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55f8fd647a30 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55f8fd647978 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55f8fd647858 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55f8fd647a88 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55f8fd647978 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55f8fd6478b8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55f8fd647ae0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f8fd777ba8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f8fd778508 <col:11>
|-CXXConstructorDecl 0x55f8fd777e78 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55f8fd777e78
| `-ParmVarDecl 0x55f8fd777f88 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55f8fd778388 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55f8fd778388
  `-ParmVarDecl 0x55f8fd778498 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd65f010 prev 0x55f8fd655e50 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd65f108 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55f8fd65f1a8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55f8fd665f70 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f8fd666358 <col:11>
|-CXXConstructorDecl 0x55f8fd666050 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f8fd666138 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f8fd666aa0 <col:11>
|-CXXConstructorDecl 0x55f8fd6661d8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f8fd6662e8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55f8fd6682f8 <col:11>
|-CXXDestructorDecl 0x55f8fd667608 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f8fd36e1b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f8fd36e2c8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f8fd36eb90 <col:11>
|   `-ReturnStmt 0x55f8fd36eb80 <col:11>
|     `-UnaryOperator 0x55f8fd36eb68 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f8fd36eb58 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55f8fd36e338 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f8fd36e448 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55f8fd700a30 <col:11>
    `-ReturnStmt 0x55f8fd700a20 <col:11>
      `-UnaryOperator 0x55f8fd700a08 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f8fd7009f8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd655008 prev 0x55f8fd654d18 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd655100 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55f8fd655190 <col:19, col:25> col:19 public
|-TypedefDecl 0x55f8fd6551c8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55f8fd2ba170 'int32_t' sugar
|   |-Typedef 0x55f8fd1cc268 'int32_t'
|   `-TypedefType 0x55f8fd1a53b0 '__int32_t' sugar
|     |-Typedef 0x55f8fd1a4fc8 '__int32_t'
|     `-BuiltinType 0x55f8fd163370 'int'
|-TypedefDecl 0x55f8fd655230 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55f8fd2ba330 'int64_t' sugar
|   |-Typedef 0x55f8fd1cc2d0 'int64_t'
|   `-TypedefType 0x55f8fd1a54d0 '__int64_t' sugar
|     |-Typedef 0x55f8fd1a50a8 '__int64_t'
|     `-BuiltinType 0x55f8fd163390 'long'
|-EnumDecl 0x55f8fd655288 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55f8fd655400 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55f8fd6553e0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55f8fd6553b8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55f8fd6553a0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55f8fd655370 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55f8fd6554f8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55f8fd6554d8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55f8fd6554b0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55f8fd655498 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55f8fd655470 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55f8fd655450 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55f8fd655548 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55f8fd655650 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f8fd655ba0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd655630 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55f8fd655610 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55f8fd6556e0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f8fd655bb8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6556c0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55f8fd6556a0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55f8fd655770 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f8fd655bd0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd655750 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f8fd655730 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55f8fd655800 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f8fd655be8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6557e0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55f8fd6557c0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55f8fd655890 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f8fd655c00 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd655870 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f8fd655850 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55f8fd655920 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f8fd655c18 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd655900 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f8fd6558e0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55f8fd6559b0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f8fd655c30 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd655990 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55f8fd655970 <col:26> 'int' EnumConstant 0x55f8fd655650 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55f8fd655a80 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f8fd655c48 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd655a60 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55f8fd655a40 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55f8fd655a00 <col:27> 'int' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55f8fd655a20 <col:44> 'int' EnumConstant 0x55f8fd655920 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55f8fd655b50 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55f8fd655c60 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd655b30 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55f8fd655b10 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55f8fd655ad0 <col:27> 'int' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55f8fd655af0 <col:44> 'int' EnumConstant 0x55f8fd655800 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55f8fd655c78 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55f8fd655d80 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55f8fd655dd0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd655d60 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55f8fd655d40 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55f8fd655df8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55f8fd2b9da0 'uninitialized_type'
|   `-CXXRecord 0x55f8fd2b9d08 'uninitialized_type'
|-CXXRecordDecl 0x55f8fd655e50 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55f8fd655f60 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55f8fd660158 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f8fd666368 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f8fd666488 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55f8fd666440 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55f8fd6663d0 <col:9> '<bound member function type>' ->assign 0x55f8fd65aba8
|     | `-CXXThisExpr 0x55f8fd6663c0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55f8fd666400 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55f8fd666470 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f8fd666420 <col:19> 'int' 0
|-CXXConstructorDecl 0x55f8fd6561a8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd656020 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55f8fd656098 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f8fd661ca0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f8fd661c80 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55f8fd660158 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f8fd6664a0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f8fd6665f0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55f8fd666578 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55f8fd666508 <col:9> '<bound member function type>' ->assign 0x55f8fd65aba8
|     | `-CXXThisExpr 0x55f8fd6664f8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f8fd6665c0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f8fd6665a8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f8fd666538 <col:16> 'long' lvalue ParmVar 0x55f8fd656020 'sec' 'long'
|     `-ImplicitCastExpr 0x55f8fd6665d8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd666558 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd656098 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f8fd656408 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd656278 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55f8fd6562f0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f8fd661cd8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f8fd661cb8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55f8fd660158 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f8fd666608 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f8fd666740 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55f8fd6666e0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55f8fd666670 <col:9> '<bound member function type>' ->assign 0x55f8fd65aba8
|     | `-CXXThisExpr 0x55f8fd666660 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f8fd666710 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f8fd6666a0 <col:16> 'int' lvalue ParmVar 0x55f8fd656278 'sec' 'int'
|     `-ImplicitCastExpr 0x55f8fd666728 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd6666c0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd6562f0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f8fd656668 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd6564d8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55f8fd656550 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f8fd661d10 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f8fd661cf0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55f8fd660158 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f8fd666758 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f8fd6668a8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55f8fd666830 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55f8fd6667c0 <col:9> '<bound member function type>' ->assign 0x55f8fd65aba8
|     | `-CXXThisExpr 0x55f8fd6667b0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f8fd666878 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f8fd666860 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f8fd6667f0 <col:16> 'unsigned long' lvalue ParmVar 0x55f8fd6564d8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55f8fd666890 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd666810 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd656550 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f8fd657800 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd656738 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55f8fd6567b0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f8fd661d48 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f8fd661d28 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55f8fd660158 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f8fd6668c0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f8fd666a10 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55f8fd666998 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55f8fd666928 <col:9> '<bound member function type>' ->assign 0x55f8fd65aba8
|     | `-CXXThisExpr 0x55f8fd666918 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f8fd6669e0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f8fd6669c8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f8fd666958 <col:16> 'unsigned int' lvalue ParmVar 0x55f8fd656738 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55f8fd6669f8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd666978 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd6567b0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f8fd657960 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55f8fd6578d0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55f8fd657af8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55f8fd657a38 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55f8fd657d28 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55f8fd657c30 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55f8fd657ed8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55f8fd657e18 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55f8fd660158 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f8fd666ab0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55f8fd666a28 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55f8fd657e18 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f8fd666b10 <col:19, line:214:5>
|-CXXConstructorDecl 0x55f8fd6580a8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55f8fd657fe8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55f8fd660158 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f8fd666b20 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f8fd666bd0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55f8fd666ba8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55f8fd666b78 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55f8fd657fe8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55f8fd658298 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55f8fd658210 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55f8fd654db0 'Timestamp'
|   | `-CXXRecord 0x55f8fd655008 'Timestamp'
|   `-ParenType 0x55f8fd6581b0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55f8fd658180 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55f8fd655350 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55f8fd6551c8 'seconds_type'
|         `-TypedefType 0x55f8fd2ba170 'int32_t' sugar
|           |-Typedef 0x55f8fd1cc268 'int32_t'
|           `-TypedefType 0x55f8fd1a53b0 '__int32_t' sugar
|             |-Typedef 0x55f8fd1a4fc8 '__int32_t'
|             `-BuiltinType 0x55f8fd163370 'int'
|-CXXConversionDecl 0x55f8fd6583d8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f8fd6584a8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55f8fd666cd8 <col:37, line:231:5>
|   `-ReturnStmt 0x55f8fd666cc8 <line:227:9, col:23>
|     `-BinaryOperator 0x55f8fd666ca8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55f8fd666c78 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f8fd666c28 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55f8fd65f1a8
|       |   `-MemberExpr 0x55f8fd666bf8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55f8fd660158
|       |     `-CXXThisExpr 0x55f8fd666be8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f8fd666c90 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55f8fd666c58 <col:23> 'int' 0
|-CXXMethodDecl 0x55f8fd658568 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55f8fd658628 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8fd6586e8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8fd6587a8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8fd658868 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8fd6589d8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55f8fd658918 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55f8fd658b20 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55f8fd658a90 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd658be8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f8fd658c88 <col:54> "" ""
|-CXXMethodDecl 0x55f8fd658d18 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f8fd658db8 <col:54> "" ""
|-CXXMethodDecl 0x55f8fd658e48 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f8fd658ee8 <col:54> "" ""
|-CXXMethodDecl 0x55f8fd658fe8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55f8fd6590b8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55f8fd6591e8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55f8fd6592e0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55f8fd659418 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f8fd666ef0 <col:39, line:271:5>
|   `-ReturnStmt 0x55f8fd666ee0 <line:267:9, col:61>
|     `-CallExpr 0x55f8fd666e80 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55f8fd666e68 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f8fd666cf0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f8fd660488 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55f8fd666eb0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f8fd666d50 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55f8fd65f1a8
|       |   `-MemberExpr 0x55f8fd666d20 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55f8fd660158
|       |     `-CXXThisExpr 0x55f8fd666d10 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f8fd666ec8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55f8fd666df0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55f8fd666dc0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55f8fd666d80 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55f8fd666dd8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55f8fd666da0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655920 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f8fd6594d8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f8fd6670b0 <col:39, line:279:5>
|   `-ReturnStmt 0x55f8fd6670a0 <line:275:9, col:61>
|     `-CallExpr 0x55f8fd667040 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55f8fd667028 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f8fd666f08 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f8fd660488 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55f8fd667070 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f8fd666f68 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55f8fd65f1a8
|       |   `-MemberExpr 0x55f8fd666f38 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55f8fd660158
|       |     `-CXXThisExpr 0x55f8fd666f28 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f8fd667088 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55f8fd667008 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55f8fd666fd8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55f8fd666f98 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55f8fd666ff0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55f8fd666fb8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655800 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f8fd659598 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f8fd667248 <col:39, line:287:5>
|   `-ReturnStmt 0x55f8fd667238 <line:283:9, col:53>
|     `-BinaryOperator 0x55f8fd667218 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55f8fd6671e8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f8fd667108 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55f8fd65f1a8
|       |   `-MemberExpr 0x55f8fd6670d8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55f8fd660158
|       |     `-CXXThisExpr 0x55f8fd6670c8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f8fd667200 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55f8fd6671c8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f8fd6671a8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55f8fd667178 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f8fd667138 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655650 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f8fd667190 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f8fd667158 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f8fd659688 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f8fd6684e0 <col:40, line:293:5>
|   |-DeclStmt 0x55f8fd667390 <line:291:9, col:48>
|   | `-VarDecl 0x55f8fd667270 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55f8fd667370 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55f8fd667318 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55f8fd6672e8 <col:22> '<bound member function type>' ->subsec 0x55f8fd658628
|   |     |   `-CXXThisExpr 0x55f8fd6672d8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55f8fd667358 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55f8fd667338 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655a80 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f8fd6684d0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55f8fd6684b8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55f8fd668488 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f8fd668470 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55f8fd668450 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55f8fd668420 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55f8fd6681b8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55f8fd6681a0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55f8fd6673a8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55f8fd667270 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55f8fd6683c0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55f8fd6683a8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55f8fd668378 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55f8fd6681d0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55f8fd668140 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55f8fd668128 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55f8fd6680d8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f8fd654f58 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55f8fd668078 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55f8fd6673d8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55f8fd6673c8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55f8fd6680c0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55f8fd6680a8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55f8fd667898 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55f8fd667400 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55f8fd667490 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55f8fd667460 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55f8fd667420 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655a80 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55f8fd667478 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55f8fd667440 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55f8fd667270 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55f8fd6683f0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55f8fd668188 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55f8fd668178 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55f8fd659748 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f8fd668a38 <col:40, line:302:5>
|   |-DeclStmt 0x55f8fd668630 <line:297:9, col:48>
|   | `-VarDecl 0x55f8fd668510 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55f8fd668610 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55f8fd6685b8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55f8fd668588 <col:22> '<bound member function type>' ->subsec 0x55f8fd658628
|   |     |   `-CXXThisExpr 0x55f8fd668578 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55f8fd6685f8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55f8fd6685d8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655b50 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f8fd668a28 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55f8fd668a10 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55f8fd6689e0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f8fd6689c8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55f8fd6689a8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55f8fd668978 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55f8fd6688a0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55f8fd668888 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55f8fd668648 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55f8fd668510 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55f8fd668918 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55f8fd668900 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55f8fd6688d0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55f8fd6688b8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55f8fd668828 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55f8fd668810 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55f8fd6687f0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f8fd654f58 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55f8fd668790 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55f8fd668678 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55f8fd668668 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55f8fd6687d8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55f8fd6687c0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55f8fd668750 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55f8fd6686a0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55f8fd668730 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55f8fd668700 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55f8fd6686c0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655b50 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55f8fd668718 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55f8fd6686e0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55f8fd668510 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55f8fd668948 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55f8fd668870 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55f8fd668860 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55f8fd659808 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f8fd668ac0 <col:40, line:306:5>
|   `-ReturnStmt 0x55f8fd668ab0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55f8fd668a80 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55f8fd668a68 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f8fd668a58 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55f8fd6599a8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55f8fd6598b8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd659b78 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55f8fd659a80 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55f8fd659c68 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55f8fd659dd8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55f8fd659d18 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55f8fd668c08 <col:56, line:320:5>
|   `-ReturnStmt 0x55f8fd668bf8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55f8fd668be0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55f8fd668bb0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f8fd668b98 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f8fd668b58 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f8fd668b28 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f8fd668ae8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f8fd659d18 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55f8fd668b40 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f8fd668b08 <col:31> 'int' 0
|-CXXMethodDecl 0x55f8fd65a018 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd659e90 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f8fd659f08 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd668dd8 <col:72, line:326:5>
|   `-ReturnStmt 0x55f8fd668dc8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55f8fd668db0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f8fd668d80 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f8fd668d68 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f8fd668d28 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f8fd668d10 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f8fd668c30 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f8fd659e90 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f8fd668cd0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f8fd668cb8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f8fd668c50 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f8fd65e900 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f8fd668cf8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f8fd668c70 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd659f08 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd65a1c8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f8fd65a0d8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f8fd6694a0 <col:56, line:337:5>
|   |-DeclStmt 0x55f8fd6690d8 <line:329:9, col:51>
|   | `-VarDecl 0x55f8fd668e00 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f8fd6690c0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f8fd669090 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f8fd669078 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f8fd669060 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f8fd669030 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f8fd669018 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f8fd669000 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f8fd668ef0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f8fd669290 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f8fd669140 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f8fd65f1a8
|   | | `-MemberExpr 0x55f8fd669110 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f8fd660158
|   | |   `-DeclRefExpr 0x55f8fd6690f0 <col:9> 'Timestamp' lvalue Var 0x55f8fd668e00 't' 'Timestamp'
|   | `-BinaryOperator 0x55f8fd669270 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55f8fd669240 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f8fd669170 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f8fd65a0d8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f8fd669258 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55f8fd669220 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55f8fd669200 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55f8fd6691d0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55f8fd669190 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55f8fd6691e8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55f8fd6691b0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655920 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f8fd669488 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55f8fd669458 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f8fd669440 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f8fd669420 <col:16> 'Timestamp' lvalue Var 0x55f8fd668e00 't' 'Timestamp'
|-CXXMethodDecl 0x55f8fd65a390 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd65a280 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f8fd65a2f8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd669658 <col:72, line:343:5>
|   `-ReturnStmt 0x55f8fd669648 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55f8fd669630 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f8fd669600 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f8fd6695e8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f8fd6695a8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f8fd669590 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f8fd6694d8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f8fd65a280 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f8fd669550 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f8fd669538 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f8fd6694f8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f8fd65ea48 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f8fd669578 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f8fd669518 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd65a2f8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd65a4e0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f8fd65a450 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f8fd669aa0 <col:56, line:354:5>
|   |-DeclStmt 0x55f8fd669848 <line:346:9, col:51>
|   | `-VarDecl 0x55f8fd669680 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f8fd669830 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f8fd669800 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f8fd6697e8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f8fd6697d0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f8fd6697a0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f8fd669788 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f8fd669770 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f8fd669740 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f8fd669a00 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f8fd6698b0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f8fd65f1a8
|   | | `-MemberExpr 0x55f8fd669880 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f8fd660158
|   | |   `-DeclRefExpr 0x55f8fd669860 <col:9> 'Timestamp' lvalue Var 0x55f8fd669680 't' 'Timestamp'
|   | `-BinaryOperator 0x55f8fd6699e0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55f8fd6699b0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f8fd6698e0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f8fd65a450 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f8fd6699c8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55f8fd669990 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55f8fd669970 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55f8fd669940 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55f8fd669900 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55f8fd669958 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55f8fd669920 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655800 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f8fd669a88 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55f8fd669a58 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f8fd669a40 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f8fd669a20 <col:16> 'Timestamp' lvalue Var 0x55f8fd669680 't' 'Timestamp'
|-CXXMethodDecl 0x55f8fd65a6a8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd65a598 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f8fd65a610 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd669c58 <col:72, line:360:5>
|   `-ReturnStmt 0x55f8fd669c48 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55f8fd669c30 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f8fd669c00 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f8fd669be8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f8fd669ba8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f8fd669b90 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f8fd669ad8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f8fd65a598 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f8fd669b50 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f8fd669b38 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f8fd669af8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f8fd65eb90 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f8fd669b78 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f8fd669b18 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd65a610 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd65a7f8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f8fd65a768 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f8fd6765c8 <col:56, line:371:5>
|   |-DeclStmt 0x55f8fd669e48 <line:363:9, col:51>
|   | `-VarDecl 0x55f8fd669c80 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f8fd669e30 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f8fd669e00 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f8fd669de8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f8fd669dd0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f8fd669da0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f8fd669d88 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f8fd669d70 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f8fd669d40 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f8fd676528 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f8fd669eb0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f8fd65f1a8
|   | | `-MemberExpr 0x55f8fd669e80 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f8fd660158
|   | |   `-DeclRefExpr 0x55f8fd669e60 <col:9> 'Timestamp' lvalue Var 0x55f8fd669c80 't' 'Timestamp'
|   | `-CallExpr 0x55f8fd6764c8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55f8fd6764b0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55f8fd669ee0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f8fd660488 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55f8fd6764f8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f8fd669f00 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f8fd65a768 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f8fd676510 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55f8fd676490 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55f8fd676460 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55f8fd669f20 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655650 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55f8fd676478 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55f8fd669f40 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f8fd6765b0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55f8fd676580 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f8fd676568 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f8fd676548 <col:16> 'Timestamp' lvalue Var 0x55f8fd669c80 't' 'Timestamp'
|-CXXMethodDecl 0x55f8fd65a8e8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55f8fd676708 <col:39, line:377:5>
|   `-ReturnStmt 0x55f8fd6766f8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55f8fd6766e0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55f8fd6766b0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f8fd676698 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f8fd676658 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55f8fd676600 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55f8fd676640 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f8fd676620 <col:29> 'int' 1
|-CXXMethodDecl 0x55f8fd65a9a8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55f8fd6767e8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55f8fd6767a0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55f8fd676730 <col:9> '<bound member function type>' ->assign 0x55f8fd65aba8
|     | `-CXXThisExpr 0x55f8fd676720 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55f8fd676760 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55f8fd6767d0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f8fd676780 <col:19> 'int' 0
|-CXXMethodDecl 0x55f8fd65aba8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd65aa58 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f8fd65aad0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f8fd661d80 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f8fd661d60 <col:60> 'int' 0
| `-CompoundStmt 0x55f8fd6769e0 <col:63, line:395:5>
|   `-BinaryOperator 0x55f8fd6769c0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55f8fd676840 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55f8fd65f1a8
|     | `-MemberExpr 0x55f8fd676810 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55f8fd660158
|     |   `-CXXThisExpr 0x55f8fd676800 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55f8fd6769a0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55f8fd676930 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55f8fd6768d0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55f8fd6768b8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55f8fd6768a0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55f8fd676870 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f8fd65aa58 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55f8fd676918 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55f8fd6768f8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55f8fd676988 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55f8fd676970 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55f8fd676950 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd65aad0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd65ad78 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd65ac68 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f8fd65ace0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd676b38 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55f8fd676af0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55f8fd676a08 <col:9> '<bound member function type>' ->assign 0x55f8fd65aba8
|     | `-CXXThisExpr 0x55f8fd6769f8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f8fd676b20 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f8fd676a38 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f8fd65ac68 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55f8fd676ab0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55f8fd676a98 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f8fd676a58 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f8fd65ea48 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55f8fd676ad8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f8fd676a78 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd65ace0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd65af48 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd65ae38 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f8fd65aeb0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd676c90 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55f8fd676c48 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55f8fd676b60 <col:9> '<bound member function type>' ->assign 0x55f8fd65aba8
|     | `-CXXThisExpr 0x55f8fd676b50 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f8fd676c78 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f8fd676b90 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f8fd65ae38 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55f8fd676c08 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55f8fd676bf0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f8fd676bb0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f8fd65eb90 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55f8fd676c30 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f8fd676bd0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd65aeb0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd65b118 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd65b008 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f8fd65b080 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f8fd661db8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f8fd661d98 <col:57> 'int' 0
| `-DeprecatedAttr 0x55f8fd65b1c8 <col:75> "" ""
|-CXXMethodDecl 0x55f8fd65b358 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd65b248 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f8fd65b2c0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f8fd65b408 <col:74> "" ""
|-CXXMethodDecl 0x55f8fd65b598 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f8fd65b488 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f8fd65b500 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f8fd65b648 <col:74> "" ""
|-CXXMethodDecl 0x55f8fd65b6d8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55f8fd65b778 <col:42> "" ""
|-CXXMethodDecl 0x55f8fd65dfb0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55f8fd65de90 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55f8fd65df10 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55f8fd65e080 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f8fd65e140 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55f8fd65e1e0 <col:20>
| `-OptimizeNoneAttr 0x55f8fd65e238 <col:30>
|-CXXMethodDecl 0x55f8fd65e280 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f8fd65e340 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55f8fd65e400 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f8fd65e4c0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55f8fd65e580 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f8fd65e640 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55f8fd65e700 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55f8fd65e7c0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55f8fd65e900 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd65e870 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd676dd8 <col:58, line:512:5>
|   `-ReturnStmt 0x55f8fd676dc8 <line:511:9, col:53>
|     `-BinaryOperator 0x55f8fd676da8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f8fd676d78 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f8fd676ca8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd65e870 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f8fd676d90 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f8fd676d58 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f8fd676d38 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f8fd676d08 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f8fd676cc8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f8fd676d20 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f8fd676ce8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655920 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f8fd65ea48 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd65e9b8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd676f20 <col:58, line:516:5>
|   `-ReturnStmt 0x55f8fd676f10 <line:515:9, col:53>
|     `-BinaryOperator 0x55f8fd676ef0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f8fd676ec0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f8fd676df0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd65e9b8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f8fd676ed8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f8fd676ea0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f8fd676e80 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f8fd676e50 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f8fd676e10 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f8fd676e68 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f8fd676e30 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655800 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f8fd65eb90 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd65eb00 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd677068 <col:58, line:520:5>
|   `-ReturnStmt 0x55f8fd677058 <line:519:9, col:53>
|     `-BinaryOperator 0x55f8fd677038 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f8fd677008 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f8fd676f38 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd65eb00 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f8fd677020 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f8fd676fe8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f8fd676fc8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55f8fd676f98 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f8fd676f58 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655650 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f8fd676fb0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f8fd676f78 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f8fd65ecd8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd65ec48 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd6771b0 <col:60, line:524:5>
|   `-ReturnStmt 0x55f8fd6771a0 <line:523:9, col:55>
|     `-BinaryOperator 0x55f8fd677180 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f8fd677150 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f8fd677080 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd65ec48 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f8fd677168 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f8fd677130 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f8fd677110 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55f8fd6770e0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f8fd6770a0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f8fd6770f8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f8fd6770c0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655920 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f8fd65ee20 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd65ed90 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd6772f8 <col:60, line:528:5>
|   `-ReturnStmt 0x55f8fd6772e8 <line:527:9, col:55>
|     `-BinaryOperator 0x55f8fd6772c8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f8fd677298 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f8fd6771c8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd65ed90 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f8fd6772b0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f8fd677278 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f8fd677258 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55f8fd677228 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f8fd6771e8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f8fd677240 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f8fd677208 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655800 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f8fd65ef68 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd65eed8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd677440 <col:60, line:532:5>
|   `-ReturnStmt 0x55f8fd677430 <line:531:9, col:55>
|     `-BinaryOperator 0x55f8fd677410 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f8fd6773e0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f8fd677310 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd65eed8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f8fd6773f8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f8fd6773c0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f8fd6773a0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f8fd677370 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f8fd677330 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd655650 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f8fd677388 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f8fd677350 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f8fd6559b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55f8fd65f010 prev 0x55f8fd655e50 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f8fd65f108 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55f8fd65f1a8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55f8fd665f70 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f8fd666358 <col:11>
| |-CXXConstructorDecl 0x55f8fd666050 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f8fd666138 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55f8fd666aa0 <col:11>
| |-CXXConstructorDecl 0x55f8fd6661d8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f8fd6662e8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55f8fd6682f8 <col:11>
| |-CXXDestructorDecl 0x55f8fd667608 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f8fd36e1b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f8fd36e2c8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55f8fd36eb90 <col:11>
| |   `-ReturnStmt 0x55f8fd36eb80 <col:11>
| |     `-UnaryOperator 0x55f8fd36eb68 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f8fd36eb58 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55f8fd36e338 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55f8fd36e448 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55f8fd700a30 <col:11>
|     `-ReturnStmt 0x55f8fd700a20 <col:11>
|       `-UnaryOperator 0x55f8fd700a08 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f8fd7009f8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55f8fd65f210 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55f8fd65f310 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f8fd65f510 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd65f2f0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55f8fd65f2d0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55f8fd65f3a0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f8fd65f528 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd65f380 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55f8fd65f360 <col:23> 'int' 1
| |-EnumConstantDecl 0x55f8fd65f430 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f8fd65f540 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd65f410 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55f8fd65f3f0 <col:23> 'int' 2
| `-EnumConstantDecl 0x55f8fd65f4c0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55f8fd65f558 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd65f4a0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55f8fd65f480 <col:27> 'int' 3
|-CXXMethodDecl 0x55f8fd65f598 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55f8fd65f660 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55f8fd65f868 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55f8fd65f710 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55f8fd65f790 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55f8fd661dd0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55f8fd65fa78 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55f8fd65f928 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55f8fd65f9a0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f8fd65fb48 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55f8fd65fc08 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55f8fd65fd78 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55f8fd65fcb8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55f8fd65fe40 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f8fd65ff00 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55f8fd65ffc0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f8fd660080 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55f8fd660120 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55f8fd660158 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55f8fd6601c8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55f8fd677458 <col:27, line:684:5>
|-CXXMethodDecl 0x55f8fd660288 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55f8fd677468 <col:27, line:696:5>
|-CXXMethodDecl 0x55f8fd660488 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd660338 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55f8fd6603b0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd6775f0 <col:66, line:700:5>
|   `-ReturnStmt 0x55f8fd6775e0 <line:699:9, col:31>
|     `-CallExpr 0x55f8fd677580 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55f8fd677568 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f8fd677518 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55f8fd4e2838 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55f8fd6775b0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55f8fd6774d8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f8fd660338 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55f8fd6775c8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f8fd6774f8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd6603b0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd6607f8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f8fd660548 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55f8fd6605c0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55f8fd660638 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55f8fd6606b0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd677940 <col:64, line:707:5>
|   |-DeclStmt 0x55f8fd677680 <line:704:9, col:24>
|   | `-VarDecl 0x55f8fd677618 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55f8fd677890 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55f8fd677698 <col:9> 'int32_t':'int' lvalue ParmVar 0x55f8fd6605c0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55f8fd677878 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55f8fd677810 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55f8fd6777f8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f8fd677778 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55f8fd4e7b08 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55f8fd677848 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55f8fd677718 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f8fd660638 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55f8fd677860 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55f8fd677738 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd6606b0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55f8fd677758 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55f8fd677618 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55f8fd677920 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55f8fd6778b0 <col:9> 'int32_t':'int' lvalue ParmVar 0x55f8fd660548 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55f8fd677908 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55f8fd6778f0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55f8fd6778d0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55f8fd677618 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55f8fd660a98 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55f8fd6608c8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55f8fd660940 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55f8fd6609b8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55f8fd660d38 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55f8fd660b60 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55f8fd660bd8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55f8fd660c50 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55f8fd660ec8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55f8fd660e00 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55f8fd6610c8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55f8fd660f80 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55f8fd660ff8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55f8fd661398 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55f8fd6612d8 parent 0x55f8fd163278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f8fd661188 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55f8fd661200 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55f8fd6615b8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55f8fd6614f8 parent 0x55f8fd163278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f8fd6613e8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55f8fd661460 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55f8fd661780 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55f8fd6616c8 parent 0x55f8fd163278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55f8fd661608 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55f8fd661a08 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55f8fd661948 parent 0x55f8fd163278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f8fd6617f8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55f8fd661870 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55f8fd661c28 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55f8fd661b68 parent 0x55f8fd163278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f8fd661a58 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55f8fd661ad0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55f8fd6674b0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f8fd667598 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55f8fd660158 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f8fd668008 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55f8fd667fc0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55f8fd660158
| |     `-DeclRefExpr 0x55f8fd667fa0 <col:7> 'const Timestamp' lvalue ParmVar 0x55f8fd667598 '' 'const Timestamp &'
| `-CompoundStmt 0x55f8fd668068 <col:7>
|-CXXConstructorDecl 0x55f8fd667718 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f8fd667828 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55f8fd660158 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f8fd668308 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55f8fd6682b0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55f8fd660158
| |     `-CXXStaticCastExpr 0x55f8fd668280 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55f8fd668250 <col:7> 'Timestamp' lvalue ParmVar 0x55f8fd667828 '' 'Timestamp &&'
| `-CompoundStmt 0x55f8fd668368 <col:7>
|-CXXDestructorDecl 0x55f8fd6678d8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f8fd36e008 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f8fd36e118 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55f8fd36ec08 <col:7>
|   |-CXXMemberCallExpr 0x55f8fd36eba8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55f8fd36eae8 <col:7> '<bound member function type>' .operator= 0x55f8fd36e1b8
|   | | `-MemberExpr 0x55f8fd36e9f8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55f8fd660158
|   | |   `-CXXThisExpr 0x55f8fd36e9e8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55f8fd36eab8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55f8fd660158
|   |   `-DeclRefExpr 0x55f8fd36ea98 <col:7> 'const Timestamp' lvalue ParmVar 0x55f8fd36e118 '' 'const Timestamp &'
|   `-ReturnStmt 0x55f8fd36ebf8 <col:7>
|     `-UnaryOperator 0x55f8fd36ebe0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f8fd36ebd0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55f8fd36e4b8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f8fd36e5c8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55f8fd700aa8 <col:7>
    |-CXXMemberCallExpr 0x55f8fd700a48 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55f8fd7009b0 <col:7> '<bound member function type>' .operator= 0x55f8fd36e338
    | | `-MemberExpr 0x55f8fd700880 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55f8fd660158
    | |   `-CXXThisExpr 0x55f8fd700870 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55f8fd700980 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55f8fd660158
    |   `-CXXStaticCastExpr 0x55f8fd700950 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55f8fd700920 <col:7> 'Timestamp' lvalue ParmVar 0x55f8fd36e5c8 '' 'Timestamp &&'
    `-ReturnStmt 0x55f8fd700a98 <col:7>
      `-UnaryOperator 0x55f8fd700a80 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f8fd700a70 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f8fd7057a0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55f8fd705978 prev 0x55f8fd7057a0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f8fd705a08 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f8fd705a30 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f8fd163370 'int'
|-TypedefDecl 0x55f8fd70b430 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55f8fd70b3e0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55f8fd705ee0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55f8fd705de0 'type'
|     `-TemplateSpecializationType 0x55f8fd705d70 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f8fd705c50 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55f8fd705c30 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f8fd705c10 <col:24> 'unsigned long' 16
|       `-RecordType 0x55f8fd705d50 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55f8fd705c70 'char_array'
|-TypedefDecl 0x55f8fd70b4e8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55f8fd70b4b0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55f8fd70b490 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55f8fd70b430 'type'
|     `-ElaboratedType 0x55f8fd70b3e0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55f8fd705ee0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55f8fd705de0 'type'
|         `-TemplateSpecializationType 0x55f8fd705d70 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f8fd705c50 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55f8fd705c30 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f8fd705c10 <col:24> 'unsigned long' 16
|           `-RecordType 0x55f8fd705d50 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55f8fd705c70 'char_array'
|-CXXMethodDecl 0x55f8fd70b668 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55f8fd70b578 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55f8fd70b758 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f8fd70b838 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f8fd70b838
|-CXXMethodDecl 0x55f8fd70bb08 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55f8fd70ba10 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55f8fd70bd48 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55f8fd70bbc0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f8fd70bc38 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f8fd70bf18 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55f8fd70be08 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f8fd70be80 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f8fd70c078 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55f8fd70c148 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55f8fd70c398 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55f8fd70c208 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55f8fd70c280 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f8fd70c5f8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55f8fd70c468 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55f8fd70c4e0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f8fd70c7b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55f8fd70c6c8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f8fd70c978 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55f8fd70c880 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f8fd70ca30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f8fd70cae0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f8fd70cd18 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55f8fd70cb90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f8fd70cc08 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55f8fd70cfb8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55f8fd70cec0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55f8fd70d080 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55f8fd70d0d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f8fd70d120 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f8fd7040b8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55f8fd7042c8 prev 0x55f8fd7040b8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f8fd705710 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55f8fd7056c0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55f8fd7056a0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55f8fd705550 'type'
|     `-SubstTemplateTypeParmType 0x55f8fd705370 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55f8fd42a9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd42a968 'T'
|       `-RecordType 0x55f8fd704ec0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55f8fd704dd8 'sized_array_memory'
|-FieldDecl 0x55f8fd70d170 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55f8fd70d1c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f8fd70d1f8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55f8fd704360 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f8fd462658 'T'
|   `-RecordType 0x55f8fd7032c0 'TimerSet::heap_element'
|     `-CXXRecord 0x55f8fd703230 'heap_element'
|-TypedefDecl 0x55f8fd70d2b8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55f8fd70d280 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55f8fd704360 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f8fd462658 'T'
|     `-RecordType 0x55f8fd7032c0 'TimerSet::heap_element'
|       `-CXXRecord 0x55f8fd703230 'heap_element'
|-TypedefDecl 0x55f8fd70d348 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55f8fd70d310 'const TimerSet::heap_element &'
|   `-QualType 0x55f8fd704361 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55f8fd704360 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-RecordType 0x55f8fd7032c0 'TimerSet::heap_element'
|         `-CXXRecord 0x55f8fd703230 'heap_element'
|-TypedefDecl 0x55f8fd70d3d8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55f8fd70d3a0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55f8fd704360 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f8fd462658 'T'
|     `-RecordType 0x55f8fd7032c0 'TimerSet::heap_element'
|       `-CXXRecord 0x55f8fd703230 'heap_element'
|-TypedefDecl 0x55f8fd70d498 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55f8fd70d460 'const TimerSet::heap_element *'
|   `-QualType 0x55f8fd704361 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55f8fd704360 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-RecordType 0x55f8fd7032c0 'TimerSet::heap_element'
|         `-CXXRecord 0x55f8fd703230 'heap_element'
|-TypedefDecl 0x55f8fd70e300 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55f8fd70e2b0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55f8fd70e290 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55f8fd70e1c8 'type'
|     `-LValueReferenceType 0x55f8fd70e190 'const TimerSet::heap_element &'
|       `-QualType 0x55f8fd70df31 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55f8fd70df30 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55f8fd435090 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f8fd435038 'T'
|           `-RecordType 0x55f8fd7032c0 'TimerSet::heap_element'
|             `-CXXRecord 0x55f8fd703230 'heap_element'
|-TypedefDecl 0x55f8fd70e368 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55f8fd70d310 'const TimerSet::heap_element &'
|   `-QualType 0x55f8fd704361 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55f8fd704360 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-RecordType 0x55f8fd7032c0 'TimerSet::heap_element'
|         `-CXXRecord 0x55f8fd703230 'heap_element'
|-TypedefDecl 0x55f8fd70e3c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f8fd163370 'int'
|-TypedefDecl 0x55f8fd70e428 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55f8fd70d3a0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55f8fd704360 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f8fd462658 'T'
|     `-RecordType 0x55f8fd7032c0 'TimerSet::heap_element'
|       `-CXXRecord 0x55f8fd703230 'heap_element'
|-TypedefDecl 0x55f8fd70e490 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55f8fd70d460 'const TimerSet::heap_element *'
|   `-QualType 0x55f8fd704361 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55f8fd704360 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-RecordType 0x55f8fd7032c0 'TimerSet::heap_element'
|         `-CXXRecord 0x55f8fd703230 'heap_element'
|-EnumDecl 0x55f8fd70e4e8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f8fd70e5e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f8fd70e5c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f8fd463d38 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f8fd463d10 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f8fd463cf0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f8fd70e668 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f8fd70e8f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd70e720 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f8fd70e7c0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55f8fd70ebb8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55f8fd70eaa0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55f8fd70ee78 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55f8fd70ed60 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55f8fd70f1c0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55f8fd70f0a0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55f8fd70f4d0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55f8fd70f3b0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55f8fd70f7c0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd70f608 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f8fd70f680 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55f8fd70f918 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55f8fd70f9f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd70fa50 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd70fa98 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55f8fd70fb48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd70fba0 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd70fc68 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd70fd18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd70fd70 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd70fdb8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd70fe68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd70fec0 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd70ff08 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd70ffb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd710010 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd710058 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd710108 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd710160 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd710188 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f8fd710238 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f8fd7102e8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55f8fd7104a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd710398 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f8fd710410 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55f8fd7105f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f8fd710568 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd7107a8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55f8fd7106b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f8fd710860 <col:20>
| `-OptimizeNoneAttr 0x55f8fd7108b8 <col:30>
|-CXXMethodDecl 0x55f8fd7109d8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55f8fd7108e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f8fd710a90 <col:20>
| `-OptimizeNoneAttr 0x55f8fd710ae8 <col:30>
|-CXXMethodDecl 0x55f8fd710ba0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f8fd710b10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd710ce8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f8fd710c58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd710e18 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55f8fd710f48 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55f8fd711018 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55f8fd7110e8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55f8fd711228 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f8fd711198 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd711370 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f8fd7112e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd7114b8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f8fd711428 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f8fd711570 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f8fd711670 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f8fd7115e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f8fd711728 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f8fd7117e8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55f8fd7118e8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55f8fd711a98 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55f8fd7119a8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55f8fd712288 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f8fd711b50 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55f8fd7121e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55f8fd7120e8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55f8fd712368 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f8fd7124b8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55f8fd712428 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55f8fd712570 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f8fd7127b8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd712630 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55f8fd7126a8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55f8fd712a10 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55f8fd712888 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55f8fd712c68 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55f8fd712ad8 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55f8fd712b50 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55f8fd712d28 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f8fd712f88 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55f8fd712e90 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55f8fd713058 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f8fd713058

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f8fd714580 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55f8fd714758 prev 0x55f8fd714580 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f8fd7147e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f8fd714810 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f8fd163370 'int'
|-TypedefDecl 0x55f8fd7163e0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55f8fd716390 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55f8fd714cc0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55f8fd714bc0 'type'
|     `-TemplateSpecializationType 0x55f8fd714b50 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f8fd714a30 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55f8fd714a10 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f8fd7149f0 <col:24> 'unsigned long' 8
|       `-RecordType 0x55f8fd714b30 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55f8fd714a50 'char_array'
|-TypedefDecl 0x55f8fd716498 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55f8fd716460 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55f8fd716440 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55f8fd7163e0 'type'
|     `-ElaboratedType 0x55f8fd716390 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55f8fd714cc0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55f8fd714bc0 'type'
|         `-TemplateSpecializationType 0x55f8fd714b50 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f8fd714a30 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55f8fd714a10 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f8fd7149f0 <col:24> 'unsigned long' 8
|           `-RecordType 0x55f8fd714b30 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55f8fd714a50 'char_array'
|-CXXMethodDecl 0x55f8fd716618 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55f8fd716528 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55f8fd716708 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f8fd7167e8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f8fd7167e8
|-CXXMethodDecl 0x55f8fd716ab8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55f8fd7169c0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55f8fd716cf8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f8fd716b70 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f8fd716be8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f8fd716ec8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f8fd716db8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f8fd716e30 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f8fd717028 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55f8fd7170f8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55f8fd717348 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f8fd7171b8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55f8fd717230 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f8fd7175a8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55f8fd717418 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55f8fd717490 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f8fd717768 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55f8fd717678 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f8fd717928 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55f8fd717830 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f8fd7179e0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f8fd717a90 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f8fd717cc8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f8fd717b40 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f8fd717bb8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f8fd717f68 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55f8fd717e70 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55f8fd718030 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55f8fd718080 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f8fd7180d0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f8fd7131a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55f8fd7133a8 prev 0x55f8fd7131a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f8fd7144f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f8fd7144a0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55f8fd714480 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55f8fd714330 'type'
|     `-SubstTemplateTypeParmType 0x55f8fd714150 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f8fd42a9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd42a968 'T'
|       `-RecordType 0x55f8fd713ca0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f8fd713bb8 'sized_array_memory'
|-FieldDecl 0x55f8fd718120 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f8fd718170 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f8fd7181a8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55f8fd713440 'Timer *' sugar
|   |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f8fd462658 'T'
|   `-PointerType 0x55f8fd6c7240 'Timer *'
|     `-RecordType 0x55f8fd6c6390 'Timer'
|       `-CXXRecord 0x55f8fd64a028 'Timer'
|-TypedefDecl 0x55f8fd718268 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55f8fd718230 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55f8fd713440 'Timer *' sugar
|     |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f8fd462658 'T'
|     `-PointerType 0x55f8fd6c7240 'Timer *'
|       `-RecordType 0x55f8fd6c6390 'Timer'
|         `-CXXRecord 0x55f8fd64a028 'Timer'
|-TypedefDecl 0x55f8fd718328 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55f8fd7182f0 'Timer *const &'
|   `-QualType 0x55f8fd713441 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55f8fd713440 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-PointerType 0x55f8fd6c7240 'Timer *'
|         `-RecordType 0x55f8fd6c6390 'Timer'
|           `-CXXRecord 0x55f8fd64a028 'Timer'
|-TypedefDecl 0x55f8fd7183e8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55f8fd7183b0 'Timer **'
|   `-SubstTemplateTypeParmType 0x55f8fd713440 'Timer *' sugar
|     |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f8fd462658 'T'
|     `-PointerType 0x55f8fd6c7240 'Timer *'
|       `-RecordType 0x55f8fd6c6390 'Timer'
|         `-CXXRecord 0x55f8fd64a028 'Timer'
|-TypedefDecl 0x55f8fd7184a8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55f8fd718470 'Timer *const *'
|   `-QualType 0x55f8fd713441 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55f8fd713440 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-PointerType 0x55f8fd6c7240 'Timer *'
|         `-RecordType 0x55f8fd6c6390 'Timer'
|           `-CXXRecord 0x55f8fd64a028 'Timer'
|-TypedefDecl 0x55f8fd719080 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55f8fd719030 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55f8fd719010 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55f8fd718fa0 'type'
|     `-SubstTemplateTypeParmType 0x55f8fd718d60 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f8fd4357c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd435770 'T'
|       `-PointerType 0x55f8fd6c7240 'Timer *'
|         `-RecordType 0x55f8fd6c6390 'Timer'
|           `-CXXRecord 0x55f8fd64a028 'Timer'
|-TypedefDecl 0x55f8fd7190e8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55f8fd7182f0 'Timer *const &'
|   `-QualType 0x55f8fd713441 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55f8fd713440 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-PointerType 0x55f8fd6c7240 'Timer *'
|         `-RecordType 0x55f8fd6c6390 'Timer'
|           `-CXXRecord 0x55f8fd64a028 'Timer'
|-TypedefDecl 0x55f8fd719140 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f8fd163370 'int'
|-TypedefDecl 0x55f8fd7191a8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55f8fd7183b0 'Timer **'
|   `-SubstTemplateTypeParmType 0x55f8fd713440 'Timer *' sugar
|     |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f8fd462658 'T'
|     `-PointerType 0x55f8fd6c7240 'Timer *'
|       `-RecordType 0x55f8fd6c6390 'Timer'
|         `-CXXRecord 0x55f8fd64a028 'Timer'
|-TypedefDecl 0x55f8fd719210 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55f8fd718470 'Timer *const *'
|   `-QualType 0x55f8fd713441 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55f8fd713440 'Timer *' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-PointerType 0x55f8fd6c7240 'Timer *'
|         `-RecordType 0x55f8fd6c6390 'Timer'
|           `-CXXRecord 0x55f8fd64a028 'Timer'
|-EnumDecl 0x55f8fd719268 <line:134:5> col:5
| `-EnumConstantDecl 0x55f8fd719360 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f8fd719340 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f8fd463d38 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f8fd463d10 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f8fd463cf0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f8fd7193e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f8fd719678 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd7194a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f8fd719540 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55f8fd719938 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55f8fd719820 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55f8fd719bf8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55f8fd719ae0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55f8fd719f40 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55f8fd719e20 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55f8fd71a250 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55f8fd71a130 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55f8fd71a540 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd71a388 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f8fd71a400 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55f8fd71a698 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55f8fd71a778 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd71a7d0 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd71a818 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55f8fd71a8c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd71a920 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd71ea30 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd71eae0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd71eb38 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd71eb80 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd71ec30 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd71ec88 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd71ecd0 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd71ed80 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd71edd8 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd71ee20 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd71eed0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd71ef28 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd71ef50 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f8fd71f000 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f8fd71f0b0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f8fd71f270 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd71f160 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f8fd71f1d8 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55f8fd71f3c0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f8fd71f330 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd71f568 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55f8fd71f478 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f8fd71f620 <col:20>
| `-OptimizeNoneAttr 0x55f8fd71f678 <col:30>
|-CXXMethodDecl 0x55f8fd71f798 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55f8fd71f6a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f8fd71f850 <col:20>
| `-OptimizeNoneAttr 0x55f8fd71f8a8 <col:30>
|-CXXMethodDecl 0x55f8fd71f960 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f8fd71f8d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd71faa8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f8fd71fa18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd71fbd8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55f8fd71fd08 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55f8fd71fdd8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55f8fd71fea8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55f8fd71ffe8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f8fd71ff58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd720130 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f8fd7200a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd720278 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55f8fd7201e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f8fd720330 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f8fd720430 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f8fd7203a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f8fd7204e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f8fd7205a8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55f8fd7206a8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55f8fd720828 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f8fd720768 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55f8fd720fe8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f8fd7208e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55f8fd720f48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55f8fd720e48 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55f8fd7210c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f8fd721218 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f8fd721188 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55f8fd7212d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f8fd721518 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd721390 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55f8fd721408 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55f8fd7216d8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55f8fd7215e8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55f8fd721928 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55f8fd7217a0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55f8fd721818 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55f8fd7219e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f8fd721c48 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55f8fd721b50 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55f8fd721d18 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f8fd721d18

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd6e08f0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f8fd6e0a08 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55f8fd6e0a98 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55f8fd6e0b20 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55f8fd6e0c10 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55f8fd6e0d10 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55f8fd6e0dd0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55f8fd6e0e90 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55f8fd6e0fb8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55f8fd6e0fb8
| `-ParmVarDecl 0x55f8fd6e10c8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55f8fd722ac8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55f8fd722ac8
  `-ParmVarDecl 0x55f8fd722bd8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd7023b0 prev 0x55f8fd64e1d8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55f8fd7024a8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55f8fd702538 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55f8fd7025c0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55f8fd7026b8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55f8fd722f40 <col:43, col:67>
|   `-ReturnStmt 0x55f8fd722f30 <col:45, col:52>
|     `-CXXConstructExpr 0x55f8fd722f00 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55f8fd722ed0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55f8fd703ea0
|         `-CXXThisExpr 0x55f8fd722ec0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55f8fd702778 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55f8fd702980 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55f8fd702828 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55f8fd7028a0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55f8fd702a78 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55f8fd702b40 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55f8fd722fc0 <col:39, col:67>
|   `-ReturnStmt 0x55f8fd722fb0 <col:41, col:48>
|     `-ImplicitCastExpr 0x55f8fd722f98 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f8fd722f68 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55f8fd703f88
|         `-CXXThisExpr 0x55f8fd722f58 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55f8fd702c08 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55f8fd723040 <col:35, col:59>
|   `-ReturnStmt 0x55f8fd723030 <col:37, col:44>
|     `-ImplicitCastExpr 0x55f8fd723018 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f8fd722fe8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55f8fd703ff0
|         `-CXXThisExpr 0x55f8fd722fd8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55f8fd702d50 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55f8fd702cc0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55f8fd702e98 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55f8fd702e08 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55f8fd703098 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55f8fd702f50 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55f8fd702fc8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55f8fd703168 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55f8fd703208 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55f8fd703230 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f8fd703348 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55f8fd7033e8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55f8fd703448 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55f8fd703578 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55f8fd7034a8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55f8fd7033e8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55f8fd723118 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55f8fd7230c0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55f8fd723090 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55f8fd64b668
|   |       `-ImplicitCastExpr 0x55f8fd7230e0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55f8fd723078 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55f8fd723058 <col:17> 'Timer *' lvalue ParmVar 0x55f8fd7034a8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55f8fd703448 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55f8fd7231b0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8fd723170 <col:41> 'Timer *' lvalue ParmVar 0x55f8fd7034a8 't_' 'Timer *'
|   `-CompoundStmt 0x55f8fd723200 <col:45, line:44:2>
|-CXXRecordDecl 0x55f8fd703640 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f8fd703758 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55f8fd7039a8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55f8fd703828 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55f8fd7038a0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55f8fd723330 <col:71, line:49:2>
|     `-ReturnStmt 0x55f8fd723320 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55f8fd7232e8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55f8fd7232d0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f8fd7232b0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55f8fd6845a8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55f8fd723230 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55f8fd7033e8
|         | `-DeclRefExpr 0x55f8fd723210 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55f8fd703828 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55f8fd723280 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55f8fd7033e8
|           `-DeclRefExpr 0x55f8fd723260 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55f8fd7038a0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55f8fd703a70 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f8fd703b88 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55f8fd703da8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55f8fd703c28 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55f8fd703ca0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55f8fd723538 <col:63, line:54:2>
|     `-BinaryOperator 0x55f8fd723518 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55f8fd7233c8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55f8fd64d678
|       | `-ImplicitCastExpr 0x55f8fd7233b0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55f8fd723380 <col:6, col:9> 'Timer *' lvalue ->t 0x55f8fd703448
|       |     `-ImplicitCastExpr 0x55f8fd723368 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55f8fd723348 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55f8fd703ca0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55f8fd723500 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55f8fd7234e0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55f8fd723488 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55f8fd723468 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55f8fd723438 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55f8fd7233f8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55f8fd703ca0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55f8fd723450 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55f8fd723418 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55f8fd703c28 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55f8fd7234c8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55f8fd7234a8 <col:39> 'int' 1
|-FieldDecl 0x55f8fd703ea0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55f8fd703f10 <col:44, col:53> aligned
|   `-ConstantExpr 0x55f8fd703ef0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55f8fd703e70 <col:52> 'int' 8
|-FieldDecl 0x55f8fd703f88 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55f8fd703ff0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55f8fd704058 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55f8fd713140 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55f8fd721e00 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55f8fd721e60 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55f8fd721ec0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55f8fd721f20 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd722010 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55f8fd721f80 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55f8fd7220d8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55f8fd723990 <col:29, line:81:5>
|   `-IfStmt 0x55f8fd723968 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55f8fd723620 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55f8fd7235c0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55f8fd723590 <col:6, col:18> '<bound member function type>' .size 0x55f8fd710188
|     |     `-ImplicitCastExpr 0x55f8fd723608 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55f8fd723560 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55f8fd713140
|     |         `-CXXThisExpr 0x55f8fd723550 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55f8fd723810 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55f8fd7237f8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55f8fd7237d8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55f8fd36e008 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55f8fd723648 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55f8fd703ea0
|     | | `-CXXThisExpr 0x55f8fd723638 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55f8fd7237c0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55f8fd723790 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55f8fd7033e8
|     |     `-CXXMemberCallExpr 0x55f8fd723768 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55f8fd723738 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55f8fd711228
|     |       | `-MemberExpr 0x55f8fd723688 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55f8fd713140
|     |       |   `-CXXThisExpr 0x55f8fd723678 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55f8fd723718 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55f8fd723950 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55f8fd723918 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55f8fd723900 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f8fd7238e0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55f8fd36e4b8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55f8fd723858 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55f8fd703ea0
|         | `-CXXThisExpr 0x55f8fd723848 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55f8fd7238c8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f8fd723898 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55f8fd722218 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55f8fd722188 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55f8fd7222e0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55f8fd7223a0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55f8fd722460 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55f8fd722550 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55f8fd7225b8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55f8fd7225b8
| `-ParmVarDecl 0x55f8fd7226c8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55f8fd722768 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55f8fd722768
| `-ParmVarDecl 0x55f8fd722878 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55f8fd722918 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55f8fd722918
| `-ParmVarDecl 0x55f8fd722a28 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55f8fd722c48 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55f8fd722c48
| `-ParmVarDecl 0x55f8fd722d58 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55f8fd722de0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55f8fd722de0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f8fd759828 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55f8fd759a38 prev 0x55f8fd759828 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f8fd75ab10 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f8fd75aac0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55f8fd75aaa0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55f8fd75a950 'type'
|     `-SubstTemplateTypeParmType 0x55f8fd714150 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f8fd42a9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd42a968 'T'
|       `-RecordType 0x55f8fd713ca0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f8fd713bb8 'sized_array_memory'
|-FieldDecl 0x55f8fd75ac10 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f8fd75ac60 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f8fd75ac98 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55f8fd759ad0 'pollfd' sugar
|   |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f8fd462658 'T'
|   `-RecordType 0x55f8fd74d8a0 'pollfd'
|     `-CXXRecord 0x55f8fd74d810 'pollfd'
|-TypedefDecl 0x55f8fd75ad58 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55f8fd75ad20 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55f8fd759ad0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f8fd462658 'T'
|     `-RecordType 0x55f8fd74d8a0 'pollfd'
|       `-CXXRecord 0x55f8fd74d810 'pollfd'
|-TypedefDecl 0x55f8fd75ae18 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55f8fd75ade0 'const pollfd &'
|   `-QualType 0x55f8fd759ad1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55f8fd759ad0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-RecordType 0x55f8fd74d8a0 'pollfd'
|         `-CXXRecord 0x55f8fd74d810 'pollfd'
|-TypedefDecl 0x55f8fd75aea8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55f8fd75ae70 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55f8fd759ad0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f8fd462658 'T'
|     `-RecordType 0x55f8fd74d8a0 'pollfd'
|       `-CXXRecord 0x55f8fd74d810 'pollfd'
|-TypedefDecl 0x55f8fd75af68 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55f8fd75af30 'const pollfd *'
|   `-QualType 0x55f8fd759ad1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55f8fd759ad0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-RecordType 0x55f8fd74d8a0 'pollfd'
|         `-CXXRecord 0x55f8fd74d810 'pollfd'
|-TypedefDecl 0x55f8fd75bb40 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55f8fd75baf0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55f8fd75bad0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55f8fd75ba60 'type'
|     `-SubstTemplateTypeParmType 0x55f8fd75b820 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f8fd4357c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd435770 'T'
|       `-RecordType 0x55f8fd74d8a0 'pollfd'
|         `-CXXRecord 0x55f8fd74d810 'pollfd'
|-TypedefDecl 0x55f8fd75bba8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55f8fd75ade0 'const pollfd &'
|   `-QualType 0x55f8fd759ad1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55f8fd759ad0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-RecordType 0x55f8fd74d8a0 'pollfd'
|         `-CXXRecord 0x55f8fd74d810 'pollfd'
|-TypedefDecl 0x55f8fd75bc00 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f8fd163370 'int'
|-TypedefDecl 0x55f8fd75bc68 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55f8fd75ae70 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55f8fd759ad0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f8fd462658 'T'
|     `-RecordType 0x55f8fd74d8a0 'pollfd'
|       `-CXXRecord 0x55f8fd74d810 'pollfd'
|-TypedefDecl 0x55f8fd75bcd0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55f8fd75af30 'const pollfd *'
|   `-QualType 0x55f8fd759ad1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55f8fd759ad0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-RecordType 0x55f8fd74d8a0 'pollfd'
|         `-CXXRecord 0x55f8fd74d810 'pollfd'
|-EnumDecl 0x55f8fd75bd28 <line:134:5> col:5
| `-EnumConstantDecl 0x55f8fd75be20 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f8fd75be00 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f8fd463d38 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f8fd463d10 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f8fd463cf0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f8fd75bea8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f8fd75c138 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd75bf60 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f8fd75c000 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55f8fd75c3f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55f8fd75c2e0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55f8fd75c6b8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55f8fd75c5a0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55f8fd75ca00 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55f8fd75c8e0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55f8fd75cd10 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55f8fd75cbf0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55f8fd75d000 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd75ce48 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f8fd75cec0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55f8fd75d158 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55f8fd75d238 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd75d290 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd75d2d8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55f8fd75d388 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd75d3e0 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd75d4a8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd75d558 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd75d5b0 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd75d5f8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd75d6a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd75d700 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd75d748 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd75d7f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd75d850 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd75d898 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd75d948 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd75d9a0 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd75d9c8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f8fd75da78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f8fd75db28 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f8fd75dce8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd75dbd8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f8fd75dc50 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55f8fd75de38 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f8fd75dda8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd75dfe8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55f8fd75def0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f8fd75e0a0 <col:20>
| `-OptimizeNoneAttr 0x55f8fd75e0f8 <col:30>
|-CXXMethodDecl 0x55f8fd75e218 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55f8fd75e120 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f8fd75e2d0 <col:20>
| `-OptimizeNoneAttr 0x55f8fd75e328 <col:30>
|-CXXMethodDecl 0x55f8fd75e3e0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f8fd75e350 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd75e528 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f8fd75e498 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd75e658 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55f8fd75e788 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55f8fd75e858 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55f8fd75e928 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55f8fd75ea68 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f8fd75e9d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd75ebb0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f8fd75eb20 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd75ecf8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f8fd75ec68 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f8fd75edb0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f8fd75eeb0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f8fd75ee20 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f8fd75ef68 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f8fd75f028 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55f8fd75f128 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55f8fd75f2d8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55f8fd75f1e8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55f8fd75fa98 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f8fd75f390 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55f8fd75f9f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55f8fd75f8f8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55f8fd75fb78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f8fd75fcc8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55f8fd75fc38 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55f8fd75fd80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f8fd75ffc8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd75fe40 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55f8fd75feb8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55f8fd760188 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55f8fd760098 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55f8fd7603d8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55f8fd760250 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55f8fd7602c8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55f8fd760498 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f8fd760718 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55f8fd760600 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55f8fd7607e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f8fd7607e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f8fd761dd0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55f8fd761fa8 prev 0x55f8fd761dd0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f8fd762038 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f8fd762060 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f8fd163370 'int'
|-TypedefDecl 0x55f8fd763c30 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55f8fd763be0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55f8fd762510 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55f8fd762410 'type'
|     `-TemplateSpecializationType 0x55f8fd7623a0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f8fd762280 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55f8fd762260 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f8fd762240 <col:24> 'unsigned long' 24
|       `-RecordType 0x55f8fd762380 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55f8fd7622a0 'char_array'
|-TypedefDecl 0x55f8fd763ce8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55f8fd763cb0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55f8fd763c90 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55f8fd763c30 'type'
|     `-ElaboratedType 0x55f8fd763be0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55f8fd762510 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55f8fd762410 'type'
|         `-TemplateSpecializationType 0x55f8fd7623a0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f8fd762280 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55f8fd762260 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f8fd762240 <col:24> 'unsigned long' 24
|           `-RecordType 0x55f8fd762380 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55f8fd7622a0 'char_array'
|-CXXMethodDecl 0x55f8fd763e68 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55f8fd763d78 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55f8fd763f58 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f8fd764038 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f8fd764038
|-CXXMethodDecl 0x55f8fd764308 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55f8fd764210 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55f8fd764548 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55f8fd7643c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f8fd764438 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f8fd764718 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55f8fd764608 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f8fd764680 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f8fd764878 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55f8fd764948 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55f8fd764b98 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55f8fd764a08 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55f8fd764a80 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f8fd764df8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55f8fd764c68 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55f8fd764ce0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f8fd764fb8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55f8fd764ec8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f8fd765178 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55f8fd765080 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f8fd765230 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f8fd7652e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f8fd765518 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55f8fd765390 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f8fd765408 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55f8fd7657b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55f8fd7656c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55f8fd765880 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55f8fd7658d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f8fd765920 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f8fd760930 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55f8fd760b38 prev 0x55f8fd760930 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f8fd761d40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55f8fd761cf0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55f8fd761cd0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55f8fd761b80 'type'
|     `-SubstTemplateTypeParmType 0x55f8fd7619a0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55f8fd42a9c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd42a968 'T'
|       `-RecordType 0x55f8fd7614f0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55f8fd761410 'sized_array_memory'
|-FieldDecl 0x55f8fd765970 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55f8fd7659c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f8fd7659f8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55f8fd760bd0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f8fd462658 'T'
|   `-RecordType 0x55f8fd759390 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55f8fd759300 'SelectorInfo'
|-TypedefDecl 0x55f8fd765ab8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55f8fd765a80 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55f8fd760bd0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f8fd462658 'T'
|     `-RecordType 0x55f8fd759390 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55f8fd759300 'SelectorInfo'
|-TypedefDecl 0x55f8fd765b78 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55f8fd765b40 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55f8fd760bd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55f8fd760bd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-RecordType 0x55f8fd759390 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55f8fd759300 'SelectorInfo'
|-TypedefDecl 0x55f8fd765c08 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55f8fd765bd0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55f8fd760bd0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f8fd462658 'T'
|     `-RecordType 0x55f8fd759390 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55f8fd759300 'SelectorInfo'
|-TypedefDecl 0x55f8fd765cc8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55f8fd765c90 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55f8fd760bd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55f8fd760bd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-RecordType 0x55f8fd759390 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55f8fd759300 'SelectorInfo'
|-TypedefDecl 0x55f8fd766920 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55f8fd7668d0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55f8fd7668b0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55f8fd7667e8 'type'
|     `-LValueReferenceType 0x55f8fd7667b0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55f8fd766551 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55f8fd766550 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55f8fd435090 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f8fd435038 'T'
|           `-RecordType 0x55f8fd759390 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55f8fd759300 'SelectorInfo'
|-TypedefDecl 0x55f8fd766988 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55f8fd765b40 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55f8fd760bd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55f8fd760bd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-RecordType 0x55f8fd759390 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55f8fd759300 'SelectorInfo'
|-TypedefDecl 0x55f8fd7669e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f8fd163370 'int'
|-TypedefDecl 0x55f8fd766a48 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55f8fd765bd0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55f8fd760bd0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f8fd462658 'T'
|     `-RecordType 0x55f8fd759390 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55f8fd759300 'SelectorInfo'
|-TypedefDecl 0x55f8fd766ab0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55f8fd765c90 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55f8fd760bd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55f8fd760bd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55f8fd4626b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8fd462658 'T'
|       `-RecordType 0x55f8fd759390 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55f8fd759300 'SelectorInfo'
|-EnumDecl 0x55f8fd766b08 <line:134:5> col:5
| `-EnumConstantDecl 0x55f8fd766c00 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f8fd766be0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f8fd463d38 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f8fd463d10 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f8fd463cf0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f8fd766c88 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f8fd766f18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd766d40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f8fd766de0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55f8fd7671d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55f8fd7670c0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55f8fd767498 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55f8fd767380 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55f8fd7677e0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55f8fd7676c0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55f8fd767af0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55f8fd7679d0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55f8fd767de0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd767c28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f8fd767ca0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55f8fd767f38 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55f8fd768018 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd768070 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd7680b8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55f8fd768168 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd7681c0 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd768288 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd768338 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd768390 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd7683d8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd768488 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd7684e0 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd768528 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd7685d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd768630 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd7686d0 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55f8fd768780 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f8fd7687d8 <col:30> Inherited
|-CXXMethodDecl 0x55f8fd768800 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f8fd7688b0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f8fd768960 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f8fd768b20 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd768a10 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f8fd768a88 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55f8fd768c70 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f8fd768be0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd768e18 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55f8fd768d28 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f8fd768ed0 <col:20>
| `-OptimizeNoneAttr 0x55f8fd768f28 <col:30>
|-CXXMethodDecl 0x55f8fd769048 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55f8fd768f50 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f8fd769100 <col:20>
| `-OptimizeNoneAttr 0x55f8fd769158 <col:30>
|-CXXMethodDecl 0x55f8fd769210 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f8fd769180 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd769358 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f8fd7692c8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd769488 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55f8fd7695b8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55f8fd769688 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55f8fd769758 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55f8fd769898 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f8fd769808 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd7699e0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f8fd769950 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f8fd769b28 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f8fd769a98 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f8fd769be0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f8fd769ce0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f8fd769c50 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f8fd769d98 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f8fd769e58 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55f8fd769f58 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55f8fd76a108 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55f8fd76a018 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55f8fd76a8c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f8fd76a1c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55f8fd76a828 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55f8fd76a728 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55f8fd76a9a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f8fd76aaf8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55f8fd76aa68 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55f8fd76abb0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f8fd76adf8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55f8fd76ac70 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55f8fd76ace8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55f8fd76afb8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55f8fd76aec8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55f8fd76b208 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55f8fd76b080 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55f8fd76b0f8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55f8fd76b2c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f8fd76b528 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55f8fd76b430 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55f8fd76b5f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f8fd76b5f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd74e4a0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f8fd74e5b8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55f8fd74e648 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55f8fd758710 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55f8fd758800 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55f8fd758800
|-CXXMethodDecl 0x55f8fd758900 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55f8fd758ba0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55f8fd7589b8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55f8fd758a30 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55f8fd758ab0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55f8fd758e10 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55f8fd758c70 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55f8fd758ce8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55f8fd758d68 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55f8fd758f68 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55f8fd758ed8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55f8fd759030 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55f8fd76cca8 <col:34, line:50:5>
|   |-BinaryOperator 0x55f8fd76c678 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55f8fd76c638 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55f8fd7597b8
|   | | `-CXXThisExpr 0x55f8fd76c628 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55f8fd76c668 <col:23> 'bool' true
|   `-CallExpr 0x55f8fd76cc80 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55f8fd76cc68 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f8fd76cbe8 <col:2> 'void (long)' lvalue Function 0x55f8fd76cae8 'ignore_result' 'void (long)' (FunctionTemplate 0x55f8fd425968 'ignore_result')
|     `-CallExpr 0x55f8fd76c890 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55f8fd76c878 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f8fd76c7f8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55f8fd726a40 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55f8fd76c8c8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55f8fd76c7a0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55f8fd76c788 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55f8fd76c738 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55f8fd759758
|       |   |   `-CXXThisExpr 0x55f8fd76c728 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55f8fd76c768 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55f8fd76c8f8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55f8fd76c8e0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55f8fd76c7c0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55f8fd76c910 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55f8fd76c7d8 <col:41> 'int' 1
|-CXXMethodDecl 0x55f8fd759170 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55f8fd7590e0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55f8fd759238 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55f8fd7592d8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55f8fd759300 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f8fd759418 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55f8fd7594b8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55f8fd759518 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55f8fd759580 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55f8fd759630 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55f8fd7594b8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55f8fd76cd08 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55f8fd76ccc8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55f8fd759518 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55f8fd76cd88 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55f8fd76cd48 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55f8fd759580 'pollfd' 'int'
|   | `-UnaryOperator 0x55f8fd76cde8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55f8fd76cdc8 <col:35> 'int' 1
|   `-CompoundStmt 0x55f8fd76ce60 <line:64:2, line:65:2>
|-FieldDecl 0x55f8fd759758 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55f8fd7597b8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55f8fd7608d0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55f8fd76b6e0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55f8fd76b918 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55f8fd76b748 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55f8fd76b7c0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55f8fd76b838 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55f8fd76bb00 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55f8fd76b9e8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55f8fd76ba68 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55f8fd76bd48 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55f8fd76bbc8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55f8fd76bc48 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55f8fd76bf58 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55f8fd76be08 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55f8fd76be80 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55f8fd76c0a8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55f8fd76c018 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55f8fd76c170 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55f8fd76c230 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55f8fd76c2f8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55f8fd76c2f8
| `-ParmVarDecl 0x55f8fd76c408 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55f8fd76c4a8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55f8fd76c4a8
  `-ParmVarDecl 0x55f8fd76c5b8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd6df858 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f8fd6df978 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55f8fd6dfa08 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55f8fd6dfa90 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55f8fd6dfb80 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55f8fd6dfc80 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55f8fd6dfd40 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55f8fd6dfe00 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55f8fd6dfee8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55f8fd6e0008 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55f8fd6e0008
| `-ParmVarDecl 0x55f8fd6e0118 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55f8fd771ab8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55f8fd771ab8
  `-ParmVarDecl 0x55f8fd771bc8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd647d98 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd647eb8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55f8fd647f58 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55f8fd647fb8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55f8fd7710b8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55f8fd7710b8
| `-ParmVarDecl 0x55f8fd7711c8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55f8fd771268 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55f8fd771268
| `-ParmVarDecl 0x55f8fd771378 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55f8fd7713e8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55f8fd7713e8
|-CXXMethodDecl 0x55f8fd771c68 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55f8fd771c68
| `-ParmVarDecl 0x55f8fd771d78 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55f8fd771de8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55f8fd771de8
| `-ParmVarDecl 0x55f8fd771ef8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55f8fd778568 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55f8fd778640 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd6e1750 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd6e1868 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55f8fd6e18f8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55f8fd6e1980 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55f8fd6e1a40 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55f8fd163370 'int'
|-CXXMethodDecl 0x55f8fd6e1b08 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55f8fd6e1ba8 <col:45> always_inline
|-CXXMethodDecl 0x55f8fd6e1cd8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55f8fd6e1c10 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55f8fd6e1d80 <col:49> always_inline
|-CXXConstructorDecl 0x55f8fd6e1e78 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55f8fd6e1e78
| `-ParmVarDecl 0x55f8fd6e1f88 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55f8fd6e2028 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55f8fd6e2028
| `-ParmVarDecl 0x55f8fd6e2138 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55f8fd7714d0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55f8fd7714d0
|-CXXMethodDecl 0x55f8fd771f98 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55f8fd771f98
| `-ParmVarDecl 0x55f8fd7720a8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55f8fd772118 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55f8fd772118
  `-ParmVarDecl 0x55f8fd772228 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd76d2d0 prev 0x55f8fd74e410 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55f8fd76d3c8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55f8fd76d458 <col:22, col:28> col:22 public
|-EnumDecl 0x55f8fd76d480 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55f8fd76d598 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55f8fd76d578 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55f8fd76d560 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f8fd76d540 <col:32> 'int' 1
| `-EnumConstantDecl 0x55f8fd76d640 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55f8fd76d620 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55f8fd76d608 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55f8fd76d5e8 <col:53> 'int' 1000
|-CXXMethodDecl 0x55f8fd76d6e0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55f8fd76d7a0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55f8fd76d888 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55f8fd7722e8 <col:34, col:52>
|   `-ReturnStmt 0x55f8fd7722d8 <col:36, col:43>
|     `-MemberExpr 0x55f8fd7722a8 <col:43> 'TimerSet' lvalue ->_timers 0x55f8fd76f558
|       `-CXXThisExpr 0x55f8fd772298 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55f8fd76d978 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55f8fd772350 <col:46, col:64>
|   `-ReturnStmt 0x55f8fd772340 <col:48, col:55>
|     `-MemberExpr 0x55f8fd772310 <col:55> 'const TimerSet' lvalue ->_timers 0x55f8fd76f558
|       `-CXXThisExpr 0x55f8fd772300 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55f8fd76da68 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55f8fd7723b8 <col:36, col:55>
|   `-ReturnStmt 0x55f8fd7723a8 <col:38, col:45>
|     `-MemberExpr 0x55f8fd772378 <col:45> 'SelectSet' lvalue ->_selects 0x55f8fd76f5b8
|       `-CXXThisExpr 0x55f8fd772368 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55f8fd76db58 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55f8fd772420 <col:48, col:67>
|   `-ReturnStmt 0x55f8fd772410 <col:50, col:57>
|     `-MemberExpr 0x55f8fd7723e0 <col:57> 'const SelectSet' lvalue ->_selects 0x55f8fd76f5b8
|       `-CXXThisExpr 0x55f8fd7723d0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55f8fd76dc18 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55f8fd76dd08 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55f8fd76de78 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55f8fd76ddb8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55f8fd76df40 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55f8fd76e388 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55f8fd76dff0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55f8fd76e270 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55f8fd76e458 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55f8fd76e518 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55f8fd76e5d8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55f8fd76e718 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55f8fd76e688 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55f8fd76e7e0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55f8fd76e8a0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55f8fd76e960 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55f8fd76ea20 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55f8fd76eb60 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55f8fd76ead0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55f8fd76ec28 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55f8fd76ece8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55f8fd76ed88 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55f8fd76ee50 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f8fd76eea0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f8fd76eef0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f8fd76ef40 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f8fd76ef90 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f8fd76efe0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f8fd76f030 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f8fd76f080 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f8fd76f0d0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55f8fd76f120 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55f8fd76f170 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55f8fd76f268 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55f8fd76f1d8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55f8fd76f3b8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55f8fd76f328 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55f8fd76f460 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55f8fd76f498 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55f8fd76f4f8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55f8fd76f558 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55f8fd76f5b8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55f8fd76f638 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55f8fd76f6a8 <col:40, col:50> aligned
|   `-ConstantExpr 0x55f8fd76f688 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55f8fd76f608 <col:48> 'int' 64
|-FieldDecl 0x55f8fd76f718 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55f8fd76f778 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55f8fd76f870 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55f8fd76f980 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55f8fd76f9e0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55f8fd76fa60 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55f8fd76fad0 <col:36, col:46> aligned
|   `-ConstantExpr 0x55f8fd76fab0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55f8fd76fa30 <col:44> 'int' 64
|-FieldDecl 0x55f8fd76fb48 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55f8fd76fba8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55f8fd76fbf8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55f8fd76fc38 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55f8fd76fca0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55f8fd76fcf0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55f8fd76fe98 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55f8fd76fd28 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55f8fd76fda8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55f8fd76ff98 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55f8fd76ff98
|-CXXMethodDecl 0x55f8fd7700a0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55f8fd770168 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55f8fd772518 <col:34, line:217:5>
|   `-ReturnStmt 0x55f8fd772508 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55f8fd7724f0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f8fd7724c0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55f8fd6e42b0
|         `-ImplicitCastExpr 0x55f8fd7724a8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55f8fd772478 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55f8fd6e4248
|             `-MemberExpr 0x55f8fd772448 <col:16> 'const TaskLink' lvalue ->_task_link 0x55f8fd76f498
|               `-CXXThisExpr 0x55f8fd772438 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55f8fd770228 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55f8fd7702e8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55f8fd772c40 <col:39, line:226:5>
|   |-DeclStmt 0x55f8fd772768 <line:223:9, col:68>
|   | `-VarDecl 0x55f8fd772540 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55f8fd772720 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55f8fd7726f0 <col:24, col:38> '<bound member function type>' .compare_swap 0x55f8fd48bfb0
|   |     | `-MemberExpr 0x55f8fd7725b8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55f8fd76f718
|   |     |   `-CXXThisExpr 0x55f8fd7725a8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55f8fd7726a8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55f8fd772690 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55f8fd772668 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55f8fd772648 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55f8fd772750 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55f8fd7726d0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55f8fd7727b0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55f8fd772780 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55f8fd772540 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55f8fd772c20 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55f8fd772bf0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55f8fd7728c8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55f8fd772898 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55f8fd772880 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55f8fd7727d8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55f8fd772540 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55f8fd772858 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55f8fd772840 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55f8fd772818 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55f8fd7727f8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55f8fd772928 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55f8fd772908 <col:60> 'int' 0
|       `-CallExpr 0x55f8fd772b50 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55f8fd772b38 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f8fd772b18 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55f8fd772b90 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55f8fd772a18 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55f8fd772ba8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55f8fd772a48 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55f8fd772bc0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55f8fd772a88 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55f8fd772bd8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55f8fd772b00 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55f8fd772ae8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55f8fd772aa8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55f8fd770430 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55f8fd7703a0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55f8fd7704f8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55f8fd7705b8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55f8fd7706e0 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55f8fd7707a0 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55f8fd770860 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55f8fd770950 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55f8fd7709b0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55f8fd770a40 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55f8fd770e08 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55f8fd770e08
| `-ParmVarDecl 0x55f8fd770f18 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55f8fd7715d8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55f8fd7715d8
  `-ParmVarDecl 0x55f8fd7716e8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd6e45c0 prev 0x55f8fd6c6250 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55f8fd6e46f8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55f8fd6e4788 <col:33, col:39> col:33 public
|-EnumDecl 0x55f8fd6e47b0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55f8fd6e48f0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55f8fd6e48d0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55f8fd6e48b0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55f8fd6e4870 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55f8fd6e4890 <col:26> 'int' 16
| `-EnumConstantDecl 0x55f8fd6e49c0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55f8fd6e49a0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55f8fd6e4980 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55f8fd6e4940 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55f8fd6e4960 <col:47> 'int' 31
|-EnumDecl 0x55f8fd6e4a10 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55f8fd6e4b50 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55f8fd6e4c70 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f8fd6e4b30 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55f8fd6e4b10 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55f8fd6e4ad0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55f8fd6e4af0 <col:29> 'int' 15
| `-EnumConstantDecl 0x55f8fd6e4c20 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55f8fd6e4c88 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd6e4c00 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55f8fd6e4be0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55f8fd6e4ba0 <col:51> 'int' 1
|         `-IntegerLiteral 0x55f8fd6e4bc0 <col:54> 'int' 10
|-CXXConstructorDecl 0x55f8fd6e4e58 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55f8fd6e4cb0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55f8fd6e4d30 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55f8fd6e4fe8 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55f8fd6e4f20 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55f8fd6e50e0 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55f8fd6e50e0
|-CXXMethodDecl 0x55f8fd6e5268 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55f8fd648ef8 <col:42, line:100:5>
|   `-ReturnStmt 0x55f8fd648ee8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55f8fd648ed0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55f8fd648ea0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55f8fd647c20
|         `-CXXThisExpr 0x55f8fd648e90 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f8fd6e5330 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55f8fd648f78 <col:36, line:105:5>
|   `-ReturnStmt 0x55f8fd648f68 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55f8fd648f50 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f8fd648f20 <col:16> 'void *const' lvalue ->_thunk 0x55f8fd647c88
|         `-CXXThisExpr 0x55f8fd648f10 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f8fd6e53f0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55f8fd648ff8 <col:37, line:110:5>
|   `-ReturnStmt 0x55f8fd648fe8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55f8fd648fd0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55f8fd648fa0 <col:16> 'Element *const' lvalue ->_owner 0x55f8fd647d48
|         `-CXXThisExpr 0x55f8fd648f90 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f8fd6e54b0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55f8fd6e5578 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55f8fd6e5638 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55f8fd6e56f8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55f8fd6490e0 <col:35, line:137:5>
|   `-ReturnStmt 0x55f8fd6490d0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55f8fd649098 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55f8fd649068 <col:16, col:24> '<bound member function type>' ->router 0x55f8fd6d8a60
|         `-ImplicitCastExpr 0x55f8fd6490b8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55f8fd649050 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55f8fd649020 <col:16> 'Element *const' lvalue ->_owner 0x55f8fd647d48
|               `-CXXThisExpr 0x55f8fd649010 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f8fd6e57b8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55f8fd6e59b8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55f8fd6e5868 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55f8fd6e58e0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55f8fd6e5bc8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55f8fd6e5a78 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55f8fd6e5af0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55f8fd6e5c98 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55f8fd6491f0 <col:35, line:181:5>
|   `-ReturnStmt 0x55f8fd6491e0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55f8fd6491c8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55f8fd6491b0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55f8fd649180 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55f8fd647858
|           `-MemberExpr 0x55f8fd649138 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f8fd647978
|             `-MemberExpr 0x55f8fd649108 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55f8fd647ba8
|               `-CXXThisExpr 0x55f8fd6490f8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55f8fd6468a0 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55f8fd649308 <col:30, line:192:5>
|   `-BinaryOperator 0x55f8fd6492e8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55f8fd649290 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55f8fd647858
|     | `-MemberExpr 0x55f8fd649248 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f8fd647978
|     |   `-MemberExpr 0x55f8fd649218 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f8fd647ba8
|     |     `-CXXThisExpr 0x55f8fd649208 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55f8fd6492d0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55f8fd6492c0 <col:32> 'bool' false
|-CXXMethodDecl 0x55f8fd646960 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55f8fd649658 <col:30, line:206:5>
|   |-BinaryOperator 0x55f8fd649400 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55f8fd6493a8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55f8fd647858
|   | | `-MemberExpr 0x55f8fd649360 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f8fd647978
|   | |   `-MemberExpr 0x55f8fd649330 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f8fd647ba8
|   | |     `-CXXThisExpr 0x55f8fd649320 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55f8fd6493e8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55f8fd6493d8 <col:32> 'bool' true
|   |-CallExpr 0x55f8fd6494a0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55f8fd649488 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8fd649468 <col:9> 'void ()' lvalue Function 0x55f8fd6df410 'click_fence' 'void ()'
|   `-IfStmt 0x55f8fd649640 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55f8fd649580 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55f8fd649550 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55f8fd649500 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55f8fd647fb8
|     | |   `-MemberExpr 0x55f8fd6494d0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55f8fd648030
|     | |     `-CXXThisExpr 0x55f8fd6494c0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55f8fd649568 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55f8fd649530 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55f8fd649600 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55f8fd6495b0 <col:13> '<bound member function type>' ->complete_schedule 0x55f8fd648a30
|       | `-CXXThisExpr 0x55f8fd6495a0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55f8fd649628 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55f8fd6495e0 <col:31> 'int' 0
|-CXXMethodDecl 0x55f8fd646a20 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55f8fd649780 <col:35, line:240:5>
|   `-BinaryOperator 0x55f8fd649760 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55f8fd649708 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55f8fd647858
|     | `-MemberExpr 0x55f8fd6496c0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f8fd647978
|     |   `-MemberExpr 0x55f8fd649690 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f8fd647ba8
|     |     `-CXXThisExpr 0x55f8fd649680 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55f8fd649748 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55f8fd649738 <col:32> 'bool' true
|-CXXMethodDecl 0x55f8fd646ae0 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55f8fd649998 <col:37, line:253:5>
|   |-BinaryOperator 0x55f8fd649878 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55f8fd649820 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55f8fd647858
|   | | `-MemberExpr 0x55f8fd6497d8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f8fd647978
|   | |   `-MemberExpr 0x55f8fd6497a8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f8fd647ba8
|   | |     `-CXXThisExpr 0x55f8fd649798 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55f8fd649860 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55f8fd649850 <col:32> 'bool' false
|   `-BinaryOperator 0x55f8fd649978 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55f8fd649920 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55f8fd6478b8
|     | `-MemberExpr 0x55f8fd6498d8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f8fd647978
|     |   `-MemberExpr 0x55f8fd6498a8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f8fd647ba8
|     |     `-CXXThisExpr 0x55f8fd649898 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55f8fd649960 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55f8fd649950 <col:41> 'bool' true
|-CXXMethodDecl 0x55f8fd646ba0 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55f8fd649b18 <col:37, line:264:5>
|   |-BinaryOperator 0x55f8fd649a98 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55f8fd649a40 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55f8fd6478b8
|   | | `-MemberExpr 0x55f8fd6499f8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55f8fd647978
|   | |   `-MemberExpr 0x55f8fd6499c8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55f8fd647ba8
|   | |     `-CXXThisExpr 0x55f8fd6499b8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55f8fd649a80 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55f8fd649a70 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55f8fd649af8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55f8fd649ac8 <col:9> '<bound member function type>' ->reschedule 0x55f8fd646960
|       `-CXXThisExpr 0x55f8fd649ab8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55f8fd646ce8 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55f8fd646c58 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55f8fd646db8 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55f8fd646f00 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55f8fd646e70 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55f8fd647050 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55f8fd646fc0 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55f8fd647118 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55f8fd6471d8 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55f8fd647278 <col:53> "" ""
|-CXXMethodDecl 0x55f8fd647310 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55f8fd6473b0 <col:47> "" ""
|-AccessSpecDecl 0x55f8fd647420 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55f8fd647460 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55f8fd6474c8 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55f8fd647518 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f8fd647638 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55f8fd6476c8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55f8fd6477f8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55f8fd647858 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55f8fd6478b8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55f8fd777c98 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55f8fd777d70 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f8fd777d70
| | |-CXXConstructorDecl 0x55f8fd778028 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55f8fd778028
| | | `-ParmVarDecl 0x55f8fd778138 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55f8fd7781d8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55f8fd7781d8
| |   `-ParmVarDecl 0x55f8fd7782e8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55f8fd647978 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55f8fd6479d8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55f8fd647978 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55f8fd6477f8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55f8fd647a30 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55f8fd647978 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55f8fd647858 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55f8fd647a88 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55f8fd647978 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55f8fd6478b8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55f8fd647ae0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55f8fd777ba8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f8fd778508 <col:11>
| |-CXXConstructorDecl 0x55f8fd777e78 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55f8fd777e78
| | `-ParmVarDecl 0x55f8fd777f88 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55f8fd778388 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55f8fd778388
|   `-ParmVarDecl 0x55f8fd778498 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55f8fd647ba8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55f8fd647c20 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55f8fd647c88 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55f8fd647ce8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55f8fd647d48 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55f8fd647d98 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f8fd647eb8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55f8fd647f58 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55f8fd647fb8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55f8fd7710b8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55f8fd7710b8
| | `-ParmVarDecl 0x55f8fd7711c8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55f8fd771268 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55f8fd771268
| | `-ParmVarDecl 0x55f8fd771378 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55f8fd7713e8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55f8fd7713e8
| |-CXXMethodDecl 0x55f8fd771c68 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55f8fd771c68
| | `-ParmVarDecl 0x55f8fd771d78 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55f8fd771de8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55f8fd771de8
| | `-ParmVarDecl 0x55f8fd771ef8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55f8fd778568 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55f8fd778640 <col:11>
|-FieldDecl 0x55f8fd648030 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55f8fd648178 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55f8fd6480b8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55f8fd648328 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55f8fd648238 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55f8fd6483f0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55f8fd6484b0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55f8fd648570 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55f8fd649c28 <col:41, line:355:5>
|   `-ReturnStmt 0x55f8fd649c18 <line:354:9, col:38>
|     `-BinaryOperator 0x55f8fd649bf8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55f8fd649bc8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55f8fd649b78 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55f8fd647fb8
|       |   `-MemberExpr 0x55f8fd649b48 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55f8fd648030
|       |     `-CXXThisExpr 0x55f8fd649b38 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55f8fd649be0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55f8fd649ba8 <col:38> 'int' 0
|-CXXMethodDecl 0x55f8fd648630 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55f8fd648770 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55f8fd6486e0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55f8fd6488e8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55f8fd648828 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55f8fd648a30 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55f8fd6489a0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55f8fd648af8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55f8fd648cc0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55f8fd648ba8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55f8fd648c28 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55f8fd648dc0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55f8fd648e50 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | ActiveNotifier::task_or_signal_t
         0 |   class Task * t
         0 |   Notifier::callback_type f
         0 |   void * v
         0 |   uintptr_t p
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd787208 <../dummy_inc/click/notifier.hh:151:13, line:156:5> line:151:13 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x55f8fd787338 <line:152:2, col:8> col:8 referenced t 'Task *'
|-FieldDecl 0x55f8fd787398 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
|-FieldDecl 0x55f8fd787400 <line:154:2, col:8> col:8 referenced v 'void *'
`-FieldDecl 0x55f8fd787460 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"union.ActiveNotifier::task_or_signal_t" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd7862e0 <../dummy_inc/click/notifier.hh:132:1, line:167:1> line:132:7 referenced class ActiveNotifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Notifier'
|-CXXRecordDecl 0x55f8fd786438 <col:1, col:7> col:7 implicit referenced class ActiveNotifier
|-AccessSpecDecl 0x55f8fd7864c8 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x55f8fd7865d8 <line:134:5, col:45> col:5 used ActiveNotifier 'void (Notifier::SearchOp)'
| `-ParmVarDecl 0x55f8fd786500 <col:20, col:34> col:29 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55f8fd787df0 <col:34> 'Notifier::SearchOp' EnumConstant 0x55f8fd780fd0 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x55f8fd7866d0 <line:135:5, col:21> col:5 used ~ActiveNotifier 'void () noexcept'
| `-Overrides: [ 0x55f8fd781758 Notifier::~Notifier 'void () noexcept' ]
|-CXXMethodDecl 0x55f8fd7868e0 <line:137:5, col:55> col:9 add_activate_callback 'int (Notifier::callback_type, void *)'
| |-Overrides: [ 0x55f8fd783080 Notifier::add_activate_callback 'int (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x55f8fd7867c0 <col:31, col:45> col:45 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f8fd786840 <col:48, col:54> col:54 v 'void *'
|-CXXMethodDecl 0x55f8fd786ab8 <line:138:5, col:59> col:10 remove_activate_callback 'void (Notifier::callback_type, void *)'
| |-Overrides: [ 0x55f8fd7832d8 Notifier::remove_activate_callback 'void (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x55f8fd7869a0 <col:35, col:49> col:49 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f8fd786a20 <col:52, col:58> col:58 v 'void *'
|-CXXMethodDecl 0x55f8fd786d78 <line:139:5, col:70> col:10 listeners 'void (Vector<Task *> &) const'
| |-ParmVarDecl 0x55f8fd786c50 <col:20, col:35> col:35 v 'Vector<Task *> &'
| `-DeprecatedAttr 0x55f8fd786e20 <col:59> "" ""
|-CXXMethodDecl 0x55f8fd786fb0 <line:141:5, col:61> col:17 used set_active 'void (bool, bool)' inline
| |-ParmVarDecl 0x55f8fd786ea0 <col:28, col:33> col:33 active 'bool'
| `-ParmVarDecl 0x55f8fd786f18 <col:41, col:57> col:46 schedule 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f8fd787e10 <col:57> 'bool' true
|-CXXMethodDecl 0x55f8fd787080 <line:142:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x55f8fd787140 <line:143:5, col:23> col:17 sleep 'void ()' inline
|-AccessSpecDecl 0x55f8fd7871e0 <line:149:3, col:10> col:3 private
|-CXXRecordDecl 0x55f8fd787208 <line:151:13, line:156:5> line:151:13 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x55f8fd787338 <line:152:2, col:8> col:8 referenced t 'Task *'
| |-FieldDecl 0x55f8fd787398 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| |-FieldDecl 0x55f8fd787400 <line:154:2, col:8> col:8 referenced v 'void *'
| `-FieldDecl 0x55f8fd787460 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'
|-TypedefDecl 0x55f8fd787528 <line:151:5, line:156:7> col:7 referenced task_or_signal_t 'union task_or_signal_t':'ActiveNotifier::task_or_signal_t'
| `-ElaboratedType 0x55f8fd7874d0 'union task_or_signal_t' sugar
|   `-RecordType 0x55f8fd7872a0 'ActiveNotifier::task_or_signal_t'
|     `-CXXRecord 0x55f8fd787208 ''
|-FieldDecl 0x55f8fd7875a8 <line:158:5, col:11> col:11 referenced _listener1 'Task *'
|-FieldDecl 0x55f8fd787688 <line:159:5, col:23> col:23 referenced _listeners 'ActiveNotifier::task_or_signal_t *'
|-CXXMethodDecl 0x55f8fd787808 <line:161:5, col:46> col:9 listener_add 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x55f8fd7876e8 <col:22, col:36> col:36 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f8fd787768 <col:39, col:45> col:45 v 'void *'
|-CXXMethodDecl 0x55f8fd7879e8 <line:162:5, col:49> col:9 listener_remove 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x55f8fd7878c8 <col:25, col:39> col:39 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55f8fd787948 <col:42, col:48> col:48 v 'void *'
|-CXXConstructorDecl 0x55f8fd787b98 <line:164:5, col:41> col:5 ActiveNotifier 'void (const ActiveNotifier &)'
| `-ParmVarDecl 0x55f8fd787ad8 <col:20, col:40> col:41 'const ActiveNotifier &'
`-CXXMethodDecl 0x55f8fd787d48 <line:165:5, col:52> col:21 operator= 'ActiveNotifier &(const ActiveNotifier &)'
  `-ParmVarDecl 0x55f8fd787c58 <col:31, col:51> col:52 'const ActiveNotifier &'

Layout: <CGRecordLayout
  LLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  NonVirtualBaseLLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd7b78d0 <../elements/standard/notifierqueue.hh:71:1, line:101:1> line:71:7 class NotifierQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'SimpleQueue'
|-CXXRecordDecl 0x55f8fd7b7a28 <col:1, col:7> col:7 implicit referenced class NotifierQueue
|-AccessSpecDecl 0x55f8fd7b7ab8 <col:44, col:50> col:44 public
|-CXXConstructorDecl 0x55f8fd7b7b40 <line:73:5, col:19> col:5 NotifierQueue 'void ()'
|-CXXMethodDecl 0x55f8fd7b7c40 <line:75:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55f8fd7a4aa0 SimpleQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x55f8fd7b90b0 <col:36, col:62>
|   `-ReturnStmt 0x55f8fd7b90a0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55f8fd7b9088 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55f8fd7b9060 <col:45> 'const char [14]' lvalue "NotifierQueue"
|-CXXMethodDecl 0x55f8fd7b7d90 <line:76:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55f8fd7a4d80 SimpleQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55f8fd7b7cf8 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x55f8fd7b8070 <line:78:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55f8fd7a5060 SimpleQueue::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55f8fd7b7f20 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x55f8fd7b7f98 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x55f8fd7b8248 <line:80:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55f8fd7a5b08 SimpleQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55f8fd7b8138 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x55f8fd7b81b0 <col:25, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x55f8fd7b83a0 <line:81:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x55f8fd7a5c60 SimpleQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55f8fd7b8310 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x55f8fd7b8448 <line:87:3, col:12> col:3 protected
|-EnumDecl 0x55f8fd7b8470 <line:89:5, col:35> col:5
| `-EnumConstantDecl 0x55f8fd7b8570 <col:12, col:33> col:12 SLEEPINESS_TRIGGER 'NotifierQueue::(anonymous enum at ../elements/standard/notifierqueue.hh:89:5)'
|   `-ImplicitCastExpr 0x55f8fd7b85c0 <col:33> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd7b8550 <col:33> 'int' Int: 9
|       `-IntegerLiteral 0x55f8fd7b8530 <col:33> 'int' 9
|-FieldDecl 0x55f8fd7b85f0 <line:90:5, col:9> col:9 _sleepiness 'int'
|-FieldDecl 0x55f8fd7b8650 <line:91:5, col:20> col:20 _empty_note 'ActiveNotifier'
|-FriendDecl 0x55f8fd7b86f0 <line:93:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x55f8fd7b8780 <line:94:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x55f8fd7b8810 <line:95:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-FriendDecl 0x55f8fd7b88a0 <line:96:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-CXXConstructorDecl 0x55f8fd7b8908 <line:71:7> col:7 implicit NotifierQueue 'void (const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x55f8fd7b8908
| `-ParmVarDecl 0x55f8fd7b8a18 <col:7> col:7 'const NotifierQueue &'
|-CXXConstructorDecl 0x55f8fd7b8ab8 <col:7> col:7 implicit NotifierQueue 'void (NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x55f8fd7b8ab8
| `-ParmVarDecl 0x55f8fd7b8bc8 <col:7> col:7 'NotifierQueue &&'
|-CXXMethodDecl 0x55f8fd7b8c68 <col:7> col:7 implicit operator= 'NotifierQueue &(const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x55f8fd7b8c68
| `-ParmVarDecl 0x55f8fd7b8d78 <col:7> col:7 'const NotifierQueue &'
|-CXXMethodDecl 0x55f8fd7b8de8 <col:7> col:7 implicit operator= 'NotifierQueue &(NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x55f8fd7b8de8
| `-ParmVarDecl 0x55f8fd7b8ef8 <col:7> col:7 'NotifierQueue &&'
`-CXXDestructorDecl 0x55f8fd7b8f80 <col:7> col:7 implicit ~NotifierQueue 'void ()' inline default noexcept-unevaluated 0x55f8fd7b8f80
  `-Overrides: [ 0x55f8fd7a6f70 SimpleQueue::~SimpleQueue 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  NonVirtualBaseLLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd64d728 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f8fd64d858 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55f8fd64e348 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd64a028 prev 0x55f8fd6c6300 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f8fd64a120 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55f8fd64a1b0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55f8fd64a210 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55f8fd64a2b8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55f8fd64a3d8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55f8fd64a578 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55f8fd64a4b8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55f8fd64a7c8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55f8fd64a638 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55f8fd64a6b8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55f8fd64a920 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55f8fd64a890 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55f8fd64aaa8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55f8fd64a9e0 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55f8fd64ac58 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55f8fd64ab98 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55f8fd64ad50 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55f8fd64e520 <col:21, line:58:5>
|   `-IfStmt 0x55f8fd64e508 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55f8fd64e470 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55f8fd64e440 <col:6> '<bound member function type>' ->scheduled 0x55f8fd64b5a8
|     |   `-ImplicitCastExpr 0x55f8fd64e490 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55f8fd64e430 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55f8fd64e4e8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55f8fd64e4b8 <col:6> '<bound member function type>' ->unschedule 0x55f8fd64cbd0
|         `-CXXThisExpr 0x55f8fd64e4a8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55f8fd64ae50 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55f8fd64e6c0 <col:26, line:65:5>
|   |-BinaryOperator 0x55f8fd64e5e0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f8fd64e578 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f8fd64d858
|   | | `-MemberExpr 0x55f8fd64e548 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f8fd64d918
|   | |   `-CXXThisExpr 0x55f8fd64e538 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f8fd64e5c8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8fd64e5a8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f8fd64dd78 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f8fd64e6a0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55f8fd64e610 <col:2> 'void *' lvalue ->_thunk 0x55f8fd64d998
|     | `-CXXThisExpr 0x55f8fd64e600 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55f8fd64e678 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55f8fd64e640 <col:20> 'int' 1
|-CXXMethodDecl 0x55f8fd64af90 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55f8fd64af00 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55f8fd64e820 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55f8fd64e710 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55f8fd64e6e0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55f8fd64af00 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55f8fd64e800 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55f8fd64e7d0 <col:2> '<bound member function type>' ->assign 0x55f8fd64ae50
|       `-CXXThisExpr 0x55f8fd64e7c0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55f8fd64b160 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55f8fd64b048 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55f8fd64b0c8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55f8fd6fed00 <col:58, line:79:5>
|   |-BinaryOperator 0x55f8fd6fec48 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f8fd6febe0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f8fd64d858
|   | | `-MemberExpr 0x55f8fd64e850 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f8fd64d918
|   | |   `-CXXThisExpr 0x55f8fd64e840 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f8fd6fec30 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8fd6fec10 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55f8fd64b048 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55f8fd6fece0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f8fd6fec78 <col:2> 'void *' lvalue ->_thunk 0x55f8fd64d998
|     | `-CXXThisExpr 0x55f8fd6fec68 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f8fd6fecc8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd6feca8 <col:11> 'void *' lvalue ParmVar 0x55f8fd64b0c8 'user_data' 'void *'
|-CXXMethodDecl 0x55f8fd64b2b0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55f8fd64b220 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55f8fd6fee98 <col:35, line:87:5>
|   |-BinaryOperator 0x55f8fd6fedc8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f8fd6fed60 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f8fd64d858
|   | | `-MemberExpr 0x55f8fd6fed30 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f8fd64d918
|   | |   `-CXXThisExpr 0x55f8fd6fed20 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f8fd6fedb0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8fd6fed90 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f8fd64df50 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f8fd6fee78 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f8fd6fedf8 <col:2> 'void *' lvalue ->_thunk 0x55f8fd64d998
|     | `-CXXThisExpr 0x55f8fd6fede8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f8fd6fee60 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55f8fd6fee48 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55f8fd6fee28 <col:11> 'Element *' lvalue ParmVar 0x55f8fd64b220 'element' 'Element *'
|-CXXMethodDecl 0x55f8fd64b3f8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55f8fd64b368 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55f8fd6ff030 <col:29, line:94:5>
|   |-BinaryOperator 0x55f8fd6fef60 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f8fd6feef8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f8fd64d858
|   | | `-MemberExpr 0x55f8fd6feec8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f8fd64d918
|   | |   `-CXXThisExpr 0x55f8fd6feeb8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f8fd6fef48 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8fd6fef28 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f8fd64e128 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f8fd6ff010 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f8fd6fef90 <col:2> 'void *' lvalue ->_thunk 0x55f8fd64d998
|     | `-CXXThisExpr 0x55f8fd6fef80 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f8fd6feff8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55f8fd6fefe0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55f8fd6fefc0 <col:11> 'Task *' lvalue ParmVar 0x55f8fd64b368 'task' 'Task *'
|-CXXMethodDecl 0x55f8fd64b4e8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55f8fd6ff110 <col:37, line:100:5>
|   `-ReturnStmt 0x55f8fd6ff100 <line:99:2, col:19>
|     `-BinaryOperator 0x55f8fd6ff0e0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55f8fd6ff0b0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55f8fd6ff060 <col:9> 'Element *const' lvalue ->_owner 0x55f8fd64d9f8
|       |   `-CXXThisExpr 0x55f8fd6ff050 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55f8fd6ff0c8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55f8fd6ff090 <col:19> 'int' 0
|-CXXMethodDecl 0x55f8fd64b5a8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55f8fd6ff1d0 <col:35, line:105:5>
|   `-ReturnStmt 0x55f8fd6ff1c0 <line:104:2, col:23>
|     `-BinaryOperator 0x55f8fd6ff1a0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55f8fd6ff188 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55f8fd6ff138 <col:9> 'const int' lvalue ->_schedpos1 0x55f8fd64d678
|       |   `-CXXThisExpr 0x55f8fd6ff128 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55f8fd6ff168 <col:23> 'int' 0
|-CXXMethodDecl 0x55f8fd64b668 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55f8fd6ff238 <col:51, line:118:5>
|   `-ReturnStmt 0x55f8fd6ff228 <line:117:2, col:9>
|     `-MemberExpr 0x55f8fd6ff1f8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55f8fd64d6d8
|       `-CXXThisExpr 0x55f8fd6ff1e8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f8fd64b728 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55f8fd6ff790 <col:37, line:136:5>
|   `-IfStmt 0x55f8fd6ff768 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55f8fd6ff2f8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55f8fd6ff2e0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55f8fd6ff2c0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55f8fd6ff290 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55f8fd6583d8
|     |       `-MemberExpr 0x55f8fd6ff260 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55f8fd64d6d8
|     |         `-CXXThisExpr 0x55f8fd6ff250 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55f8fd6ff6d8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55f8fd6ff6c0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55f8fd6ff690 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55f8fd6ff678 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55f8fd6ff640 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55f8fd6ff628 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55f8fd6ff608 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f8fd686bb0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55f8fd6ff5a8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55f8fd6ff590 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55f8fd6ff4b8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55f8fd6ff4a0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55f8fd6ff480 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f8fd686870 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55f8fd6ff420 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55f8fd6ff320 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55f8fd64d6d8
|     |         |     |   `-CXXThisExpr 0x55f8fd6ff310 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55f8fd6ff468 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55f8fd6ff450 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55f8fd6ff400 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55f8fd6ff3e8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55f8fd6ff388 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55f8fd679ed0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55f8fd6ff5f0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55f8fd6ff5d8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55f8fd6ff570 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55f8fd6ff558 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55f8fd6ff528 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55f8fd4d5420 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55f8fd6ff758 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55f8fd6ff728 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55f8fd6ff6f8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55f8fd64d6d8
|           `-CXXThisExpr 0x55f8fd6ff6e8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f8fd64b7e8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55f8fd6ff878 <col:35, line:141:5>
|   `-ReturnStmt 0x55f8fd6ff868 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55f8fd6ff830 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55f8fd6ff800 <col:9, col:17> '<bound member function type>' ->router 0x55f8fd6d8a60
|         `-ImplicitCastExpr 0x55f8fd6ff850 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55f8fd6ff7e8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55f8fd6ff7b8 <col:9> 'Element *const' lvalue ->_owner 0x55f8fd64d9f8
|               `-CXXThisExpr 0x55f8fd6ff7a8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f8fd64b8a8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55f8fd6ff8f8 <col:37, line:146:5>
|   `-ReturnStmt 0x55f8fd6ff8e8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55f8fd6ff8d0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55f8fd6ff8a0 <col:9> 'Element *const' lvalue ->_owner 0x55f8fd64d9f8
|         `-CXXThisExpr 0x55f8fd6ff890 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f8fd64b968 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55f8fd6ff978 <col:41, line:151:5>
|   `-ReturnStmt 0x55f8fd6ff968 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55f8fd6ff950 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55f8fd6ff920 <col:9> 'RouterThread *const' lvalue ->_thread 0x55f8fd64da58
|         `-CXXThisExpr 0x55f8fd6ff910 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f8fd64ba30 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55f8fd64bbf0 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55f8fd64bae0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55f8fd64bb58 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f8fd64e338 <col:50> 'bool' false
|-CXXMethodDecl 0x55f8fd64bd78 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55f8fd64bcb0 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55f8fd64bec0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f8fd64be30 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f8fd64c008 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f8fd64bf78 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f8fd64c150 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f8fd64c0c0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55f8fd64c298 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f8fd64c208 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55f8fd64c360 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55f8fd6ffae0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55f8fd6ffac8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55f8fd6ffa70 <col:2, col:47> 'void'
|       |-MemberExpr 0x55f8fd6ff9a0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f8fd64bec0
|       | `-CXXThisExpr 0x55f8fd6ff990 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f8fd6ffab0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f8fd6ffa98 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55f8fd6ffa50 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55f8fd6ffa38 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55f8fd6ffa08 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55f8fd4d5420 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55f8fd64c4a0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f8fd64c410 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55f8fd64c5e8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f8fd64c558 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd6ffc68 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55f8fd6ffc50 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55f8fd6ffbf8 <col:2, col:40> 'void'
|       |-MemberExpr 0x55f8fd6ffb08 <col:2> '<bound member function type>' ->schedule_after 0x55f8fd64c4a0
|       | `-CXXThisExpr 0x55f8fd6ffaf8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f8fd6ffc38 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f8fd6ffc20 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55f8fd6ffbb8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55f8fd6ffb88 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f8fd6ffb48 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd64c558 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55f8fd6ffba0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f8fd6ffb68 <col:38> 'int' 0
|-CXXMethodDecl 0x55f8fd64c730 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f8fd64c6a0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd6ffed8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55f8fd6ffec0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55f8fd6ffe68 <col:2, col:49> 'void'
|       |-MemberExpr 0x55f8fd6ffc90 <col:2> '<bound member function type>' ->schedule_after 0x55f8fd64c4a0
|       | `-CXXThisExpr 0x55f8fd6ffc80 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f8fd6ffea8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f8fd6ffe90 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55f8fd6ffe10 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55f8fd6ffdf8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f8fd6ffd68 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f8fd65a1c8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55f8fd6ffe50 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55f8fd6ffe38 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f8fd6ffd48 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd64c6a0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd64c878 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55f8fd64c7e8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55f8fd7000b8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55f8fd7000a0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55f8fd700048 <col:2, col:38> 'void'
|       |-MemberExpr 0x55f8fd6fff00 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f8fd64bec0
|       | `-CXXThisExpr 0x55f8fd6ffef0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f8fd700088 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f8fd700070 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55f8fd700010 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55f8fd6ffff8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f8fd6fffd8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f8fd686870 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55f8fd6fffa8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55f8fd6fff90 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55f8fd6fff40 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55f8fd64d6d8
|             |     `-CXXThisExpr 0x55f8fd6fff30 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55f8fd6fff70 <col:33> 'const Timestamp' lvalue ParmVar 0x55f8fd64c7e8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55f8fd64c9c0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f8fd64c930 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd700390 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55f8fd700378 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55f8fd700320 <col:2, col:79> 'void'
|       |-MemberExpr 0x55f8fd7000e0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f8fd64bec0
|       | `-CXXThisExpr 0x55f8fd7000d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f8fd700360 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f8fd700348 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55f8fd7002e0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55f8fd700218 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55f8fd700200 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55f8fd700190 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55f8fd700160 <col:31, col:41> '<bound member function type>' .sec 0x55f8fd4d6f18
|             | |     `-ImplicitCastExpr 0x55f8fd7001b0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55f8fd700130 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55f8fd64d6d8
|             | |         `-CXXThisExpr 0x55f8fd700120 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55f8fd7001e8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55f8fd7001c8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd64c930 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55f8fd7002a8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55f8fd700278 <col:60, col:70> '<bound member function type>' .subsec 0x55f8fd4d7610
|                 `-ImplicitCastExpr 0x55f8fd7002c8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55f8fd700248 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55f8fd64d6d8
|                     `-CXXThisExpr 0x55f8fd700238 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55f8fd64cb08 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f8fd64ca78 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f8fd7006c8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55f8fd7006b0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55f8fd700658 <col:2, col:65> 'void'
|       |-MemberExpr 0x55f8fd7003b8 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f8fd64bec0
|       | `-CXXThisExpr 0x55f8fd7003a8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f8fd700698 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f8fd700680 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55f8fd700620 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55f8fd700608 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f8fd7005e8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f8fd686870 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55f8fd700588 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55f8fd700570 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55f8fd7003f8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55f8fd64d6d8
|             |     `-CXXThisExpr 0x55f8fd7003e8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55f8fd7005d0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55f8fd7005b8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55f8fd700518 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55f8fd700500 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55f8fd7004d0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f8fd65a1c8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55f8fd700558 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55f8fd700540 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55f8fd7004b0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f8fd64ca78 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8fd64cbd0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55f8fd64cc90 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55f8fd700b90 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55f8fd700720 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55f8fd7006f0 <col:2> '<bound member function type>' ->unschedule 0x55f8fd64cbd0
|   |   `-CXXThisExpr 0x55f8fd7006e0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55f8fd700b78 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55f8fd700b40 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55f8fd700b28 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f8fd7007d8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55f8fd36e4b8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55f8fd700750 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55f8fd64d6d8
|       | `-CXXThisExpr 0x55f8fd700740 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f8fd7007c0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55f8fd700790 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55f8fd64cd50 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55f8fd700ee8 <col:42, line:310:5>
|   |-IfStmt 0x55f8fd700d30 <line:306:2, line:307:23>
|   | |-CallExpr 0x55f8fd700c60 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55f8fd700c48 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55f8fd700be8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55f8fd678340 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55f8fd700d20 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55f8fd700d08 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f8fd700cd8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f8fd700cc0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55f8fd700c90 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55f8fd700ed8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55f8fd700ec0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55f8fd700e90 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f8fd700e78 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55f8fd700e38 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55f8fd700e20 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f8fd700df0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f8fd65a4e0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55f8fd700e60 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55f8fd700dd0 <col:30> 'int' 500
|-CXXMethodDecl 0x55f8fd64ce90 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f8fd64ce00 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f8fd64cf38 <col:69> "" ""
|-CXXMethodDecl 0x55f8fd64d048 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f8fd64cfb8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f8fd64d0f0 <col:70> "" ""
|-CXXMethodDecl 0x55f8fd64d200 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f8fd64d170 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f8fd64d2a8 <col:71> "" ""
|-CXXMethodDecl 0x55f8fd64d3b8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f8fd64d328 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f8fd64d460 <col:72> "" ""
|-EnumDecl 0x55f8fd64d4d0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55f8fd64d5d0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55f8fd64d620 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd64d5b0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55f8fd64d590 <col:25> 'int' 1
|-AccessSpecDecl 0x55f8fd64d638 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55f8fd64d678 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55f8fd64d6d8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55f8fd64d728 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f8fd64d858 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55f8fd64e348 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55f8fd64d918 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55f8fd64d998 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55f8fd64d9f8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55f8fd64da58 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55f8fd64dba8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55f8fd64dab8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55f8fd64dd78 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f8fd64dc60 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55f8fd64dce0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55f8fd64df50 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f8fd64de38 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55f8fd64deb8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55f8fd64e128 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f8fd64e010 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55f8fd64e090 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55f8fd64e2f8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd49a580 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f8fd49a698 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55f8fd49a738 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55f8fd49a798 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55f8fd49a7f8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55f8fd49a8a8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd49abb0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8fd49acc8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55f8fd49ad70 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55f8fd49add8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55f8fd49ae68 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55f8fd4a0f00 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f8fd4a1338 <col:12>
|-CXXConstructorDecl 0x55f8fd4a1008 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f8fd4a1118 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f8fd49ad70 'data' 'const char *'
| | `-ImplicitCastExpr 0x55f8fd4a38c0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55f8fd4a3890 <col:12> 'const char *const' lvalue .data 0x55f8fd49ad70
| |     `-DeclRefExpr 0x55f8fd4a3870 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f8fd4a1118 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f8fd49add8 'length' 'int'
| | `-ImplicitCastExpr 0x55f8fd4a3950 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f8fd4a3920 <col:12> 'const int' lvalue .length 0x55f8fd49add8
| |     `-DeclRefExpr 0x55f8fd4a3900 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f8fd4a1118 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f8fd49ae68 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55f8fd4a39e0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55f8fd4a39b0 <col:12> 'String::memo_t *const' lvalue .memo 0x55f8fd49ae68
| |     `-DeclRefExpr 0x55f8fd4a3990 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f8fd4a1118 '' 'const String::rep_t &'
| `-CompoundStmt 0x55f8fd4a3a38 <col:12>
|-CXXConstructorDecl 0x55f8fd4a11b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f8fd4a11b8
| `-ParmVarDecl 0x55f8fd4a12c8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55f8fd4a6820 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f8fd4b2238 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f8fd4b2348 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55f8fd4b2860 <col:12>
|   |-BinaryOperator 0x55f8fd4b2678 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55f8fd4b2630 <col:12> 'const char *' lvalue ->data 0x55f8fd49ad70
|   | | `-CXXThisExpr 0x55f8fd4b2620 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f8fd4b2660 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55f8fd4b25f0 <col:12> 'const char *const' lvalue .data 0x55f8fd49ad70
|   |     `-DeclRefExpr 0x55f8fd4b25d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f8fd4b2348 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55f8fd4b2740 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55f8fd4b26f8 <col:12> 'int' lvalue ->length 0x55f8fd49add8
|   | | `-CXXThisExpr 0x55f8fd4b26e8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f8fd4b2728 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55f8fd4b26b8 <col:12> 'const int' lvalue .length 0x55f8fd49add8
|   |     `-DeclRefExpr 0x55f8fd4b2698 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f8fd4b2348 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55f8fd4b2808 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55f8fd4b27c0 <col:12> 'String::memo_t *' lvalue ->memo 0x55f8fd49ae68
|   | | `-CXXThisExpr 0x55f8fd4b27b0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f8fd4b27f0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55f8fd4b2780 <col:12> 'String::memo_t *const' lvalue .memo 0x55f8fd49ae68
|   |     `-DeclRefExpr 0x55f8fd4b2760 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f8fd4b2348 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55f8fd4b2850 <col:12>
|     `-UnaryOperator 0x55f8fd4b2838 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f8fd4b2828 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55f8fd4b23b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f8fd4b23b8
  `-ParmVarDecl 0x55f8fd4b24c8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8fd491af0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f8fd491c08 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55f8fd491c98 <col:16, col:22> col:16 public
|-TypedefDecl 0x55f8fd491cd8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55f8fd163dc0 'const char *'
|   `-QualType 0x55f8fd163311 'const char' const
|     `-BuiltinType 0x55f8fd163310 'char'
|-TypedefDecl 0x55f8fd491d60 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55f8fd491d30 'String::const_iterator' sugar
|   |-Typedef 0x55f8fd491cd8 'const_iterator'
|   `-PointerType 0x55f8fd163dc0 'const char *'
|     `-QualType 0x55f8fd163311 'const char' const
|       `-BuiltinType 0x55f8fd163310 'char'
|-TypedefDecl 0x55f8fd491ed0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55f8fd491e40 'int (String::*)() const'
|   |-RecordType 0x55f8fd491b80 'String'
|   | `-CXXRecord 0x55f8fd491af0 'String'
|   `-ParenType 0x55f8fd491de0 'int () const' sugar
|     `-FunctionProtoType 0x55f8fd465970 'int () const' const cdecl
|       `-BuiltinType 0x55f8fd163370 'int'
|-TypedefDecl 0x55f8fd491f38 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55f8fd2ba330 'int64_t' sugar
|   |-Typedef 0x55f8fd1cc2d0 'int64_t'
|   `-TypedefType 0x55f8fd1a54d0 '__int64_t' sugar
|     |-Typedef 0x55f8fd1a50a8 '__int64_t'
|     `-BuiltinType 0x55f8fd163390 'long'
|-TypedefDecl 0x55f8fd491fa0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55f8fd2ba250 'uint64_t' sugar
|   |-Typedef 0x55f8fd1cc470 'uint64_t'
|   `-TypedefType 0x55f8fd1a5560 '__uint64_t' sugar
|     |-Typedef 0x55f8fd1a5118 '__uint64_t'
|     `-BuiltinType 0x55f8fd163430 'unsigned long'
|-TypedefDecl 0x55f8fd492030 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55f8fd492000 'String::intmax_t' sugar
|   |-Typedef 0x55f8fd491f38 'intmax_t'
|   `-TypedefType 0x55f8fd2ba330 'int64_t' sugar
|     |-Typedef 0x55f8fd1cc2d0 'int64_t'
|     `-TypedefType 0x55f8fd1a54d0 '__int64_t' sugar
|       |-Typedef 0x55f8fd1a50a8 '__int64_t'
|       `-BuiltinType 0x55f8fd163390 'long'
|-TypedefDecl 0x55f8fd4920c0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55f8fd492090 'String::uintmax_t' sugar
|   |-Typedef 0x55f8fd491fa0 'uintmax_t'
|   `-TypedefType 0x55f8fd2ba250 'uint64_t' sugar
|     |-Typedef 0x55f8fd1cc470 'uint64_t'
|     `-TypedefType 0x55f8fd1a5560 '__uint64_t' sugar
|       |-Typedef 0x55f8fd1a5118 '__uint64_t'
|       `-BuiltinType 0x55f8fd163430 'unsigned long'
|-CXXConstructorDecl 0x55f8fd492180 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55f8fd492328 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55f8fd492268 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55f8fd4924d8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55f8fd492418 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55f8fd492630 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55f8fd4925a0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55f8fd492848 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55f8fd4926f8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55f8fd492778 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55f8fd492a68 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55f8fd492918 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55f8fd492998 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55f8fd492c88 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55f8fd492b38 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55f8fd492bb8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55f8fd492ea8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55f8fd492d58 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55f8fd492dd8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55f8fd493038 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55f8fd492f70 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55f8fd4931b8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55f8fd4930f8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55f8fd493348 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55f8fd493280 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55f8fd4934a0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55f8fd493410 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55f8fd4935f8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55f8fd493568 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55f8fd493750 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55f8fd4936c0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55f8fd4938d8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55f8fd493818 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55f8fd493a68 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55f8fd4939a0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55f8fd493bf8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55f8fd493b30 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55f8fd493d88 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55f8fd493cc0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55f8fd493e80 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55f8fd493fa8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55f8fd494128 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55f8fd494060 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55f8fd494278 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55f8fd4941e8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55f8fd494330 <col:63> "" ""
|-CXXMethodDecl 0x55f8fd494478 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55f8fd4943b8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55f8fd494688 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55f8fd494538 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55f8fd4945b8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55f8fd4948a8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55f8fd494750 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55f8fd4947d0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55f8fd494b88 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55f8fd494968 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55f8fd4949e8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55f8fd4a09d0 <col:55> 'int' 10
| `-ParmVarDecl 0x55f8fd494a60 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f8fd4a09f0 <col:76> 'bool' true
|-CXXMethodDecl 0x55f8fd494e68 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55f8fd494c50 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55f8fd494cd0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55f8fd4a0a00 <col:56> 'int' 10
| `-ParmVarDecl 0x55f8fd494d48 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f8fd4a0a20 <col:77> 'bool' true
|-CXXMethodDecl 0x55f8fd494f70 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55f8fd495038 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55f8fd495100 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55f8fd4951a0 <col:20>
| `-OptimizeNoneAttr 0x55f8fd4951f8 <col:30>
|-CXXConversionDecl 0x55f8fd4952e8 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f8fd4953b8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55f8fd495478 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55f8fd495568 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55f8fd495628 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55f8fd4957a8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55f8fd4956e0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55f8fd4958f8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55f8fd495868 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55f8fd4959e8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55f8fd495aa8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55f8fd495cf8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55f8fd495b60 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55f8fd495be0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55f8fd495f58 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55f8fd495dc0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55f8fd495e40 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55f8fd496028 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8fd496238 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55f8fd4960e0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55f8fd496160 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55f8fd496458 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55f8fd496300 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55f8fd496380 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55f8fd4965e8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55f8fd496520 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55f8fd4966d8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55f8fd496848 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55f8fd496788 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f8fd496a58 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55f8fd496908 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55f8fd496988 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55f8fd496c70 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55f8fd496b18 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55f8fd496b90 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55f8fd496e00 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55f8fd496d30 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f8fd497020 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55f8fd496ec0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55f8fd496f40 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55f8fd497170 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55f8fd4970e0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55f8fd497348 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55f8fd497230 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55f8fd4972b0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55f8fd497498 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55f8fd497408 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55f8fd4976b0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55f8fd497550 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55f8fd4975d0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55f8fd4a0a30 <col:39> 'int' 0
|-CXXMethodDecl 0x55f8fd4978d0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55f8fd497770 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55f8fd4977f0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55f8fd4a0a50 <col:48> 'int' 0
|-CXXMethodDecl 0x55f8fd497ab0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55f8fd497990 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55f8fd497a10 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55f8fd4a0a70 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55f8fd497b80 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55f8fd497c40 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55f8fd497d00 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55f8fd497dc0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55f8fd497e80 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55f8fd498028 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55f8fd497f30 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55f8fd4981a8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55f8fd4980e0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55f8fd498380 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55f8fd498268 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55f8fd4984f8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55f8fd498438 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55f8fd498640 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55f8fd4985b0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f8fd498790 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55f8fd498700 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55f8fd498968 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55f8fd498850 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55f8fd4988d0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55f8fd498b48 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55f8fd498a30 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55f8fd498ab0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55f8fd498c98 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55f8fd498c08 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55f8fd498ea8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55f8fd498d58 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55f8fd498dd8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55f8fd499008 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55f8fd498f70 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55f8fd499160 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55f8fd4990c8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55f8fd499208 <col:57> "" ""
|-CXXMethodDecl 0x55f8fd499318 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55f8fd499288 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55f8fd499468 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55f8fd4993d8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55f8fd4995e8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55f8fd499520 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55f8fd4996b0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55f8fd499770 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55f8fd499830 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55f8fd4998d0 <col:49> "" ""
|-CXXMethodDecl 0x55f8fd499960 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55f8fd499a20 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55f8fd499b10 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55f8fd499bd8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55f8fd499c98 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55f8fd499d58 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55f8fd499e50 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55f8fd499f18 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55f8fd499fe0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55f8fd49a1b8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55f8fd49a098 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55f8fd49a118 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55f8fd49a3e0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55f8fd49a280 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55f8fd49a300 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55f8fd49a4f0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55f8fd49a558 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55f8fd49a580 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f8fd49a698 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55f8fd49a738 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55f8fd49a798 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55f8fd49a7f8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55f8fd49a8a8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55f8fd49a910 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55f8fd49ab48 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55f8fd49ab98 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd49ab28 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55f8fd49aa38 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55f8fd49a9e0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55f8fd49aa20 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55f8fd49aa00 <col:32> 'int' 8
|-CXXRecordDecl 0x55f8fd49abb0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f8fd49acc8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55f8fd49ad70 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55f8fd49add8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55f8fd49ae68 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55f8fd4a0f00 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f8fd4a1338 <col:12>
| |-CXXConstructorDecl 0x55f8fd4a1008 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f8fd4a1118 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f8fd49ad70 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55f8fd4a38c0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55f8fd4a3890 <col:12> 'const char *const' lvalue .data 0x55f8fd49ad70
| | |     `-DeclRefExpr 0x55f8fd4a3870 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f8fd4a1118 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f8fd49add8 'length' 'int'
| | | `-ImplicitCastExpr 0x55f8fd4a3950 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55f8fd4a3920 <col:12> 'const int' lvalue .length 0x55f8fd49add8
| | |     `-DeclRefExpr 0x55f8fd4a3900 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f8fd4a1118 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f8fd49ae68 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55f8fd4a39e0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55f8fd4a39b0 <col:12> 'String::memo_t *const' lvalue .memo 0x55f8fd49ae68
| | |     `-DeclRefExpr 0x55f8fd4a3990 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f8fd4a1118 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55f8fd4a3a38 <col:12>
| |-CXXConstructorDecl 0x55f8fd4a11b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f8fd4a11b8
| | `-ParmVarDecl 0x55f8fd4a12c8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55f8fd4a6820 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f8fd4b2238 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f8fd4b2348 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55f8fd4b2860 <col:12>
| |   |-BinaryOperator 0x55f8fd4b2678 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55f8fd4b2630 <col:12> 'const char *' lvalue ->data 0x55f8fd49ad70
| |   | | `-CXXThisExpr 0x55f8fd4b2620 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f8fd4b2660 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55f8fd4b25f0 <col:12> 'const char *const' lvalue .data 0x55f8fd49ad70
| |   |     `-DeclRefExpr 0x55f8fd4b25d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f8fd4b2348 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55f8fd4b2740 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55f8fd4b26f8 <col:12> 'int' lvalue ->length 0x55f8fd49add8
| |   | | `-CXXThisExpr 0x55f8fd4b26e8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f8fd4b2728 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55f8fd4b26b8 <col:12> 'const int' lvalue .length 0x55f8fd49add8
| |   |     `-DeclRefExpr 0x55f8fd4b2698 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f8fd4b2348 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55f8fd4b2808 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55f8fd4b27c0 <col:12> 'String::memo_t *' lvalue ->memo 0x55f8fd49ae68
| |   | | `-CXXThisExpr 0x55f8fd4b27b0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f8fd4b27f0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55f8fd4b2780 <col:12> 'String::memo_t *const' lvalue .memo 0x55f8fd49ae68
| |   |     `-DeclRefExpr 0x55f8fd4b2760 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f8fd4b2348 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55f8fd4b2850 <col:12>
| |     `-UnaryOperator 0x55f8fd4b2838 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f8fd4b2828 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55f8fd4b23b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f8fd4b23b8
|   `-ParmVarDecl 0x55f8fd4b24c8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55f8fd49aee0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55f8fd49b128 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55f8fd49af48 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55f8fd49afc8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55f8fd49b040 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55f8fd4a0ec0 <col:79, line:261:5>
|   |-BinaryOperator 0x55f8fd4a0b38 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55f8fd4a0ad0 <col:2, col:5> 'const char *' lvalue .data 0x55f8fd49ad70
|   | | `-MemberExpr 0x55f8fd4a0aa0 <col:2> 'String::rep_t' lvalue ->_r 0x55f8fd49aee0
|   | |   `-CXXThisExpr 0x55f8fd4a0a90 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55f8fd4a0b20 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8fd4a0b00 <col:12> 'const char *' lvalue ParmVar 0x55f8fd49af48 'data' 'const char *'
|   |-BinaryOperator 0x55f8fd4a0c00 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55f8fd4a0b98 <col:2, col:5> 'int' lvalue .length 0x55f8fd49add8
|   | | `-MemberExpr 0x55f8fd4a0b68 <col:2> 'String::rep_t' lvalue ->_r 0x55f8fd49aee0
|   | |   `-CXXThisExpr 0x55f8fd4a0b58 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55f8fd4a0be8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8fd4a0bc8 <col:14> 'int' lvalue ParmVar 0x55f8fd49afc8 'length' 'int'
|   `-IfStmt 0x55f8fd4a0ea8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55f8fd4a0d20 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55f8fd4a0d08 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55f8fd4a0ce8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55f8fd4a0cc8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55f8fd4a0c60 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55f8fd49ae68
|     |       | `-MemberExpr 0x55f8fd4a0c30 <col:7> 'String::rep_t' lvalue ->_r 0x55f8fd49aee0
|     |       |   `-CXXThisExpr 0x55f8fd4a0c20 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55f8fd4a0cb0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55f8fd4a0c90 <col:17> 'String::memo_t *' lvalue ParmVar 0x55f8fd49b040 'memo' 'String::memo_t *'
|     `-CallExpr 0x55f8fd4a0e80 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55f8fd4a0e68 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f8fd4a0d70 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55f8fd489b58 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55f8fd4a0dd8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f8fd49a738
|         `-ImplicitCastExpr 0x55f8fd4a0dc0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55f8fd4a0da0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55f8fd49b040 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55f8fd49b3d8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55f8fd49b1f8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55f8fd49b278 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55f8fd49b2f0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55f8fd49aee0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55f8fd4a1348 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f8fd4a14d8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55f8fd4a1440 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55f8fd4a13b0 <col:2> '<bound member function type>' ->assign_memo 0x55f8fd49b128
|     | `-ImplicitCastExpr 0x55f8fd4a1478 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55f8fd4a13a0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55f8fd4a1490 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f8fd4a13e0 <col:14> 'const char *' lvalue ParmVar 0x55f8fd49b1f8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55f8fd4a14a8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f8fd4a1400 <col:20> 'int' lvalue ParmVar 0x55f8fd49b278 'length' 'int'
|     `-ImplicitCastExpr 0x55f8fd4a14c0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55f8fd4a1420 <col:28> 'String::memo_t *' lvalue ParmVar 0x55f8fd49b2f0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55f8fd49b568 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55f8fd49b4a8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55f8fd4a1730 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55f8fd4a16b0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55f8fd4a1500 <col:2> '<bound member function type>' ->assign_memo 0x55f8fd49b128
|     | `-CXXThisExpr 0x55f8fd4a14f0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55f8fd4a16e8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55f8fd4a1580 <col:14, col:19> 'const char *' lvalue .data 0x55f8fd49ad70
|     |   `-MemberExpr 0x55f8fd4a1550 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55f8fd49aee0
|     |     `-DeclRefExpr 0x55f8fd4a1530 <col:14> 'const String' lvalue ParmVar 0x55f8fd49b4a8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55f8fd4a1700 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55f8fd4a1600 <col:25, col:30> 'int' lvalue .length 0x55f8fd49add8
|     |   `-MemberExpr 0x55f8fd4a15d0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55f8fd49aee0
|     |     `-DeclRefExpr 0x55f8fd4a15b0 <col:25> 'const String' lvalue ParmVar 0x55f8fd49b4a8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55f8fd4a1718 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55f8fd4a1680 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55f8fd49ae68
|         `-MemberExpr 0x55f8fd4a1650 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55f8fd49aee0
|           `-DeclRefExpr 0x55f8fd4a1630 <col:38> 'const String' lvalue ParmVar 0x55f8fd49b4a8 'x' 'const String &'
|-CXXMethodDecl 0x55f8fd49b630 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55f8fd4a20f0 <col:31, line:278:5>
|   `-IfStmt 0x55f8fd4a20d8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55f8fd4a17d0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55f8fd4a17b8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55f8fd4a1788 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55f8fd49ae68
|     |     `-MemberExpr 0x55f8fd4a1758 <col:6> 'String::rep_t' lvalue ->_r 0x55f8fd49aee0
|     |       `-CXXThisExpr 0x55f8fd4a1748 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55f8fd4a20b0 <col:15, line:277:2>
|       |-ParenExpr 0x55f8fd4a1c80 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55f8fd4a1c50 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55f8fd4a18e0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55f8fd4a18c8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55f8fd4a18b0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55f8fd4a1870 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f8fd49a738
|       |   |       `-ImplicitCastExpr 0x55f8fd4a1858 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55f8fd4a1828 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55f8fd49ae68
|       |   |           `-MemberExpr 0x55f8fd4a17f8 <col:27> 'String::rep_t' lvalue ->_r 0x55f8fd49aee0
|       |   |             `-CXXThisExpr 0x55f8fd4a17e8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55f8fd4a1940 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55f8fd4a1920 <col:54> 'int' 0
|       |   `-CallExpr 0x55f8fd4a1bb0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55f8fd4a1b98 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55f8fd4a1b18 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8fd200b90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55f8fd4a1bf0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55f8fd4a1a28 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55f8fd4a1c08 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55f8fd4a1a58 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55f8fd4a1c20 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55f8fd4a1a90 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55f8fd4a1c38 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55f8fd4a1b00 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55f8fd4a1ae8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55f8fd4a1ab0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55f8fd4a1fd0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55f8fd4a1e90 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55f8fd4a1e78 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55f8fd4a1df0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55f8fd48afa0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55f8fd4a1dc0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f8fd49a738
|       | |   `-ImplicitCastExpr 0x55f8fd4a1da8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55f8fd4a1d78 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55f8fd49ae68
|       | |       `-MemberExpr 0x55f8fd4a1d48 <col:40> 'String::rep_t' lvalue ->_r 0x55f8fd49aee0
|       | |         `-CXXThisExpr 0x55f8fd4a1d38 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55f8fd4a1f90 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55f8fd4a1f78 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55f8fd4a1eb8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55f8fd49fe10 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55f8fd4a1fb8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55f8fd4a1f18 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55f8fd49ae68
|       |       `-MemberExpr 0x55f8fd4a1ee8 <col:15> 'String::rep_t' lvalue ->_r 0x55f8fd49aee0
|       |         `-CXXThisExpr 0x55f8fd4a1ed8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55f8fd4a2090 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55f8fd4a2028 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55f8fd49ae68
|         | `-MemberExpr 0x55f8fd4a1ff8 <col:6> 'String::rep_t' lvalue ->_r 0x55f8fd49aee0
|         |   `-CXXThisExpr 0x55f8fd4a1fe8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55f8fd4a2078 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55f8fd4a2058 <col:16> 'int' 0
|-CXXMethodDecl 0x55f8fd49b8c8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55f8fd49b6e8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55f8fd49b768 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55f8fd49b7e0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55f8fd49b9a0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55f8fd49bbf0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55f8fd49ba58 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55f8fd49bad8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55f8fd49bb50 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55f8fd49bdd8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55f8fd49bcc0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55f8fd49bd40 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55f8fd49bed8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55f8fd4a21c8 <col:41, line:286:5>
|   `-ReturnStmt 0x55f8fd4a21b8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55f8fd4a2188 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55f8fd4a2150 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55f8fd4a2138 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55f8fd4a2118 <col:46> 'int' 1
|-CXXMethodDecl 0x55f8fd49c178 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55f8fd49bf90 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55f8fd49c010 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55f8fd49c090 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55f8fd49fe10 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55f8fd49c240 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55f8fd49fee0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55f8fd4a00b0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55f8fd49ff98 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55f8fd4a0018 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55f8fd4a0170 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55f8fd4a0238 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55f8fd4a0338 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55f8fd4a03b0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55f8fd4a0428 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55f8fd4a0490 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55f8fd4a0590 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55f8fd4a05e0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f8fd4a0570 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55f8fd4a0550 <col:22> 'int' 14
|-CXXMethodDecl 0x55f8fd4a07f8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55f8fd4a0610 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55f8fd4a0690 <col:38> col:41 'int'
| `-ParmVarDecl 0x55f8fd4a0710 <col:43> col:46 'int'
|-FriendDecl 0x55f8fd4a0900 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55f8fd4a0990 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f8fd705c70 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55f8fd7be278 <line:167:18>
|-CXXRecordDecl 0x55f8fd7be338 prev 0x55f8fd705c70 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55f8fd7be448 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
