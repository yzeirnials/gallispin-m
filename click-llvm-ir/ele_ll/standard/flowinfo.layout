
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885d601c8 prev 0x561885d57968 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561885d602c0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x561885d60350 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x561885d603c8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x561885d60488 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x561885d60550 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x561885d606c8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x561885d60600 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x561885d60770 <col:24>
| `-OptimizeNoneAttr 0x561885d607c8 <col:34>
|-CXXMethodDecl 0x561885d60810 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x561885d60ac8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x561885d608c0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x561885d60938 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x561885d609b8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x561885d60b80 <line:229:7, col:14> col:7 private
|-FieldDecl 0x561885d60bb8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x561885d60c20 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x561885d60ca8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x561885d60fc8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x561885d60d60 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x561885d60dd8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x561885d60e50 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x561885d60ed0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x561885d610e0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x561885d68a58 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x561885d68a58
| `-ParmVarDecl 0x561885d68b68 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x561885d68c08 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x561885d68c08
| `-ParmVarDecl 0x561885d68d18 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x561885eb69e0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885b11a70 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561885b11b88 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x561885b11c18 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x561885b11ce8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x561885b11dd0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x561885b11fe8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561885b11e90 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885b12198 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x561885b120a0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x561885b122e0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x561885b12250 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x561885b12428 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561885b12398 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885b12570 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561885b124e0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885b12638 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x561885b12780 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x561885b126f0 <col:28> col:31 'int'
|-CXXMethodDecl 0x561885b12848 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x561885b12990 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x561885b12900 <col:28> col:31 'int'
|-CXXMethodDecl 0x561885b12b08 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x561885b12a48 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885b12c50 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x561885b12bc0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885b12d18 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x561885b12ed8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561885b12dc8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561885b12e40 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885b13128 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561885b12f98 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561885b13010 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561885b131d8 <col:86> "" ""
|-CXXMethodDecl 0x561885b13448 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x561885b132b8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x561885b13330 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885b135f8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x561885b13508 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x561885b137a8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x561885b136b0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x561885b13a78 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x561885b13860 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x561885b138d8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561885b13950 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885b13d58 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x561885b13b40 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x561885b13bb8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561885b13c30 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561885b13e10 <col:115> "" ""
|-AccessSpecDecl 0x561885b13e80 <line:84:3, col:10> col:3 private
|-FieldDecl 0x561885b13eb8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885b153d0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x561885b153d0
| `-ParmVarDecl 0x561885b154d8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x561885b15578 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x561885b15578
| `-ParmVarDecl 0x561885b15688 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x561885b4acb8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561885d3ccd0 <col:7>
|-CXXConstructorDecl 0x561885b4ad90 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x561885b4ad90
| `-ParmVarDecl 0x561885b4aea8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x561885b4af18 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x561885b4af18
| `-ParmVarDecl 0x561885b4b028 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x561885d3f6d0 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885de1500 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x561885de16d8 prev 0x561885de1500 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561885de1768 <col:46, col:52> col:46 public
|-TypedefDecl 0x561885de1790 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885de3360 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x561885de3310 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x561885de1c40 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x561885de1b40 'type'
|     `-TemplateSpecializationType 0x561885de1ad0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x561885de19b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x561885de1990 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x561885de1970 <col:24> 'unsigned long' 8
|       `-RecordType 0x561885de1ab0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x561885de19d0 'char_array'
|-TypedefDecl 0x561885de3418 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x561885de33e0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x561885de33c0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x561885de3360 'type'
|     `-ElaboratedType 0x561885de3310 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x561885de1c40 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x561885de1b40 'type'
|         `-TemplateSpecializationType 0x561885de1ad0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x561885de19b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x561885de1990 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x561885de1970 <col:24> 'unsigned long' 8
|           `-RecordType 0x561885de1ab0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x561885de19d0 'char_array'
|-CXXMethodDecl 0x561885de3598 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x561885de34a8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x561885de3688 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561885de3768 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561885de3768
|-CXXMethodDecl 0x561885de3a38 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x561885de3940 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x561885de3c78 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561885de3af0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885de3b68 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561885de3e48 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561885de3d38 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885de3db0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561885de3fa8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x561885de4078 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x561885de42c8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561885de4138 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x561885de41b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561885de4528 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x561885de4398 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x561885de4410 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561885de46e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x561885de45f8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561885de48a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x561885de47b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561885de4960 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885de4a10 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885de4c48 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561885de4ac0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885de4b38 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561885de4ee8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x561885de4df0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x561885de4fb0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x561885de5000 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561885de5050 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885e45418 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x561885e50018 prev 0x561885e45418 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561885e565f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x561885e565a0 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x561885e56580 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x561885e56430 'type'
|     `-SubstTemplateTypeParmType 0x561885de10d0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561885ab72a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ab7248 'T'
|       `-RecordType 0x561885de0c20 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x561885de0b38 'sized_array_memory'
|-FieldDecl 0x561885e566f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561885e56740 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561885e56778 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x561885e500b0 'Element *' sugar
|   |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561885aeef38 'T'
|   `-PointerType 0x561885d49710 'Element *'
|     `-RecordType 0x561885d49490 'Element'
|       `-CXXRecord 0x561885d531e0 'Element'
|-TypedefDecl 0x561885e56838 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x561885e56800 'Element *&'
|   `-SubstTemplateTypeParmType 0x561885e500b0 'Element *' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-PointerType 0x561885d49710 'Element *'
|       `-RecordType 0x561885d49490 'Element'
|         `-CXXRecord 0x561885d531e0 'Element'
|-TypedefDecl 0x561885e568f8 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x561885e568c0 'Element *const &'
|   `-QualType 0x561885e500b1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x561885e500b0 'Element *' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-PointerType 0x561885d49710 'Element *'
|         `-RecordType 0x561885d49490 'Element'
|           `-CXXRecord 0x561885d531e0 'Element'
|-TypedefDecl 0x561885e56988 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x561885e56950 'Element **'
|   `-SubstTemplateTypeParmType 0x561885e500b0 'Element *' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-PointerType 0x561885d49710 'Element *'
|       `-RecordType 0x561885d49490 'Element'
|         `-CXXRecord 0x561885d531e0 'Element'
|-TypedefDecl 0x561885e56a48 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x561885e56a10 'Element *const *'
|   `-QualType 0x561885e500b1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x561885e500b0 'Element *' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-PointerType 0x561885d49710 'Element *'
|         `-RecordType 0x561885d49490 'Element'
|           `-CXXRecord 0x561885d531e0 'Element'
|-TypedefDecl 0x561885e57620 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x561885e575d0 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x561885e575b0 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x561885e57540 'type'
|     `-SubstTemplateTypeParmType 0x561885e57300 'Element *' sugar
|       |-TemplateTypeParmType 0x561885ac20a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ac2050 'T'
|       `-PointerType 0x561885d49710 'Element *'
|         `-RecordType 0x561885d49490 'Element'
|           `-CXXRecord 0x561885d531e0 'Element'
|-TypedefDecl 0x561885e57688 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x561885e568c0 'Element *const &'
|   `-QualType 0x561885e500b1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x561885e500b0 'Element *' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-PointerType 0x561885d49710 'Element *'
|         `-RecordType 0x561885d49490 'Element'
|           `-CXXRecord 0x561885d531e0 'Element'
|-TypedefDecl 0x561885e576e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e57748 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x561885e56950 'Element **'
|   `-SubstTemplateTypeParmType 0x561885e500b0 'Element *' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-PointerType 0x561885d49710 'Element *'
|       `-RecordType 0x561885d49490 'Element'
|         `-CXXRecord 0x561885d531e0 'Element'
|-TypedefDecl 0x561885e577b0 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x561885e56a10 'Element *const *'
|   `-QualType 0x561885e500b1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x561885e500b0 'Element *' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-PointerType 0x561885d49710 'Element *'
|         `-RecordType 0x561885d49490 'Element'
|           `-CXXRecord 0x561885d531e0 'Element'
|-EnumDecl 0x561885e57808 <line:134:5> col:5
| `-EnumConstantDecl 0x561885e57900 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561885e578e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561885af0618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561885af05f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561885af05d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561885e57988 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561885e57c18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e57a40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e57ae0 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x561885e57ea8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x561885e57d90 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x561885e58168 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x561885e58050 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x561885e58480 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x561885e58360 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x561885e58790 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x561885e58670 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x561885e58a80 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e588c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e58940 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x561885e58bd8 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x561885e58cb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e58d10 <col:30> Inherited
|-CXXMethodDecl 0x561885e58d58 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x561885e58e08 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e58e60 <col:30> Inherited
|-CXXMethodDecl 0x561885e58f28 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x561885e58fd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e59030 <col:30> Inherited
|-CXXMethodDecl 0x561885e59078 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x561885e59128 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e59180 <col:30> Inherited
|-CXXMethodDecl 0x561885e591c8 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x561885e59278 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e592d0 <col:30> Inherited
|-CXXMethodDecl 0x561885e59318 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x561885e593c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e59420 <col:30> Inherited
|-CXXMethodDecl 0x561885e59448 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e594f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e595a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561885e59768 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e59658 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e596d0 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x561885e598b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561885e59828 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e59a68 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x561885e59970 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e59b20 <col:20>
| `-OptimizeNoneAttr 0x561885e59b78 <col:30>
|-CXXMethodDecl 0x561885e59c98 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x561885e59ba0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e59d50 <col:20>
| `-OptimizeNoneAttr 0x561885e59da8 <col:30>
|-CXXMethodDecl 0x561885e59e60 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e59dd0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e59fa8 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e59f18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e5a0d8 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x561885e5a208 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x561885e5a2d8 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x561885e5a3a8 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x561885e5a4e8 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e5a458 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e5a630 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e5a5a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e5a778 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x561885e5a6e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e5a830 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561885e5a930 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561885e5a8a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e5a9e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561885e5aaa8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x561885e5aba8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x561885e5ad28 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e5ac68 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x561885e5b4e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561885e5ade0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x561885e5b448 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x561885e5b348 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x561885e5b5c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885e5b718 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e5b688 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x561885e5b7d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561885e5ba18 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e5b890 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x561885e5b908 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x561885e5bbd8 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x561885e5bae8 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x561885e5be28 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x561885e5bca0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x561885e5bd18 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x561885e5bee8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885e5c148 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x561885e5c050 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x561885e5c218 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561885e5c218

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885b26e60 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x561885b26f78 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x561885b27018 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x561885b27078 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x561885b270d8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x561885b27188 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885b27490 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561885b275a8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x561885b27650 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x561885b276b8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x561885b27748 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x561885b2d7e0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561885b2dc18 <col:12>
|-CXXConstructorDecl 0x561885b2d8e8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561885b2d9f8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561885b27650 'data' 'const char *'
| | `-ImplicitCastExpr 0x561885b301a0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x561885b30170 <col:12> 'const char *const' lvalue .data 0x561885b27650
| |     `-DeclRefExpr 0x561885b30150 <col:12> 'const String::rep_t' lvalue ParmVar 0x561885b2d9f8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561885b276b8 'length' 'int'
| | `-ImplicitCastExpr 0x561885b30230 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x561885b30200 <col:12> 'const int' lvalue .length 0x561885b276b8
| |     `-DeclRefExpr 0x561885b301e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561885b2d9f8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561885b27748 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x561885b302c0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x561885b30290 <col:12> 'String::memo_t *const' lvalue .memo 0x561885b27748
| |     `-DeclRefExpr 0x561885b30270 <col:12> 'const String::rep_t' lvalue ParmVar 0x561885b2d9f8 '' 'const String::rep_t &'
| `-CompoundStmt 0x561885b30318 <col:12>
|-CXXConstructorDecl 0x561885b2da98 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561885b2da98
| `-ParmVarDecl 0x561885b2dba8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x561885b33100 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561885b3eb18 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561885b3ec28 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x561885b3f140 <col:12>
|   |-BinaryOperator 0x561885b3ef58 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x561885b3ef10 <col:12> 'const char *' lvalue ->data 0x561885b27650
|   | | `-CXXThisExpr 0x561885b3ef00 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561885b3ef40 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x561885b3eed0 <col:12> 'const char *const' lvalue .data 0x561885b27650
|   |     `-DeclRefExpr 0x561885b3eeb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561885b3ec28 '' 'const String::rep_t &'
|   |-BinaryOperator 0x561885b3f020 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x561885b3efd8 <col:12> 'int' lvalue ->length 0x561885b276b8
|   | | `-CXXThisExpr 0x561885b3efc8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561885b3f008 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x561885b3ef98 <col:12> 'const int' lvalue .length 0x561885b276b8
|   |     `-DeclRefExpr 0x561885b3ef78 <col:12> 'const String::rep_t' lvalue ParmVar 0x561885b3ec28 '' 'const String::rep_t &'
|   |-BinaryOperator 0x561885b3f0e8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x561885b3f0a0 <col:12> 'String::memo_t *' lvalue ->memo 0x561885b27748
|   | | `-CXXThisExpr 0x561885b3f090 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561885b3f0d0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x561885b3f060 <col:12> 'String::memo_t *const' lvalue .memo 0x561885b27748
|   |     `-DeclRefExpr 0x561885b3f040 <col:12> 'const String::rep_t' lvalue ParmVar 0x561885b3ec28 '' 'const String::rep_t &'
|   `-ReturnStmt 0x561885b3f130 <col:12>
|     `-UnaryOperator 0x561885b3f118 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561885b3f108 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x561885b3ec98 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561885b3ec98
  `-ParmVarDecl 0x561885b3eda8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885b1e3d0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561885b1e4e8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x561885b1e578 <col:16, col:22> col:16 public
|-TypedefDecl 0x561885b1e5b8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5618857effd0 'const char *'
|   `-QualType 0x5618857ef521 'const char' const
|     `-BuiltinType 0x5618857ef520 'char'
|-TypedefDecl 0x561885b1e640 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x561885b1e610 'String::const_iterator' sugar
|   |-Typedef 0x561885b1e5b8 'const_iterator'
|   `-PointerType 0x5618857effd0 'const char *'
|     `-QualType 0x5618857ef521 'const char' const
|       `-BuiltinType 0x5618857ef520 'char'
|-TypedefDecl 0x561885b1e7b0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x561885b1e720 'int (String::*)() const'
|   |-RecordType 0x561885b1e460 'String'
|   | `-CXXRecord 0x561885b1e3d0 'String'
|   `-ParenType 0x561885b1e6c0 'int () const' sugar
|     `-FunctionProtoType 0x561885af2250 'int () const' const cdecl
|       `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885b1e818 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x561885946e30 'int64_t' sugar
|   |-Typedef 0x561885858390 'int64_t'
|   `-TypedefType 0x561885831630 '__int64_t' sugar
|     |-Typedef 0x561885831208 '__int64_t'
|     `-BuiltinType 0x5618857ef5a0 'long'
|-TypedefDecl 0x561885b1e880 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x561885946d50 'uint64_t' sugar
|   |-Typedef 0x561885858530 'uint64_t'
|   `-TypedefType 0x5618858316c0 '__uint64_t' sugar
|     |-Typedef 0x561885831278 '__uint64_t'
|     `-BuiltinType 0x5618857ef640 'unsigned long'
|-TypedefDecl 0x561885b1e910 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x561885b1e8e0 'String::intmax_t' sugar
|   |-Typedef 0x561885b1e818 'intmax_t'
|   `-TypedefType 0x561885946e30 'int64_t' sugar
|     |-Typedef 0x561885858390 'int64_t'
|     `-TypedefType 0x561885831630 '__int64_t' sugar
|       |-Typedef 0x561885831208 '__int64_t'
|       `-BuiltinType 0x5618857ef5a0 'long'
|-TypedefDecl 0x561885b1e9a0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x561885b1e970 'String::uintmax_t' sugar
|   |-Typedef 0x561885b1e880 'uintmax_t'
|   `-TypedefType 0x561885946d50 'uint64_t' sugar
|     |-Typedef 0x561885858530 'uint64_t'
|     `-TypedefType 0x5618858316c0 '__uint64_t' sugar
|       |-Typedef 0x561885831278 '__uint64_t'
|       `-BuiltinType 0x5618857ef640 'unsigned long'
|-CXXConstructorDecl 0x561885b1ea60 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x561885b1ec08 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x561885b1eb48 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x561885b1edb8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x561885b1ecf8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x561885b1ef10 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x561885b1ee80 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x561885b1f128 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x561885b1efd8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x561885b1f058 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x561885b1f348 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x561885b1f1f8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x561885b1f278 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x561885b1f568 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x561885b1f418 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x561885b1f498 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x561885b1f788 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x561885b1f638 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x561885b1f6b8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x561885b1f918 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x561885b1f850 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x561885b1fa98 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x561885b1f9d8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x561885b1fc28 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x561885b1fb60 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x561885b1fd80 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x561885b1fcf0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x561885b1fed8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x561885b1fe48 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x561885b20030 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x561885b1ffa0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x561885b201b8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x561885b200f8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x561885b20348 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x561885b20280 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x561885b204d8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x561885b20410 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x561885b20668 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x561885b205a0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x561885b20760 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x561885b20888 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x561885b20a08 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x561885b20940 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x561885b20b58 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x561885b20ac8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x561885b20c10 <col:63> "" ""
|-CXXMethodDecl 0x561885b20d58 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x561885b20c98 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x561885b20f68 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x561885b20e18 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x561885b20e98 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x561885b21188 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x561885b21030 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x561885b210b0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x561885b21468 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x561885b21248 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x561885b212c8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x561885b2d2b0 <col:55> 'int' 10
| `-ParmVarDecl 0x561885b21340 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561885b2d2d0 <col:76> 'bool' true
|-CXXMethodDecl 0x561885b21748 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x561885b21530 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x561885b215b0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x561885b2d2e0 <col:56> 'int' 10
| `-ParmVarDecl 0x561885b21628 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561885b2d300 <col:77> 'bool' true
|-CXXMethodDecl 0x561885b21850 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x561885b21918 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x561885b219e0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x561885b21a80 <col:20>
| `-OptimizeNoneAttr 0x561885b21ad8 <col:30>
|-CXXConversionDecl 0x561885b21bc8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x561885b21c98 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x561885b21d58 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x561885b21e48 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x561885b21f08 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x561885b22088 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x561885b21fc0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x561885b221d8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x561885b22148 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x561885b222c8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x561885b22388 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x561885b225d8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x561885b22440 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x561885b224c0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x561885b22838 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x561885b226a0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x561885b22720 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x561885b22908 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x561885b22b18 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x561885b229c0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x561885b22a40 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x561885b22d38 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x561885b22be0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x561885b22c60 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x561885b22ec8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x561885b22e00 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x561885b22fb8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x561885b23128 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x561885b23068 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561885b23338 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x561885b231e8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x561885b23268 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x561885b23550 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x561885b233f8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x561885b23470 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x561885b236e0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x561885b23610 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561885b23900 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x561885b237a0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x561885b23820 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x561885b23a50 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x561885b239c0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x561885b23c28 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x561885b23b10 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x561885b23b90 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x561885b23d78 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x561885b23ce8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x561885b23f90 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x561885b23e30 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x561885b23eb0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x561885b2d310 <col:39> 'int' 0
|-CXXMethodDecl 0x561885b241b0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x561885b24050 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x561885b240d0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x561885b2d330 <col:48> 'int' 0
|-CXXMethodDecl 0x561885b24390 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x561885b24270 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x561885b242f0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x561885b2d350 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x561885b24460 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x561885b24520 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x561885b245e0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x561885b246a0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x561885b24760 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x561885b24908 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x561885b24810 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x561885b24a88 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x561885b249c0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x561885b24c60 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x561885b24b48 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x561885b24dd8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x561885b24d18 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x561885b24f20 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x561885b24e90 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561885b25070 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x561885b24fe0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x561885b25248 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x561885b25130 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x561885b251b0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x561885b25428 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x561885b25310 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x561885b25390 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x561885b25578 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x561885b254e8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x561885b25788 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x561885b25638 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x561885b256b8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x561885b258e8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x561885b25850 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x561885b25a40 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x561885b259a8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x561885b25ae8 <col:57> "" ""
|-CXXMethodDecl 0x561885b25bf8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x561885b25b68 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x561885b25d48 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x561885b25cb8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x561885b25ec8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x561885b25e00 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x561885b25f90 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x561885b26050 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x561885b26110 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x561885b261b0 <col:49> "" ""
|-CXXMethodDecl 0x561885b26240 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x561885b26300 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x561885b263f0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x561885b264b8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x561885b26578 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x561885b26638 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x561885b26730 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x561885b267f8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x561885b268c0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x561885b26a98 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x561885b26978 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x561885b269f8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x561885b26cc0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x561885b26b60 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x561885b26be0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x561885b26dd0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x561885b26e38 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x561885b26e60 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561885b26f78 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x561885b27018 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x561885b27078 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x561885b270d8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x561885b27188 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x561885b271f0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x561885b27428 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x561885b27478 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885b27408 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x561885b27318 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x561885b272c0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x561885b27300 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x561885b272e0 <col:32> 'int' 8
|-CXXRecordDecl 0x561885b27490 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561885b275a8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x561885b27650 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x561885b276b8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x561885b27748 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x561885b2d7e0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561885b2dc18 <col:12>
| |-CXXConstructorDecl 0x561885b2d8e8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561885b2d9f8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561885b27650 'data' 'const char *'
| | | `-ImplicitCastExpr 0x561885b301a0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x561885b30170 <col:12> 'const char *const' lvalue .data 0x561885b27650
| | |     `-DeclRefExpr 0x561885b30150 <col:12> 'const String::rep_t' lvalue ParmVar 0x561885b2d9f8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561885b276b8 'length' 'int'
| | | `-ImplicitCastExpr 0x561885b30230 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x561885b30200 <col:12> 'const int' lvalue .length 0x561885b276b8
| | |     `-DeclRefExpr 0x561885b301e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561885b2d9f8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561885b27748 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x561885b302c0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x561885b30290 <col:12> 'String::memo_t *const' lvalue .memo 0x561885b27748
| | |     `-DeclRefExpr 0x561885b30270 <col:12> 'const String::rep_t' lvalue ParmVar 0x561885b2d9f8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x561885b30318 <col:12>
| |-CXXConstructorDecl 0x561885b2da98 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561885b2da98
| | `-ParmVarDecl 0x561885b2dba8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x561885b33100 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x561885b3eb18 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561885b3ec28 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x561885b3f140 <col:12>
| |   |-BinaryOperator 0x561885b3ef58 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x561885b3ef10 <col:12> 'const char *' lvalue ->data 0x561885b27650
| |   | | `-CXXThisExpr 0x561885b3ef00 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561885b3ef40 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x561885b3eed0 <col:12> 'const char *const' lvalue .data 0x561885b27650
| |   |     `-DeclRefExpr 0x561885b3eeb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561885b3ec28 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x561885b3f020 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x561885b3efd8 <col:12> 'int' lvalue ->length 0x561885b276b8
| |   | | `-CXXThisExpr 0x561885b3efc8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561885b3f008 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x561885b3ef98 <col:12> 'const int' lvalue .length 0x561885b276b8
| |   |     `-DeclRefExpr 0x561885b3ef78 <col:12> 'const String::rep_t' lvalue ParmVar 0x561885b3ec28 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x561885b3f0e8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x561885b3f0a0 <col:12> 'String::memo_t *' lvalue ->memo 0x561885b27748
| |   | | `-CXXThisExpr 0x561885b3f090 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561885b3f0d0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x561885b3f060 <col:12> 'String::memo_t *const' lvalue .memo 0x561885b27748
| |   |     `-DeclRefExpr 0x561885b3f040 <col:12> 'const String::rep_t' lvalue ParmVar 0x561885b3ec28 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x561885b3f130 <col:12>
| |     `-UnaryOperator 0x561885b3f118 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561885b3f108 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x561885b3ec98 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561885b3ec98
|   `-ParmVarDecl 0x561885b3eda8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x561885b277c0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x561885b27a08 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x561885b27828 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x561885b278a8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x561885b27920 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x561885b2d7a0 <col:79, line:261:5>
|   |-BinaryOperator 0x561885b2d418 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x561885b2d3b0 <col:2, col:5> 'const char *' lvalue .data 0x561885b27650
|   | | `-MemberExpr 0x561885b2d380 <col:2> 'String::rep_t' lvalue ->_r 0x561885b277c0
|   | |   `-CXXThisExpr 0x561885b2d370 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x561885b2d400 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561885b2d3e0 <col:12> 'const char *' lvalue ParmVar 0x561885b27828 'data' 'const char *'
|   |-BinaryOperator 0x561885b2d4e0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x561885b2d478 <col:2, col:5> 'int' lvalue .length 0x561885b276b8
|   | | `-MemberExpr 0x561885b2d448 <col:2> 'String::rep_t' lvalue ->_r 0x561885b277c0
|   | |   `-CXXThisExpr 0x561885b2d438 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x561885b2d4c8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561885b2d4a8 <col:14> 'int' lvalue ParmVar 0x561885b278a8 'length' 'int'
|   `-IfStmt 0x561885b2d788 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x561885b2d600 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x561885b2d5e8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x561885b2d5c8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x561885b2d5a8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x561885b2d540 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x561885b27748
|     |       | `-MemberExpr 0x561885b2d510 <col:7> 'String::rep_t' lvalue ->_r 0x561885b277c0
|     |       |   `-CXXThisExpr 0x561885b2d500 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x561885b2d590 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x561885b2d570 <col:17> 'String::memo_t *' lvalue ParmVar 0x561885b27920 'memo' 'String::memo_t *'
|     `-CallExpr 0x561885b2d760 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x561885b2d748 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561885b2d650 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x561885b16438 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x561885b2d6b8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561885b27018
|         `-ImplicitCastExpr 0x561885b2d6a0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x561885b2d680 <col:27> 'String::memo_t *' lvalue ParmVar 0x561885b27920 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x561885b27cb8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x561885b27ad8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x561885b27b58 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x561885b27bd0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x561885b277c0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x561885b2dc28 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561885b2ddb8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x561885b2dd20 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x561885b2dc90 <col:2> '<bound member function type>' ->assign_memo 0x561885b27a08
|     | `-ImplicitCastExpr 0x561885b2dd58 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x561885b2dc80 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x561885b2dd70 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x561885b2dcc0 <col:14> 'const char *' lvalue ParmVar 0x561885b27ad8 'data' 'const char *'
|     |-ImplicitCastExpr 0x561885b2dd88 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561885b2dce0 <col:20> 'int' lvalue ParmVar 0x561885b27b58 'length' 'int'
|     `-ImplicitCastExpr 0x561885b2dda0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x561885b2dd00 <col:28> 'String::memo_t *' lvalue ParmVar 0x561885b27bd0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x561885b27e48 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x561885b27d88 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x561885b2e010 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x561885b2df90 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x561885b2dde0 <col:2> '<bound member function type>' ->assign_memo 0x561885b27a08
|     | `-CXXThisExpr 0x561885b2ddd0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x561885b2dfc8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x561885b2de60 <col:14, col:19> 'const char *' lvalue .data 0x561885b27650
|     |   `-MemberExpr 0x561885b2de30 <col:14, col:16> 'String::rep_t' lvalue ._r 0x561885b277c0
|     |     `-DeclRefExpr 0x561885b2de10 <col:14> 'const String' lvalue ParmVar 0x561885b27d88 'x' 'const String &'
|     |-ImplicitCastExpr 0x561885b2dfe0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x561885b2dee0 <col:25, col:30> 'int' lvalue .length 0x561885b276b8
|     |   `-MemberExpr 0x561885b2deb0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x561885b277c0
|     |     `-DeclRefExpr 0x561885b2de90 <col:25> 'const String' lvalue ParmVar 0x561885b27d88 'x' 'const String &'
|     `-ImplicitCastExpr 0x561885b2dff8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x561885b2df60 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x561885b27748
|         `-MemberExpr 0x561885b2df30 <col:38, col:40> 'String::rep_t' lvalue ._r 0x561885b277c0
|           `-DeclRefExpr 0x561885b2df10 <col:38> 'const String' lvalue ParmVar 0x561885b27d88 'x' 'const String &'
|-CXXMethodDecl 0x561885b27f10 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x561885b2e9d0 <col:31, line:278:5>
|   `-IfStmt 0x561885b2e9b8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x561885b2e0b0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x561885b2e098 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x561885b2e068 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x561885b27748
|     |     `-MemberExpr 0x561885b2e038 <col:6> 'String::rep_t' lvalue ->_r 0x561885b277c0
|     |       `-CXXThisExpr 0x561885b2e028 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x561885b2e990 <col:15, line:277:2>
|       |-ParenExpr 0x561885b2e560 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x561885b2e530 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x561885b2e1c0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x561885b2e1a8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x561885b2e190 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x561885b2e150 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561885b27018
|       |   |       `-ImplicitCastExpr 0x561885b2e138 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x561885b2e108 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x561885b27748
|       |   |           `-MemberExpr 0x561885b2e0d8 <col:27> 'String::rep_t' lvalue ->_r 0x561885b277c0
|       |   |             `-CXXThisExpr 0x561885b2e0c8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x561885b2e220 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x561885b2e200 <col:54> 'int' 0
|       |   `-CallExpr 0x561885b2e490 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x561885b2e478 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x561885b2e3f8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x561885b2e4d0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x561885b2e308 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x561885b2e4e8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x561885b2e338 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x561885b2e500 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x561885b2e370 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x561885b2e518 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x561885b2e3e0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x561885b2e3c8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x561885b2e390 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x561885b2e8b0 <line:274:6, line:275:22>
|       | |-CallExpr 0x561885b2e770 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x561885b2e758 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x561885b2e6d0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x561885b17880 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x561885b2e6a0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561885b27018
|       | |   `-ImplicitCastExpr 0x561885b2e688 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x561885b2e658 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x561885b27748
|       | |       `-MemberExpr 0x561885b2e628 <col:40> 'String::rep_t' lvalue ->_r 0x561885b277c0
|       | |         `-CXXThisExpr 0x561885b2e618 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x561885b2e870 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x561885b2e858 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x561885b2e798 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x561885b2c6f0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x561885b2e898 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x561885b2e7f8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x561885b27748
|       |       `-MemberExpr 0x561885b2e7c8 <col:15> 'String::rep_t' lvalue ->_r 0x561885b277c0
|       |         `-CXXThisExpr 0x561885b2e7b8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x561885b2e970 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x561885b2e908 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x561885b27748
|         | `-MemberExpr 0x561885b2e8d8 <col:6> 'String::rep_t' lvalue ->_r 0x561885b277c0
|         |   `-CXXThisExpr 0x561885b2e8c8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x561885b2e958 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x561885b2e938 <col:16> 'int' 0
|-CXXMethodDecl 0x561885b281a8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x561885b27fc8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x561885b28048 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x561885b280c0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x561885b28280 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x561885b284d0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x561885b28338 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x561885b283b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x561885b28430 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x561885b286b8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x561885b285a0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x561885b28620 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x561885b287b8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x561885b2eaa8 <col:41, line:286:5>
|   `-ReturnStmt 0x561885b2ea98 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x561885b2ea68 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x561885b2ea30 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x561885b2ea18 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x561885b2e9f8 <col:46> 'int' 1
|-CXXMethodDecl 0x561885b28a58 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x561885b28870 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x561885b288f0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x561885b28970 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x561885b2c6f0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x561885b28b20 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x561885b2c7c0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x561885b2c990 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x561885b2c878 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x561885b2c8f8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x561885b2ca50 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x561885b2cb18 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x561885b2cc18 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x561885b2cc90 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x561885b2cd08 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x561885b2cd70 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x561885b2ce70 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x561885b2cec0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885b2ce50 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x561885b2ce30 <col:22> 'int' 14
|-CXXMethodDecl 0x561885b2d0d8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x561885b2cef0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x561885b2cf70 <col:38> col:41 'int'
| `-ParmVarDecl 0x561885b2cff0 <col:43> col:46 'int'
|-FriendDecl 0x561885b2d1e0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x561885b2d270 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885beee70 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x561885bef048 prev 0x561885beee70 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561885bef0d8 <col:46, col:52> col:46 public
|-TypedefDecl 0x561885bef100 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885bf0a60 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x561885bf0a10 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x561885bf09f0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x561885bef318 'type'
|     `-SubstTemplateTypeParmType 0x561885bef2e0 'String' sugar
|       |-TemplateTypeParmType 0x561885ae1c70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ae1c20 'T'
|       `-RecordType 0x561885b1e460 'String'
|         `-CXXRecord 0x561885b1e3d0 'String'
|-TypedefDecl 0x561885bf0b18 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x561885bf0ae0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x561885bf0ac0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x561885bf0a60 'type'
|     `-ElaboratedType 0x561885bf0a10 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x561885bf09f0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x561885bef318 'type'
|         `-SubstTemplateTypeParmType 0x561885bef2e0 'String' sugar
|           |-TemplateTypeParmType 0x561885ae1c70 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561885ae1c20 'T'
|           `-RecordType 0x561885b1e460 'String'
|             `-CXXRecord 0x561885b1e3d0 'String'
|-CXXMethodDecl 0x561885bf0c98 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x561885bf0ba8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x561885bf0d88 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561885bf0e68 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561885bf0e68
|-CXXMethodDecl 0x561885bf1138 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x561885bf1040 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x561885bf1378 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x561885bf11f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885bf1268 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561885bf1548 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x561885bf1438 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885bf14b0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561885bf16a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x561885bf1778 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x561885bf19c8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x561885bf1838 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x561885bf18b0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561885d9bd68 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x561885d9bbe0 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x561885d9bc58 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561885d9bf28 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x561885d9be38 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561885d9c0e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x561885d9bff0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561885d9c1a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885d9c250 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885d9c488 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x561885d9c300 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885d9c378 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561885d9c728 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x561885d9c630 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x561885d9c7f0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x561885d9c840 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561885d9c890 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885d55e20 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x561885bed8d8 prev 0x561885d55e20 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561885beede0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x561885beed90 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x561885beed70 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x561885beec20 'type'
|     `-SubstTemplateTypeParmType 0x561885beeab0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x561885ab7a20 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x561885ab79c8 'F'
|       `-RecordType 0x561885bee710 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x561885bee630 'typed_array_memory'
|-FieldDecl 0x561885d9c8e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x561885d9c930 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561885d9c968 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x561885bed970 'String' sugar
|   |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561885aeef38 'T'
|   `-RecordType 0x561885b1e460 'String'
|     `-CXXRecord 0x561885b1e3d0 'String'
|-TypedefDecl 0x561885d9c9f8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x561885d9c9c0 'String &'
|   `-SubstTemplateTypeParmType 0x561885bed970 'String' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885b1e460 'String'
|       `-CXXRecord 0x561885b1e3d0 'String'
|-TypedefDecl 0x561885d9ca88 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x561885d9ca50 'const String &'
|   `-QualType 0x561885bed971 'const String' const
|     `-SubstTemplateTypeParmType 0x561885bed970 'String' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885b1e460 'String'
|         `-CXXRecord 0x561885b1e3d0 'String'
|-TypedefDecl 0x561885d9cb18 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x561885d9cae0 'String *'
|   `-SubstTemplateTypeParmType 0x561885bed970 'String' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885b1e460 'String'
|       `-CXXRecord 0x561885b1e3d0 'String'
|-TypedefDecl 0x561885d9cba8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x561885d9cb70 'const String *'
|   `-QualType 0x561885bed971 'const String' const
|     `-SubstTemplateTypeParmType 0x561885bed970 'String' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885b1e460 'String'
|         `-CXXRecord 0x561885b1e3d0 'String'
|-TypedefDecl 0x561885d9d800 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x561885d9d7b0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x561885d9d790 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x561885d9d6c8 'type'
|     `-LValueReferenceType 0x561885d9d690 'const String &'
|       `-QualType 0x561885d9d431 'const String' const
|         `-SubstTemplateTypeParmType 0x561885d9d430 'String' sugar
|           |-TemplateTypeParmType 0x561885ac1970 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561885ac1918 'T'
|           `-RecordType 0x561885b1e460 'String'
|             `-CXXRecord 0x561885b1e3d0 'String'
|-TypedefDecl 0x561885d9d868 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x561885d9ca50 'const String &'
|   `-QualType 0x561885bed971 'const String' const
|     `-SubstTemplateTypeParmType 0x561885bed970 'String' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885b1e460 'String'
|         `-CXXRecord 0x561885b1e3d0 'String'
|-TypedefDecl 0x561885d9d8c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885d9d928 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x561885d9cae0 'String *'
|   `-SubstTemplateTypeParmType 0x561885bed970 'String' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885b1e460 'String'
|       `-CXXRecord 0x561885b1e3d0 'String'
|-TypedefDecl 0x561885d9d990 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x561885d9cb70 'const String *'
|   `-QualType 0x561885bed971 'const String' const
|     `-SubstTemplateTypeParmType 0x561885bed970 'String' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885b1e460 'String'
|         `-CXXRecord 0x561885b1e3d0 'String'
|-EnumDecl 0x561885d9d9e8 <line:134:5> col:5
| `-EnumConstantDecl 0x561885d9dae0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561885d9dac0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561885af0618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561885af05f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561885af05d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561885d9db68 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561885d9ddf8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x561885d9dc20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885d9dcc0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x561885d9e088 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x561885d9df70 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x561885d9e348 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x561885d9e230 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x561885d9e660 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x561885d9e540 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x561885d9e970 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x561885d9e850 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x561885d9ec60 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x561885d9eaa8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885d9eb20 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x561885d9ed88 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x561885d9ee38 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885d9ee90 <col:30> Inherited
|-CXXMethodDecl 0x561885d9eed8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x561885d9ef88 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885d9efe0 <col:30> Inherited
|-CXXMethodDecl 0x561885d9f0a8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x561885d9f158 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885d9f1b0 <col:30> Inherited
|-CXXMethodDecl 0x561885d9f1f8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x561885d9f2a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885d9f300 <col:30> Inherited
|-CXXMethodDecl 0x561885d9f348 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x561885d9f3f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885d9f450 <col:30> Inherited
|-CXXMethodDecl 0x561885d9f498 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x561885d9f548 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885d9f5a0 <col:30> Inherited
|-CXXMethodDecl 0x561885d9f5c8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885d9f678 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885d9f728 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561885d9f8e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x561885d9f7d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885d9f850 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x561885d9fa38 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561885d9f9a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885d9fbe8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x561885d9faf0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885d9fca0 <col:20>
| `-OptimizeNoneAttr 0x561885d9fcf8 <col:30>
|-CXXMethodDecl 0x561885d9fe18 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x561885d9fd20 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885d9fed0 <col:20>
| `-OptimizeNoneAttr 0x561885d9ff28 <col:30>
|-CXXMethodDecl 0x561885d9ffe0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885d9ff50 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885da0128 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885da0098 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885da0258 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x561885da0358 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x561885da0428 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x561885da04f8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x561885da0638 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885da05a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885da0780 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885da06f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885da08c8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x561885da0838 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885da0980 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561885da0a80 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561885da09f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885da0b38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561885da0bf8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x561885da0cf8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x561885da0e78 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x561885da0db8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x561885da1638 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561885da0f30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x561885da1598 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x561885da1498 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x561885da1718 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885da1868 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x561885da17d8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x561885da1920 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561885da1b68 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x561885da19e0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x561885da1a58 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x561885da1cf8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x561885da1c38 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x561885da1f08 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x561885da1dc0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x561885da1e38 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x561885da1fc8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885da2228 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x561885da2130 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x561885da22f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561885da22f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885e5d940 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x561885e5db18 prev 0x561885e5d940 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561885e5dba8 <col:46, col:52> col:46 public
|-TypedefDecl 0x561885e5dbd0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e61150 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x561885e61100 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x561885e5fa30 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x561885e5f930 'type'
|     `-TemplateSpecializationType 0x561885e5f8c0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x561885e5ddf0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x561885e5ddd0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x561885e5ddb0 <col:24> 'unsigned long' 4
|       `-RecordType 0x561885e5def0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x561885e5de10 'char_array'
|-TypedefDecl 0x561885e61208 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x561885e611d0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x561885e611b0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x561885e61150 'type'
|     `-ElaboratedType 0x561885e61100 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x561885e5fa30 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x561885e5f930 'type'
|         `-TemplateSpecializationType 0x561885e5f8c0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x561885e5ddf0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x561885e5ddd0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x561885e5ddb0 <col:24> 'unsigned long' 4
|           `-RecordType 0x561885e5def0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x561885e5de10 'char_array'
|-CXXMethodDecl 0x561885e61388 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x561885e61298 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x561885e61478 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561885e61558 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561885e61558
|-CXXMethodDecl 0x561885e61828 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x561885e61730 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x561885e61a68 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x561885e618e0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885e61958 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561885e61c38 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x561885e61b28 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885e61ba0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561885e61d98 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x561885e61e68 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x561885e620b8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x561885e61f28 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x561885e61fa0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561885e62318 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x561885e62188 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x561885e62200 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561885e624d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x561885e623e8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561885e62698 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x561885e625a0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561885e62750 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885e62800 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885e62a38 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x561885e628b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885e62928 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561885e62cd8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x561885e62be0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x561885e62da0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x561885e62df0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561885e62e40 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885e5c560 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x561885e5c768 prev 0x561885e5c560 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561885e5d8b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x561885e5d860 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x561885e5d840 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x561885e5d6f0 'type'
|     `-SubstTemplateTypeParmType 0x561885e5d510 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x561885ab72a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ab7248 'T'
|       `-RecordType 0x561885e5d060 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x561885e5cf78 'sized_array_memory'
|-FieldDecl 0x561885e62e90 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x561885e62ee0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561885e62f18 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x561885e5c800 'unsigned int' sugar
|   |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561885aeef38 'T'
|   `-BuiltinType 0x5618857ef620 'unsigned int'
|-TypedefDecl 0x561885e62fa8 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x561885e62f70 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x561885e5c800 'unsigned int' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-BuiltinType 0x5618857ef620 'unsigned int'
|-TypedefDecl 0x561885e63068 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x561885e63030 'const unsigned int &'
|   `-QualType 0x561885e5c801 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x561885e5c800 'unsigned int' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-BuiltinType 0x5618857ef620 'unsigned int'
|-TypedefDecl 0x561885e630f8 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x561885e630c0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x561885e5c800 'unsigned int' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-BuiltinType 0x5618857ef620 'unsigned int'
|-TypedefDecl 0x561885e63188 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x561885e63150 'const unsigned int *'
|   `-QualType 0x561885e5c801 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x561885e5c800 'unsigned int' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-BuiltinType 0x5618857ef620 'unsigned int'
|-TypedefDecl 0x561885e63d70 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x561885e63d20 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x561885e63d00 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x561885e63c90 'type'
|     `-SubstTemplateTypeParmType 0x561885e63a50 'unsigned int' sugar
|       |-TemplateTypeParmType 0x561885ac20a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ac2050 'T'
|       `-BuiltinType 0x5618857ef620 'unsigned int'
|-TypedefDecl 0x561885e63dd8 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x561885e63030 'const unsigned int &'
|   `-QualType 0x561885e5c801 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x561885e5c800 'unsigned int' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-BuiltinType 0x5618857ef620 'unsigned int'
|-TypedefDecl 0x561885e63e30 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e63e98 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x561885e630c0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x561885e5c800 'unsigned int' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-BuiltinType 0x5618857ef620 'unsigned int'
|-TypedefDecl 0x561885e63f00 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x561885e63150 'const unsigned int *'
|   `-QualType 0x561885e5c801 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x561885e5c800 'unsigned int' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-BuiltinType 0x5618857ef620 'unsigned int'
|-EnumDecl 0x561885e63f58 <line:134:5> col:5
| `-EnumConstantDecl 0x561885e64050 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561885e64030 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561885af0618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561885af05f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561885af05d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561885e640d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561885e64328 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e64190 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e64230 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x561885e645e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x561885e644d0 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x561885e648a8 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x561885e64790 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x561885e64bf0 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x561885e64ad0 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x561885e64f00 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x561885e64de0 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x561885e651f0 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e65038 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e650b0 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x561885e65318 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x561885e653f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e65450 <col:30> Inherited
|-CXXMethodDecl 0x561885e65498 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x561885e65548 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e655a0 <col:30> Inherited
|-CXXMethodDecl 0x561885e65638 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x561885e656e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e65740 <col:30> Inherited
|-CXXMethodDecl 0x561885e65788 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x561885e65838 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e65890 <col:30> Inherited
|-CXXMethodDecl 0x561885e658d8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x561885e65988 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e659e0 <col:30> Inherited
|-CXXMethodDecl 0x561885e65a28 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x561885e65ad8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e65b30 <col:30> Inherited
|-CXXMethodDecl 0x561885e65b58 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e65c08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e65cb8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561885e65e78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e65d68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e65de0 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x561885e65fc8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561885e65f38 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e66178 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x561885e66080 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e66230 <col:20>
| `-OptimizeNoneAttr 0x561885e66288 <col:30>
|-CXXMethodDecl 0x561885e663a8 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x561885e662b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e66460 <col:20>
| `-OptimizeNoneAttr 0x561885e664b8 <col:30>
|-CXXMethodDecl 0x561885e66570 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e664e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e666b8 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e66628 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e667e8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x561885e66918 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x561885e669e8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x561885e66ab8 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x561885e66bf8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e66b68 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e66d40 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e66cb0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e66e88 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x561885e66df8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e66f40 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561885e67040 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561885e66fb0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e670f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561885e671b8 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x561885e672b8 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x561885e67438 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e67378 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x561885e69148 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561885e674f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x561885e690a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x561885e68fa8 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x561885e69228 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885e69378 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e692e8 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x561885e69430 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561885e69678 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e694f0 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x561885e69568 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x561885e69838 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x561885e69748 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x561885e69a88 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x561885e69900 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x561885e69978 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x561885e69b48 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885e69da8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x561885e69cb0 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x561885e69e78 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561885e69e78

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885e4a1f8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x561885e6a0d8 prev 0x561885e4a1f8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561885e6b0f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x561885e6b0a0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x561885e6b080 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x561885e6af30 'type'
|     `-SubstTemplateTypeParmType 0x561885e5d510 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x561885ab72a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ab7248 'T'
|       `-RecordType 0x561885e5d060 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x561885e5cf78 'sized_array_memory'
|-FieldDecl 0x561885e6b1f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x561885e6b240 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561885e6b278 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x561885e6a170 'int' sugar
|   |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561885aeef38 'T'
|   `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e6b308 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x561885e6b2d0 'int &'
|   `-SubstTemplateTypeParmType 0x561885e6a170 'int' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e6b3c8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x561885e6b390 'const int &'
|   `-QualType 0x561885e6a171 'const int' const
|     `-SubstTemplateTypeParmType 0x561885e6a170 'int' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e6b458 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x561885e6b420 'int *'
|   `-SubstTemplateTypeParmType 0x561885e6a170 'int' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e6b4e8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x561885e6b4b0 'const int *'
|   `-QualType 0x561885e6a171 'const int' const
|     `-SubstTemplateTypeParmType 0x561885e6a170 'int' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e6c0d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x561885e6c080 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x561885e6c060 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x561885e6bff0 'type'
|     `-SubstTemplateTypeParmType 0x561885e6bdb0 'int' sugar
|       |-TemplateTypeParmType 0x561885ac20a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ac2050 'T'
|       `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e6c138 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x561885e6b390 'const int &'
|   `-QualType 0x561885e6a171 'const int' const
|     `-SubstTemplateTypeParmType 0x561885e6a170 'int' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e6c190 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e6c1f8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x561885e6b420 'int *'
|   `-SubstTemplateTypeParmType 0x561885e6a170 'int' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e6c260 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x561885e6b4b0 'const int *'
|   `-QualType 0x561885e6a171 'const int' const
|     `-SubstTemplateTypeParmType 0x561885e6a170 'int' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-BuiltinType 0x5618857ef580 'int'
|-EnumDecl 0x561885e6c2b8 <line:134:5> col:5
| `-EnumConstantDecl 0x561885e6c3b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561885e6c390 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561885af0618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561885af05f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561885af05d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561885e6c438 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561885e6c688 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e6c4f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e6c590 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x561885e6c948 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x561885e6c830 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x561885e6cc08 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x561885e6caf0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x561885e6cf20 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x561885e6ce00 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x561885e6d230 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x561885e6d110 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x561885e6d520 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e6d368 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e6d3e0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x561885e6d648 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x561885e6d728 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e6d780 <col:30> Inherited
|-CXXMethodDecl 0x561885e6d7c8 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x561885e6d878 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e6d8d0 <col:30> Inherited
|-CXXMethodDecl 0x561885e6d998 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x561885e6da48 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e6daa0 <col:30> Inherited
|-CXXMethodDecl 0x561885e6dae8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x561885e6db98 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e6dbf0 <col:30> Inherited
|-CXXMethodDecl 0x561885e6dc38 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x561885e6dce8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e6dd40 <col:30> Inherited
|-CXXMethodDecl 0x561885e6dd88 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x561885e6de38 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e6de90 <col:30> Inherited
|-CXXMethodDecl 0x561885e6deb8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e6df68 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e6e018 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561885e6e1d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e6e0c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e6e140 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x561885e6e328 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561885e6e298 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e6e4d8 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x561885e6e3e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e6e590 <col:20>
| `-OptimizeNoneAttr 0x561885e6e5e8 <col:30>
|-CXXMethodDecl 0x561885e6e708 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x561885e6e610 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e6e7c0 <col:20>
| `-OptimizeNoneAttr 0x561885e6e818 <col:30>
|-CXXMethodDecl 0x561885e6e8d0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e6e840 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e6ea18 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e6e988 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e6eb48 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x561885e6ec78 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x561885e6ed48 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x561885e6ee18 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x561885e6ef58 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e6eec8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e6f0a0 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e6f010 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e6f1e8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x561885e6f158 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e6f2a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561885e6f3a0 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561885e6f310 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e6f458 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561885e6f518 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x561885e6f618 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x561885e6f798 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e6f6d8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x561885e6ff58 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561885e6f850 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x561885e6feb8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x561885e6fdb8 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x561885e70038 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885e70188 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e700f8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x561885e70240 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561885e70488 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e70300 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x561885e70378 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x561885e70648 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x561885e70558 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x561885e70898 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x561885e70710 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x561885e70788 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x561885e70958 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885e70bb8 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x561885e70ac0 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x561885e70c88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561885e70c88

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885e73110 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x561885e73228 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x561885e732c8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x561885e73328 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x561885e733c0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x561885e733c0
| `-ParmVarDecl 0x561885e734d8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x561885e73578 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x561885e73578
| `-ParmVarDecl 0x561885e73688 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x561885e73728 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x561885e73728
| `-ParmVarDecl 0x561885e73838 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x561885e738a8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x561885e738a8
| `-ParmVarDecl 0x561885e739b8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x561885e73a40 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x561885e73a40

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885e74fd0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x561885e751a8 prev 0x561885e74fd0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561885e75238 <col:46, col:52> col:46 public
|-TypedefDecl 0x561885e75260 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e76c20 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x561885e76bd0 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x561885e76bb0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x561885e75478 'type'
|     `-SubstTemplateTypeParmType 0x561885e75440 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x561885ae1c70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ae1c20 'T'
|       `-RecordType 0x561885e731a0 'Router::element_landmark_t'
|         `-CXXRecord 0x561885e73110 'element_landmark_t'
|-TypedefDecl 0x561885e76cd8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x561885e76ca0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x561885e76c80 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x561885e76c20 'type'
|     `-ElaboratedType 0x561885e76bd0 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x561885e76bb0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x561885e75478 'type'
|         `-SubstTemplateTypeParmType 0x561885e75440 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x561885ae1c70 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561885ae1c20 'T'
|           `-RecordType 0x561885e731a0 'Router::element_landmark_t'
|             `-CXXRecord 0x561885e73110 'element_landmark_t'
|-CXXMethodDecl 0x561885e76e58 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x561885e76d68 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x561885e76f48 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561885e77028 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561885e77028
|-CXXMethodDecl 0x561885e772f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x561885e77200 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x561885e77538 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x561885e773b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885e77428 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561885e77708 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x561885e775f8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885e77670 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561885e77868 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x561885e77938 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x561885e77b88 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x561885e779f8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x561885e77a70 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561885e77de8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x561885e77c58 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x561885e77cd0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561885e77fa8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x561885e77eb8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561885e78168 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x561885e78070 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561885e78220 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885e782d0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885e78508 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x561885e78380 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885e783f8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561885e787a8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x561885e786b0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x561885e78870 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x561885e788c0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561885e78910 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885e73b30 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x561885e73d38 prev 0x561885e73b30 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561885e74f40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x561885e74ef0 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x561885e74ed0 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x561885e74d80 'type'
|     `-SubstTemplateTypeParmType 0x561885e74c10 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x561885ab7a20 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x561885ab79c8 'F'
|       `-RecordType 0x561885e74870 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x561885e74790 'typed_array_memory'
|-FieldDecl 0x561885e78960 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x561885e789b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561885e789e8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x561885e73dd0 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561885aeef38 'T'
|   `-RecordType 0x561885e731a0 'Router::element_landmark_t'
|     `-CXXRecord 0x561885e73110 'element_landmark_t'
|-TypedefDecl 0x561885e78a78 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x561885e78a40 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x561885e73dd0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885e731a0 'Router::element_landmark_t'
|       `-CXXRecord 0x561885e73110 'element_landmark_t'
|-TypedefDecl 0x561885e78b08 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x561885e78ad0 'const Router::element_landmark_t &'
|   `-QualType 0x561885e73dd1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x561885e73dd0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e731a0 'Router::element_landmark_t'
|         `-CXXRecord 0x561885e73110 'element_landmark_t'
|-TypedefDecl 0x561885e78b98 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x561885e78b60 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x561885e73dd0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885e731a0 'Router::element_landmark_t'
|       `-CXXRecord 0x561885e73110 'element_landmark_t'
|-TypedefDecl 0x561885e78c28 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x561885e78bf0 'const Router::element_landmark_t *'
|   `-QualType 0x561885e73dd1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x561885e73dd0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e731a0 'Router::element_landmark_t'
|         `-CXXRecord 0x561885e73110 'element_landmark_t'
|-TypedefDecl 0x561885e79880 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x561885e79830 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x561885e79810 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x561885e79748 'type'
|     `-LValueReferenceType 0x561885e79710 'const Router::element_landmark_t &'
|       `-QualType 0x561885e794b1 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x561885e794b0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x561885ac1970 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561885ac1918 'T'
|           `-RecordType 0x561885e731a0 'Router::element_landmark_t'
|             `-CXXRecord 0x561885e73110 'element_landmark_t'
|-TypedefDecl 0x561885e798e8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x561885e78ad0 'const Router::element_landmark_t &'
|   `-QualType 0x561885e73dd1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x561885e73dd0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e731a0 'Router::element_landmark_t'
|         `-CXXRecord 0x561885e73110 'element_landmark_t'
|-TypedefDecl 0x561885e79940 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e799a8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x561885e78b60 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x561885e73dd0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885e731a0 'Router::element_landmark_t'
|       `-CXXRecord 0x561885e73110 'element_landmark_t'
|-TypedefDecl 0x561885e79a10 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x561885e78bf0 'const Router::element_landmark_t *'
|   `-QualType 0x561885e73dd1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x561885e73dd0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e731a0 'Router::element_landmark_t'
|         `-CXXRecord 0x561885e73110 'element_landmark_t'
|-EnumDecl 0x561885e79a68 <line:134:5> col:5
| `-EnumConstantDecl 0x561885e79b60 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561885e79b40 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561885af0618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561885af05f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561885af05d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561885e79be8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561885e79e78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e79ca0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e79d40 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x561885e7a138 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x561885e7a020 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x561885e7a3f8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x561885e7a2e0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x561885e7a740 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x561885e7a620 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x561885e7aa50 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x561885e7a930 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x561885e7ad40 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e7ab88 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e7ac00 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x561885e7ae68 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x561885e7af48 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e7afa0 <col:30> Inherited
|-CXXMethodDecl 0x561885e7afe8 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x561885e7b098 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e7d550 <col:30> Inherited
|-CXXMethodDecl 0x561885e7d618 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x561885e7d6c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e7d720 <col:30> Inherited
|-CXXMethodDecl 0x561885e7d768 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x561885e7d818 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e7d870 <col:30> Inherited
|-CXXMethodDecl 0x561885e7d8b8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x561885e7d968 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e7d9c0 <col:30> Inherited
|-CXXMethodDecl 0x561885e7da08 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x561885e7dab8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e7db10 <col:30> Inherited
|-CXXMethodDecl 0x561885e7db38 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e7dbe8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e7dc98 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561885e7de58 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e7dd48 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e7ddc0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x561885e7dfa8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561885e7df18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e7e158 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x561885e7e060 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e7e210 <col:20>
| `-OptimizeNoneAttr 0x561885e7e268 <col:30>
|-CXXMethodDecl 0x561885e7e388 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x561885e7e290 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e7e440 <col:20>
| `-OptimizeNoneAttr 0x561885e7e498 <col:30>
|-CXXMethodDecl 0x561885e7e550 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e7e4c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e7e698 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e7e608 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e7e7c8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x561885e7e8f8 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x561885e7e9c8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x561885e7ea98 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x561885e7ebd8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e7eb48 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e7ed20 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e7ec90 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e7ee68 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x561885e7edd8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e7ef20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561885e7f020 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561885e7ef90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e7f0d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561885e7f198 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x561885e7f298 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x561885e7f418 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e7f358 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x561885e7fba8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561885e7f4d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x561885e7fb08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x561885e7fa08 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x561885e7fc88 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885e7fdd8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e7fd48 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x561885e7fe90 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561885e800d8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e7ff50 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x561885e7ffc8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x561885e80268 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x561885e801a8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x561885e80478 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x561885e80330 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x561885e803a8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x561885e80538 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885e80798 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x561885e806a0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x561885e80868 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561885e80868

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885dd5e90 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x561885dd6068 prev 0x561885dd5e90 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561885dd60f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x561885dd6120 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885dd7d50 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x561885dd7d00 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x561885dd65d0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x561885dd64d0 'type'
|     `-TemplateSpecializationType 0x561885dd6460 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x561885dd6340 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x561885dd6320 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x561885dd6300 <col:24> 'unsigned long' 16
|       `-RecordType 0x561885dd6440 'char_array<16>'
|         `-ClassTemplateSpecialization 0x561885dd6360 'char_array'
|-TypedefDecl 0x561885dd7e08 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x561885dd7dd0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x561885dd7db0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x561885dd7d50 'type'
|     `-ElaboratedType 0x561885dd7d00 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x561885dd65d0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x561885dd64d0 'type'
|         `-TemplateSpecializationType 0x561885dd6460 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x561885dd6340 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x561885dd6320 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x561885dd6300 <col:24> 'unsigned long' 16
|           `-RecordType 0x561885dd6440 'char_array<16>'
|             `-ClassTemplateSpecialization 0x561885dd6360 'char_array'
|-CXXMethodDecl 0x561885dd7f88 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x561885dd7e98 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x561885dd8078 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561885dd8158 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561885dd8158
|-CXXMethodDecl 0x561885dd8428 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x561885dd8330 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x561885dd8668 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561885dd84e0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885dd8558 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561885dd8838 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561885dd8728 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885dd87a0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561885dd8998 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x561885dd8a68 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x561885dd8cb8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561885dd8b28 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x561885dd8ba0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561885dd8f18 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x561885dd8d88 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x561885dd8e00 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561885dd90d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x561885dd8fe8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561885dd9298 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x561885dd91a0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561885dd9350 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885dd9400 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885dd9638 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561885dd94b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885dd9528 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561885dd98d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x561885dd97e0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x561885dd99a0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x561885dd99f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561885dd9a40 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885e80f80 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x561885e81188 prev 0x561885e80f80 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561885e82250 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x561885e82200 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x561885e821e0 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x561885e82090 'type'
|     `-SubstTemplateTypeParmType 0x561885dd5a60 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x561885ab72a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ab7248 'T'
|       `-RecordType 0x561885dd55b0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x561885dd54c8 'sized_array_memory'
|-FieldDecl 0x561885e82350 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x561885e823a0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561885e823d8 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x561885e81220 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561885aeef38 'T'
|   `-RecordType 0x561885e4e6b0 'Router::Connection'
|     `-CXXRecord 0x561885e4e620 'Connection'
|-TypedefDecl 0x561885e82498 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x561885e82460 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x561885e81220 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885e4e6b0 'Router::Connection'
|       `-CXXRecord 0x561885e4e620 'Connection'
|-TypedefDecl 0x561885e82528 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x561885e824f0 'const Router::Connection &'
|   `-QualType 0x561885e81221 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x561885e81220 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e4e6b0 'Router::Connection'
|         `-CXXRecord 0x561885e4e620 'Connection'
|-TypedefDecl 0x561885e825b8 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x561885e82580 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x561885e81220 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885e4e6b0 'Router::Connection'
|       `-CXXRecord 0x561885e4e620 'Connection'
|-TypedefDecl 0x561885e82648 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x561885e82610 'const Router::Connection *'
|   `-QualType 0x561885e81221 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x561885e81220 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e4e6b0 'Router::Connection'
|         `-CXXRecord 0x561885e4e620 'Connection'
|-TypedefDecl 0x561885e832a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x561885e83250 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x561885e83230 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x561885e83168 'type'
|     `-LValueReferenceType 0x561885e83130 'const Router::Connection &'
|       `-QualType 0x561885e82ed1 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x561885e82ed0 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x561885ac1970 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561885ac1918 'T'
|           `-RecordType 0x561885e4e6b0 'Router::Connection'
|             `-CXXRecord 0x561885e4e620 'Connection'
|-TypedefDecl 0x561885e83308 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x561885e824f0 'const Router::Connection &'
|   `-QualType 0x561885e81221 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x561885e81220 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e4e6b0 'Router::Connection'
|         `-CXXRecord 0x561885e4e620 'Connection'
|-TypedefDecl 0x561885e83360 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e833c8 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x561885e82580 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x561885e81220 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885e4e6b0 'Router::Connection'
|       `-CXXRecord 0x561885e4e620 'Connection'
|-TypedefDecl 0x561885e83430 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x561885e82610 'const Router::Connection *'
|   `-QualType 0x561885e81221 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x561885e81220 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e4e6b0 'Router::Connection'
|         `-CXXRecord 0x561885e4e620 'Connection'
|-EnumDecl 0x561885e83488 <line:134:5> col:5
| `-EnumConstantDecl 0x561885e83580 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561885e83560 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561885af0618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561885af05f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561885af05d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561885e83608 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561885e83898 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e836c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e83760 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x561885e83b58 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x561885e83a40 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x561885e83e18 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x561885e83d00 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x561885e84160 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x561885e84040 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x561885e84470 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x561885e84350 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x561885e84760 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e845a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e84620 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x561885e848b8 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x561885e84998 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e849f0 <col:30> Inherited
|-CXXMethodDecl 0x561885e84a38 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x561885e84ae8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e84b40 <col:30> Inherited
|-CXXMethodDecl 0x561885e84c08 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x561885e84cb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e84d10 <col:30> Inherited
|-CXXMethodDecl 0x561885e84d58 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x561885e84e08 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e84e60 <col:30> Inherited
|-CXXMethodDecl 0x561885e84ea8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x561885e84f58 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e84fb0 <col:30> Inherited
|-CXXMethodDecl 0x561885e84ff8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x561885e850a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e85100 <col:30> Inherited
|-CXXMethodDecl 0x561885e85128 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e851d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e85288 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561885e85448 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e85338 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e853b0 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x561885e87a90 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561885e87a00 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e87c38 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x561885e87b48 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e87cf0 <col:20>
| `-OptimizeNoneAttr 0x561885e87d48 <col:30>
|-CXXMethodDecl 0x561885e87e68 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x561885e87d70 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e87f20 <col:20>
| `-OptimizeNoneAttr 0x561885e87f78 <col:30>
|-CXXMethodDecl 0x561885e88030 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e87fa0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e88178 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e880e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e882a8 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x561885e883d8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x561885e884a8 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x561885e88578 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x561885e886b8 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e88628 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e88800 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e88770 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e88948 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x561885e888b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e88a00 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561885e88b00 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561885e88a70 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e88bb8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561885e88c78 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x561885e88d78 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x561885e88f28 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e88e38 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x561885e896e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561885e88fe0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x561885e89648 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x561885e89548 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x561885e897c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885e89918 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e89888 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x561885e899d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561885e89c18 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e89a90 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x561885e89b08 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x561885e89dd8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x561885e89ce8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x561885e8a028 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x561885e89ea0 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x561885e89f18 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x561885e8a0e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885e8a348 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x561885e8a250 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x561885e8a418 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561885e8a418

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885ea3720 prev 0x561885d6ccf0 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561885ea3818 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x561885ea38a8 <col:22, col:28> col:22 public
|-EnumDecl 0x561885ea38d0 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x561885ea39e8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x561885ea39c8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x561885ea39b0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x561885ea3990 <col:14> 'int' 999
| |-EnumConstantDecl 0x561885ea3a90 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x561885ea3a70 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x561885ea3a58 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x561885ea3a38 <col:14> 'int' 1
| |-EnumConstantDecl 0x561885ea3b20 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x561885ea3b00 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x561885ea3ae0 <col:17> 'int' 0
| |-EnumConstantDecl 0x561885ea3bb0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x561885ea3b90 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x561885ea3b70 <col:13> 'int' 1
| |-EnumConstantDecl 0x561885ea3c40 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x561885ea3c20 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x561885ea3c00 <col:16> 'int' 2
| |-EnumConstantDecl 0x561885ea3cd0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x561885ea3cb0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x561885ea3c90 <col:13> 'int' 3
| |-EnumConstantDecl 0x561885ea3d60 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x561885ea3d40 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x561885ea3d20 <col:15> 'int' 4
| |-EnumConstantDecl 0x561885ea3df0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x561885ea3dd0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x561885ea3db0 <col:14> 'int' 5
| |-EnumConstantDecl 0x561885ea3e80 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x561885ea3e60 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x561885ea3e40 <col:12> 'int' 6
| `-EnumConstantDecl 0x561885ea3f10 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x561885ea3ef0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x561885ea3ed0 <col:13> 'int' 7
|-VarDecl 0x561885ea3f80 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x561885ea4008 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x561885ea4090 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x561885ea5630 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x561885ea56b8 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x561885ea5740 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x561885ea57c8 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x561885ea5850 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x561885ea58d8 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x561885ea5960 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x561885ea59e8 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x561885ea5ae8 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x561885eaae38 '_nerrors' 'int'
| | `-IntegerLiteral 0x561885eab5c8 <line:128:13> 'int' 0
| `-CompoundStmt 0x561885eab638 <col:16, line:129:5>
|-CXXDestructorDecl 0x561885ea5bd8 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x561885eab648 <col:29, line:132:5>
|-CXXMethodDecl 0x561885ea5d98 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x561885ea5cd0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561885ea5e60 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x561885ea5f48 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x561885eab6a0 <col:44, line:161:5>
|   `-ReturnStmt 0x561885eab690 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x561885eab678 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x561885eab658 <col:9> 'ErrorHandler *' lvalue Var 0x561885eaae98 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x561885ea6088 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x561885ea5ff8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561885ea6150 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x561885eab700 <col:43, line:173:5>
|   `-ReturnStmt 0x561885eab6f0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x561885eab6d8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x561885eab6b8 <col:9> 'ErrorHandler *' lvalue Var 0x561885eaaf10 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x561885ea6208 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x561885ea6288 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x561885ea6398 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x561885ea6308 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x561885ea64e8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x561885ea6458 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x561885ea6640 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x561885ea65a8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x561885ea6798 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x561885ea6700 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x561885ea68f0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x561885ea6858 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x561885ea6b00 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x561885ea69a8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x561885ea6a28 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x561885ea6cd8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x561885ea6bc0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x561885ea6c40 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x561885ea6ef8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x561885ea6d98 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x561885ea6e18 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x561885ea70d8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x561885ea6fb8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x561885ea7038 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x561885ea72b8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x561885ea7198 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x561885ea7218 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x561885ea7440 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x561885ea7378 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x561885ea7610 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x561885ea74f8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x561885ea7570 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x561885eab958 <col:57, line:234:5>
|   `-ReturnStmt 0x561885eab948 <line:233:2, col:41>
|     `-ExprWithCleanups 0x561885eab930 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x561885eab8d8 <col:9, col:41> 'int'
|         |-MemberExpr 0x561885eab8a8 <col:9> '<bound member function type>' ->xmessage 0x561885ea7440
|         | `-CXXThisExpr 0x561885eab898 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x561885eab918 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x561885eab900 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x561885eab878 <col:18, col:40> 'String' (CXXTemporary 0x561885eab878)
|               `-CallExpr 0x561885eab840 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x561885eab828 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x561885eab7a0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x561885ea9668 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x561885eab7c0 <col:31> 'const String' lvalue ParmVar 0x561885ea7570 'str' 'const String &'
|                 `-DeclRefExpr 0x561885eab7e0 <col:36> 'const String' lvalue ParmVar 0x561885ea74f8 'anno' 'const String &'
|-CXXMethodDecl 0x561885ea7950 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x561885ea76d0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x561885ea7750 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x561885ea7820 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x561885eabbe8 <col:68, line:243:5>
|   `-ReturnStmt 0x561885eabbd8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x561885eabbc0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x561885eabb60 <col:9, col:41> 'int'
|         |-MemberExpr 0x561885eabb30 <col:9> '<bound member function type>' ->xmessage 0x561885ea7610
|         | `-CXXThisExpr 0x561885eabb20 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x561885eab9f8 <col:18> 'const String' lvalue ParmVar 0x561885ea76d0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x561885eabba8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x561885eabb90 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x561885eabb00 <col:24, col:40> 'String' (CXXTemporary 0x561885eabb00)
|               `-CXXMemberCallExpr 0x561885eaba98 <col:24, col:40> 'String'
|                 |-MemberExpr 0x561885eaba28 <col:24> '<bound member function type>' ->vformat 0x561885ea8b30
|                 | `-CXXThisExpr 0x561885eaba18 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x561885eabac8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x561885eaba58 <col:32> 'const char *' lvalue ParmVar 0x561885ea7750 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x561885eabae0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x561885eaba78 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x561885ea7820 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561885ea7bf0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x561885ea7a18 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x561885ea7a90 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x561885ea7b08 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x561885eabf28 <col:23, line:254:5>
|   `-ReturnStmt 0x561885eabf18 <line:253:2, col:71>
|     `-ExprWithCleanups 0x561885eabf00 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x561885eabea0 <col:9, col:71> 'int'
|         |-MemberExpr 0x561885eabe70 <col:9> '<bound member function type>' ->xmessage 0x561885ea7610
|         | `-CXXThisExpr 0x561885eabe60 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x561885eabee8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x561885eabed0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x561885eabe20 <col:18, col:65> 'String' (CXXTemporary 0x561885eabe20)
|         |     `-CallExpr 0x561885eabdb8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x561885eabda0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x561885eabc88 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x561885ea9668 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x561885eabca8 <col:31> 'const String' lvalue ParmVar 0x561885ea7a90 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x561885eabe00 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x561885eabde8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x561885eabd80 <col:37, col:64> 'String' (CXXTemporary 0x561885eabd80)
|         |             `-CallExpr 0x561885eabd50 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x561885eabd38 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x561885eabcc8 <col:37> 'String (const String &)' lvalue CXXMethod 0x561885ea9cb8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x561885eabce8 <col:56> 'const String' lvalue ParmVar 0x561885ea7a18 'landmark' 'const String &'
|         `-DeclRefExpr 0x561885eabe40 <col:68> 'const String' lvalue ParmVar 0x561885ea7b08 'str' 'const String &'
|-CXXMethodDecl 0x561885ea7f70 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x561885ea7cb8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x561885ea7d30 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x561885ea7db0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x561885ea7e28 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x561885eac1e0 <col:34, line:267:5>
|   `-ReturnStmt 0x561885eac1d0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x561885eac1b8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x561885eac150 <col:9, col:51> 'int'
|         |-MemberExpr 0x561885eac120 <col:9> '<bound member function type>' ->xmessage 0x561885ea7bf0
|         | `-CXXThisExpr 0x561885eac110 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x561885eabfc8 <col:18> 'const String' lvalue ParmVar 0x561885ea7cb8 'landmark' 'const String &'
|         |-DeclRefExpr 0x561885eabfe8 <col:28> 'const String' lvalue ParmVar 0x561885ea7d30 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x561885eac1a0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x561885eac188 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x561885eac0f0 <col:34, col:50> 'String' (CXXTemporary 0x561885eac0f0)
|               `-CXXMemberCallExpr 0x561885eac088 <col:34, col:50> 'String'
|                 |-MemberExpr 0x561885eac018 <col:34> '<bound member function type>' ->vformat 0x561885ea8b30
|                 | `-CXXThisExpr 0x561885eac008 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x561885eac0b8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x561885eac048 <col:42> 'const char *' lvalue ParmVar 0x561885ea7db0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x561885eac0d0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x561885eac068 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x561885ea7e28 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561885ea8080 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x561885eac260 <col:25, line:288:5>
|   `-ReturnStmt 0x561885eac250 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x561885eac238 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x561885eac208 <col:9> 'const int' lvalue ->_nerrors 0x561885eaae38
|         `-CXXThisExpr 0x561885eac1f8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x561885ea8290 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x561885ea8138 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x561885ea81b8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x561885ea8578 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x561885ea8358 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x561885ea83d8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x561885ea8450 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561885ea8710 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x561885ea8648 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x561885ea8958 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x561885ea87d0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x561885ea8848 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x561885eac4c0 <col:58, line:357:5>
|   `-ReturnStmt 0x561885eac4b0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x561885eac498 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x561885eac468 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x561885eac450 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x561885eac430 <col:9, col:29> 'String' (CXXTemporary 0x561885eac430)
|             `-CallExpr 0x561885eac3c0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x561885eac3a8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561885eac328 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x561885ea8578 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x561885eac2c8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x561885eac3f8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x561885eac2e8 <col:21> 'const char *' lvalue ParmVar 0x561885ea87d0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x561885eac410 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x561885eac308 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x561885ea8848 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561885ea8b30 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x561885ea8a20 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x561885ea8a98 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561885ea8c88 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x561885ea8bf8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x561885ea8dd0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x561885ea8d40 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x561885ea9070 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x561885ea8e88 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x561885ea8f08 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x561885ea8f80 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x561885ea91d0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x561885ea9140 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x561885eac5d8 <col:37, line:441:5>
|   `-IfStmt 0x561885eac5c0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x561885eac548 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x561885eac518 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x561885eac4d8 <col:6> 'int' lvalue ParmVar 0x561885ea9140 'level' 'int'
|     | `-ImplicitCastExpr 0x561885eac530 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x561885eac4f8 <col:15> 'ErrorHandler::Level' EnumConstant 0x561885ea3cd0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x561885eac5a8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x561885eac578 <col:8> 'int' lvalue ->_nerrors 0x561885eaae38
|         `-CXXThisExpr 0x561885eac568 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x561885ea9298 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x561885eac670 <col:26, line:448:5>
|   `-BinaryOperator 0x561885eac650 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x561885eac600 <col:2> 'int' lvalue ->_nerrors 0x561885eaae38
|     | `-CXXThisExpr 0x561885eac5f0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x561885eac630 <col:13> 'int' 0
|-CXXMethodDecl 0x561885ea9460 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x561885ea9350 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x561885ea93c8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x561885ea9668 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x561885ea9520 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x561885ea9598 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x561885ea9918 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x561885ea9728 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x561885ea97a8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x561885ea9828 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x561885ea99d0 <col:59> 0 0
|-CXXMethodDecl 0x561885ea9b68 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x561885ea9a48 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x561885ea9ac8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x561885eacce0 <col:70, line:534:5>
|   |-DeclStmt 0x561885eac7e0 <line:528:2, col:20>
|   | |-VarDecl 0x561885eac698 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x561885eac700 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x561885eac738 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x561885eac7a0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x561885eac8b0 <line:529:2, col:23>
|   | `-VarDecl 0x561885eac810 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x561885eac898 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x561885eac878 <col:18> 'const char *' lvalue ParmVar 0x561885ea9a48 'begin' 'const char *'
|   |-DoStmt 0x561885eacc78 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x561885eacba8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x561885eacb90 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x561885eacb70 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x561885eac8c8 <col:6> 'const char *' lvalue Var 0x561885eac810 'x' 'const char *'
|   | |     `-CallExpr 0x561885eacac0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x561885eacaa8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x561885eaca60 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x561885eab310 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x561885eacb28 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x561885eacb10 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x561885eac980 <col:20, col:27> 'String' (CXXTemporary 0x561885eac980)
|   | |       |     `-CXXTemporaryObjectExpr 0x561885eac948 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x561885eacb40 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x561885eac9a0 <col:30> 'const char *' lvalue Var 0x561885eac810 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x561885eacb58 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x561885eac9c0 <col:33> 'const char *' lvalue ParmVar 0x561885ea9ac8 'end' 'const char *'
|   | |       |-UnaryOperator 0x561885eaca00 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x561885eac9e0 <col:39> 'String' lvalue Var 0x561885eac698 'name' 'String'
|   | |       |-UnaryOperator 0x561885eaca38 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x561885eaca18 <col:46> 'String' lvalue Var 0x561885eac738 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x561885eaca50 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x561885eacc60 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x561885eacc48 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x561885eacc28 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x561885eacbf8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x561885b21bc8
|   |         `-ImplicitCastExpr 0x561885eacbe0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x561885eacbc0 <col:11> 'String' lvalue Var 0x561885eac698 'name' 'String'
|   `-ReturnStmt 0x561885eaccd0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x561885eaccb8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x561885eacc98 <col:9> 'const char *' lvalue Var 0x561885eac810 'x' 'const char *'
|-CXXMethodDecl 0x561885ea9cb8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x561885ea9c28 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x561885ead2e8 <col:55, line:550:5>
|   `-IfStmt 0x561885ead2c0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x561885eacf20 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x561885eacf08 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x561885eacef0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x561885eaced0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x561885eacea0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x561885b21bc8
|     | |       `-DeclRefExpr 0x561885eacd40 <col:6> 'const String' lvalue ParmVar 0x561885ea9c28 'x' 'const String &'
|     | `-BinaryOperator 0x561885eace80 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x561885eace50 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x561885eace00 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x561885eacde8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x561885eacda0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x561885b3b400 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x561885eacd60 <col:11> 'const String' lvalue ParmVar 0x561885ea9c28 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x561885eacd80 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x561885eace68 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x561885eace38 <col:19> 'char' 123
|     |-ReturnStmt 0x561885eacf90 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x561885eacf60 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x561885eacf40 <col:13> 'const String' lvalue ParmVar 0x561885ea9c28 'x' 'const String &'
|     `-IfStmt 0x561885ead298 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x561885ead028 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x561885ead010 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x561885eacff0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x561885eacfc0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x561885b21bc8
|       |       `-DeclRefExpr 0x561885eacfa0 <col:11> 'const String' lvalue ParmVar 0x561885ea9c28 'x' 'const String &'
|       |-ReturnStmt 0x561885ead1b0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x561885ead198 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x561885ead168 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x561885ead150 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x561885ead130 <col:13, col:29> 'String' (CXXTemporary 0x561885ead130)
|       |         `-CallExpr 0x561885ead0e0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x561885ead0c8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x561885ead040 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x561885ea9460 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x561885ead110 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x561885ead060 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x561885ead080 <col:28> 'const String' lvalue ParmVar 0x561885ea9c28 'x' 'const String &'
|       `-ReturnStmt 0x561885ead288 <line:549:6, col:20>
|         `-ExprWithCleanups 0x561885ead270 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x561885ead240 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x561885ead228 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x561885ead208 <col:13, col:20> 'String' (CXXTemporary 0x561885ead208)
|                 `-CXXTemporaryObjectExpr 0x561885ead1d0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x561885ea9e80 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x561885ea9d70 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x561885ea9de8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561885eab5b8 <col:71> 'bool' false
|-CXXRecordDecl 0x561885ea9f30 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x561885eaa228 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x561885eaa1c0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x561885eaa160 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x561885eaa120 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x561885b1e460 'String'
|       | `-CXXRecord 0x561885b1e3d0 'String'
|       |-BuiltinType 0x5618857ef580 'int'
|       `-DecayedType 0x561885ea77f0 '__va_list_tag *' sugar
|         |-TypedefType 0x561885ea77c0 'va_list' sugar
|         | |-Typedef 0x561885a0f510 'va_list'
|         | `-TypedefType 0x561885a0f4c0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x5618859470e8 '__gnuc_va_list'
|         |   `-TypedefType 0x561885947050 '__builtin_va_list' sugar
|         |     |-Typedef 0x561885830d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x561885830ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x5618857f02d0 '__va_list_tag'
|         |         `-CXXRecord 0x5618857f0238 '__va_list_tag'
|         `-PointerType 0x561885a14db0 '__va_list_tag *'
|           `-RecordType 0x5618857f02d0 '__va_list_tag'
|             `-CXXRecord 0x5618857f0238 '__va_list_tag'
|-EnumDecl 0x561885eaa280 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x561885eaa380 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561885eaa8e0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885eaa360 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x561885eaa340 <col:16> 'int' 1
| |-EnumConstantDecl 0x561885eaa410 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561885eaa8f8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885eaa3f0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x561885eaa3d0 <col:21> 'int' 2
| |-EnumConstantDecl 0x561885eaa4a0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561885eaa910 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885eaa480 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x561885eaa460 <col:22> 'int' 4
| |-EnumConstantDecl 0x561885eaa530 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561885eaa928 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885eaa510 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x561885eaa4f0 <col:17> 'int' 8
| |-EnumConstantDecl 0x561885eaa5c0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561885eaa940 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885eaa5a0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x561885eaa580 <col:22> 'int' 16
| |-EnumConstantDecl 0x561885eaa650 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561885eaa958 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885eaa630 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x561885eaa610 <col:19> 'int' 32
| |-EnumConstantDecl 0x561885eaa6e0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561885eaa970 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885eaa6c0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x561885eaa6a0 <col:17> 'int' 64
| |-EnumConstantDecl 0x561885eaa770 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561885eaa988 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885eaa750 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x561885eaa730 <col:14> 'int' 128
| |-EnumConstantDecl 0x561885eaa800 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561885eaa9a0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885eaa7e0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x561885eaa7c0 <col:16> 'int' 256
| `-EnumConstantDecl 0x561885eaa890 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x561885eaa9b8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885eaa870 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x561885eaa850 <col:12> 'int' 1024
|-CXXMethodDecl 0x561885eaabc8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x561885eaa9e0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x561885eaaa80 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x561885eaad50 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x561885eaac88 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x561885eaadf8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x561885eaae38 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x561885eaae98 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x561885eaaf10 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x561885eab310 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x561885eaaf88 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x561885eab008 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x561885eab088 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x561885eab100 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x561885eab178 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x561885eab1f0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x561885eab438 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x561885eab438
| `-ParmVarDecl 0x561885eab548 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x561885eae678 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x561885eae678
  `-ParmVarDecl 0x561885eae788 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885d4e740 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x561885d4e890 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x561885d4e910 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x561885d4f708 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x561885d4f708
| `-ParmVarDecl 0x561885d4f818 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x561885d4f8b8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x561885d4f8b8
| `-ParmVarDecl 0x561885d4f9c8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x561885d4fa38 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561885d4fa38
|-CXXMethodDecl 0x561885d50308 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x561885d50308
| `-ParmVarDecl 0x561885d50418 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x561885d50488 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x561885d50488
| `-ParmVarDecl 0x561885d50598 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x561885ea32b0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x561885ea3390 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885d4ea40 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x561885d4eb68 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x561885d4ebf0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x561885d4fb68 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x561885d4fb68
| `-ParmVarDecl 0x561885d4fc78 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x561885d4fd18 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x561885d4fd18
| `-ParmVarDecl 0x561885d4fe28 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x561885d4fe98 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561885d4fe98
|-CXXMethodDecl 0x561885d50638 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x561885d50638
| `-ParmVarDecl 0x561885d50748 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x561885d507b8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x561885d507b8
| `-ParmVarDecl 0x561885d508c8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x561885ea33f0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x561885ea34d0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885d4a0c8 prev 0x561885d49560 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x561885d4a1c0 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x561885d4a250 <col:17, col:23> col:17 public
|-EnumDecl 0x561885d4a278 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x561885d4a380 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b0d0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4a360 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x561885d4a340 <col:11> 'int' 1
| |-EnumConstantDecl 0x561885d4a410 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b0e8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4a3f0 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x561885d4a3d0 <col:12> 'int' 2
| |-EnumConstantDecl 0x561885d4a4a0 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b100 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4a480 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x561885d4a460 <col:17> 'int' 4
| |-EnumConstantDecl 0x561885d4a530 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b118 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4a510 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x561885d4a4f0 <col:16> 'int' 0
| |-EnumConstantDecl 0x561885d4a5c0 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b130 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4a5a0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x561885d4a580 <col:19> 'int' 32
| |-EnumConstantDecl 0x561885d4a650 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b148 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4a630 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x561885d4a610 <col:10> 'int' 64
| |-EnumConstantDecl 0x561885d4a6e0 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b160 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4a6c0 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x561885d4a6a0 <col:19> 'int' 128
| |-EnumConstantDecl 0x561885d4a770 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b178 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4a750 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x561885d4a730 <col:20> 'int' 256
| |-EnumConstantDecl 0x561885d4a800 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b190 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4a7e0 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x561885d4a7c0 <col:17> 'int' 512
| |-EnumConstantDecl 0x561885d4a890 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b1a8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4a870 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x561885d4a850 <col:15> 'int' 1024
| |-EnumConstantDecl 0x561885d4a920 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b1c0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4a900 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x561885d4a8e0 <col:11> 'int' 2048
| |-EnumConstantDecl 0x561885d4a9b0 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b1d8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4a990 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x561885d4a970 <col:16> 'int' 4096
| |-EnumConstantDecl 0x561885d4aa40 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b1f0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4aa20 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x561885d4aa00 <col:13> 'int' 8192
| |-EnumConstantDecl 0x561885d4aad0 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b208 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4aab0 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x561885d4aa90 <col:15> 'int' 16384
| |-EnumConstantDecl 0x561885d4aba0 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x561885d4ab80 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x561885d4ab60 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x561885d4ab20 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x561885d4ab40 <col:20> 'int' 26
| |-EnumConstantDecl 0x561885d4ac70 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x561885d4ac50 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x561885d4ac30 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x561885d4abf0 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x561885d4ac10 <col:27> 'int' 27
| |-EnumConstantDecl 0x561885d4ad00 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b220 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4ace0 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x561885d4acc0 <col:17> 'int' 28
| |-EnumConstantDecl 0x561885d4add0 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x561885d4adb0 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x561885d4ad90 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x561885d4ad50 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x561885d4ad70 <col:18> 'int' EnumConstant 0x561885d4ad00 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4ae60 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b238 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4ae40 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x561885d4ae20 <col:25> 'int' 8
| |-EnumConstantDecl 0x561885d4aef0 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x561885d4b250 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4aed0 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x561885d4aeb0 <col:26> 'int' 16
| `-EnumConstantDecl 0x561885d4b080 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x561885d4b268 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d4b060 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x561885d4b040 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x561885d4b000 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x561885d4afc0 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x561885d4af80 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x561885d4af40 <col:14> 'int' EnumConstant 0x561885d4a380 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x561885d4af60 <col:23> 'int' EnumConstant 0x561885d4a410 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x561885d4afa0 <col:33> 'int' EnumConstant 0x561885d4a4a0 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x561885d4afe0 <col:48> 'int' EnumConstant 0x561885d4ae60 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x561885d4b020 <col:71> 'int' EnumConstant 0x561885d4aef0 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x561885d4b2c8 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x561885d50ce8 <col:39, line:64:5>
|   `-ReturnStmt 0x561885d50cd8 <line:63:2, col:9>
|     `-MemberExpr 0x561885d50ca8 <col:9> 'const String' lvalue ->_name 0x561885d4e6f0
|       `-CXXThisExpr 0x561885d50c98 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x561885d4b388 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x561885d50d68 <col:35, line:71:5>
|   `-ReturnStmt 0x561885d50d58 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x561885d50d40 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561885d50d10 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561885d4ee00
|         `-CXXThisExpr 0x561885d50d00 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x561885d4b4d8 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x561885d4b440 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x561885d50ee8 <col:42, line:77:5>
|   `-ReturnStmt 0x561885d50ed8 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x561885d50ec0 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x561885d50e90 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x561885d50df0 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x561885d50dc0 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x561885d50d80 <col:9> 'int' lvalue ParmVar 0x561885d4b440 'op' 'int'
|         | `-ImplicitCastExpr 0x561885d50dd8 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x561885d50da0 <col:15> 'Handler::Flags' EnumConstant 0x561885d4a410 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x561885d50e20 <col:25> 'void *const' lvalue ->_write_user_data 0x561885d4eda0
|         | `-CXXThisExpr 0x561885d50e10 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x561885d50e60 <col:44> 'void *const' lvalue ->_read_user_data 0x561885d4ed38
|           `-CXXThisExpr 0x561885d50e50 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x561885d4b5a8 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x561885d50f68 <col:41, line:82:5>
|   `-ReturnStmt 0x561885d50f58 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x561885d50f40 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561885d50f10 <col:9> 'void *const' lvalue ->_read_user_data 0x561885d4ed38
|         `-CXXThisExpr 0x561885d50f00 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x561885d4b670 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x561885d50fe8 <col:42, line:87:5>
|   `-ReturnStmt 0x561885d50fd8 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x561885d50fc0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561885d50f90 <col:9> 'void *const' lvalue ->_write_user_data 0x561885d4eda0
|         `-CXXThisExpr 0x561885d50f80 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x561885d4b738 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x561885d4b7d8 <col:52> "" ""
|-CXXMethodDecl 0x561885d4b870 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x561885d4b910 <col:52> "" ""
|-CXXMethodDecl 0x561885d4b9a0 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x561885d510d8 <col:34, line:98:5>
|   `-ReturnStmt 0x561885d510c8 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x561885d510b0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x561885d51090 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x561885d51060 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x561885d51010 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561885d4ee00
|         |   `-CXXThisExpr 0x561885d51000 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x561885d51078 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x561885d51040 <col:18> 'Handler::Flags' EnumConstant 0x561885d4a380 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x561885d4ba60 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x561885d511c8 <col:36, line:104:5>
|   `-ReturnStmt 0x561885d511b8 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x561885d511a0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x561885d51180 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x561885d51150 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x561885d51100 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561885d4ee00
|         |   `-CXXThisExpr 0x561885d510f0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x561885d51168 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x561885d51130 <col:18> 'Handler::Flags' EnumConstant 0x561885d4a4a0 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x561885d4bb20 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x561885d513a8 <col:38, line:113:5>
|   `-ReturnStmt 0x561885d51398 <line:112:2, col:49>
|     `-BinaryOperator 0x561885d51378 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x561885d51320 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x561885d51300 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x561885d512d0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x561885d511f0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561885d4ee00
|       |   |   `-CXXThisExpr 0x561885d511e0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x561885d512e8 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x561885d512b0 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x561885d51290 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x561885d51260 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x561885d51220 <col:20> 'Handler::Flags' EnumConstant 0x561885d4a380 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x561885d51278 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x561885d51240 <col:29> 'Handler::Flags' EnumConstant 0x561885d4a6e0 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x561885d51360 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x561885d51340 <col:49> 'Handler::Flags' EnumConstant 0x561885d4a380 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x561885d4bbe0 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x561885d51498 <col:34, line:118:5>
|   `-ReturnStmt 0x561885d51488 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x561885d51470 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x561885d51450 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x561885d51420 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x561885d513d0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561885d4ee00
|         |   `-CXXThisExpr 0x561885d513c0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x561885d51438 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x561885d51400 <col:18> 'Handler::Flags' EnumConstant 0x561885d4a410 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x561885d4bca0 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x561885d51678 <col:39, line:127:5>
|   `-ReturnStmt 0x561885d51668 <line:126:2, col:51>
|     `-BinaryOperator 0x561885d51648 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x561885d515f0 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x561885d515d0 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x561885d515a0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x561885d514c0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561885d4ee00
|       |   |   `-CXXThisExpr 0x561885d514b0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x561885d515b8 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x561885d51580 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x561885d51560 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x561885d51530 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x561885d514f0 <col:20> 'Handler::Flags' EnumConstant 0x561885d4a410 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x561885d51548 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x561885d51510 <col:30> 'Handler::Flags' EnumConstant 0x561885d4a770 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x561885d51630 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x561885d51610 <col:51> 'Handler::Flags' EnumConstant 0x561885d4a410 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x561885d4bd60 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x561885d51780 <col:33, line:132:5>
|   `-ReturnStmt 0x561885d51770 <line:131:2, col:41>
|     `-BinaryOperator 0x561885d51750 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x561885d516d0 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x561885d516a0 <col:9> '<bound member function type>' ->read_visible 0x561885d4bb20
|       |   `-CXXThisExpr 0x561885d51690 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x561885d51730 <col:27, col:41> 'bool'
|         `-MemberExpr 0x561885d51700 <col:27> '<bound member function type>' ->write_visible 0x561885d4bca0
|           `-CXXThisExpr 0x561885d516f0 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x561885d4be20 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x561885d518b8 <col:51, line:138:5>
|   `-ReturnStmt 0x561885d518a8 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x561885d51890 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x561885d51870 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x561885d51828 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x561885d517f8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x561885d517a8 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561885d4ee00
|           |   `-CXXThisExpr 0x561885d51798 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x561885d51810 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x561885d517d8 <col:26> 'Handler::Flags' EnumConstant 0x561885d4a5c0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x561885d4bee0 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x561885d519c8 <col:50, line:144:5>
|   `-ReturnStmt 0x561885d519b8 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x561885d519a0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x561885d51980 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x561885d51960 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x561885d51930 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x561885d518e0 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561885d4ee00
|           |   `-CXXThisExpr 0x561885d518d0 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x561885d51948 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x561885d51910 <col:26> 'Handler::Flags' EnumConstant 0x561885d4a5c0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x561885d4bfa0 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x561885d51ab8 <col:29, line:166:5>
|   `-ReturnStmt 0x561885d51aa8 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x561885d51a90 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x561885d51a70 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x561885d51a40 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x561885d519f0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561885d4ee00
|         |   `-CXXThisExpr 0x561885d519e0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x561885d51a58 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x561885d51a20 <col:18> 'Handler::Flags' EnumConstant 0x561885d4a650 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x561885d4c228 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x561885d4c050 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x561885d4c0c8 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x561885d4c140 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561885d4c438 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x561885d4c2f0 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x561885d4c368 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x561885d50bd0 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x561885d50bb0 <col:62> 'int' 0
| `-CompoundStmt 0x561885d51d58 <col:71, line:188:5>
|   `-ReturnStmt 0x561885d51d48 <line:187:2, col:36>
|     `-ExprWithCleanups 0x561885d51d30 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x561885d51d00 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x561885d51ce8 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x561885d51cc8 <col:9, col:36> 'String' (CXXTemporary 0x561885d51cc8)
|             `-CXXMemberCallExpr 0x561885d51c28 <col:9, col:36> 'String'
|               |-MemberExpr 0x561885d51bf8 <col:9> '<bound member function type>' ->call_read 0x561885d4c228
|               | `-CXXThisExpr 0x561885d51be8 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x561885d51c60 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x561885d51b40 <col:19> 'Element *' lvalue ParmVar 0x561885d4c2f0 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x561885d51c90 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x561885d51c78 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x561885d51ba8 <col:22, col:29> 'String' (CXXTemporary 0x561885d51ba8)
|               |     `-CXXTemporaryObjectExpr 0x561885d51b70 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x561885d51ca8 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x561885d51bc8 <col:32> 'ErrorHandler *' lvalue ParmVar 0x561885d4c368 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x561885d4c6d0 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x561885d4c4f8 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x561885d4c570 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x561885d4c5e8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561885d4c858 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x561885d4c798 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x561885d4ca88 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x561885d4c910 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x561885d4c988 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x561885d4cb88 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x561885d51db8 <col:50, line:225:5>
|   `-ReturnStmt 0x561885d51da8 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x561885d51d90 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x561885d51d70 <col:9> 'const Handler *' lvalue Var 0x561885d4ef30 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x561885d4cc28 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x561885d4cd30 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d8d0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4cd10 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x561885d4ccf0 <col:11> 'Handler::Flags' EnumConstant 0x561885d4a380 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4cdc0 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d8e8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4cda0 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x561885d4cd80 <col:12> 'Handler::Flags' EnumConstant 0x561885d4a410 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4ce50 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d900 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4ce30 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x561885d4ce10 <col:17> 'Handler::Flags' EnumConstant 0x561885d4a4a0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4cee0 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d918 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4cec0 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x561885d4cea0 <col:16> 'Handler::Flags' EnumConstant 0x561885d4a530 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4cf70 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d930 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4cf50 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x561885d4cf30 <col:19> 'Handler::Flags' EnumConstant 0x561885d4a5c0 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d000 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d948 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4cfe0 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x561885d4cfc0 <col:10> 'Handler::Flags' EnumConstant 0x561885d4a650 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d090 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d960 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d070 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x561885d4d050 <col:19> 'Handler::Flags' EnumConstant 0x561885d4a6e0 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d120 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d978 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d100 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x561885d4d0e0 <col:20> 'Handler::Flags' EnumConstant 0x561885d4a770 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d1b0 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d990 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d190 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x561885d4d170 <col:17> 'Handler::Flags' EnumConstant 0x561885d4a800 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d240 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d9a8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d220 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x561885d4d200 <col:15> 'Handler::Flags' EnumConstant 0x561885d4a890 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d2d0 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d9c0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d2b0 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x561885d4d290 <col:11> 'Handler::Flags' EnumConstant 0x561885d4a920 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d360 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d9d8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d340 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x561885d4d320 <col:16> 'Handler::Flags' EnumConstant 0x561885d4a9b0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d3f0 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4d9f0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d3d0 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x561885d4d3b0 <col:13> 'Handler::Flags' EnumConstant 0x561885d4aa40 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d480 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4da08 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d460 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x561885d4d440 <col:15> 'Handler::Flags' EnumConstant 0x561885d4aad0 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d510 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4da20 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d4f0 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x561885d4d4d0 <col:20> 'Handler::Flags' EnumConstant 0x561885d4aba0 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d5a0 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4da38 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d580 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x561885d4d560 <col:27> 'Handler::Flags' EnumConstant 0x561885d4ac70 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d630 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4da50 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d610 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x561885d4d5f0 <col:22> 'Handler::Flags' EnumConstant 0x561885d4ad00 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d6c0 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4da68 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d6a0 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x561885d4d680 <col:18> 'Handler::Flags' EnumConstant 0x561885d4add0 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d750 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4da80 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d730 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x561885d4d710 <col:25> 'Handler::Flags' EnumConstant 0x561885d4ae60 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4d7e0 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561885d4da98 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4d7c0 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x561885d4d7a0 <col:26> 'Handler::Flags' EnumConstant 0x561885d4aef0 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x561885d4d880 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x561885d4dab0 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d4d860 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x561885d4d830 <col:20> 'Handler::Flags' EnumConstant 0x561885d4b080 'f_special' 'Handler::Flags'
|-EnumDecl 0x561885d4dac8 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x561885d4dbd0 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561885d4e130 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4dbb0 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x561885d4db90 <col:12> 'Handler::Flags' EnumConstant 0x561885d4a380 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4dc60 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561885d4e148 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4dc40 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x561885d4dc20 <col:13> 'Handler::Flags' EnumConstant 0x561885d4a410 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4dcf0 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561885d4e160 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4dcd0 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x561885d4dcb0 <col:15> 'Handler::Flags' EnumConstant 0x561885d4a4a0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4dd80 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561885d4e178 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4dd60 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x561885d4dd40 <col:8> 'Handler::Flags' EnumConstant 0x561885d4a650 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4de10 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561885d4e190 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4ddf0 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x561885d4ddd0 <col:9> 'Handler::Flags' EnumConstant 0x561885d4a920 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4dea0 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561885d4e1a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4de80 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x561885d4de60 <col:14> 'Handler::Flags' EnumConstant 0x561885d4a9b0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4df30 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561885d4e1c0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4df10 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x561885d4def0 <col:11> 'Handler::Flags' EnumConstant 0x561885d4aa40 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4dfc0 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561885d4e1d8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4dfa0 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x561885d4df80 <col:13> 'Handler::Flags' EnumConstant 0x561885d4aad0 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x561885d4e050 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561885d4e1f0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4e030 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x561885d4e010 <col:20> 'Handler::Flags' EnumConstant 0x561885d4ad00 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x561885d4e0e0 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x561885d4e208 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d4e0c0 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x561885d4e0a0 <col:16> 'Handler::Flags' EnumConstant 0x561885d4add0 'f_user0' 'Handler::Flags'
|-EnumDecl 0x561885d4e220 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x561885d4e2e0 <col:25> "" ""
| |-EnumConstantDecl 0x561885d4e390 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x561885d4e470 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d4e370 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x561885d4e350 <col:14> 'Handler::Flags' EnumConstant 0x561885d4a530 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x561885d4e420 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x561885d4e488 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d4e400 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x561885d4e3e0 <col:17> 'Handler::Flags' EnumConstant 0x561885d4a5c0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x561885d4e608 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x561885d4e4b0 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x561885d4e530 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x561885d52478 <col:70, line:284:5>
|   |-ParenExpr 0x561885d52298 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x561885d52268 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x561885d51f98 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d51f68 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x561885d51f10 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x561885d51ef0 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x561885d51ec0 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x561885d51de0 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561885d4ee00
|   |   |   |   |   `-CXXThisExpr 0x561885d51dd0 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x561885d51ed8 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x561885d51ea0 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x561885d51e80 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x561885d51e50 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x561885d51e10 <col:34> 'Handler::Flags' EnumConstant 0x561885d4a380 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x561885d51e68 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x561885d51e30 <col:43> 'Handler::Flags' EnumConstant 0x561885d4ae60 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x561885d51f50 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x561885d51f30 <col:69> 'Handler::Flags' EnumConstant 0x561885d4a380 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x561885d51ff8 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d51fd8 <col:85> 'int' 0
|   |   `-CallExpr 0x561885d521c8 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x561885d521b0 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d52190 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d52208 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d52068 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x561885d52220 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d520b8 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x561885d52238 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d520f0 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x561885d52250 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d52178 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d52160 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d52110 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x561885d52468 <line:283:2, col:38>
|     `-ExprWithCleanups 0x561885d52450 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x561885d52420 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x561885d52408 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x561885d523e8 <col:9, col:38> 'String' (CXXTemporary 0x561885d523e8)
|             `-CallExpr 0x561885d52380 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x561885d52368 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x561885d522f8 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x561885d4e910
|               |   `-MemberExpr 0x561885d522c8 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x561885d4e9d8
|               |     `-CXXThisExpr 0x561885d522b8 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x561885d523b0 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x561885d52328 <col:22> 'Element *' lvalue ParmVar 0x561885d4e4b0 'e' 'Element *'
|               `-ImplicitCastExpr 0x561885d523c8 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x561885d52348 <col:25> 'void *' lvalue ParmVar 0x561885d4e530 'new_user_data' 'void *'
|-AccessSpecDecl 0x561885d4e6b8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x561885d4e6f0 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x561885d4e740 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x561885d4e890 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x561885d4e910 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x561885d4f708 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x561885d4f708
| | `-ParmVarDecl 0x561885d4f818 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x561885d4f8b8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x561885d4f8b8
| | `-ParmVarDecl 0x561885d4f9c8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x561885d4fa38 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561885d4fa38
| |-CXXMethodDecl 0x561885d50308 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x561885d50308
| | `-ParmVarDecl 0x561885d50418 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x561885d50488 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x561885d50488
| | `-ParmVarDecl 0x561885d50598 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x561885ea32b0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x561885ea3390 <col:5>
|-FieldDecl 0x561885d4e9d8 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x561885d4ea40 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x561885d4eb68 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x561885d4ebf0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x561885d4fb68 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x561885d4fb68
| | `-ParmVarDecl 0x561885d4fc78 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x561885d4fd18 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x561885d4fd18
| | `-ParmVarDecl 0x561885d4fe28 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x561885d4fe98 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561885d4fe98
| |-CXXMethodDecl 0x561885d50638 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x561885d50638
| | `-ParmVarDecl 0x561885d50748 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x561885d507b8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x561885d507b8
| | `-ParmVarDecl 0x561885d508c8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x561885ea33f0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x561885ea34d0 <col:5>
|-FieldDecl 0x561885d4ecb8 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x561885d4ed38 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x561885d4eda0 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x561885d4ee00 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x561885d4ee68 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x561885d4eed0 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x561885d4ef30 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x561885d4f050 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x561885d4efa8 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x561885d50c80 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561885d50c68 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x561885d50c50 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561885d50c30 <col:30, col:37> 'String' (CXXTemporary 0x561885d50c30)
|           `-CXXTemporaryObjectExpr 0x561885d50bf8 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x561885d4f1f8 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x561885d4f138 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x561885d4f378 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x561885d4f2b0 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x561885d4f538 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x561885d4f578 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x561885d4f578
| `-ParmVarDecl 0x561885d4f658 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x561885d4ffa8 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x561885d4ffa8
| `-ParmVarDecl 0x561885d500b8 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x561885d50158 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x561885d50158
| `-ParmVarDecl 0x561885d50268 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x561885d50938 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x561885d50938
| `-ParmVarDecl 0x561885d50a48 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x561885d50ad0 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x561885d50ad0

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885e8af88 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x561885e8b198 prev 0x561885e8af88 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561885e8c1b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x561885e8c160 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x561885e8c140 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x561885e8bff0 'type'
|     `-SubstTemplateTypeParmType 0x561885de10d0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561885ab72a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ab7248 'T'
|       `-RecordType 0x561885de0c20 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x561885de0b38 'sized_array_memory'
|-FieldDecl 0x561885e8c2b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561885e8c300 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561885e8c338 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x561885e8b230 'void *' sugar
|   |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561885aeef38 'T'
|   `-PointerType 0x5618857efce0 'void *'
|     `-BuiltinType 0x5618857ef4e0 'void'
|-TypedefDecl 0x561885e8c3c8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x561885e8c390 'void *&'
|   `-SubstTemplateTypeParmType 0x561885e8b230 'void *' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-PointerType 0x5618857efce0 'void *'
|       `-BuiltinType 0x5618857ef4e0 'void'
|-TypedefDecl 0x561885e8c488 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x561885e8c450 'void *const &'
|   `-QualType 0x561885e8b231 'void *const' const
|     `-SubstTemplateTypeParmType 0x561885e8b230 'void *' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-PointerType 0x5618857efce0 'void *'
|         `-BuiltinType 0x5618857ef4e0 'void'
|-TypedefDecl 0x561885e8c518 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x561885e8c4e0 'void **'
|   `-SubstTemplateTypeParmType 0x561885e8b230 'void *' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-PointerType 0x5618857efce0 'void *'
|       `-BuiltinType 0x5618857ef4e0 'void'
|-TypedefDecl 0x561885e8c5a8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x561885e8c570 'void *const *'
|   `-QualType 0x561885e8b231 'void *const' const
|     `-SubstTemplateTypeParmType 0x561885e8b230 'void *' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-PointerType 0x5618857efce0 'void *'
|         `-BuiltinType 0x5618857ef4e0 'void'
|-TypedefDecl 0x561885e8d190 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x561885e8d140 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x561885e8d120 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x561885e8d0b0 'type'
|     `-SubstTemplateTypeParmType 0x561885e8ce70 'void *' sugar
|       |-TemplateTypeParmType 0x561885ac20a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ac2050 'T'
|       `-PointerType 0x5618857efce0 'void *'
|         `-BuiltinType 0x5618857ef4e0 'void'
|-TypedefDecl 0x561885e8d1f8 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x561885e8c450 'void *const &'
|   `-QualType 0x561885e8b231 'void *const' const
|     `-SubstTemplateTypeParmType 0x561885e8b230 'void *' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-PointerType 0x5618857efce0 'void *'
|         `-BuiltinType 0x5618857ef4e0 'void'
|-TypedefDecl 0x561885e8d250 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e8d2b8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x561885e8c4e0 'void **'
|   `-SubstTemplateTypeParmType 0x561885e8b230 'void *' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-PointerType 0x5618857efce0 'void *'
|       `-BuiltinType 0x5618857ef4e0 'void'
|-TypedefDecl 0x561885e8d320 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x561885e8c570 'void *const *'
|   `-QualType 0x561885e8b231 'void *const' const
|     `-SubstTemplateTypeParmType 0x561885e8b230 'void *' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-PointerType 0x5618857efce0 'void *'
|         `-BuiltinType 0x5618857ef4e0 'void'
|-EnumDecl 0x561885e8d378 <line:134:5> col:5
| `-EnumConstantDecl 0x561885e8d470 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561885e8d450 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561885af0618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561885af05f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561885af05d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561885e8d4f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561885e8d748 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e8d5b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e8d650 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x561885e8da08 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x561885e8d8f0 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x561885e8dcc8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x561885e8dbb0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x561885e8e010 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x561885e8def0 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x561885e8e320 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x561885e8e200 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x561885e8e610 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e8e458 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e8e4d0 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x561885e8e768 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x561885e8e848 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e8e8a0 <col:30> Inherited
|-CXXMethodDecl 0x561885e8e8e8 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x561885e8e998 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e8e9f0 <col:30> Inherited
|-CXXMethodDecl 0x561885e8eab8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x561885e8eb68 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e8ebc0 <col:30> Inherited
|-CXXMethodDecl 0x561885e8ec08 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x561885e8ecb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e8ed10 <col:30> Inherited
|-CXXMethodDecl 0x561885e8ed58 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x561885e8ee08 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e8ee60 <col:30> Inherited
|-CXXMethodDecl 0x561885e8eea8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x561885e8ef58 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e8efb0 <col:30> Inherited
|-CXXMethodDecl 0x561885e8efd8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e8f088 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e8f138 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561885e8f2f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e8f1e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e8f260 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x561885e8f448 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561885e8f3b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e8f5f8 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x561885e8f500 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e8f6b0 <col:20>
| `-OptimizeNoneAttr 0x561885e8f708 <col:30>
|-CXXMethodDecl 0x561885e8f828 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x561885e8f730 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e8f8e0 <col:20>
| `-OptimizeNoneAttr 0x561885e8f938 <col:30>
|-CXXMethodDecl 0x561885e90b00 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e8f960 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e90c48 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e90bb8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e90d78 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x561885e90ea8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x561885e90f78 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x561885e91048 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x561885e91188 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e910f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e912d0 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e91240 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e91418 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x561885e91388 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e914d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561885e915d0 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561885e91540 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e91688 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561885e91748 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x561885e91848 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x561885e919c8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e91908 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x561885e92188 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561885e91a80 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x561885e920e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x561885e91fe8 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x561885e92268 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885e923b8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e92328 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x561885e92470 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561885e926b8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e92530 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x561885e925a8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x561885e92878 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x561885e92788 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x561885e92ac8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x561885e92940 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x561885e929b8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x561885e92b88 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885e92de8 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x561885e92cf0 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x561885e92eb8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561885e92eb8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885e930b0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x561885e931c8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x561885e93258 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x561885e93360 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x561885e933b0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885e93340 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x561885e93320 <col:27> 'int' 4096
|-FieldDecl 0x561885e933d8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x561885e93440 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x561885e93638 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x561885e936c8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x561885e93888 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x561885e93728 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x561885e937a0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x561885e933d8 'name' 'String'
| | `-CXXConstructExpr 0x561885e9e298 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x561885e9e258 <col:20> 'const String' lvalue ParmVar 0x561885e93728 'n' 'const String &'
| |-CXXCtorInitializer Field 0x561885e93440 'nsig' 'int'
| | `-IntegerLiteral 0x561885e9e2f0 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x561885e93638 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x561885e9e3d8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x561885e936c8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x561885e9e398 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x561885e9e358 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x561885e937a0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x561885e9e668 <col:42, line:289:9>
|   `-CallExpr 0x561885e9e618 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x561885e9e600 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x561885e9e5e0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x561885a51958 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x561885e9e650 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x561885e9e528 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x561885e9e508 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x561885e9e4f0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561885e9e4a0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x561885e93638
|     |     |   `-CXXThisExpr 0x561885e9e490 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x561885e9e4d0 <col:25> 'int' 0
|     |-IntegerLiteral 0x561885e9e540 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x561885e9e5c0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x561885e9e5a0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x561885e9e570 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x561885e93638 non_odr_use_unevaluated
|           `-CXXThisExpr 0x561885e9e560 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x561885e93968 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x561885e93968
| `-ParmVarDecl 0x561885e93a78 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x561885e93b18 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x561885e93b18
| `-ParmVarDecl 0x561885e93c28 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x561885e93cc8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x561885e93cc8
| `-ParmVarDecl 0x561885e93dd8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x561885e93e48 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x561885e93e48
| `-ParmVarDecl 0x561885e93f58 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x561885e93fe0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x561885e93fe0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885e43918 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561885e43a38 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x561885e43ac8 <col:21, col:27> col:21 public
|-EnumDecl 0x561885e43af0 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x561885e43c08 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x561885e43be8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x561885e43bd0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x561885e43bb0 <col:32> 'int' 1
| `-EnumConstantDecl 0x561885e43cb0 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x561885e43c90 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x561885e43c78 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x561885e43c58 <col:53> 'int' 1000
|-CXXConstructorDecl 0x561885e43d60 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x561885e44298 <col:19, col:21>
|-CXXDestructorDecl 0x561885e43e50 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x561885e442a8 <col:28, col:30>
|-CXXMethodDecl 0x561885e44010 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x561885e43f40 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x561885e44118 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x561885e44118
  `-ParmVarDecl 0x561885e44228 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885e44850 prev 0x561885e1f620 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x561885e44948 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x561885e449d8 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x561885e44a48 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x561885e44b08 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x561885e44bc8 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x561885e44c88 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x561885e44d48 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x561885e44de8 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x561885e44f48 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x561885e44f28 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x561885e44f08 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x561885e44ed0 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x561885e44eb0 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x561885e44ee8 <col:42> 'int' 1
|-CXXMethodDecl 0x561885e44fe8 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x561885e45158 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x561885e45098 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x561885e452a0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x561885e45210 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x561885e45368 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x561885e45690 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x561885e45758 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x561885e458d8 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x561885e45810 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x561885e459a0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x561885e45ba8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x561885e45a50 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x561885e45ad0 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x561885e45d00 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x561885e45c70 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x561885e45e50 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x561885e45dc0 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x561885e45fa0 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x561885e45f10 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x561885e460f0 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x561885e46060 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x561885e462c0 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x561885e461b0 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x561885e46228 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x561885e464c8 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x561885e46380 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x561885e463f8 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x561885e97880 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x561885e97860 <col:60> 'int' 0
|-CXXMethodDecl 0x561885e46758 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x561885e46588 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x561885e46600 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x561885e46678 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x561885e978b8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x561885e97898 <col:76> 'int' 0
|-CXXMethodDecl 0x561885e469f8 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x561885e46820 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x561885e46898 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x561885e46910 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x561885e978f0 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x561885e978d0 <col:84> 'int' 0
|-CXXMethodDecl 0x561885e46d50 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x561885e46ac0 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x561885e46b38 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x561885e46bb8 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x561885e46c58 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x561885e47000 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x561885e46e20 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x561885e46ea0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x561885e46f18 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x561885e47268 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x561885e470c8 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x561885e47148 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x561885e471c0 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x561885e47720 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x561885e47330 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x561885e473b0 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x561885e47458 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x561885e475d0 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x561885e477e0 <col:115> "" ""
|-CXXMethodDecl 0x561885e47ba0 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x561885e47860 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x561885e478e0 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x561885e47958 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x561885e47aa0 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x561885e47c60 <col:113> "" ""
|-CXXMethodDecl 0x561885e47db0 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x561885e47ce8 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x561885e47f80 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x561885e47e70 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x561885e47ee8 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x561885e48ab8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x561885e48970 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x561885e489e8 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x561885e48eb8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x561885e48b78 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x561885e48bf0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x561885e48c68 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561885e48ce8 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x561885e48d60 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561885e97928 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561885e97908 <col:137> 'int' 0
|-CXXMethodDecl 0x561885e492c8 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x561885e48f90 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x561885e49008 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x561885e49080 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561885e49100 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x561885e49178 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561885e97960 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561885e97940 <col:139> 'int' 0
|-CXXMethodDecl 0x561885e49778 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x561885e493a0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x561885e49418 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x561885e49490 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561885e49508 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561885e49588 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x561885e97998 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x561885e97978 <col:133> 'int' 0
| `-ParmVarDecl 0x561885e49608 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x561885e979d0 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x561885e979b0 <col:160> 'int' 0
|-CXXMethodDecl 0x561885e49b10 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x561885e49858 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x561885e498d0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x561885e49948 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561885e499c0 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561885e97a08 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561885e979e8 <col:116> 'int' 0
|-EnumDecl 0x561885e49bd0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x561885e49cd0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x561885e49d20 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885e49cb0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x561885e49c90 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x561885e49ea0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x561885e49d48 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x561885e49dc0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x561885e4a0b8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x561885e49f60 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x561885e49fe0 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x561885e4a518 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x561885e4a178 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x561885e4a400 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x561885e4a6a0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x561885e4a5d8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x561885e4a850 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x561885e4a758 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x561885e4aa60 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x561885e4a908 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x561885e4a988 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x561885e4abe8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x561885e4ab20 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x561885e4ad08 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x561885e4adf8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x561885e4af68 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x561885e4aea8 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x561885e4b0f0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x561885e4b020 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x561885e4b2f8 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x561885e4b1a8 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x561885e4b228 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x561885e4b428 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x561885e4b518 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x561885e4b5d8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x561885e4b7d8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x561885e4b688 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x561885e4b700 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x561885e97ab8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561885e97aa0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x561885e97a88 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561885e97a68 <col:58, col:65> 'String' (CXXTemporary 0x561885e97a68)
|           `-CXXTemporaryObjectExpr 0x561885e97a30 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x561885e4b9a8 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x561885e4b898 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x561885e4b910 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x561885e97b68 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561885e97b50 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x561885e97b38 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561885e97b18 <col:71, col:78> 'String' (CXXTemporary 0x561885e97b18)
|           `-CXXTemporaryObjectExpr 0x561885e97ae0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x561885e4bb78 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x561885e4ba68 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x561885e4bae0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x561885e97c18 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561885e97c00 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x561885e97be8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561885e97bc8 <col:71, col:78> 'String' (CXXTemporary 0x561885e97bc8)
|           `-CXXTemporaryObjectExpr 0x561885e97b90 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x561885e4bd48 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x561885e4bc38 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x561885e4bcb0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x561885e97cc8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561885e97cb0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x561885e97c98 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561885e97c78 <col:70, col:77> 'String' (CXXTemporary 0x561885e97c78)
|           `-CXXTemporaryObjectExpr 0x561885e97c40 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x561885e4bec8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x561885e4be08 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x561885e4c0e8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x561885e4bf80 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x561885e4bff8 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x561885e4c1e8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x561885e4c1e8
|-CXXMethodDecl 0x561885e4c2f0 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x561885e4c3b0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x561885e4c470 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x561885e4c530 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x561885e4c728 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x561885e4c5e0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x561885e4c658 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x561885e4cae0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x561885e4c7e8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x561885e4c860 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x561885e4c8d8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x561885e4c950 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x561885e4c9d0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x561885e4ce40 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x561885e4cbc0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x561885e4cc40 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x561885e4ccc0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x561885e4cd40 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x561885e4cf20 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x561885e4d060 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x561885e4cfd0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x561885e4d1b0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561885e4d118 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561885e4d3b8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x561885e4d268 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x561885e4d2e0 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561885e4d538 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x561885e4d478 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561885e4d680 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x561885e4d5f0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x561885e4d8c0 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x561885e4d740 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x561885e4d7e8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x561885e4da48 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x561885e4d980 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x561885e4daf0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561885e4dc08 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x561885e4dcb0 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x561885e4dd18 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x561885e4ddd0 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x561885e97cf0 <col:16, line:150:9>
| |-CXXConstructorDecl 0x561885e4dfa8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x561885e4de90 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x561885e4df10 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x561885e4dcb0 'idx' 'int'
| | | `-ImplicitCastExpr 0x561885e97d40 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x561885e97d00 <col:19> 'int' lvalue ParmVar 0x561885e4de90 'i' 'int'
| | |-CXXCtorInitializer Field 0x561885e4dd18 'port' 'int'
| | | `-ImplicitCastExpr 0x561885e97dc0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x561885e97d80 <col:28> 'int' lvalue ParmVar 0x561885e4df10 'p' 'int'
| | `-CompoundStmt 0x561885e97e10 <col:31, line:153:9>
| |-CXXMethodDecl 0x561885e4e188 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x561885e4e098 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x561885e98010 <col:46, line:157:9>
| |   `-ReturnStmt 0x561885e98000 <line:156:13, col:46>
| |     `-BinaryOperator 0x561885e97fe0 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x561885e97ee0 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x561885e97eb0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x561885e97e30 <col:20> 'const int' lvalue ->idx 0x561885e4dcb0
| |       | |   `-CXXThisExpr 0x561885e97e20 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x561885e97ec8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x561885e97e80 <col:27, col:29> 'const int' lvalue .idx 0x561885e4dcb0
| |       |     `-DeclRefExpr 0x561885e97e60 <col:27> 'const Router::Port' lvalue ParmVar 0x561885e4e098 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x561885e97fc0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x561885e97f90 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x561885e97f10 <col:36> 'const int' lvalue ->port 0x561885e4dd18
| |         |   `-CXXThisExpr 0x561885e97f00 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x561885e97fa8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x561885e97f60 <col:44, col:46> 'const int' lvalue .port 0x561885e4dd18
| |             `-DeclRefExpr 0x561885e97f40 <col:44> 'const Router::Port' lvalue ParmVar 0x561885e4e098 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x561885e4e2d0 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x561885e4e240 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x561885e98218 <col:46, line:160:9>
| |   `-ReturnStmt 0x561885e98208 <line:159:13, col:46>
| |     `-BinaryOperator 0x561885e981e8 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x561885e980e8 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x561885e980b8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x561885e98038 <col:20> 'const int' lvalue ->idx 0x561885e4dcb0
| |       | |   `-CXXThisExpr 0x561885e98028 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x561885e980d0 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x561885e98088 <col:27, col:29> 'const int' lvalue .idx 0x561885e4dcb0
| |       |     `-DeclRefExpr 0x561885e98068 <col:27> 'const Router::Port' lvalue ParmVar 0x561885e4e240 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x561885e981c8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x561885e98198 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x561885e98118 <col:36> 'const int' lvalue ->port 0x561885e4dd18
| |         |   `-CXXThisExpr 0x561885e98108 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x561885e981b0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x561885e98168 <col:44, col:46> 'const int' lvalue .port 0x561885e4dd18
| |             `-DeclRefExpr 0x561885e98148 <col:44> 'const Router::Port' lvalue ParmVar 0x561885e4e240 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x561885e4e418 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x561885e4e388 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x561885e98540 <col:45, line:163:9>
| |   `-ReturnStmt 0x561885e98530 <line:162:13, col:65>
| |     `-BinaryOperator 0x561885e98510 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x561885e982f0 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x561885e982c0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x561885e98240 <col:20> 'const int' lvalue ->idx 0x561885e4dcb0
| |       | |   `-CXXThisExpr 0x561885e98230 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x561885e982d8 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x561885e98290 <col:26, col:28> 'const int' lvalue .idx 0x561885e4dcb0
| |       |     `-DeclRefExpr 0x561885e98270 <col:26> 'const Router::Port' lvalue ParmVar 0x561885e4e388 'x' 'const Router::Port &'
| |       `-ParenExpr 0x561885e984f0 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x561885e984d0 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x561885e983d0 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x561885e983a0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x561885e98320 <col:36> 'const int' lvalue ->idx 0x561885e4dcb0
| |           | |   `-CXXThisExpr 0x561885e98310 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x561885e983b8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x561885e98370 <col:43, col:45> 'const int' lvalue .idx 0x561885e4dcb0
| |           |     `-DeclRefExpr 0x561885e98350 <col:43> 'const Router::Port' lvalue ParmVar 0x561885e4e388 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x561885e984b0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x561885e98480 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x561885e98400 <col:52> 'const int' lvalue ->port 0x561885e4dd18
| |             |   `-CXXThisExpr 0x561885e983f0 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x561885e98498 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x561885e98450 <col:59, col:61> 'const int' lvalue .port 0x561885e4dd18
| |                 `-DeclRefExpr 0x561885e98430 <col:59> 'const Router::Port' lvalue ParmVar 0x561885e4e388 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x561885e4e560 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x561885e4e4d0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x561885e98868 <col:46, line:166:9>
| |   `-ReturnStmt 0x561885e98858 <line:165:13, col:66>
| |     `-BinaryOperator 0x561885e98838 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x561885e98618 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x561885e985e8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x561885e98568 <col:20> 'const int' lvalue ->idx 0x561885e4dcb0
| |       | |   `-CXXThisExpr 0x561885e98558 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x561885e98600 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x561885e985b8 <col:26, col:28> 'const int' lvalue .idx 0x561885e4dcb0
| |       |     `-DeclRefExpr 0x561885e98598 <col:26> 'const Router::Port' lvalue ParmVar 0x561885e4e4d0 'x' 'const Router::Port &'
| |       `-ParenExpr 0x561885e98818 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x561885e987f8 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x561885e986f8 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x561885e986c8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x561885e98648 <col:36> 'const int' lvalue ->idx 0x561885e4dcb0
| |           | |   `-CXXThisExpr 0x561885e98638 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x561885e986e0 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x561885e98698 <col:43, col:45> 'const int' lvalue .idx 0x561885e4dcb0
| |           |     `-DeclRefExpr 0x561885e98678 <col:43> 'const Router::Port' lvalue ParmVar 0x561885e4e4d0 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x561885e987d8 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x561885e987a8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x561885e98728 <col:52> 'const int' lvalue ->port 0x561885e4dd18
| |             |   `-CXXThisExpr 0x561885e98718 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x561885e987c0 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x561885e98778 <col:60, col:62> 'const int' lvalue .port 0x561885e4dd18
| |                 `-DeclRefExpr 0x561885e98758 <col:60> 'const Router::Port' lvalue ParmVar 0x561885e4e4d0 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x561885e98880 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x561885e98880
| | `-ParmVarDecl 0x561885e98998 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x561885e98a38 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x561885e98a38
| | `-ParmVarDecl 0x561885e9c1a8 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x561885e9c240 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x561885e9c510 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x561885e9c510
| | `-ParmVarDecl 0x561885e9c618 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x561885e9c688 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x561885e9c798 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x561885e9cab8 <col:12>
|     |-BinaryOperator 0x561885e9c958 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x561885e9c910 <col:12> 'int' lvalue ->idx 0x561885e4dcb0
|     | | `-CXXThisExpr 0x561885e9c900 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x561885e9c940 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x561885e9c8d0 <col:12> 'int' xvalue .idx 0x561885e4dcb0
|     |     `-CXXStaticCastExpr 0x561885e9c8a0 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x561885e9c870 <col:12> 'Router::Port' lvalue ParmVar 0x561885e9c798 '' 'Router::Port &&'
|     |-BinaryOperator 0x561885e9ca60 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x561885e9ca18 <col:12> 'int' lvalue ->port 0x561885e4dd18
|     | | `-CXXThisExpr 0x561885e9ca08 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x561885e9ca48 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x561885e9c9d8 <col:12> 'int' xvalue .port 0x561885e4dd18
|     |     `-CXXStaticCastExpr 0x561885e9c9a8 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x561885e9c978 <col:12> 'Router::Port' lvalue ParmVar 0x561885e9c798 '' 'Router::Port &&'
|     `-ReturnStmt 0x561885e9caa8 <col:12>
|       `-UnaryOperator 0x561885e9ca90 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x561885e9ca80 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x561885e4e620 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561885e4e738 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x561885e4e928 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x561885e4e9e0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x561885e4e928 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x561885e9c218 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x561885e9c350 <col:22, line:173:9>
| |-CXXConstructorDecl 0x561885e4ed18 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x561885e4eaa0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x561885e4eb20 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x561885e4eba0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x561885e4ec20 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x561885e4e928 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x561885e9c360 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x561885e9cd98 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x561885e9cb88 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x561885e9cb50 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x561885e9cb38 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x561885e9c820 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x561885e9c688 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x561885e9c430 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x561885e9c418 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x561885e9c3c8 <col:13> 'Router::Port [2]' lvalue ->p 0x561885e4e928
| |   |   | |   `-CXXThisExpr 0x561885e9c3b8 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x561885e9c3f8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x561885e9c808 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x561885e9c4d0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x561885e9c4a0 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x561885e9c460 <col:25> 'int' lvalue ParmVar 0x561885e4eba0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x561885e9c4b8 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x561885e9c480 <col:33> 'int' lvalue ParmVar 0x561885e4ec20 'to_port' 'int'
| |   `-ExprWithCleanups 0x561885e9cd80 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x561885e9cd48 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x561885e9cd30 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x561885e9cd10 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x561885e9c688 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x561885e9cc18 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x561885e9cc00 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x561885e9cbb0 <col:13> 'Router::Port [2]' lvalue ->p 0x561885e4e928
| |       | |   `-CXXThisExpr 0x561885e9cba0 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x561885e9cbe0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x561885e9ccf8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x561885e9ccb8 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x561885e9cc88 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x561885e9cc48 <col:25> 'int' lvalue ParmVar 0x561885e4eaa0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x561885e9cca0 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x561885e9cc68 <col:35> 'int' lvalue ParmVar 0x561885e4eb20 'from_port' 'int'
| |-CXXMethodDecl 0x561885e4eee8 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x561885e4edf8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x561885e9d358 <col:45, line:182:9>
| |   |-ParenExpr 0x561885e9d238 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x561885e9d208 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x561885e9ced8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x561885e9cea8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x561885e9ce10 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x561885e9cdf8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x561885e9cdb8 <col:34> 'int' lvalue ParmVar 0x561885e4edf8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x561885e9cdd8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x561885e9ce88 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x561885e9ce70 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x561885e9ce30 <col:44> 'int' lvalue ParmVar 0x561885e4edf8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x561885e9ce50 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x561885e9cf38 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x561885e9cf18 <col:59> 'int' 0
| |   |   `-CallExpr 0x561885e9d168 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x561885e9d150 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x561885e9d130 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x561885e9d1a8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x561885e9cfa8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x561885e9d1c0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x561885e9cfd0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x561885e9d1d8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x561885e9d008 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x561885e9d1f0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x561885e9d118 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x561885e9d100 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x561885e9d0a8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x561885e9d348 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x561885e9d328 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x561885e9d2f8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x561885e9d268 <col:20> 'Router::Port const[2]' lvalue ->p 0x561885e4e928
| |       |   `-CXXThisExpr 0x561885e9d258 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x561885e9d310 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x561885e9d298 <col:22> 'int' lvalue ParmVar 0x561885e4edf8 'i' 'int'
| |-CXXMethodDecl 0x561885e4f098 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x561885e4efa8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x561885e9d8d0 <col:33, line:186:9>
| |   |-ParenExpr 0x561885e9d7f0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x561885e9d7c0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x561885e9d498 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x561885e9d468 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x561885e9d3d0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x561885e9d3b8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x561885e9d378 <col:34> 'int' lvalue ParmVar 0x561885e4efa8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x561885e9d398 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x561885e9d448 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x561885e9d430 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x561885e9d3f0 <col:44> 'int' lvalue ParmVar 0x561885e4efa8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x561885e9d410 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x561885e9d4f8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x561885e9d4d8 <col:59> 'int' 0
| |   |   `-CallExpr 0x561885e9d720 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x561885e9d708 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x561885e9d6e8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x561885e9d760 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x561885e9d568 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x561885e9d778 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x561885e9d590 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x561885e9d790 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x561885e9d5c8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x561885e9d7a8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x561885e9d6d0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x561885e9d6b8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x561885e9d668 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x561885e9d8c0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x561885e9d8a0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x561885e9d870 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x561885e9d820 <col:20> 'Router::Port [2]' lvalue ->p 0x561885e4e928
| |       |   `-CXXThisExpr 0x561885e9d810 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x561885e9d888 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x561885e9d850 <col:22> 'int' lvalue ParmVar 0x561885e4efa8 'i' 'int'
| |-CXXMethodDecl 0x561885e4f238 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x561885e4f178 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x561885e9dca8 <col:52, line:190:9>
| |   `-ReturnStmt 0x561885e9dc98 <line:189:13, col:51>
| |     `-BinaryOperator 0x561885e9dc78 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x561885e9da90 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x561885e9da78 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x561885e9da30 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x561885e4e188 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x561885e9d968 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x561885e9d950 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x561885e9d900 <col:20> 'Router::Port const[2]' lvalue ->p 0x561885e4e928
| |       | | |   `-CXXThisExpr 0x561885e9d8f0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x561885e9d930 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x561885e9da10 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x561885e9d9f8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x561885e9d9a8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x561885e4e928
| |       |   |   `-DeclRefExpr 0x561885e9d988 <col:28> 'const Router::Connection' lvalue ParmVar 0x561885e4f178 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x561885e9d9d8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x561885e9dc40 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x561885e9dc28 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x561885e9dc08 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x561885e4e188 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x561885e9db40 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x561885e9db28 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x561885e9dad8 <col:38> 'Router::Port const[2]' lvalue ->p 0x561885e4e928
| |         | |   `-CXXThisExpr 0x561885e9dac8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x561885e9db08 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x561885e9dbe8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x561885e9dbd0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x561885e9db80 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x561885e4e928
| |           |   `-DeclRefExpr 0x561885e9db60 <col:46> 'const Router::Connection' lvalue ParmVar 0x561885e4f178 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x561885e9dbb0 <col:50> 'int' 1
| `-CXXMethodDecl 0x561885e4f380 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x561885e4f2f0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x561885e9e240 <col:51, line:193:9>
|     `-ReturnStmt 0x561885e9e230 <line:192:13, col:69>
|       `-BinaryOperator 0x561885e9e210 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x561885e9de38 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x561885e9de20 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x561885e9de00 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x561885e4e418 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x561885e9dd38 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x561885e9dd20 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x561885e9dcd0 <col:20> 'Router::Port const[2]' lvalue ->p 0x561885e4e928
|         | | |   `-CXXThisExpr 0x561885e9dcc0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x561885e9dd00 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x561885e9dde0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x561885e9ddc8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x561885e9dd78 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x561885e4e928
|         |   |   `-DeclRefExpr 0x561885e9dd58 <col:27> 'const Router::Connection' lvalue ParmVar 0x561885e4f2f0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x561885e9dda8 <col:31> 'int' 0
|         `-ParenExpr 0x561885e9e1f0 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x561885e9e1d0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x561885e9dfe8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x561885e9dfd0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x561885e9dfb0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x561885e4e188 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x561885e9dee8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x561885e9ded0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x561885e9de80 <col:38> 'Router::Port const[2]' lvalue ->p 0x561885e4e928
|             | | |   `-CXXThisExpr 0x561885e9de70 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x561885e9deb0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x561885e9df90 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x561885e9df78 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x561885e9df28 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x561885e4e928
|             |   |   `-DeclRefExpr 0x561885e9df08 <col:46> 'const Router::Connection' lvalue ParmVar 0x561885e4f2f0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x561885e9df58 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x561885e9e198 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x561885e9e180 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561885e9e160 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x561885e4e418 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x561885e9e098 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x561885e9e080 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x561885e9e030 <col:56> 'Router::Port const[2]' lvalue ->p 0x561885e4e928
|               | |   `-CXXThisExpr 0x561885e9e020 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x561885e9e060 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x561885e9e140 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x561885e9e128 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x561885e9e0d8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x561885e4e928
|                 |   `-DeclRefExpr 0x561885e9e0b8 <col:63> 'const Router::Connection' lvalue ParmVar 0x561885e4f2f0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x561885e9e108 <col:67> 'int' 1
|-AccessSpecDecl 0x561885e4f440 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x561885e4f468 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x561885e4f520 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x561885e4f5e0 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x561885e4f630 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x561885e4f680 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x561885e4f6d0 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x561885e4f720 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x561885e4f770 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x561885e4f888 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x561885e4f868 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x561885e4f850 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x561885e4f830 <col:25> 'int' 2
| |-EnumConstantDecl 0x561885e4f930 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x561885e4f910 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x561885e4f8f8 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x561885e4f8d8 <col:48> 'int' 1
| |-EnumConstantDecl 0x561885e4f9c0 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x561885e4f9a0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x561885e4f980 <col:71> 'int' 0
| |-EnumConstantDecl 0x561885e4fa50 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x561885e4fa30 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x561885e4fa10 <col:30> 'int' 1
| `-EnumConstantDecl 0x561885e4fae0 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x561885e4fac0 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x561885e4faa0 <col:50> 'int' 2
|-FieldDecl 0x561885e4fb40 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x561885e4fba0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x561885e4fc08 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x561885e4fca8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x561885e4fc88 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x561885e4fc58 <col:30> 'int' 1
|-FieldDecl 0x561885e4fd48 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x561885e4fd28 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x561885e4fcf8 <col:33> 'int' 1
|-FieldDecl 0x561885e4fde8 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x561885e4fdc8 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x561885e4fd98 <col:32> 'int' 1
|-FieldDecl 0x561885e4fe50 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x561885e4feb0 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x561885e5c300 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x561885e5c400 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x561885e5c500 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x561885e69f60 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x561885e70d70 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x561885e73110 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x561885e73228 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x561885e732c8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x561885e73328 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x561885e733c0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x561885e733c0
| | `-ParmVarDecl 0x561885e734d8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x561885e73578 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x561885e73578
| | `-ParmVarDecl 0x561885e73688 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x561885e73728 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x561885e73728
| | `-ParmVarDecl 0x561885e73838 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x561885e738a8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x561885e738a8
| | `-ParmVarDecl 0x561885e739b8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x561885e73a40 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x561885e73a40
|-FieldDecl 0x561885e80950 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x561885e809b0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x561885e80ac0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x561885e80e18 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x561885e80f20 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x561885e8a500 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x561885e8a610 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x561885e8a710 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x561885e8a820 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x561885e8a930 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x561885e8aa40 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x561885e8ab50 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x561885e8aba0 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x561885e8aca0 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x561885e8acf0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885e8ac80 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x561885e8ac60 <col:29> 'int' 256
|-FieldDecl 0x561885e8ad50 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x561885e8adb8 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x561885e8ae20 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x561885e8af20 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x561885e92fa0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x561885e93000 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x561885e93060 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x561885e930b0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x561885e931c8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x561885e93258 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x561885e93360 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x561885e933b0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x561885e93340 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x561885e93320 <col:27> 'int' 4096
| |-FieldDecl 0x561885e933d8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x561885e93440 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x561885e93638 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x561885e936c8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x561885e93888 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x561885e93728 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x561885e937a0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x561885e933d8 'name' 'String'
| | | `-CXXConstructExpr 0x561885e9e298 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x561885e9e258 <col:20> 'const String' lvalue ParmVar 0x561885e93728 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x561885e93440 'nsig' 'int'
| | | `-IntegerLiteral 0x561885e9e2f0 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x561885e93638 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x561885e9e3d8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x561885e936c8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x561885e9e398 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x561885e9e358 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x561885e937a0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x561885e9e668 <col:42, line:289:9>
| |   `-CallExpr 0x561885e9e618 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x561885e9e600 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x561885e9e5e0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x561885a51958 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x561885e9e650 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x561885e9e528 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x561885e9e508 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x561885e9e4f0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x561885e9e4a0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x561885e93638
| |     |     |   `-CXXThisExpr 0x561885e9e490 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x561885e9e4d0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x561885e9e540 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x561885e9e5c0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x561885e9e5a0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x561885e9e570 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x561885e93638 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x561885e9e560 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x561885e93968 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x561885e93968
| | `-ParmVarDecl 0x561885e93a78 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x561885e93b18 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x561885e93b18
| | `-ParmVarDecl 0x561885e93c28 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x561885e93cc8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x561885e93cc8
| | `-ParmVarDecl 0x561885e93dd8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x561885e93e48 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x561885e93e48
| | `-ParmVarDecl 0x561885e93f58 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x561885e93fe0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x561885e93fe0
|-FieldDecl 0x561885e940d0 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x561885e94130 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x561885e94190 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x561885e941f0 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x561885e94250 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x561885e94360 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x561885e94460 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x561885e944c0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x561885e94608 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x561885e94548 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x561885e947b8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x561885e946c8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x561885e94900 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x561885e94870 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x561885e94ca8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x561885e949b8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x561885e94a30 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x561885e94ab0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x561885e94b28 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x561885e94ba0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561885e97ce0 <col:57> 'bool' false
|-CXXMethodDecl 0x561885e94e18 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561885e94d80 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x561885e94f68 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561885e94ed0 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x561885e950b8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561885e95020 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x561885e95210 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x561885e95178 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x561885e95530 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x561885e952c8 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x561885e95340 <col:50> col:54 'bool'
| |-ParmVarDecl 0x561885e953c0 <col:56> col:59 'int'
| `-ParmVarDecl 0x561885e95438 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x561885e95698 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561885e95600 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x561885e95760 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x561885e95820 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x561885e95a20 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x561885e958d0 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x561885e95948 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x561885e95af0 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x561885e95c38 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x561885e95ba0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x561885e9e8a0 <col:42, line:326:5>
|   `-ReturnStmt 0x561885e9e890 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x561885e9e878 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x561885e9e858 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x561885e9e828 <col:16, col:45> '<bound member function type>' .back 0x561885e6ee18
|           `-ArraySubscriptExpr 0x561885e9e7a8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x561885e9e778 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561885e9e690 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x561885e80e18
|             |   `-CXXThisExpr 0x561885e9e680 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x561885e9e790 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x561885e9e6c0 <col:38> 'bool' lvalue ParmVar 0x561885e95ba0 'isout' 'bool'
|-CXXMethodDecl 0x561885e95e08 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x561885e95cf0 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x561885e95d68 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x561885e95f60 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x561885e95ec8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x561885e96208 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x561885e96018 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x561885e96090 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x561885e96110 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x561885e963e0 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x561885e962d0 <col:30> col:34 'bool'
| `-ParmVarDecl 0x561885e96348 <col:36> col:40 'bool'
|-CXXMethodDecl 0x561885e96568 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x561885e964a8 <col:30> col:33 'int'
|-CXXMethodDecl 0x561885e96800 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x561885e96628 <col:23> col:26 'int'
| |-ParmVarDecl 0x561885e966a0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x561885e96718 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x561885e96a18 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x561885e968c8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x561885e96940 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x561885e96c28 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x561885e96ae0 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x561885e96b58 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x561885e96da8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x561885e96ce8 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x561885e96fa8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x561885e96e60 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x561885e96ed8 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x561885e97180 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561885e97068 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x561885e970e8 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x561885e97460 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x561885e97240 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x561885e972b8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x561885e97338 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x561885e973b0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x561885e97540 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x561885e975a0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x561885e97820 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x561885e97720 parent 0x561885d531e0 prev 0x561885d62e08 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x561885e97600 <col:36> col:39 'int'
    `-ParmVarDecl 0x561885e97680 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885d531e0 prev 0x561885d52f60 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561885d532d8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x561885d53368 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x561885d533c8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x561885d534b8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x561885d535b8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x561885d53788 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x561885d53638 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x561885d536b0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x561885d53918 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x561885d53850 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x561885d539c0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x561885d53af8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x561885d53a30 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x561885d53c98 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x561885d53bd8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x561885d53e38 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x561885d53d78 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x561885d53ee0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x561885d53fe0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x561885d540c0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d53fc0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x561885d53fa0 <col:26> 'int' 1
| `-EnumConstantDecl 0x561885d54070 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x561885d540d8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d54050 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x561885d54030 <col:44> 'int' 2
|-CXXMethodDecl 0x561885d54220 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x561885d54108 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x561885d54188 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x561885d54378 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x561885d542e8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x561885d545b8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x561885d54438 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x561885d544b0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x561885d54668 <col:20>
| `-OptimizeNoneAttr 0x561885d546c0 <col:30>
|-CXXMethodDecl 0x561885d547c8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x561885d54700 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x561885d54870 <col:20>
| `-OptimizeNoneAttr 0x561885d548c8 <col:30>
|-CXXMethodDecl 0x561885d54918 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x561885d549e0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x561885d54af8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x561885d54b80 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x561885d54c08 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x561885d54c90 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x561885d54d18 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x561885d54da8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x561885d54e68 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x561885d54ef0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x561885d54f78 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x561885d55000 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x561885d55088 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x561885d55110 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x561885d551a0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x561885d55260 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x561885d552f0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x561885d55440 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x561885d553a8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x561885d555d0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x561885d55500 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x561885d55880 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x561885d55688 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x561885d55708 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x561885d55788 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x561885d55938 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x561885d55a40 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561885d55cd0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d55a20 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x561885d55a00 <col:33> 'int' 0
| |-EnumConstantDecl 0x561885d55ad0 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561885d55ce8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d55ab0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x561885d55a90 <col:32> 'int' 20
| |-EnumConstantDecl 0x561885d55b60 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561885d55d00 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d55b40 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x561885d55b20 <col:38> 'int' 90
| |-EnumConstantDecl 0x561885d55bf0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561885d55d18 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d55bd0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x561885d55bb0 <col:35> 'int' 100
| `-EnumConstantDecl 0x561885d55c80 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x561885d55d30 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d55c60 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x561885d55c40 <col:32> 'int' 2000
|-CXXMethodDecl 0x561885d55d70 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x561885d561b0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561885d56020 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x561885d56098 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561885d56280 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x561885d56400 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x561885d56330 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561885d56608 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561885d564b8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x561885d56530 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561885d56708 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x561885d567a8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x561885d56870 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x561885d56900 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x561885d56b30 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d568e0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x561885d568c0 <col:36> 'int' EnumConstant 0x561885d56870 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x561885d56950 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561885d569a0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561885d569f0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561885d56a40 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561885d56a90 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x561885d56ae0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x561885d56c18 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x561885d56b58 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x561885d56ce0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x561885d56da0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x561885d56e60 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x561885d56f20 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x561885d57038 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x561885d57100 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x561885d57280 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x561885d571b0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x561885d573a8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x561885d575a8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x561885d57458 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x561885d574d8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x561885d64ef8 <col:54, line:127:5>
|   |-ParenExpr 0x561885d64da8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x561885d64d78 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x561885d64a68 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x561885d64a40 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x561885d64a28 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x561885d64a10 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x561885d649e0 <col:31> 'Router *' lvalue ->_router 0x561885d628c0
|   |   |         `-CXXThisExpr 0x561885d649d0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x561885d64ac8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d64aa8 <col:48> 'int' 0
|   |   `-CallExpr 0x561885d64cd8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x561885d64cc0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d64ca0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d64d18 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d64b38 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x561885d64d30 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d64b58 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x561885d64d48 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d64b90 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x561885d64d60 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d64c88 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d64c70 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d64c28 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x561885d64e40 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x561885d64dd8 <col:9> 'Router *' lvalue ->_router 0x561885d628c0
|   | | `-CXXThisExpr 0x561885d64dc8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x561885d64e28 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561885d64e08 <col:19> 'Router *' lvalue ParmVar 0x561885d57458 'r' 'Router *'
|   `-BinaryOperator 0x561885d64ed8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x561885d64e70 <col:9> 'int' lvalue ->_eindex 0x561885d62928
|     | `-CXXThisExpr 0x561885d64e60 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x561885d64ec0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x561885d64ea0 <col:19> 'int' lvalue ParmVar 0x561885d574d8 'eindex' 'int'
|-CXXMethodDecl 0x561885d57730 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x561885d57668 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x561885d57800 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x561885d578c8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x561885d57968 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x561885d57bb8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x561885d57a30 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x561885d57ab0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x561885d57c68 <col:20>
| `-OptimizeNoneAttr 0x561885d57cc0 <col:30>
|-CXXMethodDecl 0x561885d57dc8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x561885d57d00 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x561885d57e70 <col:20>
| `-OptimizeNoneAttr 0x561885d57ec8 <col:30>
|-CXXMethodDecl 0x561885d57f98 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x561885d57f08 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x561885d58040 <col:20>
| `-OptimizeNoneAttr 0x561885d58098 <col:30>
|-CXXMethodDecl 0x561885d58228 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x561885d580d0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x561885d58150 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x561885d583b8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x561885d582f0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x561885d58508 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x561885d58478 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x561885d58658 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x561885d585c8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x561885d587a8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x561885d58718 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x561885d58a68 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x561885d58860 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x561885d588e0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x561885d58988 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x561885d58b40 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x561885d58c00 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x561885d58ed0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561885d58d80 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x561885d58df8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x561885d58ff8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x561885d591d0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x561885d590b0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x561885d59130 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x561885d593b8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x561885d59298 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x561885d59318 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x561885d59728 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x561885d59478 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x561885d594f0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561885d59570 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561885d644e0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561885d644c0 <col:106> 'int' 0
| `-ParmVarDecl 0x561885d595e8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561885d64518 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561885d644f8 <col:126> 'int' 0
|-CXXMethodDecl 0x561885d59ac8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561885d597f8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x561885d59890 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561885d59910 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x561885d59988 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561885d64550 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561885d64530 <col:114> 'int' 0
|-CXXMethodDecl 0x561885d59e58 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561885d59ba0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x561885d59c18 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561885d59c98 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x561885d64568 <col:96> 'int' 0
| `-ParmVarDecl 0x561885d59d10 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561885d645a8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561885d64588 <col:116> 'int' 0
|-CXXMethodDecl 0x561885d5a1d8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x561885d59f28 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x561885d59fa0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561885d5a020 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561885d645e0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561885d645c0 <col:109> 'int' 0
| `-ParmVarDecl 0x561885d5a098 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561885d64618 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561885d645f8 <col:129> 'int' 0
|-CXXMethodDecl 0x561885d5a558 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561885d5a2a8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x561885d5a320 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561885d5a3a0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x561885d5a418 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561885d64650 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561885d64630 <col:117> 'int' 0
|-CXXMethodDecl 0x561885d5a8e8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561885d5a630 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5a6a8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561885d5a728 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x561885d64668 <col:99> 'int' 0
| `-ParmVarDecl 0x561885d5a7a0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561885d646a8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561885d64688 <col:119> 'int' 0
|-CXXMethodDecl 0x561885d5ad08 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x561885d5a9b8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x561885d5aa38 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x561885d5aab0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561885d5ab30 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561885d646e0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561885d646c0 <col:108> 'int' 0
| `-ParmVarDecl 0x561885d5abb0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x561885d64718 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x561885d646f8 <col:141> 'int' 0
|-CXXMethodDecl 0x561885d5b128 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x561885d5ade0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x561885d5ae60 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x561885d5aed8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561885d5af58 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x561885d5afd8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x561885d64730 <col:121> 'int' 0
|-CXXMethodDecl 0x561885d5b558 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x561885d5b208 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x561885d5b288 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x561885d5b300 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561885d5b380 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x561885d64750 <col:98> 'int' 0
| `-ParmVarDecl 0x561885d5b400 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x561885d64770 <col:123> 'int' 0
|-CXXMethodDecl 0x561885d5b820 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x561885d5b630 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x561885d5b6b0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x561885d5b730 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x561885d64790 <col:80> 'int' 0
|-EnumDecl 0x561885d5b8d8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x561885d5b9e0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561885d5bc70 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d5b9c0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x561885d5b9a0 <col:42> 'int' 1
| |-EnumConstantDecl 0x561885d5ba70 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561885d5bc88 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d5ba50 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x561885d5ba30 <col:40> 'int' 2
| |-EnumConstantDecl 0x561885d5bb00 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561885d5bca0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d5bae0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x561885d5bac0 <col:44> 'int' 4
| |-EnumConstantDecl 0x561885d5bb90 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561885d5bcb8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d5bb70 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x561885d5bb50 <col:36> 'int' 7
| `-EnumConstantDecl 0x561885d5bc20 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x561885d5bcd0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d5bc00 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x561885d5bbe0 <col:34> 'int' 6
|-CXXMethodDecl 0x561885d5bf88 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x561885d5bcf8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x561885d5bd98 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x561885d5be18 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x561885d5be90 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x561885d64848 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561885d64830 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x561885d64818 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561885d647f8 <col:98, col:105> 'String' (CXXTemporary 0x561885d647f8)
|           `-CXXTemporaryObjectExpr 0x561885d647c0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x561885d5c228 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x561885d5c058 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x561885d5c0d0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x561885d5c148 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x561885d648f8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x561885d648e0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x561885d648c8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x561885d648a8 <col:94, col:101> 'String' (CXXTemporary 0x561885d648a8)
| |         `-CXXTemporaryObjectExpr 0x561885d64870 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x561885d650e0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x561885d65058 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x561885d65028 <col:9> '<bound member function type>' ->add_task_handlers 0x561885d5bf88
|     | `-CXXThisExpr 0x561885d65018 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x561885d65098 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x561885d64f98 <col:27> 'Task *' lvalue ParmVar 0x561885d5c058 'task' 'Task *'
|     |-ImplicitCastExpr 0x561885d650b0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x561885d64fb8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x561885d5c0d0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x561885d650c8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x561885d64fd8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x561885d5bc20 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x561885d64ff8 <col:62> 'const String' lvalue ParmVar 0x561885d5c148 'prefix' 'const String &'
|-CXXMethodDecl 0x561885d5c438 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x561885d5c2f0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x561885d5c368 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x561885d649a8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x561885d64990 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x561885d64978 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x561885d64958 <col:70, col:77> 'String' (CXXTemporary 0x561885d64958)
| |         `-CXXTemporaryObjectExpr 0x561885d64920 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x561885d652b8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x561885d65230 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x561885d65200 <col:9> '<bound member function type>' ->add_task_handlers 0x561885d5bf88
|     | `-CXXThisExpr 0x561885d651f0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x561885d65270 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x561885d65170 <col:27> 'Task *' lvalue ParmVar 0x561885d5c2f0 'task' 'Task *'
|     |-ImplicitCastExpr 0x561885d65288 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x561885d65190 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x561885d652a0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x561885d651b0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x561885d5bc20 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x561885d651d0 <col:57> 'const String' lvalue ParmVar 0x561885d5c368 'prefix' 'const String &'
|-CXXMethodDecl 0x561885d5c718 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x561885d5c500 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5c580 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5c5f8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x561885d5c9c8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x561885d5c7e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5c868 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5c8e8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x561885d5ccb8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x561885d5ca98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5cb18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5cb90 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x561885d5cf68 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x561885d5cd88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5ce08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5ce88 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x561885d5d218 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x561885d5d038 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5d0b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5d138 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x561885d5d4c8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x561885d5d2e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5d368 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5d3e0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x561885d5d778 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x561885d5d598 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5d618 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5d698 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x561885d5da88 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x561885d5d8a0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5d920 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5d9a0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x561885d5dd68 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x561885d5db58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5dbd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5dc80 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x561885d5e048 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x561885d5de38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5deb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5df60 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x561885d5e2b0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x561885d5e118 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x561885d5e198 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x561885d5e210 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x561885d5e558 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x561885d5e380 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x561885d5e400 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x561885d5e478 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x561885d5e808 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x561885d5e628 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5e6a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5e728 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x561885d5eab8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x561885d5e8d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5e958 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5e9d0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x561885d5ed68 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x561885d5eb88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5ec08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5ec80 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x561885d5f038 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x561885d5ee38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5eeb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561885d5ef58 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x561885d5f368 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x561885d5f108 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561885d5f188 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x561885d5f200 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x561885d5f278 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561885d649c0 <col:93> 'bool' false
|-CXXMethodDecl 0x561885d5f550 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561885d5f438 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x561885d5f4b8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x561885d5f728 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561885d5f610 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x561885d5f690 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x561885d5fa08 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x561885d5f7e8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x561885d5f860 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x561885d5f8e0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x561885d5f958 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x561885d5fcf8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x561885d5fad8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x561885d5fb50 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x561885d5fbd0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x561885d5fc48 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x561885d5ff30 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x561885d5fdd0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x561885d5fe50 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x561885d60118 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x561885d5fff8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x561885d60078 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x561885d601c8 prev 0x561885d57968 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561885d602c0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x561885d60350 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x561885d603c8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x561885d60488 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x561885d60550 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x561885d606c8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x561885d60600 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x561885d60770 <col:24>
| | `-OptimizeNoneAttr 0x561885d607c8 <col:34>
| |-CXXMethodDecl 0x561885d60810 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x561885d60ac8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x561885d608c0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x561885d60938 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x561885d609b8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x561885d60b80 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x561885d60bb8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x561885d60c20 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x561885d60ca8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x561885d60fc8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x561885d60d60 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x561885d60dd8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x561885d60e50 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x561885d60ed0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x561885d610e0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x561885d68a58 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x561885d68a58
| | `-ParmVarDecl 0x561885d68b68 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x561885d68c08 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x561885d68c08
| | `-ParmVarDecl 0x561885d68d18 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x561885eb69e0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561885d61158 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x561885d611f8 <col:38> "" ""
|-CXXMethodDecl 0x561885d61288 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x561885d61328 <col:44> "" ""
|-AccessSpecDecl 0x561885d61398 <line:260:3, col:10> col:3 private
|-EnumDecl 0x561885d613c0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x561885d614c0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x561885d61510 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d614a0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x561885d61480 <col:27> 'int' 4
|-FieldDecl 0x561885d615c8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x561885d61778 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x561885d61830 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x561885d628c0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x561885d62928 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x561885d62a78 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x561885d629b8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x561885d62c28 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x561885d62b38 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x561885d62e08 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x561885d62ce8 <col:20> col:23 'int'
| `-ParmVarDecl 0x561885d62d68 <col:25> col:28 'int'
|-CXXMethodDecl 0x561885d630b0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x561885d62ed0 <col:23> col:26 'int'
| |-ParmVarDecl 0x561885d62f50 <col:28> col:31 'int'
| `-ParmVarDecl 0x561885d62fc8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x561885d63168 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x561885d63230 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x561885d63280 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x561885d632d0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x561885d634b0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x561885d63360 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x561885d633d8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561885d63758 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x561885d63578 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x561885d635f8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x561885d63670 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x561885d63978 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x561885d63828 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x561885d638a8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x561885d63cb0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x561885d63a38 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x561885d63ab8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x561885d63b30 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x561885d63bb0 <col:57> col:60 'int'
|-CXXMethodDecl 0x561885d63e98 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561885d63d80 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x561885d63e00 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x561885d63fe8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x561885d63f58 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x561885d64368 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x561885d640a8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x561885d64128 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x561885d641a0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x561885d64220 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x561885d64480 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class FlowInfo
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885d6bbc8 <../elements/standard/flowinfo.hh:27:1, line:36:1> line:27:7 class FlowInfo definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x561885d6bd28 <col:1, col:7> col:7 implicit referenced class FlowInfo
|-AccessSpecDecl 0x561885d6bdb8 <col:35, col:41> col:35 public
|-CXXConstructorDecl 0x561885d6be40 <line:29:5, col:14> col:5 FlowInfo 'void ()'
|-CXXMethodDecl 0x561885d6bf40 <line:31:5, col:57> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x561885d54918 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x561885d6cb58 <col:36, col:57>
|   `-ReturnStmt 0x561885d6cb48 <col:38, col:45>
|     `-ImplicitCastExpr 0x561885d6cb30 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x561885d6cb10 <col:45> 'const char [9]' lvalue "FlowInfo"
|-CXXMethodDecl 0x561885d6c008 <line:33:5, col:64> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x561885d55d70 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x561885d6cbb8 <col:33, col:64>
|   `-ReturnStmt 0x561885d6cba8 <col:35, col:42>
|     `-ImplicitCastExpr 0x561885d6cb90 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x561885d6cb70 <col:42> 'Element::ConfigurePhase' EnumConstant 0x561885d55ad0 'CONFIGURE_PHASE_INFO' 'Element::ConfigurePhase'
|-CXXMethodDecl 0x561885d6c2e0 <line:34:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x561885d561b0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x561885d6c190 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x561885d6c208 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXConstructorDecl 0x561885d6c3b8 <line:27:7> col:7 implicit FlowInfo 'void (const FlowInfo &)' inline default_delete noexcept-unevaluated 0x561885d6c3b8
| `-ParmVarDecl 0x561885d6c4c8 <col:7> col:7 'const FlowInfo &'
|-CXXConstructorDecl 0x561885d6c568 <col:7> col:7 implicit FlowInfo 'void (FlowInfo &&)' inline default_delete noexcept-unevaluated 0x561885d6c568
| `-ParmVarDecl 0x561885d6c678 <col:7> col:7 'FlowInfo &&'
|-CXXMethodDecl 0x561885d6c718 <col:7> col:7 implicit operator= 'FlowInfo &(const FlowInfo &)' inline default_delete noexcept-unevaluated 0x561885d6c718
| `-ParmVarDecl 0x561885d6c828 <col:7> col:7 'const FlowInfo &'
|-CXXMethodDecl 0x561885d6c898 <col:7> col:7 implicit operator= 'FlowInfo &(FlowInfo &&)' inline default_delete noexcept-unevaluated 0x561885d6c898
| `-ParmVarDecl 0x561885d6c9a8 <col:7> col:7 'FlowInfo &&'
`-CXXDestructorDecl 0x561885d6ca30 <col:7> col:7 implicit ~FlowInfo 'void ()' inline default noexcept-unevaluated 0x561885d6ca30
  `-Overrides: [ 0x561885d534b8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.FlowInfo = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.FlowInfo.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885d2b878 prev 0x561885d20a80 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561885d2b970 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x561885d2ba60 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x561885d2bb88 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x561885d2bd08 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x561885d2be88 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x561885d2c008 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x561885d3ce38 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561885d3d6a8 <col:11>
|-CXXDestructorDecl 0x561885d3cf10 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x561885d3d048 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x561885d3d048
| `-ParmVarDecl 0x561885d3d158 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x561885d3d1f8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561885d3d1f8
| `-ParmVarDecl 0x561885d3d308 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x561885d400c8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x561885d401d8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x561885d40458 <col:11>
|   `-ReturnStmt 0x561885d40448 <col:11>
|     `-UnaryOperator 0x561885d40430 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561885d40420 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x561885d40248 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561885d40248
  `-ParmVarDecl 0x561885d40358 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885d2c070 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561885d2c188 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x561885d2c228 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x561885d2c290 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x561885d2c2f8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x561885d2c360 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x561885d2c3c0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x561885d2c480 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x561885d2c4e0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x561885d2c540 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x561885d3cd48 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x561885d2c228 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x561885d3d6b8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x561885d3d710 <col:12>
|-CXXConstructorDecl 0x561885d3d378 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x561885d3d378
| `-ParmVarDecl 0x561885d3d488 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x561885d3d528 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x561885d3d528
| `-ParmVarDecl 0x561885d3d638 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x561885d3f7b0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885d1a190 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561885d1a2a8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x561885d1a338 <col:16, col:22> col:16 public
|-EnumDecl 0x561885d1a360 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x561885d1a460 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x561885d1a540 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d1a440 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x561885d1a420 <col:21> 'int' 28
| `-EnumConstantDecl 0x561885d1a4f0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x561885d1a558 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d1a4d0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x561885d1a4b0 <col:22> 'int' 64
|-CXXMethodDecl 0x561885d1a898 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x561885d1a580 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561885d1a600 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x561885d1a678 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561885d1a6f0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561885d1a958 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x561885d1ab58 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x561885d1a9d0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x561885d1aa48 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561885d1ac08 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x561885d1ad68 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x561885d1ac78 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561885d1ae10 <col:72> warn_unused_result ""
|-TypedefDecl 0x561885d1b170 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x561885d1b100 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x561885d1b0a0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x561885d1b060 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5618857ef4e0 'void'
|       |-PointerType 0x561885a9a310 'unsigned char *'
|       | `-BuiltinType 0x5618857ef5e0 'unsigned char'
|       |-TypedefType 0x5618858968e0 'size_t' sugar
|       | |-Typedef 0x56188585fbe0 'size_t'
|       | `-BuiltinType 0x5618857ef640 'unsigned long'
|       `-PointerType 0x5618857efce0 'void *'
|         `-BuiltinType 0x5618857ef4e0 'void'
|-CXXMethodDecl 0x561885d1b5e8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x561885d1b1e0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x561885d1b258 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561885d1b2f0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x561885d1b370 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x561885d35ce0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x561885d35cc8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x561885d35c90 <col:58> 'int' 0
| |-ParmVarDecl 0x561885d1b3f0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x561885d35d08 <col:76> 'int' 0
| |-ParmVarDecl 0x561885d1b470 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x561885d35d28 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x561885d1b6b8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x561885d1b738 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x561885d1b7f8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x561885d1b898 <col:20>
| `-OptimizeNoneAttr 0x561885d1b8f0 <col:30>
|-CXXMethodDecl 0x561885d1b968 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x561885d1ba08 <col:20>
| `-OptimizeNoneAttr 0x561885d1ba60 <col:30>
|-CXXMethodDecl 0x561885d1bad8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x561885d1bb78 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x561885d1bc28 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x561885d1bcc8 <col:20>
| |-OptimizeNoneAttr 0x561885d1bd20 <col:30>
| `-WarnUnusedResultAttr 0x561885d1bd48 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x561885d1bda0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x561885d1be40 <col:20>
| `-OptimizeNoneAttr 0x561885d1be98 <col:30>
|-CXXMethodDecl 0x561885d1bee8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x561885d1bf88 <col:20>
| `-OptimizeNoneAttr 0x561885d1bfe0 <col:30>
|-CXXMethodDecl 0x561885d1c028 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x561885d1c0c8 <col:20>
| `-OptimizeNoneAttr 0x561885d1c120 <col:30>
|-CXXMethodDecl 0x561885d1c168 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x561885d1c228 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x561885d1c2f0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561885d1c3b8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561885d1c478 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561885d1c598 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x561885d35df0 <col:54, line:99:5>
|   `-ReturnStmt 0x561885d35de0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x561885d35dc8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x561885d35d98 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x561885d2c878
|         `-CXXThisExpr 0x561885d35d88 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x561885d1c738 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x561885d1c648 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x561885d35ea0 <col:67, line:103:5>
|   `-BinaryOperator 0x561885d35e80 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x561885d35e18 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x561885d2c878
|     | `-CXXThisExpr 0x561885d35e08 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x561885d35e68 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x561885d35e48 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x561885d1c648 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x561885d1c830 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x561885d35f20 <col:33, line:107:5>
|   `-ReturnStmt 0x561885d35f10 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x561885d35ef8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561885d35ec8 <col:16> 'void *' lvalue ->_destructor_argument 0x561885d2c8e0
|         `-CXXThisExpr 0x561885d35eb8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x561885d1c8f0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x561885d36550 <col:25, line:113:5>
|   |-ParenExpr 0x561885d36298 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x561885d36268 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x561885d35fd8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x561885d35fb0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x561885d35f78 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x561885d35f48 <col:24> '<bound member function type>' ->shared 0x561885d1b968
|   |   |       `-ImplicitCastExpr 0x561885d35f98 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x561885d35f38 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x561885d36038 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d36018 <col:42> 'int' 0
|   |   `-CallExpr 0x561885d361c8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x561885d361b0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d36190 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d36208 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d360a8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x561885d36220 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d360d0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d36238 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d36108 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x561885d36250 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d36178 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d36160 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d36128 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x561885d36498 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x561885d362c8 <col:2> 'unsigned char *' lvalue ->_head 0x561885d2c680
|   | | `-CXXThisExpr 0x561885d362b8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x561885d36480 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x561885d36460 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x561885d36308 <col:10> 'unsigned char *' lvalue ->_data 0x561885d2c6e8
|   |     | `-CXXThisExpr 0x561885d362f8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x561885d36448 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x561885d36428 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x561885d36348 <col:18> 'unsigned char *' lvalue ->_tail 0x561885d2c750
|   |         | `-CXXThisExpr 0x561885d36338 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x561885d36410 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x561885d363f0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x561885d36388 <col:26> 'unsigned char *' lvalue ->_end 0x561885d2c7b8
|   |             | `-CXXThisExpr 0x561885d36378 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x561885d363d8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x561885d363b8 <col:33> 'int' 0
|   `-BinaryOperator 0x561885d36530 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x561885d364c8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x561885d2c878
|     | `-CXXThisExpr 0x561885d364b8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x561885d36518 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x561885d364f8 <col:16> 'int' 0
|-CXXMethodDecl 0x561885d1ca30 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x561885d1c9a0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561885d1cad8 <col:20>
| |-OptimizeNoneAttr 0x561885d1cb30 <col:30>
| `-WarnUnusedResultAttr 0x561885d1cb58 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x561885d1cc28 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x561885d1cb98 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561885d1ccd0 <col:20>
| |-OptimizeNoneAttr 0x561885d1cd28 <col:30>
| `-WarnUnusedResultAttr 0x561885d1cd50 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x561885d1ce88 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x561885d1cd90 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561885d1cf30 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x561885d1d030 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x561885d1cfa0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561885d1d0d8 <col:20>
| `-OptimizeNoneAttr 0x561885d1d130 <col:30>
|-CXXMethodDecl 0x561885d1d1f8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x561885d1d168 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561885d1d2a0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x561885d1d3a0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x561885d1d310 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561885d1d448 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x561885d1d548 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x561885d1d4b8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561885d1d5f0 <col:20>
| `-OptimizeNoneAttr 0x561885d1d648 <col:30>
|-CXXMethodDecl 0x561885d1d7d8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x561885d1d688 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x561885d1d700 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x561885d35d48 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x561885d1d888 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x561885d1da88 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561885d1d900 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x561885d1d978 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885d1dc98 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561885d1db48 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561885d1dbc0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885d1dea8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x561885d1dd58 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x561885d1ddd8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x561885d35d58 <col:39> 'int' 0
|-CXXMethodDecl 0x561885d1df78 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x561885d1e040 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561885d1e108 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x561885d1e1c8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561885d1e290 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x561885d1e3d8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x561885d1e348 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x561885d1e5a8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561885d1e498 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x561885d1e510 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885d1e678 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x561885d1e738 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x561885d1e7d8 <col:20>
| `-OptimizeNoneAttr 0x561885d1e830 <col:30>
|-CXXMethodDecl 0x561885d1e880 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x561885d1e920 <col:20>
| `-OptimizeNoneAttr 0x561885d1e978 <col:30>
|-CXXMethodDecl 0x561885d1e9c8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x561885d1ea88 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561885d1eb50 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x561885d1ebf0 <col:20>
| `-OptimizeNoneAttr 0x561885d1ec48 <col:30>
|-CXXMethodDecl 0x561885d1ed98 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561885d1ec88 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x561885d1ed00 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885d1eee8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x561885d1ee58 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885d1efc0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x561885d1f080 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x561885d1f120 <col:20>
| `-OptimizeNoneAttr 0x561885d1f178 <col:30>
|-CXXMethodDecl 0x561885d1f1c8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x561885d1f268 <col:20>
| `-OptimizeNoneAttr 0x561885d1f2c0 <col:30>
|-CXXMethodDecl 0x561885d1f310 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x561885d1f3d8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x561885d1f478 <col:20>
| `-OptimizeNoneAttr 0x561885d1f4d0 <col:30>
|-CXXMethodDecl 0x561885d1f518 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x561885d1f638 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x561885d1f7a8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x561885d1f6e8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x561885d1f898 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x561885d1f938 <col:20>
| `-OptimizeNoneAttr 0x561885d1f990 <col:30>
|-CXXMethodDecl 0x561885d1f9e0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x561885d1faa0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561885d1fcd8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x561885d1fb50 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x561885d1fbc8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561885d1fd88 <col:20>
| `-OptimizeNoneAttr 0x561885d1fde0 <col:30>
|-CXXMethodDecl 0x561885d1fe88 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x561885d1ff28 <col:20>
| `-OptimizeNoneAttr 0x561885d1ff80 <col:30>
|-CXXMethodDecl 0x561885d1ffd0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x561885d20070 <col:20>
| `-OptimizeNoneAttr 0x561885d200c8 <col:30>
|-CXXMethodDecl 0x561885d20110 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x561885d201b0 <col:20>
| `-OptimizeNoneAttr 0x561885d20208 <col:30>
|-CXXMethodDecl 0x561885d20308 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x561885d20240 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x561885d203b0 <col:20>
| `-OptimizeNoneAttr 0x561885d20408 <col:30>
|-CXXMethodDecl 0x561885d205c8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x561885d20440 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x561885d204b8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561885d20678 <col:20>
| `-OptimizeNoneAttr 0x561885d206d0 <col:30>
|-CXXMethodDecl 0x561885d20778 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x561885d20898 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x561885d209b8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x561885d20a58 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x561885d20a80 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x561885d20ba8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x561885d20c48 <col:20>
| `-OptimizeNoneAttr 0x561885d20ca0 <col:30>
|-CXXMethodDecl 0x561885d20d48 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x561885d20de8 <col:20>
| `-OptimizeNoneAttr 0x561885d20e40 <col:30>
|-AccessSpecDecl 0x561885d20e68 <line:344:3, col:9> col:3 public
|-EnumDecl 0x561885d20e90 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x561885d20f90 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x561885d20fe0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d20f70 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x561885d20f50 <col:14> 'int' 48
|-CXXMethodDecl 0x561885d21048 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x561885d210e8 <col:20>
| `-OptimizeNoneAttr 0x561885d21140 <col:30>
|-CXXMethodDecl 0x561885d211b8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x561885d21258 <col:20>
| `-OptimizeNoneAttr 0x561885d212b0 <col:30>
|-CXXMethodDecl 0x561885d21378 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x561885d212e8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x561885d21518 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x561885d216b8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x561885d215c8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x561885d21760 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x561885d21860 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561885d21c10 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d21840 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x561885d21820 <col:9> 'int' 0
| |-EnumConstantDecl 0x561885d218f0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561885d21c28 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d218d0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x561885d218b0 <col:14> 'int' 1
| |-EnumConstantDecl 0x561885d21980 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561885d21c40 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d21960 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x561885d21940 <col:14> 'int' 2
| |-EnumConstantDecl 0x561885d21a10 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561885d21c58 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d219f0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x561885d219d0 <col:14> 'int' 3
| |-EnumConstantDecl 0x561885d21aa0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561885d21c70 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d21a80 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x561885d21a60 <col:13> 'int' 4
| |-EnumConstantDecl 0x561885d21b30 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561885d21c88 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d21b10 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x561885d21af0 <col:13> 'int' 5
| `-EnumConstantDecl 0x561885d21bc0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x561885d21ca0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d21ba0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x561885d21b80 <col:14> 'int' 6
|-CXXMethodDecl 0x561885d21d08 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x561885d21da8 <col:20>
| `-OptimizeNoneAttr 0x561885d21e00 <col:30>
|-CXXMethodDecl 0x561885d21ef8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x561885d21e38 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x561885d21fa0 <col:20>
| `-OptimizeNoneAttr 0x561885d21ff8 <col:30>
|-CXXMethodDecl 0x561885d22068 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x561885d22190 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x561885d22308 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x561885d22240 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x561885d223d0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x561885d22498 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x561885d225d8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x561885d22548 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x561885d22680 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x561885d22780 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561885d22980 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d22760 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x561885d22740 <col:23> 'int' 0
| |-EnumConstantDecl 0x561885d22810 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561885d22998 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d227f0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x561885d227d0 <col:45> 'int' 4
| |-EnumConstantDecl 0x561885d228a0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561885d229b0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d22880 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x561885d22860 <col:24> 'int' 0
| `-EnumConstantDecl 0x561885d22930 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x561885d229c8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d22910 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x561885d228f0 <col:47> 'int' 16
|-CXXMethodDecl 0x561885d22a28 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x561885d22b98 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x561885d22ad8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x561885d22c40 <col:20>
| `-OptimizeNoneAttr 0x561885d22c98 <col:30>
|-CXXMethodDecl 0x561885d22ce8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x561885d36670 <col:18, col:36>
|   `-ReturnStmt 0x561885d36660 <col:20, col:33>
|     `-ImplicitCastExpr 0x561885d36648 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x561885d36628 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x561885d365f8 <col:27> '<bound member function type>' ->xanno 0x561885d20d48
|           `-CXXThisExpr 0x561885d365e8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x561885d22de0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x561885d36780 <col:30, col:48>
|   `-ReturnStmt 0x561885d36770 <col:32, col:45>
|     `-ImplicitCastExpr 0x561885d36758 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x561885d36738 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x561885d36708 <col:39> '<bound member function type>' ->xanno 0x561885d20ba8
|           `-CXXThisExpr 0x561885d366f8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x561885d22ec8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x561885d36918 <col:24, col:50>
|   `-ReturnStmt 0x561885d36908 <col:26, col:47>
|     `-UnaryOperator 0x561885d368f0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561885d368d0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x561885d368b8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561885d36868 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x561885d2bb88
|         |   `-CXXMemberCallExpr 0x561885d36848 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x561885d36818 <col:34> '<bound member function type>' ->xanno 0x561885d20d48
|         |       `-CXXThisExpr 0x561885d36808 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x561885d36898 <col:46> 'int' 0
|-CXXMethodDecl 0x561885d22fd0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x561885d36ae8 <col:36, col:62>
|   `-ReturnStmt 0x561885d36ad8 <col:38, col:59>
|     `-UnaryOperator 0x561885d36ac0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561885d36aa0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x561885d36a88 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561885d36a00 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x561885d2bb88
|         |   `-CXXMemberCallExpr 0x561885d369e0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561885d369b0 <col:46> '<bound member function type>' ->xanno 0x561885d20ba8
|         |       `-CXXThisExpr 0x561885d369a0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x561885d36a30 <col:58> 'int' 0
|-CXXMethodDecl 0x561885d230e8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x561885d36c80 <col:26, col:53>
|   `-ReturnStmt 0x561885d36c70 <col:28, col:50>
|     `-UnaryOperator 0x561885d36c58 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561885d36c38 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x561885d36c20 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561885d36bd0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x561885d2be88
|         |   `-CXXMemberCallExpr 0x561885d36bb0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x561885d36b80 <col:36> '<bound member function type>' ->xanno 0x561885d20d48
|         |       `-CXXThisExpr 0x561885d36b70 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x561885d36c00 <col:49> 'int' 0
|-CXXMethodDecl 0x561885d23208 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x561885d36e58 <col:38, col:65>
|   `-ReturnStmt 0x561885d36e48 <col:40, col:62>
|     `-UnaryOperator 0x561885d36e30 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561885d36e10 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x561885d36df8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561885d36d68 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x561885d2be88
|         |   `-CXXMemberCallExpr 0x561885d36d48 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561885d36d18 <col:48> '<bound member function type>' ->xanno 0x561885d20ba8
|         |       `-CXXThisExpr 0x561885d36d08 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x561885d36d98 <col:61> 'int' 0
|-CXXMethodDecl 0x561885d233b8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x561885d232c0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x561885d37528 <col:34, line:463:5>
|   |-ParenExpr 0x561885d37370 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x561885d37340 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x561885d36fa8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d36f78 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d36ec8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d36eb0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d36e70 <col:23> 'int' lvalue ParmVar 0x561885d232c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d36e90 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d36f58 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561885d36f28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d36ee8 <col:33> 'int' lvalue ParmVar 0x561885d232c0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x561885d36f40 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x561885d36f08 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x561885d37008 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d36fe8 <col:56> 'int' 0
|   |   `-CallExpr 0x561885d372a0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x561885d37288 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d37268 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d372e0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d370f8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x561885d372f8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d37128 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d37310 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d37160 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x561885d37328 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d37250 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d37238 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d371f8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x561885d37518 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x561885d37500 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x561885d374e0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x561885d374b0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561885d37460 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x561885d2bb88
|         |   `-CXXMemberCallExpr 0x561885d37440 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561885d37410 <col:9> '<bound member function type>' ->xanno 0x561885d20ba8
|         |       `-CXXThisExpr 0x561885d37400 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x561885d374c8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x561885d37490 <col:21> 'int' lvalue ParmVar 0x561885d232c0 'i' 'int'
|-CXXMethodDecl 0x561885d23608 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x561885d23478 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x561885d234f0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x561885d37bb8 <col:40, line:472:5>
|   |-ParenExpr 0x561885d379d0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x561885d379a0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x561885d37680 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d37650 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d375a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d37588 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d37548 <col:23> 'int' lvalue ParmVar 0x561885d23478 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d37568 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d37630 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561885d37600 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d375c0 <col:33> 'int' lvalue ParmVar 0x561885d23478 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x561885d37618 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x561885d375e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x561885d376e0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d376c0 <col:56> 'int' 0
|   |   `-CallExpr 0x561885d37900 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x561885d378e8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d378c8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d37940 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d37750 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x561885d37958 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d37780 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d37970 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d377b8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x561885d37988 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d378b0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d37898 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d37858 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x561885d37b98 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x561885d37b40 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x561885d37b10 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x561885d37ac0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x561885d2bb88
|     | |   `-CXXMemberCallExpr 0x561885d37aa0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x561885d37a70 <col:2> '<bound member function type>' ->xanno 0x561885d20d48
|     | |       `-CXXThisExpr 0x561885d37a60 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x561885d37b28 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x561885d37af0 <col:14> 'int' lvalue ParmVar 0x561885d23478 'i' 'int'
|     `-ImplicitCastExpr 0x561885d37b80 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x561885d37b60 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x561885d234f0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x561885d237c8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x561885d236d0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x561885d38338 <col:36, line:485:5>
|   |-ParenExpr 0x561885d380a0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x561885d38070 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561885d37d50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d37d20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d37c30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d37c18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d37bd8 <col:23> 'int' lvalue ParmVar 0x561885d236d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d37bf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d37d00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561885d37ce8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d37c50 <col:33> 'int' lvalue ParmVar 0x561885d236d0 'i' 'int'
|   |   |     `-BinaryOperator 0x561885d37cc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561885d37cb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561885d37c70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561885d37c90 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561885d37db0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d37d90 <col:60> 'int' 0
|   |   `-CallExpr 0x561885d37fd0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561885d37fb8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d37f98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d38010 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d37e20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561885d38028 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d37e58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d38040 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d37e90 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x561885d38058 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d37f80 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d37f68 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d37f28 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x561885d38328 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x561885d38310 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x561885d382f8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561885d382c8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x561885d38268 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x561885d38238 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561885d381b0 <col:61, col:70> 'char const[48]' lvalue ->c 0x561885d2ba60
|             |   `-CXXMemberCallExpr 0x561885d38190 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561885d38160 <col:61> '<bound member function type>' ->xanno 0x561885d20ba8
|             |       `-CXXThisExpr 0x561885d38150 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561885d38250 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561885d381e0 <col:74> 'int' lvalue ParmVar 0x561885d236d0 'i' 'int'
|-CXXMethodDecl 0x561885d23a18 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x561885d23888 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561885d23900 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x561885d38a88 <col:42, line:500:5>
|   |-ParenExpr 0x561885d38820 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x561885d387f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561885d384d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d384a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d383b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d38398 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d38358 <col:23> 'int' lvalue ParmVar 0x561885d23888 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d38378 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d38480 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561885d38468 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d383d0 <col:33> 'int' lvalue ParmVar 0x561885d23888 'i' 'int'
|   |   |     `-BinaryOperator 0x561885d38448 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561885d38430 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561885d383f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561885d38410 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561885d38530 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d38510 <col:60> 'int' 0
|   |   `-CallExpr 0x561885d38750 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561885d38738 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d38718 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d38790 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d385a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561885d387a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d385d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d387c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d38610 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x561885d387d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d38700 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d386e8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d386a8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x561885d38a68 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x561885d38a18 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561885d389e8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x561885d38990 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561885d38960 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561885d38910 <col:48, col:57> 'char [48]' lvalue ->c 0x561885d2ba60
|     |     |   `-CXXMemberCallExpr 0x561885d388f0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561885d388c0 <col:48> '<bound member function type>' ->xanno 0x561885d20d48
|     |     |       `-CXXThisExpr 0x561885d388b0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561885d38978 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561885d38940 <col:61> 'int' lvalue ParmVar 0x561885d23888 'i' 'int'
|     `-ImplicitCastExpr 0x561885d38a50 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x561885d38a30 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x561885d23900 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x561885d23bd8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x561885d23ae0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x561885d391e8 <col:35, line:513:5>
|   |-ParenExpr 0x561885d38ef8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x561885d38ec8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561885d38c20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d38bf0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d38b00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d38ae8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d38aa8 <col:23> 'int' lvalue ParmVar 0x561885d23ae0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d38ac8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d38bd0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561885d38bb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d38b20 <col:33> 'int' lvalue ParmVar 0x561885d23ae0 'i' 'int'
|   |   |     `-BinaryOperator 0x561885d38b98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561885d38b80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561885d38b40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561885d38b60 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561885d38c80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d38c60 <col:60> 'int' 0
|   |   `-CallExpr 0x561885d38e28 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561885d38e10 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d38df0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d38e68 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d38cf0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561885d38e80 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d38d28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d38e98 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d38d60 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x561885d38eb0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d38dd8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d38dc0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d38d80 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x561885d391d8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x561885d391c0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x561885d391a8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561885d39178 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x561885d390f0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x561885d390c0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561885d39070 <col:60, col:69> 'char const[48]' lvalue ->c 0x561885d2ba60
|             |   `-CXXMemberCallExpr 0x561885d39050 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561885d39020 <col:60> '<bound member function type>' ->xanno 0x561885d20ba8
|             |       `-CXXThisExpr 0x561885d39010 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561885d390d8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561885d390a0 <col:73> 'int' lvalue ParmVar 0x561885d23ae0 'i' 'int'
|-CXXMethodDecl 0x561885d23e28 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x561885d23c98 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561885d23d10 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x561885d39908 <col:41, line:528:5>
|   |-ParenExpr 0x561885d39690 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x561885d39660 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561885d39380 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d39350 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d39260 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d39248 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d39208 <col:23> 'int' lvalue ParmVar 0x561885d23c98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d39228 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d39330 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561885d39318 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d39280 <col:33> 'int' lvalue ParmVar 0x561885d23c98 'i' 'int'
|   |   |     `-BinaryOperator 0x561885d392f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561885d392e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561885d392a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561885d392c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561885d393e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d393c0 <col:60> 'int' 0
|   |   `-CallExpr 0x561885d395c0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561885d395a8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d39588 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d39600 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d39450 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561885d39618 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d39488 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d39630 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d394c0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x561885d39648 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d39570 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d39558 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d39518 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x561885d398e8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x561885d39898 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561885d39868 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x561885d39810 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561885d397d0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561885d39780 <col:47, col:56> 'char [48]' lvalue ->c 0x561885d2ba60
|     |     |   `-CXXMemberCallExpr 0x561885d39760 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561885d39730 <col:47> '<bound member function type>' ->xanno 0x561885d20d48
|     |     |       `-CXXThisExpr 0x561885d39720 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561885d397e8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561885d397b0 <col:60> 'int' lvalue ParmVar 0x561885d23c98 'i' 'int'
|     `-ImplicitCastExpr 0x561885d398d0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x561885d398b0 <col:65> 'int16_t':'short' lvalue ParmVar 0x561885d23d10 'x' 'int16_t':'short'
|-CXXMethodDecl 0x561885d23fe8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x561885d23ef0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x561885d39fd8 <col:36, line:541:5>
|   |-ParenExpr 0x561885d39d78 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x561885d39d48 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561885d39aa0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d39a70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d39980 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d39968 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d39928 <col:23> 'int' lvalue ParmVar 0x561885d23ef0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d39948 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d39a50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561885d39a38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d399a0 <col:33> 'int' lvalue ParmVar 0x561885d23ef0 'i' 'int'
|   |   |     `-BinaryOperator 0x561885d39a18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561885d39a00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561885d399c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561885d399e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x561885d39b00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d39ae0 <col:60> 'int' 0
|   |   `-CallExpr 0x561885d39ca8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561885d39c90 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d39c70 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d39ce8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d39b70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x561885d39d00 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d39ba8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d39d18 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d39be0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x561885d39d30 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d39c58 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d39c40 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d39c00 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x561885d39fc8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x561885d39fb0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x561885d39f98 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561885d39f68 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x561885d39f10 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x561885d39ee0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561885d39e90 <col:61, col:70> 'char const[48]' lvalue ->c 0x561885d2ba60
|             |   `-CXXMemberCallExpr 0x561885d39e70 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561885d39e40 <col:61> '<bound member function type>' ->xanno 0x561885d20ba8
|             |       `-CXXThisExpr 0x561885d39e30 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561885d39ef8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561885d39ec0 <col:74> 'int' lvalue ParmVar 0x561885d23ef0 'i' 'int'
|-CXXMethodDecl 0x561885d241b8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x561885d240a8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x561885d24120 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561885d24268 <col:20>
| `-OptimizeNoneAttr 0x561885d242c0 <col:30>
|-CXXMethodDecl 0x561885d243f8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x561885d24300 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x561885d3a6a8 <col:35, line:562:5>
|   |-ParenExpr 0x561885d3a448 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x561885d3a418 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561885d3a170 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d3a140 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d3a050 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d3a038 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d39ff8 <col:23> 'int' lvalue ParmVar 0x561885d24300 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d3a018 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d3a120 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561885d3a108 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d3a070 <col:33> 'int' lvalue ParmVar 0x561885d24300 'i' 'int'
|   |   |     `-BinaryOperator 0x561885d3a0e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561885d3a0d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561885d3a090 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561885d3a0b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x561885d3a1d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d3a1b0 <col:60> 'int' 0
|   |   `-CallExpr 0x561885d3a378 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561885d3a360 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d3a340 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d3a3b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d3a240 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x561885d3a3d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d3a278 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d3a3e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d3a2b0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x561885d3a400 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d3a328 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d3a310 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d3a2d0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x561885d3a698 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x561885d3a680 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x561885d3a668 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561885d3a638 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x561885d3a5e0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x561885d3a5b0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561885d3a560 <col:60, col:69> 'char const[48]' lvalue ->c 0x561885d2ba60
|             |   `-CXXMemberCallExpr 0x561885d3a540 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561885d3a510 <col:60> '<bound member function type>' ->xanno 0x561885d20ba8
|             |       `-CXXThisExpr 0x561885d3a500 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561885d3a5c8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561885d3a590 <col:73> 'int' lvalue ParmVar 0x561885d24300 'i' 'int'
|-CXXMethodDecl 0x561885d24608 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x561885d244b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561885d24530 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x561885d3ad88 <col:41, line:577:5>
|   |-ParenExpr 0x561885d3ab18 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x561885d3aae8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561885d3a840 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d3a810 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d3a720 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d3a708 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d3a6c8 <col:23> 'int' lvalue ParmVar 0x561885d244b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d3a6e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d3a7f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561885d3a7d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d3a740 <col:33> 'int' lvalue ParmVar 0x561885d244b8 'i' 'int'
|   |   |     `-BinaryOperator 0x561885d3a7b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561885d3a7a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561885d3a760 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561885d3a780 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x561885d3a8a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d3a880 <col:60> 'int' 0
|   |   `-CallExpr 0x561885d3aa48 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561885d3aa30 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d3aa10 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d3aa88 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d3a910 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x561885d3aaa0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d3a948 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d3aab8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d3a980 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x561885d3aad0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d3a9f8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d3a9e0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d3a9a0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x561885d3ad68 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x561885d3ad18 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561885d3ace8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x561885d3ac88 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561885d3ac58 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561885d3ac08 <col:47, col:56> 'char [48]' lvalue ->c 0x561885d2ba60
|     |     |   `-CXXMemberCallExpr 0x561885d3abe8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561885d3abb8 <col:47> '<bound member function type>' ->xanno 0x561885d20d48
|     |     |       `-CXXThisExpr 0x561885d3aba8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561885d3ac70 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561885d3ac38 <col:60> 'int' lvalue ParmVar 0x561885d244b8 'i' 'int'
|     `-ImplicitCastExpr 0x561885d3ad50 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x561885d3ad30 <col:65> 'int32_t':'int' lvalue ParmVar 0x561885d24530 'x' 'int32_t':'int'
|-CXXMethodDecl 0x561885d247c8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x561885d246d0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x561885d3b4b8 <col:36, line:591:5>
|   |-ParenExpr 0x561885d3b1f8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x561885d3b1c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561885d3af20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d3aef0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d3ae00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d3ade8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d3ada8 <col:23> 'int' lvalue ParmVar 0x561885d246d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d3adc8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d3aed0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561885d3aeb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d3ae20 <col:33> 'int' lvalue ParmVar 0x561885d246d0 'i' 'int'
|   |   |     `-BinaryOperator 0x561885d3ae98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561885d3ae80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561885d3ae40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561885d3ae60 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x561885d3af80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d3af60 <col:60> 'int' 0
|   |   `-CallExpr 0x561885d3b128 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561885d3b110 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d3b0f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d3b168 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d3aff0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x561885d3b180 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d3b028 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d3b198 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d3b060 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x561885d3b1b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d3b0d8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d3b0c0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d3b080 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x561885d3b4a8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x561885d3b490 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x561885d3b478 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561885d3b448 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x561885d3b3c0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x561885d3b390 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561885d3b340 <col:61, col:70> 'char const[48]' lvalue ->c 0x561885d2ba60
|             |   `-CXXMemberCallExpr 0x561885d3b320 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561885d3b2f0 <col:61> '<bound member function type>' ->xanno 0x561885d20ba8
|             |       `-CXXThisExpr 0x561885d3b2e0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561885d3b3a8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561885d3b370 <col:74> 'int' lvalue ParmVar 0x561885d246d0 'i' 'int'
|-CXXMethodDecl 0x561885d24a18 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x561885d24888 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561885d24900 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x561885d3bb98 <col:42, line:606:5>
|   |-ParenExpr 0x561885d3b928 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x561885d3b8f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561885d3b650 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d3b620 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d3b530 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d3b518 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d3b4d8 <col:23> 'int' lvalue ParmVar 0x561885d24888 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d3b4f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d3b600 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561885d3b5e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d3b550 <col:33> 'int' lvalue ParmVar 0x561885d24888 'i' 'int'
|   |   |     `-BinaryOperator 0x561885d3b5c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561885d3b5b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561885d3b570 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561885d3b590 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x561885d3b6b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d3b690 <col:60> 'int' 0
|   |   `-CallExpr 0x561885d3b858 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561885d3b840 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d3b820 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d3b898 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d3b720 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x561885d3b8b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d3b758 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d3b8c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d3b790 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x561885d3b8e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d3b808 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d3b7f0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d3b7b0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x561885d3bb78 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x561885d3bb28 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561885d3baf8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x561885d3ba98 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561885d3ba68 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561885d3ba18 <col:48, col:57> 'char [48]' lvalue ->c 0x561885d2ba60
|     |     |   `-CXXMemberCallExpr 0x561885d3b9f8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561885d3b9c8 <col:48> '<bound member function type>' ->xanno 0x561885d20d48
|     |     |       `-CXXThisExpr 0x561885d3b9b8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561885d3ba80 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561885d3ba48 <col:61> 'int' lvalue ParmVar 0x561885d24888 'i' 'int'
|     `-ImplicitCastExpr 0x561885d3bb60 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x561885d3bb40 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x561885d24900 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x561885d24bb0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x561885d24ae0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x561885d3c408 <col:33, line:620:5>
|   |-ParenExpr 0x561885d3c180 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x561885d3c150 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x561885d3bda0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d3bd70 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d3bc10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d3bbf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d3bbb8 <col:23> 'int' lvalue ParmVar 0x561885d24ae0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d3bbd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d3bd50 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x561885d3bd38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d3bc30 <col:33> 'int' lvalue ParmVar 0x561885d24ae0 'i' 'int'
|   |   |     `-BinaryOperator 0x561885d3bd18 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561885d3bd00 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561885d3bc50 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x561885d3bcd8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x561885d3bcc0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x561885d3bc88 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x561885d3be00 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d3bde0 <col:79> 'int' 0
|   |   `-CallExpr 0x561885d3c0b0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x561885d3c098 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d3c078 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d3c0f0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d3bee8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x561885d3c108 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d3bf30 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d3c120 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d3bf68 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x561885d3c138 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d3c060 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d3c048 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d3c008 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x561885d3c3f8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x561885d3c3e0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x561885d3c3c8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561885d3c398 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x561885d3c310 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x561885d3c2e0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561885d3c290 <col:67, col:76> 'char const[48]' lvalue ->c 0x561885d2ba60
|             |   `-CXXMemberCallExpr 0x561885d3c270 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561885d3c240 <col:67> '<bound member function type>' ->xanno 0x561885d20ba8
|             |       `-CXXThisExpr 0x561885d3c230 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561885d3c2f8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561885d3c2c0 <col:80> 'int' lvalue ParmVar 0x561885d24ae0 'i' 'int'
|-CXXMethodDecl 0x561885d24dc8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x561885d24c70 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561885d24cf0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x561885d3cc30 <col:45, line:635:5>
|   |-ParenExpr 0x561885d3c978 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x561885d3c948 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x561885d3c610 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561885d3c5e0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561885d3c480 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561885d3c468 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561885d3c428 <col:23> 'int' lvalue ParmVar 0x561885d24c70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561885d3c448 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561885d3c5c0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x561885d3c5a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561885d3c4a0 <col:33> 'int' lvalue ParmVar 0x561885d24c70 'i' 'int'
|   |   |     `-BinaryOperator 0x561885d3c588 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561885d3c570 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561885d3c4c0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561885d20f90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x561885d3c548 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x561885d3c530 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x561885d3c4f8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x561885d3c670 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561885d3c650 <col:79> 'int' 0
|   |   `-CallExpr 0x561885d3c8a8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x561885d3c890 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d3c870 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561885d3c8e8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d3c6e0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x561885d3c900 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561885d3c728 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561885d3c918 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561885d3c760 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x561885d3c930 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561885d3c858 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561885d3c840 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561885d3c7f8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x561885d3cc10 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x561885d3cb78 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561885d3cb48 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x561885d3cae8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561885d3cab8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561885d3ca68 <col:54, col:63> 'char [48]' lvalue ->c 0x561885d2ba60
|     |     |   `-CXXMemberCallExpr 0x561885d3ca48 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561885d3ca18 <col:54> '<bound member function type>' ->xanno 0x561885d20d48
|     |     |       `-CXXThisExpr 0x561885d3ca08 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561885d3cad0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561885d3ca98 <col:67> 'int' lvalue ParmVar 0x561885d24c70 'i' 'int'
|     `-CXXConstCastExpr 0x561885d3cbe0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x561885d3cbc8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x561885d3cb90 <col:91> 'const void *' lvalue ParmVar 0x561885d24cf0 'x' 'const void *'
|-CXXMethodDecl 0x561885d24e98 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x561885d3ccb8 <col:34, line:640:5>
|   `-ReturnStmt 0x561885d3cca8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x561885d3cc90 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x561885d3cc60 <col:16> 'Packet *' lvalue ->_data_packet 0x561885d2c618
|         `-CXXThisExpr 0x561885d3cc50 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x561885d24fd8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x561885d24f48 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561885d35d78 <col:46> 'bool' true
|-CXXMethodDecl 0x561885d25158 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x561885d25090 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x561885d25200 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x561885d259b0 <line:660:22> "" ""
| |-EnumConstantDecl 0x561885d25300 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561885d25a20 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d252e0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x561885d252c0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x561885d1a460 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x561885d25390 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561885d25a38 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d25370 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x561885d25350 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x561885d1a4f0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x561885d25420 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561885d25a50 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d25400 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x561885d253e0 <col:21> 'int' 0
| |-EnumConstantDecl 0x561885d254b0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561885d25a68 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d25490 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x561885d25470 <col:19> 'int' 16
| |-EnumConstantDecl 0x561885d25540 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561885d25a80 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d25520 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x561885d25500 <col:21> 'int' 16
| |-EnumConstantDecl 0x561885d255d0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561885d25a98 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d255b0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x561885d25590 <col:19> 'int' 32
| |-EnumConstantDecl 0x561885d25660 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561885d25ab0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d25640 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x561885d25620 <col:19> 'int' EnumConstant 0x561885d254b0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x561885d256f0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561885d25ac8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d256d0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x561885d256b0 <col:19> 'int' EnumConstant 0x561885d255d0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x561885d257c0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561885d25ae0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d257a0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x561885d25780 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x561885d25740 <col:23> 'int' EnumConstant 0x561885d256f0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x561885d25760 <col:40> 'int' 2
| |-EnumConstantDecl 0x561885d25890 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561885d25af8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885d25870 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x561885d25850 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x561885d25810 <col:23> 'int' EnumConstant 0x561885d256f0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x561885d25830 <col:40> 'int' 4
| `-EnumConstantDecl 0x561885d25960 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x561885d25b10 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885d25940 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x561885d25920 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x561885d258e0 <col:23> 'int' EnumConstant 0x561885d256f0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x561885d25900 <col:40> 'int' 8
|-CXXMethodDecl 0x561885d25b50 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x561885d25bf0 <col:68> "" ""
|-CXXMethodDecl 0x561885d25c88 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x561885d25d28 <col:45> "" ""
|-CXXMethodDecl 0x561885d25dc0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x561885d25e60 <col:57> "" ""
|-CXXMethodDecl 0x561885d25ef8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x561885d25f98 <col:45> "" ""
|-CXXMethodDecl 0x561885d26030 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x561885d260d0 <col:57> "" ""
|-CXXMethodDecl 0x561885d26160 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x561885d26200 <col:51> "" ""
|-CXXMethodDecl 0x561885d26290 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x561885d26330 <col:63> "" ""
|-CXXMethodDecl 0x561885d263c0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x561885d26460 <col:53> "" ""
|-CXXMethodDecl 0x561885d264f0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x561885d26590 <col:65> "" ""
|-CXXMethodDecl 0x561885d266a8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x561885d26618 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x561885d26750 <col:61> "" ""
|-CXXMethodDecl 0x561885d268e8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x561885d267d8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x561885d26850 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x561885d26998 <col:67> "" ""
|-CXXMethodDecl 0x561885d26ab0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x561885d26a20 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561885d26b58 <col:63> "" ""
|-CXXMethodDecl 0x561885d26cf0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x561885d26be0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561885d26c58 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x561885d26da0 <col:69> "" ""
|-CXXMethodDecl 0x561885d26eb8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x561885d26e28 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561885d26f60 <col:63> "" ""
|-CXXMethodDecl 0x561885d29638 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561885d29528 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561885d295a0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561885d296e8 <col:69> "" ""
|-CXXMethodDecl 0x561885d29800 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x561885d29770 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x561885d298a8 <col:62> "" ""
|-CXXMethodDecl 0x561885d29a40 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x561885d29930 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561885d299a8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x561885d29af0 <col:68> "" ""
|-CXXMethodDecl 0x561885d29c08 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x561885d29b78 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561885d29cb0 <col:63> "" ""
|-CXXMethodDecl 0x561885d29e48 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x561885d29d38 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561885d29db0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x561885d29ef8 <col:69> "" ""
|-CXXMethodDecl 0x561885d29f88 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x561885d2a028 <col:64> "" ""
|-CXXMethodDecl 0x561885d2a0b8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x561885d2a158 <col:52> "" ""
|-CXXMethodDecl 0x561885d2a1e8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x561885d2a288 <col:67> "" ""
|-CXXMethodDecl 0x561885d2a318 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x561885d2a3b8 <col:55> "" ""
|-CXXMethodDecl 0x561885d2a4d0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x561885d2a440 <col:32> col:35 'int'
| `-DeprecatedAttr 0x561885d2a578 <col:58> "" ""
|-CXXMethodDecl 0x561885d2a710 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x561885d2a600 <col:33> col:36 'int'
| |-ParmVarDecl 0x561885d2a678 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x561885d2a7c0 <col:62> "" ""
|-CXXMethodDecl 0x561885d2a8d8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x561885d2a848 <col:32> col:35 'int'
| `-DeprecatedAttr 0x561885d2a980 <col:58> "" ""
|-CXXMethodDecl 0x561885d2ab18 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x561885d2aa08 <col:33> col:36 'int'
| |-ParmVarDecl 0x561885d2aa80 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x561885d2abc8 <col:62> "" ""
|-CXXMethodDecl 0x561885d2ace0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x561885d2ac50 <col:34> col:37 'int'
| `-DeprecatedAttr 0x561885d2ad88 <col:60> "" ""
|-CXXMethodDecl 0x561885d2af20 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x561885d2ae10 <col:34> col:37 'int'
| |-ParmVarDecl 0x561885d2ae88 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x561885d2afd0 <col:64> "" ""
|-CXXMethodDecl 0x561885d2b0e8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x561885d2b058 <col:32> col:35 'int'
| `-DeprecatedAttr 0x561885d2b190 <col:58> "" ""
|-CXXMethodDecl 0x561885d2b328 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x561885d2b218 <col:33> col:36 'int'
| |-ParmVarDecl 0x561885d2b290 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x561885d2b3d8 <col:62> "" ""
|-CXXMethodDecl 0x561885d2b4f0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x561885d2b460 <col:33> col:36 'int'
| `-DeprecatedAttr 0x561885d2b598 <col:59> "" ""
|-CXXMethodDecl 0x561885d2b730 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561885d2b620 <col:33> col:36 'int'
| |-ParmVarDecl 0x561885d2b698 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561885d2b7e0 <col:63> "" ""
|-AccessSpecDecl 0x561885d2b850 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x561885d2b878 prev 0x561885d20a80 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561885d2b970 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x561885d2ba60 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x561885d2bb88 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x561885d2bd08 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x561885d2be88 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x561885d2c008 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x561885d3ce38 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561885d3d6a8 <col:11>
| |-CXXDestructorDecl 0x561885d3cf10 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x561885d3d048 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x561885d3d048
| | `-ParmVarDecl 0x561885d3d158 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x561885d3d1f8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561885d3d1f8
| | `-ParmVarDecl 0x561885d3d308 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x561885d400c8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561885d401d8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x561885d40458 <col:11>
| |   `-ReturnStmt 0x561885d40448 <col:11>
| |     `-UnaryOperator 0x561885d40430 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561885d40420 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x561885d40248 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561885d40248
|   `-ParmVarDecl 0x561885d40358 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x561885d2c070 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561885d2c188 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x561885d2c228 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x561885d2c290 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x561885d2c2f8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x561885d2c360 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x561885d2c3c0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x561885d2c480 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x561885d2c4e0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x561885d2c540 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x561885d3cd48 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x561885d2c228 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x561885d3d6b8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x561885d3d710 <col:12>
| |-CXXConstructorDecl 0x561885d3d378 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x561885d3d378
| | `-ParmVarDecl 0x561885d3d488 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x561885d3d528 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x561885d3d528
| | `-ParmVarDecl 0x561885d3d638 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x561885d3f7b0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x561885d2c5b8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x561885d2c618 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x561885d2c680 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x561885d2c6e8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x561885d2c750 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x561885d2c7b8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x561885d2c818 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x561885d2c878 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x561885d2c8e0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x561885d2c968 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x561885d2c5b8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x561885d3cce0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x561885d2c818 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x561885d3d720 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x561885d3d780 <col:21, line:755:5>
|-CXXConstructorDecl 0x561885d2cb08 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x561885d2ca48 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x561885d2cc00 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x561885d2cde8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x561885d2ccf0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x561885d2d0b8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x561885d2cea0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561885d2cf18 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561885d2cf90 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885d2d2d8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x561885d2d188 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x561885d2d200 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x561885d358b8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x561885d2d398 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x561885d2d410 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x561885d2d488 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x561885d35a10 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x561885d35980 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885d35b58 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x561885d35ac8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x561885d35c50 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885dc6fc0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561885dc70d8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x561885dc71a8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x561885dc7208 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x561885dc7270 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x561885dc72f8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x561885dc7560 <col:16, line:46:5>
|   |-BinaryOperator 0x561885dc74a8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x561885dc73c8 <col:9> 'TaskLink *' lvalue ->_prev 0x561885dc71a8
|   | | `-CXXThisExpr 0x561885dc73b8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x561885dc7490 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x561885dc7470 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x561885dc7408 <col:17> 'TaskLink *' lvalue ->_next 0x561885dc7208
|   |     | `-CXXThisExpr 0x561885dc73f8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x561885dc7458 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x561885dc7438 <col:25> 'int' 0
|   `-BinaryOperator 0x561885dc7540 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x561885dc74d8 <col:9> 'unsigned int' lvalue ->_pass 0x561885dc7270
|     | `-CXXThisExpr 0x561885dc74c8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x561885dc7528 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561885dc7508 <col:17> 'int' 0
|-CXXConstructorDecl 0x561885e37c80 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x561885e37c80
| `-ParmVarDecl 0x561885e37d98 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x561885e37e38 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x561885e37e38
| `-ParmVarDecl 0x561885e37f48 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x561885e38138 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x561885e38138
|-CXXMethodDecl 0x561885e38938 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x561885e38938
| `-ParmVarDecl 0x561885e38a48 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x561885e38ab8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x561885e38ab8
  `-ParmVarDecl 0x561885e38bc8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885dd03a8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x561885dd04d8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x561885dd0538 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x561885dd0598 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x561885e3ee48 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x561885e3ef20 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561885e3ef20
|-CXXConstructorDecl 0x561885e3f1d8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x561885e3f1d8
| `-ParmVarDecl 0x561885e3f2e8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x561885e3f388 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x561885e3f388
  `-ParmVarDecl 0x561885e3f498 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885dd01f8 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x561885dd0318 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x561885dd03a8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x561885dd04d8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x561885dd0538 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x561885dd0598 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x561885e3ee48 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x561885e3ef20 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561885e3ef20
| |-CXXConstructorDecl 0x561885e3f1d8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x561885e3f1d8
| | `-ParmVarDecl 0x561885e3f2e8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x561885e3f388 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x561885e3f388
|   `-ParmVarDecl 0x561885e3f498 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x561885dd0658 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x561885dd06b8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x561885dd0658 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x561885dd04d8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x561885dd0710 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x561885dd0658 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x561885dd0538 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x561885dd0768 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x561885dd0658 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x561885dd0598 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x561885dd07c0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561885e3ed58 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561885e3f6b8 <col:11>
|-CXXConstructorDecl 0x561885e3f028 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x561885e3f028
| `-ParmVarDecl 0x561885e3f138 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x561885e3f538 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x561885e3f538
  `-ParmVarDecl 0x561885e3f648 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885cebb10 prev 0x561885ce2950 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561885cebc08 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x561885cebca8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x561885cf2a70 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561885cf2e58 <col:11>
|-CXXConstructorDecl 0x561885cf2b50 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561885cf2c38 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561885cf35a0 <col:11>
|-CXXConstructorDecl 0x561885cf2cd8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x561885cf2de8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x561885cf4df8 <col:11>
|-CXXDestructorDecl 0x561885cf4108 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5618859faa98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5618859faba8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5618859fb470 <col:11>
|   `-ReturnStmt 0x5618859fb460 <col:11>
|     `-UnaryOperator 0x5618859fb448 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5618859fb438 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x5618859fac18 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5618859fad28 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x561885dc52c0 <col:11>
    `-ReturnStmt 0x561885dc52b0 <col:11>
      `-UnaryOperator 0x561885dc5298 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x561885dc5288 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885ce1b08 prev 0x561885ce1818 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561885ce1c00 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x561885ce1c90 <col:19, col:25> col:19 public
|-TypedefDecl 0x561885ce1cc8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x561885946c70 'int32_t' sugar
|   |-Typedef 0x561885858328 'int32_t'
|   `-TypedefType 0x561885831510 '__int32_t' sugar
|     |-Typedef 0x561885831128 '__int32_t'
|     `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885ce1d30 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x561885946e30 'int64_t' sugar
|   |-Typedef 0x561885858390 'int64_t'
|   `-TypedefType 0x561885831630 '__int64_t' sugar
|     |-Typedef 0x561885831208 '__int64_t'
|     `-BuiltinType 0x5618857ef5a0 'long'
|-EnumDecl 0x561885ce1d88 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x561885ce1f00 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x561885ce1ee0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x561885ce1eb8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x561885ce1ea0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x561885ce1e70 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x561885ce1ff8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x561885ce1fd8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x561885ce1fb0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x561885ce1f98 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x561885ce1f70 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x561885ce1f50 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x561885ce2048 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x561885ce2150 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561885ce26a0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885ce2130 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x561885ce2110 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x561885ce21e0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561885ce26b8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885ce21c0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x561885ce21a0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x561885ce2270 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561885ce26d0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885ce2250 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x561885ce2230 <col:25> 'int' 1000
| |-EnumConstantDecl 0x561885ce2300 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561885ce26e8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885ce22e0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x561885ce22c0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x561885ce2390 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561885ce2700 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885ce2370 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x561885ce2350 <col:25> 'int' 1000
| |-EnumConstantDecl 0x561885ce2420 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561885ce2718 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885ce2400 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x561885ce23e0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x561885ce24b0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561885ce2730 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885ce2490 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x561885ce2470 <col:26> 'int' EnumConstant 0x561885ce2150 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x561885ce2580 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561885ce2748 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885ce2560 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x561885ce2540 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x561885ce2500 <col:27> 'int' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x561885ce2520 <col:44> 'int' EnumConstant 0x561885ce2420 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x561885ce2650 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x561885ce2760 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885ce2630 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x561885ce2610 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x561885ce25d0 <col:27> 'int' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x561885ce25f0 <col:44> 'int' EnumConstant 0x561885ce2300 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x561885ce2778 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x561885ce2880 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x561885ce28d0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885ce2860 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x561885ce2840 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x561885ce28f8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x5618859468a0 'uninitialized_type'
|   `-CXXRecord 0x561885946808 'uninitialized_type'
|-CXXRecordDecl 0x561885ce2950 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x561885ce2a60 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x561885cecc58 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561885cf2e68 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561885cf2f88 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x561885cf2f40 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x561885cf2ed0 <col:9> '<bound member function type>' ->assign 0x561885ce76a8
|     | `-CXXThisExpr 0x561885cf2ec0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x561885cf2f00 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x561885cf2f70 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561885cf2f20 <col:19> 'int' 0
|-CXXConstructorDecl 0x561885ce2ca8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x561885ce2b20 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x561885ce2b98 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561885cee7a0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561885cee780 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x561885cecc58 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561885cf2fa0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561885cf30f0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x561885cf3078 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x561885cf3008 <col:9> '<bound member function type>' ->assign 0x561885ce76a8
|     | `-CXXThisExpr 0x561885cf2ff8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561885cf30c0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561885cf30a8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x561885cf3038 <col:16> 'long' lvalue ParmVar 0x561885ce2b20 'sec' 'long'
|     `-ImplicitCastExpr 0x561885cf30d8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561885cf3058 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ce2b98 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561885ce2f08 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561885ce2d78 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x561885ce2df0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561885cee7d8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561885cee7b8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x561885cecc58 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561885cf3108 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561885cf3240 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x561885cf31e0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x561885cf3170 <col:9> '<bound member function type>' ->assign 0x561885ce76a8
|     | `-CXXThisExpr 0x561885cf3160 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561885cf3210 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561885cf31a0 <col:16> 'int' lvalue ParmVar 0x561885ce2d78 'sec' 'int'
|     `-ImplicitCastExpr 0x561885cf3228 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561885cf31c0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ce2df0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561885ce3168 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x561885ce2fd8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x561885ce3050 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561885cee810 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561885cee7f0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x561885cecc58 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561885cf3258 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561885cf33a8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x561885cf3330 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x561885cf32c0 <col:9> '<bound member function type>' ->assign 0x561885ce76a8
|     | `-CXXThisExpr 0x561885cf32b0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561885cf3378 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561885cf3360 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x561885cf32f0 <col:16> 'unsigned long' lvalue ParmVar 0x561885ce2fd8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x561885cf3390 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561885cf3310 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ce3050 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561885ce4300 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x561885ce3238 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x561885ce32b0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561885cee848 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561885cee828 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x561885cecc58 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561885cf33c0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561885cf3510 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x561885cf3498 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x561885cf3428 <col:9> '<bound member function type>' ->assign 0x561885ce76a8
|     | `-CXXThisExpr 0x561885cf3418 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561885cf34e0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561885cf34c8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x561885cf3458 <col:16> 'unsigned int' lvalue ParmVar 0x561885ce3238 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x561885cf34f8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561885cf3478 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ce32b0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561885ce4460 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x561885ce43d0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x561885ce45f8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x561885ce4538 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x561885ce4828 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x561885ce4730 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x561885ce49d8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x561885ce4918 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x561885cecc58 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561885cf35b0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x561885cf3528 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x561885ce4918 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561885cf3610 <col:19, line:214:5>
|-CXXConstructorDecl 0x561885ce4ba8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x561885ce4ae8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x561885cecc58 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561885cf3620 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561885cf36d0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x561885cf36a8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x561885cf3678 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x561885ce4ae8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x561885ce4d98 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x561885ce4d10 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x561885ce18b0 'Timestamp'
|   | `-CXXRecord 0x561885ce1b08 'Timestamp'
|   `-ParenType 0x561885ce4cb0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x561885ce4c80 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x561885ce1e50 'Timestamp::seconds_type' sugar
|         |-Typedef 0x561885ce1cc8 'seconds_type'
|         `-TypedefType 0x561885946c70 'int32_t' sugar
|           |-Typedef 0x561885858328 'int32_t'
|           `-TypedefType 0x561885831510 '__int32_t' sugar
|             |-Typedef 0x561885831128 '__int32_t'
|             `-BuiltinType 0x5618857ef580 'int'
|-CXXConversionDecl 0x561885ce4ed8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x561885ce4fa8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x561885cf37d8 <col:37, line:231:5>
|   `-ReturnStmt 0x561885cf37c8 <line:227:9, col:23>
|     `-BinaryOperator 0x561885cf37a8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x561885cf3778 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561885cf3728 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x561885cebca8
|       |   `-MemberExpr 0x561885cf36f8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x561885cecc58
|       |     `-CXXThisExpr 0x561885cf36e8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561885cf3790 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x561885cf3758 <col:23> 'int' 0
|-CXXMethodDecl 0x561885ce5068 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x561885ce5128 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x561885ce51e8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x561885ce52a8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x561885ce5368 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x561885ce54d8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x561885ce5418 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x561885ce5620 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x561885ce5590 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885ce56e8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x561885ce5788 <col:54> "" ""
|-CXXMethodDecl 0x561885ce5818 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x561885ce58b8 <col:54> "" ""
|-CXXMethodDecl 0x561885ce5948 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x561885ce59e8 <col:54> "" ""
|-CXXMethodDecl 0x561885ce5ae8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x561885ce5bb8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x561885ce5ce8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x561885ce5de0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x561885ce5f18 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561885cf39f0 <col:39, line:271:5>
|   `-ReturnStmt 0x561885cf39e0 <line:267:9, col:61>
|     `-CallExpr 0x561885cf3980 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x561885cf3968 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561885cf37f0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x561885cecf88 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x561885cf39b0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561885cf3850 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x561885cebca8
|       |   `-MemberExpr 0x561885cf3820 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x561885cecc58
|       |     `-CXXThisExpr 0x561885cf3810 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561885cf39c8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x561885cf38f0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x561885cf38c0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x561885cf3880 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x561885cf38d8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x561885cf38a0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2420 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561885ce5fd8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561885cf3bb0 <col:39, line:279:5>
|   `-ReturnStmt 0x561885cf3ba0 <line:275:9, col:61>
|     `-CallExpr 0x561885cf3b40 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x561885cf3b28 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561885cf3a08 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x561885cecf88 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x561885cf3b70 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561885cf3a68 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x561885cebca8
|       |   `-MemberExpr 0x561885cf3a38 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x561885cecc58
|       |     `-CXXThisExpr 0x561885cf3a28 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561885cf3b88 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x561885cf3b08 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x561885cf3ad8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x561885cf3a98 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x561885cf3af0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x561885cf3ab8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2300 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561885ce6098 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561885cf3d48 <col:39, line:287:5>
|   `-ReturnStmt 0x561885cf3d38 <line:283:9, col:53>
|     `-BinaryOperator 0x561885cf3d18 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x561885cf3ce8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561885cf3c08 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x561885cebca8
|       |   `-MemberExpr 0x561885cf3bd8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x561885cecc58
|       |     `-CXXThisExpr 0x561885cf3bc8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561885cf3d00 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x561885cf3cc8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561885cf3ca8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x561885cf3c78 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561885cf3c38 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2150 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561885cf3c90 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561885cf3c58 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561885ce6188 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561885cf4fe0 <col:40, line:293:5>
|   |-DeclStmt 0x561885cf3e90 <line:291:9, col:48>
|   | `-VarDecl 0x561885cf3d70 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x561885cf3e70 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x561885cf3e18 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x561885cf3de8 <col:22> '<bound member function type>' ->subsec 0x561885ce5128
|   |     |   `-CXXThisExpr 0x561885cf3dd8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x561885cf3e58 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x561885cf3e38 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2580 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561885cf4fd0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x561885cf4fb8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x561885cf4f88 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561885cf4f70 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x561885cf4f50 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x561885cf4f20 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x561885cf4cb8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x561885cf4ca0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x561885cf3ea8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x561885cf3d70 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x561885cf4ec0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x561885cf4ea8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x561885cf4e78 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x561885cf4cd0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x561885cf4c40 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x561885cf4c28 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x561885cf4bd8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561885ce1a58 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x561885cf4b78 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x561885cf3ed8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x561885cf3ec8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x561885cf4bc0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x561885cf4ba8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x561885cf4398 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x561885cf3f00 <col:39> 'int' 0
|               |               `-BinaryOperator 0x561885cf3f90 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x561885cf3f60 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x561885cf3f20 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2580 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x561885cf3f78 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x561885cf3f40 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x561885cf3d70 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x561885cf4ef0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x561885cf4c88 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x561885cf4c78 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x561885ce6248 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561885cf5538 <col:40, line:302:5>
|   |-DeclStmt 0x561885cf5130 <line:297:9, col:48>
|   | `-VarDecl 0x561885cf5010 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x561885cf5110 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x561885cf50b8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x561885cf5088 <col:22> '<bound member function type>' ->subsec 0x561885ce5128
|   |     |   `-CXXThisExpr 0x561885cf5078 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x561885cf50f8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x561885cf50d8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2650 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561885cf5528 <line:298:9, col:70>
|     `-ExprWithCleanups 0x561885cf5510 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x561885cf54e0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561885cf54c8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x561885cf54a8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x561885cf5478 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x561885cf53a0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x561885cf5388 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x561885cf5148 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x561885cf5010 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x561885cf5418 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x561885cf5400 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x561885cf53d0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x561885cf53b8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x561885cf5328 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x561885cf5310 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x561885cf52f0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561885ce1a58 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x561885cf5290 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x561885cf5178 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x561885cf5168 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x561885cf52d8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x561885cf52c0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x561885cf5250 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x561885cf51a0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x561885cf5230 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x561885cf5200 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x561885cf51c0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2650 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x561885cf5218 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x561885cf51e0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x561885cf5010 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x561885cf5448 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x561885cf5370 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x561885cf5360 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x561885ce6308 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561885cf55c0 <col:40, line:306:5>
|   `-ReturnStmt 0x561885cf55b0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x561885cf5580 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x561885cf5568 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x561885cf5558 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x561885ce64a8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x561885ce63b8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x561885ce6678 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x561885ce6580 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x561885ce6768 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x561885ce68d8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x561885ce6818 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x561885cf5708 <col:56, line:320:5>
|   `-ReturnStmt 0x561885cf56f8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x561885cf56e0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x561885cf56b0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561885cf5698 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561885cf5658 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561885cf5628 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561885cf55e8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561885ce6818 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x561885cf5640 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x561885cf5608 <col:31> 'int' 0
|-CXXMethodDecl 0x561885ce6b18 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561885ce6990 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561885ce6a08 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885cf58d8 <col:72, line:326:5>
|   `-ReturnStmt 0x561885cf58c8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x561885cf58b0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561885cf5880 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561885cf5868 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561885cf5828 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561885cf5810 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561885cf5730 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561885ce6990 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561885cf57d0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561885cf57b8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561885cf5750 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561885ceb400 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561885cf57f8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561885cf5770 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ce6a08 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885ce6cc8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561885ce6bd8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561885cf5fa0 <col:56, line:337:5>
|   |-DeclStmt 0x561885cf5bd8 <line:329:9, col:51>
|   | `-VarDecl 0x561885cf5900 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561885cf5bc0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x561885cf5b90 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561885cf5b78 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x561885cf5b60 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561885cf5b30 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561885cf5b18 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561885cf5b00 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561885cf59f0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x561885cf5d90 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x561885cf5c40 <col:9, col:14> 'int64_t':'long' lvalue .x 0x561885cebca8
|   | | `-MemberExpr 0x561885cf5c10 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x561885cecc58
|   | |   `-DeclRefExpr 0x561885cf5bf0 <col:9> 'Timestamp' lvalue Var 0x561885cf5900 't' 'Timestamp'
|   | `-BinaryOperator 0x561885cf5d70 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x561885cf5d40 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561885cf5c70 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x561885ce6bd8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561885cf5d58 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x561885cf5d20 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x561885cf5d00 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x561885cf5cd0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x561885cf5c90 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x561885cf5ce8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x561885cf5cb0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2420 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561885cf5f88 <line:336:9, col:16>
|     `-CXXConstructExpr 0x561885cf5f58 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561885cf5f40 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561885cf5f20 <col:16> 'Timestamp' lvalue Var 0x561885cf5900 't' 'Timestamp'
|-CXXMethodDecl 0x561885ce6e90 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561885ce6d80 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561885ce6df8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885cf6158 <col:72, line:343:5>
|   `-ReturnStmt 0x561885cf6148 <line:342:9, col:51>
|     `-ExprWithCleanups 0x561885cf6130 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561885cf6100 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561885cf60e8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561885cf60a8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561885cf6090 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561885cf5fd8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561885ce6d80 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561885cf6050 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561885cf6038 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561885cf5ff8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561885ceb548 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561885cf6078 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561885cf6018 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ce6df8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885ce6fe0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561885ce6f50 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561885cf65a0 <col:56, line:354:5>
|   |-DeclStmt 0x561885cf6348 <line:346:9, col:51>
|   | `-VarDecl 0x561885cf6180 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561885cf6330 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x561885cf6300 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561885cf62e8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x561885cf62d0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561885cf62a0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561885cf6288 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561885cf6270 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561885cf6240 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x561885cf6500 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x561885cf63b0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x561885cebca8
|   | | `-MemberExpr 0x561885cf6380 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x561885cecc58
|   | |   `-DeclRefExpr 0x561885cf6360 <col:9> 'Timestamp' lvalue Var 0x561885cf6180 't' 'Timestamp'
|   | `-BinaryOperator 0x561885cf64e0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x561885cf64b0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561885cf63e0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x561885ce6f50 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561885cf64c8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x561885cf6490 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x561885cf6470 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x561885cf6440 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x561885cf6400 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x561885cf6458 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x561885cf6420 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2300 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561885cf6588 <line:353:9, col:16>
|     `-CXXConstructExpr 0x561885cf6558 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561885cf6540 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561885cf6520 <col:16> 'Timestamp' lvalue Var 0x561885cf6180 't' 'Timestamp'
|-CXXMethodDecl 0x561885ce71a8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561885ce7098 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561885ce7110 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885cf6758 <col:72, line:360:5>
|   `-ReturnStmt 0x561885cf6748 <line:359:9, col:51>
|     `-ExprWithCleanups 0x561885cf6730 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561885cf6700 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561885cf66e8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561885cf66a8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561885cf6690 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561885cf65d8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561885ce7098 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561885cf6650 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561885cf6638 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561885cf65f8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561885ceb690 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561885cf6678 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561885cf6618 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ce7110 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885ce72f8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561885ce7268 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561885d030c8 <col:56, line:371:5>
|   |-DeclStmt 0x561885cf6948 <line:363:9, col:51>
|   | `-VarDecl 0x561885cf6780 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561885cf6930 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x561885cf6900 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561885cf68e8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x561885cf68d0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561885cf68a0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561885cf6888 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561885cf6870 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561885cf6840 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x561885d03028 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x561885cf69b0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x561885cebca8
|   | | `-MemberExpr 0x561885cf6980 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x561885cecc58
|   | |   `-DeclRefExpr 0x561885cf6960 <col:9> 'Timestamp' lvalue Var 0x561885cf6780 't' 'Timestamp'
|   | `-CallExpr 0x561885d02fc8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x561885d02fb0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x561885cf69e0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x561885cecf88 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x561885d02ff8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561885cf6a00 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x561885ce7268 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561885d03010 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x561885d02f90 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x561885d02f60 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x561885cf6a20 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2150 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x561885d02f78 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x561885cf6a40 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561885d030b0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x561885d03080 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561885d03068 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561885d03048 <col:16> 'Timestamp' lvalue Var 0x561885cf6780 't' 'Timestamp'
|-CXXMethodDecl 0x561885ce73e8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x561885d03208 <col:39, line:377:5>
|   `-ReturnStmt 0x561885d031f8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x561885d031e0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x561885d031b0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561885d03198 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561885d03158 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x561885d03100 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x561885d03140 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x561885d03120 <col:29> 'int' 1
|-CXXMethodDecl 0x561885ce74a8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x561885d032e8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x561885d032a0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x561885d03230 <col:9> '<bound member function type>' ->assign 0x561885ce76a8
|     | `-CXXThisExpr 0x561885d03220 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x561885d03260 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x561885d032d0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561885d03280 <col:19> 'int' 0
|-CXXMethodDecl 0x561885ce76a8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561885ce7558 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561885ce75d0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561885cee880 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561885cee860 <col:60> 'int' 0
| `-CompoundStmt 0x561885d034e0 <col:63, line:395:5>
|   `-BinaryOperator 0x561885d034c0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x561885d03340 <col:9, col:12> 'int64_t':'long' lvalue .x 0x561885cebca8
|     | `-MemberExpr 0x561885d03310 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x561885cecc58
|     |   `-CXXThisExpr 0x561885d03300 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x561885d034a0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x561885d03430 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x561885d033d0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x561885d033b8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x561885d033a0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x561885d03370 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561885ce7558 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x561885d03418 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x561885d033f8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x561885d03488 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x561885d03470 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x561885d03450 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ce75d0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885ce7878 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561885ce7768 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561885ce77e0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885d03638 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x561885d035f0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x561885d03508 <col:9> '<bound member function type>' ->assign 0x561885ce76a8
|     | `-CXXThisExpr 0x561885d034f8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561885d03620 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561885d03538 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561885ce7768 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x561885d035b0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x561885d03598 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561885d03558 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561885ceb548 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x561885d035d8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561885d03578 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ce77e0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885ce7a48 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561885ce7938 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561885ce79b0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885d03790 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x561885d03748 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x561885d03660 <col:9> '<bound member function type>' ->assign 0x561885ce76a8
|     | `-CXXThisExpr 0x561885d03650 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561885d03778 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561885d03690 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561885ce7938 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x561885d03708 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x561885d036f0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561885d036b0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561885ceb690 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x561885d03730 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561885d036d0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ce79b0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885ce7c18 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561885ce7b08 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561885ce7b80 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561885cee8b8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561885cee898 <col:57> 'int' 0
| `-DeprecatedAttr 0x561885ce7cc8 <col:75> "" ""
|-CXXMethodDecl 0x561885ce7e58 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561885ce7d48 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561885ce7dc0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561885ce7f08 <col:74> "" ""
|-CXXMethodDecl 0x561885ce8098 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561885ce7f88 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561885ce8000 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561885ce8148 <col:74> "" ""
|-CXXMethodDecl 0x561885ce81d8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x561885ce8278 <col:42> "" ""
|-CXXMethodDecl 0x561885ceaab0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x561885cea990 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x561885ceaa10 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x561885ceab80 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x561885ceac40 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x561885ceace0 <col:20>
| `-OptimizeNoneAttr 0x561885cead38 <col:30>
|-CXXMethodDecl 0x561885cead80 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x561885ceae40 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x561885ceaf00 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x561885ceafc0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x561885ceb080 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x561885ceb140 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x561885ceb200 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x561885ceb2c0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x561885ceb400 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561885ceb370 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885d038d8 <col:58, line:512:5>
|   `-ReturnStmt 0x561885d038c8 <line:511:9, col:53>
|     `-BinaryOperator 0x561885d038a8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x561885d03878 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561885d037a8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ceb370 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561885d03890 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561885d03858 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561885d03838 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x561885d03808 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561885d037c8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561885d03820 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561885d037e8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2420 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561885ceb548 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561885ceb4b8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885d03a20 <col:58, line:516:5>
|   `-ReturnStmt 0x561885d03a10 <line:515:9, col:53>
|     `-BinaryOperator 0x561885d039f0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x561885d039c0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561885d038f0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ceb4b8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561885d039d8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561885d039a0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561885d03980 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x561885d03950 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561885d03910 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561885d03968 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561885d03930 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2300 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561885ceb690 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561885ceb600 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885d03b68 <col:58, line:520:5>
|   `-ReturnStmt 0x561885d03b58 <line:519:9, col:53>
|     `-BinaryOperator 0x561885d03b38 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x561885d03b08 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561885d03a38 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ceb600 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561885d03b20 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561885d03ae8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561885d03ac8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x561885d03a98 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561885d03a58 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2150 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561885d03ab0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561885d03a78 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561885ceb7d8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561885ceb748 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885d03cb0 <col:60, line:524:5>
|   `-ReturnStmt 0x561885d03ca0 <line:523:9, col:55>
|     `-BinaryOperator 0x561885d03c80 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x561885d03c50 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561885d03b80 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ceb748 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561885d03c68 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561885d03c30 <col:25, col:55> 'int'
|           `-BinaryOperator 0x561885d03c10 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x561885d03be0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561885d03ba0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561885d03bf8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561885d03bc0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2420 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561885ceb920 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561885ceb890 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885d03df8 <col:60, line:528:5>
|   `-ReturnStmt 0x561885d03de8 <line:527:9, col:55>
|     `-BinaryOperator 0x561885d03dc8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x561885d03d98 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561885d03cc8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ceb890 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561885d03db0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561885d03d78 <col:25, col:55> 'int'
|           `-BinaryOperator 0x561885d03d58 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x561885d03d28 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561885d03ce8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561885d03d40 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561885d03d08 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2300 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561885ceba68 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561885ceb9d8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885d03f40 <col:60, line:532:5>
|   `-ReturnStmt 0x561885d03f30 <line:531:9, col:55>
|     `-BinaryOperator 0x561885d03f10 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x561885d03ee0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561885d03e10 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ceb9d8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561885d03ef8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561885d03ec0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x561885d03ea0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x561885d03e70 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561885d03e30 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce2150 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561885d03e88 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561885d03e50 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561885ce24b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x561885cebb10 prev 0x561885ce2950 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561885cebc08 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x561885cebca8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x561885cf2a70 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561885cf2e58 <col:11>
| |-CXXConstructorDecl 0x561885cf2b50 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561885cf2c38 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x561885cf35a0 <col:11>
| |-CXXConstructorDecl 0x561885cf2cd8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x561885cf2de8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x561885cf4df8 <col:11>
| |-CXXDestructorDecl 0x561885cf4108 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5618859faa98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5618859faba8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5618859fb470 <col:11>
| |   `-ReturnStmt 0x5618859fb460 <col:11>
| |     `-UnaryOperator 0x5618859fb448 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5618859fb438 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x5618859fac18 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x5618859fad28 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x561885dc52c0 <col:11>
|     `-ReturnStmt 0x561885dc52b0 <col:11>
|       `-UnaryOperator 0x561885dc5298 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x561885dc5288 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x561885cebd10 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x561885cebe10 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x561885cec010 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885cebdf0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x561885cebdd0 <col:21> 'int' 0
| |-EnumConstantDecl 0x561885cebea0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x561885cec028 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885cebe80 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x561885cebe60 <col:23> 'int' 1
| |-EnumConstantDecl 0x561885cebf30 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x561885cec040 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885cebf10 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x561885cebef0 <col:23> 'int' 2
| `-EnumConstantDecl 0x561885cebfc0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x561885cec058 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885cebfa0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x561885cebf80 <col:27> 'int' 3
|-CXXMethodDecl 0x561885cec098 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x561885cec160 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x561885cec368 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x561885cec210 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x561885cec290 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x561885cee8d0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x561885cec578 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x561885cec428 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x561885cec4a0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x561885cec648 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x561885cec708 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x561885cec878 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x561885cec7b8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x561885cec940 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x561885ceca00 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x561885cecac0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x561885cecb80 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x561885cecc20 <line:670:3, col:10> col:3 private
|-FieldDecl 0x561885cecc58 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x561885ceccc8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x561885d03f58 <col:27, line:684:5>
|-CXXMethodDecl 0x561885cecd88 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x561885d03f68 <col:27, line:696:5>
|-CXXMethodDecl 0x561885cecf88 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x561885cece38 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x561885ceceb0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885d040f0 <col:66, line:700:5>
|   `-ReturnStmt 0x561885d040e0 <line:699:9, col:31>
|     `-CallExpr 0x561885d04080 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x561885d04068 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561885d04018 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x561885b6f118 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x561885d040b0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x561885d03fd8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x561885cece38 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x561885d040c8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561885d03ff8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ceceb0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885ced2f8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x561885ced048 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x561885ced0c0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x561885ced138 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x561885ced1b0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885d04440 <col:64, line:707:5>
|   |-DeclStmt 0x561885d04180 <line:704:9, col:24>
|   | `-VarDecl 0x561885d04118 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x561885d04390 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x561885d04198 <col:9> 'int32_t':'int' lvalue ParmVar 0x561885ced0c0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x561885d04378 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x561885d04310 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x561885d042f8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561885d04278 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x561885b743e8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x561885d04348 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x561885d04218 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x561885ced138 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x561885d04360 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x561885d04238 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885ced1b0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x561885d04258 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x561885d04118 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x561885d04420 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x561885d043b0 <col:9> 'int32_t':'int' lvalue ParmVar 0x561885ced048 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x561885d04408 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x561885d043f0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x561885d043d0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x561885d04118 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x561885ced598 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x561885ced3c8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x561885ced440 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x561885ced4b8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x561885ced838 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x561885ced660 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x561885ced6d8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x561885ced750 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x561885ced9c8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x561885ced900 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x561885cedbc8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x561885ceda80 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x561885cedaf8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x561885cede98 <line:717:5, col:73> col:24
| `-FunctionDecl 0x561885ceddd8 parent 0x5618857ef488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561885cedc88 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x561885cedd00 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x561885cee0b8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x561885cedff8 parent 0x5618857ef488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561885cedee8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x561885cedf60 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x561885cee280 <line:719:5, col:57> col:29
| `-FunctionDecl 0x561885cee1c8 parent 0x5618857ef488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x561885cee108 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x561885cee508 <line:720:5, col:73> col:30
| `-FunctionDecl 0x561885cee448 parent 0x5618857ef488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561885cee2f8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x561885cee370 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x561885cee728 <line:721:5, col:73> col:30
| `-FunctionDecl 0x561885cee668 parent 0x5618857ef488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561885cee558 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x561885cee5d0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x561885cf3fb0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x561885cf4098 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x561885cecc58 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561885cf4b08 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x561885cf4ac0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x561885cecc58
| |     `-DeclRefExpr 0x561885cf4aa0 <col:7> 'const Timestamp' lvalue ParmVar 0x561885cf4098 '' 'const Timestamp &'
| `-CompoundStmt 0x561885cf4b68 <col:7>
|-CXXConstructorDecl 0x561885cf4218 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x561885cf4328 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x561885cecc58 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561885cf4e08 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x561885cf4db0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x561885cecc58
| |     `-CXXStaticCastExpr 0x561885cf4d80 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x561885cf4d50 <col:7> 'Timestamp' lvalue ParmVar 0x561885cf4328 '' 'Timestamp &&'
| `-CompoundStmt 0x561885cf4e68 <col:7>
|-CXXDestructorDecl 0x561885cf43d8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5618859fa8e8 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5618859fa9f8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x5618859fb4e8 <col:7>
|   |-CXXMemberCallExpr 0x5618859fb488 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x5618859fb3c8 <col:7> '<bound member function type>' .operator= 0x5618859faa98
|   | | `-MemberExpr 0x5618859fb2d8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x561885cecc58
|   | |   `-CXXThisExpr 0x5618859fb2c8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x5618859fb398 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x561885cecc58
|   |   `-DeclRefExpr 0x5618859fb378 <col:7> 'const Timestamp' lvalue ParmVar 0x5618859fa9f8 '' 'const Timestamp &'
|   `-ReturnStmt 0x5618859fb4d8 <col:7>
|     `-UnaryOperator 0x5618859fb4c0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5618859fb4b0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x5618859fad98 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5618859faea8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x561885dc5338 <col:7>
    |-CXXMemberCallExpr 0x561885dc52d8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x561885dc5240 <col:7> '<bound member function type>' .operator= 0x5618859fac18
    | | `-MemberExpr 0x561885dc5110 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x561885cecc58
    | |   `-CXXThisExpr 0x561885dc5100 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x561885dc5210 <col:7> 'Timestamp::rep_t' xvalue ._t 0x561885cecc58
    |   `-CXXStaticCastExpr 0x561885dc51e0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x561885dc51b0 <col:7> 'Timestamp' lvalue ParmVar 0x5618859faea8 '' 'Timestamp &&'
    `-ReturnStmt 0x561885dc5328 <col:7>
      `-UnaryOperator 0x561885dc5310 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x561885dc5300 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885dd47d8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x561885dd49e8 prev 0x561885dd47d8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561885dd5e00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x561885dd5db0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x561885dd5d90 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x561885dd5c40 'type'
|     `-SubstTemplateTypeParmType 0x561885dd5a60 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x561885ab72a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ab7248 'T'
|       `-RecordType 0x561885dd55b0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x561885dd54c8 'sized_array_memory'
|-FieldDecl 0x561885dd9a90 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x561885dd9ae0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561885dd9b18 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x561885dd4a80 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561885aeef38 'T'
|   `-RecordType 0x561885dd39e0 'TimerSet::heap_element'
|     `-CXXRecord 0x561885dd3950 'heap_element'
|-TypedefDecl 0x561885dd9bd8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x561885dd9ba0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x561885dd4a80 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885dd39e0 'TimerSet::heap_element'
|       `-CXXRecord 0x561885dd3950 'heap_element'
|-TypedefDecl 0x561885dd9c68 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x561885dd9c30 'const TimerSet::heap_element &'
|   `-QualType 0x561885dd4a81 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x561885dd4a80 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885dd39e0 'TimerSet::heap_element'
|         `-CXXRecord 0x561885dd3950 'heap_element'
|-TypedefDecl 0x561885dd9cf8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x561885dd9cc0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x561885dd4a80 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885dd39e0 'TimerSet::heap_element'
|       `-CXXRecord 0x561885dd3950 'heap_element'
|-TypedefDecl 0x561885dd9db8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x561885dd9d80 'const TimerSet::heap_element *'
|   `-QualType 0x561885dd4a81 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x561885dd4a80 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885dd39e0 'TimerSet::heap_element'
|         `-CXXRecord 0x561885dd3950 'heap_element'
|-TypedefDecl 0x561885ddaa10 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x561885dda9c0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x561885dda9a0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x561885dda8d8 'type'
|     `-LValueReferenceType 0x561885dda8a0 'const TimerSet::heap_element &'
|       `-QualType 0x561885dda641 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x561885dda640 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x561885ac1970 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561885ac1918 'T'
|           `-RecordType 0x561885dd39e0 'TimerSet::heap_element'
|             `-CXXRecord 0x561885dd3950 'heap_element'
|-TypedefDecl 0x561885ddaa78 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x561885dd9c30 'const TimerSet::heap_element &'
|   `-QualType 0x561885dd4a81 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x561885dd4a80 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885dd39e0 'TimerSet::heap_element'
|         `-CXXRecord 0x561885dd3950 'heap_element'
|-TypedefDecl 0x561885ddaad0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885ddab38 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x561885dd9cc0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x561885dd4a80 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885dd39e0 'TimerSet::heap_element'
|       `-CXXRecord 0x561885dd3950 'heap_element'
|-TypedefDecl 0x561885ddaba0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x561885dd9d80 'const TimerSet::heap_element *'
|   `-QualType 0x561885dd4a81 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x561885dd4a80 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885dd39e0 'TimerSet::heap_element'
|         `-CXXRecord 0x561885dd3950 'heap_element'
|-EnumDecl 0x561885ddabf8 <line:134:5> col:5
| `-EnumConstantDecl 0x561885ddacf0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561885ddacd0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561885af0618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561885af05f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561885af05d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561885ddad78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561885ddb008 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561885ddae30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885ddaed0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x561885ddb2c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x561885ddb1b0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x561885ddb588 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x561885ddb470 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x561885ddb8d0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x561885ddb7b0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x561885ddbbe0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x561885ddbac0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x561885ddbed0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561885ddbd18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885ddbd90 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561885ddc028 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x561885ddc108 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885ddc160 <col:30> Inherited
|-CXXMethodDecl 0x561885ddc1a8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x561885ddc258 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885ddc2b0 <col:30> Inherited
|-CXXMethodDecl 0x561885ddc378 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561885ddc428 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885ddc480 <col:30> Inherited
|-CXXMethodDecl 0x561885ddc4c8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561885ddc578 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885ddc5d0 <col:30> Inherited
|-CXXMethodDecl 0x561885ddc618 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561885ddc6c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885ddc720 <col:30> Inherited
|-CXXMethodDecl 0x561885ddc768 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561885ddc818 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885ddc870 <col:30> Inherited
|-CXXMethodDecl 0x561885ddc898 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885ddc948 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885ddc9f8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x561885ddcbb8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561885ddcaa8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885ddcb20 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561885ddcd08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561885ddcc78 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885ddceb8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x561885ddcdc0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885ddcf70 <col:20>
| `-OptimizeNoneAttr 0x561885ddcfc8 <col:30>
|-CXXMethodDecl 0x561885ddd0e8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x561885ddcff0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885ddd1a0 <col:20>
| `-OptimizeNoneAttr 0x561885ddd1f8 <col:30>
|-CXXMethodDecl 0x561885ddd2b0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885ddd220 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885ddd3f8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885ddd368 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885ddd528 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x561885ddd658 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x561885ddd728 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x561885ddd7f8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x561885ddd938 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885ddd8a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885ddda80 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885ddd9f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885dddbc8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x561885dddb38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885dddc80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561885dddd80 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561885dddcf0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885ddde38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561885dddef8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x561885dddff8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x561885dde1a8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x561885dde0b8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x561885dde968 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561885dde260 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x561885dde8c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x561885dde7c8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x561885ddea48 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885ddeb98 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x561885ddeb08 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561885ddec50 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561885ddee98 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561885dded10 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x561885dded88 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561885ddf058 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x561885ddef68 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x561885ddf2a8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x561885ddf120 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x561885ddf198 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x561885ddfcb0 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885ddff08 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x561885ddfe10 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x561885ddffd8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561885ddffd8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885de0120 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x561885de0328 prev 0x561885de0120 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561885de1470 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x561885de1420 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x561885de1400 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x561885de12b0 'type'
|     `-SubstTemplateTypeParmType 0x561885de10d0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561885ab72a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ab7248 'T'
|       `-RecordType 0x561885de0c20 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x561885de0b38 'sized_array_memory'
|-FieldDecl 0x561885de50a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561885de50f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561885de5128 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x561885de03c0 'Timer *' sugar
|   |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561885aeef38 'T'
|   `-PointerType 0x561885d53d40 'Timer *'
|     `-RecordType 0x561885d52e90 'Timer'
|       `-CXXRecord 0x561885cd8398 'Timer'
|-TypedefDecl 0x561885de51e8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x561885de51b0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x561885de03c0 'Timer *' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-PointerType 0x561885d53d40 'Timer *'
|       `-RecordType 0x561885d52e90 'Timer'
|         `-CXXRecord 0x561885cd8398 'Timer'
|-TypedefDecl 0x561885de52a8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x561885de5270 'Timer *const &'
|   `-QualType 0x561885de03c1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x561885de03c0 'Timer *' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-PointerType 0x561885d53d40 'Timer *'
|         `-RecordType 0x561885d52e90 'Timer'
|           `-CXXRecord 0x561885cd8398 'Timer'
|-TypedefDecl 0x561885de5368 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x561885de5330 'Timer **'
|   `-SubstTemplateTypeParmType 0x561885de03c0 'Timer *' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-PointerType 0x561885d53d40 'Timer *'
|       `-RecordType 0x561885d52e90 'Timer'
|         `-CXXRecord 0x561885cd8398 'Timer'
|-TypedefDecl 0x561885de5428 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x561885de53f0 'Timer *const *'
|   `-QualType 0x561885de03c1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x561885de03c0 'Timer *' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-PointerType 0x561885d53d40 'Timer *'
|         `-RecordType 0x561885d52e90 'Timer'
|           `-CXXRecord 0x561885cd8398 'Timer'
|-TypedefDecl 0x561885de6000 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x561885de5fb0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x561885de5f90 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x561885de5f20 'type'
|     `-SubstTemplateTypeParmType 0x561885de5ce0 'Timer *' sugar
|       |-TemplateTypeParmType 0x561885ac20a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ac2050 'T'
|       `-PointerType 0x561885d53d40 'Timer *'
|         `-RecordType 0x561885d52e90 'Timer'
|           `-CXXRecord 0x561885cd8398 'Timer'
|-TypedefDecl 0x561885de6068 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x561885de5270 'Timer *const &'
|   `-QualType 0x561885de03c1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x561885de03c0 'Timer *' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-PointerType 0x561885d53d40 'Timer *'
|         `-RecordType 0x561885d52e90 'Timer'
|           `-CXXRecord 0x561885cd8398 'Timer'
|-TypedefDecl 0x561885de60c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885de6128 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x561885de5330 'Timer **'
|   `-SubstTemplateTypeParmType 0x561885de03c0 'Timer *' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-PointerType 0x561885d53d40 'Timer *'
|       `-RecordType 0x561885d52e90 'Timer'
|         `-CXXRecord 0x561885cd8398 'Timer'
|-TypedefDecl 0x561885de6190 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x561885de53f0 'Timer *const *'
|   `-QualType 0x561885de03c1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x561885de03c0 'Timer *' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-PointerType 0x561885d53d40 'Timer *'
|         `-RecordType 0x561885d52e90 'Timer'
|           `-CXXRecord 0x561885cd8398 'Timer'
|-EnumDecl 0x561885de61e8 <line:134:5> col:5
| `-EnumConstantDecl 0x561885de62e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561885de62c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561885af0618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561885af05f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561885af05d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561885de6368 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561885de65f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561885de6420 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885de64c0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x561885de68b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x561885de67a0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x561885de6b78 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x561885de6a60 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x561885de6ec0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x561885de6da0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x561885de71d0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x561885de70b0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x561885de74c0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561885de7308 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885de7380 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561885de7618 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x561885de76f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885de7750 <col:30> Inherited
|-CXXMethodDecl 0x561885de7798 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x561885de7848 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885de78a0 <col:30> Inherited
|-CXXMethodDecl 0x561885de7968 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561885de7a18 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885de7a70 <col:30> Inherited
|-CXXMethodDecl 0x561885de7ab8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561885de7b68 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885de7bc0 <col:30> Inherited
|-CXXMethodDecl 0x561885de7c08 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561885de95b0 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885de9608 <col:30> Inherited
|-CXXMethodDecl 0x561885de9650 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561885de9700 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885de9758 <col:30> Inherited
|-CXXMethodDecl 0x561885de9780 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885de9830 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885de98e0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561885de9aa0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561885de9990 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885de9a08 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561885de9bf0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561885de9b60 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885de9d98 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x561885de9ca8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885de9e50 <col:20>
| `-OptimizeNoneAttr 0x561885de9ea8 <col:30>
|-CXXMethodDecl 0x561885de9fc8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x561885de9ed0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885dea080 <col:20>
| `-OptimizeNoneAttr 0x561885dea0d8 <col:30>
|-CXXMethodDecl 0x561885dea190 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561885dea100 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885dea2d8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885dea248 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885dea408 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x561885dea538 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x561885dea608 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x561885dea6d8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x561885dea818 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561885dea788 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885dea960 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885dea8d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885deaaa8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x561885deaa18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885deab60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561885deac60 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561885deabd0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885dead18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561885deadd8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x561885deaed8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x561885deb058 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x561885deaf98 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x561885deb818 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561885deb110 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x561885deb778 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x561885deb678 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x561885deb8f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885deba48 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x561885deb9b8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561885debb00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561885debd48 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561885debbc0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x561885debc38 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561885debf08 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x561885debe18 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x561885dec158 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x561885debfd0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x561885dec048 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x561885dec218 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885dec478 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x561885dec380 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x561885dec548 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561885dec548

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885cd4dd0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561885cd4ee8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x561885cd4f78 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x561885cd5000 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x561885cd50f0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x561885cd51f0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x561885cd52b0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x561885cd5370 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x561885cd5498 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x561885cd5498
| `-ParmVarDecl 0x561885cd55a8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x561885ded2f8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x561885ded2f8
  `-ParmVarDecl 0x561885ded408 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885dd2ad0 prev 0x561885dc2dc8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x561885dd2bc8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x561885dd2c58 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x561885dd2ce0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x561885dd2dd8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x561885ded770 <col:43, col:67>
|   `-ReturnStmt 0x561885ded760 <col:45, col:52>
|     `-CXXConstructExpr 0x561885ded730 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x561885ded700 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x561885dd45c0
|         `-CXXThisExpr 0x561885ded6f0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x561885dd2e98 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x561885dd30a0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x561885dd2f48 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x561885dd2fc0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x561885dd3198 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x561885dd3260 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x561885ded7f0 <col:39, col:67>
|   `-ReturnStmt 0x561885ded7e0 <col:41, col:48>
|     `-ImplicitCastExpr 0x561885ded7c8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561885ded798 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x561885dd46a8
|         `-CXXThisExpr 0x561885ded788 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x561885dd3328 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x561885ded870 <col:35, col:59>
|   `-ReturnStmt 0x561885ded860 <col:37, col:44>
|     `-ImplicitCastExpr 0x561885ded848 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561885ded818 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x561885dd4710
|         `-CXXThisExpr 0x561885ded808 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x561885dd3470 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x561885dd33e0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x561885dd35b8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x561885dd3528 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x561885dd37b8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x561885dd3670 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x561885dd36e8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x561885dd3888 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x561885dd3928 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x561885dd3950 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561885dd3a68 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x561885dd3b08 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x561885dd3b68 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x561885dd3c98 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x561885dd3bc8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x561885dd3b08 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x561885ded948 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x561885ded8f0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x561885ded8c0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x561885cd9a08
|   |       `-ImplicitCastExpr 0x561885ded910 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x561885ded8a8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x561885ded888 <col:17> 'Timer *' lvalue ParmVar 0x561885dd3bc8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x561885dd3b68 't' 'Timer *'
|   | `-ImplicitCastExpr 0x561885ded9e0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561885ded9a0 <col:41> 'Timer *' lvalue ParmVar 0x561885dd3bc8 't_' 'Timer *'
|   `-CompoundStmt 0x561885deda30 <col:45, line:44:2>
|-CXXRecordDecl 0x561885dd3d60 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561885dd3e78 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x561885dd40c8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x561885dd3f48 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x561885dd3fc0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x561885dedb60 <col:71, line:49:2>
|     `-ReturnStmt 0x561885dedb50 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x561885dedb18 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x561885dedb00 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561885dedae0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x561885d110a8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x561885deda60 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x561885dd3b08
|         | `-DeclRefExpr 0x561885deda40 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x561885dd3f48 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x561885dedab0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x561885dd3b08
|           `-DeclRefExpr 0x561885deda90 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x561885dd3fc0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x561885dd4190 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561885dd42a8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x561885dd44c8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x561885dd4348 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x561885dd43c0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x561885dedd68 <col:63, line:54:2>
|     `-BinaryOperator 0x561885dedd48 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x561885dedbf8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x561885dc2268
|       | `-ImplicitCastExpr 0x561885dedbe0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x561885dedbb0 <col:6, col:9> 'Timer *' lvalue ->t 0x561885dd3b68
|       |     `-ImplicitCastExpr 0x561885dedb98 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x561885dedb78 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x561885dd43c0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x561885dedd30 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x561885dedd10 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x561885dedcb8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x561885dedc98 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x561885dedc68 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x561885dedc28 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x561885dd43c0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x561885dedc80 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x561885dedc48 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x561885dd4348 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x561885dedcf8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x561885dedcd8 <col:39> 'int' 1
|-FieldDecl 0x561885dd45c0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x561885dd4630 <col:44, col:53> aligned
|   `-ConstantExpr 0x561885dd4610 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x561885dd4590 <col:52> 'int' 8
|-FieldDecl 0x561885dd46a8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x561885dd4710 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x561885dd4778 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x561885de00c0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x561885dec630 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x561885dec690 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x561885dec6f0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x561885dec750 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885dec840 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x561885dec7b0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x561885dec908 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x561885dee1c0 <col:29, line:81:5>
|   `-IfStmt 0x561885dee198 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x561885dede50 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x561885deddf0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x561885deddc0 <col:6, col:18> '<bound member function type>' .size 0x561885ddc898
|     |     `-ImplicitCastExpr 0x561885dede38 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x561885dedd90 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x561885de00c0
|     |         `-CXXThisExpr 0x561885dedd80 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x561885dee040 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x561885dee028 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x561885dee008 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x5618859fa8e8 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x561885dede78 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x561885dd45c0
|     | | `-CXXThisExpr 0x561885dede68 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x561885dedff0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x561885dedfc0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x561885dd3b08
|     |     `-CXXMemberCallExpr 0x561885dedf98 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x561885dedf68 <col:22, col:34> '<bound member function type>' .unchecked_at 0x561885ddd938
|     |       | `-MemberExpr 0x561885dedeb8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x561885de00c0
|     |       |   `-CXXThisExpr 0x561885dedea8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x561885dedf48 <col:47> 'int' 0
|     `-ExprWithCleanups 0x561885dee180 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x561885dee148 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x561885dee130 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561885dee110 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x5618859fad98 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x561885dee088 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x561885dd45c0
|         | `-CXXThisExpr 0x561885dee078 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x561885dee0f8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561885dee0c8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x561885deca48 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x561885dec9b8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x561885decb10 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x561885decbd0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x561885decc90 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x561885decd80 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x561885decde8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x561885decde8
| `-ParmVarDecl 0x561885decef8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x561885decf98 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x561885decf98
| `-ParmVarDecl 0x561885ded0a8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x561885ded148 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x561885ded148
| `-ParmVarDecl 0x561885ded258 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x561885ded478 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x561885ded478
| `-ParmVarDecl 0x561885ded588 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x561885ded610 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x561885ded610

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885e20ab8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x561885e20cc8 prev 0x561885e20ab8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561885e21da0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x561885e21d50 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x561885e21d30 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x561885e21be0 'type'
|     `-SubstTemplateTypeParmType 0x561885de10d0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561885ab72a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ab7248 'T'
|       `-RecordType 0x561885de0c20 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x561885de0b38 'sized_array_memory'
|-FieldDecl 0x561885e21ea0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561885e21ef0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561885e21f28 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x561885e20d60 'pollfd' sugar
|   |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561885aeef38 'T'
|   `-RecordType 0x561885e1eb40 'pollfd'
|     `-CXXRecord 0x561885e1eab0 'pollfd'
|-TypedefDecl 0x561885e21fe8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x561885e21fb0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x561885e20d60 'pollfd' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885e1eb40 'pollfd'
|       `-CXXRecord 0x561885e1eab0 'pollfd'
|-TypedefDecl 0x561885e220a8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x561885e22070 'const pollfd &'
|   `-QualType 0x561885e20d61 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x561885e20d60 'pollfd' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e1eb40 'pollfd'
|         `-CXXRecord 0x561885e1eab0 'pollfd'
|-TypedefDecl 0x561885e22138 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x561885e22100 'pollfd *'
|   `-SubstTemplateTypeParmType 0x561885e20d60 'pollfd' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885e1eb40 'pollfd'
|       `-CXXRecord 0x561885e1eab0 'pollfd'
|-TypedefDecl 0x561885e221f8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x561885e221c0 'const pollfd *'
|   `-QualType 0x561885e20d61 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x561885e20d60 'pollfd' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e1eb40 'pollfd'
|         `-CXXRecord 0x561885e1eab0 'pollfd'
|-TypedefDecl 0x561885e22dd0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x561885e22d80 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x561885e22d60 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x561885e22cf0 'type'
|     `-SubstTemplateTypeParmType 0x561885e22ab0 'pollfd' sugar
|       |-TemplateTypeParmType 0x561885ac20a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ac2050 'T'
|       `-RecordType 0x561885e1eb40 'pollfd'
|         `-CXXRecord 0x561885e1eab0 'pollfd'
|-TypedefDecl 0x561885e22e38 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x561885e22070 'const pollfd &'
|   `-QualType 0x561885e20d61 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x561885e20d60 'pollfd' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e1eb40 'pollfd'
|         `-CXXRecord 0x561885e1eab0 'pollfd'
|-TypedefDecl 0x561885e22e90 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e22ef8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x561885e22100 'pollfd *'
|   `-SubstTemplateTypeParmType 0x561885e20d60 'pollfd' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885e1eb40 'pollfd'
|       `-CXXRecord 0x561885e1eab0 'pollfd'
|-TypedefDecl 0x561885e22f60 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x561885e221c0 'const pollfd *'
|   `-QualType 0x561885e20d61 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x561885e20d60 'pollfd' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e1eb40 'pollfd'
|         `-CXXRecord 0x561885e1eab0 'pollfd'
|-EnumDecl 0x561885e22fb8 <line:134:5> col:5
| `-EnumConstantDecl 0x561885e230b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561885e23090 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561885af0618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561885af05f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561885af05d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561885e23138 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561885e233c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e231f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e23290 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x561885e23688 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x561885e23570 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x561885e23948 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x561885e23830 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x561885e23c90 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x561885e23b70 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x561885e23fa0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x561885e23e80 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x561885e24290 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e240d8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e24150 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x561885e243e8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x561885e244c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e24520 <col:30> Inherited
|-CXXMethodDecl 0x561885e24568 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x561885e24618 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e24670 <col:30> Inherited
|-CXXMethodDecl 0x561885e24738 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x561885e247e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e24840 <col:30> Inherited
|-CXXMethodDecl 0x561885e24888 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x561885e24938 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e24990 <col:30> Inherited
|-CXXMethodDecl 0x561885e249d8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x561885e24a88 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e24ae0 <col:30> Inherited
|-CXXMethodDecl 0x561885e24b28 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x561885e24bd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e24c30 <col:30> Inherited
|-CXXMethodDecl 0x561885e24c58 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e24d08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e24db8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561885e24f78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e24e68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e24ee0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x561885e250c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561885e25038 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e25278 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x561885e25180 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e25330 <col:20>
| `-OptimizeNoneAttr 0x561885e25388 <col:30>
|-CXXMethodDecl 0x561885e254a8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x561885e253b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e25560 <col:20>
| `-OptimizeNoneAttr 0x561885e255b8 <col:30>
|-CXXMethodDecl 0x561885e25670 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e255e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e257b8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e25728 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e258e8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x561885e25a18 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x561885e25ae8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x561885e25bb8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x561885e25cf8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e25c68 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e25e40 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e25db0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e25f88 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x561885e25ef8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e26040 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561885e26140 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561885e260b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e261f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561885e262b8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x561885e263b8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x561885e26568 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e26478 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x561885e26d28 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561885e26620 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x561885e26c88 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x561885e26b88 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x561885e26e08 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885e26f58 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e26ec8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x561885e27010 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561885e27258 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e270d0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x561885e27148 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x561885e27418 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x561885e27328 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x561885e27668 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x561885e274e0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x561885e27558 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x561885e27728 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885e27988 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x561885e27890 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x561885e27a58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561885e27a58

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885e29000 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x561885e291d8 prev 0x561885e29000 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561885e29268 <col:46, col:52> col:46 public
|-TypedefDecl 0x561885e29290 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e2ae60 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x561885e2ae10 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x561885e29740 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x561885e29640 'type'
|     `-TemplateSpecializationType 0x561885e295d0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x561885e294b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x561885e29490 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x561885e29470 <col:24> 'unsigned long' 24
|       `-RecordType 0x561885e295b0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x561885e294d0 'char_array'
|-TypedefDecl 0x561885e2af18 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x561885e2aee0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x561885e2aec0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x561885e2ae60 'type'
|     `-ElaboratedType 0x561885e2ae10 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x561885e29740 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x561885e29640 'type'
|         `-TemplateSpecializationType 0x561885e295d0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x561885e294b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x561885e29490 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x561885e29470 <col:24> 'unsigned long' 24
|           `-RecordType 0x561885e295b0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x561885e294d0 'char_array'
|-CXXMethodDecl 0x561885e2b098 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x561885e2afa8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x561885e2b188 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561885e2b268 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561885e2b268
|-CXXMethodDecl 0x561885e2b538 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x561885e2b440 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x561885e2b778 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561885e2b5f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885e2b668 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561885e2b948 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561885e2b838 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885e2b8b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561885e2baa8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x561885e2bb78 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x561885e2bdc8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561885e2bc38 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x561885e2bcb0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561885e2c028 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x561885e2be98 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x561885e2bf10 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561885e2c1e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x561885e2c0f8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561885e2c3a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x561885e2c2b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561885e2c460 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885e2c510 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885e2c748 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561885e2c5c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561885e2c638 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561885e2c9e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x561885e2c8f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x561885e2cab0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x561885e2cb00 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561885e2cb50 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885e27c60 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x561885e27e68 prev 0x561885e27c60 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561885e28f70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x561885e28f20 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x561885e28f00 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x561885e28db0 'type'
|     `-SubstTemplateTypeParmType 0x561885e28bd0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x561885ab72a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885ab7248 'T'
|       `-RecordType 0x561885bee590 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x561885bee4a8 'sized_array_memory'
|-FieldDecl 0x561885e2cba0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x561885e2cbf0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561885e2cc28 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x561885e27f00 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561885aeef38 'T'
|   `-RecordType 0x561885e20620 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x561885e20590 'SelectorInfo'
|-TypedefDecl 0x561885e2cce8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x561885e2ccb0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x561885e27f00 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885e20620 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x561885e20590 'SelectorInfo'
|-TypedefDecl 0x561885e2cda8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x561885e2cd70 'const SelectSet::SelectorInfo &'
|   `-QualType 0x561885e27f01 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x561885e27f00 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e20620 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561885e20590 'SelectorInfo'
|-TypedefDecl 0x561885e2ce38 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x561885e2ce00 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x561885e27f00 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885e20620 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x561885e20590 'SelectorInfo'
|-TypedefDecl 0x561885e2cef8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x561885e2cec0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x561885e27f01 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x561885e27f00 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e20620 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561885e20590 'SelectorInfo'
|-TypedefDecl 0x561885e2db50 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x561885e2db00 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x561885e2dae0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x561885e2da18 'type'
|     `-LValueReferenceType 0x561885e2d9e0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x561885e2d781 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x561885e2d780 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x561885ac1970 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561885ac1918 'T'
|           `-RecordType 0x561885e20620 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x561885e20590 'SelectorInfo'
|-TypedefDecl 0x561885e2dbb8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x561885e2cd70 'const SelectSet::SelectorInfo &'
|   `-QualType 0x561885e27f01 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x561885e27f00 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e20620 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561885e20590 'SelectorInfo'
|-TypedefDecl 0x561885e2dc10 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-TypedefDecl 0x561885e2dc78 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x561885e2ce00 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x561885e27f00 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561885aeef38 'T'
|     `-RecordType 0x561885e20620 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x561885e20590 'SelectorInfo'
|-TypedefDecl 0x561885e2dce0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x561885e2cec0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x561885e27f01 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x561885e27f00 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x561885aeef90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561885aeef38 'T'
|       `-RecordType 0x561885e20620 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561885e20590 'SelectorInfo'
|-EnumDecl 0x561885e2dd38 <line:134:5> col:5
| `-EnumConstantDecl 0x561885e2de30 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561885e2de10 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561885af0618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561885af05f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561885af05d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561885e2deb8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561885e2e148 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e2df70 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e2e010 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x561885e2e408 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x561885e2e2f0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x561885e2e6c8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x561885e2e5b0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x561885e2ea10 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x561885e2e8f0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x561885e2ed20 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x561885e2ec00 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x561885e2f010 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e2ee58 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e2eed0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561885e2f168 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x561885e2f248 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e2f2a0 <col:30> Inherited
|-CXXMethodDecl 0x561885e2f2e8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x561885e2f398 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e2f3f0 <col:30> Inherited
|-CXXMethodDecl 0x561885e2f4b8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561885e2f568 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e2f5c0 <col:30> Inherited
|-CXXMethodDecl 0x561885e2f608 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561885e2f6b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e2f710 <col:30> Inherited
|-CXXMethodDecl 0x561885e2f758 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561885e2f808 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e2f860 <col:30> Inherited
|-CXXMethodDecl 0x561885e2f8a8 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561885e2f958 <col:20> Inherited
| `-OptimizeNoneAttr 0x561885e2f9b0 <col:30> Inherited
|-CXXMethodDecl 0x561885e2f9d8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e2fa88 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561885e2fb38 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561885e2fd08 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e2fbe8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561885e2fc70 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561885e2fe58 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561885e2fdc8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e30008 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x561885e2ff10 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e300c0 <col:20>
| `-OptimizeNoneAttr 0x561885e30118 <col:30>
|-CXXMethodDecl 0x561885e30238 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x561885e30140 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561885e302f0 <col:20>
| `-OptimizeNoneAttr 0x561885e30348 <col:30>
|-CXXMethodDecl 0x561885e30400 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e30370 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e30548 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e304b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e30678 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x561885e307a8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x561885e30878 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x561885e30948 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x561885e30a88 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x561885e309f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e30bd0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561885e30b40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561885e30d18 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x561885e30c88 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e30dd0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561885e30ed0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561885e30e40 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561885e30f88 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561885e31048 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x561885e31148 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x561885e312f8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e31208 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x561885e31ab8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561885e313b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x561885e31a18 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x561885e31918 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x561885e31b98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561885e31ce8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x561885e31c58 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561885e31da0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561885e31fe8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561885e31e60 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x561885e31ed8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561885e321a8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x561885e320b8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x561885e323f8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x561885e32270 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x561885e322e8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x561885e324b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561885e32718 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x561885e32620 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x561885e327e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561885e327e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885e1f740 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561885e1f858 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x561885e1f8e8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x561885e1f970 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x561885e1fa60 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x561885e1fa60
|-CXXMethodDecl 0x561885e1fb60 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x561885e1fe30 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x561885e1fc50 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x561885e1fcc8 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x561885e1fd48 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x561885e200a0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x561885e1ff00 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x561885e1ff78 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x561885e1fff8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x561885e201f8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x561885e20168 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x561885e202c0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x561885e33e98 <col:34, line:50:5>
|   |-BinaryOperator 0x561885e33868 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x561885e33828 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x561885e20a48
|   | | `-CXXThisExpr 0x561885e33818 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x561885e33858 <col:23> 'bool' true
|   `-CallExpr 0x561885e33e70 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x561885e33e58 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x561885e33dd8 <col:2> 'void (long)' lvalue Function 0x561885e33cd8 'ignore_result' 'void (long)' (FunctionTemplate 0x561885ab2248 'ignore_result')
|     `-CallExpr 0x561885e33a80 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x561885e33a68 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561885e339e8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x561885df11e8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x561885e33ab8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x561885e33990 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x561885e33978 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x561885e33928 <col:22> 'int [2]' lvalue ->_wake_pipe 0x561885e209e8
|       |   |   `-CXXThisExpr 0x561885e33918 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x561885e33958 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x561885e33ae8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x561885e33ad0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x561885e339b0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x561885e33b00 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x561885e339c8 <col:41> 'int' 1
|-CXXMethodDecl 0x561885e20400 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x561885e20370 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x561885e204c8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x561885e20568 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x561885e20590 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561885e206a8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x561885e20748 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x561885e207a8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x561885e20810 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x561885e208c0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x561885e20748 'read' 'Element *'
|   | `-ImplicitCastExpr 0x561885e33ef8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x561885e33eb8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x561885e207a8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x561885e33f78 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x561885e33f38 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x561885e20810 'pollfd' 'int'
|   | `-UnaryOperator 0x561885e33fd8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x561885e33fb8 <col:35> 'int' 1
|   `-CompoundStmt 0x561885e34050 <line:64:2, line:65:2>
|-FieldDecl 0x561885e209e8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x561885e20a48 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x561885e27b40 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x561885e328d0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x561885e32b08 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x561885e32938 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x561885e329b0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x561885e32a28 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x561885e32cf0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x561885e32bd8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x561885e32c58 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x561885e32f38 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x561885e32db8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x561885e32e38 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x561885e33148 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x561885e32ff8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x561885e33070 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x561885e33298 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x561885e33208 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x561885e33360 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x561885e33420 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x561885e334e8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x561885e334e8
| `-ParmVarDecl 0x561885e335f8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x561885e33698 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x561885e33698
  `-ParmVarDecl 0x561885e337a8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885cd3d38 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561885cd3e58 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x561885cd3ee8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x561885cd3f70 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x561885cd4060 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x561885cd4160 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x561885cd4220 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x561885cd42e0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x561885cd43c8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x561885cd44e8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x561885cd44e8
| `-ParmVarDecl 0x561885cd45f8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x561885e38c68 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x561885e38c68
  `-ParmVarDecl 0x561885e38d78 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885dd0a78 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561885dd0b98 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x561885dd0c38 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x561885dd0c98 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x561885e38268 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561885e38268
| `-ParmVarDecl 0x561885e38378 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x561885e38418 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x561885e38418
| `-ParmVarDecl 0x561885e38528 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x561885e38598 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x561885e38598
|-CXXMethodDecl 0x561885e38e18 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561885e38e18
| `-ParmVarDecl 0x561885e38f28 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x561885e38f98 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x561885e38f98
| `-ParmVarDecl 0x561885e390a8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x561885e3f718 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x561885e3f7f0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885cd5c30 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561885cd5d48 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x561885cd5dd8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x561885cd5e60 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x561885cd5f20 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x5618857ef580 'int'
|-CXXMethodDecl 0x561885cd5fe8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x561885cd6088 <col:45> always_inline
|-CXXMethodDecl 0x561885cd61b8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x561885cd60f0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x561885cd6260 <col:49> always_inline
|-CXXConstructorDecl 0x561885cd6358 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x561885cd6358
| `-ParmVarDecl 0x561885cd6468 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x561885cd6508 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x561885cd6508
| `-ParmVarDecl 0x561885cd6618 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x561885e38680 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x561885e38680
|-CXXMethodDecl 0x561885e39148 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x561885e39148
| `-ParmVarDecl 0x561885e39258 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x561885e392c8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x561885e392c8
  `-ParmVarDecl 0x561885e393d8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885e344c0 prev 0x561885e1f6b0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x561885e345b8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x561885e34648 <col:22, col:28> col:22 public
|-EnumDecl 0x561885e34670 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x561885e34788 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x561885e34768 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x561885e34750 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x561885e34730 <col:32> 'int' 1
| `-EnumConstantDecl 0x561885e34830 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x561885e34810 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x561885e347f8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x561885e347d8 <col:53> 'int' 1000
|-CXXMethodDecl 0x561885e348d0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x561885e34990 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x561885e34a78 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x561885e39498 <col:34, col:52>
|   `-ReturnStmt 0x561885e39488 <col:36, col:43>
|     `-MemberExpr 0x561885e39458 <col:43> 'TimerSet' lvalue ->_timers 0x561885e36748
|       `-CXXThisExpr 0x561885e39448 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x561885e34b68 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x561885e39500 <col:46, col:64>
|   `-ReturnStmt 0x561885e394f0 <col:48, col:55>
|     `-MemberExpr 0x561885e394c0 <col:55> 'const TimerSet' lvalue ->_timers 0x561885e36748
|       `-CXXThisExpr 0x561885e394b0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x561885e34c58 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x561885e39568 <col:36, col:55>
|   `-ReturnStmt 0x561885e39558 <col:38, col:45>
|     `-MemberExpr 0x561885e39528 <col:45> 'SelectSet' lvalue ->_selects 0x561885e367a8
|       `-CXXThisExpr 0x561885e39518 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x561885e34d48 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x561885e395d0 <col:48, col:67>
|   `-ReturnStmt 0x561885e395c0 <col:50, col:57>
|     `-MemberExpr 0x561885e39590 <col:57> 'const SelectSet' lvalue ->_selects 0x561885e367a8
|       `-CXXThisExpr 0x561885e39580 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x561885e34e08 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x561885e34ef8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x561885e35068 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x561885e34fa8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x561885e35130 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x561885e35578 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x561885e351e0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x561885e35460 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x561885e35648 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x561885e35708 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x561885e357c8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x561885e35908 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x561885e35878 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x561885e359d0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x561885e35a90 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x561885e35b50 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x561885e35c10 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x561885e35d50 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x561885e35cc0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x561885e35e18 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x561885e35ed8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x561885e35f78 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x561885e36040 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561885e36090 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561885e360e0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561885e36130 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561885e36180 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561885e361d0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561885e36220 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561885e36270 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561885e362c0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561885e36310 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x561885e36360 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x561885e36458 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x561885e363c8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x561885e365a8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x561885e36518 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x561885e36650 <line:104:3, col:10> col:3 private
|-FieldDecl 0x561885e36688 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x561885e366e8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x561885e36748 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x561885e367a8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x561885e36828 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x561885e36898 <col:40, col:50> aligned
|   `-ConstantExpr 0x561885e36878 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x561885e367f8 <col:48> 'int' 64
|-FieldDecl 0x561885e36908 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x561885e36968 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x561885e36a60 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x561885e36b70 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x561885e36bd0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x561885e36c50 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x561885e36cc0 <col:36, col:46> aligned
|   `-ConstantExpr 0x561885e36ca0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x561885e36c20 <col:44> 'int' 64
|-FieldDecl 0x561885e36d38 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x561885e36d98 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x561885e36de8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x561885e36e28 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x561885e36e90 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x561885e36ee0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x561885e37088 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x561885e36f18 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x561885e36f98 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x561885e37188 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x561885e37188
|-CXXMethodDecl 0x561885e37290 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x561885e37358 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x561885e396c8 <col:34, line:217:5>
|   `-ReturnStmt 0x561885e396b8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x561885e396a0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561885e39670 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x561885dc7270
|         `-ImplicitCastExpr 0x561885e39658 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x561885e39628 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x561885dc7208
|             `-MemberExpr 0x561885e395f8 <col:16> 'const TaskLink' lvalue ->_task_link 0x561885e36688
|               `-CXXThisExpr 0x561885e395e8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x561885e37418 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x561885e374d8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x561885e39df0 <col:39, line:226:5>
|   |-DeclStmt 0x561885e39918 <line:223:9, col:68>
|   | `-VarDecl 0x561885e396f0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x561885e398d0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x561885e398a0 <col:24, col:38> '<bound member function type>' .compare_swap 0x561885b18890
|   |     | `-MemberExpr 0x561885e39768 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x561885e36908
|   |     |   `-CXXThisExpr 0x561885e39758 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x561885e39858 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x561885e39840 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x561885e39818 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x561885e397f8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x561885e39900 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x561885e39880 <col:66> 'int' 0
|   |-CStyleCastExpr 0x561885e39960 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x561885e39930 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x561885e396f0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x561885e39dd0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x561885e39da0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x561885e39a78 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x561885e39a48 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x561885e39a30 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x561885e39988 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x561885e396f0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x561885e39a08 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x561885e399f0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x561885e399c8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x561885e399a8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x561885e39ad8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x561885e39ab8 <col:60> 'int' 0
|       `-CallExpr 0x561885e39d00 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x561885e39ce8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561885e39cc8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56188588d640 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x561885e39d40 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x561885e39bc8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x561885e39d58 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x561885e39bf8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x561885e39d70 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x561885e39c38 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x561885e39d88 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x561885e39cb0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x561885e39c98 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x561885e39c58 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x561885e37620 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x561885e37590 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x561885e376e8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x561885e377a8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x561885e37868 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x561885e37928 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x561885e379e8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x561885e37ae0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x561885e37b40 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x561885e37bd0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x561885e37fb8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x561885e37fb8
| `-ParmVarDecl 0x561885e380c8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x561885e38788 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x561885e38788
  `-ParmVarDecl 0x561885e38898 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885dc7580 prev 0x561885d52d50 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x561885dc76b8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x561885dc7748 <col:33, col:39> col:33 public
|-EnumDecl 0x561885dc7770 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x561885dc78b0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x561885dc7890 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x561885dc7870 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x561885dc7830 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x561885dc7850 <col:26> 'int' 16
| `-EnumConstantDecl 0x561885dc7980 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x561885dc7960 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x561885dc7940 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x561885dc7900 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x561885dc7920 <col:47> 'int' 31
|-EnumDecl 0x561885dc79d0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x561885dc7b10 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x561885dc7c30 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561885dc7af0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x561885dc7ad0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x561885dc7a90 <col:26> 'int' 1
| |       `-IntegerLiteral 0x561885dc7ab0 <col:29> 'int' 15
| `-EnumConstantDecl 0x561885dc7be0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x561885dc7c48 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885dc7bc0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x561885dc7ba0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x561885dc7b60 <col:51> 'int' 1
|         `-IntegerLiteral 0x561885dc7b80 <col:54> 'int' 10
|-CXXConstructorDecl 0x561885dc7e18 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x561885dc7c70 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x561885dc7cf0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x561885dc7f70 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x561885dc7ee0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x561885dc8068 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x561885dc8068
|-CXXMethodDecl 0x561885dc81f8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x561885dd1bd8 <col:42, line:100:5>
|   `-ReturnStmt 0x561885dd1bc8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x561885dd1bb0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x561885dd1b80 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x561885dd0900
|         `-CXXThisExpr 0x561885dd1b70 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561885dc82c0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x561885dd1c58 <col:36, line:105:5>
|   `-ReturnStmt 0x561885dd1c48 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x561885dd1c30 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561885dd1c00 <col:16> 'void *const' lvalue ->_thunk 0x561885dd0968
|         `-CXXThisExpr 0x561885dd1bf0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561885dc8380 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x561885dd1cd8 <col:37, line:110:5>
|   `-ReturnStmt 0x561885dd1cc8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x561885dd1cb0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x561885dd1c80 <col:16> 'Element *const' lvalue ->_owner 0x561885dd0a28
|         `-CXXThisExpr 0x561885dd1c70 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561885dc8440 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x561885dc8508 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x561885dc85c8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x561885dc8688 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x561885dd1dc0 <col:35, line:137:5>
|   `-ReturnStmt 0x561885dd1db0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x561885dd1d78 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x561885dd1d48 <col:16, col:24> '<bound member function type>' ->router 0x561885d65560
|         `-ImplicitCastExpr 0x561885dd1d98 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x561885dd1d30 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x561885dd1d00 <col:16> 'Element *const' lvalue ->_owner 0x561885dd0a28
|               `-CXXThisExpr 0x561885dd1cf0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561885dc8748 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x561885dc8908 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x561885dc87f8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x561885dc8870 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x561885dcf3f0 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x561885dc89c8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x561885dc8a40 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x561885dcf4c0 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x561885dd1ed0 <col:35, line:181:5>
|   `-ReturnStmt 0x561885dd1ec0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x561885dd1ea8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x561885dd1e90 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x561885dd1e60 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x561885dd0538
|           `-MemberExpr 0x561885dd1e18 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561885dd0658
|             `-MemberExpr 0x561885dd1de8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x561885dd0888
|               `-CXXThisExpr 0x561885dd1dd8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561885dcf580 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x561885dd1fe8 <col:30, line:192:5>
|   `-BinaryOperator 0x561885dd1fc8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561885dd1f70 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561885dd0538
|     | `-MemberExpr 0x561885dd1f28 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561885dd0658
|     |   `-MemberExpr 0x561885dd1ef8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561885dd0888
|     |     `-CXXThisExpr 0x561885dd1ee8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561885dd1fb0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561885dd1fa0 <col:32> 'bool' false
|-CXXMethodDecl 0x561885dcf640 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x561885dd2338 <col:30, line:206:5>
|   |-BinaryOperator 0x561885dd20e0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561885dd2088 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561885dd0538
|   | | `-MemberExpr 0x561885dd2040 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561885dd0658
|   | |   `-MemberExpr 0x561885dd2010 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561885dd0888
|   | |     `-CXXThisExpr 0x561885dd2000 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561885dd20c8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561885dd20b8 <col:32> 'bool' true
|   |-CallExpr 0x561885dd2180 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x561885dd2168 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561885dd2148 <col:9> 'void ()' lvalue Function 0x561885cd38f0 'click_fence' 'void ()'
|   `-IfStmt 0x561885dd2320 <line:204:9, line:205:32>
|     |-BinaryOperator 0x561885dd2260 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x561885dd2230 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x561885dd21e0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x561885dd0c98
|     | |   `-MemberExpr 0x561885dd21b0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x561885dd0d10
|     | |     `-CXXThisExpr 0x561885dd21a0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x561885dd2248 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x561885dd2210 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x561885dd22e0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x561885dd2290 <col:13> '<bound member function type>' ->complete_schedule 0x561885dd1710
|       | `-CXXThisExpr 0x561885dd2280 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x561885dd2308 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x561885dd22c0 <col:31> 'int' 0
|-CXXMethodDecl 0x561885dcf700 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x561885dd2460 <col:35, line:240:5>
|   `-BinaryOperator 0x561885dd2440 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561885dd23e8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561885dd0538
|     | `-MemberExpr 0x561885dd23a0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561885dd0658
|     |   `-MemberExpr 0x561885dd2370 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561885dd0888
|     |     `-CXXThisExpr 0x561885dd2360 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561885dd2428 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561885dd2418 <col:32> 'bool' true
|-CXXMethodDecl 0x561885dcf7c0 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x561885dd2678 <col:37, line:253:5>
|   |-BinaryOperator 0x561885dd2558 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561885dd2500 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561885dd0538
|   | | `-MemberExpr 0x561885dd24b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561885dd0658
|   | |   `-MemberExpr 0x561885dd2488 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561885dd0888
|   | |     `-CXXThisExpr 0x561885dd2478 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561885dd2540 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561885dd2530 <col:32> 'bool' false
|   `-BinaryOperator 0x561885dd2658 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561885dd2600 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x561885dd0598
|     | `-MemberExpr 0x561885dd25b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561885dd0658
|     |   `-MemberExpr 0x561885dd2588 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561885dd0888
|     |     `-CXXThisExpr 0x561885dd2578 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561885dd2640 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561885dd2630 <col:41> 'bool' true
|-CXXMethodDecl 0x561885dcf880 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x561885dd27f8 <col:37, line:264:5>
|   |-BinaryOperator 0x561885dd2778 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561885dd2720 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x561885dd0598
|   | | `-MemberExpr 0x561885dd26d8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561885dd0658
|   | |   `-MemberExpr 0x561885dd26a8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561885dd0888
|   | |     `-CXXThisExpr 0x561885dd2698 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561885dd2760 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561885dd2750 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x561885dd27d8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x561885dd27a8 <col:9> '<bound member function type>' ->reschedule 0x561885dcf640
|       `-CXXThisExpr 0x561885dd2798 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x561885dcf9c8 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x561885dcf938 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x561885dcfa98 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x561885dcfbe0 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x561885dcfb50 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x561885dcfd30 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x561885dcfca0 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x561885dcfdf8 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x561885dcfeb8 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x561885dcff58 <col:53> "" ""
|-CXXMethodDecl 0x561885dcfff0 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x561885dd0090 <col:47> "" ""
|-AccessSpecDecl 0x561885dd0100 <line:303:3, col:10> col:3 private
|-FieldDecl 0x561885dd0140 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x561885dd01a8 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x561885dd01f8 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561885dd0318 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x561885dd03a8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x561885dd04d8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x561885dd0538 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x561885dd0598 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x561885e3ee48 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x561885e3ef20 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561885e3ef20
| | |-CXXConstructorDecl 0x561885e3f1d8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x561885e3f1d8
| | | `-ParmVarDecl 0x561885e3f2e8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x561885e3f388 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x561885e3f388
| |   `-ParmVarDecl 0x561885e3f498 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x561885dd0658 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x561885dd06b8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x561885dd0658 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x561885dd04d8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x561885dd0710 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x561885dd0658 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x561885dd0538 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x561885dd0768 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x561885dd0658 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x561885dd0598 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x561885dd07c0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x561885e3ed58 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561885e3f6b8 <col:11>
| |-CXXConstructorDecl 0x561885e3f028 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x561885e3f028
| | `-ParmVarDecl 0x561885e3f138 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x561885e3f538 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x561885e3f538
|   `-ParmVarDecl 0x561885e3f648 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x561885dd0888 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x561885dd0900 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x561885dd0968 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x561885dd09c8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x561885dd0a28 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x561885dd0a78 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561885dd0b98 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x561885dd0c38 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x561885dd0c98 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x561885e38268 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561885e38268
| | `-ParmVarDecl 0x561885e38378 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x561885e38418 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x561885e38418
| | `-ParmVarDecl 0x561885e38528 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x561885e38598 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x561885e38598
| |-CXXMethodDecl 0x561885e38e18 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561885e38e18
| | `-ParmVarDecl 0x561885e38f28 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x561885e38f98 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x561885e38f98
| | `-ParmVarDecl 0x561885e390a8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x561885e3f718 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x561885e3f7f0 <col:11>
|-FieldDecl 0x561885dd0d10 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x561885dd0e58 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x561885dd0d98 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x561885dd1008 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x561885dd0f18 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x561885dd10d0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x561885dd1190 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x561885dd1250 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x561885dd2908 <col:41, line:355:5>
|   `-ReturnStmt 0x561885dd28f8 <line:354:9, col:38>
|     `-BinaryOperator 0x561885dd28d8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x561885dd28a8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x561885dd2858 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x561885dd0c98
|       |   `-MemberExpr 0x561885dd2828 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x561885dd0d10
|       |     `-CXXThisExpr 0x561885dd2818 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x561885dd28c0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x561885dd2888 <col:38> 'int' 0
|-CXXMethodDecl 0x561885dd1310 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x561885dd1450 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x561885dd13c0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x561885dd15c8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x561885dd1508 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x561885dd1710 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x561885dd1680 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x561885dd17d8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x561885dd19a0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x561885dd1888 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x561885dd1908 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x561885dd1aa0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x561885dd1b30 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885dc2318 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x561885dc2448 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x561885dc2f38 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.19 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561885cd8398 prev 0x561885d52e00 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561885cd8490 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x561885cd8520 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x561885cd8580 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x561885cd8628 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x561885cd8748 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x561885cd88e8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x561885cd8828 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x561885cd8b38 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x561885cd89a8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x561885cd8a28 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x561885cd8cc8 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x561885cd8c00 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x561885cd8e48 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x561885cd8d88 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x561885cd8ff8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x561885cd8f38 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x561885cd90f0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x561885dc3110 <col:21, line:58:5>
|   `-IfStmt 0x561885dc30f8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x561885dc3060 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x561885dc3030 <col:6> '<bound member function type>' ->scheduled 0x561885cd9948
|     |   `-ImplicitCastExpr 0x561885dc3080 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x561885dc3020 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x561885dc30d8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x561885dc30a8 <col:6> '<bound member function type>' ->unschedule 0x561885dc17b8
|         `-CXXThisExpr 0x561885dc3098 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x561885cd91f0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x561885dc32b0 <col:26, line:65:5>
|   |-BinaryOperator 0x561885dc31d0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x561885dc3168 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561885dc2448
|   | | `-MemberExpr 0x561885dc3138 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x561885dc2508
|   | |   `-CXXThisExpr 0x561885dc3128 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x561885dc31b8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561885dc3198 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x561885dc2968 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x561885dc3290 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x561885dc3200 <col:2> 'void *' lvalue ->_thunk 0x561885dc2588
|     | `-CXXThisExpr 0x561885dc31f0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x561885dc3268 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x561885dc3230 <col:20> 'int' 1
|-CXXMethodDecl 0x561885cd9330 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x561885cd92a0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x561885dc3410 <col:52, line:71:5>
|   |-CStyleCastExpr 0x561885dc3300 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x561885dc32d0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x561885cd92a0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x561885dc33f0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x561885dc33c0 <col:2> '<bound member function type>' ->assign 0x561885cd91f0
|       `-CXXThisExpr 0x561885dc33b0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x561885cd9500 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x561885cd93e8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x561885cd9468 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x561885dc3590 <col:58, line:79:5>
|   |-BinaryOperator 0x561885dc34d8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x561885dc3470 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561885dc2448
|   | | `-MemberExpr 0x561885dc3440 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x561885dc2508
|   | |   `-CXXThisExpr 0x561885dc3430 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x561885dc34c0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x561885dc34a0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x561885cd93e8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x561885dc3570 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x561885dc3508 <col:2> 'void *' lvalue ->_thunk 0x561885dc2588
|     | `-CXXThisExpr 0x561885dc34f8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x561885dc3558 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x561885dc3538 <col:11> 'void *' lvalue ParmVar 0x561885cd9468 'user_data' 'void *'
|-CXXMethodDecl 0x561885cd9650 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x561885cd95c0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x561885dc3728 <col:35, line:87:5>
|   |-BinaryOperator 0x561885dc3658 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x561885dc35f0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561885dc2448
|   | | `-MemberExpr 0x561885dc35c0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x561885dc2508
|   | |   `-CXXThisExpr 0x561885dc35b0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x561885dc3640 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561885dc3620 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x561885dc2b40 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x561885dc3708 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x561885dc3688 <col:2> 'void *' lvalue ->_thunk 0x561885dc2588
|     | `-CXXThisExpr 0x561885dc3678 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x561885dc36f0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x561885dc36d8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x561885dc36b8 <col:11> 'Element *' lvalue ParmVar 0x561885cd95c0 'element' 'Element *'
|-CXXMethodDecl 0x561885cd9798 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x561885cd9708 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x561885dc38c0 <col:29, line:94:5>
|   |-BinaryOperator 0x561885dc37f0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x561885dc3788 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561885dc2448
|   | | `-MemberExpr 0x561885dc3758 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x561885dc2508
|   | |   `-CXXThisExpr 0x561885dc3748 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x561885dc37d8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561885dc37b8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x561885dc2d18 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x561885dc38a0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x561885dc3820 <col:2> 'void *' lvalue ->_thunk 0x561885dc2588
|     | `-CXXThisExpr 0x561885dc3810 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x561885dc3888 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x561885dc3870 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x561885dc3850 <col:11> 'Task *' lvalue ParmVar 0x561885cd9708 'task' 'Task *'
|-CXXMethodDecl 0x561885cd9888 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x561885dc39a0 <col:37, line:100:5>
|   `-ReturnStmt 0x561885dc3990 <line:99:2, col:19>
|     `-BinaryOperator 0x561885dc3970 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x561885dc3940 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x561885dc38f0 <col:9> 'Element *const' lvalue ->_owner 0x561885dc25e8
|       |   `-CXXThisExpr 0x561885dc38e0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x561885dc3958 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x561885dc3920 <col:19> 'int' 0
|-CXXMethodDecl 0x561885cd9948 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x561885dc3a60 <col:35, line:105:5>
|   `-ReturnStmt 0x561885dc3a50 <line:104:2, col:23>
|     `-BinaryOperator 0x561885dc3a30 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x561885dc3a18 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x561885dc39c8 <col:9> 'const int' lvalue ->_schedpos1 0x561885dc2268
|       |   `-CXXThisExpr 0x561885dc39b8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x561885dc39f8 <col:23> 'int' 0
|-CXXMethodDecl 0x561885cd9a08 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x561885dc3ac8 <col:51, line:118:5>
|   `-ReturnStmt 0x561885dc3ab8 <line:117:2, col:9>
|     `-MemberExpr 0x561885dc3a88 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x561885dc22c8
|       `-CXXThisExpr 0x561885dc3a78 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561885cd9ac8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x561885dc4020 <col:37, line:136:5>
|   `-IfStmt 0x561885dc3ff8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x561885dc3b88 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x561885dc3b70 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x561885dc3b50 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x561885dc3b20 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x561885ce4ed8
|     |       `-MemberExpr 0x561885dc3af0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x561885dc22c8
|     |         `-CXXThisExpr 0x561885dc3ae0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x561885dc3f68 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x561885dc3f50 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x561885dc3f20 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x561885dc3f08 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x561885dc3ed0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x561885dc3eb8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x561885dc3e98 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561885d136b0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x561885dc3e38 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x561885dc3e20 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x561885dc3d48 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x561885dc3d30 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x561885dc3d10 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561885d13370 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x561885dc3cb0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x561885dc3bb0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x561885dc22c8
|     |         |     |   `-CXXThisExpr 0x561885dc3ba0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x561885dc3cf8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x561885dc3ce0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x561885dc3c90 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x561885dc3c78 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x561885dc3c18 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x561885d069d0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x561885dc3e80 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x561885dc3e68 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x561885dc3e00 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x561885dc3de8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x561885dc3db8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x561885b61d00 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x561885dc3fe8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x561885dc3fb8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x561885dc3f88 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x561885dc22c8
|           `-CXXThisExpr 0x561885dc3f78 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x561885cd9b88 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x561885dc4108 <col:35, line:141:5>
|   `-ReturnStmt 0x561885dc40f8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x561885dc40c0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x561885dc4090 <col:9, col:17> '<bound member function type>' ->router 0x561885d65560
|         `-ImplicitCastExpr 0x561885dc40e0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x561885dc4078 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x561885dc4048 <col:9> 'Element *const' lvalue ->_owner 0x561885dc25e8
|               `-CXXThisExpr 0x561885dc4038 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561885cd9c48 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x561885dc4188 <col:37, line:146:5>
|   `-ReturnStmt 0x561885dc4178 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x561885dc4160 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x561885dc4130 <col:9> 'Element *const' lvalue ->_owner 0x561885dc25e8
|         `-CXXThisExpr 0x561885dc4120 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561885cd9d08 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x561885dc4208 <col:41, line:151:5>
|   `-ReturnStmt 0x561885dc41f8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x561885dc41e0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x561885dc41b0 <col:9> 'RouterThread *const' lvalue ->_thread 0x561885dc2648
|         `-CXXThisExpr 0x561885dc41a0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561885cd9dd0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x561885cd9fc8 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x561885cd9e80 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x561885cd9ef8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561885dc2f28 <col:50> 'bool' false
|-CXXMethodDecl 0x561885cda148 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x561885cda088 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x561885cda290 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x561885cda200 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x561885dc0bf0 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x561885dc0b60 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x561885dc0d38 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x561885dc0ca8 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x561885dc0e80 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x561885dc0df0 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x561885dc0f48 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x561885dc4370 <col:32, line:223:5>
|   `-ExprWithCleanups 0x561885dc4358 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x561885dc4300 <col:2, col:47> 'void'
|       |-MemberExpr 0x561885dc4230 <col:2> '<bound member function type>' ->schedule_at_steady 0x561885cda290
|       | `-CXXThisExpr 0x561885dc4220 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561885dc4340 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561885dc4328 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x561885dc42e0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x561885dc42c8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x561885dc4298 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x561885b61d00 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x561885dc1088 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x561885dc0ff8 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x561885dc11d0 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561885dc1140 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885dc44f8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x561885dc44e0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x561885dc4488 <col:2, col:40> 'void'
|       |-MemberExpr 0x561885dc4398 <col:2> '<bound member function type>' ->schedule_after 0x561885dc1088
|       | `-CXXThisExpr 0x561885dc4388 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561885dc44c8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561885dc44b0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x561885dc4448 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x561885dc4418 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x561885dc43d8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885dc1140 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x561885dc4430 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x561885dc43f8 <col:38> 'int' 0
|-CXXMethodDecl 0x561885dc1318 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561885dc1288 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885dc4768 <col:58, line:249:5>
|   `-ExprWithCleanups 0x561885dc4750 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x561885dc46f8 <col:2, col:49> 'void'
|       |-MemberExpr 0x561885dc4520 <col:2> '<bound member function type>' ->schedule_after 0x561885dc1088
|       | `-CXXThisExpr 0x561885dc4510 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561885dc4738 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561885dc4720 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x561885dc46a0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x561885dc4688 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561885dc45f8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561885ce6cc8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x561885dc46e0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x561885dc46c8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561885dc45d8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885dc1288 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885dc1460 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x561885dc13d0 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x561885dc4948 <col:58, line:261:5>
|   `-ExprWithCleanups 0x561885dc4930 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x561885dc48d8 <col:2, col:38> 'void'
|       |-MemberExpr 0x561885dc4790 <col:2> '<bound member function type>' ->schedule_at_steady 0x561885cda290
|       | `-CXXThisExpr 0x561885dc4780 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561885dc4918 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561885dc4900 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x561885dc48a0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x561885dc4888 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561885dc4868 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561885d13370 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x561885dc4838 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x561885dc4820 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x561885dc47d0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x561885dc22c8
|             |     `-CXXThisExpr 0x561885dc47c0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x561885dc4800 <col:33> 'const Timestamp' lvalue ParmVar 0x561885dc13d0 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x561885dc15a8 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561885dc1518 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885dc4c20 <col:58, line:270:5>
|   `-ExprWithCleanups 0x561885dc4c08 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x561885dc4bb0 <col:2, col:79> 'void'
|       |-MemberExpr 0x561885dc4970 <col:2> '<bound member function type>' ->schedule_at_steady 0x561885cda290
|       | `-CXXThisExpr 0x561885dc4960 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561885dc4bf0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561885dc4bd8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x561885dc4b70 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x561885dc4aa8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x561885dc4a90 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x561885dc4a20 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x561885dc49f0 <col:31, col:41> '<bound member function type>' .sec 0x561885b637f8
|             | |     `-ImplicitCastExpr 0x561885dc4a40 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x561885dc49c0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x561885dc22c8
|             | |         `-CXXThisExpr 0x561885dc49b0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x561885dc4a78 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x561885dc4a58 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885dc1518 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x561885dc4b38 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x561885dc4b08 <col:60, col:70> '<bound member function type>' .subsec 0x561885b63ef0
|                 `-ImplicitCastExpr 0x561885dc4b58 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x561885dc4ad8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x561885dc22c8
|                     `-CXXThisExpr 0x561885dc4ac8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x561885dc16f0 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561885dc1660 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561885dc4f58 <col:60, line:279:5>
|   `-ExprWithCleanups 0x561885dc4f40 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x561885dc4ee8 <col:2, col:65> 'void'
|       |-MemberExpr 0x561885dc4c48 <col:2> '<bound member function type>' ->schedule_at_steady 0x561885cda290
|       | `-CXXThisExpr 0x561885dc4c38 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561885dc4f28 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561885dc4f10 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x561885dc4eb0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x561885dc4e98 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561885dc4e78 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561885d13370 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x561885dc4e18 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x561885dc4e00 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x561885dc4c88 <col:21> 'Timestamp' lvalue ->_expiry_s 0x561885dc22c8
|             |     `-CXXThisExpr 0x561885dc4c78 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x561885dc4e60 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x561885dc4e48 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x561885dc4da8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x561885dc4d90 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x561885dc4d60 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561885ce6cc8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x561885dc4de8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x561885dc4dd0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x561885dc4d40 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x561885dc1660 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561885dc17b8 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x561885dc1878 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x561885dc5420 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x561885dc4fb0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x561885dc4f80 <col:2> '<bound member function type>' ->unschedule 0x561885dc17b8
|   |   `-CXXThisExpr 0x561885dc4f70 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x561885dc5408 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x561885dc53d0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x561885dc53b8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561885dc5068 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x5618859fad98 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x561885dc4fe0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x561885dc22c8
|       | `-CXXThisExpr 0x561885dc4fd0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561885dc5050 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x561885dc5020 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x561885dc1938 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x561885dc5778 <col:42, line:310:5>
|   |-IfStmt 0x561885dc55c0 <line:306:2, line:307:23>
|   | |-CallExpr 0x561885dc54f0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x561885dc54d8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x561885dc5478 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x561885d04e40 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x561885dc55b0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x561885dc5598 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x561885dc5568 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561885dc5550 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x561885dc5520 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x561885dc5768 <line:309:2, col:33>
|     `-ExprWithCleanups 0x561885dc5750 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x561885dc5720 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561885dc5708 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x561885dc56c8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x561885dc56b0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561885dc5680 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561885ce6fe0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x561885dc56f0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x561885dc5660 <col:30> 'int' 500
|-CXXMethodDecl 0x561885dc1a78 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x561885dc19e8 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561885dc1b20 <col:69> "" ""
|-CXXMethodDecl 0x561885dc1c30 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x561885dc1ba0 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561885dc1cd8 <col:70> "" ""
|-CXXMethodDecl 0x561885dc1de8 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x561885dc1d58 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561885dc1e90 <col:71> "" ""
|-CXXMethodDecl 0x561885dc1fa0 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x561885dc1f10 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561885dc2048 <col:72> "" ""
|-EnumDecl 0x561885dc20b8 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x561885dc21c0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x561885dc2210 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561885dc21a0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x561885dc2180 <col:25> 'int' 1
|-AccessSpecDecl 0x561885dc2228 <line:339:3, col:10> col:3 private
|-FieldDecl 0x561885dc2268 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x561885dc22c8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x561885dc2318 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x561885dc2448 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x561885dc2f38 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x561885dc2508 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x561885dc2588 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x561885dc25e8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x561885dc2648 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x561885dc2798 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x561885dc26a8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x561885dc2968 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x561885dc2850 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x561885dc28d0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x561885dc2b40 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x561885dc2a28 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x561885dc2aa8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x561885dc2d18 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x561885dc2c00 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x561885dc2c80 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x561885dc2ee8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561885dd6360 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x561885ebabd8 <line:167:18>
|-CXXRecordDecl 0x561885ebac98 prev 0x561885dd6360 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x561885ebada8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
