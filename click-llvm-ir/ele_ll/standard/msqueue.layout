
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc31b8df8 prev 0x557cc31b0598 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc31b8ef0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x557cc31b8f80 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x557cc31b8ff8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x557cc31b90b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x557cc31b9180 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x557cc31b92f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x557cc31b9230 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x557cc31b93a0 <col:24>
| `-OptimizeNoneAttr 0x557cc31b93f8 <col:34>
|-CXXMethodDecl 0x557cc31b9440 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x557cc31b96f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x557cc31b94f0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x557cc31b9568 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x557cc31b95e8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x557cc31b97b0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x557cc31b97e8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x557cc31b9850 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x557cc31b98d8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x557cc31b9bf8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x557cc31b9990 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x557cc31b9a08 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x557cc31b9a80 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x557cc31b9b00 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x557cc31b9d10 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x557cc31c1688 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x557cc31c1688
| `-ParmVarDecl 0x557cc31c1798 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x557cc31c1838 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x557cc31c1838
| `-ParmVarDecl 0x557cc31c1948 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x557cc32bd3a0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc31abe10 prev 0x557cc31abb90 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557cc31abf08 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x557cc31abf98 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x557cc31abff8 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x557cc31ac0e8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x557cc31ac1e8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x557cc31ac3b8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x557cc31ac268 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x557cc31ac2e0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x557cc31ac548 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x557cc31ac480 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x557cc31ac5f0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x557cc31ac728 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x557cc31ac660 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x557cc31ac8c8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x557cc31ac808 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x557cc31aca68 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x557cc31ac9a8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x557cc31acb10 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x557cc31acc10 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x557cc31accf0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc31acbf0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x557cc31acbd0 <col:26> 'int' 1
| `-EnumConstantDecl 0x557cc31acca0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x557cc31acd08 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc31acc80 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x557cc31acc60 <col:44> 'int' 2
|-CXXMethodDecl 0x557cc31ace50 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x557cc31acd38 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x557cc31acdb8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x557cc31acfa8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x557cc31acf18 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x557cc31ad1e8 <line:48:5, col:86> col:45 used checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x557cc31ad068 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x557cc31ad0e0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x557cc31ad298 <col:20>
| `-OptimizeNoneAttr 0x557cc31ad2f0 <col:30>
|-CXXMethodDecl 0x557cc31ad3f8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x557cc31ad330 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x557cc31ad4a0 <col:20>
| `-OptimizeNoneAttr 0x557cc31ad4f8 <col:30>
|-CXXMethodDecl 0x557cc31ad548 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x557cc31ad610 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x557cc31ad728 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x557cc31ad7b0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x557cc31ad838 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x557cc31ad8c0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x557cc31ad948 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x557cc31ad9d8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x557cc31ada98 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x557cc31adb20 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x557cc31adba8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x557cc31adc30 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x557cc31adcb8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x557cc31add40 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x557cc31addd0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x557cc31ade90 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x557cc31adf20 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x557cc31ae070 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x557cc31adfd8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x557cc31ae200 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x557cc31ae130 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x557cc31ae4b0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x557cc31ae2b8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x557cc31ae338 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x557cc31ae3b8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x557cc31ae568 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x557cc31ae670 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x557cc31ae900 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc31ae650 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x557cc31ae630 <col:33> 'int' 0
| |-EnumConstantDecl 0x557cc31ae700 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x557cc31ae918 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc31ae6e0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x557cc31ae6c0 <col:32> 'int' 20
| |-EnumConstantDecl 0x557cc31ae790 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x557cc31ae930 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc31ae770 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x557cc31ae750 <col:38> 'int' 90
| |-EnumConstantDecl 0x557cc31ae820 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x557cc31ae948 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc31ae800 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x557cc31ae7e0 <col:35> 'int' 100
| `-EnumConstantDecl 0x557cc31ae8b0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x557cc31ae960 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc31ae890 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x557cc31ae870 <col:32> 'int' 2000
|-CXXMethodDecl 0x557cc31ae9a0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x557cc31aede0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x557cc31aec50 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x557cc31aecc8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557cc31aeeb0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x557cc31af030 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x557cc31aef60 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557cc31af238 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x557cc31af0e8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x557cc31af160 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557cc31af338 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x557cc31af3d8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x557cc31af4a0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x557cc31af530 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x557cc31af760 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc31af510 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x557cc31af4f0 <col:36> 'int' EnumConstant 0x557cc31af4a0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x557cc31af580 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x557cc31af5d0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x557cc31af620 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x557cc31af670 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x557cc31af6c0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x557cc31af710 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x557cc31af848 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x557cc31af788 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x557cc31af910 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x557cc31af9d0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x557cc31afa90 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x557cc31afb50 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x557cc31afc68 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x557cc31afd30 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x557cc31afeb0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x557cc31afde0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x557cc31affd8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x557cc31b01d8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x557cc31b0088 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x557cc31b0108 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x557cc31bdb28 <col:54, line:127:5>
|   |-ParenExpr 0x557cc31bd9d8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x557cc31bd9a8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x557cc31bd698 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x557cc31bd670 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x557cc31bd658 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x557cc31bd640 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x557cc31bd610 <col:31> 'Router *' lvalue ->_router 0x557cc31bb4f0
|   |   |         `-CXXThisExpr 0x557cc31bd600 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x557cc31bd6f8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc31bd6d8 <col:48> 'int' 0
|   |   `-CallExpr 0x557cc31bd908 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x557cc31bd8f0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc31bd8d0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc31bd948 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc31bd768 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x557cc31bd960 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc31bd788 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x557cc31bd978 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc31bd7c0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x557cc31bd990 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc31bd8b8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc31bd8a0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc31bd858 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x557cc31bda70 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x557cc31bda08 <col:9> 'Router *' lvalue ->_router 0x557cc31bb4f0
|   | | `-CXXThisExpr 0x557cc31bd9f8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x557cc31bda58 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cc31bda38 <col:19> 'Router *' lvalue ParmVar 0x557cc31b0088 'r' 'Router *'
|   `-BinaryOperator 0x557cc31bdb08 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x557cc31bdaa0 <col:9> 'int' lvalue ->_eindex 0x557cc31bb558
|     | `-CXXThisExpr 0x557cc31bda90 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x557cc31bdaf0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x557cc31bdad0 <col:19> 'int' lvalue ParmVar 0x557cc31b0108 'eindex' 'int'
|-CXXMethodDecl 0x557cc31b0360 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x557cc31b0298 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x557cc31b0430 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x557cc31b04f8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x557cc31b0598 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x557cc31b07e8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x557cc31b0660 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x557cc31b06e0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x557cc31b0898 <col:20>
| `-OptimizeNoneAttr 0x557cc31b08f0 <col:30>
|-CXXMethodDecl 0x557cc31b09f8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x557cc31b0930 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x557cc31b0aa0 <col:20>
| `-OptimizeNoneAttr 0x557cc31b0af8 <col:30>
|-CXXMethodDecl 0x557cc31b0bc8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x557cc31b0b38 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x557cc31b0c70 <col:20>
| `-OptimizeNoneAttr 0x557cc31b0cc8 <col:30>
|-CXXMethodDecl 0x557cc31b0e58 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x557cc31b0d00 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x557cc31b0d80 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x557cc31b0fe8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x557cc31b0f20 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x557cc31b1138 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x557cc31b10a8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x557cc31b1288 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x557cc31b11f8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x557cc31b13d8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x557cc31b1348 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x557cc31b1698 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x557cc31b1490 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x557cc31b1510 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x557cc31b15b8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x557cc31b1770 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x557cc31b1830 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x557cc31b1b00 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x557cc31b19b0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x557cc31b1a28 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x557cc31b1c28 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x557cc31b1e00 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x557cc31b1ce0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x557cc31b1d60 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x557cc31b1fe8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x557cc31b1ec8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x557cc31b1f48 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x557cc31b2358 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x557cc31b20a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x557cc31b2120 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x557cc31b21a0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x557cc31bd110 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x557cc31bd0f0 <col:106> 'int' 0
| `-ParmVarDecl 0x557cc31b2218 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557cc31bd148 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557cc31bd128 <col:126> 'int' 0
|-CXXMethodDecl 0x557cc31b26f8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x557cc31b2428 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x557cc31b24c0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x557cc31b2540 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x557cc31b25b8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557cc31bd180 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557cc31bd160 <col:114> 'int' 0
|-CXXMethodDecl 0x557cc31b2a88 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x557cc31b27d0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x557cc31b2848 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x557cc31b28c8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x557cc31bd198 <col:96> 'int' 0
| `-ParmVarDecl 0x557cc31b2940 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557cc31bd1d8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557cc31bd1b8 <col:116> 'int' 0
|-CXXMethodDecl 0x557cc31b2e08 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x557cc31b2b58 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x557cc31b2bd0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x557cc31b2c50 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x557cc31bd210 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x557cc31bd1f0 <col:109> 'int' 0
| `-ParmVarDecl 0x557cc31b2cc8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557cc31bd248 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557cc31bd228 <col:129> 'int' 0
|-CXXMethodDecl 0x557cc31b3188 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x557cc31b2ed8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x557cc31b2f50 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x557cc31b2fd0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x557cc31b3048 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557cc31bd280 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557cc31bd260 <col:117> 'int' 0
|-CXXMethodDecl 0x557cc31b3518 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x557cc31b3260 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b32d8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x557cc31b3358 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x557cc31bd298 <col:99> 'int' 0
| `-ParmVarDecl 0x557cc31b33d0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x557cc31bd2d8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x557cc31bd2b8 <col:119> 'int' 0
|-CXXMethodDecl 0x557cc31b3938 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x557cc31b35e8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x557cc31b3668 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x557cc31b36e0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x557cc31b3760 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x557cc31bd310 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x557cc31bd2f0 <col:108> 'int' 0
| `-ParmVarDecl 0x557cc31b37e0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x557cc31bd348 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x557cc31bd328 <col:141> 'int' 0
|-CXXMethodDecl 0x557cc31b3d58 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x557cc31b3a10 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x557cc31b3a90 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x557cc31b3b08 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x557cc31b3b88 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x557cc31b3c08 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x557cc31bd360 <col:121> 'int' 0
|-CXXMethodDecl 0x557cc31b4188 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x557cc31b3e38 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x557cc31b3eb8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x557cc31b3f30 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x557cc31b3fb0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x557cc31bd380 <col:98> 'int' 0
| `-ParmVarDecl 0x557cc31b4030 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x557cc31bd3a0 <col:123> 'int' 0
|-CXXMethodDecl 0x557cc31b4450 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x557cc31b4260 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x557cc31b42e0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x557cc31b4360 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x557cc31bd3c0 <col:80> 'int' 0
|-EnumDecl 0x557cc31b4508 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x557cc31b4610 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x557cc31b48a0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc31b45f0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x557cc31b45d0 <col:42> 'int' 1
| |-EnumConstantDecl 0x557cc31b46a0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x557cc31b48b8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc31b4680 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x557cc31b4660 <col:40> 'int' 2
| |-EnumConstantDecl 0x557cc31b4730 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x557cc31b48d0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc31b4710 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x557cc31b46f0 <col:44> 'int' 4
| |-EnumConstantDecl 0x557cc31b47c0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x557cc31b48e8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc31b47a0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x557cc31b4780 <col:36> 'int' 7
| `-EnumConstantDecl 0x557cc31b4850 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x557cc31b4900 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc31b4830 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x557cc31b4810 <col:34> 'int' 6
|-CXXMethodDecl 0x557cc31b4bb8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x557cc31b4928 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x557cc31b49c8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x557cc31b4a48 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x557cc31b4ac0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x557cc31bd478 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x557cc31bd460 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x557cc31bd448 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x557cc31bd428 <col:98, col:105> 'String' (CXXTemporary 0x557cc31bd428)
|           `-CXXTemporaryObjectExpr 0x557cc31bd3f0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x557cc31b4e58 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x557cc31b4c88 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x557cc31b4d00 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x557cc31b4d78 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x557cc31bd528 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x557cc31bd510 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x557cc31bd4f8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x557cc31bd4d8 <col:94, col:101> 'String' (CXXTemporary 0x557cc31bd4d8)
| |         `-CXXTemporaryObjectExpr 0x557cc31bd4a0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x557cc31bdd10 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x557cc31bdc88 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x557cc31bdc58 <col:9> '<bound member function type>' ->add_task_handlers 0x557cc31b4bb8
|     | `-CXXThisExpr 0x557cc31bdc48 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x557cc31bdcc8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x557cc31bdbc8 <col:27> 'Task *' lvalue ParmVar 0x557cc31b4c88 'task' 'Task *'
|     |-ImplicitCastExpr 0x557cc31bdce0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x557cc31bdbe8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x557cc31b4d00 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x557cc31bdcf8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x557cc31bdc08 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x557cc31b4850 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x557cc31bdc28 <col:62> 'const String' lvalue ParmVar 0x557cc31b4d78 'prefix' 'const String &'
|-CXXMethodDecl 0x557cc31b5068 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x557cc31b4f20 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x557cc31b4f98 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x557cc31bd5d8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x557cc31bd5c0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x557cc31bd5a8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x557cc31bd588 <col:70, col:77> 'String' (CXXTemporary 0x557cc31bd588)
| |         `-CXXTemporaryObjectExpr 0x557cc31bd550 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x557cc31bdee8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x557cc31bde60 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x557cc31bde30 <col:9> '<bound member function type>' ->add_task_handlers 0x557cc31b4bb8
|     | `-CXXThisExpr 0x557cc31bde20 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x557cc31bdea0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x557cc31bdda0 <col:27> 'Task *' lvalue ParmVar 0x557cc31b4f20 'task' 'Task *'
|     |-ImplicitCastExpr 0x557cc31bdeb8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x557cc31bddc0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x557cc31bded0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x557cc31bdde0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x557cc31b4850 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x557cc31bde00 <col:57> 'const String' lvalue ParmVar 0x557cc31b4f98 'prefix' 'const String &'
|-CXXMethodDecl 0x557cc31b5348 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x557cc31b5130 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b51b0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b5228 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x557cc31b55f8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x557cc31b5418 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b5498 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b5518 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x557cc31b58e8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x557cc31b56c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b5748 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b57c0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x557cc31b5b98 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x557cc31b59b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b5a38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b5ab8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x557cc31b5e48 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x557cc31b5c68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b5ce8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b5d68 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x557cc31b60f8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x557cc31b5f18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b5f98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b6010 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x557cc31b63a8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x557cc31b61c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b6248 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b62c8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x557cc31b66b8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x557cc31b64d0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b6550 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b65d0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x557cc31b6998 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x557cc31b6788 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b6808 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b68b0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x557cc31b6c78 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x557cc31b6a68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b6ae8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b6b90 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x557cc31b6ee0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x557cc31b6d48 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x557cc31b6dc8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x557cc31b6e40 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x557cc31b7188 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x557cc31b6fb0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x557cc31b7030 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x557cc31b70a8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x557cc31b7438 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x557cc31b7258 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b72d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b7358 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x557cc31b76e8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x557cc31b7508 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b7588 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b7600 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x557cc31b7998 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x557cc31b77b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b7838 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b78b0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x557cc31b7c68 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x557cc31b7a68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b7ae8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x557cc31b7b88 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x557cc31b7f98 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x557cc31b7d38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x557cc31b7db8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x557cc31b7e30 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x557cc31b7ea8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x557cc31bd5f0 <col:93> 'bool' false
|-CXXMethodDecl 0x557cc31b8180 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x557cc31b8068 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x557cc31b80e8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x557cc31b8358 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x557cc31b8240 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x557cc31b82c0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x557cc31b8638 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x557cc31b8418 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x557cc31b8490 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x557cc31b8510 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x557cc31b8588 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x557cc31b8928 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x557cc31b8708 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x557cc31b8780 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x557cc31b8800 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x557cc31b8878 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x557cc31b8b60 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x557cc31b8a00 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x557cc31b8a80 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x557cc31b8d48 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x557cc31b8c28 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x557cc31b8ca8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x557cc31b8df8 prev 0x557cc31b0598 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557cc31b8ef0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x557cc31b8f80 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x557cc31b8ff8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x557cc31b90b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x557cc31b9180 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x557cc31b92f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x557cc31b9230 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x557cc31b93a0 <col:24>
| | `-OptimizeNoneAttr 0x557cc31b93f8 <col:34>
| |-CXXMethodDecl 0x557cc31b9440 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x557cc31b96f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x557cc31b94f0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x557cc31b9568 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x557cc31b95e8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x557cc31b97b0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x557cc31b97e8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x557cc31b9850 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x557cc31b98d8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x557cc31b9bf8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x557cc31b9990 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x557cc31b9a08 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x557cc31b9a80 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x557cc31b9b00 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x557cc31b9d10 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x557cc31c1688 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x557cc31c1688
| | `-ParmVarDecl 0x557cc31c1798 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x557cc31c1838 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x557cc31c1838
| | `-ParmVarDecl 0x557cc31c1948 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x557cc32bd3a0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x557cc31b9d88 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x557cc31b9e28 <col:38> "" ""
|-CXXMethodDecl 0x557cc31b9eb8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x557cc31b9f58 <col:44> "" ""
|-AccessSpecDecl 0x557cc31b9fc8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x557cc31b9ff0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x557cc31ba0f0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x557cc31ba140 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc31ba0d0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x557cc31ba0b0 <col:27> 'int' 4
|-FieldDecl 0x557cc31ba1f8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x557cc31ba3a8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x557cc31ba460 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x557cc31bb4f0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x557cc31bb558 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x557cc31bb6a8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x557cc31bb5e8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x557cc31bb858 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x557cc31bb768 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x557cc31bba38 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x557cc31bb918 <col:20> col:23 'int'
| `-ParmVarDecl 0x557cc31bb998 <col:25> col:28 'int'
|-CXXMethodDecl 0x557cc31bbce0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x557cc31bbb00 <col:23> col:26 'int'
| |-ParmVarDecl 0x557cc31bbb80 <col:28> col:31 'int'
| `-ParmVarDecl 0x557cc31bbbf8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x557cc31bbd98 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x557cc31bbe60 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x557cc31bbeb0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x557cc31bbf00 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x557cc31bc0e0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x557cc31bbf90 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x557cc31bc008 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557cc31bc388 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x557cc31bc1a8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x557cc31bc228 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x557cc31bc2a0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x557cc31bc5a8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x557cc31bc458 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x557cc31bc4d8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x557cc31bc8e0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x557cc31bc668 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x557cc31bc6e8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x557cc31bc760 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x557cc31bc7e0 <col:57> col:60 'int'
|-CXXMethodDecl 0x557cc31bcac8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x557cc31bc9b0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x557cc31bca30 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x557cc31bcc18 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x557cc31bcb88 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x557cc31bcf98 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x557cc31bccd8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x557cc31bcd58 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x557cc31bcdd0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x557cc31bce50 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x557cc31bd0b0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Storage
         0 |   Storage::index_type _capacity
         4 |   volatile Storage::index_type _head
         8 |   volatile Storage::index_type _tail
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc3281f48 <../dummy_inc/click/standard/storage.hh:9:1, line:54:1> line:9:7 referenced class Storage definition
|-DefinitionData pass_in_registers trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc3282068 <col:1, col:7> col:7 implicit referenced class Storage
|-AccessSpecDecl 0x557cc32820f8 <col:17, col:23> col:17 public
|-TypedefDecl 0x557cc3282130 <line:11:5, col:22> col:22 referenced index_type 'uint32_t':'unsigned int'
| `-TypedefType 0x557cc2d9f9e0 'uint32_t' sugar
|   |-Typedef 0x557cc2cb14c8 'uint32_t'
|   `-TypedefType 0x557cc2c8a5a0 '__uint32_t' sugar
|     |-Typedef 0x557cc2c8a198 '__uint32_t'
|     `-BuiltinType 0x557cc2c48620 'unsigned int'
|-TypedefDecl 0x557cc3282198 <line:12:5, col:21> col:21 referenced signed_index_type 'int32_t':'int'
| `-TypedefType 0x557cc2d9fac0 'int32_t' sugar
|   |-Typedef 0x557cc2cb1328 'int32_t'
|   `-TypedefType 0x557cc2c8a510 '__int32_t' sugar
|     |-Typedef 0x557cc2c8a128 '__int32_t'
|     `-BuiltinType 0x557cc2c48580 'int'
|-VarDecl 0x557cc3282220 <line:13:5, col:59> col:29 referenced invalid_index 'const Storage::index_type':'const unsigned int' static cinit
| `-CStyleCastExpr 0x557cc32822e8 <col:45, col:59> 'Storage::index_type':'unsigned int' <NoOp>
|   `-ImplicitCastExpr 0x557cc32822d0 <col:58, col:59> 'Storage::index_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|     `-UnaryOperator 0x557cc32822a8 <col:58, col:59> 'int' prefix '-'
|       `-IntegerLiteral 0x557cc3282288 <col:59> 'int' 1
|-CXXConstructorDecl 0x557cc32823d0 <line:15:5, col:38> col:5 Storage 'void ()'
| |-CXXCtorInitializer Field 0x557cc3283c20 '_head' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x557cc3283d28 <col:23> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557cc3283ce8 <col:23> 'int' 0
| |-CXXCtorInitializer Field 0x557cc3283c80 '_tail' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x557cc3283da8 <col:33> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557cc3283d68 <col:33> 'int' 0
| `-CompoundStmt 0x557cc3283df8 <col:36, col:38>
|-CXXConversionDecl 0x557cc32824d8 <line:17:5, col:52> col:5 operator bool 'bool () const'
| `-CompoundStmt 0x557cc3283ee8 <col:27, col:52>
|   `-ReturnStmt 0x557cc3283ed8 <col:29, col:45>
|     `-BinaryOperator 0x557cc3283eb8 <col:36, col:45> 'bool' '!='
|       |-ImplicitCastExpr 0x557cc3283e88 <col:36> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x557cc3283e18 <col:36> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x557cc3283c20
|       |   `-CXXThisExpr 0x557cc3283e08 <col:36> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x557cc3283ea0 <col:45> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x557cc3283e58 <col:45> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x557cc3283c80
|           `-CXXThisExpr 0x557cc3283e48 <col:45> 'const Storage *' implicit this
|-CXXMethodDecl 0x557cc32825a8 <line:18:5, col:49> col:10 empty 'bool () const'
| `-CompoundStmt 0x557cc3283fe0 <col:24, col:49>
|   `-ReturnStmt 0x557cc3283fd0 <col:26, col:42>
|     `-BinaryOperator 0x557cc3283fb0 <col:33, col:42> 'bool' '=='
|       |-ImplicitCastExpr 0x557cc3283f80 <col:33> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x557cc3283f10 <col:33> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x557cc3283c20
|       |   `-CXXThisExpr 0x557cc3283f00 <col:33> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x557cc3283f98 <col:42> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x557cc3283f50 <col:42> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x557cc3283c80
|           `-CXXThisExpr 0x557cc3283f40 <col:42> 'const Storage *' implicit this
|-CXXMethodDecl 0x557cc3282670 <line:19:5, col:16> col:9 size 'int () const'
|-CXXMethodDecl 0x557cc32828b0 <line:20:5, col:48> col:9 used size 'int (Storage::index_type, Storage::index_type) const'
| |-ParmVarDecl 0x557cc3282720 <col:14, col:25> col:25 head 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x557cc3282798 <col:31, col:42> col:42 tail 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x557cc3282988 <line:21:5, col:46> col:9 used capacity 'int () const'
| `-CompoundStmt 0x557cc3284078 <col:26, col:46>
|   `-ReturnStmt 0x557cc3284068 <col:28, col:35>
|     `-ImplicitCastExpr 0x557cc3284050 <col:35> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x557cc3284038 <col:35> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x557cc3284008 <col:35> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x557cc3283b98
|           `-CXXThisExpr 0x557cc3283ff8 <col:35> 'const Storage *' implicit this
|-CXXMethodDecl 0x557cc3282a78 <line:23:5, col:45> col:16 used head 'Storage::index_type () const'
| `-CompoundStmt 0x557cc32840f8 <col:29, col:45>
|   `-ReturnStmt 0x557cc32840e8 <col:31, col:38>
|     `-ImplicitCastExpr 0x557cc32840d0 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x557cc32840a0 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x557cc3283c20
|         `-CXXThisExpr 0x557cc3284090 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x557cc3282b38 <line:24:5, col:45> col:16 used tail 'Storage::index_type () const'
| `-CompoundStmt 0x557cc3284178 <col:29, col:45>
|   `-ReturnStmt 0x557cc3284168 <col:31, col:38>
|     `-ImplicitCastExpr 0x557cc3284150 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x557cc3284120 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x557cc3283c80
|         `-CXXThisExpr 0x557cc3284110 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x557cc3282cd8 <line:26:5, line:28:5> line:26:16 used next_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x557cc3282be8 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x557cc3284368 <col:43, line:28:5>
|   `-ReturnStmt 0x557cc3284358 <line:27:2, col:32>
|     `-ParenExpr 0x557cc3284338 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x557cc3284308 <col:10, col:31> 'unsigned int'
|         |-BinaryOperator 0x557cc3284220 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x557cc32841f0 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x557cc3284190 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x557cc3282be8 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x557cc3284208 <col:13> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         |   `-MemberExpr 0x557cc32841c0 <col:13> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x557cc3283b98
|         |     `-CXXThisExpr 0x557cc32841b0 <col:13> 'const Storage *' implicit this
|         |-BinaryOperator 0x557cc32842b0 <col:25, col:27> 'unsigned int' '+'
|         | |-ImplicitCastExpr 0x557cc3284280 <col:25> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x557cc3284240 <col:25> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x557cc3282be8 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x557cc3284298 <col:27> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x557cc3284260 <col:27> 'int' 1
|         `-ImplicitCastExpr 0x557cc32842f0 <col:31> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x557cc32842d0 <col:31> 'int' 0
|-CXXMethodDecl 0x557cc3282e20 <line:29:5, line:31:5> line:29:16 used prev_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x557cc3282d90 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x557cc3284558 <col:43, line:31:5>
|   `-ReturnStmt 0x557cc3284548 <line:30:2, col:32>
|     `-ParenExpr 0x557cc3284528 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x557cc32844f8 <col:10, col:23> 'unsigned int'
|         |-BinaryOperator 0x557cc32843f0 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x557cc32843c0 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x557cc3284380 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x557cc3282d90 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x557cc32843d8 <col:13> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x557cc32843a0 <col:13> 'int' 0
|         |-BinaryOperator 0x557cc3284480 <col:17, col:19> 'unsigned int' '-'
|         | |-ImplicitCastExpr 0x557cc3284450 <col:17> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x557cc3284410 <col:17> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x557cc3282d90 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x557cc3284468 <col:19> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x557cc3284430 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x557cc32844e0 <col:23> 'Storage::index_type':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x557cc32844b0 <col:23> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x557cc3283b98
|             `-CXXThisExpr 0x557cc32844a0 <col:23> 'const Storage *' implicit this
|-CXXMethodDecl 0x557cc3282f98 <line:34:5, col:54> col:10 set_capacity 'void (Storage::index_type)'
| |-ParmVarDecl 0x557cc3282ed8 <col:23, col:34> col:34 used c 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x557cc3284608 <col:37, col:54>
|   `-BinaryOperator 0x557cc32845e8 <col:39, col:51> 'Storage::index_type':'unsigned int' lvalue '='
|     |-MemberExpr 0x557cc3284580 <col:39> 'Storage::index_type':'unsigned int' lvalue ->_capacity 0x557cc3283b98
|     | `-CXXThisExpr 0x557cc3284570 <col:39> 'Storage *' implicit this
|     `-ImplicitCastExpr 0x557cc32845d0 <col:51> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x557cc32845b0 <col:51> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x557cc3282ed8 'c' 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x557cc32830e0 <line:35:5, col:38> col:17 used set_head 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x557cc3283050 <col:26, col:37> col:37 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x557cc3283228 <line:36:5, col:38> col:17 used set_tail 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x557cc3283198 <col:26, col:37> col:37 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x557cc3283370 <line:37:5, col:46> col:17 used set_head_release 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x557cc32832e0 <col:34, col:45> col:45 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x557cc32834b8 <line:38:5, col:46> col:17 set_tail_acquire 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x557cc3283428 <col:34, col:45> col:45 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x557cc32835a8 <line:39:5, col:43> col:23 reserve_tail_atomic 'Storage::index_type ()' inline
|-CXXMethodDecl 0x557cc3283848 <line:41:5, line:43:35> line:41:24 packet_memory_barrier 'void (Packet *volatile &, volatile Storage::index_type &)' static inline
| |-ParmVarDecl 0x557cc3283690 <col:46, col:64> col:64 packet 'Packet *volatile &'
| |-ParmVarDecl 0x557cc3283738 <line:42:46, col:67> col:67 index 'volatile Storage::index_type &'
| `-DeprecatedAttr 0x557cc32838f8 <line:43:24> "" ""
|-CXXMethodDecl 0x557cc3283a48 <line:44:5, line:45:35> line:44:17 packet_memory_barrier 'void (Packet *volatile &)' inline
| |-ParmVarDecl 0x557cc3283980 <col:39, col:57> col:57 packet 'Packet *volatile &'
| `-DeprecatedAttr 0x557cc3283af0 <line:45:24> "" ""
|-AccessSpecDecl 0x557cc3283b60 <line:47:3, col:12> col:3 protected
|-FieldDecl 0x557cc3283b98 <line:48:5, col:16> col:16 referenced _capacity 'Storage::index_type':'unsigned int'
|-AccessSpecDecl 0x557cc3283be8 <line:50:3, col:10> col:3 private
|-FieldDecl 0x557cc3283c20 <line:51:5, col:25> col:25 referenced _head 'volatile Storage::index_type':'volatile unsigned int'
|-FieldDecl 0x557cc3283c80 <line:52:5, col:25> col:25 referenced _tail 'volatile Storage::index_type':'volatile unsigned int'
`-CXXDestructorDecl 0x557cc328c780 <line:9:7> col:7 implicit ~Storage 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.Storage = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.Storage = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SimpleQueue
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class Storage (base)
       108 |     Storage::index_type _capacity
       112 |     volatile Storage::index_type _head
       116 |     volatile Storage::index_type _tail
       120 |   class Packet *volatile * _q
       128 |   volatile int _drops
       132 |   int _highwater_length
           | [sizeof=136, dsize=136, align=8,
           |  nvsize=136, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc2f6b8d0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc2f6b9e8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x557cc2f6ba78 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x557cc2f6bb48 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x557cc2f6bc30 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x557cc2f6be48 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x557cc2f6bcf0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc2f6bff8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x557cc2f6bf00 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x557cc2f6c140 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x557cc2f6c0b0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x557cc2f6c288 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x557cc2f6c1f8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc2f6c3d0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x557cc2f6c340 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc2f6c498 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x557cc2f6c5e0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x557cc2f6c550 <col:28> col:31 'int'
|-CXXMethodDecl 0x557cc2f6c6a8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x557cc2f6c7f0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x557cc2f6c760 <col:28> col:31 'int'
|-CXXMethodDecl 0x557cc2f6c968 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x557cc2f6c8a8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc2f6cab0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x557cc2f6ca20 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc2f6cb78 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x557cc2f6cd38 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x557cc2f6cc28 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x557cc2f6cca0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc2f6cf88 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x557cc2f6cdf8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x557cc2f6ce70 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557cc2f6d038 <col:86> "" ""
|-CXXMethodDecl 0x557cc2f6d2a8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x557cc2f6d118 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x557cc2f6d190 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc2f6d458 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x557cc2f6d368 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x557cc2f6d608 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x557cc2f6d510 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x557cc2f6d8d8 <line:81:5, col:98> col:28 used compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x557cc2f6d6c0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x557cc2f6d738 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x557cc2f6d7b0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc2f6dbb8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x557cc2f6d9a0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x557cc2f6da18 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x557cc2f6da90 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557cc2f6dc70 <col:115> "" ""
|-AccessSpecDecl 0x557cc2f6dce0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x557cc2f6dd18 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc2f6e220 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x557cc2f6e220
| `-ParmVarDecl 0x557cc2f6e328 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x557cc2f6e3c8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x557cc2f6e3c8
| `-ParmVarDecl 0x557cc2f6e4d8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x557cc2fa3b08 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x557cc3195900 <col:7>
|-CXXConstructorDecl 0x557cc2fa3be0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x557cc2fa3be0
| `-ParmVarDecl 0x557cc2fa3cf8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x557cc2fa3d68 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x557cc2fa3d68
| `-ParmVarDecl 0x557cc2fa3e78 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x557cc3198300 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc31844a8 prev 0x557cc31796b0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc31845a0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x557cc3184690 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x557cc31847b8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x557cc3184938 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x557cc3184ab8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x557cc3184c38 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x557cc3195a68 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x557cc31962d8 <col:11>
|-CXXDestructorDecl 0x557cc3195b40 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x557cc3195c78 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x557cc3195c78
| `-ParmVarDecl 0x557cc3195d88 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x557cc3195e28 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x557cc3195e28
| `-ParmVarDecl 0x557cc3195f38 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x557cc3198cf8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x557cc3198e08 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x557cc3199088 <col:11>
|   `-ReturnStmt 0x557cc3199078 <col:11>
|     `-UnaryOperator 0x557cc3199060 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x557cc3199050 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x557cc3198e78 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x557cc3198e78
  `-ParmVarDecl 0x557cc3198f88 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc3184ca0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc3184db8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x557cc3184e58 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x557cc3184ec0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x557cc3184f28 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x557cc3184f90 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x557cc3184ff0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x557cc31850b0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x557cc3185110 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x557cc3185170 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x557cc3195978 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x557cc3184e58 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x557cc31962e8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x557cc3196340 <col:12>
|-CXXConstructorDecl 0x557cc3195fa8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x557cc3195fa8
| `-ParmVarDecl 0x557cc31960b8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x557cc3196158 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x557cc3196158
| `-ParmVarDecl 0x557cc3196268 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x557cc31983e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc3172dc0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557cc3172ed8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x557cc3172f68 <col:16, col:22> col:16 public
|-EnumDecl 0x557cc3172f90 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x557cc3173090 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x557cc3173170 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc3173070 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x557cc3173050 <col:21> 'int' 28
| `-EnumConstantDecl 0x557cc3173120 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x557cc3173188 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc3173100 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x557cc31730e0 <col:22> 'int' 64
|-CXXMethodDecl 0x557cc31734c8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x557cc31731b0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x557cc3173230 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x557cc31732a8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x557cc3173320 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x557cc3173588 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x557cc3173788 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x557cc3173600 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x557cc3173678 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x557cc3173838 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x557cc3173998 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x557cc31738a8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x557cc3173a40 <col:72> warn_unused_result ""
|-TypedefDecl 0x557cc3173da0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x557cc3173d30 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x557cc3173cd0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x557cc3173c90 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x557cc2c484e0 'void'
|       |-PointerType 0x557cc2ef3160 'unsigned char *'
|       | `-BuiltinType 0x557cc2c485e0 'unsigned char'
|       |-TypedefType 0x557cc2cef730 'size_t' sugar
|       | |-Typedef 0x557cc2cb8be0 'size_t'
|       | `-BuiltinType 0x557cc2c48640 'unsigned long'
|       `-PointerType 0x557cc2c48ce0 'void *'
|         `-BuiltinType 0x557cc2c484e0 'void'
|-CXXMethodDecl 0x557cc3174218 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x557cc3173e10 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x557cc3173e88 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x557cc3173f20 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x557cc3173fa0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x557cc318e910 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x557cc318e8f8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x557cc318e8c0 <col:58> 'int' 0
| |-ParmVarDecl 0x557cc3174020 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x557cc318e938 <col:76> 'int' 0
| |-ParmVarDecl 0x557cc31740a0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x557cc318e958 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x557cc31742e8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x557cc3174368 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x557cc3174428 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x557cc31744c8 <col:20>
| `-OptimizeNoneAttr 0x557cc3174520 <col:30>
|-CXXMethodDecl 0x557cc3174598 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x557cc3174638 <col:20>
| `-OptimizeNoneAttr 0x557cc3174690 <col:30>
|-CXXMethodDecl 0x557cc3174708 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x557cc31747a8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x557cc3174858 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x557cc31748f8 <col:20>
| |-OptimizeNoneAttr 0x557cc3174950 <col:30>
| `-WarnUnusedResultAttr 0x557cc3174978 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x557cc31749d0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x557cc3174a70 <col:20>
| `-OptimizeNoneAttr 0x557cc3174ac8 <col:30>
|-CXXMethodDecl 0x557cc3174b18 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x557cc3174bb8 <col:20>
| `-OptimizeNoneAttr 0x557cc3174c10 <col:30>
|-CXXMethodDecl 0x557cc3174c58 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x557cc3174cf8 <col:20>
| `-OptimizeNoneAttr 0x557cc3174d50 <col:30>
|-CXXMethodDecl 0x557cc3174d98 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x557cc3174e58 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x557cc3174f20 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x557cc3174fe8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x557cc31750a8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x557cc31751c8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x557cc318ea20 <col:54, line:99:5>
|   `-ReturnStmt 0x557cc318ea10 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x557cc318e9f8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x557cc318e9c8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x557cc31854a8
|         `-CXXThisExpr 0x557cc318e9b8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x557cc3175368 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x557cc3175278 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x557cc318ead0 <col:67, line:103:5>
|   `-BinaryOperator 0x557cc318eab0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x557cc318ea48 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x557cc31854a8
|     | `-CXXThisExpr 0x557cc318ea38 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x557cc318ea98 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x557cc318ea78 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x557cc3175278 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x557cc3175460 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x557cc318eb50 <col:33, line:107:5>
|   `-ReturnStmt 0x557cc318eb40 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x557cc318eb28 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x557cc318eaf8 <col:16> 'void *' lvalue ->_destructor_argument 0x557cc3185510
|         `-CXXThisExpr 0x557cc318eae8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x557cc3175520 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x557cc318f180 <col:25, line:113:5>
|   |-ParenExpr 0x557cc318eec8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x557cc318ee98 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x557cc318ec08 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x557cc318ebe0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x557cc318eba8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x557cc318eb78 <col:24> '<bound member function type>' ->shared 0x557cc3174598
|   |   |       `-ImplicitCastExpr 0x557cc318ebc8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x557cc318eb68 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x557cc318ec68 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc318ec48 <col:42> 'int' 0
|   |   `-CallExpr 0x557cc318edf8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x557cc318ede0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc318edc0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc318ee38 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc318ecd8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x557cc318ee50 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc318ed00 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc318ee68 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc318ed38 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x557cc318ee80 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc318eda8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc318ed90 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc318ed58 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x557cc318f0c8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x557cc318eef8 <col:2> 'unsigned char *' lvalue ->_head 0x557cc31852b0
|   | | `-CXXThisExpr 0x557cc318eee8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x557cc318f0b0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x557cc318f090 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x557cc318ef38 <col:10> 'unsigned char *' lvalue ->_data 0x557cc3185318
|   |     | `-CXXThisExpr 0x557cc318ef28 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x557cc318f078 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x557cc318f058 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x557cc318ef78 <col:18> 'unsigned char *' lvalue ->_tail 0x557cc3185380
|   |         | `-CXXThisExpr 0x557cc318ef68 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x557cc318f040 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x557cc318f020 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x557cc318efb8 <col:26> 'unsigned char *' lvalue ->_end 0x557cc31853e8
|   |             | `-CXXThisExpr 0x557cc318efa8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x557cc318f008 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x557cc318efe8 <col:33> 'int' 0
|   `-BinaryOperator 0x557cc318f160 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x557cc318f0f8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x557cc31854a8
|     | `-CXXThisExpr 0x557cc318f0e8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x557cc318f148 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x557cc318f128 <col:16> 'int' 0
|-CXXMethodDecl 0x557cc3175660 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x557cc31755d0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557cc3175708 <col:20>
| |-OptimizeNoneAttr 0x557cc3175760 <col:30>
| `-WarnUnusedResultAttr 0x557cc3175788 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x557cc3175858 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x557cc31757c8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557cc3175900 <col:20>
| |-OptimizeNoneAttr 0x557cc3175958 <col:30>
| `-WarnUnusedResultAttr 0x557cc3175980 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x557cc3175ab8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x557cc31759c0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x557cc3175b60 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x557cc3175c60 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x557cc3175bd0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557cc3175d08 <col:20>
| `-OptimizeNoneAttr 0x557cc3175d60 <col:30>
|-CXXMethodDecl 0x557cc3175e28 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x557cc3175d98 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x557cc3175ed0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x557cc3175fd0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x557cc3175f40 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x557cc3176078 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x557cc3176178 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x557cc31760e8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557cc3176220 <col:20>
| `-OptimizeNoneAttr 0x557cc3176278 <col:30>
|-CXXMethodDecl 0x557cc3176408 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x557cc31762b8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x557cc3176330 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x557cc318e978 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x557cc31764b8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x557cc31766b8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x557cc3176530 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x557cc31765a8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc31768c8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x557cc3176778 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x557cc31767f0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc3176ad8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x557cc3176988 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x557cc3176a08 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x557cc318e988 <col:39> 'int' 0
|-CXXMethodDecl 0x557cc3176ba8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x557cc3176c70 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x557cc3176d38 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x557cc3176df8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x557cc3176ec0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x557cc3177008 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x557cc3176f78 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x557cc31771d8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x557cc31770c8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x557cc3177140 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc31772a8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x557cc3177368 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x557cc3177408 <col:20>
| `-OptimizeNoneAttr 0x557cc3177460 <col:30>
|-CXXMethodDecl 0x557cc31774b0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x557cc3177550 <col:20>
| `-OptimizeNoneAttr 0x557cc31775a8 <col:30>
|-CXXMethodDecl 0x557cc31775f8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x557cc31776b8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x557cc3177780 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x557cc3177820 <col:20>
| `-OptimizeNoneAttr 0x557cc3177878 <col:30>
|-CXXMethodDecl 0x557cc31779c8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x557cc31778b8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x557cc3177930 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc3177b18 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x557cc3177a88 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc3177bf0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x557cc3177cb0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x557cc3177d50 <col:20>
| `-OptimizeNoneAttr 0x557cc3177da8 <col:30>
|-CXXMethodDecl 0x557cc3177df8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x557cc3177e98 <col:20>
| `-OptimizeNoneAttr 0x557cc3177ef0 <col:30>
|-CXXMethodDecl 0x557cc3177f40 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x557cc3178008 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x557cc31780a8 <col:20>
| `-OptimizeNoneAttr 0x557cc3178100 <col:30>
|-CXXMethodDecl 0x557cc3178148 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x557cc3178268 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x557cc31783d8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x557cc3178318 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x557cc31784c8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x557cc3178568 <col:20>
| `-OptimizeNoneAttr 0x557cc31785c0 <col:30>
|-CXXMethodDecl 0x557cc3178610 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x557cc31786d0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x557cc3178908 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x557cc3178780 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x557cc31787f8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557cc31789b8 <col:20>
| `-OptimizeNoneAttr 0x557cc3178a10 <col:30>
|-CXXMethodDecl 0x557cc3178ab8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x557cc3178b58 <col:20>
| `-OptimizeNoneAttr 0x557cc3178bb0 <col:30>
|-CXXMethodDecl 0x557cc3178c00 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x557cc3178ca0 <col:20>
| `-OptimizeNoneAttr 0x557cc3178cf8 <col:30>
|-CXXMethodDecl 0x557cc3178d40 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x557cc3178de0 <col:20>
| `-OptimizeNoneAttr 0x557cc3178e38 <col:30>
|-CXXMethodDecl 0x557cc3178f38 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x557cc3178e70 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x557cc3178fe0 <col:20>
| `-OptimizeNoneAttr 0x557cc3179038 <col:30>
|-CXXMethodDecl 0x557cc31791f8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x557cc3179070 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x557cc31790e8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557cc31792a8 <col:20>
| `-OptimizeNoneAttr 0x557cc3179300 <col:30>
|-CXXMethodDecl 0x557cc31793a8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x557cc31794c8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x557cc31795e8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x557cc3179688 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x557cc31796b0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x557cc31797d8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x557cc3179878 <col:20>
| `-OptimizeNoneAttr 0x557cc31798d0 <col:30>
|-CXXMethodDecl 0x557cc3179978 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x557cc3179a18 <col:20>
| `-OptimizeNoneAttr 0x557cc3179a70 <col:30>
|-AccessSpecDecl 0x557cc3179a98 <line:344:3, col:9> col:3 public
|-EnumDecl 0x557cc3179ac0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x557cc3179bc0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x557cc3179c10 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc3179ba0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x557cc3179b80 <col:14> 'int' 48
|-CXXMethodDecl 0x557cc3179c78 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x557cc3179d18 <col:20>
| `-OptimizeNoneAttr 0x557cc3179d70 <col:30>
|-CXXMethodDecl 0x557cc3179de8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x557cc3179e88 <col:20>
| `-OptimizeNoneAttr 0x557cc3179ee0 <col:30>
|-CXXMethodDecl 0x557cc3179fa8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x557cc3179f18 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x557cc317a148 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x557cc317a2e8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x557cc317a1f8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x557cc317a390 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x557cc317a490 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x557cc317a840 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317a470 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x557cc317a450 <col:9> 'int' 0
| |-EnumConstantDecl 0x557cc317a520 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x557cc317a858 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317a500 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x557cc317a4e0 <col:14> 'int' 1
| |-EnumConstantDecl 0x557cc317a5b0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x557cc317a870 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317a590 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x557cc317a570 <col:14> 'int' 2
| |-EnumConstantDecl 0x557cc317a640 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x557cc317a888 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317a620 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x557cc317a600 <col:14> 'int' 3
| |-EnumConstantDecl 0x557cc317a6d0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x557cc317a8a0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317a6b0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x557cc317a690 <col:13> 'int' 4
| |-EnumConstantDecl 0x557cc317a760 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x557cc317a8b8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317a740 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x557cc317a720 <col:13> 'int' 5
| `-EnumConstantDecl 0x557cc317a7f0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x557cc317a8d0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc317a7d0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x557cc317a7b0 <col:14> 'int' 6
|-CXXMethodDecl 0x557cc317a938 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x557cc317a9d8 <col:20>
| `-OptimizeNoneAttr 0x557cc317aa30 <col:30>
|-CXXMethodDecl 0x557cc317ab28 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x557cc317aa68 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x557cc317abd0 <col:20>
| `-OptimizeNoneAttr 0x557cc317ac28 <col:30>
|-CXXMethodDecl 0x557cc317ac98 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x557cc317adc0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x557cc317af38 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x557cc317ae70 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x557cc317b000 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x557cc317b0c8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x557cc317b208 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x557cc317b178 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x557cc317b2b0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x557cc317b3b0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x557cc317b5b0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317b390 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x557cc317b370 <col:23> 'int' 0
| |-EnumConstantDecl 0x557cc317b440 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x557cc317b5c8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317b420 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x557cc317b400 <col:45> 'int' 4
| |-EnumConstantDecl 0x557cc317b4d0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x557cc317b5e0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317b4b0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x557cc317b490 <col:24> 'int' 0
| `-EnumConstantDecl 0x557cc317b560 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x557cc317b5f8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc317b540 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x557cc317b520 <col:47> 'int' 16
|-CXXMethodDecl 0x557cc317b658 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x557cc317b7c8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x557cc317b708 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x557cc317b870 <col:20>
| `-OptimizeNoneAttr 0x557cc317b8c8 <col:30>
|-CXXMethodDecl 0x557cc317b918 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x557cc318f2a0 <col:18, col:36>
|   `-ReturnStmt 0x557cc318f290 <col:20, col:33>
|     `-ImplicitCastExpr 0x557cc318f278 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x557cc318f258 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x557cc318f228 <col:27> '<bound member function type>' ->xanno 0x557cc3179978
|           `-CXXThisExpr 0x557cc318f218 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x557cc317ba10 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x557cc318f3b0 <col:30, col:48>
|   `-ReturnStmt 0x557cc318f3a0 <col:32, col:45>
|     `-ImplicitCastExpr 0x557cc318f388 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x557cc318f368 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x557cc318f338 <col:39> '<bound member function type>' ->xanno 0x557cc31797d8
|           `-CXXThisExpr 0x557cc318f328 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x557cc317baf8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x557cc318f548 <col:24, col:50>
|   `-ReturnStmt 0x557cc318f538 <col:26, col:47>
|     `-UnaryOperator 0x557cc318f520 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x557cc318f500 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x557cc318f4e8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x557cc318f498 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x557cc31847b8
|         |   `-CXXMemberCallExpr 0x557cc318f478 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x557cc318f448 <col:34> '<bound member function type>' ->xanno 0x557cc3179978
|         |       `-CXXThisExpr 0x557cc318f438 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x557cc318f4c8 <col:46> 'int' 0
|-CXXMethodDecl 0x557cc317bc00 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x557cc318f718 <col:36, col:62>
|   `-ReturnStmt 0x557cc318f708 <col:38, col:59>
|     `-UnaryOperator 0x557cc318f6f0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x557cc318f6d0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x557cc318f6b8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x557cc318f630 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x557cc31847b8
|         |   `-CXXMemberCallExpr 0x557cc318f610 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x557cc318f5e0 <col:46> '<bound member function type>' ->xanno 0x557cc31797d8
|         |       `-CXXThisExpr 0x557cc318f5d0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x557cc318f660 <col:58> 'int' 0
|-CXXMethodDecl 0x557cc317bd18 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x557cc318f8b0 <col:26, col:53>
|   `-ReturnStmt 0x557cc318f8a0 <col:28, col:50>
|     `-UnaryOperator 0x557cc318f888 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x557cc318f868 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x557cc318f850 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x557cc318f800 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x557cc3184ab8
|         |   `-CXXMemberCallExpr 0x557cc318f7e0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x557cc318f7b0 <col:36> '<bound member function type>' ->xanno 0x557cc3179978
|         |       `-CXXThisExpr 0x557cc318f7a0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x557cc318f830 <col:49> 'int' 0
|-CXXMethodDecl 0x557cc317be38 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x557cc318fa88 <col:38, col:65>
|   `-ReturnStmt 0x557cc318fa78 <col:40, col:62>
|     `-UnaryOperator 0x557cc318fa60 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x557cc318fa40 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x557cc318fa28 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x557cc318f998 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x557cc3184ab8
|         |   `-CXXMemberCallExpr 0x557cc318f978 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x557cc318f948 <col:48> '<bound member function type>' ->xanno 0x557cc31797d8
|         |       `-CXXThisExpr 0x557cc318f938 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x557cc318f9c8 <col:61> 'int' 0
|-CXXMethodDecl 0x557cc317bfe8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x557cc317bef0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x557cc3190158 <col:34, line:463:5>
|   |-ParenExpr 0x557cc318ffa0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x557cc318ff70 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x557cc318fbd8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc318fba8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc318faf8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc318fae0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc318faa0 <col:23> 'int' lvalue ParmVar 0x557cc317bef0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc318fac0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc318fb88 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557cc318fb58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc318fb18 <col:33> 'int' lvalue ParmVar 0x557cc317bef0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x557cc318fb70 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x557cc318fb38 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x557cc318fc38 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc318fc18 <col:56> 'int' 0
|   |   `-CallExpr 0x557cc318fed0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x557cc318feb8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc318fe98 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc318ff10 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc318fd28 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x557cc318ff28 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc318fd58 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc318ff40 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc318fd90 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x557cc318ff58 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc318fe80 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc318fe68 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc318fe28 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x557cc3190148 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x557cc3190130 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x557cc3190110 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x557cc31900e0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x557cc3190090 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x557cc31847b8
|         |   `-CXXMemberCallExpr 0x557cc3190070 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x557cc3190040 <col:9> '<bound member function type>' ->xanno 0x557cc31797d8
|         |       `-CXXThisExpr 0x557cc3190030 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x557cc31900f8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x557cc31900c0 <col:21> 'int' lvalue ParmVar 0x557cc317bef0 'i' 'int'
|-CXXMethodDecl 0x557cc317c238 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x557cc317c0a8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x557cc317c120 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x557cc31907e8 <col:40, line:472:5>
|   |-ParenExpr 0x557cc3190600 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x557cc31905d0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x557cc31902b0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc3190280 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc31901d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc31901b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc3190178 <col:23> 'int' lvalue ParmVar 0x557cc317c0a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc3190198 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc3190260 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557cc3190230 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc31901f0 <col:33> 'int' lvalue ParmVar 0x557cc317c0a8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x557cc3190248 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x557cc3190210 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x557cc3190310 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc31902f0 <col:56> 'int' 0
|   |   `-CallExpr 0x557cc3190530 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x557cc3190518 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc31904f8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc3190570 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3190380 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x557cc3190588 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc31903b0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc31905a0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc31903e8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x557cc31905b8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc31904e0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc31904c8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc3190488 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x557cc31907c8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x557cc3190770 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x557cc3190740 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x557cc31906f0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x557cc31847b8
|     | |   `-CXXMemberCallExpr 0x557cc31906d0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x557cc31906a0 <col:2> '<bound member function type>' ->xanno 0x557cc3179978
|     | |       `-CXXThisExpr 0x557cc3190690 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x557cc3190758 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x557cc3190720 <col:14> 'int' lvalue ParmVar 0x557cc317c0a8 'i' 'int'
|     `-ImplicitCastExpr 0x557cc31907b0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x557cc3190790 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x557cc317c120 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x557cc317c3f8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x557cc317c300 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x557cc3190f68 <col:36, line:485:5>
|   |-ParenExpr 0x557cc3190cd0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x557cc3190ca0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557cc3190980 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc3190950 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc3190860 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc3190848 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc3190808 <col:23> 'int' lvalue ParmVar 0x557cc317c300 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc3190828 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc3190930 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557cc3190918 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc3190880 <col:33> 'int' lvalue ParmVar 0x557cc317c300 'i' 'int'
|   |   |     `-BinaryOperator 0x557cc31908f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557cc31908e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557cc31908a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557cc31908c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x557cc31909e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc31909c0 <col:60> 'int' 0
|   |   `-CallExpr 0x557cc3190c00 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557cc3190be8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc3190bc8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc3190c40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3190a50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x557cc3190c58 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3190a88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc3190c70 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc3190ac0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x557cc3190c88 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc3190bb0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc3190b98 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc3190b58 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x557cc3190f58 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x557cc3190f40 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x557cc3190f28 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x557cc3190ef8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x557cc3190e98 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x557cc3190e68 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x557cc3190de0 <col:61, col:70> 'char const[48]' lvalue ->c 0x557cc3184690
|             |   `-CXXMemberCallExpr 0x557cc3190dc0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x557cc3190d90 <col:61> '<bound member function type>' ->xanno 0x557cc31797d8
|             |       `-CXXThisExpr 0x557cc3190d80 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x557cc3190e80 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x557cc3190e10 <col:74> 'int' lvalue ParmVar 0x557cc317c300 'i' 'int'
|-CXXMethodDecl 0x557cc317c648 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x557cc317c4b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x557cc317c530 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x557cc31916b8 <col:42, line:500:5>
|   |-ParenExpr 0x557cc3191450 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x557cc3191420 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557cc3191100 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc31910d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc3190fe0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc3190fc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc3190f88 <col:23> 'int' lvalue ParmVar 0x557cc317c4b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc3190fa8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc31910b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557cc3191098 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc3191000 <col:33> 'int' lvalue ParmVar 0x557cc317c4b8 'i' 'int'
|   |   |     `-BinaryOperator 0x557cc3191078 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557cc3191060 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557cc3191020 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557cc3191040 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x557cc3191160 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc3191140 <col:60> 'int' 0
|   |   `-CallExpr 0x557cc3191380 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557cc3191368 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc3191348 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc31913c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc31911d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x557cc31913d8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3191208 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc31913f0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc3191240 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x557cc3191408 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc3191330 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc3191318 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc31912d8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x557cc3191698 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x557cc3191648 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x557cc3191618 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x557cc31915c0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x557cc3191590 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x557cc3191540 <col:48, col:57> 'char [48]' lvalue ->c 0x557cc3184690
|     |     |   `-CXXMemberCallExpr 0x557cc3191520 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x557cc31914f0 <col:48> '<bound member function type>' ->xanno 0x557cc3179978
|     |     |       `-CXXThisExpr 0x557cc31914e0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x557cc31915a8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x557cc3191570 <col:61> 'int' lvalue ParmVar 0x557cc317c4b8 'i' 'int'
|     `-ImplicitCastExpr 0x557cc3191680 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x557cc3191660 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x557cc317c530 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x557cc317c808 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x557cc317c710 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x557cc3191e18 <col:35, line:513:5>
|   |-ParenExpr 0x557cc3191b28 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x557cc3191af8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557cc3191850 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc3191820 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc3191730 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc3191718 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc31916d8 <col:23> 'int' lvalue ParmVar 0x557cc317c710 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc31916f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc3191800 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557cc31917e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc3191750 <col:33> 'int' lvalue ParmVar 0x557cc317c710 'i' 'int'
|   |   |     `-BinaryOperator 0x557cc31917c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557cc31917b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557cc3191770 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557cc3191790 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x557cc31918b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc3191890 <col:60> 'int' 0
|   |   `-CallExpr 0x557cc3191a58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557cc3191a40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc3191a20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc3191a98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3191920 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x557cc3191ab0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3191958 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc3191ac8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc3191990 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x557cc3191ae0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc3191a08 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc31919f0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc31919b0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x557cc3191e08 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x557cc3191df0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x557cc3191dd8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x557cc3191da8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x557cc3191d20 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x557cc3191cf0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x557cc3191ca0 <col:60, col:69> 'char const[48]' lvalue ->c 0x557cc3184690
|             |   `-CXXMemberCallExpr 0x557cc3191c80 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x557cc3191c50 <col:60> '<bound member function type>' ->xanno 0x557cc31797d8
|             |       `-CXXThisExpr 0x557cc3191c40 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x557cc3191d08 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x557cc3191cd0 <col:73> 'int' lvalue ParmVar 0x557cc317c710 'i' 'int'
|-CXXMethodDecl 0x557cc317ca58 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x557cc317c8c8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x557cc317c940 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x557cc3192538 <col:41, line:528:5>
|   |-ParenExpr 0x557cc31922c0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x557cc3192290 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557cc3191fb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc3191f80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc3191e90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc3191e78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc3191e38 <col:23> 'int' lvalue ParmVar 0x557cc317c8c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc3191e58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc3191f60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557cc3191f48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc3191eb0 <col:33> 'int' lvalue ParmVar 0x557cc317c8c8 'i' 'int'
|   |   |     `-BinaryOperator 0x557cc3191f28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557cc3191f10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557cc3191ed0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557cc3191ef0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x557cc3192010 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc3191ff0 <col:60> 'int' 0
|   |   `-CallExpr 0x557cc31921f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557cc31921d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc31921b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc3192230 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3192080 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x557cc3192248 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc31920b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc3192260 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc31920f0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x557cc3192278 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc31921a0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc3192188 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc3192148 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x557cc3192518 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x557cc31924c8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x557cc3192498 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x557cc3192440 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x557cc3192400 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x557cc31923b0 <col:47, col:56> 'char [48]' lvalue ->c 0x557cc3184690
|     |     |   `-CXXMemberCallExpr 0x557cc3192390 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x557cc3192360 <col:47> '<bound member function type>' ->xanno 0x557cc3179978
|     |     |       `-CXXThisExpr 0x557cc3192350 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x557cc3192418 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x557cc31923e0 <col:60> 'int' lvalue ParmVar 0x557cc317c8c8 'i' 'int'
|     `-ImplicitCastExpr 0x557cc3192500 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x557cc31924e0 <col:65> 'int16_t':'short' lvalue ParmVar 0x557cc317c940 'x' 'int16_t':'short'
|-CXXMethodDecl 0x557cc317cc18 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x557cc317cb20 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x557cc3192c08 <col:36, line:541:5>
|   |-ParenExpr 0x557cc31929a8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x557cc3192978 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557cc31926d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc31926a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc31925b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc3192598 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc3192558 <col:23> 'int' lvalue ParmVar 0x557cc317cb20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc3192578 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc3192680 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557cc3192668 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc31925d0 <col:33> 'int' lvalue ParmVar 0x557cc317cb20 'i' 'int'
|   |   |     `-BinaryOperator 0x557cc3192648 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557cc3192630 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557cc31925f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557cc3192610 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x557cc3192730 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc3192710 <col:60> 'int' 0
|   |   `-CallExpr 0x557cc31928d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557cc31928c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc31928a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc3192918 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc31927a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x557cc3192930 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc31927d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc3192948 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc3192810 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x557cc3192960 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc3192888 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc3192870 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc3192830 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x557cc3192bf8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x557cc3192be0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x557cc3192bc8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x557cc3192b98 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x557cc3192b40 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x557cc3192b10 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x557cc3192ac0 <col:61, col:70> 'char const[48]' lvalue ->c 0x557cc3184690
|             |   `-CXXMemberCallExpr 0x557cc3192aa0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x557cc3192a70 <col:61> '<bound member function type>' ->xanno 0x557cc31797d8
|             |       `-CXXThisExpr 0x557cc3192a60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x557cc3192b28 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x557cc3192af0 <col:74> 'int' lvalue ParmVar 0x557cc317cb20 'i' 'int'
|-CXXMethodDecl 0x557cc317cde8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x557cc317ccd8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x557cc317cd50 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x557cc317ce98 <col:20>
| `-OptimizeNoneAttr 0x557cc317cef0 <col:30>
|-CXXMethodDecl 0x557cc317d028 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x557cc317cf30 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x557cc31932d8 <col:35, line:562:5>
|   |-ParenExpr 0x557cc3193078 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x557cc3193048 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557cc3192da0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc3192d70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc3192c80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc3192c68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc3192c28 <col:23> 'int' lvalue ParmVar 0x557cc317cf30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc3192c48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc3192d50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557cc3192d38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc3192ca0 <col:33> 'int' lvalue ParmVar 0x557cc317cf30 'i' 'int'
|   |   |     `-BinaryOperator 0x557cc3192d18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557cc3192d00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557cc3192cc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557cc3192ce0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x557cc3192e00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc3192de0 <col:60> 'int' 0
|   |   `-CallExpr 0x557cc3192fa8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557cc3192f90 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc3192f70 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc3192fe8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3192e70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x557cc3193000 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3192ea8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc3193018 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc3192ee0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x557cc3193030 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc3192f58 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc3192f40 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc3192f00 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x557cc31932c8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x557cc31932b0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x557cc3193298 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x557cc3193268 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x557cc3193210 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x557cc31931e0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x557cc3193190 <col:60, col:69> 'char const[48]' lvalue ->c 0x557cc3184690
|             |   `-CXXMemberCallExpr 0x557cc3193170 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x557cc3193140 <col:60> '<bound member function type>' ->xanno 0x557cc31797d8
|             |       `-CXXThisExpr 0x557cc3193130 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x557cc31931f8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x557cc31931c0 <col:73> 'int' lvalue ParmVar 0x557cc317cf30 'i' 'int'
|-CXXMethodDecl 0x557cc317d238 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x557cc317d0e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x557cc317d160 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x557cc31939b8 <col:41, line:577:5>
|   |-ParenExpr 0x557cc3193748 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x557cc3193718 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557cc3193470 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc3193440 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc3193350 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc3193338 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc31932f8 <col:23> 'int' lvalue ParmVar 0x557cc317d0e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc3193318 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc3193420 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557cc3193408 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc3193370 <col:33> 'int' lvalue ParmVar 0x557cc317d0e8 'i' 'int'
|   |   |     `-BinaryOperator 0x557cc31933e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557cc31933d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557cc3193390 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557cc31933b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x557cc31934d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc31934b0 <col:60> 'int' 0
|   |   `-CallExpr 0x557cc3193678 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557cc3193660 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc3193640 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc31936b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3193540 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x557cc31936d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3193578 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc31936e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc31935b0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x557cc3193700 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc3193628 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc3193610 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc31935d0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x557cc3193998 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x557cc3193948 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x557cc3193918 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x557cc31938b8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x557cc3193888 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x557cc3193838 <col:47, col:56> 'char [48]' lvalue ->c 0x557cc3184690
|     |     |   `-CXXMemberCallExpr 0x557cc3193818 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x557cc31937e8 <col:47> '<bound member function type>' ->xanno 0x557cc3179978
|     |     |       `-CXXThisExpr 0x557cc31937d8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x557cc31938a0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x557cc3193868 <col:60> 'int' lvalue ParmVar 0x557cc317d0e8 'i' 'int'
|     `-ImplicitCastExpr 0x557cc3193980 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x557cc3193960 <col:65> 'int32_t':'int' lvalue ParmVar 0x557cc317d160 'x' 'int32_t':'int'
|-CXXMethodDecl 0x557cc317d3f8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x557cc317d300 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x557cc31940e8 <col:36, line:591:5>
|   |-ParenExpr 0x557cc3193e28 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x557cc3193df8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557cc3193b50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc3193b20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc3193a30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc3193a18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc31939d8 <col:23> 'int' lvalue ParmVar 0x557cc317d300 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc31939f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc3193b00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557cc3193ae8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc3193a50 <col:33> 'int' lvalue ParmVar 0x557cc317d300 'i' 'int'
|   |   |     `-BinaryOperator 0x557cc3193ac8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557cc3193ab0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557cc3193a70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557cc3193a90 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x557cc3193bb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc3193b90 <col:60> 'int' 0
|   |   `-CallExpr 0x557cc3193d58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557cc3193d40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc3193d20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc3193d98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3193c20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x557cc3193db0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3193c58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc3193dc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc3193c90 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x557cc3193de0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc3193d08 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc3193cf0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc3193cb0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x557cc31940d8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x557cc31940c0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x557cc31940a8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x557cc3194078 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x557cc3193ff0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x557cc3193fc0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x557cc3193f70 <col:61, col:70> 'char const[48]' lvalue ->c 0x557cc3184690
|             |   `-CXXMemberCallExpr 0x557cc3193f50 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x557cc3193f20 <col:61> '<bound member function type>' ->xanno 0x557cc31797d8
|             |       `-CXXThisExpr 0x557cc3193f10 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x557cc3193fd8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x557cc3193fa0 <col:74> 'int' lvalue ParmVar 0x557cc317d300 'i' 'int'
|-CXXMethodDecl 0x557cc317d648 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x557cc317d4b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x557cc317d530 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x557cc31947c8 <col:42, line:606:5>
|   |-ParenExpr 0x557cc3194558 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x557cc3194528 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x557cc3194280 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc3194250 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc3194160 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc3194148 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc3194108 <col:23> 'int' lvalue ParmVar 0x557cc317d4b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc3194128 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc3194230 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x557cc3194218 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc3194180 <col:33> 'int' lvalue ParmVar 0x557cc317d4b8 'i' 'int'
|   |   |     `-BinaryOperator 0x557cc31941f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557cc31941e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557cc31941a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x557cc31941c0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x557cc31942e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc31942c0 <col:60> 'int' 0
|   |   `-CallExpr 0x557cc3194488 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x557cc3194470 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc3194450 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc31944c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3194350 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x557cc31944e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3194388 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc31944f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc31943c0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x557cc3194510 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc3194438 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc3194420 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc31943e0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x557cc31947a8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x557cc3194758 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x557cc3194728 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x557cc31946c8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x557cc3194698 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x557cc3194648 <col:48, col:57> 'char [48]' lvalue ->c 0x557cc3184690
|     |     |   `-CXXMemberCallExpr 0x557cc3194628 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x557cc31945f8 <col:48> '<bound member function type>' ->xanno 0x557cc3179978
|     |     |       `-CXXThisExpr 0x557cc31945e8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x557cc31946b0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x557cc3194678 <col:61> 'int' lvalue ParmVar 0x557cc317d4b8 'i' 'int'
|     `-ImplicitCastExpr 0x557cc3194790 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x557cc3194770 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x557cc317d530 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x557cc317d7e0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x557cc317d710 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x557cc3195038 <col:33, line:620:5>
|   |-ParenExpr 0x557cc3194db0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x557cc3194d80 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x557cc31949d0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc31949a0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc3194840 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc3194828 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc31947e8 <col:23> 'int' lvalue ParmVar 0x557cc317d710 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc3194808 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc3194980 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x557cc3194968 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc3194860 <col:33> 'int' lvalue ParmVar 0x557cc317d710 'i' 'int'
|   |   |     `-BinaryOperator 0x557cc3194948 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557cc3194930 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557cc3194880 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x557cc3194908 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x557cc31948f0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x557cc31948b8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x557cc3194a30 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc3194a10 <col:79> 'int' 0
|   |   `-CallExpr 0x557cc3194ce0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x557cc3194cc8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc3194ca8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc3194d20 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3194b18 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x557cc3194d38 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3194b60 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc3194d50 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc3194b98 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x557cc3194d68 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc3194c90 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc3194c78 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc3194c38 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x557cc3195028 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x557cc3195010 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x557cc3194ff8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x557cc3194fc8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x557cc3194f40 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x557cc3194f10 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x557cc3194ec0 <col:67, col:76> 'char const[48]' lvalue ->c 0x557cc3184690
|             |   `-CXXMemberCallExpr 0x557cc3194ea0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x557cc3194e70 <col:67> '<bound member function type>' ->xanno 0x557cc31797d8
|             |       `-CXXThisExpr 0x557cc3194e60 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x557cc3194f28 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x557cc3194ef0 <col:80> 'int' lvalue ParmVar 0x557cc317d710 'i' 'int'
|-CXXMethodDecl 0x557cc317d9f8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x557cc317d8a0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x557cc317d920 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x557cc3195860 <col:45, line:635:5>
|   |-ParenExpr 0x557cc31955a8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x557cc3195578 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x557cc3195240 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x557cc3195210 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x557cc31950b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x557cc3195098 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x557cc3195058 <col:23> 'int' lvalue ParmVar 0x557cc317d8a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x557cc3195078 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x557cc31951f0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x557cc31951d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x557cc31950d0 <col:33> 'int' lvalue ParmVar 0x557cc317d8a0 'i' 'int'
|   |   |     `-BinaryOperator 0x557cc31951b8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x557cc31951a0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x557cc31950f0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x557cc3179bc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x557cc3195178 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x557cc3195160 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x557cc3195128 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x557cc31952a0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x557cc3195280 <col:79> 'int' 0
|   |   `-CallExpr 0x557cc31954d8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x557cc31954c0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc31954a0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x557cc3195518 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3195310 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x557cc3195530 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x557cc3195358 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x557cc3195548 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x557cc3195390 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x557cc3195560 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x557cc3195488 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x557cc3195470 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x557cc3195428 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x557cc3195840 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x557cc31957a8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x557cc3195778 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x557cc3195718 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x557cc31956e8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x557cc3195698 <col:54, col:63> 'char [48]' lvalue ->c 0x557cc3184690
|     |     |   `-CXXMemberCallExpr 0x557cc3195678 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x557cc3195648 <col:54> '<bound member function type>' ->xanno 0x557cc3179978
|     |     |       `-CXXThisExpr 0x557cc3195638 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x557cc3195700 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x557cc31956c8 <col:67> 'int' lvalue ParmVar 0x557cc317d8a0 'i' 'int'
|     `-CXXConstCastExpr 0x557cc3195810 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x557cc31957f8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x557cc31957c0 <col:91> 'const void *' lvalue ParmVar 0x557cc317d920 'x' 'const void *'
|-CXXMethodDecl 0x557cc317dac8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x557cc31958e8 <col:34, line:640:5>
|   `-ReturnStmt 0x557cc31958d8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x557cc31958c0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x557cc3195890 <col:16> 'Packet *' lvalue ->_data_packet 0x557cc3185248
|         `-CXXThisExpr 0x557cc3195880 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x557cc317dc08 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x557cc317db78 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x557cc318e9a8 <col:46> 'bool' true
|-CXXMethodDecl 0x557cc317dd88 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x557cc317dcc0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x557cc317de30 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x557cc317e5e0 <line:660:22> "" ""
| |-EnumConstantDecl 0x557cc317df30 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557cc317e650 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317df10 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x557cc317def0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x557cc3173090 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x557cc317dfc0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557cc317e668 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317dfa0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x557cc317df80 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x557cc3173120 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x557cc317e050 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557cc317e680 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317e030 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x557cc317e010 <col:21> 'int' 0
| |-EnumConstantDecl 0x557cc317e0e0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557cc317e698 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317e0c0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x557cc317e0a0 <col:19> 'int' 16
| |-EnumConstantDecl 0x557cc317e170 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557cc317e6b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317e150 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x557cc317e130 <col:21> 'int' 16
| |-EnumConstantDecl 0x557cc317e200 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557cc317e6c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317e1e0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x557cc317e1c0 <col:19> 'int' 32
| |-EnumConstantDecl 0x557cc317e290 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557cc317e6e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317e270 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x557cc317e250 <col:19> 'int' EnumConstant 0x557cc317e0e0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x557cc317e320 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557cc317e6f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317e300 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x557cc317e2e0 <col:19> 'int' EnumConstant 0x557cc317e200 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x557cc317e3f0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557cc317e710 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317e3d0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x557cc317e3b0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x557cc317e370 <col:23> 'int' EnumConstant 0x557cc317e320 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x557cc317e390 <col:40> 'int' 2
| |-EnumConstantDecl 0x557cc317e4c0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x557cc317e728 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc317e4a0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x557cc317e480 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x557cc317e440 <col:23> 'int' EnumConstant 0x557cc317e320 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x557cc317e460 <col:40> 'int' 4
| `-EnumConstantDecl 0x557cc317e590 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x557cc317e740 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc317e570 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x557cc317e550 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x557cc317e510 <col:23> 'int' EnumConstant 0x557cc317e320 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x557cc317e530 <col:40> 'int' 8
|-CXXMethodDecl 0x557cc317e780 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x557cc317e820 <col:68> "" ""
|-CXXMethodDecl 0x557cc317e8b8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x557cc317e958 <col:45> "" ""
|-CXXMethodDecl 0x557cc317e9f0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x557cc317ea90 <col:57> "" ""
|-CXXMethodDecl 0x557cc317eb28 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x557cc317ebc8 <col:45> "" ""
|-CXXMethodDecl 0x557cc317ec60 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x557cc317ed00 <col:57> "" ""
|-CXXMethodDecl 0x557cc317ed90 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x557cc317ee30 <col:51> "" ""
|-CXXMethodDecl 0x557cc317eec0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x557cc317ef60 <col:63> "" ""
|-CXXMethodDecl 0x557cc317eff0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x557cc317f090 <col:53> "" ""
|-CXXMethodDecl 0x557cc317f120 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x557cc317f1c0 <col:65> "" ""
|-CXXMethodDecl 0x557cc317f2d8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x557cc317f248 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x557cc317f380 <col:61> "" ""
|-CXXMethodDecl 0x557cc317f518 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x557cc317f408 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x557cc317f480 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x557cc317f5c8 <col:67> "" ""
|-CXXMethodDecl 0x557cc317f6e0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x557cc317f650 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x557cc317f788 <col:63> "" ""
|-CXXMethodDecl 0x557cc317f920 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x557cc317f810 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x557cc317f888 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x557cc317f9d0 <col:69> "" ""
|-CXXMethodDecl 0x557cc317fae8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x557cc317fa58 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x557cc317fb90 <col:63> "" ""
|-CXXMethodDecl 0x557cc3182268 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x557cc3182158 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x557cc31821d0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557cc3182318 <col:69> "" ""
|-CXXMethodDecl 0x557cc3182430 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x557cc31823a0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x557cc31824d8 <col:62> "" ""
|-CXXMethodDecl 0x557cc3182670 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x557cc3182560 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x557cc31825d8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x557cc3182720 <col:68> "" ""
|-CXXMethodDecl 0x557cc3182838 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x557cc31827a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x557cc31828e0 <col:63> "" ""
|-CXXMethodDecl 0x557cc3182a78 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x557cc3182968 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x557cc31829e0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x557cc3182b28 <col:69> "" ""
|-CXXMethodDecl 0x557cc3182bb8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x557cc3182c58 <col:64> "" ""
|-CXXMethodDecl 0x557cc3182ce8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x557cc3182d88 <col:52> "" ""
|-CXXMethodDecl 0x557cc3182e18 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x557cc3182eb8 <col:67> "" ""
|-CXXMethodDecl 0x557cc3182f48 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x557cc3182fe8 <col:55> "" ""
|-CXXMethodDecl 0x557cc3183100 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x557cc3183070 <col:32> col:35 'int'
| `-DeprecatedAttr 0x557cc31831a8 <col:58> "" ""
|-CXXMethodDecl 0x557cc3183340 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x557cc3183230 <col:33> col:36 'int'
| |-ParmVarDecl 0x557cc31832a8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x557cc31833f0 <col:62> "" ""
|-CXXMethodDecl 0x557cc3183508 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x557cc3183478 <col:32> col:35 'int'
| `-DeprecatedAttr 0x557cc31835b0 <col:58> "" ""
|-CXXMethodDecl 0x557cc3183748 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x557cc3183638 <col:33> col:36 'int'
| |-ParmVarDecl 0x557cc31836b0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x557cc31837f8 <col:62> "" ""
|-CXXMethodDecl 0x557cc3183910 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x557cc3183880 <col:34> col:37 'int'
| `-DeprecatedAttr 0x557cc31839b8 <col:60> "" ""
|-CXXMethodDecl 0x557cc3183b50 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x557cc3183a40 <col:34> col:37 'int'
| |-ParmVarDecl 0x557cc3183ab8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x557cc3183c00 <col:64> "" ""
|-CXXMethodDecl 0x557cc3183d18 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x557cc3183c88 <col:32> col:35 'int'
| `-DeprecatedAttr 0x557cc3183dc0 <col:58> "" ""
|-CXXMethodDecl 0x557cc3183f58 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x557cc3183e48 <col:33> col:36 'int'
| |-ParmVarDecl 0x557cc3183ec0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x557cc3184008 <col:62> "" ""
|-CXXMethodDecl 0x557cc3184120 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x557cc3184090 <col:33> col:36 'int'
| `-DeprecatedAttr 0x557cc31841c8 <col:59> "" ""
|-CXXMethodDecl 0x557cc3184360 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x557cc3184250 <col:33> col:36 'int'
| |-ParmVarDecl 0x557cc31842c8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557cc3184410 <col:63> "" ""
|-AccessSpecDecl 0x557cc3184480 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x557cc31844a8 prev 0x557cc31796b0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557cc31845a0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x557cc3184690 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x557cc31847b8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x557cc3184938 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x557cc3184ab8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x557cc3184c38 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x557cc3195a68 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x557cc31962d8 <col:11>
| |-CXXDestructorDecl 0x557cc3195b40 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x557cc3195c78 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x557cc3195c78
| | `-ParmVarDecl 0x557cc3195d88 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x557cc3195e28 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x557cc3195e28
| | `-ParmVarDecl 0x557cc3195f38 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x557cc3198cf8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x557cc3198e08 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x557cc3199088 <col:11>
| |   `-ReturnStmt 0x557cc3199078 <col:11>
| |     `-UnaryOperator 0x557cc3199060 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x557cc3199050 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x557cc3198e78 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x557cc3198e78
|   `-ParmVarDecl 0x557cc3198f88 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x557cc3184ca0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557cc3184db8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x557cc3184e58 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x557cc3184ec0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x557cc3184f28 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x557cc3184f90 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x557cc3184ff0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x557cc31850b0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x557cc3185110 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x557cc3185170 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x557cc3195978 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x557cc3184e58 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x557cc31962e8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x557cc3196340 <col:12>
| |-CXXConstructorDecl 0x557cc3195fa8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x557cc3195fa8
| | `-ParmVarDecl 0x557cc31960b8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x557cc3196158 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x557cc3196158
| | `-ParmVarDecl 0x557cc3196268 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x557cc31983e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x557cc31851e8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x557cc3185248 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x557cc31852b0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x557cc3185318 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x557cc3185380 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x557cc31853e8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x557cc3185448 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x557cc31854a8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x557cc3185510 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x557cc3185598 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x557cc31851e8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x557cc3195910 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x557cc3185448 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x557cc3196350 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x557cc31963b0 <col:21, line:755:5>
|-CXXConstructorDecl 0x557cc3185738 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x557cc3185678 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x557cc3185830 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x557cc3185a18 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x557cc3185920 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x557cc3185ce8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x557cc3185ad0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x557cc3185b48 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x557cc3185bc0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc3185f08 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x557cc3185db8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x557cc3185e30 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x557cc318e4e8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x557cc3185fc8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x557cc3186040 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x557cc31860b8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x557cc318e640 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x557cc318e5b0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc318e788 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x557cc318e6f8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x557cc318e880 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc3288ca0 <../elements/standard/simplequeue.hh:65:1, line:114:1> line:65:7 referenced class SimpleQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-public 'Storage'
|-CXXRecordDecl 0x557cc3288e38 <col:1, col:7> col:7 implicit referenced class SimpleQueue
|-AccessSpecDecl 0x557cc3288ec8 <col:54, col:60> col:54 public
|-CXXConstructorDecl 0x557cc3288f50 <line:67:5, col:17> col:5 SimpleQueue 'void ()'
|-CXXMethodDecl 0x557cc3289050 <line:69:5, col:40> col:9 drops 'int () const'
| `-CompoundStmt 0x557cc328c8c8 <col:23, col:40>
|   `-ReturnStmt 0x557cc328c8b8 <col:25, col:32>
|     `-ImplicitCastExpr 0x557cc328c8a0 <col:32> 'int' <LValueToRValue>
|       `-MemberExpr 0x557cc328c870 <col:32> 'const volatile int' lvalue ->_drops 0x557cc328b508
|         `-CXXThisExpr 0x557cc328c860 <col:32> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x557cc3289118 <line:70:5, col:62> col:9 highwater_length 'int () const'
| `-CompoundStmt 0x557cc328c948 <col:34, col:62>
|   `-ReturnStmt 0x557cc328c938 <col:36, col:43>
|     `-ImplicitCastExpr 0x557cc328c920 <col:43> 'int' <LValueToRValue>
|       `-MemberExpr 0x557cc328c8f0 <col:43> 'const int' lvalue ->_highwater_length 0x557cc328b570
|         `-CXXThisExpr 0x557cc328c8e0 <col:43> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x557cc3289288 <line:72:5, col:28> col:17 enq 'bool (Packet *)' inline
| `-ParmVarDecl 0x557cc32891c8 <col:21, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x557cc32893d0 <line:73:5, col:33> col:17 lifo_enq 'void (Packet *)' inline
| `-ParmVarDecl 0x557cc3289340 <col:26, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x557cc3289498 <line:74:5, col:24> col:20 deq 'Packet *()' inline
|-CXXMethodDecl 0x557cc32895e0 <line:77:5, col:49> col:13 packet 'Packet *(int) const'
| |-ParmVarDecl 0x557cc3289550 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x557cc328ca38 <col:33, col:49>
|   `-ReturnStmt 0x557cc328ca28 <col:35, col:46>
|     `-ImplicitCastExpr 0x557cc328ca10 <col:42, col:46> 'Packet *' <LValueToRValue>
|       `-ArraySubscriptExpr 0x557cc328c9f0 <col:42, col:46> 'Packet *volatile' lvalue
|         |-ImplicitCastExpr 0x557cc328c9c0 <col:42> 'Packet *volatile *' <LValueToRValue>
|         | `-MemberExpr 0x557cc328c970 <col:42> 'Packet *volatile *const' lvalue ->_q 0x557cc328b4a0
|         |   `-CXXThisExpr 0x557cc328c960 <col:42> 'const SimpleQueue *' implicit this
|         `-ImplicitCastExpr 0x557cc328c9d8 <col:45> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x557cc328c9a0 <col:45> 'int' lvalue ParmVar 0x557cc3289550 'i' 'int'
|-CXXMethodDecl 0x557cc32896a8 <line:78:5, col:16> col:10 reset 'void ()'
|-FunctionTemplateDecl 0x557cc3289988 <line:80:5, col:52> col:40 yank1
| |-TemplateTypeParmDecl 0x557cc3289748 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x557cc32898e8 <col:32, col:52> col:40 yank1 'Packet *(Filter)'
|   `-ParmVarDecl 0x557cc32897f8 <col:46> col:52 'Filter'
|-FunctionTemplateDecl 0x557cc3289bf8 <line:81:5, col:57> col:40 yank1_peek
| |-TemplateTypeParmDecl 0x557cc32899e8 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x557cc3289b58 <col:32, col:57> col:40 yank1_peek 'Packet *(Filter)'
|   `-ParmVarDecl 0x557cc3289a98 <col:51> col:57 'Filter'
|-FunctionTemplateDecl 0x557cc328a140 <line:82:5, col:67> col:36 yank
| |-TemplateTypeParmDecl 0x557cc3289c58 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x557cc328a0a0 <col:32, col:67> col:36 yank 'int (Filter, Vector<Packet *> &)'
|   |-ParmVarDecl 0x557cc3289d08 <col:41> col:47 'Filter'
|   `-ParmVarDecl 0x557cc3289f80 <col:49, col:66> col:67 'Vector<Packet *> &'
|-CXXMethodDecl 0x557cc328a1d0 <line:84:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x557cc31ad548 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x557cc328caa0 <col:36, col:60>
|   `-ReturnStmt 0x557cc328ca90 <col:38, col:45>
|     `-ImplicitCastExpr 0x557cc328ca78 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x557cc328ca50 <col:45> 'const char [12]' lvalue "SimpleQueue"
|-CXXMethodDecl 0x557cc328a298 <line:85:5, col:58> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x557cc31ad610 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x557cc328cb00 <col:36, col:58>
|   `-ReturnStmt 0x557cc328caf0 <col:38, col:45>
|     `-ImplicitCastExpr 0x557cc328cad8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x557cc328cab8 <col:45> 'const char []' lvalue Var 0x557cc31ad948 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x557cc328a360 <line:86:5, col:53> col:17 processing 'const char *() const'
| |-Overrides: [ 0x557cc31ad9d8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x557cc328cbe0 <col:36, col:53>
|   `-ReturnStmt 0x557cc328cbd0 <col:38, col:45>
|     `-ImplicitCastExpr 0x557cc328cbb8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x557cc328cb98 <col:45> 'const char [5]' lvalue "h/lh"
|-CXXMethodDecl 0x557cc328a4b0 <line:87:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x557cc31ae200 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x557cc328a418 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x557cc328a790 <line:89:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x557cc31aede0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x557cc328a640 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x557cc328a6b8 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x557cc328a8e8 <line:90:5, col:33> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x557cc31af030 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x557cc328a850 <col:20, col:32> col:33 'ErrorHandler *'
|-CXXMethodDecl 0x557cc328aa30 <line:91:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x557cc31af848 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x557cc328a9a0 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x557cc328aaf8 <line:92:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x557cc31b1830 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x557cc328cc18 <col:39, col:54>
|   `-ReturnStmt 0x557cc328cc08 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x557cc328cbf8 <col:48> 'bool' true
|-CXXMethodDecl 0x557cc328add0 <line:93:5, col:56> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x557cc31b1b00 Element::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x557cc328ac80 <col:26, col:40> col:41 'Vector<String> &'
| `-ParmVarDecl 0x557cc328acf8 <col:43, col:55> col:56 'ErrorHandler *'
|-CXXMethodDecl 0x557cc328afa0 <line:94:5, col:44> col:10 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x557cc31af238 Element::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x557cc328ae90 <col:21, col:28> col:29 'Element *'
| `-ParmVarDecl 0x557cc328af08 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x557cc328b070 <line:95:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x557cc31aeeb0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x557cc328b238 <line:97:5, col:32> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x557cc31ac3b8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x557cc328b128 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x557cc328b1a0 <col:25, col:31> col:32 'Packet *'
|-CXXMethodDecl 0x557cc328b390 <line:98:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x557cc31ac548 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x557cc328b300 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x557cc328b438 <line:100:3, col:12> col:3 protected
|-FieldDecl 0x557cc328b4a0 <line:102:5, col:24> col:24 referenced _q 'Packet *volatile *'
|-FieldDecl 0x557cc328b508 <line:103:5, col:18> col:18 referenced _drops 'volatile int'
|-FieldDecl 0x557cc328b570 <line:104:5, col:9> col:9 referenced _highwater_length 'int'
|-FriendDecl 0x557cc328b6d8 <line:106:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x557cc328b838 <line:107:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-FriendDecl 0x557cc328b998 <line:108:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x557cc328baf8 <line:109:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-CXXMethodDecl 0x557cc328bc60 <line:111:5, col:47> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x557cc328bb48 <col:32, col:39> col:40 'Element *'
| `-ParmVarDecl 0x557cc328bbc8 <col:42, col:46> col:47 'void *'
|-CXXMethodDecl 0x557cc328bf40 <line:112:5, col:75> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x557cc328bd20 <col:30, col:42> col:43 'const String &'
| |-ParmVarDecl 0x557cc328bd98 <col:45, col:52> col:53 'Element *'
| |-ParmVarDecl 0x557cc328be18 <col:55, col:59> col:60 'void *'
| `-ParmVarDecl 0x557cc328be90 <col:62, col:74> col:75 'ErrorHandler *'
|-CXXConstructorDecl 0x557cc328c028 <line:65:7> col:7 implicit SimpleQueue 'void (const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x557cc328c028
| `-ParmVarDecl 0x557cc328c138 <col:7> col:7 'const SimpleQueue &'
|-CXXConstructorDecl 0x557cc328c1d8 <col:7> col:7 implicit SimpleQueue 'void (SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x557cc328c1d8
| `-ParmVarDecl 0x557cc328c2e8 <col:7> col:7 'SimpleQueue &&'
|-CXXMethodDecl 0x557cc328c388 <col:7> col:7 implicit operator= 'SimpleQueue &(const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x557cc328c388
| `-ParmVarDecl 0x557cc328c498 <col:7> col:7 'const SimpleQueue &'
|-CXXMethodDecl 0x557cc328c508 <col:7> col:7 implicit operator= 'SimpleQueue &(SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x557cc328c508
| `-ParmVarDecl 0x557cc328c618 <col:7> col:7 'SimpleQueue &&'
`-CXXDestructorDecl 0x557cc328c6a0 <col:7> col:7 implicit used ~SimpleQueue 'void () noexcept' inline default
  |-Overrides: [ 0x557cc31ac0e8 Element::~Element 'void () noexcept' ]
  `-CompoundStmt 0x557cc32bd480 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  NonVirtualBaseLLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class ActiveNotifier
         0 |   class Notifier (primary base)
         0 |     (Notifier vtable pointer)
         8 |     class NotifierSignal _signal
         8 |       union NotifierSignal::vmvalue _v
         8 |         class atomic_uint32_t * v1
         8 |         struct NotifierSignal::vmpair * vm
        16 |       uint32_t _mask
        24 |     enum Notifier::SearchOp _search_op
        32 |   class Task * _listener1
        40 |   ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierQueue
         0 |   class SimpleQueue (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       108 |     class Storage (base)
       108 |       Storage::index_type _capacity
       112 |       volatile Storage::index_type _head
       116 |       volatile Storage::index_type _tail
       120 |     class Packet *volatile * _q
       128 |     volatile int _drops
       132 |     int _highwater_length
       136 |   int _sleepiness
       144 |   class ActiveNotifier _empty_note
       144 |     class Notifier (primary base)
       144 |       (Notifier vtable pointer)
       152 |       class NotifierSignal _signal
       152 |         union NotifierSignal::vmvalue _v
       152 |           class atomic_uint32_t * v1
       152 |           struct NotifierSignal::vmpair * vm
       160 |         uint32_t _mask
       168 |       enum Notifier::SearchOp _search_op
       176 |     class Task * _listener1
       184 |     ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=192, dsize=192, align=8,
           |  nvsize=192, nvalign=8]

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc3265508 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc3265628 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x557cc32656c8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x557cc3265728 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x557cc326eb78 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x557cc326eb78

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc3265790 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc32658a8 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x557cc3265948 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x557cc32659d8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x557cc326d710 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x557cc326db48 <col:11>
|-CXXConstructorDecl 0x557cc326d818 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x557cc326d818
| `-ParmVarDecl 0x557cc326d928 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x557cc326d9c8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x557cc326d9c8
| `-ParmVarDecl 0x557cc326dad8 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x557cc326e840 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc3263440 prev 0x557cc31abae0 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557cc3263538 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x557cc32635c8 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x557cc32636f8 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x557cc3263670 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x557cc31abb70 'NotifierSignal'
|   | `-CXXRecord 0x557cc3263440 'NotifierSignal'
|   `-ParenType 0x557cc3263610 'bool () const' sugar
|     `-FunctionProtoType 0x557cc2cf2470 'bool () const' const cdecl
|       `-BuiltinType 0x557cc2c48500 'bool'
|-CXXConstructorDecl 0x557cc3263788 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x557cc32639c8 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x557cc3263840 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x557cc32638b8 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x557cc3263b78 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x557cc3263ab8 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x557cc3263c70 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x557cc3263d98 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x557cc3263e58 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x557cc3263f18 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x557cc3263fd8 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x557cc32640c8 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x557cc3264238 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x557cc32643b8 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x557cc32642f8 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x557cc3264480 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x557cc3264540 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x557cc3264600 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x557cc32646c0 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x557cc3264978 <line:36:5, col:76> col:17
| `-FunctionDecl 0x557cc32648b8 parent 0x557cc2c48488 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x557cc3264770 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x557cc32647e8 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x557cc3264b98 <line:37:5, col:76> col:17
| `-FunctionDecl 0x557cc3264ad8 parent 0x557cc2c48488 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x557cc32649c8 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x557cc3264a40 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x557cc3264cd8 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x557cc3264be8 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x557cc3264e20 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x557cc3264d90 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x557cc32650e8 <line:41:5, col:78> col:27
| `-FunctionDecl 0x557cc3265028 parent 0x557cc2c48488 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x557cc3264ed8 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x557cc3264f50 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x557cc32651f8 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x557cc3265138 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x557cc3265378 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x557cc32652b0 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x557cc3265440 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x557cc32654e0 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x557cc3265508 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557cc3265628 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x557cc32656c8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x557cc3265728 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x557cc326eb78 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x557cc326eb78
|-CXXRecordDecl 0x557cc3265790 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557cc32658a8 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x557cc3265948 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x557cc32659d8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x557cc326d710 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x557cc326db48 <col:11>
| |-CXXConstructorDecl 0x557cc326d818 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x557cc326d818
| | `-ParmVarDecl 0x557cc326d928 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x557cc326d9c8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x557cc326d9c8
| | `-ParmVarDecl 0x557cc326dad8 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x557cc326e840 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x557cc3265a50 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x557cc3265ab0 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x557cc3265b00 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x557cc3265c00 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x557cc3265e00 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc3265be0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x557cc3265bc0 <col:14> 'int' 1
| |-EnumConstantDecl 0x557cc3265c90 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x557cc3265e18 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc3265c70 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x557cc3265c50 <col:30> 'int' 2
| |-EnumConstantDecl 0x557cc3265d20 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x557cc3265e30 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc3265d00 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x557cc3265ce0 <col:52> 'int' 4
| `-EnumConstantDecl 0x557cc3265db0 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x557cc3265e48 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc3265d90 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x557cc3265d70 <col:23> 'int' 8
|-VarDecl 0x557cc3265e70 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x557cc3265f78 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x557cc3265ee8 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x557cc3266140 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x557cc3266030 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x557cc32660a8 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x557cc3266378 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x557cc3266228 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x557cc32662a0 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc3266428 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x557cc3266548 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x557cc32665d8 <col:18, col:24> col:18 public
|-EnumDecl 0x557cc3266600 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x557cc3266700 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x557cc32667f0 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc32666e0 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x557cc32666c0 <col:35> 'int' 0
| |-EnumConstantDecl 0x557cc3266750 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x557cc32667a0 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x557cc3266a38 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x557cc32669d0 'void (*)(void *, Notifier *)'
|   `-ParenType 0x557cc3266970 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x557cc3266930 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x557cc2c484e0 'void'
|       |-PointerType 0x557cc2c48ce0 'void *'
|       | `-BuiltinType 0x557cc2c484e0 'void'
|       `-PointerType 0x557cc3266890 'Notifier *'
|         `-RecordType 0x557cc32664c0 'Notifier'
|           `-CXXRecord 0x557cc3266428 'Notifier'
|-CXXConstructorDecl 0x557cc3266b78 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x557cc3266aa0 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x557cc326b918 <col:35> 'Notifier::SearchOp' EnumConstant 0x557cc3266700 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x557cc3266d88 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x557cc3266c38 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x557cc3266cb0 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x557cc326b938 <col:65> 'Notifier::SearchOp' EnumConstant 0x557cc3266700 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x557cc3266e88 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x557cc3266fb8 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x557cc326b9f8 <col:37, line:85:5>
|   `-ReturnStmt 0x557cc326b9e8 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x557cc326b9c8 <col:9, col:29> 'bool'
|       `-MemberExpr 0x557cc326b998 <col:9, col:17> '<bound member function type>' .initialized 0x557cc32646c0
|         `-MemberExpr 0x557cc326b968 <col:9> 'const NotifierSignal' lvalue ->_signal 0x557cc326b338
|           `-CXXThisExpr 0x557cc326b958 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x557cc32671c0 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x557cc3267070 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x557cc32670e8 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x557cc32672b8 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x557cc32673a8 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x557cc3267468 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x557cc32675a8 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x557cc3267518 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x557cc3267670 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x557cc3268540 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x557cc32687b0 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x557cc3268610 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x557cc3268690 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x557cc3268a08 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x557cc3268870 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x557cc32688f0 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x557cc3268b90 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x557cc3268ac8 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x557cc3268cd8 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x557cc3268c48 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x557cc3268e60 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x557cc3268d90 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x557cc3268fd8 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x557cc3268f18 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x557cc32690a0 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x557cc3269128 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x557cc32692f8 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x557cc32691a0 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x557cc3269220 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x557cc3269598 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x557cc32693b8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x557cc3269438 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x557cc32694b0 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x557cc3269838 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x557cc3269660 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x557cc32696e0 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x557cc3269758 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x557cc3269bb8 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x557cc3269900 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x557cc3269980 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x557cc32699f8 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x557cc3269a78 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x557cc3269da0 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x557cc3269c88 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x557cc3269d08 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x557cc3269ff8 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x557cc3269e60 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x557cc3269ee0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x557cc3269f58 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x557cc326a258 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x557cc326a0c0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x557cc326a140 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x557cc326a1b8 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x557cc326a540 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x557cc326a320 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x557cc326a3a0 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x557cc326a418 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x557cc326a498 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x557cc326a7f8 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x557cc326a610 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x557cc326a690 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x557cc326a710 <col:78> col:81 'int'
| `-DeprecatedAttr 0x557cc326a8b0 <col:98> "" ""
|-CXXMethodDecl 0x557cc326ab98 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x557cc326a930 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x557cc326a9b0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x557cc326aa30 <col:78> col:81 'int'
| |-ParmVarDecl 0x557cc326aaa8 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x557cc326ac58 <col:110> "" ""
|-CXXMethodDecl 0x557cc326ae78 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x557cc326acd8 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x557cc326ad58 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x557cc326add8 <col:79> col:82 'int'
| `-DeprecatedAttr 0x557cc326af30 <col:99> "" ""
|-CXXMethodDecl 0x557cc326b1d0 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x557cc326afb0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x557cc326b030 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x557cc326b0b0 <col:79> col:82 'int'
| |-ParmVarDecl 0x557cc326b128 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x557cc326b290 <col:111> "" ""
|-AccessSpecDecl 0x557cc326b300 <line:123:3, col:10> col:3 private
|-FieldDecl 0x557cc326b338 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x557cc326b398 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x557cc326b510 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x557cc326b400 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x557cc326b478 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x557cc326b5e8 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x557cc326b5e8
| `-ParmVarDecl 0x557cc326b6f8 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x557cc326b798 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x557cc326b798
  `-ParmVarDecl 0x557cc326b8a8 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc31c9730 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc31c9848 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x557cc31c9918 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x557cc31c9978 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x557cc31c99e0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x557cc31c9a68 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x557cc31c9cd0 <col:16, line:46:5>
|   |-BinaryOperator 0x557cc31c9c18 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x557cc31c9b38 <col:9> 'TaskLink *' lvalue ->_prev 0x557cc31c9918
|   | | `-CXXThisExpr 0x557cc31c9b28 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x557cc31c9c00 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x557cc31c9be0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x557cc31c9b78 <col:17> 'TaskLink *' lvalue ->_next 0x557cc31c9978
|   |     | `-CXXThisExpr 0x557cc31c9b68 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x557cc31c9bc8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x557cc31c9ba8 <col:25> 'int' 0
|   `-BinaryOperator 0x557cc31c9cb0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x557cc31c9c48 <col:9> 'unsigned int' lvalue ->_pass 0x557cc31c99e0
|     | `-CXXThisExpr 0x557cc31c9c38 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x557cc31c9c98 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x557cc31c9c78 <col:17> 'int' 0
|-CXXConstructorDecl 0x557cc3256208 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x557cc3256208
| `-ParmVarDecl 0x557cc3256318 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x557cc32563b8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x557cc32563b8
| `-ParmVarDecl 0x557cc32564c8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x557cc32566b8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x557cc32566b8
|-CXXMethodDecl 0x557cc3256eb8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x557cc3256eb8
| `-ParmVarDecl 0x557cc3256fc8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x557cc3257038 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x557cc3257038
  `-ParmVarDecl 0x557cc3257148 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc312cdf8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x557cc312cf28 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x557cc312cf88 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x557cc312cfe8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x557cc325d3c8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x557cc325d4a0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x557cc325d4a0
|-CXXConstructorDecl 0x557cc325d758 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x557cc325d758
| `-ParmVarDecl 0x557cc325d868 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x557cc325d908 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x557cc325d908
  `-ParmVarDecl 0x557cc325da18 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc312cc48 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x557cc312cd68 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x557cc312cdf8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x557cc312cf28 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x557cc312cf88 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x557cc312cfe8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x557cc325d3c8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x557cc325d4a0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x557cc325d4a0
| |-CXXConstructorDecl 0x557cc325d758 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x557cc325d758
| | `-ParmVarDecl 0x557cc325d868 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x557cc325d908 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x557cc325d908
|   `-ParmVarDecl 0x557cc325da18 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x557cc312d0a8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x557cc312d108 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x557cc312d0a8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x557cc312cf28 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x557cc312d160 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x557cc312d0a8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x557cc312cf88 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x557cc312d1b8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x557cc312d0a8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x557cc312cfe8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x557cc312d210 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x557cc325d2d8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x557cc325dc38 <col:11>
|-CXXConstructorDecl 0x557cc325d5a8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x557cc325d5a8
| `-ParmVarDecl 0x557cc325d6b8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x557cc325dab8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x557cc325dab8
  `-ParmVarDecl 0x557cc325dbc8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc3144740 prev 0x557cc313b580 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc3144838 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x557cc31448d8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x557cc314b6a0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x557cc314ba88 <col:11>
|-CXXConstructorDecl 0x557cc314b780 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x557cc314b868 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x557cc314c1d0 <col:11>
|-CXXConstructorDecl 0x557cc314b908 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x557cc314ba18 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x557cc314da28 <col:11>
|-CXXDestructorDecl 0x557cc314cd38 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x557cc2e538e8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x557cc2e539f8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x557cc2e542c0 <col:11>
|   `-ReturnStmt 0x557cc2e542b0 <col:11>
|     `-UnaryOperator 0x557cc2e54298 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x557cc2e54288 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x557cc2e53a68 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x557cc2e53b78 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x557cc31e6160 <col:11>
    `-ReturnStmt 0x557cc31e6150 <col:11>
      `-UnaryOperator 0x557cc31e6138 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x557cc31e6128 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc313a738 prev 0x557cc313a448 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc313a830 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x557cc313a8c0 <col:19, col:25> col:19 public
|-TypedefDecl 0x557cc313a8f8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x557cc2d9fac0 'int32_t' sugar
|   |-Typedef 0x557cc2cb1328 'int32_t'
|   `-TypedefType 0x557cc2c8a510 '__int32_t' sugar
|     |-Typedef 0x557cc2c8a128 '__int32_t'
|     `-BuiltinType 0x557cc2c48580 'int'
|-TypedefDecl 0x557cc313a960 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x557cc2d9fc80 'int64_t' sugar
|   |-Typedef 0x557cc2cb1390 'int64_t'
|   `-TypedefType 0x557cc2c8a630 '__int64_t' sugar
|     |-Typedef 0x557cc2c8a208 '__int64_t'
|     `-BuiltinType 0x557cc2c485a0 'long'
|-EnumDecl 0x557cc313a9b8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x557cc313ab30 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x557cc313ab10 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x557cc313aae8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x557cc313aad0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x557cc313aaa0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x557cc313ac28 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x557cc313ac08 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x557cc313abe0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x557cc313abc8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x557cc313aba0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x557cc313ab80 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x557cc313ac78 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x557cc313ad80 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557cc313b2d0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc313ad60 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x557cc313ad40 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x557cc313ae10 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557cc313b2e8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc313adf0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x557cc313add0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x557cc313aea0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557cc313b300 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc313ae80 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x557cc313ae60 <col:25> 'int' 1000
| |-EnumConstantDecl 0x557cc313af30 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557cc313b318 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc313af10 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x557cc313aef0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x557cc313afc0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557cc313b330 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc313afa0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x557cc313af80 <col:25> 'int' 1000
| |-EnumConstantDecl 0x557cc313b050 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557cc313b348 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc313b030 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x557cc313b010 <col:24> 'int' 1000
| |-EnumConstantDecl 0x557cc313b0e0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557cc313b360 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc313b0c0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x557cc313b0a0 <col:26> 'int' EnumConstant 0x557cc313ad80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x557cc313b1b0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x557cc313b378 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc313b190 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x557cc313b170 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x557cc313b130 <col:27> 'int' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x557cc313b150 <col:44> 'int' EnumConstant 0x557cc313b050 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x557cc313b280 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x557cc313b390 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc313b260 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x557cc313b240 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x557cc313b200 <col:27> 'int' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x557cc313b220 <col:44> 'int' EnumConstant 0x557cc313af30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x557cc313b3a8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x557cc313b4b0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x557cc313b500 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc313b490 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x557cc313b470 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x557cc313b528 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x557cc2d9f6f0 'uninitialized_type'
|   `-CXXRecord 0x557cc2d9f658 'uninitialized_type'
|-CXXRecordDecl 0x557cc313b580 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x557cc313b690 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x557cc3145888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557cc314ba98 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557cc314bbb8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x557cc314bb70 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x557cc314bb00 <col:9> '<bound member function type>' ->assign 0x557cc31402d8
|     | `-CXXThisExpr 0x557cc314baf0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x557cc314bb30 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x557cc314bba0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x557cc314bb50 <col:19> 'int' 0
|-CXXConstructorDecl 0x557cc313b8d8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x557cc313b750 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x557cc313b7c8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x557cc31473d0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557cc31473b0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x557cc3145888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557cc314bbd0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557cc314bd20 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x557cc314bca8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x557cc314bc38 <col:9> '<bound member function type>' ->assign 0x557cc31402d8
|     | `-CXXThisExpr 0x557cc314bc28 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x557cc314bcf0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x557cc314bcd8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x557cc314bc68 <col:16> 'long' lvalue ParmVar 0x557cc313b750 'sec' 'long'
|     `-ImplicitCastExpr 0x557cc314bd08 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x557cc314bc88 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc313b7c8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x557cc313bb38 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x557cc313b9a8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x557cc313ba20 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x557cc3147408 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557cc31473e8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x557cc3145888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557cc314bd38 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557cc314be70 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x557cc314be10 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x557cc314bda0 <col:9> '<bound member function type>' ->assign 0x557cc31402d8
|     | `-CXXThisExpr 0x557cc314bd90 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x557cc314be40 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x557cc314bdd0 <col:16> 'int' lvalue ParmVar 0x557cc313b9a8 'sec' 'int'
|     `-ImplicitCastExpr 0x557cc314be58 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x557cc314bdf0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc313ba20 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x557cc313bd98 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x557cc313bc08 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x557cc313bc80 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x557cc3147440 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557cc3147420 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x557cc3145888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557cc314be88 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557cc314bfd8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x557cc314bf60 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x557cc314bef0 <col:9> '<bound member function type>' ->assign 0x557cc31402d8
|     | `-CXXThisExpr 0x557cc314bee0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x557cc314bfa8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x557cc314bf90 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x557cc314bf20 <col:16> 'unsigned long' lvalue ParmVar 0x557cc313bc08 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x557cc314bfc0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x557cc314bf40 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc313bc80 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x557cc313cf30 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x557cc313be68 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x557cc313bee0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x557cc3147478 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557cc3147458 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x557cc3145888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557cc314bff0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557cc314c140 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x557cc314c0c8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x557cc314c058 <col:9> '<bound member function type>' ->assign 0x557cc31402d8
|     | `-CXXThisExpr 0x557cc314c048 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x557cc314c110 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x557cc314c0f8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x557cc314c088 <col:16> 'unsigned int' lvalue ParmVar 0x557cc313be68 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x557cc314c128 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x557cc314c0a8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc313bee0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x557cc313d090 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x557cc313d000 <col:31> col:37 'double'
|-CXXConstructorDecl 0x557cc313d228 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x557cc313d168 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x557cc313d458 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x557cc313d360 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x557cc313d608 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x557cc313d548 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x557cc3145888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557cc314c1e0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x557cc314c158 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x557cc313d548 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x557cc314c240 <col:19, line:214:5>
|-CXXConstructorDecl 0x557cc313d7d8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x557cc313d718 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x557cc3145888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557cc314c250 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557cc314c300 <col:53, line:219:5>
|   `-CStyleCastExpr 0x557cc314c2d8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x557cc314c2a8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x557cc313d718 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x557cc313d9c8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x557cc313d940 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x557cc313a4e0 'Timestamp'
|   | `-CXXRecord 0x557cc313a738 'Timestamp'
|   `-ParenType 0x557cc313d8e0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x557cc313d8b0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x557cc313aa80 'Timestamp::seconds_type' sugar
|         |-Typedef 0x557cc313a8f8 'seconds_type'
|         `-TypedefType 0x557cc2d9fac0 'int32_t' sugar
|           |-Typedef 0x557cc2cb1328 'int32_t'
|           `-TypedefType 0x557cc2c8a510 '__int32_t' sugar
|             |-Typedef 0x557cc2c8a128 '__int32_t'
|             `-BuiltinType 0x557cc2c48580 'int'
|-CXXConversionDecl 0x557cc313db08 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x557cc313dbd8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x557cc314c408 <col:37, line:231:5>
|   `-ReturnStmt 0x557cc314c3f8 <line:227:9, col:23>
|     `-BinaryOperator 0x557cc314c3d8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x557cc314c3a8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x557cc314c358 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x557cc31448d8
|       |   `-MemberExpr 0x557cc314c328 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x557cc3145888
|       |     `-CXXThisExpr 0x557cc314c318 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x557cc314c3c0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x557cc314c388 <col:23> 'int' 0
|-CXXMethodDecl 0x557cc313dc98 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x557cc313dd58 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x557cc313de18 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x557cc313ded8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x557cc313df98 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x557cc313e108 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x557cc313e048 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x557cc313e250 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x557cc313e1c0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc313e318 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x557cc313e3b8 <col:54> "" ""
|-CXXMethodDecl 0x557cc313e448 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x557cc313e4e8 <col:54> "" ""
|-CXXMethodDecl 0x557cc313e578 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x557cc313e618 <col:54> "" ""
|-CXXMethodDecl 0x557cc313e718 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x557cc313e7e8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x557cc313e918 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x557cc313ea10 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x557cc313eb48 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x557cc314c620 <col:39, line:271:5>
|   `-ReturnStmt 0x557cc314c610 <line:267:9, col:61>
|     `-CallExpr 0x557cc314c5b0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x557cc314c598 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557cc314c420 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x557cc3145bb8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x557cc314c5e0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x557cc314c480 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x557cc31448d8
|       |   `-MemberExpr 0x557cc314c450 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x557cc3145888
|       |     `-CXXThisExpr 0x557cc314c440 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x557cc314c5f8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x557cc314c520 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x557cc314c4f0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x557cc314c4b0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x557cc314c508 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x557cc314c4d0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b050 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557cc313ec08 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x557cc314c7e0 <col:39, line:279:5>
|   `-ReturnStmt 0x557cc314c7d0 <line:275:9, col:61>
|     `-CallExpr 0x557cc314c770 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x557cc314c758 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557cc314c638 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x557cc3145bb8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x557cc314c7a0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x557cc314c698 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x557cc31448d8
|       |   `-MemberExpr 0x557cc314c668 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x557cc3145888
|       |     `-CXXThisExpr 0x557cc314c658 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x557cc314c7b8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x557cc314c738 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x557cc314c708 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x557cc314c6c8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x557cc314c720 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x557cc314c6e8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313af30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557cc313ecc8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x557cc314c978 <col:39, line:287:5>
|   `-ReturnStmt 0x557cc314c968 <line:283:9, col:53>
|     `-BinaryOperator 0x557cc314c948 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x557cc314c918 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x557cc314c838 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x557cc31448d8
|       |   `-MemberExpr 0x557cc314c808 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x557cc3145888
|       |     `-CXXThisExpr 0x557cc314c7f8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x557cc314c930 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x557cc314c8f8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x557cc314c8d8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x557cc314c8a8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557cc314c868 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313ad80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557cc314c8c0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557cc314c888 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557cc313edb8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x557cc314dc10 <col:40, line:293:5>
|   |-DeclStmt 0x557cc314cac0 <line:291:9, col:48>
|   | `-VarDecl 0x557cc314c9a0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x557cc314caa0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x557cc314ca48 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x557cc314ca18 <col:22> '<bound member function type>' ->subsec 0x557cc313dd58
|   |     |   `-CXXThisExpr 0x557cc314ca08 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x557cc314ca88 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x557cc314ca68 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b1b0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x557cc314dc00 <line:292:9, col:70>
|     `-ExprWithCleanups 0x557cc314dbe8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x557cc314dbb8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557cc314dba0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x557cc314db80 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x557cc314db50 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x557cc314d8e8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x557cc314d8d0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x557cc314cad8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x557cc314c9a0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x557cc314daf0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x557cc314dad8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x557cc314daa8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x557cc314d900 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x557cc314d870 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x557cc314d858 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x557cc314d808 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x557cc313a688 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x557cc314d7a8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x557cc314cb08 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x557cc314caf8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x557cc314d7f0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x557cc314d7d8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x557cc314cfc8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x557cc314cb30 <col:39> 'int' 0
|               |               `-BinaryOperator 0x557cc314cbc0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x557cc314cb90 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x557cc314cb50 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b1b0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x557cc314cba8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x557cc314cb70 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x557cc314c9a0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x557cc314db20 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x557cc314d8b8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x557cc314d8a8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x557cc313ee78 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x557cc314e168 <col:40, line:302:5>
|   |-DeclStmt 0x557cc314dd60 <line:297:9, col:48>
|   | `-VarDecl 0x557cc314dc40 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x557cc314dd40 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x557cc314dce8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x557cc314dcb8 <col:22> '<bound member function type>' ->subsec 0x557cc313dd58
|   |     |   `-CXXThisExpr 0x557cc314dca8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x557cc314dd28 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x557cc314dd08 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b280 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x557cc314e158 <line:298:9, col:70>
|     `-ExprWithCleanups 0x557cc314e140 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x557cc314e110 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557cc314e0f8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x557cc314e0d8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x557cc314e0a8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x557cc314dfd0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x557cc314dfb8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x557cc314dd78 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x557cc314dc40 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x557cc314e048 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x557cc314e030 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x557cc314e000 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x557cc314dfe8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x557cc314df58 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x557cc314df40 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x557cc314df20 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x557cc313a688 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x557cc314dec0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x557cc314dda8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x557cc314dd98 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x557cc314df08 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x557cc314def0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x557cc314de80 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x557cc314ddd0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x557cc314de60 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x557cc314de30 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x557cc314ddf0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b280 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x557cc314de48 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x557cc314de10 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x557cc314dc40 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x557cc314e078 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x557cc314dfa0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x557cc314df90 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x557cc313ef38 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x557cc314e1f0 <col:40, line:306:5>
|   `-ReturnStmt 0x557cc314e1e0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x557cc314e1b0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x557cc314e198 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x557cc314e188 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x557cc313f0d8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x557cc313efe8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x557cc313f2a8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x557cc313f1b0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x557cc313f398 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x557cc313f508 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x557cc313f448 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x557cc314e338 <col:56, line:320:5>
|   `-ReturnStmt 0x557cc314e328 <line:319:9, col:32>
|     `-ExprWithCleanups 0x557cc314e310 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x557cc314e2e0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557cc314e2c8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x557cc314e288 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x557cc314e258 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x557cc314e218 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557cc313f448 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x557cc314e270 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x557cc314e238 <col:31> 'int' 0
|-CXXMethodDecl 0x557cc313f748 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x557cc313f5c0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557cc313f638 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc314e508 <col:72, line:326:5>
|   `-ReturnStmt 0x557cc314e4f8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x557cc314e4e0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x557cc314e4b0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557cc314e498 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x557cc314e458 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x557cc314e440 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x557cc314e360 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557cc313f5c0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x557cc314e400 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x557cc314e3e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x557cc314e380 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x557cc3144030 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x557cc314e428 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x557cc314e3a0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc313f638 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc313f8f8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x557cc313f808 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x557cc314ebd0 <col:56, line:337:5>
|   |-DeclStmt 0x557cc314e808 <line:329:9, col:51>
|   | `-VarDecl 0x557cc314e530 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x557cc314e7f0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x557cc314e7c0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x557cc314e7a8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x557cc314e790 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x557cc314e760 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x557cc314e748 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x557cc314e730 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x557cc314e620 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x557cc314e9c0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x557cc314e870 <col:9, col:14> 'int64_t':'long' lvalue .x 0x557cc31448d8
|   | | `-MemberExpr 0x557cc314e840 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x557cc3145888
|   | |   `-DeclRefExpr 0x557cc314e820 <col:9> 'Timestamp' lvalue Var 0x557cc314e530 't' 'Timestamp'
|   | `-BinaryOperator 0x557cc314e9a0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x557cc314e970 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cc314e8a0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x557cc313f808 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x557cc314e988 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x557cc314e950 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x557cc314e930 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x557cc314e900 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x557cc314e8c0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x557cc314e918 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x557cc314e8e0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b050 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x557cc314ebb8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x557cc314eb88 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x557cc314eb70 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x557cc314eb50 <col:16> 'Timestamp' lvalue Var 0x557cc314e530 't' 'Timestamp'
|-CXXMethodDecl 0x557cc313fac0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x557cc313f9b0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557cc313fa28 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc314ed88 <col:72, line:343:5>
|   `-ReturnStmt 0x557cc314ed78 <line:342:9, col:51>
|     `-ExprWithCleanups 0x557cc314ed60 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x557cc314ed30 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557cc314ed18 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x557cc314ecd8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x557cc314ecc0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x557cc314ec08 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557cc313f9b0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x557cc314ec80 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x557cc314ec68 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x557cc314ec28 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x557cc3144178 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x557cc314eca8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x557cc314ec48 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc313fa28 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc313fc10 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x557cc313fb80 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x557cc314f1d0 <col:56, line:354:5>
|   |-DeclStmt 0x557cc314ef78 <line:346:9, col:51>
|   | `-VarDecl 0x557cc314edb0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x557cc314ef60 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x557cc314ef30 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x557cc314ef18 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x557cc314ef00 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x557cc314eed0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x557cc314eeb8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x557cc314eea0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x557cc314ee70 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x557cc314f130 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x557cc314efe0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x557cc31448d8
|   | | `-MemberExpr 0x557cc314efb0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x557cc3145888
|   | |   `-DeclRefExpr 0x557cc314ef90 <col:9> 'Timestamp' lvalue Var 0x557cc314edb0 't' 'Timestamp'
|   | `-BinaryOperator 0x557cc314f110 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x557cc314f0e0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cc314f010 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x557cc313fb80 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x557cc314f0f8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x557cc314f0c0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x557cc314f0a0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x557cc314f070 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x557cc314f030 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x557cc314f088 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x557cc314f050 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313af30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x557cc314f1b8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x557cc314f188 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x557cc314f170 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x557cc314f150 <col:16> 'Timestamp' lvalue Var 0x557cc314edb0 't' 'Timestamp'
|-CXXMethodDecl 0x557cc313fdd8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x557cc313fcc8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557cc313fd40 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc314f388 <col:72, line:360:5>
|   `-ReturnStmt 0x557cc314f378 <line:359:9, col:51>
|     `-ExprWithCleanups 0x557cc314f360 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x557cc314f330 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557cc314f318 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x557cc314f2d8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x557cc314f2c0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x557cc314f208 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557cc313fcc8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x557cc314f280 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x557cc314f268 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x557cc314f228 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x557cc31442c0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x557cc314f2a8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x557cc314f248 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc313fd40 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc313ff28 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x557cc313fe98 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x557cc315bcf8 <col:56, line:371:5>
|   |-DeclStmt 0x557cc314f578 <line:363:9, col:51>
|   | `-VarDecl 0x557cc314f3b0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x557cc314f560 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x557cc314f530 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x557cc314f518 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x557cc314f500 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x557cc314f4d0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x557cc314f4b8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x557cc314f4a0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x557cc314f470 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x557cc315bc58 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x557cc314f5e0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x557cc31448d8
|   | | `-MemberExpr 0x557cc314f5b0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x557cc3145888
|   | |   `-DeclRefExpr 0x557cc314f590 <col:9> 'Timestamp' lvalue Var 0x557cc314f3b0 't' 'Timestamp'
|   | `-CallExpr 0x557cc315bbf8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x557cc315bbe0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x557cc314f610 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x557cc3145bb8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x557cc315bc28 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cc314f630 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x557cc313fe98 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x557cc315bc40 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x557cc315bbc0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x557cc315bb90 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x557cc314f650 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313ad80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x557cc315bba8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x557cc314f670 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x557cc315bce0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x557cc315bcb0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x557cc315bc98 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x557cc315bc78 <col:16> 'Timestamp' lvalue Var 0x557cc314f3b0 't' 'Timestamp'
|-CXXMethodDecl 0x557cc3140018 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x557cc315be38 <col:39, line:377:5>
|   `-ReturnStmt 0x557cc315be28 <line:376:9, col:30>
|     `-ExprWithCleanups 0x557cc315be10 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x557cc315bde0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557cc315bdc8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x557cc315bd88 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x557cc315bd30 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x557cc315bd70 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x557cc315bd50 <col:29> 'int' 1
|-CXXMethodDecl 0x557cc31400d8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x557cc315bf18 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x557cc315bed0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x557cc315be60 <col:9> '<bound member function type>' ->assign 0x557cc31402d8
|     | `-CXXThisExpr 0x557cc315be50 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x557cc315be90 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x557cc315bf00 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x557cc315beb0 <col:19> 'int' 0
|-CXXMethodDecl 0x557cc31402d8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557cc3140188 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557cc3140200 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x557cc31474b0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557cc3147490 <col:60> 'int' 0
| `-CompoundStmt 0x557cc315c110 <col:63, line:395:5>
|   `-BinaryOperator 0x557cc315c0f0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x557cc315bf70 <col:9, col:12> 'int64_t':'long' lvalue .x 0x557cc31448d8
|     | `-MemberExpr 0x557cc315bf40 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x557cc3145888
|     |   `-CXXThisExpr 0x557cc315bf30 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x557cc315c0d0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x557cc315c060 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x557cc315c000 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x557cc315bfe8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x557cc315bfd0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x557cc315bfa0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557cc3140188 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x557cc315c048 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x557cc315c028 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x557cc315c0b8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x557cc315c0a0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x557cc315c080 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc3140200 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc31404a8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557cc3140398 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557cc3140410 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc315c268 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x557cc315c220 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x557cc315c138 <col:9> '<bound member function type>' ->assign 0x557cc31402d8
|     | `-CXXThisExpr 0x557cc315c128 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x557cc315c250 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x557cc315c168 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557cc3140398 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x557cc315c1e0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x557cc315c1c8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557cc315c188 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x557cc3144178 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x557cc315c208 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557cc315c1a8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc3140410 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc3140678 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557cc3140568 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557cc31405e0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc315c3c0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x557cc315c378 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x557cc315c290 <col:9> '<bound member function type>' ->assign 0x557cc31402d8
|     | `-CXXThisExpr 0x557cc315c280 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x557cc315c3a8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x557cc315c2c0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x557cc3140568 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x557cc315c338 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x557cc315c320 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557cc315c2e0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x557cc31442c0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x557cc315c360 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557cc315c300 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc31405e0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc3140848 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557cc3140738 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557cc31407b0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x557cc31474e8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x557cc31474c8 <col:57> 'int' 0
| `-DeprecatedAttr 0x557cc31408f8 <col:75> "" ""
|-CXXMethodDecl 0x557cc3140a88 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557cc3140978 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557cc31409f0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557cc3140b38 <col:74> "" ""
|-CXXMethodDecl 0x557cc3140cc8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x557cc3140bb8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x557cc3140c30 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557cc3140d78 <col:74> "" ""
|-CXXMethodDecl 0x557cc3140e08 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x557cc3140ea8 <col:42> "" ""
|-CXXMethodDecl 0x557cc31436e0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x557cc31435c0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x557cc3143640 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x557cc31437b0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x557cc3143870 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x557cc3143910 <col:20>
| `-OptimizeNoneAttr 0x557cc3143968 <col:30>
|-CXXMethodDecl 0x557cc31439b0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x557cc3143a70 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x557cc3143b30 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x557cc3143bf0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x557cc3143cb0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x557cc3143d70 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x557cc3143e30 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x557cc3143ef0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x557cc3144030 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x557cc3143fa0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc315c508 <col:58, line:512:5>
|   `-ReturnStmt 0x557cc315c4f8 <line:511:9, col:53>
|     `-BinaryOperator 0x557cc315c4d8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x557cc315c4a8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x557cc315c3d8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc3143fa0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x557cc315c4c0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x557cc315c488 <col:23, col:53> 'int'
|           `-BinaryOperator 0x557cc315c468 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x557cc315c438 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557cc315c3f8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557cc315c450 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557cc315c418 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b050 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557cc3144178 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x557cc31440e8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc315c650 <col:58, line:516:5>
|   `-ReturnStmt 0x557cc315c640 <line:515:9, col:53>
|     `-BinaryOperator 0x557cc315c620 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x557cc315c5f0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x557cc315c520 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc31440e8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x557cc315c608 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x557cc315c5d0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x557cc315c5b0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x557cc315c580 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557cc315c540 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557cc315c598 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557cc315c560 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313af30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557cc31442c0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x557cc3144230 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc315c798 <col:58, line:520:5>
|   `-ReturnStmt 0x557cc315c788 <line:519:9, col:53>
|     `-BinaryOperator 0x557cc315c768 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x557cc315c738 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x557cc315c668 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc3144230 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x557cc315c750 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x557cc315c718 <col:23, col:53> 'int'
|           `-BinaryOperator 0x557cc315c6f8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x557cc315c6c8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557cc315c688 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313ad80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557cc315c6e0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557cc315c6a8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557cc3144408 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x557cc3144378 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc315c8e0 <col:60, line:524:5>
|   `-ReturnStmt 0x557cc315c8d0 <line:523:9, col:55>
|     `-BinaryOperator 0x557cc315c8b0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x557cc315c880 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x557cc315c7b0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc3144378 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x557cc315c898 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x557cc315c860 <col:25, col:55> 'int'
|           `-BinaryOperator 0x557cc315c840 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x557cc315c810 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557cc315c7d0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557cc315c828 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557cc315c7f0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b050 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557cc3144550 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x557cc31444c0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc315ca28 <col:60, line:528:5>
|   `-ReturnStmt 0x557cc315ca18 <line:527:9, col:55>
|     `-BinaryOperator 0x557cc315c9f8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x557cc315c9c8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x557cc315c8f8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc31444c0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x557cc315c9e0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x557cc315c9a8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x557cc315c988 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x557cc315c958 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557cc315c918 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557cc315c970 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557cc315c938 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313af30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x557cc3144698 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x557cc3144608 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc315cb70 <col:60, line:532:5>
|   `-ReturnStmt 0x557cc315cb60 <line:531:9, col:55>
|     `-BinaryOperator 0x557cc315cb40 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x557cc315cb10 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x557cc315ca40 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc3144608 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x557cc315cb28 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x557cc315caf0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x557cc315cad0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x557cc315caa0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x557cc315ca60 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313ad80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x557cc315cab8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x557cc315ca80 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x557cc313b0e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x557cc3144740 prev 0x557cc313b580 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557cc3144838 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x557cc31448d8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x557cc314b6a0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x557cc314ba88 <col:11>
| |-CXXConstructorDecl 0x557cc314b780 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x557cc314b868 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x557cc314c1d0 <col:11>
| |-CXXConstructorDecl 0x557cc314b908 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x557cc314ba18 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x557cc314da28 <col:11>
| |-CXXDestructorDecl 0x557cc314cd38 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x557cc2e538e8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x557cc2e539f8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x557cc2e542c0 <col:11>
| |   `-ReturnStmt 0x557cc2e542b0 <col:11>
| |     `-UnaryOperator 0x557cc2e54298 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x557cc2e54288 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x557cc2e53a68 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x557cc2e53b78 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x557cc31e6160 <col:11>
|     `-ReturnStmt 0x557cc31e6150 <col:11>
|       `-UnaryOperator 0x557cc31e6138 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x557cc31e6128 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x557cc3144940 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x557cc3144a40 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x557cc3144c40 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc3144a20 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x557cc3144a00 <col:21> 'int' 0
| |-EnumConstantDecl 0x557cc3144ad0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x557cc3144c58 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc3144ab0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x557cc3144a90 <col:23> 'int' 1
| |-EnumConstantDecl 0x557cc3144b60 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x557cc3144c70 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc3144b40 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x557cc3144b20 <col:23> 'int' 2
| `-EnumConstantDecl 0x557cc3144bf0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x557cc3144c88 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc3144bd0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x557cc3144bb0 <col:27> 'int' 3
|-CXXMethodDecl 0x557cc3144cc8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x557cc3144d90 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x557cc3144f98 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x557cc3144e40 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x557cc3144ec0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x557cc3147500 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x557cc31451a8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x557cc3145058 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x557cc31450d0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x557cc3145278 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x557cc3145338 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x557cc31454a8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x557cc31453e8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x557cc3145570 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x557cc3145630 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x557cc31456f0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x557cc31457b0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x557cc3145850 <line:670:3, col:10> col:3 private
|-FieldDecl 0x557cc3145888 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x557cc31458f8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x557cc315cb88 <col:27, line:684:5>
|-CXXMethodDecl 0x557cc31459b8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x557cc315cb98 <col:27, line:696:5>
|-CXXMethodDecl 0x557cc3145bb8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x557cc3145a68 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x557cc3145ae0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc315cd20 <col:66, line:700:5>
|   `-ReturnStmt 0x557cc315cd10 <line:699:9, col:31>
|     `-CallExpr 0x557cc315ccb0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x557cc315cc98 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557cc315cc48 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x557cc2fc7f68 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x557cc315cce0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x557cc315cc08 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x557cc3145a68 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x557cc315ccf8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557cc315cc28 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc3145ae0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc3145f28 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x557cc3145c78 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x557cc3145cf0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x557cc3145d68 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x557cc3145de0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc315d070 <col:64, line:707:5>
|   |-DeclStmt 0x557cc315cdb0 <line:704:9, col:24>
|   | `-VarDecl 0x557cc315cd48 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x557cc315cfc0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x557cc315cdc8 <col:9> 'int32_t':'int' lvalue ParmVar 0x557cc3145cf0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x557cc315cfa8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x557cc315cf40 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x557cc315cf28 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x557cc315cea8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x557cc2fcd238 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x557cc315cf78 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x557cc315ce48 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x557cc3145d68 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x557cc315cf90 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x557cc315ce68 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc3145de0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x557cc315ce88 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x557cc315cd48 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x557cc315d050 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x557cc315cfe0 <col:9> 'int32_t':'int' lvalue ParmVar 0x557cc3145c78 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x557cc315d038 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x557cc315d020 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x557cc315d000 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x557cc315cd48 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x557cc31461c8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x557cc3145ff8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x557cc3146070 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x557cc31460e8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x557cc3146468 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x557cc3146290 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x557cc3146308 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x557cc3146380 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x557cc31465f8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x557cc3146530 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x557cc31467f8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x557cc31466b0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x557cc3146728 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x557cc3146ac8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x557cc3146a08 parent 0x557cc2c48488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x557cc31468b8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x557cc3146930 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x557cc3146ce8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x557cc3146c28 parent 0x557cc2c48488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x557cc3146b18 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x557cc3146b90 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x557cc3146eb0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x557cc3146df8 parent 0x557cc2c48488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x557cc3146d38 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x557cc3147138 <line:720:5, col:73> col:30
| `-FunctionDecl 0x557cc3147078 parent 0x557cc2c48488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x557cc3146f28 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x557cc3146fa0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x557cc3147358 <line:721:5, col:73> col:30
| `-FunctionDecl 0x557cc3147298 parent 0x557cc2c48488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x557cc3147188 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x557cc3147200 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x557cc314cbe0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x557cc314ccc8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x557cc3145888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557cc314d738 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x557cc314d6f0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x557cc3145888
| |     `-DeclRefExpr 0x557cc314d6d0 <col:7> 'const Timestamp' lvalue ParmVar 0x557cc314ccc8 '' 'const Timestamp &'
| `-CompoundStmt 0x557cc314d798 <col:7>
|-CXXConstructorDecl 0x557cc314ce48 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x557cc314cf58 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x557cc3145888 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x557cc314da38 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x557cc314d9e0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x557cc3145888
| |     `-CXXStaticCastExpr 0x557cc314d9b0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x557cc314d980 <col:7> 'Timestamp' lvalue ParmVar 0x557cc314cf58 '' 'Timestamp &&'
| `-CompoundStmt 0x557cc314da98 <col:7>
|-CXXDestructorDecl 0x557cc314d008 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x557cc2e53738 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x557cc2e53848 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x557cc2e54338 <col:7>
|   |-CXXMemberCallExpr 0x557cc2e542d8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x557cc2e54218 <col:7> '<bound member function type>' .operator= 0x557cc2e538e8
|   | | `-MemberExpr 0x557cc2e54128 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x557cc3145888
|   | |   `-CXXThisExpr 0x557cc2e54118 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x557cc2e541e8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x557cc3145888
|   |   `-DeclRefExpr 0x557cc2e541c8 <col:7> 'const Timestamp' lvalue ParmVar 0x557cc2e53848 '' 'const Timestamp &'
|   `-ReturnStmt 0x557cc2e54328 <col:7>
|     `-UnaryOperator 0x557cc2e54310 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x557cc2e54300 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x557cc2e53be8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x557cc2e53cf8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x557cc31e61d8 <col:7>
    |-CXXMemberCallExpr 0x557cc31e6178 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x557cc31e60e0 <col:7> '<bound member function type>' .operator= 0x557cc2e53a68
    | | `-MemberExpr 0x557cc31e5fb0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x557cc3145888
    | |   `-CXXThisExpr 0x557cc31e5fa0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x557cc31e60b0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x557cc3145888
    |   `-CXXStaticCastExpr 0x557cc31e6080 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x557cc31e6050 <col:7> 'Timestamp' lvalue ParmVar 0x557cc2e53cf8 '' 'Timestamp &&'
    `-ReturnStmt 0x557cc31e61c8 <col:7>
      `-UnaryOperator 0x557cc31e61b0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x557cc31e61a0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x557cc31eaed0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x557cc31eb0a8 prev 0x557cc31eaed0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x557cc31eb138 <col:46, col:52> col:46 public
|-TypedefDecl 0x557cc31eb160 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x557cc2c48580 'int'
|-TypedefDecl 0x557cc31f0b60 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x557cc31f0b10 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x557cc31eb610 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x557cc31eb510 'type'
|     `-TemplateSpecializationType 0x557cc31eb4a0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x557cc31eb380 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x557cc31eb360 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x557cc31eb340 <col:24> 'unsigned long' 16
|       `-RecordType 0x557cc31eb480 'char_array<16>'
|         `-ClassTemplateSpecialization 0x557cc31eb3a0 'char_array'
|-TypedefDecl 0x557cc31f0c18 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x557cc31f0be0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x557cc31f0bc0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x557cc31f0b60 'type'
|     `-ElaboratedType 0x557cc31f0b10 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x557cc31eb610 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x557cc31eb510 'type'
|         `-TemplateSpecializationType 0x557cc31eb4a0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x557cc31eb380 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x557cc31eb360 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x557cc31eb340 <col:24> 'unsigned long' 16
|           `-RecordType 0x557cc31eb480 'char_array<16>'
|             `-ClassTemplateSpecialization 0x557cc31eb3a0 'char_array'
|-CXXMethodDecl 0x557cc31f0d98 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x557cc31f0ca8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x557cc31f0e88 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x557cc31f0f68 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x557cc31f0f68
|-CXXMethodDecl 0x557cc31f1238 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x557cc31f1140 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x557cc31f1478 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x557cc31f12f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557cc31f1368 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x557cc31f1648 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x557cc31f1538 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557cc31f15b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x557cc31f17a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x557cc31f1878 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x557cc31f1ac8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x557cc31f1938 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x557cc31f19b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x557cc31f1d28 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x557cc31f1b98 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x557cc31f1c10 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x557cc31f1ee8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x557cc31f1df8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x557cc31f20a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x557cc31f1fb0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x557cc31f2160 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x557cc31f2210 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x557cc31f2448 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x557cc31f22c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557cc31f2338 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x557cc31f26e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x557cc31f25f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x557cc31f27b0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x557cc31f2800 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x557cc31f2850 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x557cc31e97e8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x557cc31e99f8 prev 0x557cc31e97e8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x557cc31eae40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x557cc31eadf0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x557cc31eadd0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x557cc31eac80 'type'
|     `-SubstTemplateTypeParmType 0x557cc31eaaa0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x557cc2f11100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f110a8 'T'
|       `-RecordType 0x557cc31ea5f0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x557cc31ea508 'sized_array_memory'
|-FieldDecl 0x557cc31f28a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x557cc31f28f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x557cc31f2928 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x557cc31e9a90 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x557cc2f48d98 'T'
|   `-RecordType 0x557cc31e89f0 'TimerSet::heap_element'
|     `-CXXRecord 0x557cc31e8960 'heap_element'
|-TypedefDecl 0x557cc31f29e8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x557cc31f29b0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x557cc31e9a90 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x557cc2f48d98 'T'
|     `-RecordType 0x557cc31e89f0 'TimerSet::heap_element'
|       `-CXXRecord 0x557cc31e8960 'heap_element'
|-TypedefDecl 0x557cc31f2a78 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x557cc31f2a40 'const TimerSet::heap_element &'
|   `-QualType 0x557cc31e9a91 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x557cc31e9a90 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-RecordType 0x557cc31e89f0 'TimerSet::heap_element'
|         `-CXXRecord 0x557cc31e8960 'heap_element'
|-TypedefDecl 0x557cc31f2b08 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x557cc31f2ad0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x557cc31e9a90 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x557cc2f48d98 'T'
|     `-RecordType 0x557cc31e89f0 'TimerSet::heap_element'
|       `-CXXRecord 0x557cc31e8960 'heap_element'
|-TypedefDecl 0x557cc31f2bc8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x557cc31f2b90 'const TimerSet::heap_element *'
|   `-QualType 0x557cc31e9a91 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x557cc31e9a90 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-RecordType 0x557cc31e89f0 'TimerSet::heap_element'
|         `-CXXRecord 0x557cc31e8960 'heap_element'
|-TypedefDecl 0x557cc31f3a30 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x557cc31f39e0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x557cc31f39c0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x557cc31f38f8 'type'
|     `-LValueReferenceType 0x557cc31f38c0 'const TimerSet::heap_element &'
|       `-QualType 0x557cc31f3661 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x557cc31f3660 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x557cc2f1b7d0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x557cc2f1b778 'T'
|           `-RecordType 0x557cc31e89f0 'TimerSet::heap_element'
|             `-CXXRecord 0x557cc31e8960 'heap_element'
|-TypedefDecl 0x557cc31f3a98 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x557cc31f2a40 'const TimerSet::heap_element &'
|   `-QualType 0x557cc31e9a91 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x557cc31e9a90 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-RecordType 0x557cc31e89f0 'TimerSet::heap_element'
|         `-CXXRecord 0x557cc31e8960 'heap_element'
|-TypedefDecl 0x557cc31f3af0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x557cc2c48580 'int'
|-TypedefDecl 0x557cc31f3b58 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x557cc31f2ad0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x557cc31e9a90 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x557cc2f48d98 'T'
|     `-RecordType 0x557cc31e89f0 'TimerSet::heap_element'
|       `-CXXRecord 0x557cc31e8960 'heap_element'
|-TypedefDecl 0x557cc31f3bc0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x557cc31f2b90 'const TimerSet::heap_element *'
|   `-QualType 0x557cc31e9a91 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x557cc31e9a90 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-RecordType 0x557cc31e89f0 'TimerSet::heap_element'
|         `-CXXRecord 0x557cc31e8960 'heap_element'
|-EnumDecl 0x557cc31f3c18 <line:134:5> col:5
| `-EnumConstantDecl 0x557cc31f3d10 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x557cc31f3cf0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x557cc2f4a478 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x557cc2f4a450 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x557cc2f4a430 <col:40> 'int' 1
|-CXXConstructorDecl 0x557cc31f3d98 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x557cc31f4028 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc31f3e50 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557cc31f3ef0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x557cc31f42e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x557cc31f41d0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x557cc31f45a8 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x557cc31f4490 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x557cc31f48f0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x557cc31f47d0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x557cc31f4c00 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x557cc31f4ae0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x557cc31f4ef0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc31f4d38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557cc31f4db0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x557cc31f5048 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x557cc31f5128 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc31f5180 <col:30> Inherited
|-CXXMethodDecl 0x557cc31f51c8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x557cc31f5278 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc31f52d0 <col:30> Inherited
|-CXXMethodDecl 0x557cc31f5398 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x557cc31f5448 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc31f54a0 <col:30> Inherited
|-CXXMethodDecl 0x557cc31f54e8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x557cc31f5598 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc31f55f0 <col:30> Inherited
|-CXXMethodDecl 0x557cc31f5638 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x557cc31f56e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc31f5740 <col:30> Inherited
|-CXXMethodDecl 0x557cc31f5788 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x557cc31f5838 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc31f5890 <col:30> Inherited
|-CXXMethodDecl 0x557cc31f58b8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x557cc31f5968 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x557cc31f5a18 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x557cc31f5bd8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc31f5ac8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557cc31f5b40 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x557cc31f5d28 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x557cc31f5c98 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc31f5ed8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x557cc31f5de0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x557cc31f5f90 <col:20>
| `-OptimizeNoneAttr 0x557cc31f5fe8 <col:30>
|-CXXMethodDecl 0x557cc31f6108 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x557cc31f6010 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x557cc31f61c0 <col:20>
| `-OptimizeNoneAttr 0x557cc31f6218 <col:30>
|-CXXMethodDecl 0x557cc31f62d0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x557cc31f6240 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc31f6418 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x557cc31f6388 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc31f6548 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x557cc31f6678 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x557cc31f6748 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x557cc31f6818 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x557cc31f6958 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x557cc31f68c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc31f6aa0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x557cc31f6a10 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc31f6be8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x557cc31f6b58 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x557cc31f6ca0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x557cc31f6da0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x557cc31f6d10 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x557cc31f6e58 <col:60> Inherited "" ""
|-CXXMethodDecl 0x557cc31f6f18 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x557cc31f7018 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x557cc31f71c8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x557cc31f70d8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x557cc31f79b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x557cc31f7280 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x557cc31f7918 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x557cc31f7818 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x557cc31f7a98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x557cc31f7be8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x557cc31f7b58 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x557cc31f7ca0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x557cc31f7ee8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc31f7d60 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x557cc31f7dd8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x557cc31f8140 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x557cc31f7fb8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x557cc31f8398 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x557cc31f8208 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x557cc31f8280 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x557cc31f8458 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x557cc31f86b8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x557cc31f85c0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x557cc31f8788 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x557cc31f8788

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x557cc31f9cb0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x557cc31f9e88 prev 0x557cc31f9cb0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x557cc31f9f18 <col:46, col:52> col:46 public
|-TypedefDecl 0x557cc31f9f40 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x557cc2c48580 'int'
|-TypedefDecl 0x557cc31fbb10 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x557cc31fbac0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x557cc31fa3f0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x557cc31fa2f0 'type'
|     `-TemplateSpecializationType 0x557cc31fa280 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x557cc31fa160 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x557cc31fa140 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x557cc31fa120 <col:24> 'unsigned long' 8
|       `-RecordType 0x557cc31fa260 'char_array<8>'
|         `-ClassTemplateSpecialization 0x557cc31fa180 'char_array'
|-TypedefDecl 0x557cc31fbbc8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x557cc31fbb90 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x557cc31fbb70 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x557cc31fbb10 'type'
|     `-ElaboratedType 0x557cc31fbac0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x557cc31fa3f0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x557cc31fa2f0 'type'
|         `-TemplateSpecializationType 0x557cc31fa280 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x557cc31fa160 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x557cc31fa140 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x557cc31fa120 <col:24> 'unsigned long' 8
|           `-RecordType 0x557cc31fa260 'char_array<8>'
|             `-ClassTemplateSpecialization 0x557cc31fa180 'char_array'
|-CXXMethodDecl 0x557cc31fbd48 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x557cc31fbc58 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x557cc31fbe38 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x557cc31fbf18 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x557cc31fbf18
|-CXXMethodDecl 0x557cc31fc1e8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x557cc31fc0f0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x557cc31fc428 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x557cc31fc2a0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557cc31fc318 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x557cc31fc5f8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x557cc31fc4e8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557cc31fc560 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x557cc31fc758 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x557cc31fc828 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x557cc31fca78 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x557cc31fc8e8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x557cc31fc960 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x557cc31fccd8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x557cc31fcb48 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x557cc31fcbc0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x557cc31fce98 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x557cc31fcda8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x557cc31fd058 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x557cc31fcf60 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x557cc31fd110 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x557cc31fd1c0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x557cc31fd3f8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x557cc31fd270 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557cc31fd2e8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x557cc31fd698 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x557cc31fd5a0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x557cc31fd760 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x557cc31fd7b0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x557cc31fd800 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x557cc31f88d0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x557cc31f8ad8 prev 0x557cc31f88d0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x557cc31f9c20 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x557cc31f9bd0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x557cc31f9bb0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x557cc31f9a60 'type'
|     `-SubstTemplateTypeParmType 0x557cc31f9880 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x557cc2f11100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f110a8 'T'
|       `-RecordType 0x557cc31f93d0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x557cc31f92e8 'sized_array_memory'
|-FieldDecl 0x557cc31fd850 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x557cc31fd8a0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x557cc31fd8d8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x557cc31f8b70 'Timer *' sugar
|   |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x557cc2f48d98 'T'
|   `-PointerType 0x557cc31ac970 'Timer *'
|     `-RecordType 0x557cc31abac0 'Timer'
|       `-CXXRecord 0x557cc312f758 'Timer'
|-TypedefDecl 0x557cc31fd998 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x557cc31fd960 'Timer *&'
|   `-SubstTemplateTypeParmType 0x557cc31f8b70 'Timer *' sugar
|     |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x557cc2f48d98 'T'
|     `-PointerType 0x557cc31ac970 'Timer *'
|       `-RecordType 0x557cc31abac0 'Timer'
|         `-CXXRecord 0x557cc312f758 'Timer'
|-TypedefDecl 0x557cc31fda58 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x557cc31fda20 'Timer *const &'
|   `-QualType 0x557cc31f8b71 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x557cc31f8b70 'Timer *' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-PointerType 0x557cc31ac970 'Timer *'
|         `-RecordType 0x557cc31abac0 'Timer'
|           `-CXXRecord 0x557cc312f758 'Timer'
|-TypedefDecl 0x557cc31fdb18 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x557cc31fdae0 'Timer **'
|   `-SubstTemplateTypeParmType 0x557cc31f8b70 'Timer *' sugar
|     |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x557cc2f48d98 'T'
|     `-PointerType 0x557cc31ac970 'Timer *'
|       `-RecordType 0x557cc31abac0 'Timer'
|         `-CXXRecord 0x557cc312f758 'Timer'
|-TypedefDecl 0x557cc31fdbd8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x557cc31fdba0 'Timer *const *'
|   `-QualType 0x557cc31f8b71 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x557cc31f8b70 'Timer *' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-PointerType 0x557cc31ac970 'Timer *'
|         `-RecordType 0x557cc31abac0 'Timer'
|           `-CXXRecord 0x557cc312f758 'Timer'
|-TypedefDecl 0x557cc31fe7b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x557cc31fe760 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x557cc31fe740 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x557cc31fe6d0 'type'
|     `-SubstTemplateTypeParmType 0x557cc31fe490 'Timer *' sugar
|       |-TemplateTypeParmType 0x557cc2f1bf00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f1beb0 'T'
|       `-PointerType 0x557cc31ac970 'Timer *'
|         `-RecordType 0x557cc31abac0 'Timer'
|           `-CXXRecord 0x557cc312f758 'Timer'
|-TypedefDecl 0x557cc31fe818 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x557cc31fda20 'Timer *const &'
|   `-QualType 0x557cc31f8b71 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x557cc31f8b70 'Timer *' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-PointerType 0x557cc31ac970 'Timer *'
|         `-RecordType 0x557cc31abac0 'Timer'
|           `-CXXRecord 0x557cc312f758 'Timer'
|-TypedefDecl 0x557cc31fe870 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x557cc2c48580 'int'
|-TypedefDecl 0x557cc31fe8d8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x557cc31fdae0 'Timer **'
|   `-SubstTemplateTypeParmType 0x557cc31f8b70 'Timer *' sugar
|     |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x557cc2f48d98 'T'
|     `-PointerType 0x557cc31ac970 'Timer *'
|       `-RecordType 0x557cc31abac0 'Timer'
|         `-CXXRecord 0x557cc312f758 'Timer'
|-TypedefDecl 0x557cc31fe940 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x557cc31fdba0 'Timer *const *'
|   `-QualType 0x557cc31f8b71 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x557cc31f8b70 'Timer *' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-PointerType 0x557cc31ac970 'Timer *'
|         `-RecordType 0x557cc31abac0 'Timer'
|           `-CXXRecord 0x557cc312f758 'Timer'
|-EnumDecl 0x557cc31fe998 <line:134:5> col:5
| `-EnumConstantDecl 0x557cc31fea90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x557cc31fea70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x557cc2f4a478 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x557cc2f4a450 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x557cc2f4a430 <col:40> 'int' 1
|-CXXConstructorDecl 0x557cc31feb18 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x557cc31feda8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc31febd0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557cc31fec70 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x557cc31ff068 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x557cc31fef50 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x557cc31ff328 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x557cc31ff210 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x557cc31ff670 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x557cc31ff550 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x557cc31ff980 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x557cc31ff860 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x557cc31ffc70 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc31ffab8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557cc31ffb30 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x557cc31ffdc8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x557cc31ffea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc31fff00 <col:30> Inherited
|-CXXMethodDecl 0x557cc31fff48 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x557cc31ffff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc3200050 <col:30> Inherited
|-CXXMethodDecl 0x557cc3204160 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x557cc3204210 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc3204268 <col:30> Inherited
|-CXXMethodDecl 0x557cc32042b0 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x557cc3204360 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc32043b8 <col:30> Inherited
|-CXXMethodDecl 0x557cc3204400 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x557cc32044b0 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc3204508 <col:30> Inherited
|-CXXMethodDecl 0x557cc3204550 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x557cc3204600 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc3204658 <col:30> Inherited
|-CXXMethodDecl 0x557cc3204680 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x557cc3204730 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x557cc32047e0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x557cc32049a0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc3204890 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557cc3204908 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x557cc3204af0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x557cc3204a60 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc3204c98 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x557cc3204ba8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x557cc3204d50 <col:20>
| `-OptimizeNoneAttr 0x557cc3204da8 <col:30>
|-CXXMethodDecl 0x557cc3204ec8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x557cc3204dd0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x557cc3204f80 <col:20>
| `-OptimizeNoneAttr 0x557cc3204fd8 <col:30>
|-CXXMethodDecl 0x557cc3205090 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x557cc3205000 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc32051d8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x557cc3205148 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc3205308 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x557cc3205438 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x557cc3205508 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x557cc32055d8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x557cc3205718 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x557cc3205688 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc3205860 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x557cc32057d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc32059a8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x557cc3205918 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x557cc3205a60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x557cc3205b60 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x557cc3205ad0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x557cc3205c18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x557cc3205cd8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x557cc3205dd8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x557cc3205f58 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x557cc3205e98 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x557cc3206718 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x557cc3206010 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x557cc3206678 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x557cc3206578 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x557cc32067f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x557cc3206948 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x557cc32068b8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x557cc3206a00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x557cc3206c48 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc3206ac0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x557cc3206b38 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x557cc3206e08 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x557cc3206d18 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x557cc3207058 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x557cc3206ed0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x557cc3206f48 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x557cc3207118 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x557cc3207378 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x557cc3207280 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x557cc3207448 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x557cc3207448

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc31c6020 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557cc31c6138 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x557cc31c61c8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x557cc31c6250 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x557cc31c6340 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x557cc31c6440 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x557cc31c6500 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x557cc31c65c0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x557cc31c66e8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x557cc31c66e8
| `-ParmVarDecl 0x557cc31c67f8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x557cc32081f8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x557cc32081f8
  `-ParmVarDecl 0x557cc3208308 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc31e7ae0 prev 0x557cc3133908 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x557cc31e7bd8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x557cc31e7c68 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x557cc31e7cf0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x557cc31e7de8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x557cc3208670 <col:43, col:67>
|   `-ReturnStmt 0x557cc3208660 <col:45, col:52>
|     `-CXXConstructExpr 0x557cc3208630 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x557cc3208600 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x557cc31e95d0
|         `-CXXThisExpr 0x557cc32085f0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x557cc31e7ea8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x557cc31e80b0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x557cc31e7f58 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x557cc31e7fd0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x557cc31e81a8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x557cc31e8270 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x557cc32086f0 <col:39, col:67>
|   `-ReturnStmt 0x557cc32086e0 <col:41, col:48>
|     `-ImplicitCastExpr 0x557cc32086c8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x557cc3208698 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x557cc31e96b8
|         `-CXXThisExpr 0x557cc3208688 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x557cc31e8338 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x557cc3208770 <col:35, col:59>
|   `-ReturnStmt 0x557cc3208760 <col:37, col:44>
|     `-ImplicitCastExpr 0x557cc3208748 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x557cc3208718 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x557cc31e9720
|         `-CXXThisExpr 0x557cc3208708 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x557cc31e8480 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x557cc31e83f0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x557cc31e85c8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x557cc31e8538 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x557cc31e87c8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x557cc31e8680 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x557cc31e86f8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x557cc31e8898 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x557cc31e8938 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x557cc31e8960 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x557cc31e8a78 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x557cc31e8b18 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x557cc31e8b78 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x557cc31e8ca8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x557cc31e8bd8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x557cc31e8b18 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x557cc3208848 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x557cc32087f0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x557cc32087c0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x557cc3130d98
|   |       `-ImplicitCastExpr 0x557cc3208810 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x557cc32087a8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x557cc3208788 <col:17> 'Timer *' lvalue ParmVar 0x557cc31e8bd8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x557cc31e8b78 't' 'Timer *'
|   | `-ImplicitCastExpr 0x557cc32088e0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cc32088a0 <col:41> 'Timer *' lvalue ParmVar 0x557cc31e8bd8 't_' 'Timer *'
|   `-CompoundStmt 0x557cc3208930 <col:45, line:44:2>
|-CXXRecordDecl 0x557cc31e8d70 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x557cc31e8e88 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x557cc31e90d8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x557cc31e8f58 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x557cc31e8fd0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x557cc3208a60 <col:71, line:49:2>
|     `-ReturnStmt 0x557cc3208a50 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x557cc3208a18 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x557cc3208a00 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x557cc32089e0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x557cc3169cd8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x557cc3208960 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x557cc31e8b18
|         | `-DeclRefExpr 0x557cc3208940 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x557cc31e8f58 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x557cc32089b0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x557cc31e8b18
|           `-DeclRefExpr 0x557cc3208990 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x557cc31e8fd0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x557cc31e91a0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x557cc31e92b8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x557cc31e94d8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x557cc31e9358 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x557cc31e93d0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x557cc3208c68 <col:63, line:54:2>
|     `-BinaryOperator 0x557cc3208c48 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x557cc3208af8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x557cc3132da8
|       | `-ImplicitCastExpr 0x557cc3208ae0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x557cc3208ab0 <col:6, col:9> 'Timer *' lvalue ->t 0x557cc31e8b78
|       |     `-ImplicitCastExpr 0x557cc3208a98 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x557cc3208a78 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x557cc31e93d0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x557cc3208c30 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x557cc3208c10 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x557cc3208bb8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x557cc3208b98 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x557cc3208b68 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x557cc3208b28 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x557cc31e93d0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x557cc3208b80 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x557cc3208b48 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x557cc31e9358 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x557cc3208bf8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x557cc3208bd8 <col:39> 'int' 1
|-FieldDecl 0x557cc31e95d0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x557cc31e9640 <col:44, col:53> aligned
|   `-ConstantExpr 0x557cc31e9620 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x557cc31e95a0 <col:52> 'int' 8
|-FieldDecl 0x557cc31e96b8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x557cc31e9720 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x557cc31e9788 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x557cc31f8870 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x557cc3207530 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x557cc3207590 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x557cc32075f0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x557cc3207650 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc3207740 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x557cc32076b0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x557cc3207808 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x557cc32090c0 <col:29, line:81:5>
|   `-IfStmt 0x557cc3209098 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x557cc3208d50 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x557cc3208cf0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x557cc3208cc0 <col:6, col:18> '<bound member function type>' .size 0x557cc31f58b8
|     |     `-ImplicitCastExpr 0x557cc3208d38 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x557cc3208c90 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x557cc31f8870
|     |         `-CXXThisExpr 0x557cc3208c80 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x557cc3208f40 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x557cc3208f28 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x557cc3208f08 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x557cc2e53738 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x557cc3208d78 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x557cc31e95d0
|     | | `-CXXThisExpr 0x557cc3208d68 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x557cc3208ef0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x557cc3208ec0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x557cc31e8b18
|     |     `-CXXMemberCallExpr 0x557cc3208e98 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x557cc3208e68 <col:22, col:34> '<bound member function type>' .unchecked_at 0x557cc31f6958
|     |       | `-MemberExpr 0x557cc3208db8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x557cc31f8870
|     |       |   `-CXXThisExpr 0x557cc3208da8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x557cc3208e48 <col:47> 'int' 0
|     `-ExprWithCleanups 0x557cc3209080 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x557cc3209048 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x557cc3209030 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x557cc3209010 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x557cc2e53be8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x557cc3208f88 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x557cc31e95d0
|         | `-CXXThisExpr 0x557cc3208f78 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x557cc3208ff8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x557cc3208fc8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x557cc3207948 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x557cc32078b8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x557cc3207a10 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x557cc3207ad0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x557cc3207b90 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x557cc3207c80 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x557cc3207ce8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x557cc3207ce8
| `-ParmVarDecl 0x557cc3207df8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x557cc3207e98 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x557cc3207e98
| `-ParmVarDecl 0x557cc3207fa8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x557cc3208048 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x557cc3208048
| `-ParmVarDecl 0x557cc3208158 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x557cc3208378 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x557cc3208378
| `-ParmVarDecl 0x557cc3208488 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x557cc3208510 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x557cc3208510

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x557cc323ef58 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x557cc323f168 prev 0x557cc323ef58 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x557cc3240240 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x557cc32401f0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x557cc32401d0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x557cc3240080 'type'
|     `-SubstTemplateTypeParmType 0x557cc31f9880 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x557cc2f11100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f110a8 'T'
|       `-RecordType 0x557cc31f93d0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x557cc31f92e8 'sized_array_memory'
|-FieldDecl 0x557cc3240340 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x557cc3240390 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x557cc32403c8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x557cc323f200 'pollfd' sugar
|   |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x557cc2f48d98 'T'
|   `-RecordType 0x557cc3232fd0 'pollfd'
|     `-CXXRecord 0x557cc3232f40 'pollfd'
|-TypedefDecl 0x557cc3240488 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x557cc3240450 'pollfd &'
|   `-SubstTemplateTypeParmType 0x557cc323f200 'pollfd' sugar
|     |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x557cc2f48d98 'T'
|     `-RecordType 0x557cc3232fd0 'pollfd'
|       `-CXXRecord 0x557cc3232f40 'pollfd'
|-TypedefDecl 0x557cc3240548 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x557cc3240510 'const pollfd &'
|   `-QualType 0x557cc323f201 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x557cc323f200 'pollfd' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-RecordType 0x557cc3232fd0 'pollfd'
|         `-CXXRecord 0x557cc3232f40 'pollfd'
|-TypedefDecl 0x557cc32405d8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x557cc32405a0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x557cc323f200 'pollfd' sugar
|     |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x557cc2f48d98 'T'
|     `-RecordType 0x557cc3232fd0 'pollfd'
|       `-CXXRecord 0x557cc3232f40 'pollfd'
|-TypedefDecl 0x557cc3240698 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x557cc3240660 'const pollfd *'
|   `-QualType 0x557cc323f201 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x557cc323f200 'pollfd' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-RecordType 0x557cc3232fd0 'pollfd'
|         `-CXXRecord 0x557cc3232f40 'pollfd'
|-TypedefDecl 0x557cc3241270 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x557cc3241220 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x557cc3241200 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x557cc3241190 'type'
|     `-SubstTemplateTypeParmType 0x557cc3240f50 'pollfd' sugar
|       |-TemplateTypeParmType 0x557cc2f1bf00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f1beb0 'T'
|       `-RecordType 0x557cc3232fd0 'pollfd'
|         `-CXXRecord 0x557cc3232f40 'pollfd'
|-TypedefDecl 0x557cc32412d8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x557cc3240510 'const pollfd &'
|   `-QualType 0x557cc323f201 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x557cc323f200 'pollfd' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-RecordType 0x557cc3232fd0 'pollfd'
|         `-CXXRecord 0x557cc3232f40 'pollfd'
|-TypedefDecl 0x557cc3241330 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x557cc2c48580 'int'
|-TypedefDecl 0x557cc3241398 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x557cc32405a0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x557cc323f200 'pollfd' sugar
|     |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x557cc2f48d98 'T'
|     `-RecordType 0x557cc3232fd0 'pollfd'
|       `-CXXRecord 0x557cc3232f40 'pollfd'
|-TypedefDecl 0x557cc3241400 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x557cc3240660 'const pollfd *'
|   `-QualType 0x557cc323f201 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x557cc323f200 'pollfd' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-RecordType 0x557cc3232fd0 'pollfd'
|         `-CXXRecord 0x557cc3232f40 'pollfd'
|-EnumDecl 0x557cc3241458 <line:134:5> col:5
| `-EnumConstantDecl 0x557cc3241550 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x557cc3241530 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x557cc2f4a478 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x557cc2f4a450 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x557cc2f4a430 <col:40> 'int' 1
|-CXXConstructorDecl 0x557cc32415d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x557cc3241868 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc3241690 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557cc3241730 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x557cc3241b28 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x557cc3241a10 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x557cc3241de8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x557cc3241cd0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x557cc3242130 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x557cc3242010 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x557cc3242440 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x557cc3242320 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x557cc3242730 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc3242578 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557cc32425f0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x557cc3242888 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x557cc3242968 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc32429c0 <col:30> Inherited
|-CXXMethodDecl 0x557cc3242a08 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x557cc3242ab8 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc3242b10 <col:30> Inherited
|-CXXMethodDecl 0x557cc3242bd8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x557cc3242c88 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc3242ce0 <col:30> Inherited
|-CXXMethodDecl 0x557cc3242d28 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x557cc3242dd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc3242e30 <col:30> Inherited
|-CXXMethodDecl 0x557cc3242e78 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x557cc3242f28 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc3242f80 <col:30> Inherited
|-CXXMethodDecl 0x557cc3242fc8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x557cc3243078 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc32430d0 <col:30> Inherited
|-CXXMethodDecl 0x557cc32430f8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x557cc32431a8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x557cc3243258 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x557cc3243418 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc3243308 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557cc3243380 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x557cc3243568 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x557cc32434d8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc3243718 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x557cc3243620 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x557cc32437d0 <col:20>
| `-OptimizeNoneAttr 0x557cc3243828 <col:30>
|-CXXMethodDecl 0x557cc3243948 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x557cc3243850 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x557cc3243a00 <col:20>
| `-OptimizeNoneAttr 0x557cc3243a58 <col:30>
|-CXXMethodDecl 0x557cc3243b10 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x557cc3243a80 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc3243c58 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x557cc3243bc8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc3243d88 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x557cc3243eb8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x557cc3243f88 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x557cc3244058 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x557cc3244198 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x557cc3244108 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc32442e0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x557cc3244250 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc3244428 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x557cc3244398 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x557cc32444e0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x557cc32445e0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x557cc3244550 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x557cc3244698 <col:60> Inherited "" ""
|-CXXMethodDecl 0x557cc3244758 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x557cc3244858 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x557cc3244a08 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x557cc3244918 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x557cc32451c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x557cc3244ac0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x557cc3245128 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x557cc3245028 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x557cc32452a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x557cc32453f8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x557cc3245368 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x557cc32454b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x557cc32456f8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc3245570 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x557cc32455e8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x557cc32458b8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x557cc32457c8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x557cc3245b08 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x557cc3245980 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x557cc32459f8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x557cc3245bc8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x557cc3245e48 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x557cc3245d30 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x557cc3245f18 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x557cc3245f18

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x557cc3247500 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x557cc32476d8 prev 0x557cc3247500 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x557cc3247768 <col:46, col:52> col:46 public
|-TypedefDecl 0x557cc3247790 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x557cc2c48580 'int'
|-TypedefDecl 0x557cc3249360 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x557cc3249310 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x557cc3247c40 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x557cc3247b40 'type'
|     `-TemplateSpecializationType 0x557cc3247ad0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x557cc32479b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x557cc3247990 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x557cc3247970 <col:24> 'unsigned long' 24
|       `-RecordType 0x557cc3247ab0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x557cc32479d0 'char_array'
|-TypedefDecl 0x557cc3249418 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x557cc32493e0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x557cc32493c0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x557cc3249360 'type'
|     `-ElaboratedType 0x557cc3249310 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x557cc3247c40 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x557cc3247b40 'type'
|         `-TemplateSpecializationType 0x557cc3247ad0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x557cc32479b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x557cc3247990 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x557cc3247970 <col:24> 'unsigned long' 24
|           `-RecordType 0x557cc3247ab0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x557cc32479d0 'char_array'
|-CXXMethodDecl 0x557cc3249598 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x557cc32494a8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x557cc3249688 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x557cc3249768 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x557cc3249768
|-CXXMethodDecl 0x557cc3249a38 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x557cc3249940 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x557cc3249c78 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x557cc3249af0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557cc3249b68 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x557cc3249e48 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x557cc3249d38 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557cc3249db0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x557cc3249fa8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x557cc324a078 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x557cc324a2c8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x557cc324a138 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x557cc324a1b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x557cc324a528 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x557cc324a398 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x557cc324a410 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x557cc324a6e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x557cc324a5f8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x557cc324a8a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x557cc324a7b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x557cc324a960 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x557cc324aa10 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x557cc324ac48 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x557cc324aac0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x557cc324ab38 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x557cc324aee8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x557cc324adf0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x557cc324afb0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x557cc324b000 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x557cc324b050 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x557cc3246060 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x557cc3246268 prev 0x557cc3246060 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x557cc3247470 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x557cc3247420 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x557cc3247400 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x557cc32472b0 'type'
|     `-SubstTemplateTypeParmType 0x557cc32470d0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x557cc2f11100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f110a8 'T'
|       `-RecordType 0x557cc3246c20 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x557cc3246b40 'sized_array_memory'
|-FieldDecl 0x557cc324b0a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x557cc324b0f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x557cc324b128 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x557cc3246300 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x557cc2f48d98 'T'
|   `-RecordType 0x557cc323eac0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x557cc323ea30 'SelectorInfo'
|-TypedefDecl 0x557cc324b1e8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x557cc324b1b0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x557cc3246300 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x557cc2f48d98 'T'
|     `-RecordType 0x557cc323eac0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x557cc323ea30 'SelectorInfo'
|-TypedefDecl 0x557cc324b2a8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x557cc324b270 'const SelectSet::SelectorInfo &'
|   `-QualType 0x557cc3246301 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x557cc3246300 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-RecordType 0x557cc323eac0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x557cc323ea30 'SelectorInfo'
|-TypedefDecl 0x557cc324b338 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x557cc324b300 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x557cc3246300 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x557cc2f48d98 'T'
|     `-RecordType 0x557cc323eac0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x557cc323ea30 'SelectorInfo'
|-TypedefDecl 0x557cc324b3f8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x557cc324b3c0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x557cc3246301 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x557cc3246300 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-RecordType 0x557cc323eac0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x557cc323ea30 'SelectorInfo'
|-TypedefDecl 0x557cc324c050 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x557cc324c000 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x557cc324bfe0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x557cc324bf18 'type'
|     `-LValueReferenceType 0x557cc324bee0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x557cc324bc81 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x557cc324bc80 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x557cc2f1b7d0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x557cc2f1b778 'T'
|           `-RecordType 0x557cc323eac0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x557cc323ea30 'SelectorInfo'
|-TypedefDecl 0x557cc324c0b8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x557cc324b270 'const SelectSet::SelectorInfo &'
|   `-QualType 0x557cc3246301 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x557cc3246300 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-RecordType 0x557cc323eac0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x557cc323ea30 'SelectorInfo'
|-TypedefDecl 0x557cc324c110 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x557cc2c48580 'int'
|-TypedefDecl 0x557cc324c178 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x557cc324b300 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x557cc3246300 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x557cc2f48d98 'T'
|     `-RecordType 0x557cc323eac0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x557cc323ea30 'SelectorInfo'
|-TypedefDecl 0x557cc324c1e0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x557cc324b3c0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x557cc3246301 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x557cc3246300 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x557cc2f48df0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x557cc2f48d98 'T'
|       `-RecordType 0x557cc323eac0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x557cc323ea30 'SelectorInfo'
|-EnumDecl 0x557cc324c238 <line:134:5> col:5
| `-EnumConstantDecl 0x557cc324c330 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x557cc324c310 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x557cc2f4a478 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x557cc2f4a450 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x557cc2f4a430 <col:40> 'int' 1
|-CXXConstructorDecl 0x557cc324c3b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x557cc324c648 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc324c470 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557cc324c510 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x557cc324c908 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x557cc324c7f0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x557cc324cbc8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x557cc324cab0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x557cc324cf10 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x557cc324cdf0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x557cc324d220 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x557cc324d100 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x557cc324d510 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc324d358 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557cc324d3d0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x557cc324d668 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x557cc324d748 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc324d7a0 <col:30> Inherited
|-CXXMethodDecl 0x557cc324d7e8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x557cc324d898 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc324d8f0 <col:30> Inherited
|-CXXMethodDecl 0x557cc324d9b8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x557cc324da68 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc324dac0 <col:30> Inherited
|-CXXMethodDecl 0x557cc324db08 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x557cc324dbb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc324dc10 <col:30> Inherited
|-CXXMethodDecl 0x557cc324dc58 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x557cc324dd08 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc324dd60 <col:30> Inherited
|-CXXMethodDecl 0x557cc324de00 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x557cc324deb0 <col:20> Inherited
| `-OptimizeNoneAttr 0x557cc324df08 <col:30> Inherited
|-CXXMethodDecl 0x557cc324df30 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x557cc324dfe0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x557cc324e090 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x557cc324e250 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc324e140 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x557cc324e1b8 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x557cc324e3a0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x557cc324e310 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc324e548 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x557cc324e458 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x557cc324e600 <col:20>
| `-OptimizeNoneAttr 0x557cc324e658 <col:30>
|-CXXMethodDecl 0x557cc324e778 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x557cc324e680 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x557cc324e830 <col:20>
| `-OptimizeNoneAttr 0x557cc324e888 <col:30>
|-CXXMethodDecl 0x557cc324e940 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x557cc324e8b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc324ea88 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x557cc324e9f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc324ebb8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x557cc324ece8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x557cc324edb8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x557cc324ee88 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x557cc324efc8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x557cc324ef38 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc324f110 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x557cc324f080 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x557cc324f258 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x557cc324f1c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x557cc324f310 <col:48> Inherited "" ""
|-CXXMethodDecl 0x557cc324f410 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x557cc324f380 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x557cc324f4c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x557cc324f588 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x557cc324f688 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x557cc324f838 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x557cc324f748 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x557cc324fff8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x557cc324f8f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x557cc324ff58 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x557cc324fe58 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x557cc32500d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x557cc3250228 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x557cc3250198 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x557cc32502e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x557cc3250528 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x557cc32503a0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x557cc3250418 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x557cc32506e8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x557cc32505f8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x557cc3250938 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x557cc32507b0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x557cc3250828 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x557cc32509f8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x557cc3250c58 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x557cc3250b60 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x557cc3250d28 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x557cc3250d28

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc3233bd0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557cc3233ce8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x557cc3233d78 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x557cc323de40 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x557cc323df30 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x557cc323df30
|-CXXMethodDecl 0x557cc323e030 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x557cc323e2d0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x557cc323e0e8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x557cc323e160 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x557cc323e1e0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x557cc323e540 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x557cc323e3a0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x557cc323e418 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x557cc323e498 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x557cc323e698 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x557cc323e608 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x557cc323e760 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x557cc32523d8 <col:34, line:50:5>
|   |-BinaryOperator 0x557cc3251da8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x557cc3251d68 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x557cc323eee8
|   | | `-CXXThisExpr 0x557cc3251d58 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x557cc3251d98 <col:23> 'bool' true
|   `-CallExpr 0x557cc32523b0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x557cc3252398 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x557cc3252318 <col:2> 'void (long)' lvalue Function 0x557cc3252218 'ignore_result' 'void (long)' (FunctionTemplate 0x557cc2f0b098 'ignore_result')
|     `-CallExpr 0x557cc3251fc0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x557cc3251fa8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557cc3251f28 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x557cc320c170 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x557cc3251ff8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x557cc3251ed0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x557cc3251eb8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x557cc3251e68 <col:22> 'int [2]' lvalue ->_wake_pipe 0x557cc323ee88
|       |   |   `-CXXThisExpr 0x557cc3251e58 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x557cc3251e98 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x557cc3252028 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x557cc3252010 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x557cc3251ef0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x557cc3252040 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x557cc3251f08 <col:41> 'int' 1
|-CXXMethodDecl 0x557cc323e8a0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x557cc323e810 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x557cc323e968 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x557cc323ea08 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x557cc323ea30 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x557cc323eb48 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x557cc323ebe8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x557cc323ec48 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x557cc323ecb0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x557cc323ed60 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x557cc323ebe8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x557cc3252438 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x557cc32523f8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x557cc323ec48 'write' 'Element *'
|   | `-ImplicitCastExpr 0x557cc32524b8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x557cc3252478 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x557cc323ecb0 'pollfd' 'int'
|   | `-UnaryOperator 0x557cc3252518 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x557cc32524f8 <col:35> 'int' 1
|   `-CompoundStmt 0x557cc3252590 <line:64:2, line:65:2>
|-FieldDecl 0x557cc323ee88 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x557cc323eee8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x557cc3246000 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x557cc3250e10 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x557cc3251048 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x557cc3250e78 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x557cc3250ef0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x557cc3250f68 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x557cc3251230 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x557cc3251118 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x557cc3251198 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x557cc3251478 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x557cc32512f8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x557cc3251378 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x557cc3251688 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x557cc3251538 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x557cc32515b0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x557cc32517d8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x557cc3251748 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x557cc32518a0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x557cc3251960 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x557cc3251a28 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x557cc3251a28
| `-ParmVarDecl 0x557cc3251b38 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x557cc3251bd8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x557cc3251bd8
  `-ParmVarDecl 0x557cc3251ce8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc31c4f88 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557cc31c50a8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x557cc31c5138 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x557cc31c51c0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x557cc31c52b0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x557cc31c53b0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x557cc31c5470 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x557cc31c5530 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x557cc31c5618 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x557cc31c5738 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x557cc31c5738
| `-ParmVarDecl 0x557cc31c5848 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x557cc32571e8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x557cc32571e8
  `-ParmVarDecl 0x557cc32572f8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc312d4c8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc312d5e8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x557cc312d688 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x557cc312d6e8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x557cc32567e8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x557cc32567e8
| `-ParmVarDecl 0x557cc32568f8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x557cc3256998 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x557cc3256998
| `-ParmVarDecl 0x557cc3256aa8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x557cc3256b18 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x557cc3256b18
|-CXXMethodDecl 0x557cc3257398 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x557cc3257398
| `-ParmVarDecl 0x557cc32574a8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x557cc3257518 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x557cc3257518
| `-ParmVarDecl 0x557cc3257628 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x557cc325dc98 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x557cc325dd70 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc31c6e80 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc31c6f98 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x557cc31c7028 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x557cc31c70b0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x557cc31c7170 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x557cc2c48580 'int'
|-CXXMethodDecl 0x557cc31c7238 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x557cc31c72d8 <col:45> always_inline
|-CXXMethodDecl 0x557cc31c7408 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x557cc31c7340 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x557cc31c74b0 <col:49> always_inline
|-CXXConstructorDecl 0x557cc31c75a8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x557cc31c75a8
| `-ParmVarDecl 0x557cc31c76b8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x557cc31c7758 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x557cc31c7758
| `-ParmVarDecl 0x557cc31c7868 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x557cc3256c00 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x557cc3256c00
|-CXXMethodDecl 0x557cc32576c8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x557cc32576c8
| `-ParmVarDecl 0x557cc32577d8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x557cc3257848 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x557cc3257848
  `-ParmVarDecl 0x557cc3257958 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc3252a00 prev 0x557cc3233b40 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x557cc3252af8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x557cc3252b88 <col:22, col:28> col:22 public
|-EnumDecl 0x557cc3252bb0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x557cc3252cc8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x557cc3252ca8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x557cc3252c90 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x557cc3252c70 <col:32> 'int' 1
| `-EnumConstantDecl 0x557cc3252d70 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x557cc3252d50 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x557cc3252d38 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x557cc3252d18 <col:53> 'int' 1000
|-CXXMethodDecl 0x557cc3252e10 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x557cc3252ed0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x557cc3252fb8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x557cc3257a18 <col:34, col:52>
|   `-ReturnStmt 0x557cc3257a08 <col:36, col:43>
|     `-MemberExpr 0x557cc32579d8 <col:43> 'TimerSet' lvalue ->_timers 0x557cc3254c88
|       `-CXXThisExpr 0x557cc32579c8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x557cc32530a8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x557cc3257a80 <col:46, col:64>
|   `-ReturnStmt 0x557cc3257a70 <col:48, col:55>
|     `-MemberExpr 0x557cc3257a40 <col:55> 'const TimerSet' lvalue ->_timers 0x557cc3254c88
|       `-CXXThisExpr 0x557cc3257a30 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x557cc3253198 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x557cc3257ae8 <col:36, col:55>
|   `-ReturnStmt 0x557cc3257ad8 <col:38, col:45>
|     `-MemberExpr 0x557cc3257aa8 <col:45> 'SelectSet' lvalue ->_selects 0x557cc3254ce8
|       `-CXXThisExpr 0x557cc3257a98 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x557cc3253288 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x557cc3257b50 <col:48, col:67>
|   `-ReturnStmt 0x557cc3257b40 <col:50, col:57>
|     `-MemberExpr 0x557cc3257b10 <col:57> 'const SelectSet' lvalue ->_selects 0x557cc3254ce8
|       `-CXXThisExpr 0x557cc3257b00 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x557cc3253348 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x557cc3253438 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x557cc32535a8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x557cc32534e8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x557cc3253670 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x557cc3253ab8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x557cc3253720 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x557cc32539a0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x557cc3253b88 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x557cc3253c48 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x557cc3253d08 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x557cc3253e48 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x557cc3253db8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x557cc3253f10 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x557cc3253fd0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x557cc3254090 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x557cc3254150 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x557cc3254290 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x557cc3254200 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x557cc3254358 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x557cc3254418 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x557cc32544b8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x557cc3254580 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x557cc32545d0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x557cc3254620 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x557cc3254670 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x557cc32546c0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x557cc3254710 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x557cc3254760 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x557cc32547b0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x557cc3254800 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x557cc3254850 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x557cc32548a0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x557cc3254998 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x557cc3254908 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x557cc3254ae8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x557cc3254a58 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x557cc3254b90 <line:104:3, col:10> col:3 private
|-FieldDecl 0x557cc3254bc8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x557cc3254c28 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x557cc3254c88 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x557cc3254ce8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x557cc3254d68 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x557cc3254dd8 <col:40, col:50> aligned
|   `-ConstantExpr 0x557cc3254db8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x557cc3254d38 <col:48> 'int' 64
|-FieldDecl 0x557cc3254e48 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x557cc3254ea8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x557cc3254fa0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x557cc32550b0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x557cc3255110 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x557cc3255190 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x557cc3255200 <col:36, col:46> aligned
|   `-ConstantExpr 0x557cc32551e0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x557cc3255160 <col:44> 'int' 64
|-FieldDecl 0x557cc3255278 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x557cc32552d8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x557cc3255328 <line:170:3, col:9> col:3 public
|-FieldDecl 0x557cc3255368 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x557cc32553d0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x557cc3255420 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x557cc32555c8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x557cc3255458 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x557cc32554d8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x557cc32556c8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x557cc32556c8
|-CXXMethodDecl 0x557cc32557d0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x557cc3255898 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x557cc3257c48 <col:34, line:217:5>
|   `-ReturnStmt 0x557cc3257c38 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x557cc3257c20 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x557cc3257bf0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x557cc31c99e0
|         `-ImplicitCastExpr 0x557cc3257bd8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x557cc3257ba8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x557cc31c9978
|             `-MemberExpr 0x557cc3257b78 <col:16> 'const TaskLink' lvalue ->_task_link 0x557cc3254bc8
|               `-CXXThisExpr 0x557cc3257b68 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x557cc3255958 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x557cc3255a18 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x557cc3258370 <col:39, line:226:5>
|   |-DeclStmt 0x557cc3257e98 <line:223:9, col:68>
|   | `-VarDecl 0x557cc3257c70 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x557cc3257e50 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x557cc3257e20 <col:24, col:38> '<bound member function type>' .compare_swap 0x557cc2f716e0
|   |     | `-MemberExpr 0x557cc3257ce8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x557cc3254e48
|   |     |   `-CXXThisExpr 0x557cc3257cd8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x557cc3257dd8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x557cc3257dc0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x557cc3257d98 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x557cc3257d78 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x557cc3257e80 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x557cc3257e00 <col:66> 'int' 0
|   |-CStyleCastExpr 0x557cc3257ee0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x557cc3257eb0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x557cc3257c70 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x557cc3258350 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x557cc3258320 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x557cc3257ff8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x557cc3257fc8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x557cc3257fb0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x557cc3257f08 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x557cc3257c70 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x557cc3257f88 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x557cc3257f70 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x557cc3257f48 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x557cc3257f28 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x557cc3258058 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x557cc3258038 <col:60> 'int' 0
|       `-CallExpr 0x557cc3258280 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x557cc3258268 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x557cc3258248 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x557cc32582c0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x557cc3258148 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x557cc32582d8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x557cc3258178 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x557cc32582f0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x557cc32581b8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x557cc3258308 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x557cc3258230 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x557cc3258218 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x557cc32581d8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x557cc3255b60 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x557cc3255ad0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x557cc3255c28 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x557cc3255ce8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x557cc3255e10 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x557cc3255ed0 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x557cc3255f90 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x557cc3256080 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x557cc32560e0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x557cc3256170 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x557cc3256538 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x557cc3256538
| `-ParmVarDecl 0x557cc3256648 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x557cc3256d08 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x557cc3256d08
  `-ParmVarDecl 0x557cc3256e18 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc31c9cf0 prev 0x557cc31ab980 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x557cc31c9e28 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x557cc31c9eb8 <col:33, col:39> col:33 public
|-EnumDecl 0x557cc31c9ee0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x557cc31ca020 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x557cc31ca000 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x557cc31c9fe0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x557cc31c9fa0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x557cc31c9fc0 <col:26> 'int' 16
| `-EnumConstantDecl 0x557cc31ca0f0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x557cc31ca0d0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x557cc31ca0b0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x557cc31ca070 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x557cc31ca090 <col:47> 'int' 31
|-EnumDecl 0x557cc31ca140 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x557cc31ca280 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x557cc31ca3a0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc31ca260 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x557cc31ca240 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x557cc31ca200 <col:26> 'int' 1
| |       `-IntegerLiteral 0x557cc31ca220 <col:29> 'int' 15
| `-EnumConstantDecl 0x557cc31ca350 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x557cc31ca3b8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc31ca330 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x557cc31ca310 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x557cc31ca2d0 <col:51> 'int' 1
|         `-IntegerLiteral 0x557cc31ca2f0 <col:54> 'int' 10
|-CXXConstructorDecl 0x557cc31ca588 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x557cc31ca3e0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x557cc31ca460 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x557cc31ca718 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x557cc31ca650 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x557cc31ca810 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x557cc31ca810
|-CXXMethodDecl 0x557cc31ca998 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x557cc312e628 <col:42, line:100:5>
|   `-ReturnStmt 0x557cc312e618 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x557cc312e600 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x557cc312e5d0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x557cc312d350
|         `-CXXThisExpr 0x557cc312e5c0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x557cc31caa60 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x557cc312e6a8 <col:36, line:105:5>
|   `-ReturnStmt 0x557cc312e698 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x557cc312e680 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x557cc312e650 <col:16> 'void *const' lvalue ->_thunk 0x557cc312d3b8
|         `-CXXThisExpr 0x557cc312e640 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x557cc31cab20 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x557cc312e728 <col:37, line:110:5>
|   `-ReturnStmt 0x557cc312e718 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x557cc312e700 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x557cc312e6d0 <col:16> 'Element *const' lvalue ->_owner 0x557cc312d478
|         `-CXXThisExpr 0x557cc312e6c0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x557cc31cabe0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x557cc31caca8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x557cc31cad68 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x557cc31cae28 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x557cc312e810 <col:35, line:137:5>
|   `-ReturnStmt 0x557cc312e800 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x557cc312e7c8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x557cc312e798 <col:16, col:24> '<bound member function type>' ->router 0x557cc31be190
|         `-ImplicitCastExpr 0x557cc312e7e8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x557cc312e780 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x557cc312e750 <col:16> 'Element *const' lvalue ->_owner 0x557cc312d478
|               `-CXXThisExpr 0x557cc312e740 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x557cc31caee8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x557cc31cb0e8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x557cc31caf98 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x557cc31cb010 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x557cc31cb2f8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x557cc31cb1a8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x557cc31cb220 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x557cc31cb3c8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x557cc312e920 <col:35, line:181:5>
|   `-ReturnStmt 0x557cc312e910 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x557cc312e8f8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x557cc312e8e0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x557cc312e8b0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x557cc312cf88
|           `-MemberExpr 0x557cc312e868 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x557cc312d0a8
|             `-MemberExpr 0x557cc312e838 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x557cc312d2d8
|               `-CXXThisExpr 0x557cc312e828 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x557cc312bfd0 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x557cc312ea38 <col:30, line:192:5>
|   `-BinaryOperator 0x557cc312ea18 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x557cc312e9c0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x557cc312cf88
|     | `-MemberExpr 0x557cc312e978 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x557cc312d0a8
|     |   `-MemberExpr 0x557cc312e948 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x557cc312d2d8
|     |     `-CXXThisExpr 0x557cc312e938 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x557cc312ea00 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x557cc312e9f0 <col:32> 'bool' false
|-CXXMethodDecl 0x557cc312c090 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x557cc312ed88 <col:30, line:206:5>
|   |-BinaryOperator 0x557cc312eb30 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x557cc312ead8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x557cc312cf88
|   | | `-MemberExpr 0x557cc312ea90 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x557cc312d0a8
|   | |   `-MemberExpr 0x557cc312ea60 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x557cc312d2d8
|   | |     `-CXXThisExpr 0x557cc312ea50 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x557cc312eb18 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x557cc312eb08 <col:32> 'bool' true
|   |-CallExpr 0x557cc312ebd0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x557cc312ebb8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cc312eb98 <col:9> 'void ()' lvalue Function 0x557cc31c4b40 'click_fence' 'void ()'
|   `-IfStmt 0x557cc312ed70 <line:204:9, line:205:32>
|     |-BinaryOperator 0x557cc312ecb0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x557cc312ec80 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x557cc312ec30 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x557cc312d6e8
|     | |   `-MemberExpr 0x557cc312ec00 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x557cc312d760
|     | |     `-CXXThisExpr 0x557cc312ebf0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x557cc312ec98 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x557cc312ec60 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x557cc312ed30 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x557cc312ece0 <col:13> '<bound member function type>' ->complete_schedule 0x557cc312e160
|       | `-CXXThisExpr 0x557cc312ecd0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x557cc312ed58 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x557cc312ed10 <col:31> 'int' 0
|-CXXMethodDecl 0x557cc312c150 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x557cc312eeb0 <col:35, line:240:5>
|   `-BinaryOperator 0x557cc312ee90 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x557cc312ee38 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x557cc312cf88
|     | `-MemberExpr 0x557cc312edf0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x557cc312d0a8
|     |   `-MemberExpr 0x557cc312edc0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x557cc312d2d8
|     |     `-CXXThisExpr 0x557cc312edb0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x557cc312ee78 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x557cc312ee68 <col:32> 'bool' true
|-CXXMethodDecl 0x557cc312c210 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x557cc312f0c8 <col:37, line:253:5>
|   |-BinaryOperator 0x557cc312efa8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x557cc312ef50 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x557cc312cf88
|   | | `-MemberExpr 0x557cc312ef08 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x557cc312d0a8
|   | |   `-MemberExpr 0x557cc312eed8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x557cc312d2d8
|   | |     `-CXXThisExpr 0x557cc312eec8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x557cc312ef90 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x557cc312ef80 <col:32> 'bool' false
|   `-BinaryOperator 0x557cc312f0a8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x557cc312f050 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x557cc312cfe8
|     | `-MemberExpr 0x557cc312f008 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x557cc312d0a8
|     |   `-MemberExpr 0x557cc312efd8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x557cc312d2d8
|     |     `-CXXThisExpr 0x557cc312efc8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x557cc312f090 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x557cc312f080 <col:41> 'bool' true
|-CXXMethodDecl 0x557cc312c2d0 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x557cc312f248 <col:37, line:264:5>
|   |-BinaryOperator 0x557cc312f1c8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x557cc312f170 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x557cc312cfe8
|   | | `-MemberExpr 0x557cc312f128 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x557cc312d0a8
|   | |   `-MemberExpr 0x557cc312f0f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x557cc312d2d8
|   | |     `-CXXThisExpr 0x557cc312f0e8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x557cc312f1b0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x557cc312f1a0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x557cc312f228 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x557cc312f1f8 <col:9> '<bound member function type>' ->reschedule 0x557cc312c090
|       `-CXXThisExpr 0x557cc312f1e8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x557cc312c418 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x557cc312c388 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x557cc312c4e8 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x557cc312c630 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x557cc312c5a0 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x557cc312c780 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x557cc312c6f0 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x557cc312c848 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x557cc312c908 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x557cc312c9a8 <col:53> "" ""
|-CXXMethodDecl 0x557cc312ca40 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x557cc312cae0 <col:47> "" ""
|-AccessSpecDecl 0x557cc312cb50 <line:303:3, col:10> col:3 private
|-FieldDecl 0x557cc312cb90 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x557cc312cbf8 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x557cc312cc48 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x557cc312cd68 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x557cc312cdf8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x557cc312cf28 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x557cc312cf88 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x557cc312cfe8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x557cc325d3c8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x557cc325d4a0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x557cc325d4a0
| | |-CXXConstructorDecl 0x557cc325d758 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x557cc325d758
| | | `-ParmVarDecl 0x557cc325d868 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x557cc325d908 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x557cc325d908
| |   `-ParmVarDecl 0x557cc325da18 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x557cc312d0a8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x557cc312d108 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x557cc312d0a8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x557cc312cf28 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x557cc312d160 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x557cc312d0a8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x557cc312cf88 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x557cc312d1b8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x557cc312d0a8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x557cc312cfe8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x557cc312d210 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x557cc325d2d8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x557cc325dc38 <col:11>
| |-CXXConstructorDecl 0x557cc325d5a8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x557cc325d5a8
| | `-ParmVarDecl 0x557cc325d6b8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x557cc325dab8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x557cc325dab8
|   `-ParmVarDecl 0x557cc325dbc8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x557cc312d2d8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x557cc312d350 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x557cc312d3b8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x557cc312d418 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x557cc312d478 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x557cc312d4c8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557cc312d5e8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x557cc312d688 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x557cc312d6e8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x557cc32567e8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x557cc32567e8
| | `-ParmVarDecl 0x557cc32568f8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x557cc3256998 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x557cc3256998
| | `-ParmVarDecl 0x557cc3256aa8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x557cc3256b18 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x557cc3256b18
| |-CXXMethodDecl 0x557cc3257398 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x557cc3257398
| | `-ParmVarDecl 0x557cc32574a8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x557cc3257518 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x557cc3257518
| | `-ParmVarDecl 0x557cc3257628 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x557cc325dc98 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x557cc325dd70 <col:11>
|-FieldDecl 0x557cc312d760 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x557cc312d8a8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x557cc312d7e8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x557cc312da58 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x557cc312d968 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x557cc312db20 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x557cc312dbe0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x557cc312dca0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x557cc312f358 <col:41, line:355:5>
|   `-ReturnStmt 0x557cc312f348 <line:354:9, col:38>
|     `-BinaryOperator 0x557cc312f328 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x557cc312f2f8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x557cc312f2a8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x557cc312d6e8
|       |   `-MemberExpr 0x557cc312f278 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x557cc312d760
|       |     `-CXXThisExpr 0x557cc312f268 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x557cc312f310 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x557cc312f2d8 <col:38> 'int' 0
|-CXXMethodDecl 0x557cc312dd60 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x557cc312dea0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x557cc312de10 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x557cc312e018 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x557cc312df58 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x557cc312e160 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x557cc312e0d0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x557cc312e228 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x557cc312e3f0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x557cc312e2d8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x557cc312e358 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x557cc312e4f0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x557cc312e580 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | ActiveNotifier::task_or_signal_t
         0 |   class Task * t
         0 |   Notifier::callback_type f
         0 |   void * v
         0 |   uintptr_t p
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc326c938 <../dummy_inc/click/notifier.hh:151:13, line:156:5> line:151:13 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x557cc326ca68 <line:152:2, col:8> col:8 referenced t 'Task *'
|-FieldDecl 0x557cc326cac8 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
|-FieldDecl 0x557cc326cb30 <line:154:2, col:8> col:8 referenced v 'void *'
`-FieldDecl 0x557cc326cb90 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"union.ActiveNotifier::task_or_signal_t" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc326ba10 <../dummy_inc/click/notifier.hh:132:1, line:167:1> line:132:7 referenced class ActiveNotifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Notifier'
|-CXXRecordDecl 0x557cc326bb68 <col:1, col:7> col:7 implicit referenced class ActiveNotifier
|-AccessSpecDecl 0x557cc326bbf8 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x557cc326bd08 <line:134:5, col:45> col:5 ActiveNotifier 'void (Notifier::SearchOp)'
| `-ParmVarDecl 0x557cc326bc30 <col:20, col:34> col:29 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x557cc326d520 <col:34> 'Notifier::SearchOp' EnumConstant 0x557cc3266700 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x557cc326be00 <line:135:5, col:21> col:5 used ~ActiveNotifier 'void () noexcept'
| `-Overrides: [ 0x557cc3266e88 Notifier::~Notifier 'void () noexcept' ]
|-CXXMethodDecl 0x557cc326c010 <line:137:5, col:55> col:9 add_activate_callback 'int (Notifier::callback_type, void *)'
| |-Overrides: [ 0x557cc32687b0 Notifier::add_activate_callback 'int (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x557cc326bef0 <col:31, col:45> col:45 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x557cc326bf70 <col:48, col:54> col:54 v 'void *'
|-CXXMethodDecl 0x557cc326c1e8 <line:138:5, col:59> col:10 remove_activate_callback 'void (Notifier::callback_type, void *)'
| |-Overrides: [ 0x557cc3268a08 Notifier::remove_activate_callback 'void (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x557cc326c0d0 <col:35, col:49> col:49 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x557cc326c150 <col:52, col:58> col:58 v 'void *'
|-CXXMethodDecl 0x557cc326c4a8 <line:139:5, col:70> col:10 listeners 'void (Vector<Task *> &) const'
| |-ParmVarDecl 0x557cc326c380 <col:20, col:35> col:35 v 'Vector<Task *> &'
| `-DeprecatedAttr 0x557cc326c550 <col:59> "" ""
|-CXXMethodDecl 0x557cc326c6e0 <line:141:5, col:61> col:17 used set_active 'void (bool, bool)' inline
| |-ParmVarDecl 0x557cc326c5d0 <col:28, col:33> col:33 active 'bool'
| `-ParmVarDecl 0x557cc326c648 <col:41, col:57> col:46 schedule 'bool' cinit
|   `-CXXBoolLiteralExpr 0x557cc326d540 <col:57> 'bool' true
|-CXXMethodDecl 0x557cc326c7b0 <line:142:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x557cc326c870 <line:143:5, col:23> col:17 used sleep 'void ()' inline
|-AccessSpecDecl 0x557cc326c910 <line:149:3, col:10> col:3 private
|-CXXRecordDecl 0x557cc326c938 <line:151:13, line:156:5> line:151:13 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x557cc326ca68 <line:152:2, col:8> col:8 referenced t 'Task *'
| |-FieldDecl 0x557cc326cac8 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| |-FieldDecl 0x557cc326cb30 <line:154:2, col:8> col:8 referenced v 'void *'
| `-FieldDecl 0x557cc326cb90 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'
|-TypedefDecl 0x557cc326cc58 <line:151:5, line:156:7> col:7 referenced task_or_signal_t 'union task_or_signal_t':'ActiveNotifier::task_or_signal_t'
| `-ElaboratedType 0x557cc326cc00 'union task_or_signal_t' sugar
|   `-RecordType 0x557cc326c9d0 'ActiveNotifier::task_or_signal_t'
|     `-CXXRecord 0x557cc326c938 ''
|-FieldDecl 0x557cc326ccd8 <line:158:5, col:11> col:11 referenced _listener1 'Task *'
|-FieldDecl 0x557cc326cdb8 <line:159:5, col:23> col:23 referenced _listeners 'ActiveNotifier::task_or_signal_t *'
|-CXXMethodDecl 0x557cc326cf38 <line:161:5, col:46> col:9 listener_add 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x557cc326ce18 <col:22, col:36> col:36 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x557cc326ce98 <col:39, col:45> col:45 v 'void *'
|-CXXMethodDecl 0x557cc326d118 <line:162:5, col:49> col:9 listener_remove 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x557cc326cff8 <col:25, col:39> col:39 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x557cc326d078 <col:42, col:48> col:48 v 'void *'
|-CXXConstructorDecl 0x557cc326d2c8 <line:164:5, col:41> col:5 ActiveNotifier 'void (const ActiveNotifier &)'
| `-ParmVarDecl 0x557cc326d208 <col:20, col:40> col:41 'const ActiveNotifier &'
`-CXXMethodDecl 0x557cc326d478 <line:165:5, col:52> col:21 operator= 'ActiveNotifier &(const ActiveNotifier &)'
  `-ParmVarDecl 0x557cc326d388 <col:31, col:51> col:52 'const ActiveNotifier &'

Layout: <CGRecordLayout
  LLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  NonVirtualBaseLLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc329d000 <../elements/standard/notifierqueue.hh:71:1, line:101:1> line:71:7 referenced class NotifierQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'SimpleQueue'
|-CXXRecordDecl 0x557cc329d158 <col:1, col:7> col:7 implicit referenced class NotifierQueue
|-AccessSpecDecl 0x557cc329d1e8 <col:44, col:50> col:44 public
|-CXXConstructorDecl 0x557cc329d270 <line:73:5, col:19> col:5 NotifierQueue 'void ()'
|-CXXMethodDecl 0x557cc329d370 <line:75:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x557cc328a1d0 SimpleQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x557cc329e7e0 <col:36, col:62>
|   `-ReturnStmt 0x557cc329e7d0 <col:38, col:45>
|     `-ImplicitCastExpr 0x557cc329e7b8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x557cc329e790 <col:45> 'const char [14]' lvalue "NotifierQueue"
|-CXXMethodDecl 0x557cc329d4c0 <line:76:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x557cc328a4b0 SimpleQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x557cc329d428 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x557cc329d7a0 <line:78:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x557cc328a790 SimpleQueue::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x557cc329d650 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x557cc329d6c8 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x557cc329d978 <line:80:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x557cc328b238 SimpleQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x557cc329d868 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x557cc329d8e0 <col:25, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x557cc329dad0 <line:81:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x557cc328b390 SimpleQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x557cc329da40 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x557cc329db78 <line:87:3, col:12> col:3 protected
|-EnumDecl 0x557cc329dba0 <line:89:5, col:35> col:5
| `-EnumConstantDecl 0x557cc329dca0 <col:12, col:33> col:12 referenced SLEEPINESS_TRIGGER 'NotifierQueue::(anonymous enum at ../elements/standard/notifierqueue.hh:89:5)'
|   `-ImplicitCastExpr 0x557cc329dcf0 <col:33> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc329dc80 <col:33> 'int' Int: 9
|       `-IntegerLiteral 0x557cc329dc60 <col:33> 'int' 9
|-FieldDecl 0x557cc329dd20 <line:90:5, col:9> col:9 referenced _sleepiness 'int'
|-FieldDecl 0x557cc329dd80 <line:91:5, col:20> col:20 referenced _empty_note 'ActiveNotifier'
|-FriendDecl 0x557cc329de20 <line:93:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x557cc329deb0 <line:94:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x557cc329df40 <line:95:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-FriendDecl 0x557cc329dfd0 <line:96:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-CXXConstructorDecl 0x557cc329e038 <line:71:7> col:7 implicit NotifierQueue 'void (const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x557cc329e038
| `-ParmVarDecl 0x557cc329e148 <col:7> col:7 'const NotifierQueue &'
|-CXXConstructorDecl 0x557cc329e1e8 <col:7> col:7 implicit NotifierQueue 'void (NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x557cc329e1e8
| `-ParmVarDecl 0x557cc329e2f8 <col:7> col:7 'NotifierQueue &&'
|-CXXMethodDecl 0x557cc329e398 <col:7> col:7 implicit operator= 'NotifierQueue &(const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x557cc329e398
| `-ParmVarDecl 0x557cc329e4a8 <col:7> col:7 'const NotifierQueue &'
|-CXXMethodDecl 0x557cc329e518 <col:7> col:7 implicit operator= 'NotifierQueue &(NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x557cc329e518
| `-ParmVarDecl 0x557cc329e628 <col:7> col:7 'NotifierQueue &&'
`-CXXDestructorDecl 0x557cc329e6b0 <col:7> col:7 implicit used ~NotifierQueue 'void () noexcept' inline default
  |-Overrides: [ 0x557cc328c6a0 SimpleQueue::~SimpleQueue 'void () noexcept' ]
  `-CompoundStmt 0x557cc32bd490 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  NonVirtualBaseLLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class FullNoteQueue
         0 |   class NotifierQueue (primary base)
         0 |     class SimpleQueue (primary base)
         0 |       class Element (primary base)
         0 |         (Element vtable pointer)
         8 |         class Element::Port *[2] _ports
        24 |         class Element::Port [4] _inline_ports
        88 |         int [2] _nports
        96 |         class Router * _router
       104 |         int _eindex
       108 |       class Storage (base)
       108 |         Storage::index_type _capacity
       112 |         volatile Storage::index_type _head
       116 |         volatile Storage::index_type _tail
       120 |       class Packet *volatile * _q
       128 |       volatile int _drops
       132 |       int _highwater_length
       136 |     int _sleepiness
       144 |     class ActiveNotifier _empty_note
       144 |       class Notifier (primary base)
       144 |         (Notifier vtable pointer)
       152 |         class NotifierSignal _signal
       152 |           union NotifierSignal::vmvalue _v
       152 |             class atomic_uint32_t * v1
       152 |             struct NotifierSignal::vmpair * vm
       160 |           uint32_t _mask
       168 |         enum Notifier::SearchOp _search_op
       176 |       class Task * _listener1
       184 |       ActiveNotifier::task_or_signal_t * _listeners
       192 |   class ActiveNotifier _full_note
       192 |     class Notifier (primary base)
       192 |       (Notifier vtable pointer)
       200 |       class NotifierSignal _signal
       200 |         union NotifierSignal::vmvalue _v
       200 |           class atomic_uint32_t * v1
       200 |           struct NotifierSignal::vmpair * vm
       208 |         uint32_t _mask
       216 |       enum Notifier::SearchOp _search_op
       224 |     class Task * _listener1
       232 |     ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=240, dsize=240, align=8,
           |  nvsize=240, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc329e7f8 <../elements/standard/fullnotequeue.hh:68:1, line:99:1> line:68:7 referenced class FullNoteQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'NotifierQueue'
|-CXXRecordDecl 0x557cc329e958 <col:1, col:7> col:7 implicit referenced class FullNoteQueue
|-AccessSpecDecl 0x557cc329e9e8 <col:46, col:52> col:46 public
|-CXXConstructorDecl 0x557cc329ea70 <line:70:5, col:19> col:5 FullNoteQueue 'void ()'
|-CXXMethodDecl 0x557cc329eb70 <line:72:5, col:54> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x557cc329d370 NotifierQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x557cc32a0808 <col:36, col:54>
|   `-ReturnStmt 0x557cc32a07f8 <col:38, col:45>
|     `-ImplicitCastExpr 0x557cc32a07e0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x557cc32a07c0 <col:45> 'const char [6]' lvalue "Queue"
|-CXXMethodDecl 0x557cc329ecc0 <line:73:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x557cc329d4c0 NotifierQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x557cc329ec28 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x557cc329efa0 <line:75:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x557cc329d7a0 NotifierQueue::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x557cc329ee50 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x557cc329eec8 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x557cc329f280 <line:76:5, col:66> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x557cc328add0 SimpleQueue::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x557cc329f130 <col:26, col:42> col:42 conf 'Vector<String> &'
| `-ParmVarDecl 0x557cc329f1a8 <col:48, col:62> col:62 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557cc329f458 <line:81:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x557cc329d978 NotifierQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x557cc329f348 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x557cc329f3c0 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x557cc329f5b0 <line:82:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x557cc329dad0 NotifierQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x557cc329f520 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x557cc329f658 <line:84:3, col:12> col:3 protected
|-FieldDecl 0x557cc329f690 <line:86:5, col:20> col:20 referenced _full_note 'ActiveNotifier'
|-CXXMethodDecl 0x557cc329fa88 <line:88:5, line:89:42> line:88:17 push_success 'void (Storage::index_type, Storage::index_type, Storage::index_type, Packet *)' inline
| |-ParmVarDecl 0x557cc329f740 <col:30, col:50> col:50 h 'Storage::index_type':'unsigned int'
| |-ParmVarDecl 0x557cc329f808 <col:53, col:73> col:73 t 'Storage::index_type':'unsigned int'
| |-ParmVarDecl 0x557cc329f8d0 <line:89:9, col:29> col:29 nt 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x557cc329f948 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x557cc329fbe8 <line:90:5, col:39> col:17 push_failure 'void (Packet *)' inline
| `-ParmVarDecl 0x557cc329fb58 <col:30, col:38> col:38 p 'Packet *'
|-CXXMethodDecl 0x557cc329fec8 <line:91:5, line:92:27> line:91:20 pull_success 'Packet *(Storage::index_type, Storage::index_type)' inline
| |-ParmVarDecl 0x557cc329fcf0 <col:33, col:53> col:53 h 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x557cc329fdb8 <line:92:5, col:25> col:25 nh 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x557cc329ff98 <line:93:5, col:33> col:20 pull_failure 'Packet *()' inline
|-CXXConstructorDecl 0x557cc32a0068 <line:68:7> col:7 implicit FullNoteQueue 'void (const FullNoteQueue &)' inline default_delete noexcept-unevaluated 0x557cc32a0068
| `-ParmVarDecl 0x557cc32a0178 <col:7> col:7 'const FullNoteQueue &'
|-CXXConstructorDecl 0x557cc32a0218 <col:7> col:7 implicit FullNoteQueue 'void (FullNoteQueue &&)' inline default_delete noexcept-unevaluated 0x557cc32a0218
| `-ParmVarDecl 0x557cc32a0328 <col:7> col:7 'FullNoteQueue &&'
|-CXXMethodDecl 0x557cc32a03c8 <col:7> col:7 implicit operator= 'FullNoteQueue &(const FullNoteQueue &)' inline default_delete noexcept-unevaluated 0x557cc32a03c8
| `-ParmVarDecl 0x557cc32a04d8 <col:7> col:7 'const FullNoteQueue &'
|-CXXMethodDecl 0x557cc32a0548 <col:7> col:7 implicit operator= 'FullNoteQueue &(FullNoteQueue &&)' inline default_delete noexcept-unevaluated 0x557cc32a0548
| `-ParmVarDecl 0x557cc32a0658 <col:7> col:7 'FullNoteQueue &&'
`-CXXDestructorDecl 0x557cc32a06e0 <col:7> col:7 implicit used ~FullNoteQueue 'void () noexcept' inline default
  |-Overrides: [ 0x557cc329e6b0 NotifierQueue::~NotifierQueue 'void () noexcept' ]
  `-CompoundStmt 0x557cc32bd4a0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.FullNoteQueue = type { %class.NotifierQueue, %class.ActiveNotifier }
  NonVirtualBaseLLVMType:%class.FullNoteQueue = type { %class.NotifierQueue, %class.ActiveNotifier }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSafeQueue
         0 |   class FullNoteQueue (primary base)
         0 |     class NotifierQueue (primary base)
         0 |       class SimpleQueue (primary base)
         0 |         class Element (primary base)
         0 |           (Element vtable pointer)
         8 |           class Element::Port *[2] _ports
        24 |           class Element::Port [4] _inline_ports
        88 |           int [2] _nports
        96 |           class Router * _router
       104 |           int _eindex
       108 |         class Storage (base)
       108 |           Storage::index_type _capacity
       112 |           volatile Storage::index_type _head
       116 |           volatile Storage::index_type _tail
       120 |         class Packet *volatile * _q
       128 |         volatile int _drops
       132 |         int _highwater_length
       136 |       int _sleepiness
       144 |       class ActiveNotifier _empty_note
       144 |         class Notifier (primary base)
       144 |           (Notifier vtable pointer)
       152 |           class NotifierSignal _signal
       152 |             union NotifierSignal::vmvalue _v
       152 |               class atomic_uint32_t * v1
       152 |               struct NotifierSignal::vmpair * vm
       160 |             uint32_t _mask
       168 |           enum Notifier::SearchOp _search_op
       176 |         class Task * _listener1
       184 |         ActiveNotifier::task_or_signal_t * _listeners
       192 |     class ActiveNotifier _full_note
       192 |       class Notifier (primary base)
       192 |         (Notifier vtable pointer)
       200 |         class NotifierSignal _signal
       200 |           union NotifierSignal::vmvalue _v
       200 |             class atomic_uint32_t * v1
       200 |             struct NotifierSignal::vmpair * vm
       208 |           uint32_t _mask
       216 |         enum Notifier::SearchOp _search_op
       224 |       class Task * _listener1
       232 |       ActiveNotifier::task_or_signal_t * _listeners
       240 |   class atomic_uint32_t _xhead
       240 |     uint32_t _val
       244 |   class atomic_uint32_t _xtail
       244 |     uint32_t _val
           | [sizeof=248, dsize=248, align=8,
           |  nvsize=248, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc32a2578 <../elements/standard/threadsafequeue.hh:54:1, line:72:1> line:54:7 referenced class ThreadSafeQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-public 'FullNoteQueue'
|-CXXRecordDecl 0x557cc32a26d8 <col:1, col:7> col:7 implicit referenced class ThreadSafeQueue
|-AccessSpecDecl 0x557cc32a2768 <col:48, col:54> col:48 public
|-CXXConstructorDecl 0x557cc32a27f0 <line:56:5, col:21> col:5 used ThreadSafeQueue 'void ()'
|-CXXMethodDecl 0x557cc32a28f0 <line:58:5, col:64> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x557cc329eb70 FullNoteQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x557cc32a3b80 <col:36, col:64>
|   `-ReturnStmt 0x557cc32a3b70 <col:38, col:45>
|     `-ImplicitCastExpr 0x557cc32a3b58 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x557cc32a3b30 <col:45> 'const char [16]' lvalue "ThreadSafeQueue"
|-CXXMethodDecl 0x557cc32a2a40 <line:59:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x557cc329ecc0 FullNoteQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x557cc32a29a8 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x557cc32a2d20 <line:61:5, col:66> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x557cc329f280 FullNoteQueue::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x557cc32a2bd0 <col:26, col:42> col:42 conf 'Vector<String> &'
| `-ParmVarDecl 0x557cc32a2c48 <col:48, col:62> col:62 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557cc32a2ef0 <line:62:5, col:44> col:10 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x557cc328afa0 SimpleQueue::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x557cc32a2de0 <col:21, col:28> col:29 'Element *'
| `-ParmVarDecl 0x557cc32a2e58 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x557cc32a30c8 <line:64:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x557cc329f458 FullNoteQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x557cc32a2fb8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x557cc32a3030 <col:25, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x557cc32a3220 <line:65:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x557cc329f5b0 FullNoteQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x557cc32a3190 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x557cc32a32c8 <line:67:3, col:10> col:3 private
|-FieldDecl 0x557cc32a3300 <line:69:5, col:21> col:21 _xhead 'atomic_uint32_t'
|-FieldDecl 0x557cc32a3360 <line:70:5, col:21> col:21 _xtail 'atomic_uint32_t'
|-CXXConstructorDecl 0x557cc32a33d8 <line:54:7> col:7 implicit ThreadSafeQueue 'void (const ThreadSafeQueue &)' inline default_delete noexcept-unevaluated 0x557cc32a33d8
| `-ParmVarDecl 0x557cc32a34e8 <col:7> col:7 'const ThreadSafeQueue &'
|-CXXConstructorDecl 0x557cc32a3588 <col:7> col:7 implicit ThreadSafeQueue 'void (ThreadSafeQueue &&)' inline default_delete noexcept-unevaluated 0x557cc32a3588
| `-ParmVarDecl 0x557cc32a3698 <col:7> col:7 'ThreadSafeQueue &&'
|-CXXMethodDecl 0x557cc32a3738 <col:7> col:7 implicit operator= 'ThreadSafeQueue &(const ThreadSafeQueue &)' inline default_delete noexcept-unevaluated 0x557cc32a3738
| `-ParmVarDecl 0x557cc32a3848 <col:7> col:7 'const ThreadSafeQueue &'
|-CXXMethodDecl 0x557cc32a38b8 <col:7> col:7 implicit operator= 'ThreadSafeQueue &(ThreadSafeQueue &&)' inline default_delete noexcept-unevaluated 0x557cc32a38b8
| `-ParmVarDecl 0x557cc32a39c8 <col:7> col:7 'ThreadSafeQueue &&'
`-CXXDestructorDecl 0x557cc32a3a50 <col:7> col:7 implicit used ~ThreadSafeQueue 'void () noexcept' inline default
  |-Overrides: [ 0x557cc32a06e0 FullNoteQueue::~FullNoteQueue 'void () noexcept' ]
  `-CompoundStmt 0x557cc32bd4b0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSafeQueue = type { %class.FullNoteQueue, %class.atomic_uint32_t, %class.atomic_uint32_t }
  NonVirtualBaseLLVMType:%class.ThreadSafeQueue = type { %class.FullNoteQueue, %class.atomic_uint32_t, %class.atomic_uint32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class MSQueue
         0 |   class ThreadSafeQueue (primary base)
         0 |     class FullNoteQueue (primary base)
         0 |       class NotifierQueue (primary base)
         0 |         class SimpleQueue (primary base)
         0 |           class Element (primary base)
         0 |             (Element vtable pointer)
         8 |             class Element::Port *[2] _ports
        24 |             class Element::Port [4] _inline_ports
        88 |             int [2] _nports
        96 |             class Router * _router
       104 |             int _eindex
       108 |           class Storage (base)
       108 |             Storage::index_type _capacity
       112 |             volatile Storage::index_type _head
       116 |             volatile Storage::index_type _tail
       120 |           class Packet *volatile * _q
       128 |           volatile int _drops
       132 |           int _highwater_length
       136 |         int _sleepiness
       144 |         class ActiveNotifier _empty_note
       144 |           class Notifier (primary base)
       144 |             (Notifier vtable pointer)
       152 |             class NotifierSignal _signal
       152 |               union NotifierSignal::vmvalue _v
       152 |                 class atomic_uint32_t * v1
       152 |                 struct NotifierSignal::vmpair * vm
       160 |               uint32_t _mask
       168 |             enum Notifier::SearchOp _search_op
       176 |           class Task * _listener1
       184 |           ActiveNotifier::task_or_signal_t * _listeners
       192 |       class ActiveNotifier _full_note
       192 |         class Notifier (primary base)
       192 |           (Notifier vtable pointer)
       200 |           class NotifierSignal _signal
       200 |             union NotifierSignal::vmvalue _v
       200 |               class atomic_uint32_t * v1
       200 |               struct NotifierSignal::vmpair * vm
       208 |             uint32_t _mask
       216 |           enum Notifier::SearchOp _search_op
       224 |         class Task * _listener1
       232 |         ActiveNotifier::task_or_signal_t * _listeners
       240 |     class atomic_uint32_t _xhead
       240 |       uint32_t _val
       244 |     class atomic_uint32_t _xtail
       244 |       uint32_t _val
           | [sizeof=248, dsize=248, align=8,
           |  nvsize=248, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc32a3b98 <../elements/standard/msqueue.hh:28:1, line:41:1> line:28:7 class MSQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-public 'ThreadSafeQueue'
|-CXXRecordDecl 0x557cc32a3cf8 <col:1, col:7> col:7 implicit referenced class MSQueue
|-AccessSpecDecl 0x557cc32a3d88 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x557cc32a3e10 <line:30:5, col:13> col:5 MSQueue 'void ()'
|-CXXMethodDecl 0x557cc32a3f10 <line:32:5, col:56> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x557cc32a28f0 ThreadSafeQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x557cc32a53e8 <col:36, col:56>
|   `-ReturnStmt 0x557cc32a53d8 <col:38, col:45>
|     `-ImplicitCastExpr 0x557cc32a53c0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x557cc32a53a0 <col:45> 'const char [8]' lvalue "MSQueue"
|-CXXMethodDecl 0x557cc32a4060 <line:33:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x557cc32a2a40 ThreadSafeQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x557cc32a3fc8 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x557cc32a4b70 <line:35:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x557cc329efa0 FullNoteQueue::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x557cc32a4a20 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x557cc32a4a98 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXConstructorDecl 0x557cc32a4c48 <line:28:7> col:7 implicit MSQueue 'void (const MSQueue &)' inline default_delete noexcept-unevaluated 0x557cc32a4c48
| `-ParmVarDecl 0x557cc32a4d58 <col:7> col:7 'const MSQueue &'
|-CXXConstructorDecl 0x557cc32a4df8 <col:7> col:7 implicit MSQueue 'void (MSQueue &&)' inline default_delete noexcept-unevaluated 0x557cc32a4df8
| `-ParmVarDecl 0x557cc32a4f08 <col:7> col:7 'MSQueue &&'
|-CXXMethodDecl 0x557cc32a4fa8 <col:7> col:7 implicit operator= 'MSQueue &(const MSQueue &)' inline default_delete noexcept-unevaluated 0x557cc32a4fa8
| `-ParmVarDecl 0x557cc32a50b8 <col:7> col:7 'const MSQueue &'
|-CXXMethodDecl 0x557cc32a5128 <col:7> col:7 implicit operator= 'MSQueue &(MSQueue &&)' inline default_delete noexcept-unevaluated 0x557cc32a5128
| `-ParmVarDecl 0x557cc32a5238 <col:7> col:7 'MSQueue &&'
`-CXXDestructorDecl 0x557cc32a52c0 <col:7> col:7 implicit ~MSQueue 'void ()' inline default noexcept-unevaluated 0x557cc32a52c0
  `-Overrides: [ 0x557cc32a3a50 ThreadSafeQueue::~ThreadSafeQueue 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.MSQueue = type { %class.ThreadSafeQueue }
  NonVirtualBaseLLVMType:%class.MSQueue = type { %class.ThreadSafeQueue }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc32a5400 prev 0x557cc31abc20 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557cc32a54f8 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x557cc32a5588 <col:22, col:28> col:22 public
|-EnumDecl 0x557cc32a55b0 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x557cc32a56c8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x557cc32a56a8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x557cc32a5690 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x557cc32a5670 <col:14> 'int' 999
| |-EnumConstantDecl 0x557cc32a5770 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x557cc32a5750 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x557cc32a5738 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x557cc32a5718 <col:14> 'int' 1
| |-EnumConstantDecl 0x557cc32a5800 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x557cc32a57e0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x557cc32a57c0 <col:17> 'int' 0
| |-EnumConstantDecl 0x557cc32a5890 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x557cc32a5870 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x557cc32a5850 <col:13> 'int' 1
| |-EnumConstantDecl 0x557cc32a5920 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x557cc32a5900 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x557cc32a58e0 <col:16> 'int' 2
| |-EnumConstantDecl 0x557cc32a59b0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x557cc32a5990 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x557cc32a5970 <col:13> 'int' 3
| |-EnumConstantDecl 0x557cc32a5a40 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x557cc32a5a20 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x557cc32a5a00 <col:15> 'int' 4
| |-EnumConstantDecl 0x557cc32a5ad0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x557cc32a5ab0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x557cc32a5a90 <col:14> 'int' 5
| |-EnumConstantDecl 0x557cc32a5b60 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x557cc32a5b40 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x557cc32a5b20 <col:12> 'int' 6
| `-EnumConstantDecl 0x557cc32a5bf0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x557cc32a5bd0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x557cc32a5bb0 <col:13> 'int' 7
|-VarDecl 0x557cc32a5c60 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x557cc32a5ce8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x557cc32a5d70 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x557cc32a5df8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x557cc32a5e80 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x557cc32a5f08 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x557cc32a5f90 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x557cc32a6018 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x557cc32a60a0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x557cc32a6128 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x557cc32a61b0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x557cc32a62b0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x557cc32ab698 '_nerrors' 'int'
| | `-IntegerLiteral 0x557cc32abe28 <line:128:13> 'int' 0
| `-CompoundStmt 0x557cc32abe98 <col:16, line:129:5>
|-CXXDestructorDecl 0x557cc32a63a0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x557cc32abea8 <col:29, line:132:5>
|-CXXMethodDecl 0x557cc32a6558 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x557cc32a6490 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557cc32a6620 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x557cc32a6708 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x557cc32abf00 <col:44, line:161:5>
|   `-ReturnStmt 0x557cc32abef0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x557cc32abed8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x557cc32abeb8 <col:9> 'ErrorHandler *' lvalue Var 0x557cc32ab6f8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x557cc32a6878 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x557cc32a67b8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x557cc32a6940 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x557cc32abf60 <col:43, line:173:5>
|   `-ReturnStmt 0x557cc32abf50 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x557cc32abf38 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x557cc32abf18 <col:9> 'ErrorHandler *' lvalue Var 0x557cc32ab770 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x557cc32a69f8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x557cc32a6a78 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x557cc32a6b88 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x557cc32a6af8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a6cd8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x557cc32a6c48 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a6e30 <line:193:5, col:37> col:9 used warning 'int (const char *, ...)'
| `-ParmVarDecl 0x557cc32a6d98 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a6f88 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x557cc32a6ef0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a70e0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x557cc32a7048 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a72f0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x557cc32a7198 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x557cc32a7218 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a74c8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x557cc32a73b0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x557cc32a7430 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a76e8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x557cc32a7588 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x557cc32a7608 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a78c8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x557cc32a77a8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x557cc32a7828 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a7aa8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x557cc32a7988 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x557cc32a7a08 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a7c30 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x557cc32a7b68 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x557cc32a7e00 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x557cc32a7ce8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x557cc32a7d60 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x557cc32ac1b8 <col:57, line:234:5>
|   `-ReturnStmt 0x557cc32ac1a8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x557cc32ac190 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x557cc32ac138 <col:9, col:41> 'int'
|         |-MemberExpr 0x557cc32ac108 <col:9> '<bound member function type>' ->xmessage 0x557cc32a7c30
|         | `-CXXThisExpr 0x557cc32ac0f8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x557cc32ac178 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x557cc32ac160 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x557cc32ac0d8 <col:18, col:40> 'String' (CXXTemporary 0x557cc32ac0d8)
|               `-CallExpr 0x557cc32ac0a0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x557cc32ac088 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x557cc32ac000 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x557cc32a9e88 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x557cc32ac020 <col:31> 'const String' lvalue ParmVar 0x557cc32a7d60 'str' 'const String &'
|                 `-DeclRefExpr 0x557cc32ac040 <col:36> 'const String' lvalue ParmVar 0x557cc32a7ce8 'anno' 'const String &'
|-CXXMethodDecl 0x557cc32a8140 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x557cc32a7ec0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x557cc32a7f40 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x557cc32a8010 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x557cc32ac448 <col:68, line:243:5>
|   `-ReturnStmt 0x557cc32ac438 <line:242:2, col:41>
|     `-ExprWithCleanups 0x557cc32ac420 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x557cc32ac3c0 <col:9, col:41> 'int'
|         |-MemberExpr 0x557cc32ac390 <col:9> '<bound member function type>' ->xmessage 0x557cc32a7e00
|         | `-CXXThisExpr 0x557cc32ac380 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x557cc32ac258 <col:18> 'const String' lvalue ParmVar 0x557cc32a7ec0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x557cc32ac408 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x557cc32ac3f0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x557cc32ac360 <col:24, col:40> 'String' (CXXTemporary 0x557cc32ac360)
|               `-CXXMemberCallExpr 0x557cc32ac2f8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x557cc32ac288 <col:24> '<bound member function type>' ->vformat 0x557cc32a9320
|                 | `-CXXThisExpr 0x557cc32ac278 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x557cc32ac328 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x557cc32ac2b8 <col:32> 'const char *' lvalue ParmVar 0x557cc32a7f40 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x557cc32ac340 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x557cc32ac2d8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x557cc32a8010 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x557cc32a83e0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x557cc32a8208 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x557cc32a8280 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x557cc32a82f8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x557cc32ac788 <col:23, line:254:5>
|   `-ReturnStmt 0x557cc32ac778 <line:253:2, col:71>
|     `-ExprWithCleanups 0x557cc32ac760 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x557cc32ac700 <col:9, col:71> 'int'
|         |-MemberExpr 0x557cc32ac6d0 <col:9> '<bound member function type>' ->xmessage 0x557cc32a7e00
|         | `-CXXThisExpr 0x557cc32ac6c0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x557cc32ac748 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x557cc32ac730 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x557cc32ac680 <col:18, col:65> 'String' (CXXTemporary 0x557cc32ac680)
|         |     `-CallExpr 0x557cc32ac618 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x557cc32ac600 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x557cc32ac4e8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x557cc32a9e88 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x557cc32ac508 <col:31> 'const String' lvalue ParmVar 0x557cc32a8280 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x557cc32ac660 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x557cc32ac648 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x557cc32ac5e0 <col:37, col:64> 'String' (CXXTemporary 0x557cc32ac5e0)
|         |             `-CallExpr 0x557cc32ac5b0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x557cc32ac598 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x557cc32ac528 <col:37> 'String (const String &)' lvalue CXXMethod 0x557cc32aa4d8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x557cc32ac548 <col:56> 'const String' lvalue ParmVar 0x557cc32a8208 'landmark' 'const String &'
|         `-DeclRefExpr 0x557cc32ac6a0 <col:68> 'const String' lvalue ParmVar 0x557cc32a82f8 'str' 'const String &'
|-CXXMethodDecl 0x557cc32a8760 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x557cc32a84a8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x557cc32a8520 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x557cc32a85a0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x557cc32a8618 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x557cc32afb00 <col:34, line:267:5>
|   `-ReturnStmt 0x557cc32afaf0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x557cc32afad8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x557cc32afa70 <col:9, col:51> 'int'
|         |-MemberExpr 0x557cc32afa40 <col:9> '<bound member function type>' ->xmessage 0x557cc32a83e0
|         | `-CXXThisExpr 0x557cc32ac970 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x557cc32ac828 <col:18> 'const String' lvalue ParmVar 0x557cc32a84a8 'landmark' 'const String &'
|         |-DeclRefExpr 0x557cc32ac848 <col:28> 'const String' lvalue ParmVar 0x557cc32a8520 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x557cc32afac0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x557cc32afaa8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x557cc32ac950 <col:34, col:50> 'String' (CXXTemporary 0x557cc32ac950)
|               `-CXXMemberCallExpr 0x557cc32ac8e8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x557cc32ac878 <col:34> '<bound member function type>' ->vformat 0x557cc32a9320
|                 | `-CXXThisExpr 0x557cc32ac868 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x557cc32ac918 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x557cc32ac8a8 <col:42> 'const char *' lvalue ParmVar 0x557cc32a85a0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x557cc32ac930 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x557cc32ac8c8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x557cc32a8618 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x557cc32a8870 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x557cc32afb80 <col:25, line:288:5>
|   `-ReturnStmt 0x557cc32afb70 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x557cc32afb58 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x557cc32afb28 <col:9> 'const int' lvalue ->_nerrors 0x557cc32ab698
|         `-CXXThisExpr 0x557cc32afb18 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x557cc32a8a80 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x557cc32a8928 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x557cc32a89a8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a8d68 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x557cc32a8b48 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x557cc32a8bc8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x557cc32a8c40 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x557cc32a8f00 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x557cc32a8e38 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a9148 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x557cc32a8fc0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x557cc32a9038 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x557cc32afde0 <col:58, line:357:5>
|   `-ReturnStmt 0x557cc32afdd0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x557cc32afdb8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x557cc32afd88 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x557cc32afd70 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x557cc32afd50 <col:9, col:29> 'String' (CXXTemporary 0x557cc32afd50)
|             `-CallExpr 0x557cc32afce0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x557cc32afcc8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x557cc32afc48 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x557cc32a8d68 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x557cc32afbe8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x557cc32afd18 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x557cc32afc08 <col:21> 'const char *' lvalue ParmVar 0x557cc32a8fc0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x557cc32afd30 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x557cc32afc28 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x557cc32a9038 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x557cc32a9320 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x557cc32a9210 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x557cc32a9288 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x557cc32a9478 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x557cc32a93e8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x557cc32a95f8 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x557cc32a9530 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x557cc32a9890 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x557cc32a96b0 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x557cc32a9730 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x557cc32a97a8 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x557cc32a99f0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x557cc32a9960 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x557cc32afef8 <col:37, line:441:5>
|   `-IfStmt 0x557cc32afee0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x557cc32afe68 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x557cc32afe38 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x557cc32afdf8 <col:6> 'int' lvalue ParmVar 0x557cc32a9960 'level' 'int'
|     | `-ImplicitCastExpr 0x557cc32afe50 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x557cc32afe18 <col:15> 'ErrorHandler::Level' EnumConstant 0x557cc32a59b0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x557cc32afec8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x557cc32afe98 <col:8> 'int' lvalue ->_nerrors 0x557cc32ab698
|         `-CXXThisExpr 0x557cc32afe88 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x557cc32a9ab8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x557cc32aff90 <col:26, line:448:5>
|   `-BinaryOperator 0x557cc32aff70 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x557cc32aff20 <col:2> 'int' lvalue ->_nerrors 0x557cc32ab698
|     | `-CXXThisExpr 0x557cc32aff10 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x557cc32aff50 <col:13> 'int' 0
|-CXXMethodDecl 0x557cc32a9c80 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x557cc32a9b70 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x557cc32a9be8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x557cc32a9e88 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x557cc32a9d40 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x557cc32a9db8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x557cc32aa138 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x557cc32a9f48 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x557cc32a9fc8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x557cc32aa048 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x557cc32aa1f0 <col:59> 0 0
|-CXXMethodDecl 0x557cc32aa388 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x557cc32aa268 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x557cc32aa2e8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x557cc32b0600 <col:70, line:534:5>
|   |-DeclStmt 0x557cc32b0100 <line:528:2, col:20>
|   | |-VarDecl 0x557cc32affb8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x557cc32b0020 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x557cc32b0058 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x557cc32b00c0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x557cc32b01d0 <line:529:2, col:23>
|   | `-VarDecl 0x557cc32b0130 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x557cc32b01b8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x557cc32b0198 <col:18> 'const char *' lvalue ParmVar 0x557cc32aa268 'begin' 'const char *'
|   |-DoStmt 0x557cc32b0598 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x557cc32b04c8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x557cc32b04b0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x557cc32b0490 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x557cc32b01e8 <col:6> 'const char *' lvalue Var 0x557cc32b0130 'x' 'const char *'
|   | |     `-CallExpr 0x557cc32b03e0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x557cc32b03c8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x557cc32b0380 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x557cc32abb70 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x557cc32b0448 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x557cc32b0430 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x557cc32b02a0 <col:20, col:27> 'String' (CXXTemporary 0x557cc32b02a0)
|   | |       |     `-CXXTemporaryObjectExpr 0x557cc32b0268 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x557cc32b0460 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x557cc32b02c0 <col:30> 'const char *' lvalue Var 0x557cc32b0130 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x557cc32b0478 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x557cc32b02e0 <col:33> 'const char *' lvalue ParmVar 0x557cc32aa2e8 'end' 'const char *'
|   | |       |-UnaryOperator 0x557cc32b0320 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x557cc32b0300 <col:39> 'String' lvalue Var 0x557cc32affb8 'name' 'String'
|   | |       |-UnaryOperator 0x557cc32b0358 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x557cc32b0338 <col:46> 'String' lvalue Var 0x557cc32b0058 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x557cc32b0370 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x557cc32b0580 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x557cc32b0568 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x557cc32b0548 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x557cc32b0518 <col:11> '<bound member function type>' .operator int (String::*)() const 0x557cc2f7aa18
|   |         `-ImplicitCastExpr 0x557cc32b0500 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x557cc32b04e0 <col:11> 'String' lvalue Var 0x557cc32affb8 'name' 'String'
|   `-ReturnStmt 0x557cc32b05f0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x557cc32b05d8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x557cc32b05b8 <col:9> 'const char *' lvalue Var 0x557cc32b0130 'x' 'const char *'
|-CXXMethodDecl 0x557cc32aa4d8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x557cc32aa448 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x557cc32b0c08 <col:55, line:550:5>
|   `-IfStmt 0x557cc32b0be0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x557cc32b0840 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x557cc32b0828 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x557cc32b0810 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x557cc32b07f0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x557cc32b07c0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x557cc2f7aa18
|     | |       `-DeclRefExpr 0x557cc32b0660 <col:6> 'const String' lvalue ParmVar 0x557cc32aa448 'x' 'const String &'
|     | `-BinaryOperator 0x557cc32b07a0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x557cc32b0770 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x557cc32b0720 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x557cc32b0708 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x557cc32b06c0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x557cc2f94250 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x557cc32b0680 <col:11> 'const String' lvalue ParmVar 0x557cc32aa448 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x557cc32b06a0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x557cc32b0788 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x557cc32b0758 <col:19> 'char' 123
|     |-ReturnStmt 0x557cc32b08b0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x557cc32b0880 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x557cc32b0860 <col:13> 'const String' lvalue ParmVar 0x557cc32aa448 'x' 'const String &'
|     `-IfStmt 0x557cc32b0bb8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x557cc32b0948 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x557cc32b0930 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x557cc32b0910 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x557cc32b08e0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x557cc2f7aa18
|       |       `-DeclRefExpr 0x557cc32b08c0 <col:11> 'const String' lvalue ParmVar 0x557cc32aa448 'x' 'const String &'
|       |-ReturnStmt 0x557cc32b0ad0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x557cc32b0ab8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x557cc32b0a88 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x557cc32b0a70 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x557cc32b0a50 <col:13, col:29> 'String' (CXXTemporary 0x557cc32b0a50)
|       |         `-CallExpr 0x557cc32b0a00 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x557cc32b09e8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x557cc32b0960 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x557cc32a9c80 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x557cc32b0a30 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x557cc32b0980 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x557cc32b09a0 <col:28> 'const String' lvalue ParmVar 0x557cc32aa448 'x' 'const String &'
|       `-ReturnStmt 0x557cc32b0ba8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x557cc32b0b90 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x557cc32b0b60 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x557cc32b0b48 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x557cc32b0b28 <col:13, col:20> 'String' (CXXTemporary 0x557cc32b0b28)
|                 `-CXXTemporaryObjectExpr 0x557cc32b0af0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x557cc32aa6d8 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x557cc32aa590 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x557cc32aa608 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x557cc32abe18 <col:71> 'bool' false
|-CXXRecordDecl 0x557cc32aa788 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x557cc32aaa88 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x557cc32aaa20 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x557cc32aa9c0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x557cc32aa980 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x557cc2f772b0 'String'
|       | `-CXXRecord 0x557cc2f77220 'String'
|       |-BuiltinType 0x557cc2c48580 'int'
|       `-DecayedType 0x557cc32a7fe0 '__va_list_tag *' sugar
|         |-TypedefType 0x557cc32a7fb0 'va_list' sugar
|         | |-Typedef 0x557cc2e68360 'va_list'
|         | `-TypedefType 0x557cc2e68310 '__gnuc_va_list' sugar
|         |   |-Typedef 0x557cc2d9ff38 '__gnuc_va_list'
|         |   `-TypedefType 0x557cc2d9fea0 '__builtin_va_list' sugar
|         |     |-Typedef 0x557cc2c89d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x557cc2c89ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x557cc2c492d0 '__va_list_tag'
|         |         `-CXXRecord 0x557cc2c49238 '__va_list_tag'
|         `-PointerType 0x557cc2e6dc00 '__va_list_tag *'
|           `-RecordType 0x557cc2c492d0 '__va_list_tag'
|             `-CXXRecord 0x557cc2c49238 '__va_list_tag'
|-EnumDecl 0x557cc32aaae0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x557cc32aabe0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x557cc32ab140 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc32aabc0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x557cc32aaba0 <col:16> 'int' 1
| |-EnumConstantDecl 0x557cc32aac70 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x557cc32ab158 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc32aac50 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x557cc32aac30 <col:21> 'int' 2
| |-EnumConstantDecl 0x557cc32aad00 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x557cc32ab170 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc32aace0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x557cc32aacc0 <col:22> 'int' 4
| |-EnumConstantDecl 0x557cc32aad90 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x557cc32ab188 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc32aad70 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x557cc32aad50 <col:17> 'int' 8
| |-EnumConstantDecl 0x557cc32aae20 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x557cc32ab1a0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc32aae00 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x557cc32aade0 <col:22> 'int' 16
| |-EnumConstantDecl 0x557cc32aaeb0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x557cc32ab1b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc32aae90 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x557cc32aae70 <col:19> 'int' 32
| |-EnumConstantDecl 0x557cc32aaf40 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x557cc32ab1d0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc32aaf20 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x557cc32aaf00 <col:17> 'int' 64
| |-EnumConstantDecl 0x557cc32aafd0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x557cc32ab1e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc32aafb0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x557cc32aaf90 <col:14> 'int' 128
| |-EnumConstantDecl 0x557cc32ab060 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x557cc32ab200 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x557cc32ab040 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x557cc32ab020 <col:16> 'int' 256
| `-EnumConstantDecl 0x557cc32ab0f0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x557cc32ab218 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc32ab0d0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x557cc32ab0b0 <col:12> 'int' 1024
|-CXXMethodDecl 0x557cc32ab428 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x557cc32ab240 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x557cc32ab2e0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x557cc32ab5b0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x557cc32ab4e8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x557cc32ab658 <line:580:3, col:10> col:3 private
|-FieldDecl 0x557cc32ab698 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x557cc32ab6f8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x557cc32ab770 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x557cc32abb70 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x557cc32ab7e8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x557cc32ab868 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x557cc32ab8e8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x557cc32ab960 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x557cc32ab9d8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x557cc32aba50 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x557cc32abc98 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x557cc32abc98
| `-ParmVarDecl 0x557cc32abda8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x557cc32b0f68 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x557cc32b0f68
  `-ParmVarDecl 0x557cc32b1078 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc3132e58 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x557cc3132f88 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x557cc3133a78 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc312f758 prev 0x557cc31aba30 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557cc312f850 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x557cc312f8e0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x557cc312f940 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x557cc312f9e8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x557cc312fb08 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x557cc312fca8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x557cc312fbe8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x557cc312fef8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x557cc312fd68 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x557cc312fde8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x557cc3130050 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x557cc312ffc0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x557cc31301d8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x557cc3130110 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x557cc3130388 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x557cc31302c8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x557cc3130480 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x557cc3133c50 <col:21, line:58:5>
|   `-IfStmt 0x557cc3133c38 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x557cc3133ba0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x557cc3133b70 <col:6> '<bound member function type>' ->scheduled 0x557cc3130cd8
|     |   `-ImplicitCastExpr 0x557cc3133bc0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x557cc3133b60 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x557cc3133c18 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x557cc3133be8 <col:6> '<bound member function type>' ->unschedule 0x557cc3132300
|         `-CXXThisExpr 0x557cc3133bd8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x557cc3130580 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x557cc3133df0 <col:26, line:65:5>
|   |-BinaryOperator 0x557cc3133d10 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x557cc3133ca8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x557cc3132f88
|   | | `-MemberExpr 0x557cc3133c78 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x557cc3133048
|   | |   `-CXXThisExpr 0x557cc3133c68 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x557cc3133cf8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cc3133cd8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x557cc31334a8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x557cc3133dd0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x557cc3133d40 <col:2> 'void *' lvalue ->_thunk 0x557cc31330c8
|     | `-CXXThisExpr 0x557cc3133d30 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x557cc3133da8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x557cc3133d70 <col:20> 'int' 1
|-CXXMethodDecl 0x557cc31306c0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x557cc3130630 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x557cc3133f50 <col:52, line:71:5>
|   |-CStyleCastExpr 0x557cc3133e40 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x557cc3133e10 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x557cc3130630 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x557cc3133f30 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x557cc3133f00 <col:2> '<bound member function type>' ->assign 0x557cc3130580
|       `-CXXThisExpr 0x557cc3133ef0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x557cc3130890 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x557cc3130778 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x557cc31307f8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x557cc31e4430 <col:58, line:79:5>
|   |-BinaryOperator 0x557cc31e4378 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x557cc31e4310 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x557cc3132f88
|   | | `-MemberExpr 0x557cc3133f80 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x557cc3133048
|   | |   `-CXXThisExpr 0x557cc3133f70 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x557cc31e4360 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cc31e4340 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x557cc3130778 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x557cc31e4410 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x557cc31e43a8 <col:2> 'void *' lvalue ->_thunk 0x557cc31330c8
|     | `-CXXThisExpr 0x557cc31e4398 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x557cc31e43f8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x557cc31e43d8 <col:11> 'void *' lvalue ParmVar 0x557cc31307f8 'user_data' 'void *'
|-CXXMethodDecl 0x557cc31309e0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x557cc3130950 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x557cc31e45c8 <col:35, line:87:5>
|   |-BinaryOperator 0x557cc31e44f8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x557cc31e4490 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x557cc3132f88
|   | | `-MemberExpr 0x557cc31e4460 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x557cc3133048
|   | |   `-CXXThisExpr 0x557cc31e4450 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x557cc31e44e0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cc31e44c0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x557cc3133680 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x557cc31e45a8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x557cc31e4528 <col:2> 'void *' lvalue ->_thunk 0x557cc31330c8
|     | `-CXXThisExpr 0x557cc31e4518 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x557cc31e4590 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x557cc31e4578 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x557cc31e4558 <col:11> 'Element *' lvalue ParmVar 0x557cc3130950 'element' 'Element *'
|-CXXMethodDecl 0x557cc3130b28 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x557cc3130a98 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x557cc31e4760 <col:29, line:94:5>
|   |-BinaryOperator 0x557cc31e4690 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x557cc31e4628 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x557cc3132f88
|   | | `-MemberExpr 0x557cc31e45f8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x557cc3133048
|   | |   `-CXXThisExpr 0x557cc31e45e8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x557cc31e4678 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cc31e4658 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x557cc3133858 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x557cc31e4740 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x557cc31e46c0 <col:2> 'void *' lvalue ->_thunk 0x557cc31330c8
|     | `-CXXThisExpr 0x557cc31e46b0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x557cc31e4728 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x557cc31e4710 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x557cc31e46f0 <col:11> 'Task *' lvalue ParmVar 0x557cc3130a98 'task' 'Task *'
|-CXXMethodDecl 0x557cc3130c18 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x557cc31e4840 <col:37, line:100:5>
|   `-ReturnStmt 0x557cc31e4830 <line:99:2, col:19>
|     `-BinaryOperator 0x557cc31e4810 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x557cc31e47e0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x557cc31e4790 <col:9> 'Element *const' lvalue ->_owner 0x557cc3133128
|       |   `-CXXThisExpr 0x557cc31e4780 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x557cc31e47f8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x557cc31e47c0 <col:19> 'int' 0
|-CXXMethodDecl 0x557cc3130cd8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x557cc31e4900 <col:35, line:105:5>
|   `-ReturnStmt 0x557cc31e48f0 <line:104:2, col:23>
|     `-BinaryOperator 0x557cc31e48d0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x557cc31e48b8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x557cc31e4868 <col:9> 'const int' lvalue ->_schedpos1 0x557cc3132da8
|       |   `-CXXThisExpr 0x557cc31e4858 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x557cc31e4898 <col:23> 'int' 0
|-CXXMethodDecl 0x557cc3130d98 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x557cc31e4968 <col:51, line:118:5>
|   `-ReturnStmt 0x557cc31e4958 <line:117:2, col:9>
|     `-MemberExpr 0x557cc31e4928 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x557cc3132e08
|       `-CXXThisExpr 0x557cc31e4918 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x557cc3130e58 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x557cc31e4ec0 <col:37, line:136:5>
|   `-IfStmt 0x557cc31e4e98 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x557cc31e4a28 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x557cc31e4a10 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x557cc31e49f0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x557cc31e49c0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x557cc313db08
|     |       `-MemberExpr 0x557cc31e4990 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x557cc3132e08
|     |         `-CXXThisExpr 0x557cc31e4980 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x557cc31e4e08 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x557cc31e4df0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x557cc31e4dc0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x557cc31e4da8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x557cc31e4d70 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x557cc31e4d58 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x557cc31e4d38 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x557cc316c2e0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x557cc31e4cd8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x557cc31e4cc0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x557cc31e4be8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x557cc31e4bd0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x557cc31e4bb0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x557cc316bfa0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x557cc31e4b50 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x557cc31e4a50 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x557cc3132e08
|     |         |     |   `-CXXThisExpr 0x557cc31e4a40 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x557cc31e4b98 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x557cc31e4b80 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x557cc31e4b30 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x557cc31e4b18 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x557cc31e4ab8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x557cc315f600 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x557cc31e4d20 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x557cc31e4d08 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x557cc31e4ca0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x557cc31e4c88 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x557cc31e4c58 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x557cc2fbab50 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x557cc31e4e88 <line:135:6, col:13>
|       `-CXXConstructExpr 0x557cc31e4e58 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x557cc31e4e28 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x557cc3132e08
|           `-CXXThisExpr 0x557cc31e4e18 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x557cc3130f18 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x557cc31e4fa8 <col:35, line:141:5>
|   `-ReturnStmt 0x557cc31e4f98 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x557cc31e4f60 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x557cc31e4f30 <col:9, col:17> '<bound member function type>' ->router 0x557cc31be190
|         `-ImplicitCastExpr 0x557cc31e4f80 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x557cc31e4f18 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x557cc31e4ee8 <col:9> 'Element *const' lvalue ->_owner 0x557cc3133128
|               `-CXXThisExpr 0x557cc31e4ed8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x557cc3130fd8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x557cc31e5028 <col:37, line:146:5>
|   `-ReturnStmt 0x557cc31e5018 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x557cc31e5000 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x557cc31e4fd0 <col:9> 'Element *const' lvalue ->_owner 0x557cc3133128
|         `-CXXThisExpr 0x557cc31e4fc0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x557cc3131098 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x557cc31e50a8 <col:41, line:151:5>
|   `-ReturnStmt 0x557cc31e5098 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x557cc31e5080 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x557cc31e5050 <col:9> 'RouterThread *const' lvalue ->_thread 0x557cc3133188
|         `-CXXThisExpr 0x557cc31e5040 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x557cc3131160 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x557cc3131320 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x557cc3131210 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x557cc3131288 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x557cc3133a68 <col:50> 'bool' false
|-CXXMethodDecl 0x557cc31314a8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x557cc31313e0 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x557cc31315f0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x557cc3131560 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x557cc3131738 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x557cc31316a8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x557cc3131880 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x557cc31317f0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x557cc31319c8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x557cc3131938 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x557cc3131a90 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x557cc31e5210 <col:32, line:223:5>
|   `-ExprWithCleanups 0x557cc31e51f8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x557cc31e51a0 <col:2, col:47> 'void'
|       |-MemberExpr 0x557cc31e50d0 <col:2> '<bound member function type>' ->schedule_at_steady 0x557cc31315f0
|       | `-CXXThisExpr 0x557cc31e50c0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x557cc31e51e0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x557cc31e51c8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x557cc31e5180 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x557cc31e5168 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x557cc31e5138 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x557cc2fbab50 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x557cc3131bd0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x557cc3131b40 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x557cc3131d18 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x557cc3131c88 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc31e5398 <col:56, line:241:5>
|   `-ExprWithCleanups 0x557cc31e5380 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x557cc31e5328 <col:2, col:40> 'void'
|       |-MemberExpr 0x557cc31e5238 <col:2> '<bound member function type>' ->schedule_after 0x557cc3131bd0
|       | `-CXXThisExpr 0x557cc31e5228 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x557cc31e5368 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x557cc31e5350 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x557cc31e52e8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x557cc31e52b8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x557cc31e5278 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc3131c88 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x557cc31e52d0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x557cc31e5298 <col:38> 'int' 0
|-CXXMethodDecl 0x557cc3131e60 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x557cc3131dd0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc31e5608 <col:58, line:249:5>
|   `-ExprWithCleanups 0x557cc31e55f0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x557cc31e5598 <col:2, col:49> 'void'
|       |-MemberExpr 0x557cc31e53c0 <col:2> '<bound member function type>' ->schedule_after 0x557cc3131bd0
|       | `-CXXThisExpr 0x557cc31e53b0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x557cc31e55d8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x557cc31e55c0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x557cc31e5540 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x557cc31e5528 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x557cc31e5498 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x557cc313f8f8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x557cc31e5580 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x557cc31e5568 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x557cc31e5478 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc3131dd0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc3131fa8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x557cc3131f18 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x557cc31e57e8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x557cc31e57d0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x557cc31e5778 <col:2, col:38> 'void'
|       |-MemberExpr 0x557cc31e5630 <col:2> '<bound member function type>' ->schedule_at_steady 0x557cc31315f0
|       | `-CXXThisExpr 0x557cc31e5620 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x557cc31e57b8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x557cc31e57a0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x557cc31e5740 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x557cc31e5728 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x557cc31e5708 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x557cc316bfa0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x557cc31e56d8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x557cc31e56c0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x557cc31e5670 <col:21> 'Timestamp' lvalue ->_expiry_s 0x557cc3132e08
|             |     `-CXXThisExpr 0x557cc31e5660 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x557cc31e56a0 <col:33> 'const Timestamp' lvalue ParmVar 0x557cc3131f18 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x557cc31320f0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x557cc3132060 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc31e5ac0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x557cc31e5aa8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x557cc31e5a50 <col:2, col:79> 'void'
|       |-MemberExpr 0x557cc31e5810 <col:2> '<bound member function type>' ->schedule_at_steady 0x557cc31315f0
|       | `-CXXThisExpr 0x557cc31e5800 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x557cc31e5a90 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x557cc31e5a78 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x557cc31e5a10 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x557cc31e5948 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x557cc31e5930 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x557cc31e58c0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x557cc31e5890 <col:31, col:41> '<bound member function type>' .sec 0x557cc2fbc648
|             | |     `-ImplicitCastExpr 0x557cc31e58e0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x557cc31e5860 <col:31> 'Timestamp' lvalue ->_expiry_s 0x557cc3132e08
|             | |         `-CXXThisExpr 0x557cc31e5850 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x557cc31e5918 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x557cc31e58f8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc3132060 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x557cc31e59d8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x557cc31e59a8 <col:60, col:70> '<bound member function type>' .subsec 0x557cc2fbcd40
|                 `-ImplicitCastExpr 0x557cc31e59f8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x557cc31e5978 <col:60> 'Timestamp' lvalue ->_expiry_s 0x557cc3132e08
|                     `-CXXThisExpr 0x557cc31e5968 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x557cc3132238 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x557cc31321a8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x557cc31e5df8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x557cc31e5de0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x557cc31e5d88 <col:2, col:65> 'void'
|       |-MemberExpr 0x557cc31e5ae8 <col:2> '<bound member function type>' ->schedule_at_steady 0x557cc31315f0
|       | `-CXXThisExpr 0x557cc31e5ad8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x557cc31e5dc8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x557cc31e5db0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x557cc31e5d50 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x557cc31e5d38 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x557cc31e5d18 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x557cc316bfa0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x557cc31e5cb8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x557cc31e5ca0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x557cc31e5b28 <col:21> 'Timestamp' lvalue ->_expiry_s 0x557cc3132e08
|             |     `-CXXThisExpr 0x557cc31e5b18 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x557cc31e5d00 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x557cc31e5ce8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x557cc31e5c48 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x557cc31e5c30 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x557cc31e5c00 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x557cc313f8f8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x557cc31e5c88 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x557cc31e5c70 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x557cc31e5be0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x557cc31321a8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x557cc3132300 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x557cc31323c0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x557cc31e62c0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x557cc31e5e50 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x557cc31e5e20 <col:2> '<bound member function type>' ->unschedule 0x557cc3132300
|   |   `-CXXThisExpr 0x557cc31e5e10 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x557cc31e62a8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x557cc31e6270 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x557cc31e6258 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557cc31e5f08 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x557cc2e53be8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x557cc31e5e80 <col:2> 'Timestamp' lvalue ->_expiry_s 0x557cc3132e08
|       | `-CXXThisExpr 0x557cc31e5e70 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x557cc31e5ef0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x557cc31e5ec0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x557cc3132480 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x557cc31e6618 <col:42, line:310:5>
|   |-IfStmt 0x557cc31e6460 <line:306:2, line:307:23>
|   | |-CallExpr 0x557cc31e6390 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x557cc31e6378 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x557cc31e6318 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x557cc315da70 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x557cc31e6450 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x557cc31e6438 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x557cc31e6408 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x557cc31e63f0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x557cc31e63c0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x557cc31e6608 <line:309:2, col:33>
|     `-ExprWithCleanups 0x557cc31e65f0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x557cc31e65c0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x557cc31e65a8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x557cc31e6568 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x557cc31e6550 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x557cc31e6520 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x557cc313fc10 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x557cc31e6590 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x557cc31e6500 <col:30> 'int' 500
|-CXXMethodDecl 0x557cc31325c0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x557cc3132530 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557cc3132668 <col:69> "" ""
|-CXXMethodDecl 0x557cc3132778 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x557cc31326e8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557cc3132820 <col:70> "" ""
|-CXXMethodDecl 0x557cc3132930 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x557cc31328a0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557cc31329d8 <col:71> "" ""
|-CXXMethodDecl 0x557cc3132ae8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x557cc3132a58 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x557cc3132b90 <col:72> "" ""
|-EnumDecl 0x557cc3132c00 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x557cc3132d00 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x557cc3132d50 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc3132ce0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x557cc3132cc0 <col:25> 'int' 1
|-AccessSpecDecl 0x557cc3132d68 <line:339:3, col:10> col:3 private
|-FieldDecl 0x557cc3132da8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x557cc3132e08 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x557cc3132e58 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x557cc3132f88 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x557cc3133a78 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x557cc3133048 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x557cc31330c8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x557cc3133128 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x557cc3133188 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x557cc31332d8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x557cc31331e8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x557cc31334a8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x557cc3133390 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x557cc3133410 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x557cc3133680 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x557cc3133568 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x557cc31335e8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x557cc3133858 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x557cc3133740 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x557cc31337c0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x557cc3133a28 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc2f7fcb0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x557cc2f7fdc8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x557cc2f7fe68 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x557cc2f7fec8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x557cc2f7ff28 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x557cc2f7ffd8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc2f802e0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x557cc2f803f8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x557cc2f804a0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x557cc2f80508 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x557cc2f80598 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x557cc2f86630 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x557cc2f86a68 <col:12>
|-CXXConstructorDecl 0x557cc2f86738 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x557cc2f86848 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x557cc2f804a0 'data' 'const char *'
| | `-ImplicitCastExpr 0x557cc2f88ff0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x557cc2f88fc0 <col:12> 'const char *const' lvalue .data 0x557cc2f804a0
| |     `-DeclRefExpr 0x557cc2f88fa0 <col:12> 'const String::rep_t' lvalue ParmVar 0x557cc2f86848 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x557cc2f80508 'length' 'int'
| | `-ImplicitCastExpr 0x557cc2f89080 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x557cc2f89050 <col:12> 'const int' lvalue .length 0x557cc2f80508
| |     `-DeclRefExpr 0x557cc2f89030 <col:12> 'const String::rep_t' lvalue ParmVar 0x557cc2f86848 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x557cc2f80598 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x557cc2f89110 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x557cc2f890e0 <col:12> 'String::memo_t *const' lvalue .memo 0x557cc2f80598
| |     `-DeclRefExpr 0x557cc2f890c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x557cc2f86848 '' 'const String::rep_t &'
| `-CompoundStmt 0x557cc2f89168 <col:12>
|-CXXConstructorDecl 0x557cc2f868e8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x557cc2f868e8
| `-ParmVarDecl 0x557cc2f869f8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x557cc2f8bf50 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x557cc2f97968 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x557cc2f97a78 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x557cc2f97f90 <col:12>
|   |-BinaryOperator 0x557cc2f97da8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x557cc2f97d60 <col:12> 'const char *' lvalue ->data 0x557cc2f804a0
|   | | `-CXXThisExpr 0x557cc2f97d50 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x557cc2f97d90 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x557cc2f97d20 <col:12> 'const char *const' lvalue .data 0x557cc2f804a0
|   |     `-DeclRefExpr 0x557cc2f97d00 <col:12> 'const String::rep_t' lvalue ParmVar 0x557cc2f97a78 '' 'const String::rep_t &'
|   |-BinaryOperator 0x557cc2f97e70 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x557cc2f97e28 <col:12> 'int' lvalue ->length 0x557cc2f80508
|   | | `-CXXThisExpr 0x557cc2f97e18 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x557cc2f97e58 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x557cc2f97de8 <col:12> 'const int' lvalue .length 0x557cc2f80508
|   |     `-DeclRefExpr 0x557cc2f97dc8 <col:12> 'const String::rep_t' lvalue ParmVar 0x557cc2f97a78 '' 'const String::rep_t &'
|   |-BinaryOperator 0x557cc2f97f38 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x557cc2f97ef0 <col:12> 'String::memo_t *' lvalue ->memo 0x557cc2f80598
|   | | `-CXXThisExpr 0x557cc2f97ee0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x557cc2f97f20 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x557cc2f97eb0 <col:12> 'String::memo_t *const' lvalue .memo 0x557cc2f80598
|   |     `-DeclRefExpr 0x557cc2f97e90 <col:12> 'const String::rep_t' lvalue ParmVar 0x557cc2f97a78 '' 'const String::rep_t &'
|   `-ReturnStmt 0x557cc2f97f80 <col:12>
|     `-UnaryOperator 0x557cc2f97f68 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x557cc2f97f58 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x557cc2f97ae8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x557cc2f97ae8
  `-ParmVarDecl 0x557cc2f97bf8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x557cc2f77220 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x557cc2f77338 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x557cc2f773c8 <col:16, col:22> col:16 public
|-TypedefDecl 0x557cc2f77408 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x557cc2c48fd0 'const char *'
|   `-QualType 0x557cc2c48521 'const char' const
|     `-BuiltinType 0x557cc2c48520 'char'
|-TypedefDecl 0x557cc2f77490 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x557cc2f77460 'String::const_iterator' sugar
|   |-Typedef 0x557cc2f77408 'const_iterator'
|   `-PointerType 0x557cc2c48fd0 'const char *'
|     `-QualType 0x557cc2c48521 'const char' const
|       `-BuiltinType 0x557cc2c48520 'char'
|-TypedefDecl 0x557cc2f77600 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x557cc2f77570 'int (String::*)() const'
|   |-RecordType 0x557cc2f772b0 'String'
|   | `-CXXRecord 0x557cc2f77220 'String'
|   `-ParenType 0x557cc2f77510 'int () const' sugar
|     `-FunctionProtoType 0x557cc2f4c0b0 'int () const' const cdecl
|       `-BuiltinType 0x557cc2c48580 'int'
|-TypedefDecl 0x557cc2f77668 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x557cc2d9fc80 'int64_t' sugar
|   |-Typedef 0x557cc2cb1390 'int64_t'
|   `-TypedefType 0x557cc2c8a630 '__int64_t' sugar
|     |-Typedef 0x557cc2c8a208 '__int64_t'
|     `-BuiltinType 0x557cc2c485a0 'long'
|-TypedefDecl 0x557cc2f776d0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x557cc2d9fba0 'uint64_t' sugar
|   |-Typedef 0x557cc2cb1530 'uint64_t'
|   `-TypedefType 0x557cc2c8a6c0 '__uint64_t' sugar
|     |-Typedef 0x557cc2c8a278 '__uint64_t'
|     `-BuiltinType 0x557cc2c48640 'unsigned long'
|-TypedefDecl 0x557cc2f77760 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x557cc2f77730 'String::intmax_t' sugar
|   |-Typedef 0x557cc2f77668 'intmax_t'
|   `-TypedefType 0x557cc2d9fc80 'int64_t' sugar
|     |-Typedef 0x557cc2cb1390 'int64_t'
|     `-TypedefType 0x557cc2c8a630 '__int64_t' sugar
|       |-Typedef 0x557cc2c8a208 '__int64_t'
|       `-BuiltinType 0x557cc2c485a0 'long'
|-TypedefDecl 0x557cc2f777f0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x557cc2f777c0 'String::uintmax_t' sugar
|   |-Typedef 0x557cc2f776d0 'uintmax_t'
|   `-TypedefType 0x557cc2d9fba0 'uint64_t' sugar
|     |-Typedef 0x557cc2cb1530 'uint64_t'
|     `-TypedefType 0x557cc2c8a6c0 '__uint64_t' sugar
|       |-Typedef 0x557cc2c8a278 '__uint64_t'
|       `-BuiltinType 0x557cc2c48640 'unsigned long'
|-CXXConstructorDecl 0x557cc2f778b0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x557cc2f77a58 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x557cc2f77998 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x557cc2f77c08 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x557cc2f77b48 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x557cc2f77d60 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x557cc2f77cd0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x557cc2f77f78 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x557cc2f77e28 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x557cc2f77ea8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x557cc2f78198 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x557cc2f78048 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x557cc2f780c8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x557cc2f783b8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x557cc2f78268 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x557cc2f782e8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x557cc2f785d8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x557cc2f78488 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x557cc2f78508 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x557cc2f78768 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x557cc2f786a0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x557cc2f788e8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x557cc2f78828 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x557cc2f78a78 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x557cc2f789b0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x557cc2f78bd0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x557cc2f78b40 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x557cc2f78d28 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x557cc2f78c98 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x557cc2f78e80 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x557cc2f78df0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x557cc2f79008 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x557cc2f78f48 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x557cc2f79198 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x557cc2f790d0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x557cc2f79328 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x557cc2f79260 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x557cc2f794b8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x557cc2f793f0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x557cc2f795b0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x557cc2f796d8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x557cc2f79858 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x557cc2f79790 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x557cc2f799a8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x557cc2f79918 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x557cc2f79a60 <col:63> "" ""
|-CXXMethodDecl 0x557cc2f79ba8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x557cc2f79ae8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x557cc2f79db8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x557cc2f79c68 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x557cc2f79ce8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x557cc2f79fd8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x557cc2f79e80 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x557cc2f79f00 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x557cc2f7a2b8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x557cc2f7a098 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x557cc2f7a118 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x557cc2f86100 <col:55> 'int' 10
| `-ParmVarDecl 0x557cc2f7a190 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x557cc2f86120 <col:76> 'bool' true
|-CXXMethodDecl 0x557cc2f7a598 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x557cc2f7a380 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x557cc2f7a400 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x557cc2f86130 <col:56> 'int' 10
| `-ParmVarDecl 0x557cc2f7a478 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x557cc2f86150 <col:77> 'bool' true
|-CXXMethodDecl 0x557cc2f7a6a0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x557cc2f7a768 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x557cc2f7a830 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x557cc2f7a8d0 <col:20>
| `-OptimizeNoneAttr 0x557cc2f7a928 <col:30>
|-CXXConversionDecl 0x557cc2f7aa18 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x557cc2f7aae8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x557cc2f7aba8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x557cc2f7ac98 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x557cc2f7ad58 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x557cc2f7aed8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x557cc2f7ae10 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x557cc2f7b028 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x557cc2f7af98 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x557cc2f7b118 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x557cc2f7b1d8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x557cc2f7b428 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x557cc2f7b290 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x557cc2f7b310 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x557cc2f7b688 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x557cc2f7b4f0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x557cc2f7b570 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x557cc2f7b758 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x557cc2f7b968 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x557cc2f7b810 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x557cc2f7b890 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x557cc2f7bb88 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x557cc2f7ba30 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x557cc2f7bab0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x557cc2f7bd18 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x557cc2f7bc50 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x557cc2f7be08 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x557cc2f7bf78 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x557cc2f7beb8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x557cc2f7c188 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x557cc2f7c038 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x557cc2f7c0b8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x557cc2f7c3a0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x557cc2f7c248 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x557cc2f7c2c0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x557cc2f7c530 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x557cc2f7c460 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x557cc2f7c750 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x557cc2f7c5f0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x557cc2f7c670 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x557cc2f7c8a0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x557cc2f7c810 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x557cc2f7ca78 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x557cc2f7c960 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x557cc2f7c9e0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x557cc2f7cbc8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x557cc2f7cb38 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x557cc2f7cde0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x557cc2f7cc80 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x557cc2f7cd00 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x557cc2f86160 <col:39> 'int' 0
|-CXXMethodDecl 0x557cc2f7d000 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x557cc2f7cea0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x557cc2f7cf20 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x557cc2f86180 <col:48> 'int' 0
|-CXXMethodDecl 0x557cc2f7d1e0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x557cc2f7d0c0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x557cc2f7d140 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x557cc2f861a0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x557cc2f7d2b0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x557cc2f7d370 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x557cc2f7d430 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x557cc2f7d4f0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x557cc2f7d5b0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x557cc2f7d758 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x557cc2f7d660 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x557cc2f7d8d8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x557cc2f7d810 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x557cc2f7dab0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x557cc2f7d998 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x557cc2f7dc28 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x557cc2f7db68 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x557cc2f7dd70 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x557cc2f7dce0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x557cc2f7dec0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x557cc2f7de30 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x557cc2f7e098 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x557cc2f7df80 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x557cc2f7e000 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x557cc2f7e278 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x557cc2f7e160 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x557cc2f7e1e0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x557cc2f7e3c8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x557cc2f7e338 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x557cc2f7e5d8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x557cc2f7e488 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x557cc2f7e508 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x557cc2f7e738 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x557cc2f7e6a0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x557cc2f7e890 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x557cc2f7e7f8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x557cc2f7e938 <col:57> "" ""
|-CXXMethodDecl 0x557cc2f7ea48 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x557cc2f7e9b8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x557cc2f7eb98 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x557cc2f7eb08 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x557cc2f7ed18 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x557cc2f7ec50 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x557cc2f7ede0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x557cc2f7eea0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x557cc2f7ef60 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x557cc2f7f000 <col:49> "" ""
|-CXXMethodDecl 0x557cc2f7f090 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x557cc2f7f150 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x557cc2f7f240 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x557cc2f7f308 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x557cc2f7f3c8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x557cc2f7f488 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x557cc2f7f580 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x557cc2f7f648 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x557cc2f7f710 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x557cc2f7f8e8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x557cc2f7f7c8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x557cc2f7f848 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x557cc2f7fb10 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x557cc2f7f9b0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x557cc2f7fa30 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x557cc2f7fc20 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x557cc2f7fc88 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x557cc2f7fcb0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x557cc2f7fdc8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x557cc2f7fe68 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x557cc2f7fec8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x557cc2f7ff28 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x557cc2f7ffd8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x557cc2f80040 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x557cc2f80278 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x557cc2f802c8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc2f80258 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x557cc2f80168 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x557cc2f80110 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x557cc2f80150 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x557cc2f80130 <col:32> 'int' 8
|-CXXRecordDecl 0x557cc2f802e0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x557cc2f803f8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x557cc2f804a0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x557cc2f80508 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x557cc2f80598 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x557cc2f86630 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x557cc2f86a68 <col:12>
| |-CXXConstructorDecl 0x557cc2f86738 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x557cc2f86848 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x557cc2f804a0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x557cc2f88ff0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x557cc2f88fc0 <col:12> 'const char *const' lvalue .data 0x557cc2f804a0
| | |     `-DeclRefExpr 0x557cc2f88fa0 <col:12> 'const String::rep_t' lvalue ParmVar 0x557cc2f86848 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x557cc2f80508 'length' 'int'
| | | `-ImplicitCastExpr 0x557cc2f89080 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x557cc2f89050 <col:12> 'const int' lvalue .length 0x557cc2f80508
| | |     `-DeclRefExpr 0x557cc2f89030 <col:12> 'const String::rep_t' lvalue ParmVar 0x557cc2f86848 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x557cc2f80598 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x557cc2f89110 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x557cc2f890e0 <col:12> 'String::memo_t *const' lvalue .memo 0x557cc2f80598
| | |     `-DeclRefExpr 0x557cc2f890c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x557cc2f86848 '' 'const String::rep_t &'
| | `-CompoundStmt 0x557cc2f89168 <col:12>
| |-CXXConstructorDecl 0x557cc2f868e8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x557cc2f868e8
| | `-ParmVarDecl 0x557cc2f869f8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x557cc2f8bf50 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x557cc2f97968 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x557cc2f97a78 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x557cc2f97f90 <col:12>
| |   |-BinaryOperator 0x557cc2f97da8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x557cc2f97d60 <col:12> 'const char *' lvalue ->data 0x557cc2f804a0
| |   | | `-CXXThisExpr 0x557cc2f97d50 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x557cc2f97d90 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x557cc2f97d20 <col:12> 'const char *const' lvalue .data 0x557cc2f804a0
| |   |     `-DeclRefExpr 0x557cc2f97d00 <col:12> 'const String::rep_t' lvalue ParmVar 0x557cc2f97a78 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x557cc2f97e70 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x557cc2f97e28 <col:12> 'int' lvalue ->length 0x557cc2f80508
| |   | | `-CXXThisExpr 0x557cc2f97e18 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x557cc2f97e58 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x557cc2f97de8 <col:12> 'const int' lvalue .length 0x557cc2f80508
| |   |     `-DeclRefExpr 0x557cc2f97dc8 <col:12> 'const String::rep_t' lvalue ParmVar 0x557cc2f97a78 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x557cc2f97f38 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x557cc2f97ef0 <col:12> 'String::memo_t *' lvalue ->memo 0x557cc2f80598
| |   | | `-CXXThisExpr 0x557cc2f97ee0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x557cc2f97f20 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x557cc2f97eb0 <col:12> 'String::memo_t *const' lvalue .memo 0x557cc2f80598
| |   |     `-DeclRefExpr 0x557cc2f97e90 <col:12> 'const String::rep_t' lvalue ParmVar 0x557cc2f97a78 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x557cc2f97f80 <col:12>
| |     `-UnaryOperator 0x557cc2f97f68 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x557cc2f97f58 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x557cc2f97ae8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x557cc2f97ae8
|   `-ParmVarDecl 0x557cc2f97bf8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x557cc2f80610 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x557cc2f80858 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x557cc2f80678 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x557cc2f806f8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x557cc2f80770 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x557cc2f865f0 <col:79, line:261:5>
|   |-BinaryOperator 0x557cc2f86268 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x557cc2f86200 <col:2, col:5> 'const char *' lvalue .data 0x557cc2f804a0
|   | | `-MemberExpr 0x557cc2f861d0 <col:2> 'String::rep_t' lvalue ->_r 0x557cc2f80610
|   | |   `-CXXThisExpr 0x557cc2f861c0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x557cc2f86250 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cc2f86230 <col:12> 'const char *' lvalue ParmVar 0x557cc2f80678 'data' 'const char *'
|   |-BinaryOperator 0x557cc2f86330 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x557cc2f862c8 <col:2, col:5> 'int' lvalue .length 0x557cc2f80508
|   | | `-MemberExpr 0x557cc2f86298 <col:2> 'String::rep_t' lvalue ->_r 0x557cc2f80610
|   | |   `-CXXThisExpr 0x557cc2f86288 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x557cc2f86318 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cc2f862f8 <col:14> 'int' lvalue ParmVar 0x557cc2f806f8 'length' 'int'
|   `-IfStmt 0x557cc2f865d8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x557cc2f86450 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x557cc2f86438 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x557cc2f86418 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x557cc2f863f8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x557cc2f86390 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x557cc2f80598
|     |       | `-MemberExpr 0x557cc2f86360 <col:7> 'String::rep_t' lvalue ->_r 0x557cc2f80610
|     |       |   `-CXXThisExpr 0x557cc2f86350 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x557cc2f863e0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x557cc2f863c0 <col:17> 'String::memo_t *' lvalue ParmVar 0x557cc2f80770 'memo' 'String::memo_t *'
|     `-CallExpr 0x557cc2f865b0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x557cc2f86598 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x557cc2f864a0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x557cc2f6f288 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x557cc2f86508 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x557cc2f7fe68
|         `-ImplicitCastExpr 0x557cc2f864f0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x557cc2f864d0 <col:27> 'String::memo_t *' lvalue ParmVar 0x557cc2f80770 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x557cc2f80b08 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x557cc2f80928 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x557cc2f809a8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x557cc2f80a20 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x557cc2f80610 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x557cc2f86a78 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x557cc2f86c08 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x557cc2f86b70 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x557cc2f86ae0 <col:2> '<bound member function type>' ->assign_memo 0x557cc2f80858
|     | `-ImplicitCastExpr 0x557cc2f86ba8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x557cc2f86ad0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x557cc2f86bc0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x557cc2f86b10 <col:14> 'const char *' lvalue ParmVar 0x557cc2f80928 'data' 'const char *'
|     |-ImplicitCastExpr 0x557cc2f86bd8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x557cc2f86b30 <col:20> 'int' lvalue ParmVar 0x557cc2f809a8 'length' 'int'
|     `-ImplicitCastExpr 0x557cc2f86bf0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x557cc2f86b50 <col:28> 'String::memo_t *' lvalue ParmVar 0x557cc2f80a20 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x557cc2f80c98 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x557cc2f80bd8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x557cc2f86e60 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x557cc2f86de0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x557cc2f86c30 <col:2> '<bound member function type>' ->assign_memo 0x557cc2f80858
|     | `-CXXThisExpr 0x557cc2f86c20 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x557cc2f86e18 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x557cc2f86cb0 <col:14, col:19> 'const char *' lvalue .data 0x557cc2f804a0
|     |   `-MemberExpr 0x557cc2f86c80 <col:14, col:16> 'String::rep_t' lvalue ._r 0x557cc2f80610
|     |     `-DeclRefExpr 0x557cc2f86c60 <col:14> 'const String' lvalue ParmVar 0x557cc2f80bd8 'x' 'const String &'
|     |-ImplicitCastExpr 0x557cc2f86e30 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x557cc2f86d30 <col:25, col:30> 'int' lvalue .length 0x557cc2f80508
|     |   `-MemberExpr 0x557cc2f86d00 <col:25, col:27> 'String::rep_t' lvalue ._r 0x557cc2f80610
|     |     `-DeclRefExpr 0x557cc2f86ce0 <col:25> 'const String' lvalue ParmVar 0x557cc2f80bd8 'x' 'const String &'
|     `-ImplicitCastExpr 0x557cc2f86e48 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x557cc2f86db0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x557cc2f80598
|         `-MemberExpr 0x557cc2f86d80 <col:38, col:40> 'String::rep_t' lvalue ._r 0x557cc2f80610
|           `-DeclRefExpr 0x557cc2f86d60 <col:38> 'const String' lvalue ParmVar 0x557cc2f80bd8 'x' 'const String &'
|-CXXMethodDecl 0x557cc2f80d60 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x557cc2f87820 <col:31, line:278:5>
|   `-IfStmt 0x557cc2f87808 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x557cc2f86f00 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x557cc2f86ee8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x557cc2f86eb8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x557cc2f80598
|     |     `-MemberExpr 0x557cc2f86e88 <col:6> 'String::rep_t' lvalue ->_r 0x557cc2f80610
|     |       `-CXXThisExpr 0x557cc2f86e78 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x557cc2f877e0 <col:15, line:277:2>
|       |-ParenExpr 0x557cc2f873b0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x557cc2f87380 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x557cc2f87010 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x557cc2f86ff8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x557cc2f86fe0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x557cc2f86fa0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x557cc2f7fe68
|       |   |       `-ImplicitCastExpr 0x557cc2f86f88 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x557cc2f86f58 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x557cc2f80598
|       |   |           `-MemberExpr 0x557cc2f86f28 <col:27> 'String::rep_t' lvalue ->_r 0x557cc2f80610
|       |   |             `-CXXThisExpr 0x557cc2f86f18 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x557cc2f87070 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x557cc2f87050 <col:54> 'int' 0
|       |   `-CallExpr 0x557cc2f872e0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x557cc2f872c8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x557cc2f87248 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x557cc2ce6490 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x557cc2f87320 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x557cc2f87158 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x557cc2f87338 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x557cc2f87188 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x557cc2f87350 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x557cc2f871c0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x557cc2f87368 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x557cc2f87230 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x557cc2f87218 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x557cc2f871e0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x557cc2f87700 <line:274:6, line:275:22>
|       | |-CallExpr 0x557cc2f875c0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x557cc2f875a8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x557cc2f87520 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x557cc2f706d0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x557cc2f874f0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x557cc2f7fe68
|       | |   `-ImplicitCastExpr 0x557cc2f874d8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x557cc2f874a8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x557cc2f80598
|       | |       `-MemberExpr 0x557cc2f87478 <col:40> 'String::rep_t' lvalue ->_r 0x557cc2f80610
|       | |         `-CXXThisExpr 0x557cc2f87468 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x557cc2f876c0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x557cc2f876a8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x557cc2f875e8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x557cc2f85540 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x557cc2f876e8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x557cc2f87648 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x557cc2f80598
|       |       `-MemberExpr 0x557cc2f87618 <col:15> 'String::rep_t' lvalue ->_r 0x557cc2f80610
|       |         `-CXXThisExpr 0x557cc2f87608 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x557cc2f877c0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x557cc2f87758 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x557cc2f80598
|         | `-MemberExpr 0x557cc2f87728 <col:6> 'String::rep_t' lvalue ->_r 0x557cc2f80610
|         |   `-CXXThisExpr 0x557cc2f87718 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x557cc2f877a8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x557cc2f87788 <col:16> 'int' 0
|-CXXMethodDecl 0x557cc2f80ff8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x557cc2f80e18 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x557cc2f80e98 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x557cc2f80f10 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x557cc2f810d0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x557cc2f81320 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x557cc2f81188 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x557cc2f81208 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x557cc2f81280 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x557cc2f81508 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x557cc2f813f0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x557cc2f81470 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x557cc2f81608 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x557cc2f878f8 <col:41, line:286:5>
|   `-ReturnStmt 0x557cc2f878e8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x557cc2f878b8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x557cc2f87880 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x557cc2f87868 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x557cc2f87848 <col:46> 'int' 1
|-CXXMethodDecl 0x557cc2f818a8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x557cc2f816c0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x557cc2f81740 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x557cc2f817c0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x557cc2f85540 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x557cc2f81970 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x557cc2f85610 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x557cc2f857e0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x557cc2f856c8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x557cc2f85748 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x557cc2f858a0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x557cc2f85968 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x557cc2f85a68 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x557cc2f85ae0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x557cc2f85b58 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x557cc2f85bc0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x557cc2f85cc0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x557cc2f85d10 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x557cc2f85ca0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x557cc2f85c80 <col:22> 'int' 14
|-CXXMethodDecl 0x557cc2f85f28 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x557cc2f85d40 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x557cc2f85dc0 <col:38> col:41 'int'
| `-ParmVarDecl 0x557cc2f85e40 <col:43> col:46 'int'
|-FriendDecl 0x557cc2f86030 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x557cc2f860c0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x557cc31eb3a0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x557cc32c0b38 <line:167:18>
|-CXXRecordDecl 0x557cc32c0bf8 prev 0x557cc31eb3a0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x557cc32c0d08 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
