
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e4faed8 prev 0x55b05e4f2678 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b05e4fafd0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55b05e4fb060 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55b05e4fb0d8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55b05e4fb198 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55b05e4fb260 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55b05e4fb3d8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55b05e4fb310 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55b05e4fb480 <col:24>
| `-OptimizeNoneAttr 0x55b05e4fb4d8 <col:34>
|-CXXMethodDecl 0x55b05e4fb520 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55b05e4fb7d8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55b05e4fb5d0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55b05e4fb648 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55b05e4fb6c8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55b05e4fb890 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55b05e4fb8c8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55b05e4fb930 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55b05e4fb9b8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55b05e4fbcd8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55b05e4fba70 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55b05e4fbae8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55b05e4fbb60 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55b05e4fbbe0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55b05e4fbdf0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55b05e503768 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55b05e503768
| `-ParmVarDecl 0x55b05e503878 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55b05e503918 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55b05e503918
| `-ParmVarDecl 0x55b05e503a28 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55b05e5e5318 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e4edef0 prev 0x55b05e4edc70 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b05e4edfe8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55b05e4ee078 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55b05e4ee0d8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55b05e4ee1c8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55b05e4ee2c8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55b05e4ee498 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55b05e4ee348 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55b05e4ee3c0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55b05e4ee628 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55b05e4ee560 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55b05e4ee6d0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55b05e4ee808 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55b05e4ee740 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55b05e4ee9a8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55b05e4ee8e8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55b05e4eeb48 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55b05e4eea88 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55b05e4eebf0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55b05e4eecf0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55b05e4eedd0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4eecd0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55b05e4eecb0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55b05e4eed80 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55b05e4eede8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e4eed60 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55b05e4eed40 <col:44> 'int' 2
|-CXXMethodDecl 0x55b05e4eef30 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55b05e4eee18 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55b05e4eee98 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55b05e4ef088 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55b05e4eeff8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55b05e4ef2c8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55b05e4ef148 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55b05e4ef1c0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55b05e4ef378 <col:20>
| `-OptimizeNoneAttr 0x55b05e4ef3d0 <col:30>
|-CXXMethodDecl 0x55b05e4ef4d8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55b05e4ef410 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55b05e4ef580 <col:20>
| `-OptimizeNoneAttr 0x55b05e4ef5d8 <col:30>
|-CXXMethodDecl 0x55b05e4ef628 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55b05e4ef6f0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55b05e4ef808 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55b05e4ef890 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55b05e4ef918 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55b05e4ef9a0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55b05e4efa28 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55b05e4efab8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55b05e4efb78 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55b05e4efc00 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55b05e4efc88 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55b05e4efd10 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55b05e4efd98 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55b05e4efe20 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55b05e4efeb0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55b05e4eff70 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55b05e4f0000 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55b05e4f0150 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55b05e4f00b8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55b05e4f02e0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55b05e4f0210 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55b05e4f0590 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55b05e4f0398 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55b05e4f0418 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55b05e4f0498 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55b05e4f0648 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55b05e4f0750 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b05e4f09e0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4f0730 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55b05e4f0710 <col:33> 'int' 0
| |-EnumConstantDecl 0x55b05e4f07e0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b05e4f09f8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4f07c0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55b05e4f07a0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55b05e4f0870 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b05e4f0a10 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4f0850 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55b05e4f0830 <col:38> 'int' 90
| |-EnumConstantDecl 0x55b05e4f0900 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b05e4f0a28 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4f08e0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55b05e4f08c0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55b05e4f0990 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55b05e4f0a40 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e4f0970 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55b05e4f0950 <col:32> 'int' 2000
|-CXXMethodDecl 0x55b05e4f0a80 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55b05e4f0ec0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b05e4f0d30 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55b05e4f0da8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b05e4f0f90 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55b05e4f1110 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55b05e4f1040 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b05e4f1318 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b05e4f11c8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55b05e4f1240 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b05e4f1418 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55b05e4f14b8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55b05e4f1580 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b05e4f1610 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55b05e4f1840 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4f15f0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55b05e4f15d0 <col:36> 'int' EnumConstant 0x55b05e4f1580 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b05e4f1660 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b05e4f16b0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b05e4f1700 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b05e4f1750 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b05e4f17a0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55b05e4f17f0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55b05e4f1928 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55b05e4f1868 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55b05e4f19f0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55b05e4f1ab0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55b05e4f1b70 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55b05e4f1c30 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55b05e4f1d48 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55b05e4f1e10 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55b05e4f1f90 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55b05e4f1ec0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55b05e4f20b8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55b05e4f22b8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55b05e4f2168 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55b05e4f21e8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55b05e4ffc08 <col:54, line:127:5>
|   |-ParenExpr 0x55b05e4ffab8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55b05e4ffa88 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4ff778 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55b05e4ff750 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55b05e4ff738 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55b05e4ff720 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55b05e4ff6f0 <col:31> 'Router *' lvalue ->_router 0x55b05e4fd5d0
|   |   |         `-CXXThisExpr 0x55b05e4ff6e0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55b05e4ff7d8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4ff7b8 <col:48> 'int' 0
|   |   `-CallExpr 0x55b05e4ff9e8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4ff9d0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4ff9b0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4ffa28 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4ff848 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55b05e4ffa40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4ff868 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55b05e4ffa58 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4ff8a0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55b05e4ffa70 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4ff998 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4ff980 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4ff938 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55b05e4ffb50 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55b05e4ffae8 <col:9> 'Router *' lvalue ->_router 0x55b05e4fd5d0
|   | | `-CXXThisExpr 0x55b05e4ffad8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55b05e4ffb38 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b05e4ffb18 <col:19> 'Router *' lvalue ParmVar 0x55b05e4f2168 'r' 'Router *'
|   `-BinaryOperator 0x55b05e4ffbe8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55b05e4ffb80 <col:9> 'int' lvalue ->_eindex 0x55b05e4fd638
|     | `-CXXThisExpr 0x55b05e4ffb70 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55b05e4ffbd0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55b05e4ffbb0 <col:19> 'int' lvalue ParmVar 0x55b05e4f21e8 'eindex' 'int'
|-CXXMethodDecl 0x55b05e4f2440 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55b05e4f2378 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55b05e4f2510 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55b05e4f25d8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55b05e4f2678 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55b05e4f28c8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55b05e4f2740 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55b05e4f27c0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55b05e4f2978 <col:20>
| `-OptimizeNoneAttr 0x55b05e4f29d0 <col:30>
|-CXXMethodDecl 0x55b05e4f2ad8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55b05e4f2a10 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55b05e4f2b80 <col:20>
| `-OptimizeNoneAttr 0x55b05e4f2bd8 <col:30>
|-CXXMethodDecl 0x55b05e4f2ca8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55b05e4f2c18 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55b05e4f2d50 <col:20>
| `-OptimizeNoneAttr 0x55b05e4f2da8 <col:30>
|-CXXMethodDecl 0x55b05e4f2f38 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55b05e4f2de0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55b05e4f2e60 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55b05e4f30c8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55b05e4f3000 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55b05e4f3218 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55b05e4f3188 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55b05e4f3368 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55b05e4f32d8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55b05e4f34b8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55b05e4f3428 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55b05e4f3778 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55b05e4f3570 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55b05e4f35f0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55b05e4f3698 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55b05e4f3850 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55b05e4f3910 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55b05e4f3be0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b05e4f3a90 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55b05e4f3b08 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55b05e4f3d08 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55b05e4f3ee0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55b05e4f3dc0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55b05e4f3e40 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55b05e4f40c8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55b05e4f3fa8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55b05e4f4028 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55b05e4f4438 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55b05e4f4188 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55b05e4f4200 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b05e4f4280 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55b05e4ff1f0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b05e4ff1d0 <col:106> 'int' 0
| `-ParmVarDecl 0x55b05e4f42f8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b05e4ff228 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b05e4ff208 <col:126> 'int' 0
|-CXXMethodDecl 0x55b05e4f47d8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b05e4f4508 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55b05e4f45a0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b05e4f4620 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55b05e4f4698 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b05e4ff260 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b05e4ff240 <col:114> 'int' 0
|-CXXMethodDecl 0x55b05e4f4b68 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b05e4f48b0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55b05e4f4928 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b05e4f49a8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55b05e4ff278 <col:96> 'int' 0
| `-ParmVarDecl 0x55b05e4f4a20 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b05e4ff2b8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b05e4ff298 <col:116> 'int' 0
|-CXXMethodDecl 0x55b05e4f4ee8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55b05e4f4c38 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55b05e4f4cb0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b05e4f4d30 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55b05e4ff2f0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b05e4ff2d0 <col:109> 'int' 0
| `-ParmVarDecl 0x55b05e4f4da8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b05e4ff328 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b05e4ff308 <col:129> 'int' 0
|-CXXMethodDecl 0x55b05e4f5268 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b05e4f4fb8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55b05e4f5030 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b05e4f50b0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55b05e4f5128 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b05e4ff360 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b05e4ff340 <col:117> 'int' 0
|-CXXMethodDecl 0x55b05e4f55f8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b05e4f5340 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f53b8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b05e4f5438 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55b05e4ff378 <col:99> 'int' 0
| `-ParmVarDecl 0x55b05e4f54b0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b05e4ff3b8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b05e4ff398 <col:119> 'int' 0
|-CXXMethodDecl 0x55b05e4f5a18 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55b05e4f56c8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55b05e4f5748 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55b05e4f57c0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b05e4f5840 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55b05e4ff3f0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b05e4ff3d0 <col:108> 'int' 0
| `-ParmVarDecl 0x55b05e4f58c0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55b05e4ff428 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55b05e4ff408 <col:141> 'int' 0
|-CXXMethodDecl 0x55b05e4f5e38 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55b05e4f5af0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55b05e4f5b70 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55b05e4f5be8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b05e4f5c68 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55b05e4f5ce8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55b05e4ff440 <col:121> 'int' 0
|-CXXMethodDecl 0x55b05e4f6268 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55b05e4f5f18 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55b05e4f5f98 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55b05e4f6010 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b05e4f6090 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55b05e4ff460 <col:98> 'int' 0
| `-ParmVarDecl 0x55b05e4f6110 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55b05e4ff480 <col:123> 'int' 0
|-CXXMethodDecl 0x55b05e4f6530 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55b05e4f6340 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55b05e4f63c0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55b05e4f6440 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55b05e4ff4a0 <col:80> 'int' 0
|-EnumDecl 0x55b05e4f65e8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55b05e4f66f0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b05e4f6980 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4f66d0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55b05e4f66b0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55b05e4f6780 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b05e4f6998 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4f6760 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55b05e4f6740 <col:40> 'int' 2
| |-EnumConstantDecl 0x55b05e4f6810 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b05e4f69b0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4f67f0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55b05e4f67d0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55b05e4f68a0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b05e4f69c8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4f6880 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55b05e4f6860 <col:36> 'int' 7
| `-EnumConstantDecl 0x55b05e4f6930 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55b05e4f69e0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e4f6910 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55b05e4f68f0 <col:34> 'int' 6
|-CXXMethodDecl 0x55b05e4f6c98 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55b05e4f6a08 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55b05e4f6aa8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55b05e4f6b28 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55b05e4f6ba0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55b05e4ff558 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b05e4ff540 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b05e4ff528 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b05e4ff508 <col:98, col:105> 'String' (CXXTemporary 0x55b05e4ff508)
|           `-CXXTemporaryObjectExpr 0x55b05e4ff4d0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55b05e4f6f38 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55b05e4f6d68 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55b05e4f6de0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55b05e4f6e58 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55b05e4ff608 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55b05e4ff5f0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55b05e4ff5d8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55b05e4ff5b8 <col:94, col:101> 'String' (CXXTemporary 0x55b05e4ff5b8)
| |         `-CXXTemporaryObjectExpr 0x55b05e4ff580 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55b05e4ffdf0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55b05e4ffd68 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55b05e4ffd38 <col:9> '<bound member function type>' ->add_task_handlers 0x55b05e4f6c98
|     | `-CXXThisExpr 0x55b05e4ffd28 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55b05e4ffda8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b05e4ffca8 <col:27> 'Task *' lvalue ParmVar 0x55b05e4f6d68 'task' 'Task *'
|     |-ImplicitCastExpr 0x55b05e4ffdc0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b05e4ffcc8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55b05e4f6de0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55b05e4ffdd8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55b05e4ffce8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55b05e4f6930 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55b05e4ffd08 <col:62> 'const String' lvalue ParmVar 0x55b05e4f6e58 'prefix' 'const String &'
|-CXXMethodDecl 0x55b05e4f7148 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55b05e4f7000 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55b05e4f7078 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55b05e4ff6b8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55b05e4ff6a0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55b05e4ff688 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55b05e4ff668 <col:70, col:77> 'String' (CXXTemporary 0x55b05e4ff668)
| |         `-CXXTemporaryObjectExpr 0x55b05e4ff630 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55b05e4fffc8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55b05e4fff40 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55b05e4fff10 <col:9> '<bound member function type>' ->add_task_handlers 0x55b05e4f6c98
|     | `-CXXThisExpr 0x55b05e4fff00 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55b05e4fff80 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b05e4ffe80 <col:27> 'Task *' lvalue ParmVar 0x55b05e4f7000 'task' 'Task *'
|     |-ImplicitCastExpr 0x55b05e4fff98 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55b05e4ffea0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55b05e4fffb0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55b05e4ffec0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55b05e4f6930 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55b05e4ffee0 <col:57> 'const String' lvalue ParmVar 0x55b05e4f7078 'prefix' 'const String &'
|-CXXMethodDecl 0x55b05e4f7428 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55b05e4f7210 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f7290 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f7308 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55b05e4f76d8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55b05e4f74f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f7578 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f75f8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55b05e4f79c8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55b05e4f77a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f7828 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f78a0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55b05e4f7c78 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55b05e4f7a98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f7b18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f7b98 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55b05e4f7f28 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55b05e4f7d48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f7dc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f7e48 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55b05e4f81d8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55b05e4f7ff8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f8078 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f80f0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55b05e4f8488 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55b05e4f82a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f8328 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f83a8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55b05e4f8798 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55b05e4f85b0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f8630 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f86b0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55b05e4f8a78 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55b05e4f8868 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f88e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f8990 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55b05e4f8d58 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55b05e4f8b48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f8bc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f8c70 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55b05e4f8fc0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55b05e4f8e28 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55b05e4f8ea8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55b05e4f8f20 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55b05e4f9268 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55b05e4f9090 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55b05e4f9110 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55b05e4f9188 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55b05e4f9518 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55b05e4f9338 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f93b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f9438 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55b05e4f97c8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55b05e4f95e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f9668 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f96e0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55b05e4f9a78 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55b05e4f9898 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f9918 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f9990 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55b05e4f9d48 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55b05e4f9b48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f9bc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b05e4f9c68 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55b05e4fa078 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55b05e4f9e18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b05e4f9e98 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55b05e4f9f10 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55b05e4f9f88 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b05e4ff6d0 <col:93> 'bool' false
|-CXXMethodDecl 0x55b05e4fa260 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b05e4fa148 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55b05e4fa1c8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55b05e4fa438 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b05e4fa320 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55b05e4fa3a0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55b05e4fa718 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b05e4fa4f8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55b05e4fa570 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55b05e4fa5f0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55b05e4fa668 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55b05e4faa08 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b05e4fa7e8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55b05e4fa860 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55b05e4fa8e0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55b05e4fa958 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55b05e4fac40 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55b05e4faae0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55b05e4fab60 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55b05e4fae28 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55b05e4fad08 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55b05e4fad88 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55b05e4faed8 prev 0x55b05e4f2678 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b05e4fafd0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55b05e4fb060 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55b05e4fb0d8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55b05e4fb198 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55b05e4fb260 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55b05e4fb3d8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55b05e4fb310 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55b05e4fb480 <col:24>
| | `-OptimizeNoneAttr 0x55b05e4fb4d8 <col:34>
| |-CXXMethodDecl 0x55b05e4fb520 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55b05e4fb7d8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55b05e4fb5d0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55b05e4fb648 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55b05e4fb6c8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55b05e4fb890 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55b05e4fb8c8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55b05e4fb930 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55b05e4fb9b8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55b05e4fbcd8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55b05e4fba70 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55b05e4fbae8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55b05e4fbb60 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55b05e4fbbe0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55b05e4fbdf0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55b05e503768 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55b05e503768
| | `-ParmVarDecl 0x55b05e503878 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55b05e503918 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55b05e503918
| | `-ParmVarDecl 0x55b05e503a28 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55b05e5e5318 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b05e4fbe68 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55b05e4fbf08 <col:38> "" ""
|-CXXMethodDecl 0x55b05e4fbf98 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55b05e4fc038 <col:44> "" ""
|-AccessSpecDecl 0x55b05e4fc0a8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55b05e4fc0d0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55b05e4fc1d0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55b05e4fc220 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e4fc1b0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55b05e4fc190 <col:27> 'int' 4
|-FieldDecl 0x55b05e4fc2d8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55b05e4fc488 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55b05e4fc540 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55b05e4fd5d0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55b05e4fd638 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55b05e4fd788 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55b05e4fd6c8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55b05e4fd938 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55b05e4fd848 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55b05e4fdb18 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55b05e4fd9f8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55b05e4fda78 <col:25> col:28 'int'
|-CXXMethodDecl 0x55b05e4fddc0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55b05e4fdbe0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55b05e4fdc60 <col:28> col:31 'int'
| `-ParmVarDecl 0x55b05e4fdcd8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55b05e4fde78 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55b05e4fdf40 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55b05e4fdf90 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55b05e4fdfe0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55b05e4fe1c0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55b05e4fe070 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55b05e4fe0e8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b05e4fe468 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55b05e4fe288 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55b05e4fe308 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55b05e4fe380 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55b05e4fe688 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55b05e4fe538 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55b05e4fe5b8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55b05e4fe9c0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55b05e4fe748 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55b05e4fe7c8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55b05e4fe840 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55b05e4fe8c0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55b05e4feba8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b05e4fea90 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55b05e4feb10 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55b05e4fecf8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55b05e4fec68 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55b05e4ff078 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55b05e4fedb8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55b05e4fee38 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55b05e4feeb0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55b05e4fef30 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55b05e4ff190 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Bitvector
         0 |   int _max
         8 |   Bitvector::word_type * _data
        16 |   Bitvector::word_type [2] _f
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Suppressor
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Bitvector _suppressed
       112 |     int _max
       120 |     Bitvector::word_type * _data
       128 |     Bitvector::word_type [2] _f
           | [sizeof=136, dsize=136, align=8,
           |  nvsize=136, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e5068d8 prev 0x55b05e4edd90 <../dummy_inc/click/bitvector.hh:20:1, line:95:1> line:20:7 referenced class Bitvector definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b05e5069d0 <col:1, col:7> col:7 implicit referenced class Bitvector
|-AccessSpecDecl 0x55b05e506a60 <line:21:3, col:9> col:3 public
|-CXXRecordDecl 0x55b05e506a88 <line:23:5, col:11> col:11 referenced class Bit
|-TypedefDecl 0x55b05e506c48 <line:24:5, col:56> col:31 referenced unspecified_bool_type 'bool (Bitvector::*)() const'
| `-MemberPointerType 0x55b05e506bc0 'bool (Bitvector::*)() const'
|   |-RecordType 0x55b05e4ede20 'Bitvector'
|   | `-CXXRecord 0x55b05e5068d8 'Bitvector'
|   `-ParenType 0x55b05e506b60 'bool () const' sugar
|     `-FunctionProtoType 0x55b05e0344f0 'bool () const' const cdecl
|       `-BuiltinType 0x55b05df8c2f0 'bool'
|-TypedefDecl 0x55b05e506cb0 <line:26:5, col:22> col:22 referenced word_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55b05e0e1ac0 'uint32_t' sugar
|   |-Typedef 0x55b05dff5408 'uint32_t'
|   `-TypedefType 0x55b05dfce440 '__uint32_t' sugar
|     |-Typedef 0x55b05dfce038 '__uint32_t'
|     `-BuiltinType 0x55b05df8c410 'unsigned int'
|-EnumDecl 0x55b05e506d08 <line:27:5, col:47> col:5
| |-EnumConstantDecl 0x55b05e506e10 <col:12, col:20> col:12 referenced wbits 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
| | `-ImplicitCastExpr 0x55b05e506f80 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e506df0 <col:20> 'int' Int: 32
| |     `-IntegerLiteral 0x55b05e506dd0 <col:20> 'int' 32
| |-EnumConstantDecl 0x55b05e506ea0 <col:24, col:33> col:24 referenced wshift 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
| | `-ImplicitCastExpr 0x55b05e506f98 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e506e80 <col:33> 'int' Int: 5
| |     `-IntegerLiteral 0x55b05e506e60 <col:33> 'int' 5
| `-EnumConstantDecl 0x55b05e506f30 <col:36, col:44> col:36 referenced wmask 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
|   `-ImplicitCastExpr 0x55b05e506fb0 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e506f10 <col:44> 'int' Int: 31
|       `-IntegerLiteral 0x55b05e506ef0 <col:44> 'int' 31
|-CXXConstructorDecl 0x55b05e507000 <line:29:5, col:22> col:12 used Bitvector 'void ()' inline
|-CXXConstructorDecl 0x55b05e507150 <line:30:5, col:36> col:21 Bitvector 'void (int)' inline
| `-ParmVarDecl 0x55b05e5070c0 <col:31, col:35> col:35 n 'int'
|-CXXConstructorDecl 0x55b05e5072a0 <line:31:5, col:39> col:21 Bitvector 'void (bool)' inline
| `-ParmVarDecl 0x55b05e507210 <col:31, col:36> col:36 bit 'bool'
|-CXXConstructorDecl 0x55b05e5074b8 <line:32:5, col:37> col:12 Bitvector 'void (int, bool)' inline
| |-ParmVarDecl 0x55b05e507368 <col:22, col:26> col:26 n 'int'
| `-ParmVarDecl 0x55b05e5073e0 <col:29, col:34> col:34 bit 'bool'
|-CXXConstructorDecl 0x55b05e507668 <line:33:5, col:40> col:12 used Bitvector 'void (const Bitvector &)' inline
| `-ParmVarDecl 0x55b05e5075a8 <col:22, col:39> col:39 x 'const Bitvector &'
|-CXXDestructorDecl 0x55b05e507760 <line:34:5, col:23> col:12 used ~Bitvector 'void () noexcept' inline
|-CXXMethodDecl 0x55b05e507890 <line:36:5, col:23> col:16 used size 'int () const' inline
|-CXXMethodDecl 0x55b05e507a08 <line:37:5, col:32> col:16 used operator[] 'Bitvector::Bit (int)' inline
| `-ParmVarDecl 0x55b05e507948 <col:27, col:31> col:31 i 'int'
|-CXXMethodDecl 0x55b05e507b58 <line:38:5, col:35> col:17 used operator[] 'bool (int) const' inline
| `-ParmVarDecl 0x55b05e507ac8 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55b05e507ca8 <line:39:5, col:31> col:16 force_bit 'Bitvector::Bit (int)' inline
| `-ParmVarDecl 0x55b05e507c18 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55b05e507d78 <line:41:5, col:28> col:16 used word_size 'int () const' inline
|-CXXMethodDecl 0x55b05e507e40 <line:42:5, col:27> col:16 max_word 'int () const' inline
|-CXXMethodDecl 0x55b05e507f78 <line:43:5, col:29> col:23 words 'Bitvector::word_type *()' inline
|-CXXMethodDecl 0x55b05e508098 <line:44:5, col:37> col:29 used words 'const Bitvector::word_type *() const' inline
|-CXXMethodDecl 0x55b05e508158 <line:46:5, col:17> col:10 used zero 'bool () const'
|-CXXConversionDecl 0x55b05e5082c8 <line:47:5, col:45> col:12 operator bool (Bitvector::*)() const 'Bitvector::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55b05e508398 <line:48:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55b05e5085c8 <line:50:5, col:38> col:16 used assign 'Bitvector &(int, bool)'
| |-ParmVarDecl 0x55b05e508450 <col:23, col:27> col:27 n 'int'
| `-ParmVarDecl 0x55b05e5084c8 <col:30, col:35> col:35 bit 'bool'
|-CXXMethodDecl 0x55b05e508748 <line:51:5, col:44> col:16 operator= 'Bitvector &(const Bitvector &)'
| `-ParmVarDecl 0x55b05e508688 <col:26, col:43> col:43 x 'const Bitvector &'
|-CXXMethodDecl 0x55b05e508810 <line:52:5, col:16> col:10 used clear 'void ()'
|-CXXMethodDecl 0x55b05e508958 <line:53:5, col:22> col:10 used resize 'void (int)'
| `-ParmVarDecl 0x55b05e5088c8 <col:17, col:21> col:21 n 'int'
|-FriendDecl 0x55b05e508c18 <line:55:5, col:73> col:24
| `-FunctionDecl 0x55b05e508b58 parent 0x55b05df8c278 <col:5, col:73> col:24 used operator== 'bool (const Bitvector &, const Bitvector &)' inline
|   |-ParmVarDecl 0x55b05e508a10 <col:35, col:52> col:52 a 'const Bitvector &'
|   `-ParmVarDecl 0x55b05e508a88 <col:55, col:72> col:72 b 'const Bitvector &'
|-FriendDecl 0x55b05e508e38 <line:56:5, col:73> col:24
| `-FunctionDecl 0x55b05e508d78 parent 0x55b05df8c278 <col:5, col:73> col:24 operator!= 'bool (const Bitvector &, const Bitvector &)' inline
|   |-ParmVarDecl 0x55b05e508c68 <col:35, col:52> col:52 a 'const Bitvector &'
|   `-ParmVarDecl 0x55b05e508ce0 <col:55, col:72> col:72 b 'const Bitvector &'
|-CXXMethodDecl 0x55b05e508f48 <line:57:5, col:51> col:10 nonzero_intersection 'bool (const Bitvector &) const'
| `-ParmVarDecl 0x55b05e508e88 <col:31, col:48> col:48 x 'const Bitvector &'
|-CXXMethodDecl 0x55b05e509038 <line:59:5, col:34> col:22 used operator~ 'Bitvector () const' inline
|-FriendDecl 0x55b05e5092f8 <line:60:5, col:70> col:29
| `-FunctionDecl 0x55b05e509238 parent 0x55b05df8c278 <col:5, col:70> col:29 used operator& 'Bitvector (Bitvector, const Bitvector &)' inline
|   |-ParmVarDecl 0x55b05e5090e8 <col:39, col:49> col:49 a 'Bitvector' destroyed
|   `-ParmVarDecl 0x55b05e509160 <col:52, col:69> col:69 b 'const Bitvector &'
|-FriendDecl 0x55b05e509518 <line:61:5, col:70> col:29
| `-FunctionDecl 0x55b05e509458 parent 0x55b05df8c278 <col:5, col:70> col:29 operator| 'Bitvector (Bitvector, const Bitvector &)' inline
|   |-ParmVarDecl 0x55b05e509348 <col:39, col:49> col:49 a 'Bitvector' destroyed
|   `-ParmVarDecl 0x55b05e5093c0 <col:52, col:69> col:69 b 'const Bitvector &'
|-FriendDecl 0x55b05e509738 <line:62:5, col:70> col:29
| `-FunctionDecl 0x55b05e509678 parent 0x55b05df8c278 <col:5, col:70> col:29 operator^ 'Bitvector (Bitvector, const Bitvector &)' inline
|   |-ParmVarDecl 0x55b05e509568 <col:39, col:49> col:49 a 'Bitvector' destroyed
|   `-ParmVarDecl 0x55b05e5095e0 <col:52, col:69> col:69 b 'const Bitvector &'
|-FriendDecl 0x55b05e509958 <line:63:5, col:70> col:29
| `-FunctionDecl 0x55b05e509898 parent 0x55b05df8c278 <col:5, col:70> col:29 operator- 'Bitvector (Bitvector, const Bitvector &)' inline
|   |-ParmVarDecl 0x55b05e509788 <col:39, col:49> col:49 a 'Bitvector' destroyed
|   `-ParmVarDecl 0x55b05e509800 <col:52, col:69> col:69 b 'const Bitvector &'
|-CXXMethodDecl 0x55b05e5099b8 <line:65:5, col:15> col:10 used flip 'void ()'
|-CXXMethodDecl 0x55b05e509a78 <line:66:5, col:24> col:17 negate 'void ()' inline
|-CXXMethodDecl 0x55b05e509bb8 <line:67:5, col:45> col:16 used operator&= 'Bitvector &(const Bitvector &)'
| `-ParmVarDecl 0x55b05e509b28 <col:27, col:44> col:44 x 'const Bitvector &'
|-CXXMethodDecl 0x55b05e509d00 <line:68:5, col:45> col:16 used operator|= 'Bitvector &(const Bitvector &)'
| `-ParmVarDecl 0x55b05e509c70 <col:27, col:44> col:44 x 'const Bitvector &'
|-CXXMethodDecl 0x55b05e509e48 <line:69:5, col:45> col:16 used operator^= 'Bitvector &(const Bitvector &)'
| `-ParmVarDecl 0x55b05e509db8 <col:27, col:44> col:44 x 'const Bitvector &'
|-CXXMethodDecl 0x55b05e509f90 <line:70:5, col:52> col:23 operator-= 'Bitvector &(const Bitvector &)' inline
| `-ParmVarDecl 0x55b05e509f00 <col:34, col:51> col:51 x 'const Bitvector &'
|-CXXMethodDecl 0x55b05e50a198 <line:71:5, col:50> col:10 offset_or 'void (const Bitvector &, int)'
| |-ParmVarDecl 0x55b05e50a048 <col:20, col:37> col:37 x 'const Bitvector &'
| `-ParmVarDecl 0x55b05e50a0c8 <col:40, col:44> col:44 offset 'int'
|-CXXMethodDecl 0x55b05e50a3a8 <line:72:5, col:70> col:10 or_with_difference 'void (const Bitvector &, Bitvector &)'
| |-ParmVarDecl 0x55b05e50a258 <col:29, col:46> col:46 x 'const Bitvector &'
| `-ParmVarDecl 0x55b05e50a2d0 <col:49, col:60> col:60 difference 'Bitvector &'
|-CXXMethodDecl 0x55b05e50a528 <line:74:5, col:27> col:10 used swap 'void (Bitvector &)'
| `-ParmVarDecl 0x55b05e50a468 <col:15, col:26> col:26 x 'Bitvector &'
|-TypedefDecl 0x55b05e50a5e0 <line:77:5, col:23> col:23 data_word_type 'Bitvector::word_type':'unsigned int'
| |-TypedefType 0x55b05e507ee0 'Bitvector::word_type' sugar
| | |-Typedef 0x55b05e506cb0 'word_type'
| | `-TypedefType 0x55b05e0e1ac0 'uint32_t' sugar
| |   |-Typedef 0x55b05dff5408 'uint32_t'
| |   `-TypedefType 0x55b05dfce440 '__uint32_t' sugar
| |     |-Typedef 0x55b05dfce038 '__uint32_t'
| |     `-BuiltinType 0x55b05df8c410 'unsigned int'
| `-DeprecatedAttr 0x55b05e50a638 <col:53> "" ""
|-EnumDecl 0x55b05e50a6a8 <line:78:5, col:35> col:5
| `-EnumConstantDecl 0x55b05e50a7b0 <col:12, col:29> col:12 data_word_bits 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:78:5)'
|   `-ImplicitCastExpr 0x55b05e50a800 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e50a790 <col:29> 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)' Int: 32
|       `-DeclRefExpr 0x55b05e50a770 <col:29> 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)' EnumConstant 0x55b05e506e10 'wbits' 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
|-CXXMethodDecl 0x55b05e50a838 <line:79:5, col:62> col:23 data_words 'Bitvector::word_type *()' inline
| `-DeprecatedAttr 0x55b05e50a8d8 <col:51> "" ""
|-CXXMethodDecl 0x55b05e50a968 <line:80:5, col:74> col:29 data_words 'const Bitvector::word_type *() const' inline
| `-DeprecatedAttr 0x55b05e50aa08 <col:63> "" ""
|-AccessSpecDecl 0x55b05e50aa78 <line:83:3, col:10> col:3 private
|-EnumDecl 0x55b05e50aaa0 <line:85:5, col:54> col:5
| |-EnumConstantDecl 0x55b05e50aba0 <col:12, col:22> col:12 referenced ninline 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:85:5)'
| | `-ImplicitCastExpr 0x55b05e50acd8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e50ab80 <col:22> 'int' Int: 2
| |     `-IntegerLiteral 0x55b05e50ab60 <col:22> 'int' 2
| `-EnumConstantDecl 0x55b05e50ac88 <col:25, col:48> col:25 referenced inlinebits 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:85:5)'
|   `-ImplicitCastExpr 0x55b05e50acf0 <col:38, col:48> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e50ac68 <col:38, col:48> 'int' Int: 64
|       `-BinaryOperator 0x55b05e50ac48 <col:38, col:48> 'int' '*'
|         |-DeclRefExpr 0x55b05e50abf0 <col:38> 'int' EnumConstant 0x55b05e50aba0 'ninline' 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:85:5)'
|         `-ImplicitCastExpr 0x55b05e50ac30 <col:48> 'int' <IntegralCast>
|           `-DeclRefExpr 0x55b05e50ac10 <col:48> 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)' EnumConstant 0x55b05e506e10 'wbits' 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
|-FieldDecl 0x55b05e50ad20 <line:87:5, col:9> col:9 referenced _max 'int'
|-FieldDecl 0x55b05e50ad80 <line:88:5, col:16> col:16 referenced _data 'Bitvector::word_type *'
|-FieldDecl 0x55b05e50ae68 <line:89:5, col:25> col:15 referenced _f 'Bitvector::word_type [2]'
|-CXXMethodDecl 0x55b05e50af58 <line:91:5, col:51> col:10 used finish_copy_constructor 'void (const Bitvector &)'
| `-ParmVarDecl 0x55b05e50aec8 <col:34, col:50> col:51 'const Bitvector &'
|-CXXMethodDecl 0x55b05e50b020 <line:92:5, col:28> col:17 clear_last 'void ()' inline
`-CXXMethodDecl 0x55b05e50b1e8 <line:93:5, col:31> col:10 hard_resize 'void (int, bool)'
  |-ParmVarDecl 0x55b05e50b0d8 <col:22> col:25 'int'
  `-ParmVarDecl 0x55b05e50b150 <col:27> col:31 'bool'

Layout: <CGRecordLayout
  LLVMType:%class.Bitvector = type { i32, i32*, [2 x i32] }
  NonVirtualBaseLLVMType:%class.Bitvector = type { i32, i32*, [2 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e46edd0 <../elements/standard/suppressor.hh:27:1, line:51:1> line:27:7 class Suppressor definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55b05e46ef28 <col:1, col:7> col:7 implicit referenced class Suppressor
|-AccessSpecDecl 0x55b05e46efb8 <col:37, col:43> col:37 public
|-CXXConstructorDecl 0x55b05e46f040 <line:29:3, col:14> col:3 Suppressor 'void ()'
|-CXXMethodDecl 0x55b05e46f140 <line:31:3, col:57> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55b05e4ef628 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55b05e470920 <col:34, col:57>
|   `-ReturnStmt 0x55b05e470910 <col:36, col:43>
|     `-ImplicitCastExpr 0x55b05e4708f8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55b05e4708d0 <col:43> 'const char [11]' lvalue "Suppressor"
|-CXXMethodDecl 0x55b05e46f208 <line:32:3, col:50> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x55b05e4ef6f0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55b05e470980 <col:34, col:50>
|   `-ReturnStmt 0x55b05e470970 <col:36, col:43>
|     `-ImplicitCastExpr 0x55b05e470958 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55b05e470938 <col:43> 'const char [4]' lvalue "-/="
|-CXXMethodDecl 0x55b05e46f2d0 <line:33:3, col:49> col:15 flow_code 'const char *() const'
| |-Overrides: [ 0x55b05e4efeb0 Element::flow_code 'const char *() const' ]
| `-CompoundStmt 0x55b05e4709e0 <col:33, col:49>
|   `-ReturnStmt 0x55b05e4709d0 <col:35, col:42>
|     `-ImplicitCastExpr 0x55b05e4709b8 <col:42> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55b05e470998 <col:42> 'const char [4]' lvalue "#/#"
|-CXXMethodDecl 0x55b05e46f5a0 <line:35:3, col:57> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55b05e4f0ec0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55b05e46f450 <col:17, col:33> col:33 conf 'Vector<String> &'
| `-ParmVarDecl 0x55b05e46f4c8 <col:39, col:53> col:53 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b05e46f670 <line:36:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x55b05e4f0f90 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55b05e46f838 <line:38:3, col:32> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x55b05e4ee498 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55b05e46f728 <col:13, col:17> col:17 port 'int'
| `-ParmVarDecl 0x55b05e46f7a0 <col:23, col:31> col:31 p 'Packet *'
|-CXXMethodDecl 0x55b05e46f990 <line:39:3, col:24> col:11 pull 'Packet *(int)'
| |-Overrides: [ 0x55b05e4ee628 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55b05e46f900 <col:16, col:20> col:20 port 'int'
|-CXXMethodDecl 0x55b05e46fae0 <line:41:3, col:67> col:8 suppressed 'bool (int) const'
| |-ParmVarDecl 0x55b05e46fa50 <col:19, col:23> col:23 used output 'int'
| `-CompoundStmt 0x55b05e470b18 <col:37, col:67>
|   `-ReturnStmt 0x55b05e470b08 <col:39, col:64>
|     `-CXXOperatorCallExpr 0x55b05e470ad0 <col:46, col:64> 'bool'
|       |-ImplicitCastExpr 0x55b05e470ab8 <col:57, col:64> 'bool (*)(int) const' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b05e470a70 <col:57, col:64> 'bool (int) const' lvalue CXXMethod 0x55b05e50f880 'operator[]' 'bool (int) const'
|       |-MemberExpr 0x55b05e470a08 <col:46> 'const Bitvector' lvalue ->_suppressed 0x55b05e4700f8
|       | `-CXXThisExpr 0x55b05e4709f8 <col:46> 'const Suppressor *' implicit this
|       `-ImplicitCastExpr 0x55b05e470a58 <col:58> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x55b05e470a38 <col:58> 'int' lvalue ParmVar 0x55b05e46fa50 'output' 'int'
|-CXXMethodDecl 0x55b05e46fc30 <line:42:3, col:59> col:8 suppress 'void (int)'
| |-ParmVarDecl 0x55b05e46fba0 <col:17, col:21> col:21 used output 'int'
| `-CompoundStmt 0x55b05e470d80 <col:29, col:59>
|   `-ExprWithCleanups 0x55b05e470d68 <col:31, col:53> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|     `-CXXOperatorCallExpr 0x55b05e470d30 <col:31, col:53> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|       |-ImplicitCastExpr 0x55b05e470d18 <col:51> 'Bitvector::Bit &(*)(bool)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b05e470ca0 <col:51> 'Bitvector::Bit &(bool)' lvalue CXXMethod 0x55b05e5149b0 'operator=' 'Bitvector::Bit &(bool)'
|       |-MaterializeTemporaryExpr 0x55b05e470c88 <col:31, col:49> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|       | `-CXXOperatorCallExpr 0x55b05e470c40 <col:31, col:49> 'Bitvector::Bit':'Bitvector::Bit'
|       |   |-ImplicitCastExpr 0x55b05e470c28 <col:42, col:49> 'Bitvector::Bit (*)(int)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55b05e470ba8 <col:42, col:49> 'Bitvector::Bit (int)' lvalue CXXMethod 0x55b05e50eb88 'operator[]' 'Bitvector::Bit (int)'
|       |   |-MemberExpr 0x55b05e470b40 <col:31> 'Bitvector' lvalue ->_suppressed 0x55b05e4700f8
|       |   | `-CXXThisExpr 0x55b05e470b30 <col:31> 'Suppressor *' implicit this
|       |   `-ImplicitCastExpr 0x55b05e470b90 <col:43> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x55b05e470b70 <col:43> 'int' lvalue ParmVar 0x55b05e46fba0 'output' 'int'
|       `-CXXBoolLiteralExpr 0x55b05e470c78 <col:53> 'bool' true
|-CXXMethodDecl 0x55b05e46fd80 <line:43:3, col:57> col:8 allow 'void (int)'
| |-ParmVarDecl 0x55b05e46fcf0 <col:14, col:18> col:18 used output 'int'
| `-CompoundStmt 0x55b05e470f30 <col:26, col:57>
|   `-ExprWithCleanups 0x55b05e470f18 <col:28, col:50> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|     `-CXXOperatorCallExpr 0x55b05e470ee0 <col:28, col:50> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|       |-ImplicitCastExpr 0x55b05e470ec8 <col:48> 'Bitvector::Bit &(*)(bool)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b05e470ea8 <col:48> 'Bitvector::Bit &(bool)' lvalue CXXMethod 0x55b05e5149b0 'operator=' 'Bitvector::Bit &(bool)'
|       |-MaterializeTemporaryExpr 0x55b05e470e90 <col:28, col:46> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|       | `-CXXOperatorCallExpr 0x55b05e470e48 <col:28, col:46> 'Bitvector::Bit':'Bitvector::Bit'
|       |   |-ImplicitCastExpr 0x55b05e470e30 <col:39, col:46> 'Bitvector::Bit (*)(int)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55b05e470e10 <col:39, col:46> 'Bitvector::Bit (int)' lvalue CXXMethod 0x55b05e50eb88 'operator[]' 'Bitvector::Bit (int)'
|       |   |-MemberExpr 0x55b05e470da8 <col:28> 'Bitvector' lvalue ->_suppressed 0x55b05e4700f8
|       |   | `-CXXThisExpr 0x55b05e470d98 <col:28> 'Suppressor *' implicit this
|       |   `-ImplicitCastExpr 0x55b05e470df8 <col:40> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x55b05e470dd8 <col:40> 'int' lvalue ParmVar 0x55b05e46fcf0 'output' 'int'
|       `-CXXBoolLiteralExpr 0x55b05e470e80 <col:50> 'bool' false
|-CXXMethodDecl 0x55b05e46fe48 <line:44:3, col:43> col:8 allow_all 'void ()'
| `-CompoundStmt 0x55b05e470fd8 <col:20, col:43>
|   `-CXXMemberCallExpr 0x55b05e470fb8 <col:22, col:40> 'void'
|     `-MemberExpr 0x55b05e470f88 <col:22, col:34> '<bound member function type>' .clear 0x55b05e508810
|       `-MemberExpr 0x55b05e470f58 <col:22> 'Bitvector' lvalue ->_suppressed 0x55b05e4700f8
|         `-CXXThisExpr 0x55b05e470f48 <col:22> 'Suppressor *' implicit this
|-CXXMethodDecl 0x55b05e470010 <line:45:3, col:77> col:8 set 'void (int, bool)'
| |-ParmVarDecl 0x55b05e46ff00 <col:12, col:16> col:16 used output 'int'
| |-ParmVarDecl 0x55b05e46ff78 <col:24, col:29> col:29 used suppressed 'bool'
| `-CompoundStmt 0x55b05e4711b0 <col:41, col:77>
|   `-ExprWithCleanups 0x55b05e471198 <col:43, col:65> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|     `-CXXOperatorCallExpr 0x55b05e471160 <col:43, col:65> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|       |-ImplicitCastExpr 0x55b05e471148 <col:63> 'Bitvector::Bit &(*)(bool)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b05e471128 <col:63> 'Bitvector::Bit &(bool)' lvalue CXXMethod 0x55b05e5149b0 'operator=' 'Bitvector::Bit &(bool)'
|       |-MaterializeTemporaryExpr 0x55b05e471110 <col:43, col:61> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|       | `-CXXOperatorCallExpr 0x55b05e4710a0 <col:43, col:61> 'Bitvector::Bit':'Bitvector::Bit'
|       |   |-ImplicitCastExpr 0x55b05e471088 <col:54, col:61> 'Bitvector::Bit (*)(int)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55b05e471068 <col:54, col:61> 'Bitvector::Bit (int)' lvalue CXXMethod 0x55b05e50eb88 'operator[]' 'Bitvector::Bit (int)'
|       |   |-MemberExpr 0x55b05e471000 <col:43> 'Bitvector' lvalue ->_suppressed 0x55b05e4700f8
|       |   | `-CXXThisExpr 0x55b05e470ff0 <col:43> 'Suppressor *' implicit this
|       |   `-ImplicitCastExpr 0x55b05e471050 <col:55> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x55b05e471030 <col:55> 'int' lvalue ParmVar 0x55b05e46ff00 'output' 'int'
|       `-ImplicitCastExpr 0x55b05e4710f8 <col:65> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x55b05e4710d8 <col:65> 'bool' lvalue ParmVar 0x55b05e46ff78 'suppressed' 'bool'
|-AccessSpecDecl 0x55b05e4700c0 <line:47:3, col:10> col:3 private
|-FieldDecl 0x55b05e4700f8 <line:49:5, col:15> col:15 referenced _suppressed 'Bitvector'
|-CXXConstructorDecl 0x55b05e470178 <line:27:7> col:7 implicit Suppressor 'void (const Suppressor &)' inline default_delete noexcept-unevaluated 0x55b05e470178
| `-ParmVarDecl 0x55b05e470288 <col:7> col:7 'const Suppressor &'
|-CXXConstructorDecl 0x55b05e470328 <col:7> col:7 implicit Suppressor 'void (Suppressor &&)' inline default_delete noexcept-unevaluated 0x55b05e470328
| `-ParmVarDecl 0x55b05e470438 <col:7> col:7 'Suppressor &&'
|-CXXMethodDecl 0x55b05e4704d8 <col:7> col:7 implicit operator= 'Suppressor &(const Suppressor &)' inline default_delete noexcept-unevaluated 0x55b05e4704d8
| `-ParmVarDecl 0x55b05e4705e8 <col:7> col:7 'const Suppressor &'
|-CXXMethodDecl 0x55b05e470658 <col:7> col:7 implicit operator= 'Suppressor &(Suppressor &&)' inline default_delete noexcept-unevaluated 0x55b05e470658
| `-ParmVarDecl 0x55b05e470768 <col:7> col:7 'Suppressor &&'
`-CXXDestructorDecl 0x55b05e4707f0 <col:7> col:7 implicit ~Suppressor 'void ()' inline default noexcept-unevaluated 0x55b05e4707f0
  `-Overrides: [ 0x55b05e4ee1c8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.Suppressor = type { %class.Element.base, %class.Bitvector }
  NonVirtualBaseLLVMType:%class.Suppressor = type { %class.Element.base, %class.Bitvector }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e2c1d90 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b05e2c1ea8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55b05e2c1f48 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55b05e2c1fa8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55b05e2c2008 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55b05e2c20b8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e2c23c0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b05e2c24d8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55b05e2c2580 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55b05e2c25e8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55b05e2c2678 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55b05e2c8710 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b05e2c8b48 <col:12>
|-CXXConstructorDecl 0x55b05e2c8818 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b05e2c8928 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55b05e2c2580 'data' 'const char *'
| | `-ImplicitCastExpr 0x55b05e2cb0d0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55b05e2cb0a0 <col:12> 'const char *const' lvalue .data 0x55b05e2c2580
| |     `-DeclRefExpr 0x55b05e2cb080 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b05e2c8928 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55b05e2c25e8 'length' 'int'
| | `-ImplicitCastExpr 0x55b05e2cb160 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55b05e2cb130 <col:12> 'const int' lvalue .length 0x55b05e2c25e8
| |     `-DeclRefExpr 0x55b05e2cb110 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b05e2c8928 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55b05e2c2678 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55b05e2cb1f0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55b05e2cb1c0 <col:12> 'String::memo_t *const' lvalue .memo 0x55b05e2c2678
| |     `-DeclRefExpr 0x55b05e2cb1a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b05e2c8928 '' 'const String::rep_t &'
| `-CompoundStmt 0x55b05e2cb248 <col:12>
|-CXXConstructorDecl 0x55b05e2c89c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b05e2c89c8
| `-ParmVarDecl 0x55b05e2c8ad8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55b05e2ce030 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b05e2d9a48 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b05e2d9b58 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55b05e2da070 <col:12>
|   |-BinaryOperator 0x55b05e2d9e88 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55b05e2d9e40 <col:12> 'const char *' lvalue ->data 0x55b05e2c2580
|   | | `-CXXThisExpr 0x55b05e2d9e30 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55b05e2d9e70 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55b05e2d9e00 <col:12> 'const char *const' lvalue .data 0x55b05e2c2580
|   |     `-DeclRefExpr 0x55b05e2d9de0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b05e2d9b58 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55b05e2d9f50 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55b05e2d9f08 <col:12> 'int' lvalue ->length 0x55b05e2c25e8
|   | | `-CXXThisExpr 0x55b05e2d9ef8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55b05e2d9f38 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55b05e2d9ec8 <col:12> 'const int' lvalue .length 0x55b05e2c25e8
|   |     `-DeclRefExpr 0x55b05e2d9ea8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b05e2d9b58 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55b05e2da018 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55b05e2d9fd0 <col:12> 'String::memo_t *' lvalue ->memo 0x55b05e2c2678
|   | | `-CXXThisExpr 0x55b05e2d9fc0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55b05e2da000 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55b05e2d9f90 <col:12> 'String::memo_t *const' lvalue .memo 0x55b05e2c2678
|   |     `-DeclRefExpr 0x55b05e2d9f70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b05e2d9b58 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55b05e2da060 <col:12>
|     `-UnaryOperator 0x55b05e2da048 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b05e2da038 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55b05e2d9bc8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b05e2d9bc8
  `-ParmVarDecl 0x55b05e2d9cd8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e2b9300 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b05e2b9418 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55b05e2b94a8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55b05e2b94e8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55b05df8cdc0 'const char *'
|   `-QualType 0x55b05df8c311 'const char' const
|     `-BuiltinType 0x55b05df8c310 'char'
|-TypedefDecl 0x55b05e2b9570 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55b05e2b9540 'String::const_iterator' sugar
|   |-Typedef 0x55b05e2b94e8 'const_iterator'
|   `-PointerType 0x55b05df8cdc0 'const char *'
|     `-QualType 0x55b05df8c311 'const char' const
|       `-BuiltinType 0x55b05df8c310 'char'
|-TypedefDecl 0x55b05e2b96e0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55b05e2b9650 'int (String::*)() const'
|   |-RecordType 0x55b05e2b9390 'String'
|   | `-CXXRecord 0x55b05e2b9300 'String'
|   `-ParenType 0x55b05e2b95f0 'int () const' sugar
|     `-FunctionProtoType 0x55b05e28d180 'int () const' const cdecl
|       `-BuiltinType 0x55b05df8c370 'int'
|-TypedefDecl 0x55b05e2b9748 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55b05e0e1d60 'int64_t' sugar
|   |-Typedef 0x55b05dff52d0 'int64_t'
|   `-TypedefType 0x55b05dfce4d0 '__int64_t' sugar
|     |-Typedef 0x55b05dfce0a8 '__int64_t'
|     `-BuiltinType 0x55b05df8c390 'long'
|-TypedefDecl 0x55b05e2b97b0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55b05e0e1c80 'uint64_t' sugar
|   |-Typedef 0x55b05dff5470 'uint64_t'
|   `-TypedefType 0x55b05dfce560 '__uint64_t' sugar
|     |-Typedef 0x55b05dfce118 '__uint64_t'
|     `-BuiltinType 0x55b05df8c430 'unsigned long'
|-TypedefDecl 0x55b05e2b9840 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55b05e2b9810 'String::intmax_t' sugar
|   |-Typedef 0x55b05e2b9748 'intmax_t'
|   `-TypedefType 0x55b05e0e1d60 'int64_t' sugar
|     |-Typedef 0x55b05dff52d0 'int64_t'
|     `-TypedefType 0x55b05dfce4d0 '__int64_t' sugar
|       |-Typedef 0x55b05dfce0a8 '__int64_t'
|       `-BuiltinType 0x55b05df8c390 'long'
|-TypedefDecl 0x55b05e2b98d0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55b05e2b98a0 'String::uintmax_t' sugar
|   |-Typedef 0x55b05e2b97b0 'uintmax_t'
|   `-TypedefType 0x55b05e0e1c80 'uint64_t' sugar
|     |-Typedef 0x55b05dff5470 'uint64_t'
|     `-TypedefType 0x55b05dfce560 '__uint64_t' sugar
|       |-Typedef 0x55b05dfce118 '__uint64_t'
|       `-BuiltinType 0x55b05df8c430 'unsigned long'
|-CXXConstructorDecl 0x55b05e2b9990 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55b05e2b9b38 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55b05e2b9a78 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55b05e2b9ce8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55b05e2b9c28 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55b05e2b9e40 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55b05e2b9db0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55b05e2ba058 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55b05e2b9f08 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55b05e2b9f88 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55b05e2ba278 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55b05e2ba128 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55b05e2ba1a8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55b05e2ba498 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55b05e2ba348 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55b05e2ba3c8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55b05e2ba6b8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55b05e2ba568 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55b05e2ba5e8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55b05e2ba848 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55b05e2ba780 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55b05e2ba9c8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55b05e2ba908 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55b05e2bab58 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55b05e2baa90 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55b05e2bacb0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55b05e2bac20 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55b05e2bae08 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55b05e2bad78 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55b05e2baf60 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55b05e2baed0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55b05e2bb0e8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55b05e2bb028 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55b05e2bb278 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55b05e2bb1b0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55b05e2bb408 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55b05e2bb340 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55b05e2bb598 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55b05e2bb4d0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55b05e2bb690 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55b05e2bb7b8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55b05e2bb938 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55b05e2bb870 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55b05e2bba88 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55b05e2bb9f8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55b05e2bbb40 <col:63> "" ""
|-CXXMethodDecl 0x55b05e2bbc88 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55b05e2bbbc8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55b05e2bbe98 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55b05e2bbd48 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55b05e2bbdc8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55b05e2bc0b8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55b05e2bbf60 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55b05e2bbfe0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55b05e2bc398 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55b05e2bc178 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55b05e2bc1f8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55b05e2c81e0 <col:55> 'int' 10
| `-ParmVarDecl 0x55b05e2bc270 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b05e2c8200 <col:76> 'bool' true
|-CXXMethodDecl 0x55b05e2bc678 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55b05e2bc460 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55b05e2bc4e0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55b05e2c8210 <col:56> 'int' 10
| `-ParmVarDecl 0x55b05e2bc558 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b05e2c8230 <col:77> 'bool' true
|-CXXMethodDecl 0x55b05e2bc780 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55b05e2bc848 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55b05e2bc910 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55b05e2bc9b0 <col:20>
| `-OptimizeNoneAttr 0x55b05e2bca08 <col:30>
|-CXXConversionDecl 0x55b05e2bcaf8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55b05e2bcbc8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55b05e2bcc88 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55b05e2bcd78 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55b05e2bce38 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55b05e2bcfb8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55b05e2bcef0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55b05e2bd108 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55b05e2bd078 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55b05e2bd1f8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55b05e2bd2b8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55b05e2bd508 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55b05e2bd370 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55b05e2bd3f0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55b05e2bd768 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55b05e2bd5d0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55b05e2bd650 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55b05e2bd838 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55b05e2bda48 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55b05e2bd8f0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55b05e2bd970 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55b05e2bdc68 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55b05e2bdb10 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55b05e2bdb90 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55b05e2bddf8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55b05e2bdd30 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55b05e2bdee8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55b05e2be058 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55b05e2bdf98 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55b05e2be268 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55b05e2be118 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55b05e2be198 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55b05e2be480 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55b05e2be328 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55b05e2be3a0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55b05e2be610 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55b05e2be540 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55b05e2be830 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55b05e2be6d0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55b05e2be750 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55b05e2be980 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55b05e2be8f0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55b05e2beb58 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55b05e2bea40 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55b05e2beac0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55b05e2beca8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55b05e2bec18 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55b05e2beec0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55b05e2bed60 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55b05e2bede0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55b05e2c8240 <col:39> 'int' 0
|-CXXMethodDecl 0x55b05e2bf0e0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55b05e2bef80 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55b05e2bf000 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55b05e2c8260 <col:48> 'int' 0
|-CXXMethodDecl 0x55b05e2bf2c0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55b05e2bf1a0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55b05e2bf220 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55b05e2c8280 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55b05e2bf390 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55b05e2bf450 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55b05e2bf510 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55b05e2bf5d0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55b05e2bf690 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55b05e2bf838 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55b05e2bf740 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55b05e2bf9b8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55b05e2bf8f0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55b05e2bfb90 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55b05e2bfa78 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55b05e2bfd08 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55b05e2bfc48 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55b05e2bfe50 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55b05e2bfdc0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55b05e2bffa0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55b05e2bff10 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55b05e2c0178 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55b05e2c0060 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55b05e2c00e0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55b05e2c0358 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55b05e2c0240 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55b05e2c02c0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55b05e2c04a8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55b05e2c0418 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55b05e2c06b8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55b05e2c0568 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55b05e2c05e8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55b05e2c0818 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55b05e2c0780 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55b05e2c0970 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55b05e2c08d8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55b05e2c0a18 <col:57> "" ""
|-CXXMethodDecl 0x55b05e2c0b28 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55b05e2c0a98 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55b05e2c0c78 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55b05e2c0be8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55b05e2c0df8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55b05e2c0d30 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55b05e2c0ec0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55b05e2c0f80 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55b05e2c1040 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55b05e2c10e0 <col:49> "" ""
|-CXXMethodDecl 0x55b05e2c1170 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55b05e2c1230 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55b05e2c1320 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55b05e2c13e8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55b05e2c14a8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55b05e2c1568 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55b05e2c1660 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55b05e2c1728 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55b05e2c17f0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55b05e2c19c8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55b05e2c18a8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55b05e2c1928 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55b05e2c1bf0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55b05e2c1a90 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55b05e2c1b10 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55b05e2c1d00 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55b05e2c1d68 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55b05e2c1d90 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b05e2c1ea8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55b05e2c1f48 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55b05e2c1fa8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55b05e2c2008 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55b05e2c20b8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55b05e2c2120 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55b05e2c2358 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55b05e2c23a8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e2c2338 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55b05e2c2248 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55b05e2c21f0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55b05e2c2230 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55b05e2c2210 <col:32> 'int' 8
|-CXXRecordDecl 0x55b05e2c23c0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b05e2c24d8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55b05e2c2580 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55b05e2c25e8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55b05e2c2678 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55b05e2c8710 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b05e2c8b48 <col:12>
| |-CXXConstructorDecl 0x55b05e2c8818 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b05e2c8928 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55b05e2c2580 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55b05e2cb0d0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55b05e2cb0a0 <col:12> 'const char *const' lvalue .data 0x55b05e2c2580
| | |     `-DeclRefExpr 0x55b05e2cb080 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b05e2c8928 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55b05e2c25e8 'length' 'int'
| | | `-ImplicitCastExpr 0x55b05e2cb160 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55b05e2cb130 <col:12> 'const int' lvalue .length 0x55b05e2c25e8
| | |     `-DeclRefExpr 0x55b05e2cb110 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b05e2c8928 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55b05e2c2678 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55b05e2cb1f0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55b05e2cb1c0 <col:12> 'String::memo_t *const' lvalue .memo 0x55b05e2c2678
| | |     `-DeclRefExpr 0x55b05e2cb1a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b05e2c8928 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55b05e2cb248 <col:12>
| |-CXXConstructorDecl 0x55b05e2c89c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b05e2c89c8
| | `-ParmVarDecl 0x55b05e2c8ad8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55b05e2ce030 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55b05e2d9a48 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b05e2d9b58 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55b05e2da070 <col:12>
| |   |-BinaryOperator 0x55b05e2d9e88 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55b05e2d9e40 <col:12> 'const char *' lvalue ->data 0x55b05e2c2580
| |   | | `-CXXThisExpr 0x55b05e2d9e30 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55b05e2d9e70 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55b05e2d9e00 <col:12> 'const char *const' lvalue .data 0x55b05e2c2580
| |   |     `-DeclRefExpr 0x55b05e2d9de0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b05e2d9b58 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55b05e2d9f50 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55b05e2d9f08 <col:12> 'int' lvalue ->length 0x55b05e2c25e8
| |   | | `-CXXThisExpr 0x55b05e2d9ef8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55b05e2d9f38 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55b05e2d9ec8 <col:12> 'const int' lvalue .length 0x55b05e2c25e8
| |   |     `-DeclRefExpr 0x55b05e2d9ea8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b05e2d9b58 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55b05e2da018 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55b05e2d9fd0 <col:12> 'String::memo_t *' lvalue ->memo 0x55b05e2c2678
| |   | | `-CXXThisExpr 0x55b05e2d9fc0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55b05e2da000 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55b05e2d9f90 <col:12> 'String::memo_t *const' lvalue .memo 0x55b05e2c2678
| |   |     `-DeclRefExpr 0x55b05e2d9f70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b05e2d9b58 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55b05e2da060 <col:12>
| |     `-UnaryOperator 0x55b05e2da048 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55b05e2da038 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55b05e2d9bc8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b05e2d9bc8
|   `-ParmVarDecl 0x55b05e2d9cd8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55b05e2c26f0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55b05e2c2938 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55b05e2c2758 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55b05e2c27d8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55b05e2c2850 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55b05e2c86d0 <col:79, line:261:5>
|   |-BinaryOperator 0x55b05e2c8348 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55b05e2c82e0 <col:2, col:5> 'const char *' lvalue .data 0x55b05e2c2580
|   | | `-MemberExpr 0x55b05e2c82b0 <col:2> 'String::rep_t' lvalue ->_r 0x55b05e2c26f0
|   | |   `-CXXThisExpr 0x55b05e2c82a0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55b05e2c8330 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b05e2c8310 <col:12> 'const char *' lvalue ParmVar 0x55b05e2c2758 'data' 'const char *'
|   |-BinaryOperator 0x55b05e2c8410 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55b05e2c83a8 <col:2, col:5> 'int' lvalue .length 0x55b05e2c25e8
|   | | `-MemberExpr 0x55b05e2c8378 <col:2> 'String::rep_t' lvalue ->_r 0x55b05e2c26f0
|   | |   `-CXXThisExpr 0x55b05e2c8368 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55b05e2c83f8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b05e2c83d8 <col:14> 'int' lvalue ParmVar 0x55b05e2c27d8 'length' 'int'
|   `-IfStmt 0x55b05e2c86b8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55b05e2c8530 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55b05e2c8518 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55b05e2c84f8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55b05e2c84d8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55b05e2c8470 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55b05e2c2678
|     |       | `-MemberExpr 0x55b05e2c8440 <col:7> 'String::rep_t' lvalue ->_r 0x55b05e2c26f0
|     |       |   `-CXXThisExpr 0x55b05e2c8430 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55b05e2c84c0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55b05e2c84a0 <col:17> 'String::memo_t *' lvalue ParmVar 0x55b05e2c2850 'memo' 'String::memo_t *'
|     `-CallExpr 0x55b05e2c8690 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55b05e2c8678 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b05e2c8580 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55b05e2b1368 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55b05e2c85e8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55b05e2c1f48
|         `-ImplicitCastExpr 0x55b05e2c85d0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55b05e2c85b0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55b05e2c2850 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55b05e2c2be8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55b05e2c2a08 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55b05e2c2a88 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55b05e2c2b00 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55b05e2c26f0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55b05e2c8b58 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b05e2c8ce8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55b05e2c8c50 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55b05e2c8bc0 <col:2> '<bound member function type>' ->assign_memo 0x55b05e2c2938
|     | `-ImplicitCastExpr 0x55b05e2c8c88 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55b05e2c8bb0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55b05e2c8ca0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b05e2c8bf0 <col:14> 'const char *' lvalue ParmVar 0x55b05e2c2a08 'data' 'const char *'
|     |-ImplicitCastExpr 0x55b05e2c8cb8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b05e2c8c10 <col:20> 'int' lvalue ParmVar 0x55b05e2c2a88 'length' 'int'
|     `-ImplicitCastExpr 0x55b05e2c8cd0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55b05e2c8c30 <col:28> 'String::memo_t *' lvalue ParmVar 0x55b05e2c2b00 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55b05e2c2d78 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55b05e2c2cb8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55b05e2c8f40 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55b05e2c8ec0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55b05e2c8d10 <col:2> '<bound member function type>' ->assign_memo 0x55b05e2c2938
|     | `-CXXThisExpr 0x55b05e2c8d00 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55b05e2c8ef8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55b05e2c8d90 <col:14, col:19> 'const char *' lvalue .data 0x55b05e2c2580
|     |   `-MemberExpr 0x55b05e2c8d60 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55b05e2c26f0
|     |     `-DeclRefExpr 0x55b05e2c8d40 <col:14> 'const String' lvalue ParmVar 0x55b05e2c2cb8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55b05e2c8f10 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55b05e2c8e10 <col:25, col:30> 'int' lvalue .length 0x55b05e2c25e8
|     |   `-MemberExpr 0x55b05e2c8de0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55b05e2c26f0
|     |     `-DeclRefExpr 0x55b05e2c8dc0 <col:25> 'const String' lvalue ParmVar 0x55b05e2c2cb8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55b05e2c8f28 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55b05e2c8e90 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55b05e2c2678
|         `-MemberExpr 0x55b05e2c8e60 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55b05e2c26f0
|           `-DeclRefExpr 0x55b05e2c8e40 <col:38> 'const String' lvalue ParmVar 0x55b05e2c2cb8 'x' 'const String &'
|-CXXMethodDecl 0x55b05e2c2e40 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55b05e2c9900 <col:31, line:278:5>
|   `-IfStmt 0x55b05e2c98e8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55b05e2c8fe0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55b05e2c8fc8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55b05e2c8f98 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55b05e2c2678
|     |     `-MemberExpr 0x55b05e2c8f68 <col:6> 'String::rep_t' lvalue ->_r 0x55b05e2c26f0
|     |       `-CXXThisExpr 0x55b05e2c8f58 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55b05e2c98c0 <col:15, line:277:2>
|       |-ParenExpr 0x55b05e2c9490 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55b05e2c9460 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55b05e2c90f0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55b05e2c90d8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55b05e2c90c0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55b05e2c9080 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55b05e2c1f48
|       |   |       `-ImplicitCastExpr 0x55b05e2c9068 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55b05e2c9038 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55b05e2c2678
|       |   |           `-MemberExpr 0x55b05e2c9008 <col:27> 'String::rep_t' lvalue ->_r 0x55b05e2c26f0
|       |   |             `-CXXThisExpr 0x55b05e2c8ff8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55b05e2c9150 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55b05e2c9130 <col:54> 'int' 0
|       |   `-CallExpr 0x55b05e2c93c0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55b05e2c93a8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55b05e2c9328 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55b05e2c9400 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55b05e2c9238 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55b05e2c9418 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55b05e2c9268 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55b05e2c9430 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55b05e2c92a0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55b05e2c9448 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55b05e2c9310 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55b05e2c92f8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55b05e2c92c0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55b05e2c97e0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55b05e2c96a0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55b05e2c9688 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55b05e2c9600 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55b05e2b27b0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55b05e2c95d0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55b05e2c1f48
|       | |   `-ImplicitCastExpr 0x55b05e2c95b8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55b05e2c9588 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55b05e2c2678
|       | |       `-MemberExpr 0x55b05e2c9558 <col:40> 'String::rep_t' lvalue ->_r 0x55b05e2c26f0
|       | |         `-CXXThisExpr 0x55b05e2c9548 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55b05e2c97a0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55b05e2c9788 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55b05e2c96c8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55b05e2c7620 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55b05e2c97c8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55b05e2c9728 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55b05e2c2678
|       |       `-MemberExpr 0x55b05e2c96f8 <col:15> 'String::rep_t' lvalue ->_r 0x55b05e2c26f0
|       |         `-CXXThisExpr 0x55b05e2c96e8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55b05e2c98a0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55b05e2c9838 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55b05e2c2678
|         | `-MemberExpr 0x55b05e2c9808 <col:6> 'String::rep_t' lvalue ->_r 0x55b05e2c26f0
|         |   `-CXXThisExpr 0x55b05e2c97f8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55b05e2c9888 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55b05e2c9868 <col:16> 'int' 0
|-CXXMethodDecl 0x55b05e2c30d8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55b05e2c2ef8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55b05e2c2f78 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55b05e2c2ff0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55b05e2c31b0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55b05e2c3400 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55b05e2c3268 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55b05e2c32e8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55b05e2c3360 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55b05e2c35e8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55b05e2c34d0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55b05e2c3550 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55b05e2c36e8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55b05e2c99d8 <col:41, line:286:5>
|   `-ReturnStmt 0x55b05e2c99c8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55b05e2c9998 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55b05e2c9960 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55b05e2c9948 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55b05e2c9928 <col:46> 'int' 1
|-CXXMethodDecl 0x55b05e2c3988 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55b05e2c37a0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55b05e2c3820 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55b05e2c38a0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55b05e2c7620 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55b05e2c3a50 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55b05e2c76f0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55b05e2c78c0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55b05e2c77a8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55b05e2c7828 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55b05e2c7980 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55b05e2c7a48 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55b05e2c7b48 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55b05e2c7bc0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55b05e2c7c38 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55b05e2c7ca0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55b05e2c7da0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55b05e2c7df0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e2c7d80 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55b05e2c7d60 <col:22> 'int' 14
|-CXXMethodDecl 0x55b05e2c8008 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55b05e2c7e20 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55b05e2c7ea0 <col:38> col:41 'int'
| `-ParmVarDecl 0x55b05e2c7f20 <col:43> col:46 'int'
|-FriendDecl 0x55b05e2c8110 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55b05e2c81a0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b05e5536a0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55b05e553878 prev 0x55b05e5536a0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b05e553908 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b05e553930 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b05df8c370 'int'
|-TypedefDecl 0x55b05e555290 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55b05e555240 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55b05e555220 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55b05e553b48 'type'
|     `-SubstTemplateTypeParmType 0x55b05e553b10 'String' sugar
|       |-TemplateTypeParmType 0x55b05e27cba0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b05e27cb50 'T'
|       `-RecordType 0x55b05e2b9390 'String'
|         `-CXXRecord 0x55b05e2b9300 'String'
|-TypedefDecl 0x55b05e555348 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55b05e555310 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55b05e5552f0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55b05e555290 'type'
|     `-ElaboratedType 0x55b05e555240 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55b05e555220 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55b05e553b48 'type'
|         `-SubstTemplateTypeParmType 0x55b05e553b10 'String' sugar
|           |-TemplateTypeParmType 0x55b05e27cba0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b05e27cb50 'T'
|           `-RecordType 0x55b05e2b9390 'String'
|             `-CXXRecord 0x55b05e2b9300 'String'
|-CXXMethodDecl 0x55b05e5554e8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55b05e5553d8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55b05e5555d8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b05e5556b8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55b05e5556b8
|-CXXMethodDecl 0x55b05e555988 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55b05e555890 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55b05e555bc8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55b05e555a40 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b05e555ab8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b05e555d98 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55b05e555c88 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b05e555d00 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b05e555ef8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55b05e555fc8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55b05e556218 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55b05e556088 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55b05e556100 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b05e556478 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55b05e5562e8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55b05e556360 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b05e556638 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55b05e556548 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b05e5567f8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55b05e556700 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b05e5568b0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b05e556960 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b05e556b98 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55b05e556a10 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b05e556a88 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b05e556e38 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55b05e556d40 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55b05e556f00 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55b05e556f50 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b05e556fa0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b05e4f0b30 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55b05e552108 prev 0x55b05e4f0b30 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b05e553610 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55b05e5535c0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55b05e5535a0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55b05e553450 'type'
|     `-SubstTemplateTypeParmType 0x55b05e5532e0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55b05e252950 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55b05e2528f8 'F'
|       `-RecordType 0x55b05e552f40 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55b05e552e60 'typed_array_memory'
|-FieldDecl 0x55b05e556ff0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55b05e557040 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b05e557078 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55b05e5521a0 'String' sugar
|   |-TemplateTypeParmType 0x55b05e289ec0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b05e289e68 'T'
|   `-RecordType 0x55b05e2b9390 'String'
|     `-CXXRecord 0x55b05e2b9300 'String'
|-TypedefDecl 0x55b05e557108 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55b05e5570d0 'String &'
|   `-SubstTemplateTypeParmType 0x55b05e5521a0 'String' sugar
|     |-TemplateTypeParmType 0x55b05e289ec0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b05e289e68 'T'
|     `-RecordType 0x55b05e2b9390 'String'
|       `-CXXRecord 0x55b05e2b9300 'String'
|-TypedefDecl 0x55b05e557198 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55b05e557160 'const String &'
|   `-QualType 0x55b05e5521a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55b05e5521a0 'String' sugar
|       |-TemplateTypeParmType 0x55b05e289ec0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b05e289e68 'T'
|       `-RecordType 0x55b05e2b9390 'String'
|         `-CXXRecord 0x55b05e2b9300 'String'
|-TypedefDecl 0x55b05e557228 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55b05e5571f0 'String *'
|   `-SubstTemplateTypeParmType 0x55b05e5521a0 'String' sugar
|     |-TemplateTypeParmType 0x55b05e289ec0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b05e289e68 'T'
|     `-RecordType 0x55b05e2b9390 'String'
|       `-CXXRecord 0x55b05e2b9300 'String'
|-TypedefDecl 0x55b05e5572b8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55b05e557280 'const String *'
|   `-QualType 0x55b05e5521a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55b05e5521a0 'String' sugar
|       |-TemplateTypeParmType 0x55b05e289ec0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b05e289e68 'T'
|       `-RecordType 0x55b05e2b9390 'String'
|         `-CXXRecord 0x55b05e2b9300 'String'
|-TypedefDecl 0x55b05e557f10 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55b05e557ec0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55b05e557ea0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55b05e557dd8 'type'
|     `-LValueReferenceType 0x55b05e557da0 'const String &'
|       `-QualType 0x55b05e557b41 'const String' const
|         `-SubstTemplateTypeParmType 0x55b05e557b40 'String' sugar
|           |-TemplateTypeParmType 0x55b05e25c8a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b05e25c848 'T'
|           `-RecordType 0x55b05e2b9390 'String'
|             `-CXXRecord 0x55b05e2b9300 'String'
|-TypedefDecl 0x55b05e557f78 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55b05e557160 'const String &'
|   `-QualType 0x55b05e5521a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55b05e5521a0 'String' sugar
|       |-TemplateTypeParmType 0x55b05e289ec0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b05e289e68 'T'
|       `-RecordType 0x55b05e2b9390 'String'
|         `-CXXRecord 0x55b05e2b9300 'String'
|-TypedefDecl 0x55b05e557fd0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b05df8c370 'int'
|-TypedefDecl 0x55b05e558038 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55b05e5571f0 'String *'
|   `-SubstTemplateTypeParmType 0x55b05e5521a0 'String' sugar
|     |-TemplateTypeParmType 0x55b05e289ec0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b05e289e68 'T'
|     `-RecordType 0x55b05e2b9390 'String'
|       `-CXXRecord 0x55b05e2b9300 'String'
|-TypedefDecl 0x55b05e5580a0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55b05e557280 'const String *'
|   `-QualType 0x55b05e5521a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55b05e5521a0 'String' sugar
|       |-TemplateTypeParmType 0x55b05e289ec0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b05e289e68 'T'
|       `-RecordType 0x55b05e2b9390 'String'
|         `-CXXRecord 0x55b05e2b9300 'String'
|-EnumDecl 0x55b05e5580f8 <line:134:5> col:5
| `-EnumConstantDecl 0x55b05e5581f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b05e5581d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b05e28b548 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b05e28b520 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b05e28b500 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b05e558278 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b05e558508 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55b05e558330 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b05e5583d0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55b05e558798 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55b05e558680 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55b05e558a58 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55b05e558940 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55b05e558d70 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55b05e558c50 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55b05e559080 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55b05e558f60 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55b05e559370 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55b05e5591b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b05e559230 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55b05e559498 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55b05e559548 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b05e5595a0 <col:30> Inherited
|-CXXMethodDecl 0x55b05e5595e8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55b05e559698 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b05e5596f0 <col:30> Inherited
|-CXXMethodDecl 0x55b05e5597b8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55b05e559868 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b05e5598c0 <col:30> Inherited
|-CXXMethodDecl 0x55b05e559908 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55b05e5599b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b05e559a10 <col:30> Inherited
|-CXXMethodDecl 0x55b05e559a58 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55b05e559b08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b05e559b60 <col:30> Inherited
|-CXXMethodDecl 0x55b05e559ba8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55b05e559c58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b05e559cb0 <col:30> Inherited
|-CXXMethodDecl 0x55b05e559cd8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b05e559d88 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b05e559e38 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b05e559ff8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55b05e559ee8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b05e559f60 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55b05e55a148 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b05e55a0b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b05e55a2f8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55b05e55a200 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b05e55a3b0 <col:20>
| `-OptimizeNoneAttr 0x55b05e55a408 <col:30>
|-CXXMethodDecl 0x55b05e55a528 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55b05e55a430 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b05e55a5e0 <col:20>
| `-OptimizeNoneAttr 0x55b05e55a638 <col:30>
|-CXXMethodDecl 0x55b05e55a6f0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b05e55a660 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b05e55a838 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b05e55a7a8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b05e55a968 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55b05e55aa68 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55b05e55ab38 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55b05e55ac08 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55b05e55ad48 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b05e55acb8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b05e55ae90 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b05e55ae00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b05e55afd8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b05e55af48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b05e55b090 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b05e55b190 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b05e55b100 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b05e55b248 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b05e55b308 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55b05e55b408 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55b05e55b588 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55b05e55b4c8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55b05e55bd48 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b05e55b640 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55b05e55bca8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55b05e55bba8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55b05e55be28 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b05e55bf78 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55b05e55bee8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55b05e55c030 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b05e55c278 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55b05e55c0f0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55b05e55c168 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55b05e55c408 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55b05e55c348 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55b05e55c618 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55b05e55c4d0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55b05e55c548 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55b05e55c6d8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55b05e55c938 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55b05e55c840 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55b05e55ca08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b05e55ca08

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e5d47c8 prev 0x55b05e567618 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b05e5d48c0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55b05e5d4950 <col:22, col:28> col:22 public
|-EnumDecl 0x55b05e5d4978 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55b05e5d4a98 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b05e5d4a78 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55b05e5d4a60 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b05e5d4a40 <col:14> 'int' 999
| |-EnumConstantDecl 0x55b05e5d4b40 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b05e5d4b20 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55b05e5d4b08 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b05e5d4ae8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55b05e5d4bd0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b05e5d4bb0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55b05e5d4b90 <col:17> 'int' 0
| |-EnumConstantDecl 0x55b05e5d4c60 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b05e5d4c40 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55b05e5d4c20 <col:13> 'int' 1
| |-EnumConstantDecl 0x55b05e5d4cf0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b05e5d4cd0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55b05e5d4cb0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55b05e5d4d80 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b05e5d4d60 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55b05e5d4d40 <col:13> 'int' 3
| |-EnumConstantDecl 0x55b05e5d4e10 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b05e5d4df0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55b05e5d4dd0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55b05e5d4ea0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b05e5d4e80 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55b05e5d4e60 <col:14> 'int' 5
| |-EnumConstantDecl 0x55b05e5d4f30 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b05e5d4f10 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55b05e5d4ef0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55b05e5d4fc0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55b05e5d4fa0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55b05e5d4f80 <col:13> 'int' 7
|-VarDecl 0x55b05e5d5030 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55b05e5d50b8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55b05e5d5140 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55b05e5d51c8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55b05e5d5250 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55b05e5d52d8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55b05e5d5360 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55b05e5d53e8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55b05e5d5470 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55b05e5d54f8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55b05e5d5580 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55b05e5d5680 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55b05e5daa08 '_nerrors' 'int'
| | `-IntegerLiteral 0x55b05e5db198 <line:128:13> 'int' 0
| `-CompoundStmt 0x55b05e5db208 <col:16, line:129:5>
|-CXXDestructorDecl 0x55b05e5d5770 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55b05e5db218 <col:29, line:132:5>
|-CXXMethodDecl 0x55b05e5d5928 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55b05e5d5860 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b05e5d59f0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55b05e5d5ad8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55b05e5db270 <col:44, line:161:5>
|   `-ReturnStmt 0x55b05e5db260 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55b05e5db248 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55b05e5db228 <col:9> 'ErrorHandler *' lvalue Var 0x55b05e5daa68 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55b05e5d5c18 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55b05e5d5b88 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b05e5d5ce0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55b05e5db2d0 <col:43, line:173:5>
|   `-ReturnStmt 0x55b05e5db2c0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55b05e5db2a8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55b05e5db288 <col:9> 'ErrorHandler *' lvalue Var 0x55b05e5daae0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55b05e5d5d98 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55b05e5d5e18 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55b05e5d5f28 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55b05e5d5e98 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d6078 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55b05e5d5fe8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d61d0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55b05e5d6138 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d6328 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55b05e5d6290 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d6480 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55b05e5d63e8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d6690 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b05e5d6538 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55b05e5d65b8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d6868 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b05e5d6750 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55b05e5d67d0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d6a88 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b05e5d6928 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55b05e5d69a8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d6c68 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b05e5d6b48 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55b05e5d6bc8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d6e48 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b05e5d6d28 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55b05e5d6da8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d6fd0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55b05e5d6f08 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55b05e5d71a0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55b05e5d7088 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55b05e5d7100 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55b05e5db528 <col:57, line:234:5>
|   `-ReturnStmt 0x55b05e5db518 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55b05e5db500 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55b05e5db4a8 <col:9, col:41> 'int'
|         |-MemberExpr 0x55b05e5db478 <col:9> '<bound member function type>' ->xmessage 0x55b05e5d6fd0
|         | `-CXXThisExpr 0x55b05e5db468 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55b05e5db4e8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55b05e5db4d0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55b05e5db448 <col:18, col:40> 'String' (CXXTemporary 0x55b05e5db448)
|               `-CallExpr 0x55b05e5db410 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55b05e5db3f8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55b05e5db370 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55b05e5d9198 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55b05e5db390 <col:31> 'const String' lvalue ParmVar 0x55b05e5d7100 'str' 'const String &'
|                 `-DeclRefExpr 0x55b05e5db3b0 <col:36> 'const String' lvalue ParmVar 0x55b05e5d7088 'anno' 'const String &'
|-CXXMethodDecl 0x55b05e5d7480 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55b05e5d7260 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55b05e5d72e0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55b05e5d7358 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55b05e5db7b8 <col:68, line:243:5>
|   `-ReturnStmt 0x55b05e5db7a8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55b05e5db790 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55b05e5db730 <col:9, col:41> 'int'
|         |-MemberExpr 0x55b05e5db700 <col:9> '<bound member function type>' ->xmessage 0x55b05e5d71a0
|         | `-CXXThisExpr 0x55b05e5db6f0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55b05e5db5c8 <col:18> 'const String' lvalue ParmVar 0x55b05e5d7260 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55b05e5db778 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55b05e5db760 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55b05e5db6d0 <col:24, col:40> 'String' (CXXTemporary 0x55b05e5db6d0)
|               `-CXXMemberCallExpr 0x55b05e5db668 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55b05e5db5f8 <col:24> '<bound member function type>' ->vformat 0x55b05e5d8660
|                 | `-CXXThisExpr 0x55b05e5db5e8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55b05e5db698 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55b05e5db628 <col:32> 'const char *' lvalue ParmVar 0x55b05e5d72e0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55b05e5db6b0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55b05e5db648 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55b05e5d7358 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b05e5d7720 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55b05e5d7548 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55b05e5d75c0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55b05e5d7638 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55b05e5dbaf8 <col:23, line:254:5>
|   `-ReturnStmt 0x55b05e5dbae8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55b05e5dbad0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55b05e5dba70 <col:9, col:71> 'int'
|         |-MemberExpr 0x55b05e5dba40 <col:9> '<bound member function type>' ->xmessage 0x55b05e5d71a0
|         | `-CXXThisExpr 0x55b05e5dba30 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55b05e5dbab8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55b05e5dbaa0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55b05e5db9f0 <col:18, col:65> 'String' (CXXTemporary 0x55b05e5db9f0)
|         |     `-CallExpr 0x55b05e5db988 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55b05e5db970 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55b05e5db858 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55b05e5d9198 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55b05e5db878 <col:31> 'const String' lvalue ParmVar 0x55b05e5d75c0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55b05e5db9d0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55b05e5db9b8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55b05e5db950 <col:37, col:64> 'String' (CXXTemporary 0x55b05e5db950)
|         |             `-CallExpr 0x55b05e5db920 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55b05e5db908 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55b05e5db898 <col:37> 'String (const String &)' lvalue CXXMethod 0x55b05e5d9880 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55b05e5db8b8 <col:56> 'const String' lvalue ParmVar 0x55b05e5d7548 'landmark' 'const String &'
|         `-DeclRefExpr 0x55b05e5dba10 <col:68> 'const String' lvalue ParmVar 0x55b05e5d7638 'str' 'const String &'
|-CXXMethodDecl 0x55b05e5d7aa0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55b05e5d77e8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55b05e5d7860 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55b05e5d78e0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55b05e5d7958 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55b05e5dbdb0 <col:34, line:267:5>
|   `-ReturnStmt 0x55b05e5dbda0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55b05e5dbd88 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55b05e5dbd20 <col:9, col:51> 'int'
|         |-MemberExpr 0x55b05e5dbcf0 <col:9> '<bound member function type>' ->xmessage 0x55b05e5d7720
|         | `-CXXThisExpr 0x55b05e5dbce0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55b05e5dbb98 <col:18> 'const String' lvalue ParmVar 0x55b05e5d77e8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55b05e5dbbb8 <col:28> 'const String' lvalue ParmVar 0x55b05e5d7860 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55b05e5dbd70 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55b05e5dbd58 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55b05e5dbcc0 <col:34, col:50> 'String' (CXXTemporary 0x55b05e5dbcc0)
|               `-CXXMemberCallExpr 0x55b05e5dbc58 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55b05e5dbbe8 <col:34> '<bound member function type>' ->vformat 0x55b05e5d8660
|                 | `-CXXThisExpr 0x55b05e5dbbd8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55b05e5dbc88 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55b05e5dbc18 <col:42> 'const char *' lvalue ParmVar 0x55b05e5d78e0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55b05e5dbca0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55b05e5dbc38 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55b05e5d7958 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b05e5d7bb0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55b05e5dbe30 <col:25, line:288:5>
|   `-ReturnStmt 0x55b05e5dbe20 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55b05e5dbe08 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55b05e5dbdd8 <col:9> 'const int' lvalue ->_nerrors 0x55b05e5daa08
|         `-CXXThisExpr 0x55b05e5dbdc8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55b05e5d7dc0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55b05e5d7c68 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55b05e5d7ce8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d80a8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55b05e5d7e88 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55b05e5d7f08 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55b05e5d7f80 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b05e5d8240 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55b05e5d8178 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d8488 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55b05e5d8300 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55b05e5d8378 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55b05e5dc090 <col:58, line:357:5>
|   `-ReturnStmt 0x55b05e5dc080 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55b05e5dc068 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55b05e5dc038 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55b05e5dc020 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55b05e5dc000 <col:9, col:29> 'String' (CXXTemporary 0x55b05e5dc000)
|             `-CallExpr 0x55b05e5dbf90 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55b05e5dbf78 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b05e5dbef8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55b05e5d80a8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55b05e5dbe98 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55b05e5dbfc8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55b05e5dbeb8 <col:21> 'const char *' lvalue ParmVar 0x55b05e5d8300 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55b05e5dbfe0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55b05e5dbed8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55b05e5d8378 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b05e5d8660 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55b05e5d8550 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55b05e5d85c8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b05e5d87b8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55b05e5d8728 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55b05e5d8900 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55b05e5d8870 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55b05e5d8ba0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55b05e5d89b8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55b05e5d8a38 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55b05e5d8ab0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55b05e5d8d00 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55b05e5d8c70 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55b05e5dc1a8 <col:37, line:441:5>
|   `-IfStmt 0x55b05e5dc190 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55b05e5dc118 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55b05e5dc0e8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55b05e5dc0a8 <col:6> 'int' lvalue ParmVar 0x55b05e5d8c70 'level' 'int'
|     | `-ImplicitCastExpr 0x55b05e5dc100 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55b05e5dc0c8 <col:15> 'ErrorHandler::Level' EnumConstant 0x55b05e5d4d80 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55b05e5dc178 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55b05e5dc148 <col:8> 'int' lvalue ->_nerrors 0x55b05e5daa08
|         `-CXXThisExpr 0x55b05e5dc138 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55b05e5d8dc8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55b05e5dc240 <col:26, line:448:5>
|   `-BinaryOperator 0x55b05e5dc220 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55b05e5dc1d0 <col:2> 'int' lvalue ->_nerrors 0x55b05e5daa08
|     | `-CXXThisExpr 0x55b05e5dc1c0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55b05e5dc200 <col:13> 'int' 0
|-CXXMethodDecl 0x55b05e5d8f90 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55b05e5d8e80 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55b05e5d8ef8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55b05e5d9198 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55b05e5d9050 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55b05e5d90c8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55b05e5d94e0 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55b05e5d9258 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55b05e5d92d8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55b05e5d9358 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55b05e5d9598 <col:59> 0 0
|-CXXMethodDecl 0x55b05e5d9730 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55b05e5d9610 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55b05e5d9690 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55b05e5dc8b0 <col:70, line:534:5>
|   |-DeclStmt 0x55b05e5dc3b0 <line:528:2, col:20>
|   | |-VarDecl 0x55b05e5dc268 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55b05e5dc2d0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55b05e5dc308 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55b05e5dc370 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55b05e5dc480 <line:529:2, col:23>
|   | `-VarDecl 0x55b05e5dc3e0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55b05e5dc468 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b05e5dc448 <col:18> 'const char *' lvalue ParmVar 0x55b05e5d9610 'begin' 'const char *'
|   |-DoStmt 0x55b05e5dc848 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55b05e5dc778 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55b05e5dc760 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55b05e5dc740 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55b05e5dc498 <col:6> 'const char *' lvalue Var 0x55b05e5dc3e0 'x' 'const char *'
|   | |     `-CallExpr 0x55b05e5dc690 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55b05e5dc678 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55b05e5dc630 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55b05e5daee0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55b05e5dc6f8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55b05e5dc6e0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55b05e5dc550 <col:20, col:27> 'String' (CXXTemporary 0x55b05e5dc550)
|   | |       |     `-CXXTemporaryObjectExpr 0x55b05e5dc518 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55b05e5dc710 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55b05e5dc570 <col:30> 'const char *' lvalue Var 0x55b05e5dc3e0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55b05e5dc728 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55b05e5dc590 <col:33> 'const char *' lvalue ParmVar 0x55b05e5d9690 'end' 'const char *'
|   | |       |-UnaryOperator 0x55b05e5dc5d0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55b05e5dc5b0 <col:39> 'String' lvalue Var 0x55b05e5dc268 'name' 'String'
|   | |       |-UnaryOperator 0x55b05e5dc608 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55b05e5dc5e8 <col:46> 'String' lvalue Var 0x55b05e5dc308 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55b05e5dc620 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55b05e5dc830 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55b05e5dc818 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55b05e5dc7f8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55b05e5dc7c8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55b05e2bcaf8
|   |         `-ImplicitCastExpr 0x55b05e5dc7b0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55b05e5dc790 <col:11> 'String' lvalue Var 0x55b05e5dc268 'name' 'String'
|   `-ReturnStmt 0x55b05e5dc8a0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55b05e5dc888 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55b05e5dc868 <col:9> 'const char *' lvalue Var 0x55b05e5dc3e0 'x' 'const char *'
|-CXXMethodDecl 0x55b05e5d9880 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55b05e5d97f0 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55b05e5dceb8 <col:55, line:550:5>
|   `-IfStmt 0x55b05e5dce90 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55b05e5dcaf0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55b05e5dcad8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55b05e5dcac0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55b05e5dcaa0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55b05e5dca70 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55b05e2bcaf8
|     | |       `-DeclRefExpr 0x55b05e5dc910 <col:6> 'const String' lvalue ParmVar 0x55b05e5d97f0 'x' 'const String &'
|     | `-BinaryOperator 0x55b05e5dca50 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55b05e5dca20 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55b05e5dc9d0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55b05e5dc9b8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55b05e5dc970 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55b05e2d6330 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55b05e5dc930 <col:11> 'const String' lvalue ParmVar 0x55b05e5d97f0 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55b05e5dc950 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55b05e5dca38 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55b05e5dca08 <col:19> 'char' 123
|     |-ReturnStmt 0x55b05e5dcb60 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55b05e5dcb30 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55b05e5dcb10 <col:13> 'const String' lvalue ParmVar 0x55b05e5d97f0 'x' 'const String &'
|     `-IfStmt 0x55b05e5dce68 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55b05e5dcbf8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55b05e5dcbe0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55b05e5dcbc0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55b05e5dcb90 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55b05e2bcaf8
|       |       `-DeclRefExpr 0x55b05e5dcb70 <col:11> 'const String' lvalue ParmVar 0x55b05e5d97f0 'x' 'const String &'
|       |-ReturnStmt 0x55b05e5dcd80 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55b05e5dcd68 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55b05e5dcd38 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55b05e5dcd20 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55b05e5dcd00 <col:13, col:29> 'String' (CXXTemporary 0x55b05e5dcd00)
|       |         `-CallExpr 0x55b05e5dccb0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55b05e5dcc98 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55b05e5dcc10 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55b05e5d8f90 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55b05e5dcce0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55b05e5dcc30 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55b05e5dcc50 <col:28> 'const String' lvalue ParmVar 0x55b05e5d97f0 'x' 'const String &'
|       `-ReturnStmt 0x55b05e5dce58 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55b05e5dce40 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55b05e5dce10 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55b05e5dcdf8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55b05e5dcdd8 <col:13, col:20> 'String' (CXXTemporary 0x55b05e5dcdd8)
|                 `-CXXTemporaryObjectExpr 0x55b05e5dcda0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55b05e5d9a48 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55b05e5d9938 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55b05e5d99b0 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b05e5db188 <col:71> 'bool' false
|-CXXRecordDecl 0x55b05e5d9af8 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55b05e5d9df8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55b05e5d9d90 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55b05e5d9d30 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55b05e5d9cf0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55b05e2b9390 'String'
|       | `-CXXRecord 0x55b05e2b9300 'String'
|       |-BuiltinType 0x55b05df8c370 'int'
|       `-DecayedType 0x55b05e568660 '__va_list_tag *' sugar
|         |-TypedefType 0x55b05e568630 'va_list' sugar
|         | |-Typedef 0x55b05e1aa440 'va_list'
|         | `-TypedefType 0x55b05e1aa3f0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55b05e0e2018 '__gnuc_va_list'
|         |   `-TypedefType 0x55b05e0e1f80 '__builtin_va_list' sugar
|         |     |-Typedef 0x55b05dfcdbd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55b05dfcdb80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55b05df8d0c0 '__va_list_tag'
|         |         `-CXXRecord 0x55b05df8d028 '__va_list_tag'
|         `-PointerType 0x55b05e1afce0 '__va_list_tag *'
|           `-RecordType 0x55b05df8d0c0 '__va_list_tag'
|             `-CXXRecord 0x55b05df8d028 '__va_list_tag'
|-EnumDecl 0x55b05e5d9e50 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55b05e5d9f50 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b05e5da4b0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e5d9f30 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55b05e5d9f10 <col:16> 'int' 1
| |-EnumConstantDecl 0x55b05e5d9fe0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b05e5da4c8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e5d9fc0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55b05e5d9fa0 <col:21> 'int' 2
| |-EnumConstantDecl 0x55b05e5da070 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b05e5da4e0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e5da050 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55b05e5da030 <col:22> 'int' 4
| |-EnumConstantDecl 0x55b05e5da100 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b05e5da4f8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e5da0e0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55b05e5da0c0 <col:17> 'int' 8
| |-EnumConstantDecl 0x55b05e5da190 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b05e5da510 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e5da170 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55b05e5da150 <col:22> 'int' 16
| |-EnumConstantDecl 0x55b05e5da220 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b05e5da528 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e5da200 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55b05e5da1e0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55b05e5da2b0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b05e5da540 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e5da290 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55b05e5da270 <col:17> 'int' 64
| |-EnumConstantDecl 0x55b05e5da340 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b05e5da558 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e5da320 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55b05e5da300 <col:14> 'int' 128
| |-EnumConstantDecl 0x55b05e5da3d0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b05e5da570 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e5da3b0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55b05e5da390 <col:16> 'int' 256
| `-EnumConstantDecl 0x55b05e5da460 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55b05e5da588 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e5da440 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55b05e5da420 <col:12> 'int' 1024
|-CXXMethodDecl 0x55b05e5da798 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55b05e5da5b0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55b05e5da650 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55b05e5da920 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55b05e5da858 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55b05e5da9c8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55b05e5daa08 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55b05e5daa68 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55b05e5daae0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55b05e5daee0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55b05e5dab58 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55b05e5dabd8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55b05e5dac58 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55b05e5dacd0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55b05e5dad48 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55b05e5dadc0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55b05e5db008 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55b05e5db008
| `-ParmVarDecl 0x55b05e5db118 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55b05e5dd218 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55b05e5dd218
  `-ParmVarDecl 0x55b05e5dd328 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e2ac9a0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b05e2acab8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55b05e2acb48 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55b05e2acc18 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55b05e2acd00 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55b05e2acf18 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55b05e2acdc0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e2ad0c8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55b05e2acfd0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55b05e2ad210 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55b05e2ad180 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55b05e2ad358 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55b05e2ad2c8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e2ad4a0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55b05e2ad410 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e2ad568 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55b05e2ad6b0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55b05e2ad620 <col:28> col:31 'int'
|-CXXMethodDecl 0x55b05e2ad778 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55b05e2ad8c0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55b05e2ad830 <col:28> col:31 'int'
|-CXXMethodDecl 0x55b05e2ada38 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55b05e2ad978 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e2adb80 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55b05e2adaf0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e2adc48 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55b05e2ade08 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55b05e2adcf8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b05e2add70 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e2ae058 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55b05e2adec8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b05e2adf40 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b05e2ae108 <col:86> "" ""
|-CXXMethodDecl 0x55b05e2ae378 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55b05e2ae1e8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55b05e2ae260 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e2ae528 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55b05e2ae438 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55b05e2ae6d8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55b05e2ae5e0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55b05e2ae9a8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55b05e2ae790 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55b05e2ae808 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b05e2ae880 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e2aec88 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55b05e2aea70 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55b05e2aeae8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b05e2aeb60 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b05e2aed40 <col:115> "" ""
|-AccessSpecDecl 0x55b05e2aedb0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55b05e2aede8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e2b0300 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55b05e2b0300
| `-ParmVarDecl 0x55b05e2b0408 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55b05e2b04a8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55b05e2b04a8
| `-ParmVarDecl 0x55b05e2b05b8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55b05e2e5be8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b05e4d79e0 <col:7>
|-CXXConstructorDecl 0x55b05e2e5cc0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55b05e2e5cc0
| `-ParmVarDecl 0x55b05e2e5dd8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55b05e2e5e48 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55b05e2e5e48
| `-ParmVarDecl 0x55b05e2e5f58 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55b05e4da3e0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e4c6588 prev 0x55b05e4bb790 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b05e4c6680 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55b05e4c6770 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55b05e4c6898 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55b05e4c6a18 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55b05e4c6b98 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55b05e4c6d18 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55b05e4d7b48 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b05e4d83b8 <col:11>
|-CXXDestructorDecl 0x55b05e4d7c20 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55b05e4d7d58 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55b05e4d7d58
| `-ParmVarDecl 0x55b05e4d7e68 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55b05e4d7f08 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b05e4d7f08
| `-ParmVarDecl 0x55b05e4d8018 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55b05e4dadd8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b05e4daee8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55b05e4db168 <col:11>
|   `-ReturnStmt 0x55b05e4db158 <col:11>
|     `-UnaryOperator 0x55b05e4db140 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b05e4db130 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55b05e4daf58 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b05e4daf58
  `-ParmVarDecl 0x55b05e4db068 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e4c6d80 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b05e4c6e98 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55b05e4c6f38 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55b05e4c6fa0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55b05e4c7008 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55b05e4c7070 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55b05e4c70d0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55b05e4c7190 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55b05e4c71f0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55b05e4c7250 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55b05e4d7a58 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55b05e4c6f38 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55b05e4d83c8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55b05e4d8420 <col:12>
|-CXXConstructorDecl 0x55b05e4d8088 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55b05e4d8088
| `-ParmVarDecl 0x55b05e4d8198 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55b05e4d8238 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55b05e4d8238
| `-ParmVarDecl 0x55b05e4d8348 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55b05e4da4c0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e4b4ea0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b05e4b4fb8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55b05e4b5048 <col:16, col:22> col:16 public
|-EnumDecl 0x55b05e4b5070 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55b05e4b5170 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55b05e4b5250 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4b5150 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55b05e4b5130 <col:21> 'int' 28
| `-EnumConstantDecl 0x55b05e4b5200 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55b05e4b5268 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e4b51e0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55b05e4b51c0 <col:22> 'int' 64
|-CXXMethodDecl 0x55b05e4b55a8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55b05e4b5290 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b05e4b5310 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55b05e4b5388 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b05e4b5400 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b05e4b5668 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55b05e4b5868 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55b05e4b56e0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55b05e4b5758 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b05e4b5918 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55b05e4b5a78 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55b05e4b5988 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b05e4b5b20 <col:72> warn_unused_result ""
|-TypedefDecl 0x55b05e4b5e80 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55b05e4b5e10 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55b05e4b5db0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55b05e4b5d70 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55b05df8c2d0 'void'
|       |-PointerType 0x55b05e235240 'unsigned char *'
|       | `-BuiltinType 0x55b05df8c3d0 'unsigned char'
|       |-TypedefType 0x55b05e0317b0 'size_t' sugar
|       | |-Typedef 0x55b05dffcb20 'size_t'
|       | `-BuiltinType 0x55b05df8c430 'unsigned long'
|       `-PointerType 0x55b05df8cad0 'void *'
|         `-BuiltinType 0x55b05df8c2d0 'void'
|-CXXMethodDecl 0x55b05e4b62f8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55b05e4b5ef0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55b05e4b5f68 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b05e4b6000 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55b05e4b6080 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55b05e4d09f0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55b05e4d09d8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55b05e4d09a0 <col:58> 'int' 0
| |-ParmVarDecl 0x55b05e4b6100 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55b05e4d0a18 <col:76> 'int' 0
| |-ParmVarDecl 0x55b05e4b6180 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55b05e4d0a38 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55b05e4b63c8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55b05e4b6448 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55b05e4b6508 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55b05e4b65a8 <col:20>
| `-OptimizeNoneAttr 0x55b05e4b6600 <col:30>
|-CXXMethodDecl 0x55b05e4b6678 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55b05e4b6718 <col:20>
| `-OptimizeNoneAttr 0x55b05e4b6770 <col:30>
|-CXXMethodDecl 0x55b05e4b67e8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55b05e4b6888 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55b05e4b6938 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55b05e4b69d8 <col:20>
| |-OptimizeNoneAttr 0x55b05e4b6a30 <col:30>
| `-WarnUnusedResultAttr 0x55b05e4b6a58 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55b05e4b6ab0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55b05e4b6b50 <col:20>
| `-OptimizeNoneAttr 0x55b05e4b6ba8 <col:30>
|-CXXMethodDecl 0x55b05e4b6bf8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55b05e4b6c98 <col:20>
| `-OptimizeNoneAttr 0x55b05e4b6cf0 <col:30>
|-CXXMethodDecl 0x55b05e4b6d38 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55b05e4b6dd8 <col:20>
| `-OptimizeNoneAttr 0x55b05e4b6e30 <col:30>
|-CXXMethodDecl 0x55b05e4b6e78 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55b05e4b6f38 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55b05e4b7000 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b05e4b70c8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b05e4b7188 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b05e4b72a8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55b05e4d0b00 <col:54, line:99:5>
|   `-ReturnStmt 0x55b05e4d0af0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55b05e4d0ad8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55b05e4d0aa8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55b05e4c7588
|         `-CXXThisExpr 0x55b05e4d0a98 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55b05e4b7448 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55b05e4b7358 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55b05e4d0bb0 <col:67, line:103:5>
|   `-BinaryOperator 0x55b05e4d0b90 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55b05e4d0b28 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55b05e4c7588
|     | `-CXXThisExpr 0x55b05e4d0b18 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55b05e4d0b78 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55b05e4d0b58 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55b05e4b7358 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55b05e4b7540 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55b05e4d0c30 <col:33, line:107:5>
|   `-ReturnStmt 0x55b05e4d0c20 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55b05e4d0c08 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55b05e4d0bd8 <col:16> 'void *' lvalue ->_destructor_argument 0x55b05e4c75f0
|         `-CXXThisExpr 0x55b05e4d0bc8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55b05e4b7600 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55b05e4d1260 <col:25, line:113:5>
|   |-ParenExpr 0x55b05e4d0fa8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55b05e4d0f78 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d0ce8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55b05e4d0cc0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55b05e4d0c88 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55b05e4d0c58 <col:24> '<bound member function type>' ->shared 0x55b05e4b6678
|   |   |       `-ImplicitCastExpr 0x55b05e4d0ca8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55b05e4d0c48 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55b05e4d0d48 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d0d28 <col:42> 'int' 0
|   |   `-CallExpr 0x55b05e4d0ed8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d0ec0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d0ea0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d0f18 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d0db8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55b05e4d0f30 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d0de0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d0f48 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d0e18 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55b05e4d0f60 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d0e88 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d0e70 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d0e38 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55b05e4d11a8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55b05e4d0fd8 <col:2> 'unsigned char *' lvalue ->_head 0x55b05e4c7390
|   | | `-CXXThisExpr 0x55b05e4d0fc8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55b05e4d1190 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55b05e4d1170 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55b05e4d1018 <col:10> 'unsigned char *' lvalue ->_data 0x55b05e4c73f8
|   |     | `-CXXThisExpr 0x55b05e4d1008 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55b05e4d1158 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55b05e4d1138 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55b05e4d1058 <col:18> 'unsigned char *' lvalue ->_tail 0x55b05e4c7460
|   |         | `-CXXThisExpr 0x55b05e4d1048 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55b05e4d1120 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55b05e4d1100 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55b05e4d1098 <col:26> 'unsigned char *' lvalue ->_end 0x55b05e4c74c8
|   |             | `-CXXThisExpr 0x55b05e4d1088 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55b05e4d10e8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55b05e4d10c8 <col:33> 'int' 0
|   `-BinaryOperator 0x55b05e4d1240 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55b05e4d11d8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55b05e4c7588
|     | `-CXXThisExpr 0x55b05e4d11c8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55b05e4d1228 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55b05e4d1208 <col:16> 'int' 0
|-CXXMethodDecl 0x55b05e4b7740 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55b05e4b76b0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b05e4b77e8 <col:20>
| |-OptimizeNoneAttr 0x55b05e4b7840 <col:30>
| `-WarnUnusedResultAttr 0x55b05e4b7868 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55b05e4b7938 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55b05e4b78a8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b05e4b79e0 <col:20>
| |-OptimizeNoneAttr 0x55b05e4b7a38 <col:30>
| `-WarnUnusedResultAttr 0x55b05e4b7a60 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55b05e4b7b98 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55b05e4b7aa0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b05e4b7c40 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55b05e4b7d40 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55b05e4b7cb0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b05e4b7de8 <col:20>
| `-OptimizeNoneAttr 0x55b05e4b7e40 <col:30>
|-CXXMethodDecl 0x55b05e4b7f08 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55b05e4b7e78 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b05e4b7fb0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55b05e4b80b0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55b05e4b8020 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b05e4b8158 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55b05e4b8258 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55b05e4b81c8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b05e4b8300 <col:20>
| `-OptimizeNoneAttr 0x55b05e4b8358 <col:30>
|-CXXMethodDecl 0x55b05e4b84e8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55b05e4b8398 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55b05e4b8410 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55b05e4d0a58 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55b05e4b8598 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55b05e4b8798 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55b05e4b8610 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55b05e4b8688 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e4b89a8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55b05e4b8858 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b05e4b88d0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e4b8bb8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55b05e4b8a68 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55b05e4b8ae8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55b05e4d0a68 <col:39> 'int' 0
|-CXXMethodDecl 0x55b05e4b8c88 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55b05e4b8d50 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b05e4b8e18 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b05e4b8ed8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b05e4b8fa0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55b05e4b90e8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55b05e4b9058 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55b05e4b92b8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55b05e4b91a8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55b05e4b9220 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e4b9388 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55b05e4b9448 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55b05e4b94e8 <col:20>
| `-OptimizeNoneAttr 0x55b05e4b9540 <col:30>
|-CXXMethodDecl 0x55b05e4b9590 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55b05e4b9630 <col:20>
| `-OptimizeNoneAttr 0x55b05e4b9688 <col:30>
|-CXXMethodDecl 0x55b05e4b96d8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b05e4b9798 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b05e4b9860 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55b05e4b9900 <col:20>
| `-OptimizeNoneAttr 0x55b05e4b9958 <col:30>
|-CXXMethodDecl 0x55b05e4b9aa8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55b05e4b9998 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55b05e4b9a10 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e4b9bf8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55b05e4b9b68 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e4b9cd0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55b05e4b9d90 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55b05e4b9e30 <col:20>
| `-OptimizeNoneAttr 0x55b05e4b9e88 <col:30>
|-CXXMethodDecl 0x55b05e4b9ed8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55b05e4b9f78 <col:20>
| `-OptimizeNoneAttr 0x55b05e4b9fd0 <col:30>
|-CXXMethodDecl 0x55b05e4ba020 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b05e4ba0e8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55b05e4ba188 <col:20>
| `-OptimizeNoneAttr 0x55b05e4ba1e0 <col:30>
|-CXXMethodDecl 0x55b05e4ba228 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55b05e4ba348 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55b05e4ba4b8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55b05e4ba3f8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55b05e4ba5a8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55b05e4ba648 <col:20>
| `-OptimizeNoneAttr 0x55b05e4ba6a0 <col:30>
|-CXXMethodDecl 0x55b05e4ba6f0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b05e4ba7b0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b05e4ba9e8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55b05e4ba860 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55b05e4ba8d8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b05e4baa98 <col:20>
| `-OptimizeNoneAttr 0x55b05e4baaf0 <col:30>
|-CXXMethodDecl 0x55b05e4bab98 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55b05e4bac38 <col:20>
| `-OptimizeNoneAttr 0x55b05e4bac90 <col:30>
|-CXXMethodDecl 0x55b05e4bace0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55b05e4bad80 <col:20>
| `-OptimizeNoneAttr 0x55b05e4badd8 <col:30>
|-CXXMethodDecl 0x55b05e4bae20 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55b05e4baec0 <col:20>
| `-OptimizeNoneAttr 0x55b05e4baf18 <col:30>
|-CXXMethodDecl 0x55b05e4bb018 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55b05e4baf50 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55b05e4bb0c0 <col:20>
| `-OptimizeNoneAttr 0x55b05e4bb118 <col:30>
|-CXXMethodDecl 0x55b05e4bb2d8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55b05e4bb150 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55b05e4bb1c8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b05e4bb388 <col:20>
| `-OptimizeNoneAttr 0x55b05e4bb3e0 <col:30>
|-CXXMethodDecl 0x55b05e4bb488 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55b05e4bb5a8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55b05e4bb6c8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55b05e4bb768 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55b05e4bb790 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55b05e4bb8b8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55b05e4bb958 <col:20>
| `-OptimizeNoneAttr 0x55b05e4bb9b0 <col:30>
|-CXXMethodDecl 0x55b05e4bba58 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55b05e4bbaf8 <col:20>
| `-OptimizeNoneAttr 0x55b05e4bbb50 <col:30>
|-AccessSpecDecl 0x55b05e4bbb78 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55b05e4bbba0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55b05e4bbca0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55b05e4bbcf0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e4bbc80 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55b05e4bbc60 <col:14> 'int' 48
|-CXXMethodDecl 0x55b05e4bbd58 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55b05e4bbdf8 <col:20>
| `-OptimizeNoneAttr 0x55b05e4bbe50 <col:30>
|-CXXMethodDecl 0x55b05e4bbec8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55b05e4bbf68 <col:20>
| `-OptimizeNoneAttr 0x55b05e4bbfc0 <col:30>
|-CXXMethodDecl 0x55b05e4bc088 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55b05e4bbff8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55b05e4bc228 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55b05e4bc3c8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55b05e4bc2d8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55b05e4bc470 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55b05e4bc570 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b05e4bc920 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4bc550 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55b05e4bc530 <col:9> 'int' 0
| |-EnumConstantDecl 0x55b05e4bc600 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b05e4bc938 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4bc5e0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55b05e4bc5c0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55b05e4bc690 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b05e4bc950 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4bc670 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55b05e4bc650 <col:14> 'int' 2
| |-EnumConstantDecl 0x55b05e4bc720 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b05e4bc968 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4bc700 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55b05e4bc6e0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55b05e4bc7b0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b05e4bc980 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4bc790 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55b05e4bc770 <col:13> 'int' 4
| |-EnumConstantDecl 0x55b05e4bc840 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b05e4bc998 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4bc820 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55b05e4bc800 <col:13> 'int' 5
| `-EnumConstantDecl 0x55b05e4bc8d0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55b05e4bc9b0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e4bc8b0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55b05e4bc890 <col:14> 'int' 6
|-CXXMethodDecl 0x55b05e4bca18 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55b05e4bcab8 <col:20>
| `-OptimizeNoneAttr 0x55b05e4bcb10 <col:30>
|-CXXMethodDecl 0x55b05e4bcc08 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55b05e4bcb48 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55b05e4bccb0 <col:20>
| `-OptimizeNoneAttr 0x55b05e4bcd08 <col:30>
|-CXXMethodDecl 0x55b05e4bcd78 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55b05e4bcea0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55b05e4bd018 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55b05e4bcf50 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55b05e4bd0e0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55b05e4bd1a8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55b05e4bd2e8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55b05e4bd258 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55b05e4bd390 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55b05e4bd490 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55b05e4bd690 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4bd470 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55b05e4bd450 <col:23> 'int' 0
| |-EnumConstantDecl 0x55b05e4bd520 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55b05e4bd6a8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4bd500 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55b05e4bd4e0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55b05e4bd5b0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55b05e4bd6c0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4bd590 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55b05e4bd570 <col:24> 'int' 0
| `-EnumConstantDecl 0x55b05e4bd640 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55b05e4bd6d8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e4bd620 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55b05e4bd600 <col:47> 'int' 16
|-CXXMethodDecl 0x55b05e4bd738 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55b05e4bd8a8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55b05e4bd7e8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55b05e4bd950 <col:20>
| `-OptimizeNoneAttr 0x55b05e4bd9a8 <col:30>
|-CXXMethodDecl 0x55b05e4bd9f8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55b05e4d1380 <col:18, col:36>
|   `-ReturnStmt 0x55b05e4d1370 <col:20, col:33>
|     `-ImplicitCastExpr 0x55b05e4d1358 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55b05e4d1338 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55b05e4d1308 <col:27> '<bound member function type>' ->xanno 0x55b05e4bba58
|           `-CXXThisExpr 0x55b05e4d12f8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55b05e4bdaf0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55b05e4d1490 <col:30, col:48>
|   `-ReturnStmt 0x55b05e4d1480 <col:32, col:45>
|     `-ImplicitCastExpr 0x55b05e4d1468 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55b05e4d1448 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55b05e4d1418 <col:39> '<bound member function type>' ->xanno 0x55b05e4bb8b8
|           `-CXXThisExpr 0x55b05e4d1408 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55b05e4bdbd8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55b05e4d1628 <col:24, col:50>
|   `-ReturnStmt 0x55b05e4d1618 <col:26, col:47>
|     `-UnaryOperator 0x55b05e4d1600 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b05e4d15e0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55b05e4d15c8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b05e4d1578 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55b05e4c6898
|         |   `-CXXMemberCallExpr 0x55b05e4d1558 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55b05e4d1528 <col:34> '<bound member function type>' ->xanno 0x55b05e4bba58
|         |       `-CXXThisExpr 0x55b05e4d1518 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55b05e4d15a8 <col:46> 'int' 0
|-CXXMethodDecl 0x55b05e4bdce0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55b05e4d17f8 <col:36, col:62>
|   `-ReturnStmt 0x55b05e4d17e8 <col:38, col:59>
|     `-UnaryOperator 0x55b05e4d17d0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b05e4d17b0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55b05e4d1798 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b05e4d1710 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55b05e4c6898
|         |   `-CXXMemberCallExpr 0x55b05e4d16f0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55b05e4d16c0 <col:46> '<bound member function type>' ->xanno 0x55b05e4bb8b8
|         |       `-CXXThisExpr 0x55b05e4d16b0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55b05e4d1740 <col:58> 'int' 0
|-CXXMethodDecl 0x55b05e4bddf8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55b05e4d1990 <col:26, col:53>
|   `-ReturnStmt 0x55b05e4d1980 <col:28, col:50>
|     `-UnaryOperator 0x55b05e4d1968 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b05e4d1948 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55b05e4d1930 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b05e4d18e0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55b05e4c6b98
|         |   `-CXXMemberCallExpr 0x55b05e4d18c0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55b05e4d1890 <col:36> '<bound member function type>' ->xanno 0x55b05e4bba58
|         |       `-CXXThisExpr 0x55b05e4d1880 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55b05e4d1910 <col:49> 'int' 0
|-CXXMethodDecl 0x55b05e4bdf18 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55b05e4d1b68 <col:38, col:65>
|   `-ReturnStmt 0x55b05e4d1b58 <col:40, col:62>
|     `-UnaryOperator 0x55b05e4d1b40 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b05e4d1b20 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55b05e4d1b08 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b05e4d1a78 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55b05e4c6b98
|         |   `-CXXMemberCallExpr 0x55b05e4d1a58 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55b05e4d1a28 <col:48> '<bound member function type>' ->xanno 0x55b05e4bb8b8
|         |       `-CXXThisExpr 0x55b05e4d1a18 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55b05e4d1aa8 <col:61> 'int' 0
|-CXXMethodDecl 0x55b05e4be0c8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55b05e4bdfd0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55b05e4d2238 <col:34, line:463:5>
|   |-ParenExpr 0x55b05e4d2080 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55b05e4d2050 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d1cb8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d1c88 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d1bd8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d1bc0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d1b80 <col:23> 'int' lvalue ParmVar 0x55b05e4bdfd0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d1ba0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d1c68 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b05e4d1c38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d1bf8 <col:33> 'int' lvalue ParmVar 0x55b05e4bdfd0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55b05e4d1c50 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55b05e4d1c18 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55b05e4d1d18 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d1cf8 <col:56> 'int' 0
|   |   `-CallExpr 0x55b05e4d1fb0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d1f98 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d1f78 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d1ff0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d1e08 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55b05e4d2008 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d1e38 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d2020 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d1e70 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55b05e4d2038 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d1f60 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d1f48 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d1f08 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55b05e4d2228 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55b05e4d2210 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55b05e4d21f0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55b05e4d21c0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b05e4d2170 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55b05e4c6898
|         |   `-CXXMemberCallExpr 0x55b05e4d2150 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55b05e4d2120 <col:9> '<bound member function type>' ->xanno 0x55b05e4bb8b8
|         |       `-CXXThisExpr 0x55b05e4d2110 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55b05e4d21d8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55b05e4d21a0 <col:21> 'int' lvalue ParmVar 0x55b05e4bdfd0 'i' 'int'
|-CXXMethodDecl 0x55b05e4be318 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55b05e4be188 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55b05e4be200 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55b05e4d28c8 <col:40, line:472:5>
|   |-ParenExpr 0x55b05e4d26e0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55b05e4d26b0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d2390 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d2360 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d22b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d2298 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d2258 <col:23> 'int' lvalue ParmVar 0x55b05e4be188 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d2278 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d2340 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b05e4d2310 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d22d0 <col:33> 'int' lvalue ParmVar 0x55b05e4be188 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55b05e4d2328 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55b05e4d22f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55b05e4d23f0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d23d0 <col:56> 'int' 0
|   |   `-CallExpr 0x55b05e4d2610 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d25f8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d25d8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d2650 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d2460 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55b05e4d2668 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d2490 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d2680 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d24c8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55b05e4d2698 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d25c0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d25a8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d2568 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55b05e4d28a8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55b05e4d2850 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55b05e4d2820 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55b05e4d27d0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55b05e4c6898
|     | |   `-CXXMemberCallExpr 0x55b05e4d27b0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55b05e4d2780 <col:2> '<bound member function type>' ->xanno 0x55b05e4bba58
|     | |       `-CXXThisExpr 0x55b05e4d2770 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55b05e4d2838 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b05e4d2800 <col:14> 'int' lvalue ParmVar 0x55b05e4be188 'i' 'int'
|     `-ImplicitCastExpr 0x55b05e4d2890 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55b05e4d2870 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55b05e4be200 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55b05e4be4d8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55b05e4be3e0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55b05e4d3048 <col:36, line:485:5>
|   |-ParenExpr 0x55b05e4d2db0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b05e4d2d80 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d2a60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d2a30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d2940 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d2928 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d28e8 <col:23> 'int' lvalue ParmVar 0x55b05e4be3e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d2908 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d2a10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b05e4d29f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d2960 <col:33> 'int' lvalue ParmVar 0x55b05e4be3e0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b05e4d29d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b05e4d29c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b05e4d2980 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b05e4d29a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b05e4d2ac0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d2aa0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b05e4d2ce0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d2cc8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d2ca8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d2d20 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d2b30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b05e4d2d38 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d2b68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d2d50 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d2ba0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55b05e4d2d68 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d2c90 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d2c78 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d2c38 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55b05e4d3038 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55b05e4d3020 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55b05e4d3008 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b05e4d2fd8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55b05e4d2f78 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b05e4d2f48 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b05e4d2ec0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55b05e4c6770
|             |   `-CXXMemberCallExpr 0x55b05e4d2ea0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b05e4d2e70 <col:61> '<bound member function type>' ->xanno 0x55b05e4bb8b8
|             |       `-CXXThisExpr 0x55b05e4d2e60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b05e4d2f60 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b05e4d2ef0 <col:74> 'int' lvalue ParmVar 0x55b05e4be3e0 'i' 'int'
|-CXXMethodDecl 0x55b05e4be728 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55b05e4be598 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b05e4be610 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55b05e4d3798 <col:42, line:500:5>
|   |-ParenExpr 0x55b05e4d3530 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b05e4d3500 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d31e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d31b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d30c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d30a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d3068 <col:23> 'int' lvalue ParmVar 0x55b05e4be598 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d3088 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d3190 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b05e4d3178 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d30e0 <col:33> 'int' lvalue ParmVar 0x55b05e4be598 'i' 'int'
|   |   |     `-BinaryOperator 0x55b05e4d3158 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b05e4d3140 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b05e4d3100 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b05e4d3120 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b05e4d3240 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d3220 <col:60> 'int' 0
|   |   `-CallExpr 0x55b05e4d3460 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d3448 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d3428 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d34a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d32b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b05e4d34b8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d32e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d34d0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d3320 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55b05e4d34e8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d3410 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d33f8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d33b8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55b05e4d3778 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55b05e4d3728 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b05e4d36f8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55b05e4d36a0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b05e4d3670 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b05e4d3620 <col:48, col:57> 'char [48]' lvalue ->c 0x55b05e4c6770
|     |     |   `-CXXMemberCallExpr 0x55b05e4d3600 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b05e4d35d0 <col:48> '<bound member function type>' ->xanno 0x55b05e4bba58
|     |     |       `-CXXThisExpr 0x55b05e4d35c0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b05e4d3688 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b05e4d3650 <col:61> 'int' lvalue ParmVar 0x55b05e4be598 'i' 'int'
|     `-ImplicitCastExpr 0x55b05e4d3760 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55b05e4d3740 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55b05e4be610 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55b05e4be8e8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55b05e4be7f0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55b05e4d3ef8 <col:35, line:513:5>
|   |-ParenExpr 0x55b05e4d3c08 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b05e4d3bd8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d3930 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d3900 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d3810 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d37f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d37b8 <col:23> 'int' lvalue ParmVar 0x55b05e4be7f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d37d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d38e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b05e4d38c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d3830 <col:33> 'int' lvalue ParmVar 0x55b05e4be7f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b05e4d38a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b05e4d3890 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b05e4d3850 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b05e4d3870 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b05e4d3990 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d3970 <col:60> 'int' 0
|   |   `-CallExpr 0x55b05e4d3b38 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d3b20 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d3b00 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d3b78 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d3a00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b05e4d3b90 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d3a38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d3ba8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d3a70 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55b05e4d3bc0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d3ae8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d3ad0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d3a90 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55b05e4d3ee8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55b05e4d3ed0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55b05e4d3eb8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b05e4d3e88 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55b05e4d3e00 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b05e4d3dd0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b05e4d3d80 <col:60, col:69> 'char const[48]' lvalue ->c 0x55b05e4c6770
|             |   `-CXXMemberCallExpr 0x55b05e4d3d60 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b05e4d3d30 <col:60> '<bound member function type>' ->xanno 0x55b05e4bb8b8
|             |       `-CXXThisExpr 0x55b05e4d3d20 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b05e4d3de8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b05e4d3db0 <col:73> 'int' lvalue ParmVar 0x55b05e4be7f0 'i' 'int'
|-CXXMethodDecl 0x55b05e4beb38 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55b05e4be9a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b05e4bea20 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55b05e4d4618 <col:41, line:528:5>
|   |-ParenExpr 0x55b05e4d43a0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b05e4d4370 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d4090 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d4060 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d3f70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d3f58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d3f18 <col:23> 'int' lvalue ParmVar 0x55b05e4be9a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d3f38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d4040 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b05e4d4028 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d3f90 <col:33> 'int' lvalue ParmVar 0x55b05e4be9a8 'i' 'int'
|   |   |     `-BinaryOperator 0x55b05e4d4008 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b05e4d3ff0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b05e4d3fb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b05e4d3fd0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b05e4d40f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d40d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b05e4d42d0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d42b8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d4298 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d4310 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d4160 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b05e4d4328 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d4198 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d4340 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d41d0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55b05e4d4358 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d4280 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d4268 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d4228 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55b05e4d45f8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55b05e4d45a8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b05e4d4578 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55b05e4d4520 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b05e4d44e0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b05e4d4490 <col:47, col:56> 'char [48]' lvalue ->c 0x55b05e4c6770
|     |     |   `-CXXMemberCallExpr 0x55b05e4d4470 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b05e4d4440 <col:47> '<bound member function type>' ->xanno 0x55b05e4bba58
|     |     |       `-CXXThisExpr 0x55b05e4d4430 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b05e4d44f8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b05e4d44c0 <col:60> 'int' lvalue ParmVar 0x55b05e4be9a8 'i' 'int'
|     `-ImplicitCastExpr 0x55b05e4d45e0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55b05e4d45c0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55b05e4bea20 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55b05e4becf8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55b05e4bec00 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55b05e4d4ce8 <col:36, line:541:5>
|   |-ParenExpr 0x55b05e4d4a88 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b05e4d4a58 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d47b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d4780 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d4690 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d4678 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d4638 <col:23> 'int' lvalue ParmVar 0x55b05e4bec00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d4658 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d4760 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b05e4d4748 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d46b0 <col:33> 'int' lvalue ParmVar 0x55b05e4bec00 'i' 'int'
|   |   |     `-BinaryOperator 0x55b05e4d4728 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b05e4d4710 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b05e4d46d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b05e4d46f0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55b05e4d4810 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d47f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b05e4d49b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d49a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d4980 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d49f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d4880 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55b05e4d4a10 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d48b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d4a28 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d48f0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55b05e4d4a40 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d4968 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d4950 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d4910 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55b05e4d4cd8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55b05e4d4cc0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55b05e4d4ca8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b05e4d4c78 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55b05e4d4c20 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b05e4d4bf0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b05e4d4ba0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55b05e4c6770
|             |   `-CXXMemberCallExpr 0x55b05e4d4b80 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b05e4d4b50 <col:61> '<bound member function type>' ->xanno 0x55b05e4bb8b8
|             |       `-CXXThisExpr 0x55b05e4d4b40 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b05e4d4c08 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b05e4d4bd0 <col:74> 'int' lvalue ParmVar 0x55b05e4bec00 'i' 'int'
|-CXXMethodDecl 0x55b05e4beec8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55b05e4bedb8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55b05e4bee30 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b05e4bef78 <col:20>
| `-OptimizeNoneAttr 0x55b05e4befd0 <col:30>
|-CXXMethodDecl 0x55b05e4bf108 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55b05e4bf010 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55b05e4d53b8 <col:35, line:562:5>
|   |-ParenExpr 0x55b05e4d5158 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b05e4d5128 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d4e80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d4e50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d4d60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d4d48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d4d08 <col:23> 'int' lvalue ParmVar 0x55b05e4bf010 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d4d28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d4e30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b05e4d4e18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d4d80 <col:33> 'int' lvalue ParmVar 0x55b05e4bf010 'i' 'int'
|   |   |     `-BinaryOperator 0x55b05e4d4df8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b05e4d4de0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b05e4d4da0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b05e4d4dc0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55b05e4d4ee0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d4ec0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b05e4d5088 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d5070 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d5050 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d50c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d4f50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55b05e4d50e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d4f88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d50f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d4fc0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55b05e4d5110 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d5038 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d5020 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d4fe0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55b05e4d53a8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55b05e4d5390 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55b05e4d5378 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b05e4d5348 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55b05e4d52f0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b05e4d52c0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b05e4d5270 <col:60, col:69> 'char const[48]' lvalue ->c 0x55b05e4c6770
|             |   `-CXXMemberCallExpr 0x55b05e4d5250 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b05e4d5220 <col:60> '<bound member function type>' ->xanno 0x55b05e4bb8b8
|             |       `-CXXThisExpr 0x55b05e4d5210 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b05e4d52d8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b05e4d52a0 <col:73> 'int' lvalue ParmVar 0x55b05e4bf010 'i' 'int'
|-CXXMethodDecl 0x55b05e4bf318 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55b05e4bf1c8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b05e4bf240 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55b05e4d5a98 <col:41, line:577:5>
|   |-ParenExpr 0x55b05e4d5828 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b05e4d57f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d5550 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d5520 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d5430 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d5418 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d53d8 <col:23> 'int' lvalue ParmVar 0x55b05e4bf1c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d53f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d5500 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b05e4d54e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d5450 <col:33> 'int' lvalue ParmVar 0x55b05e4bf1c8 'i' 'int'
|   |   |     `-BinaryOperator 0x55b05e4d54c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b05e4d54b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b05e4d5470 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b05e4d5490 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55b05e4d55b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d5590 <col:60> 'int' 0
|   |   `-CallExpr 0x55b05e4d5758 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d5740 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d5720 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d5798 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d5620 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55b05e4d57b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d5658 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d57c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d5690 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55b05e4d57e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d5708 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d56f0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d56b0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55b05e4d5a78 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55b05e4d5a28 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b05e4d59f8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55b05e4d5998 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b05e4d5968 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b05e4d5918 <col:47, col:56> 'char [48]' lvalue ->c 0x55b05e4c6770
|     |     |   `-CXXMemberCallExpr 0x55b05e4d58f8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b05e4d58c8 <col:47> '<bound member function type>' ->xanno 0x55b05e4bba58
|     |     |       `-CXXThisExpr 0x55b05e4d58b8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b05e4d5980 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b05e4d5948 <col:60> 'int' lvalue ParmVar 0x55b05e4bf1c8 'i' 'int'
|     `-ImplicitCastExpr 0x55b05e4d5a60 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55b05e4d5a40 <col:65> 'int32_t':'int' lvalue ParmVar 0x55b05e4bf240 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55b05e4bf4d8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55b05e4bf3e0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55b05e4d61c8 <col:36, line:591:5>
|   |-ParenExpr 0x55b05e4d5f08 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b05e4d5ed8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d5c30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d5c00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d5b10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d5af8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d5ab8 <col:23> 'int' lvalue ParmVar 0x55b05e4bf3e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d5ad8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d5be0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b05e4d5bc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d5b30 <col:33> 'int' lvalue ParmVar 0x55b05e4bf3e0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b05e4d5ba8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b05e4d5b90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b05e4d5b50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b05e4d5b70 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55b05e4d5c90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d5c70 <col:60> 'int' 0
|   |   `-CallExpr 0x55b05e4d5e38 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d5e20 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d5e00 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d5e78 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d5d00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55b05e4d5e90 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d5d38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d5ea8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d5d70 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55b05e4d5ec0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d5de8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d5dd0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d5d90 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55b05e4d61b8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55b05e4d61a0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55b05e4d6188 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b05e4d6158 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55b05e4d60d0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b05e4d60a0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b05e4d6050 <col:61, col:70> 'char const[48]' lvalue ->c 0x55b05e4c6770
|             |   `-CXXMemberCallExpr 0x55b05e4d6030 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b05e4d6000 <col:61> '<bound member function type>' ->xanno 0x55b05e4bb8b8
|             |       `-CXXThisExpr 0x55b05e4d5ff0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b05e4d60b8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b05e4d6080 <col:74> 'int' lvalue ParmVar 0x55b05e4bf3e0 'i' 'int'
|-CXXMethodDecl 0x55b05e4bf728 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55b05e4bf598 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b05e4bf610 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55b05e4d68a8 <col:42, line:606:5>
|   |-ParenExpr 0x55b05e4d6638 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b05e4d6608 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d6360 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d6330 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d6240 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d6228 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d61e8 <col:23> 'int' lvalue ParmVar 0x55b05e4bf598 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d6208 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d6310 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b05e4d62f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d6260 <col:33> 'int' lvalue ParmVar 0x55b05e4bf598 'i' 'int'
|   |   |     `-BinaryOperator 0x55b05e4d62d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b05e4d62c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b05e4d6280 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b05e4d62a0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55b05e4d63c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d63a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b05e4d6568 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d6550 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d6530 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d65a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d6430 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55b05e4d65c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d6468 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d65d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d64a0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55b05e4d65f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d6518 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d6500 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d64c0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55b05e4d6888 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55b05e4d6838 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b05e4d6808 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55b05e4d67a8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b05e4d6778 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b05e4d6728 <col:48, col:57> 'char [48]' lvalue ->c 0x55b05e4c6770
|     |     |   `-CXXMemberCallExpr 0x55b05e4d6708 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b05e4d66d8 <col:48> '<bound member function type>' ->xanno 0x55b05e4bba58
|     |     |       `-CXXThisExpr 0x55b05e4d66c8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b05e4d6790 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b05e4d6758 <col:61> 'int' lvalue ParmVar 0x55b05e4bf598 'i' 'int'
|     `-ImplicitCastExpr 0x55b05e4d6870 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55b05e4d6850 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55b05e4bf610 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55b05e4bf8c0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55b05e4bf7f0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55b05e4d7118 <col:33, line:620:5>
|   |-ParenExpr 0x55b05e4d6e90 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55b05e4d6e60 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d6ab0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d6a80 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d6920 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d6908 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d68c8 <col:23> 'int' lvalue ParmVar 0x55b05e4bf7f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d68e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d6a60 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55b05e4d6a48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d6940 <col:33> 'int' lvalue ParmVar 0x55b05e4bf7f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b05e4d6a28 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b05e4d6a10 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b05e4d6960 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55b05e4d69e8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55b05e4d69d0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55b05e4d6998 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55b05e4d6b10 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d6af0 <col:79> 'int' 0
|   |   `-CallExpr 0x55b05e4d6dc0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d6da8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d6d88 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d6e00 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d6bf8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55b05e4d6e18 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d6c40 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d6e30 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d6c78 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55b05e4d6e48 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d6d70 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d6d58 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d6d18 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55b05e4d7108 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55b05e4d70f0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55b05e4d70d8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b05e4d70a8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55b05e4d7020 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b05e4d6ff0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b05e4d6fa0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55b05e4c6770
|             |   `-CXXMemberCallExpr 0x55b05e4d6f80 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b05e4d6f50 <col:67> '<bound member function type>' ->xanno 0x55b05e4bb8b8
|             |       `-CXXThisExpr 0x55b05e4d6f40 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b05e4d7008 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b05e4d6fd0 <col:80> 'int' lvalue ParmVar 0x55b05e4bf7f0 'i' 'int'
|-CXXMethodDecl 0x55b05e4bfad8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55b05e4bf980 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b05e4bfa00 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55b05e4d7940 <col:45, line:635:5>
|   |-ParenExpr 0x55b05e4d7688 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55b05e4d7658 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55b05e4d7320 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b05e4d72f0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b05e4d7190 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b05e4d7178 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b05e4d7138 <col:23> 'int' lvalue ParmVar 0x55b05e4bf980 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b05e4d7158 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b05e4d72d0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55b05e4d72b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b05e4d71b0 <col:33> 'int' lvalue ParmVar 0x55b05e4bf980 'i' 'int'
|   |   |     `-BinaryOperator 0x55b05e4d7298 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b05e4d7280 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b05e4d71d0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b05e4bbca0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55b05e4d7258 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55b05e4d7240 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55b05e4d7208 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55b05e4d7380 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b05e4d7360 <col:79> 'int' 0
|   |   `-CallExpr 0x55b05e4d75b8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55b05e4d75a0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b05e4d7580 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b05e0285c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b05e4d75f8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d73f0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55b05e4d7610 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b05e4d7438 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b05e4d7628 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b05e4d7470 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55b05e4d7640 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b05e4d7568 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b05e4d7550 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b05e4d7508 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55b05e4d7920 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55b05e4d7888 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b05e4d7858 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55b05e4d77f8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b05e4d77c8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b05e4d7778 <col:54, col:63> 'char [48]' lvalue ->c 0x55b05e4c6770
|     |     |   `-CXXMemberCallExpr 0x55b05e4d7758 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b05e4d7728 <col:54> '<bound member function type>' ->xanno 0x55b05e4bba58
|     |     |       `-CXXThisExpr 0x55b05e4d7718 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b05e4d77e0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b05e4d77a8 <col:67> 'int' lvalue ParmVar 0x55b05e4bf980 'i' 'int'
|     `-CXXConstCastExpr 0x55b05e4d78f0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55b05e4d78d8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55b05e4d78a0 <col:91> 'const void *' lvalue ParmVar 0x55b05e4bfa00 'x' 'const void *'
|-CXXMethodDecl 0x55b05e4bfba8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55b05e4d79c8 <col:34, line:640:5>
|   `-ReturnStmt 0x55b05e4d79b8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55b05e4d79a0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55b05e4d7970 <col:16> 'Packet *' lvalue ->_data_packet 0x55b05e4c7328
|         `-CXXThisExpr 0x55b05e4d7960 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55b05e4bfce8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55b05e4bfc58 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b05e4d0a88 <col:46> 'bool' true
|-CXXMethodDecl 0x55b05e4bfe68 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55b05e4bfda0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55b05e4bff10 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55b05e4c06c0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55b05e4c0010 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b05e4c0730 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4bfff0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55b05e4bffd0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55b05e4b5170 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55b05e4c00a0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b05e4c0748 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4c0080 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55b05e4c0060 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55b05e4b5200 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55b05e4c0130 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b05e4c0760 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4c0110 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55b05e4c00f0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55b05e4c01c0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b05e4c0778 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4c01a0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55b05e4c0180 <col:19> 'int' 16
| |-EnumConstantDecl 0x55b05e4c0250 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b05e4c0790 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4c0230 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55b05e4c0210 <col:21> 'int' 16
| |-EnumConstantDecl 0x55b05e4c02e0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b05e4c07a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4c02c0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55b05e4c02a0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55b05e4c0370 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b05e4c07c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4c0350 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55b05e4c0330 <col:19> 'int' EnumConstant 0x55b05e4c01c0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55b05e4c0400 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b05e4c07d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4c03e0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55b05e4c03c0 <col:19> 'int' EnumConstant 0x55b05e4c02e0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55b05e4c04d0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b05e4c07f0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4c04b0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55b05e4c0490 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55b05e4c0450 <col:23> 'int' EnumConstant 0x55b05e4c0400 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55b05e4c0470 <col:40> 'int' 2
| |-EnumConstantDecl 0x55b05e4c05a0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b05e4c0808 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b05e4c0580 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55b05e4c0560 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55b05e4c0520 <col:23> 'int' EnumConstant 0x55b05e4c0400 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55b05e4c0540 <col:40> 'int' 4
| `-EnumConstantDecl 0x55b05e4c0670 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55b05e4c0820 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b05e4c0650 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55b05e4c0630 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55b05e4c05f0 <col:23> 'int' EnumConstant 0x55b05e4c0400 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55b05e4c0610 <col:40> 'int' 8
|-CXXMethodDecl 0x55b05e4c0860 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55b05e4c0900 <col:68> "" ""
|-CXXMethodDecl 0x55b05e4c0998 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55b05e4c0a38 <col:45> "" ""
|-CXXMethodDecl 0x55b05e4c0ad0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55b05e4c0b70 <col:57> "" ""
|-CXXMethodDecl 0x55b05e4c0c08 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55b05e4c0ca8 <col:45> "" ""
|-CXXMethodDecl 0x55b05e4c0d40 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55b05e4c0de0 <col:57> "" ""
|-CXXMethodDecl 0x55b05e4c0e70 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55b05e4c0f10 <col:51> "" ""
|-CXXMethodDecl 0x55b05e4c0fa0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55b05e4c1040 <col:63> "" ""
|-CXXMethodDecl 0x55b05e4c10d0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55b05e4c1170 <col:53> "" ""
|-CXXMethodDecl 0x55b05e4c1200 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55b05e4c12a0 <col:65> "" ""
|-CXXMethodDecl 0x55b05e4c13b8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55b05e4c1328 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55b05e4c1460 <col:61> "" ""
|-CXXMethodDecl 0x55b05e4c15f8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55b05e4c14e8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55b05e4c1560 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55b05e4c16a8 <col:67> "" ""
|-CXXMethodDecl 0x55b05e4c17c0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55b05e4c1730 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55b05e4c1868 <col:63> "" ""
|-CXXMethodDecl 0x55b05e4c1a00 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55b05e4c18f0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b05e4c1968 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55b05e4c1ab0 <col:69> "" ""
|-CXXMethodDecl 0x55b05e4c1bc8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55b05e4c1b38 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55b05e4c1c70 <col:63> "" ""
|-CXXMethodDecl 0x55b05e4c4348 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55b05e4c4238 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b05e4c42b0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b05e4c43f8 <col:69> "" ""
|-CXXMethodDecl 0x55b05e4c4510 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55b05e4c4480 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55b05e4c45b8 <col:62> "" ""
|-CXXMethodDecl 0x55b05e4c4750 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55b05e4c4640 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b05e4c46b8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55b05e4c4800 <col:68> "" ""
|-CXXMethodDecl 0x55b05e4c4918 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55b05e4c4888 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55b05e4c49c0 <col:63> "" ""
|-CXXMethodDecl 0x55b05e4c4b58 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55b05e4c4a48 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b05e4c4ac0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55b05e4c4c08 <col:69> "" ""
|-CXXMethodDecl 0x55b05e4c4c98 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55b05e4c4d38 <col:64> "" ""
|-CXXMethodDecl 0x55b05e4c4dc8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55b05e4c4e68 <col:52> "" ""
|-CXXMethodDecl 0x55b05e4c4ef8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55b05e4c4f98 <col:67> "" ""
|-CXXMethodDecl 0x55b05e4c5028 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55b05e4c50c8 <col:55> "" ""
|-CXXMethodDecl 0x55b05e4c51e0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55b05e4c5150 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55b05e4c5288 <col:58> "" ""
|-CXXMethodDecl 0x55b05e4c5420 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55b05e4c5310 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b05e4c5388 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55b05e4c54d0 <col:62> "" ""
|-CXXMethodDecl 0x55b05e4c55e8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55b05e4c5558 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55b05e4c5690 <col:58> "" ""
|-CXXMethodDecl 0x55b05e4c5828 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55b05e4c5718 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b05e4c5790 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55b05e4c58d8 <col:62> "" ""
|-CXXMethodDecl 0x55b05e4c59f0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55b05e4c5960 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55b05e4c5a98 <col:60> "" ""
|-CXXMethodDecl 0x55b05e4c5c30 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55b05e4c5b20 <col:34> col:37 'int'
| |-ParmVarDecl 0x55b05e4c5b98 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55b05e4c5ce0 <col:64> "" ""
|-CXXMethodDecl 0x55b05e4c5df8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55b05e4c5d68 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55b05e4c5ea0 <col:58> "" ""
|-CXXMethodDecl 0x55b05e4c6038 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55b05e4c5f28 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b05e4c5fa0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55b05e4c60e8 <col:62> "" ""
|-CXXMethodDecl 0x55b05e4c6200 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55b05e4c6170 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55b05e4c62a8 <col:59> "" ""
|-CXXMethodDecl 0x55b05e4c6440 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55b05e4c6330 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b05e4c63a8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b05e4c64f0 <col:63> "" ""
|-AccessSpecDecl 0x55b05e4c6560 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55b05e4c6588 prev 0x55b05e4bb790 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b05e4c6680 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55b05e4c6770 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55b05e4c6898 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55b05e4c6a18 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55b05e4c6b98 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55b05e4c6d18 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55b05e4d7b48 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b05e4d83b8 <col:11>
| |-CXXDestructorDecl 0x55b05e4d7c20 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55b05e4d7d58 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55b05e4d7d58
| | `-ParmVarDecl 0x55b05e4d7e68 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55b05e4d7f08 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b05e4d7f08
| | `-ParmVarDecl 0x55b05e4d8018 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55b05e4dadd8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b05e4daee8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55b05e4db168 <col:11>
| |   `-ReturnStmt 0x55b05e4db158 <col:11>
| |     `-UnaryOperator 0x55b05e4db140 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55b05e4db130 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55b05e4daf58 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b05e4daf58
|   `-ParmVarDecl 0x55b05e4db068 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55b05e4c6d80 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b05e4c6e98 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55b05e4c6f38 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55b05e4c6fa0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55b05e4c7008 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55b05e4c7070 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55b05e4c70d0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55b05e4c7190 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55b05e4c71f0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55b05e4c7250 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55b05e4d7a58 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55b05e4c6f38 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55b05e4d83c8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55b05e4d8420 <col:12>
| |-CXXConstructorDecl 0x55b05e4d8088 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55b05e4d8088
| | `-ParmVarDecl 0x55b05e4d8198 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55b05e4d8238 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55b05e4d8238
| | `-ParmVarDecl 0x55b05e4d8348 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55b05e4da4c0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55b05e4c72c8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55b05e4c7328 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55b05e4c7390 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55b05e4c73f8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55b05e4c7460 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55b05e4c74c8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55b05e4c7528 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55b05e4c7588 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55b05e4c75f0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55b05e4c7678 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55b05e4c72c8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55b05e4d79f0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55b05e4c7528 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55b05e4d8430 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55b05e4d8490 <col:21, line:755:5>
|-CXXConstructorDecl 0x55b05e4c7818 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55b05e4c7758 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55b05e4c7910 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55b05e4c7af8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55b05e4c7a00 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55b05e4c7dc8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55b05e4c7bb0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b05e4c7c28 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b05e4c7ca0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e4c7fe8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55b05e4c7e98 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55b05e4c7f10 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55b05e4d05c8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55b05e4c80a8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55b05e4c8120 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55b05e4c8198 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55b05e4d0720 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55b05e4d0690 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b05e4d0868 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55b05e4d07d8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55b05e4d0960 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e5ccce0 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b05e5ccdf8 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x55b05e5cce88 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x55b05e5cd0c8 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x55b05e5ccec0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55b05e5ccf40 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x55b05e5ccfb8 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55b05e5cd2e0 <col:81> 'const ArgContext' lvalue Var 0x55b05e5b4da0 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55b05e5cd220 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x55b05e5cd190 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x55b05e5cd438 <col:35, line:1261:5>
|   `-ReturnStmt 0x55b05e5cd428 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x55b05e5cd410 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x55b05e5cd3e0 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55b05e5cd3c8 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x55b05e5cd3a0 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x55b05e5cd380 <col:16, col:24> 'String' (CXXTemporary 0x55b05e5cd380)
|               `-CXXConstructExpr 0x55b05e5cd348 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x55b05e5cd330 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x55b05e5cd310 <col:23> 'bool' lvalue ParmVar 0x55b05e5cd190 'x' 'bool'
|-CXXConstructorDecl 0x55b05e5e79f0 <line:1257:7> col:7 implicit referenced constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55b05e5e7af8 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x55b05e5e7af8
| `-ParmVarDecl 0x55b05e5e7c08 <col:7> col:7 'const BoolArg &'
|-CXXConstructorDecl 0x55b05e5e7ca8 <col:7> col:7 implicit constexpr BoolArg 'void (BoolArg &&)' inline default trivial noexcept-unevaluated 0x55b05e5e7ca8
| `-ParmVarDecl 0x55b05e5e7db8 <col:7> col:7 'BoolArg &&'
`-CXXDestructorDecl 0x55b05e5e7e58 <col:7> col:7 implicit referenced ~BoolArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e5676a8 prev 0x55b05e4b35d8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b05e5677a0 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55b05e567830 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55b05e567968 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55b05e567868 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55b05e568d90 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55b05e568d70 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55b05e568908 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55b05e568e20 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55b05e568de0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55b05e567868 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55b05e568970 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55b05e568ea0 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55b05e568e60 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55b05e5689d0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55b05e568ee0 <col:54> 'bool' false
| `-CompoundStmt 0x55b05e568fe8 <col:61, line:38:5>
|   `-BinaryOperator 0x55b05e568fc8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55b05e568f60 <col:9> 'const Element *' lvalue ->_context 0x55b05e5688a8
|     | `-CXXThisExpr 0x55b05e568f50 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55b05e568fb0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55b05e568f90 <col:20> 'int' 0
|-CXXConstructorDecl 0x55b05e567b78 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55b05e567a28 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55b05e567aa0 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55b05e568dc8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55b05e568da8 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55b05e5688a8 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55b05e569040 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55b05e569000 <col:20> 'const Element *' lvalue ParmVar 0x55b05e567a28 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55b05e568908 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55b05e5690c0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55b05e569080 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55b05e567aa0 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55b05e568970 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55b05e569140 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55b05e569100 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55b05e5689d0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55b05e569180 <col:73> 'bool' false
| `-CompoundStmt 0x55b05e5691f8 <col:80, line:46:5>
|-CXXMethodDecl 0x55b05e567ca8 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55b05e569270 <col:36, line:51:5>
|   `-ReturnStmt 0x55b05e569260 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55b05e569248 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55b05e569218 <col:16> 'const Element *const' lvalue ->_context 0x55b05e5688a8
|         `-CXXThisExpr 0x55b05e569208 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55b05e567d98 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55b05e5692f0 <col:32, line:57:5>
|   `-ReturnStmt 0x55b05e5692e0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55b05e5692c8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55b05e569298 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55b05e568908
|         `-CXXThisExpr 0x55b05e569288 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55b05e567e58 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55b05e567fe0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55b05e567f10 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55b05e568130 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55b05e5680a0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55b05e568280 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55b05e5681f0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55b05e568488 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55b05e568338 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55b05e5683b0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55b05e5687b8 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55b05e568548 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55b05e5685c8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55b05e568690 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55b05e568870 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55b05e5688a8 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55b05e568908 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55b05e568970 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55b05e5689d0 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55b05e568a20 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55b05e568a20
| `-ParmVarDecl 0x55b05e568b38 <col:7> col:7 'const ArgContext &'
`-CXXMethodDecl 0x55b05e568bd8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55b05e568bd8
  `-ParmVarDecl 0x55b05e568ce8 <col:7> col:7 'const ArgContext &'

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Bitvector::Bit
         0 |   class Bitvector::word_type & _p
         8 |   class Bitvector::word_type _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b05e50b2a0 parent 0x55b05e5068d8 prev 0x55b05e506a88 <../dummy_inc/click/bitvector.hh:103:1, line:123:1> line:103:18 referenced class Bit definition
|-DefinitionData pass_in_registers has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b05e50b3d8 <col:1, col:18> col:18 implicit referenced class Bit
|-AccessSpecDecl 0x55b05e50b468 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55b05e50b728 <line:105:5, col:55> col:12 used Bit 'void (Bitvector::word_type &, int)' inline
| |-ParmVarDecl 0x55b05e50b550 <col:16, col:38> col:38 w 'Bitvector::word_type &'
| `-ParmVarDecl 0x55b05e50b5d0 <col:41, col:45> col:45 bit_offset 'int'
|-CXXConversionDecl 0x55b05e50b838 <line:107:5, col:28> col:12 operator bool 'bool () const' inline
|-CXXMethodDecl 0x55b05e50b9e8 <line:109:5, col:33> col:17 used operator= 'Bitvector::Bit &(bool)' inline
| `-ParmVarDecl 0x55b05e50b8f8 <col:27, col:32> col:32 x 'bool'
|-CXXMethodDecl 0x55b05e50bb88 <line:110:5, col:39> col:17 operator= 'Bitvector::Bit &(const Bitvector::Bit &)' inline
| `-ParmVarDecl 0x55b05e50bac8 <col:27, col:38> col:38 x 'const Bitvector::Bit &'
|-CXXMethodDecl 0x55b05e50bc50 <line:111:5, col:22> col:17 flip 'void ()' inline
|-CXXMethodDecl 0x55b05e50bd90 <line:113:5, col:34> col:17 operator&= 'Bitvector::Bit &(bool)' inline
| `-ParmVarDecl 0x55b05e50bd00 <col:28, col:33> col:33 x 'bool'
|-CXXMethodDecl 0x55b05e50bed8 <line:114:5, col:34> col:17 operator|= 'Bitvector::Bit &(bool)' inline
| `-ParmVarDecl 0x55b05e50be48 <col:28, col:33> col:33 x 'bool'
|-CXXMethodDecl 0x55b05e50c020 <line:115:5, col:34> col:17 operator^= 'Bitvector::Bit &(bool)' inline
| `-ParmVarDecl 0x55b05e50bf90 <col:28, col:33> col:33 x 'bool'
|-CXXMethodDecl 0x55b05e50c168 <line:116:5, col:34> col:17 operator-= 'Bitvector::Bit &(bool)' inline
| `-ParmVarDecl 0x55b05e50c0d8 <col:28, col:33> col:33 x 'bool'
|-AccessSpecDecl 0x55b05e50c210 <line:118:3, col:10> col:3 private
|-FieldDecl 0x55b05e50c2a0 <line:120:5, col:27> col:27 referenced _p 'Bitvector::word_type &'
|-FieldDecl 0x55b05e50c350 <line:121:5, col:26> col:26 referenced _mask 'Bitvector::word_type':'unsigned int'
|-CXXConstructorDecl 0x55b05e50f2f0 <line:103:18> col:18 implicit used constexpr Bit 'void (const Bitvector::Bit &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b05e50f408 <col:18> col:18 used 'const Bitvector::Bit &'
| |-CXXCtorInitializer Field 0x55b05e50c2a0 '_p' 'Bitvector::word_type &'
| | `-MemberExpr 0x55b05e50f620 <col:18> 'Bitvector::word_type':'unsigned int' lvalue ._p 0x55b05e50c2a0
| |   `-DeclRefExpr 0x55b05e50f600 <col:18> 'const Bitvector::Bit' lvalue ParmVar 0x55b05e50f408 '' 'const Bitvector::Bit &'
| |-CXXCtorInitializer Field 0x55b05e50c350 '_mask' 'Bitvector::word_type':'unsigned int'
| | `-ImplicitCastExpr 0x55b05e50f6f8 <col:18> 'Bitvector::word_type':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55b05e50f6b0 <col:18> 'const Bitvector::word_type':'const unsigned int' lvalue ._mask 0x55b05e50c350
| |     `-DeclRefExpr 0x55b05e50f690 <col:18> 'const Bitvector::Bit' lvalue ParmVar 0x55b05e50f408 '' 'const Bitvector::Bit &'
| `-CompoundStmt 0x55b05e50f748 <col:18>
`-CXXDestructorDecl 0x55b05e50f4b8 <col:18> col:18 implicit referenced ~Bit 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Bitvector::Bit" = type <{ i32*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Bitvector::Bit.base" = type <{ i32*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>
