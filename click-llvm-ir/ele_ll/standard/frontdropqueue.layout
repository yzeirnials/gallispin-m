
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555715524718 prev 0x55571551beb8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x555715524810 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5557155248a0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x555715524918 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5557155249d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x555715524aa0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x555715524c18 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x555715524b50 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x555715524cc0 <col:24>
| `-OptimizeNoneAttr 0x555715524d18 <col:34>
|-CXXMethodDecl 0x555715524d60 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x555715525018 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x555715524e10 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x555715524e88 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x555715524f08 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5557155250d0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x555715525108 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x555715525170 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5557155251f8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x555715525518 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5557155252b0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x555715525328 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5557155253a0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x555715525420 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x555715525630 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55571552cfa8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55571552cfa8
| `-ParmVarDecl 0x55571552d0b8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55571552d158 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55571552d158
| `-ParmVarDecl 0x55571552d268 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5557156679b0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555715517730 prev 0x5557155174b0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x555715517828 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5557155178b8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x555715517918 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x555715517a08 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x555715517b08 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x555715517cd8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x555715517b88 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x555715517c00 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x555715517e68 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x555715517da0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x555715517f10 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x555715518048 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x555715517f80 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5557155181e8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x555715518128 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x555715518388 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5557155182c8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x555715518430 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x555715518530 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x555715518610 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715518510 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5557155184f0 <col:26> 'int' 1
| `-EnumConstantDecl 0x5557155185c0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x555715518628 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557155185a0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x555715518580 <col:44> 'int' 2
|-CXXMethodDecl 0x555715518770 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x555715518658 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5557155186d8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5557155188c8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x555715518838 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x555715518b08 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x555715518988 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x555715518a00 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x555715518bb8 <col:20>
| `-OptimizeNoneAttr 0x555715518c10 <col:30>
|-CXXMethodDecl 0x555715518d18 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x555715518c50 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x555715518dc0 <col:20>
| `-OptimizeNoneAttr 0x555715518e18 <col:30>
|-CXXMethodDecl 0x555715518e68 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x555715518f30 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x555715519048 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5557155190d0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x555715519158 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5557155191e0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x555715519268 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5557155192f8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5557155193b8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x555715519440 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x5557155194c8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x555715519550 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5557155195d8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x555715519660 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5557155196f0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5557155197b0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x555715519840 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x555715519990 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5557155198f8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x555715519b20 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x555715519a50 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x555715519dd0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x555715519bd8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x555715519c58 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x555715519cd8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x555715519e88 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x555715519f90 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55571551a220 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715519f70 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x555715519f50 <col:33> 'int' 0
| |-EnumConstantDecl 0x55571551a020 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55571551a238 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55571551a000 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x555715519fe0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55571551a0b0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55571551a250 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55571551a090 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55571551a070 <col:38> 'int' 90
| |-EnumConstantDecl 0x55571551a140 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55571551a268 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55571551a120 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55571551a100 <col:35> 'int' 100
| `-EnumConstantDecl 0x55571551a1d0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55571551a280 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55571551a1b0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55571551a190 <col:32> 'int' 2000
|-CXXMethodDecl 0x55571551a2c0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55571551a700 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55571551a570 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55571551a5e8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55571551a7d0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55571551a950 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55571551a880 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55571551ab58 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55571551aa08 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55571551aa80 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55571551ac58 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55571551acf8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55571551adc0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55571551ae50 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55571551b080 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55571551ae30 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55571551ae10 <col:36> 'int' EnumConstant 0x55571551adc0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55571551aea0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55571551aef0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55571551af40 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55571551af90 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55571551afe0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55571551b030 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55571551b168 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55571551b0a8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55571551b230 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55571551b2f0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55571551b3b0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55571551b470 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55571551b588 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55571551b650 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55571551b7d0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55571551b700 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55571551b8f8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55571551baf8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55571551b9a8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55571551ba28 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x555715529448 <col:54, line:127:5>
|   |-ParenExpr 0x5557155292f8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5557155292c8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x555715528fb8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x555715528f90 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x555715528f78 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x555715528f60 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x555715528f30 <col:31> 'Router *' lvalue ->_router 0x555715526e10
|   |   |         `-CXXThisExpr 0x555715528f20 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x555715529018 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555715528ff8 <col:48> 'int' 0
|   |   `-CallExpr 0x555715529228 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x555715529210 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557155291f0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555715529268 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555715529088 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x555715529280 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557155290a8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x555715529298 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557155290e0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5557155292b0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557155291d8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557155291c0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555715529178 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x555715529390 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x555715529328 <col:9> 'Router *' lvalue ->_router 0x555715526e10
|   | | `-CXXThisExpr 0x555715529318 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x555715529378 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x555715529358 <col:19> 'Router *' lvalue ParmVar 0x55571551b9a8 'r' 'Router *'
|   `-BinaryOperator 0x555715529428 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5557155293c0 <col:9> 'int' lvalue ->_eindex 0x555715526e78
|     | `-CXXThisExpr 0x5557155293b0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x555715529410 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5557155293f0 <col:19> 'int' lvalue ParmVar 0x55571551ba28 'eindex' 'int'
|-CXXMethodDecl 0x55571551bc80 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55571551bbb8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55571551bd50 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55571551be18 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55571551beb8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55571551c108 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55571551bf80 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55571551c000 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55571551c1b8 <col:20>
| `-OptimizeNoneAttr 0x55571551c210 <col:30>
|-CXXMethodDecl 0x55571551c318 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55571551c250 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55571551c3c0 <col:20>
| `-OptimizeNoneAttr 0x55571551c418 <col:30>
|-CXXMethodDecl 0x55571551c4e8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55571551c458 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55571551c590 <col:20>
| `-OptimizeNoneAttr 0x55571551c5e8 <col:30>
|-CXXMethodDecl 0x55571551c778 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55571551c620 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55571551c6a0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55571551c908 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55571551c840 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55571551ca58 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55571551c9c8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55571551cba8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55571551cb18 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55571551ccf8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55571551cc68 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55571551cfb8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55571551cdb0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55571551ce30 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55571551ced8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55571551d090 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55571551d150 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55571551d420 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55571551d2d0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55571551d348 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55571551d548 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55571551d720 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55571551d600 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55571551d680 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55571551d908 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55571551d7e8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55571551d868 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55571551dc78 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55571551d9c8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55571551da40 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55571551dac0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x555715528a30 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x555715528a10 <col:106> 'int' 0
| `-ParmVarDecl 0x55571551db38 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555715528a68 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555715528a48 <col:126> 'int' 0
|-CXXMethodDecl 0x55571551e018 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55571551dd48 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55571551dde0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55571551de60 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55571551ded8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555715528aa0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555715528a80 <col:114> 'int' 0
|-CXXMethodDecl 0x55571551e3a8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55571551e0f0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55571551e168 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55571551e1e8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x555715528ab8 <col:96> 'int' 0
| `-ParmVarDecl 0x55571551e260 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555715528af8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555715528ad8 <col:116> 'int' 0
|-CXXMethodDecl 0x55571551e728 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55571551e478 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55571551e4f0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55571551e570 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x555715528b30 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x555715528b10 <col:109> 'int' 0
| `-ParmVarDecl 0x55571551e5e8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555715528b68 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555715528b48 <col:129> 'int' 0
|-CXXMethodDecl 0x55571551eaa8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55571551e7f8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55571551e870 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55571551e8f0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55571551e968 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555715528ba0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555715528b80 <col:117> 'int' 0
|-CXXMethodDecl 0x55571551ee38 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55571551eb80 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55571551ebf8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55571551ec78 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x555715528bb8 <col:99> 'int' 0
| `-ParmVarDecl 0x55571551ecf0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555715528bf8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555715528bd8 <col:119> 'int' 0
|-CXXMethodDecl 0x55571551f258 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55571551ef08 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55571551ef88 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55571551f000 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55571551f080 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x555715528c30 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x555715528c10 <col:108> 'int' 0
| `-ParmVarDecl 0x55571551f100 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x555715528c68 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x555715528c48 <col:141> 'int' 0
|-CXXMethodDecl 0x55571551f678 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55571551f330 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55571551f3b0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55571551f428 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55571551f4a8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55571551f528 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x555715528c80 <col:121> 'int' 0
|-CXXMethodDecl 0x55571551faa8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55571551f758 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55571551f7d8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55571551f850 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55571551f8d0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x555715528ca0 <col:98> 'int' 0
| `-ParmVarDecl 0x55571551f950 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x555715528cc0 <col:123> 'int' 0
|-CXXMethodDecl 0x55571551fd70 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55571551fb80 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55571551fc00 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55571551fc80 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x555715528ce0 <col:80> 'int' 0
|-EnumDecl 0x55571551fe28 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55571551ff30 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5557155201c0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55571551ff10 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55571551fef0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55571551ffc0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5557155201d8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55571551ffa0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55571551ff80 <col:40> 'int' 2
| |-EnumConstantDecl 0x555715520050 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5557155201f0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715520030 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x555715520010 <col:44> 'int' 4
| |-EnumConstantDecl 0x5557155200e0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x555715520208 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557155200c0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5557155200a0 <col:36> 'int' 7
| `-EnumConstantDecl 0x555715520170 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x555715520220 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555715520150 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x555715520130 <col:34> 'int' 6
|-CXXMethodDecl 0x5557155204d8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x555715520248 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5557155202e8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x555715520368 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5557155203e0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x555715528d98 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x555715528d80 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x555715528d68 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x555715528d48 <col:98, col:105> 'String' (CXXTemporary 0x555715528d48)
|           `-CXXTemporaryObjectExpr 0x555715528d10 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x555715520778 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5557155205a8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x555715520620 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x555715520698 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x555715528e48 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x555715528e30 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x555715528e18 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x555715528df8 <col:94, col:101> 'String' (CXXTemporary 0x555715528df8)
| |         `-CXXTemporaryObjectExpr 0x555715528dc0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x555715529630 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5557155295a8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x555715529578 <col:9> '<bound member function type>' ->add_task_handlers 0x5557155204d8
|     | `-CXXThisExpr 0x555715529568 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5557155295e8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5557155294e8 <col:27> 'Task *' lvalue ParmVar 0x5557155205a8 'task' 'Task *'
|     |-ImplicitCastExpr 0x555715529600 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x555715529508 <col:33> 'NotifierSignal *' lvalue ParmVar 0x555715520620 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x555715529618 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x555715529528 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x555715520170 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x555715529548 <col:62> 'const String' lvalue ParmVar 0x555715520698 'prefix' 'const String &'
|-CXXMethodDecl 0x555715520988 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x555715520840 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5557155208b8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x555715528ef8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x555715528ee0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x555715528ec8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x555715528ea8 <col:70, col:77> 'String' (CXXTemporary 0x555715528ea8)
| |         `-CXXTemporaryObjectExpr 0x555715528e70 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x555715529808 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x555715529780 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x555715529750 <col:9> '<bound member function type>' ->add_task_handlers 0x5557155204d8
|     | `-CXXThisExpr 0x555715529740 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5557155297c0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5557155296c0 <col:27> 'Task *' lvalue ParmVar 0x555715520840 'task' 'Task *'
|     |-ImplicitCastExpr 0x5557155297d8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5557155296e0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5557155297f0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x555715529700 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x555715520170 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x555715529720 <col:57> 'const String' lvalue ParmVar 0x5557155208b8 'prefix' 'const String &'
|-CXXMethodDecl 0x555715520c68 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x555715520a50 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715520ad0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555715520b48 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x555715520f18 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x555715520d38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715520db8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555715520e38 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x555715521208 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x555715520fe8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715521068 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5557155210e0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5557155214b8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5557155212d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715521358 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5557155213d8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x555715521768 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x555715521588 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715521608 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555715521688 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x555715521a18 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x555715521838 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5557155218b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555715521930 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x555715521cc8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x555715521ae8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715521b68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555715521be8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x555715521fd8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x555715521df0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715521e70 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555715521ef0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5557155222b8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5557155220a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715522128 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5557155221d0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x555715522598 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x555715522388 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715522408 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5557155224b0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x555715522800 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x555715522668 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5557155226e8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x555715522760 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x555715522aa8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5557155228d0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x555715522950 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5557155229c8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x555715522d58 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x555715522b78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715522bf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555715522c78 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x555715523008 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x555715522e28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715522ea8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555715522f20 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5557155232b8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5557155230d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715523158 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5557155231d0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x555715523588 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x555715523388 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555715523408 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5557155234a8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5557155238b8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x555715523658 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5557155236d8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x555715523750 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5557155237c8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x555715528f10 <col:93> 'bool' false
|-CXXMethodDecl 0x555715523aa0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x555715523988 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x555715523a08 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x555715523c78 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x555715523b60 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x555715523be0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x555715523f58 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x555715523d38 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x555715523db0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x555715523e30 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x555715523ea8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x555715524248 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x555715524028 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5557155240a0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x555715524120 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x555715524198 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x555715524480 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x555715524320 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5557155243a0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x555715524668 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x555715524548 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5557155245c8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x555715524718 prev 0x55571551beb8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x555715524810 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5557155248a0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x555715524918 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5557155249d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x555715524aa0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x555715524c18 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x555715524b50 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x555715524cc0 <col:24>
| | `-OptimizeNoneAttr 0x555715524d18 <col:34>
| |-CXXMethodDecl 0x555715524d60 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x555715525018 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x555715524e10 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x555715524e88 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x555715524f08 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5557155250d0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x555715525108 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x555715525170 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5557155251f8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x555715525518 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5557155252b0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x555715525328 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5557155253a0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x555715525420 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x555715525630 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55571552cfa8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55571552cfa8
| | `-ParmVarDecl 0x55571552d0b8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55571552d158 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55571552d158
| | `-ParmVarDecl 0x55571552d268 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5557156679b0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5557155256a8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x555715525748 <col:38> "" ""
|-CXXMethodDecl 0x5557155257d8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x555715525878 <col:44> "" ""
|-AccessSpecDecl 0x5557155258e8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x555715525910 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x555715525a10 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x555715525a60 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557155259f0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5557155259d0 <col:27> 'int' 4
|-FieldDecl 0x555715525b18 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x555715525cc8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x555715525d80 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x555715526e10 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x555715526e78 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x555715526fc8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x555715526f08 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x555715527178 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x555715527088 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x555715527358 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x555715527238 <col:20> col:23 'int'
| `-ParmVarDecl 0x5557155272b8 <col:25> col:28 'int'
|-CXXMethodDecl 0x555715527600 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x555715527420 <col:23> col:26 'int'
| |-ParmVarDecl 0x5557155274a0 <col:28> col:31 'int'
| `-ParmVarDecl 0x555715527518 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5557155276b8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x555715527780 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5557155277d0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x555715527820 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x555715527a00 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5557155278b0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x555715527928 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x555715527ca8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x555715527ac8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x555715527b48 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x555715527bc0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x555715527ec8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x555715527d78 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x555715527df8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x555715528200 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x555715527f88 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x555715528008 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x555715528080 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x555715528100 <col:57> col:60 'int'
|-CXXMethodDecl 0x5557155283e8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5557155282d0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x555715528350 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x555715528538 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5557155284a8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5557155288b8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5557155285f8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x555715528678 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5557155286f0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x555715528770 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5557155289d0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Storage
         0 |   Storage::index_type _capacity
         4 |   volatile Storage::index_type _head
         8 |   volatile Storage::index_type _tail
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557155ed868 <../dummy_inc/click/standard/storage.hh:9:1, line:54:1> line:9:7 referenced class Storage definition
|-DefinitionData pass_in_registers trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5557155ed988 <col:1, col:7> col:7 implicit referenced class Storage
|-AccessSpecDecl 0x5557155eda18 <col:17, col:23> col:17 public
|-TypedefDecl 0x5557155eda50 <line:11:5, col:22> col:22 referenced index_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55571510b0e0 'uint32_t' sugar
|   |-Typedef 0x55571501c3d8 'uint32_t'
|   `-TypedefType 0x555714ff5480 '__uint32_t' sugar
|     |-Typedef 0x555714ff5078 '__uint32_t'
|     `-BuiltinType 0x555714fb3450 'unsigned int'
|-TypedefDecl 0x5557155edab8 <line:12:5, col:21> col:21 referenced signed_index_type 'int32_t':'int'
| `-TypedefType 0x55571510b1c0 'int32_t' sugar
|   |-Typedef 0x55571501c238 'int32_t'
|   `-TypedefType 0x555714ff53f0 '__int32_t' sugar
|     |-Typedef 0x555714ff5008 '__int32_t'
|     `-BuiltinType 0x555714fb33b0 'int'
|-VarDecl 0x5557155edb40 <line:13:5, col:59> col:29 referenced invalid_index 'const Storage::index_type':'const unsigned int' static cinit
| `-CStyleCastExpr 0x5557155edc08 <col:45, col:59> 'Storage::index_type':'unsigned int' <NoOp>
|   `-ImplicitCastExpr 0x5557155edbf0 <col:58, col:59> 'Storage::index_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|     `-UnaryOperator 0x5557155edbc8 <col:58, col:59> 'int' prefix '-'
|       `-IntegerLiteral 0x5557155edba8 <col:59> 'int' 1
|-CXXConstructorDecl 0x5557155edcf0 <line:15:5, col:38> col:5 Storage 'void ()'
| |-CXXCtorInitializer Field 0x5557155ef540 '_head' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x5557155ef648 <col:23> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5557155ef608 <col:23> 'int' 0
| |-CXXCtorInitializer Field 0x5557155ef5a0 '_tail' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x5557155ef6c8 <col:33> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5557155ef688 <col:33> 'int' 0
| `-CompoundStmt 0x5557155ef718 <col:36, col:38>
|-CXXConversionDecl 0x5557155eddf8 <line:17:5, col:52> col:5 operator bool 'bool () const'
| `-CompoundStmt 0x5557155ef808 <col:27, col:52>
|   `-ReturnStmt 0x5557155ef7f8 <col:29, col:45>
|     `-BinaryOperator 0x5557155ef7d8 <col:36, col:45> 'bool' '!='
|       |-ImplicitCastExpr 0x5557155ef7a8 <col:36> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x5557155ef738 <col:36> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x5557155ef540
|       |   `-CXXThisExpr 0x5557155ef728 <col:36> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x5557155ef7c0 <col:45> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x5557155ef778 <col:45> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x5557155ef5a0
|           `-CXXThisExpr 0x5557155ef768 <col:45> 'const Storage *' implicit this
|-CXXMethodDecl 0x5557155edec8 <line:18:5, col:49> col:10 empty 'bool () const'
| `-CompoundStmt 0x5557155ef900 <col:24, col:49>
|   `-ReturnStmt 0x5557155ef8f0 <col:26, col:42>
|     `-BinaryOperator 0x5557155ef8d0 <col:33, col:42> 'bool' '=='
|       |-ImplicitCastExpr 0x5557155ef8a0 <col:33> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x5557155ef830 <col:33> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x5557155ef540
|       |   `-CXXThisExpr 0x5557155ef820 <col:33> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x5557155ef8b8 <col:42> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x5557155ef870 <col:42> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x5557155ef5a0
|           `-CXXThisExpr 0x5557155ef860 <col:42> 'const Storage *' implicit this
|-CXXMethodDecl 0x5557155edf90 <line:19:5, col:16> col:9 size 'int () const'
|-CXXMethodDecl 0x5557155ee1d0 <line:20:5, col:48> col:9 used size 'int (Storage::index_type, Storage::index_type) const'
| |-ParmVarDecl 0x5557155ee040 <col:14, col:25> col:25 head 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x5557155ee0b8 <col:31, col:42> col:42 tail 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5557155ee2a8 <line:21:5, col:46> col:9 capacity 'int () const'
| `-CompoundStmt 0x5557155ef998 <col:26, col:46>
|   `-ReturnStmt 0x5557155ef988 <col:28, col:35>
|     `-ImplicitCastExpr 0x5557155ef970 <col:35> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x5557155ef958 <col:35> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x5557155ef928 <col:35> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x5557155ef4b8
|           `-CXXThisExpr 0x5557155ef918 <col:35> 'const Storage *' implicit this
|-CXXMethodDecl 0x5557155ee398 <line:23:5, col:45> col:16 used head 'Storage::index_type () const'
| `-CompoundStmt 0x5557155efa18 <col:29, col:45>
|   `-ReturnStmt 0x5557155efa08 <col:31, col:38>
|     `-ImplicitCastExpr 0x5557155ef9f0 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5557155ef9c0 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x5557155ef540
|         `-CXXThisExpr 0x5557155ef9b0 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x5557155ee458 <line:24:5, col:45> col:16 used tail 'Storage::index_type () const'
| `-CompoundStmt 0x5557155efa98 <col:29, col:45>
|   `-ReturnStmt 0x5557155efa88 <col:31, col:38>
|     `-ImplicitCastExpr 0x5557155efa70 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5557155efa40 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x5557155ef5a0
|         `-CXXThisExpr 0x5557155efa30 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x5557155ee5f8 <line:26:5, line:28:5> line:26:16 used next_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x5557155ee508 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x5557155efc88 <col:43, line:28:5>
|   `-ReturnStmt 0x5557155efc78 <line:27:2, col:32>
|     `-ParenExpr 0x5557155efc58 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x5557155efc28 <col:10, col:31> 'unsigned int'
|         |-BinaryOperator 0x5557155efb40 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x5557155efb10 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x5557155efab0 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x5557155ee508 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x5557155efb28 <col:13> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         |   `-MemberExpr 0x5557155efae0 <col:13> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x5557155ef4b8
|         |     `-CXXThisExpr 0x5557155efad0 <col:13> 'const Storage *' implicit this
|         |-BinaryOperator 0x5557155efbd0 <col:25, col:27> 'unsigned int' '+'
|         | |-ImplicitCastExpr 0x5557155efba0 <col:25> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x5557155efb60 <col:25> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x5557155ee508 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x5557155efbb8 <col:27> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x5557155efb80 <col:27> 'int' 1
|         `-ImplicitCastExpr 0x5557155efc10 <col:31> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x5557155efbf0 <col:31> 'int' 0
|-CXXMethodDecl 0x5557155ee740 <line:29:5, line:31:5> line:29:16 used prev_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x5557155ee6b0 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x5557155efe78 <col:43, line:31:5>
|   `-ReturnStmt 0x5557155efe68 <line:30:2, col:32>
|     `-ParenExpr 0x5557155efe48 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x5557155efe18 <col:10, col:23> 'unsigned int'
|         |-BinaryOperator 0x5557155efd10 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x5557155efce0 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x5557155efca0 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x5557155ee6b0 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x5557155efcf8 <col:13> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x5557155efcc0 <col:13> 'int' 0
|         |-BinaryOperator 0x5557155efda0 <col:17, col:19> 'unsigned int' '-'
|         | |-ImplicitCastExpr 0x5557155efd70 <col:17> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x5557155efd30 <col:17> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x5557155ee6b0 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x5557155efd88 <col:19> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x5557155efd50 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x5557155efe00 <col:23> 'Storage::index_type':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x5557155efdd0 <col:23> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x5557155ef4b8
|             `-CXXThisExpr 0x5557155efdc0 <col:23> 'const Storage *' implicit this
|-CXXMethodDecl 0x5557155ee8b8 <line:34:5, col:54> col:10 set_capacity 'void (Storage::index_type)'
| |-ParmVarDecl 0x5557155ee7f8 <col:23, col:34> col:34 used c 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x5557155eff28 <col:37, col:54>
|   `-BinaryOperator 0x5557155eff08 <col:39, col:51> 'Storage::index_type':'unsigned int' lvalue '='
|     |-MemberExpr 0x5557155efea0 <col:39> 'Storage::index_type':'unsigned int' lvalue ->_capacity 0x5557155ef4b8
|     | `-CXXThisExpr 0x5557155efe90 <col:39> 'Storage *' implicit this
|     `-ImplicitCastExpr 0x5557155efef0 <col:51> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5557155efed0 <col:51> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x5557155ee7f8 'c' 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5557155eea00 <line:35:5, col:38> col:17 used set_head 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x5557155ee970 <col:26, col:37> col:37 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5557155eeb48 <line:36:5, col:38> col:17 used set_tail 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x5557155eeab8 <col:26, col:37> col:37 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5557155eec90 <line:37:5, col:46> col:17 used set_head_release 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x5557155eec00 <col:34, col:45> col:45 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5557155eedd8 <line:38:5, col:46> col:17 set_tail_acquire 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x5557155eed48 <col:34, col:45> col:45 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x5557155eeec8 <line:39:5, col:43> col:23 reserve_tail_atomic 'Storage::index_type ()' inline
|-CXXMethodDecl 0x5557155ef168 <line:41:5, line:43:35> line:41:24 packet_memory_barrier 'void (Packet *volatile &, volatile Storage::index_type &)' static inline
| |-ParmVarDecl 0x5557155eefb0 <col:46, col:64> col:64 packet 'Packet *volatile &'
| |-ParmVarDecl 0x5557155ef058 <line:42:46, col:67> col:67 index 'volatile Storage::index_type &'
| `-DeprecatedAttr 0x5557155ef218 <line:43:24> "" ""
|-CXXMethodDecl 0x5557155ef368 <line:44:5, line:45:35> line:44:17 packet_memory_barrier 'void (Packet *volatile &)' inline
| |-ParmVarDecl 0x5557155ef2a0 <col:39, col:57> col:57 packet 'Packet *volatile &'
| `-DeprecatedAttr 0x5557155ef410 <line:45:24> "" ""
|-AccessSpecDecl 0x5557155ef480 <line:47:3, col:12> col:3 protected
|-FieldDecl 0x5557155ef4b8 <line:48:5, col:16> col:16 referenced _capacity 'Storage::index_type':'unsigned int'
|-AccessSpecDecl 0x5557155ef508 <line:50:3, col:10> col:3 private
|-FieldDecl 0x5557155ef540 <line:51:5, col:25> col:25 referenced _head 'volatile Storage::index_type':'volatile unsigned int'
|-FieldDecl 0x5557155ef5a0 <line:52:5, col:25> col:25 referenced _tail 'volatile Storage::index_type':'volatile unsigned int'
`-CXXDestructorDecl 0x5557155f80a0 <line:9:7> col:7 implicit ~Storage 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.Storage = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.Storage = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SimpleQueue
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class Storage (base)
       108 |     Storage::index_type _capacity
       112 |     volatile Storage::index_type _head
       116 |     volatile Storage::index_type _tail
       120 |   class Packet *volatile * _q
       128 |   volatile int _drops
       132 |   int _highwater_length
           | [sizeof=136, dsize=136, align=8,
           |  nvsize=136, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557152d61e0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5557152d62f8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5557152d6388 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5557152d6458 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5557152d6540 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5557152d6758 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5557152d6600 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557152d6908 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5557152d6810 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5557152d6a50 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5557152d69c0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5557152d6b98 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5557152d6b08 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557152d6ce0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5557152d6c50 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557152d6da8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x5557152d6ef0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x5557152d6e60 <col:28> col:31 'int'
|-CXXMethodDecl 0x5557152d6fb8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x5557152d7100 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5557152d7070 <col:28> col:31 'int'
|-CXXMethodDecl 0x5557152d7278 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5557152d71b8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557152d73c0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5557152d7330 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557152d7488 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5557152d7648 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5557152d7538 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5557152d75b0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557152d7898 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5557152d7708 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5557152d7780 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5557152d7948 <col:86> "" ""
|-CXXMethodDecl 0x5557152d7bb8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5557152d7a28 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5557152d7aa0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557152d7d68 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5557152d7c78 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5557152d7f18 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5557152d7e20 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5557152d81e8 <line:81:5, col:98> col:28 used compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5557152d7fd0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5557152d8048 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5557152d80c0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557152d84c8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5557152d82b0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5557152d8328 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5557152d83a0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5557152d8580 <col:115> "" ""
|-AccessSpecDecl 0x5557152d85f0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5557152d8628 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557152d9b40 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5557152d9b40
| `-ParmVarDecl 0x5557152d9c48 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5557152d9ce8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5557152d9ce8
| `-ParmVarDecl 0x5557152d9df8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55571530f428 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x555715501220 <col:7>
|-CXXConstructorDecl 0x55571530f500 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55571530f500
| `-ParmVarDecl 0x55571530f618 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55571530f688 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55571530f688
| `-ParmVarDecl 0x55571530f798 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x555715503c20 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557154efdc8 prev 0x5557154e4fd0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5557154efec0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5557154effb0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5557154f00d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5557154f0258 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5557154f03d8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5557154f0558 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x555715501388 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x555715501bf8 <col:11>
|-CXXDestructorDecl 0x555715501460 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x555715501598 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x555715501598
| `-ParmVarDecl 0x5557155016a8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x555715501748 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x555715501748
| `-ParmVarDecl 0x555715501858 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x555715504618 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x555715504728 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5557155049a8 <col:11>
|   `-ReturnStmt 0x555715504998 <col:11>
|     `-UnaryOperator 0x555715504980 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x555715504970 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x555715504798 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x555715504798
  `-ParmVarDecl 0x5557155048a8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557154f05c0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5557154f06d8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5557154f0778 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5557154f07e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5557154f0848 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5557154f08b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5557154f0910 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5557154f09d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5557154f0a30 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5557154f0a90 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x555715501298 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5557154f0778 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x555715501c08 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x555715501c60 <col:12>
|-CXXConstructorDecl 0x5557155018c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5557155018c8
| `-ParmVarDecl 0x5557155019d8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x555715501a78 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x555715501a78
| `-ParmVarDecl 0x555715501b88 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x555715503d00 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557154de6e0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5557154de7f8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5557154de888 <col:16, col:22> col:16 public
|-EnumDecl 0x5557154de8b0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5557154de9b0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5557154dea90 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154de990 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5557154de970 <col:21> 'int' 28
| `-EnumConstantDecl 0x5557154dea40 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5557154deaa8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557154dea20 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5557154dea00 <col:22> 'int' 64
|-CXXMethodDecl 0x5557154dede8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5557154dead0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5557154deb50 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5557154debc8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5557154dec40 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5557154deea8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5557154df0a8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5557154def20 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5557154def98 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5557154df158 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5557154df2b8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5557154df1c8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5557154df360 <col:72> warn_unused_result ""
|-TypedefDecl 0x5557154df6c0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5557154df650 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5557154df5f0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5557154df5b0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x555714fb3310 'void'
|       |-PointerType 0x55571525e860 'unsigned char *'
|       | `-BuiltinType 0x555714fb3410 'unsigned char'
|       |-TypedefType 0x55571505ae30 'size_t' sugar
|       | |-Typedef 0x555715023af0 'size_t'
|       | `-BuiltinType 0x555714fb3470 'unsigned long'
|       `-PointerType 0x555714fb3b10 'void *'
|         `-BuiltinType 0x555714fb3310 'void'
|-CXXMethodDecl 0x5557154dfb38 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5557154df730 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5557154df7a8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5557154df840 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5557154df8c0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5557154fa230 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5557154fa218 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5557154fa1e0 <col:58> 'int' 0
| |-ParmVarDecl 0x5557154df940 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5557154fa258 <col:76> 'int' 0
| |-ParmVarDecl 0x5557154df9c0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5557154fa278 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5557154dfc08 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5557154dfc88 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5557154dfd48 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5557154dfde8 <col:20>
| `-OptimizeNoneAttr 0x5557154dfe40 <col:30>
|-CXXMethodDecl 0x5557154dfeb8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5557154dff58 <col:20>
| `-OptimizeNoneAttr 0x5557154dffb0 <col:30>
|-CXXMethodDecl 0x5557154e0028 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5557154e00c8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5557154e0178 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5557154e0218 <col:20>
| |-OptimizeNoneAttr 0x5557154e0270 <col:30>
| `-WarnUnusedResultAttr 0x5557154e0298 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5557154e02f0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5557154e0390 <col:20>
| `-OptimizeNoneAttr 0x5557154e03e8 <col:30>
|-CXXMethodDecl 0x5557154e0438 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5557154e04d8 <col:20>
| `-OptimizeNoneAttr 0x5557154e0530 <col:30>
|-CXXMethodDecl 0x5557154e0578 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5557154e0618 <col:20>
| `-OptimizeNoneAttr 0x5557154e0670 <col:30>
|-CXXMethodDecl 0x5557154e06b8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5557154e0778 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5557154e0840 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5557154e0908 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5557154e09c8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5557154e0ae8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5557154fa340 <col:54, line:99:5>
|   `-ReturnStmt 0x5557154fa330 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5557154fa318 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5557154fa2e8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5557154f0dc8
|         `-CXXThisExpr 0x5557154fa2d8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5557154e0c88 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5557154e0b98 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5557154fa3f0 <col:67, line:103:5>
|   `-BinaryOperator 0x5557154fa3d0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5557154fa368 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5557154f0dc8
|     | `-CXXThisExpr 0x5557154fa358 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5557154fa3b8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5557154fa398 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5557154e0b98 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5557154e0d80 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5557154fa470 <col:33, line:107:5>
|   `-ReturnStmt 0x5557154fa460 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5557154fa448 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5557154fa418 <col:16> 'void *' lvalue ->_destructor_argument 0x5557154f0e30
|         `-CXXThisExpr 0x5557154fa408 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5557154e0e40 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5557154faaa0 <col:25, line:113:5>
|   |-ParenExpr 0x5557154fa7e8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5557154fa7b8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5557154fa528 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5557154fa500 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5557154fa4c8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5557154fa498 <col:24> '<bound member function type>' ->shared 0x5557154dfeb8
|   |   |       `-ImplicitCastExpr 0x5557154fa4e8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5557154fa488 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5557154fa588 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5557154fa568 <col:42> 'int' 0
|   |   `-CallExpr 0x5557154fa718 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5557154fa700 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154fa6e0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5557154fa758 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fa5f8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5557154fa770 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fa620 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5557154fa788 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557154fa658 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5557154fa7a0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557154fa6c8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557154fa6b0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5557154fa678 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5557154fa9e8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5557154fa818 <col:2> 'unsigned char *' lvalue ->_head 0x5557154f0bd0
|   | | `-CXXThisExpr 0x5557154fa808 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5557154fa9d0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5557154fa9b0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5557154fa858 <col:10> 'unsigned char *' lvalue ->_data 0x5557154f0c38
|   |     | `-CXXThisExpr 0x5557154fa848 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5557154fa998 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5557154fa978 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5557154fa898 <col:18> 'unsigned char *' lvalue ->_tail 0x5557154f0ca0
|   |         | `-CXXThisExpr 0x5557154fa888 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5557154fa960 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5557154fa940 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5557154fa8d8 <col:26> 'unsigned char *' lvalue ->_end 0x5557154f0d08
|   |             | `-CXXThisExpr 0x5557154fa8c8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5557154fa928 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5557154fa908 <col:33> 'int' 0
|   `-BinaryOperator 0x5557154faa80 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5557154faa18 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5557154f0dc8
|     | `-CXXThisExpr 0x5557154faa08 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5557154faa68 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5557154faa48 <col:16> 'int' 0
|-CXXMethodDecl 0x5557154e0f80 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5557154e0ef0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5557154e1028 <col:20>
| |-OptimizeNoneAttr 0x5557154e1080 <col:30>
| `-WarnUnusedResultAttr 0x5557154e10a8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5557154e1178 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5557154e10e8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5557154e1220 <col:20>
| |-OptimizeNoneAttr 0x5557154e1278 <col:30>
| `-WarnUnusedResultAttr 0x5557154e12a0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5557154e13d8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5557154e12e0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5557154e1480 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5557154e1580 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5557154e14f0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5557154e1628 <col:20>
| `-OptimizeNoneAttr 0x5557154e1680 <col:30>
|-CXXMethodDecl 0x5557154e1748 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5557154e16b8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5557154e17f0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5557154e18f0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5557154e1860 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5557154e1998 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5557154e1a98 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5557154e1a08 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5557154e1b40 <col:20>
| `-OptimizeNoneAttr 0x5557154e1b98 <col:30>
|-CXXMethodDecl 0x5557154e1d28 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5557154e1bd8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5557154e1c50 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5557154fa298 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5557154e1dd8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5557154e1fd8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5557154e1e50 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5557154e1ec8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154e21e8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5557154e2098 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5557154e2110 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154e23f8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5557154e22a8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5557154e2328 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5557154fa2a8 <col:39> 'int' 0
|-CXXMethodDecl 0x5557154e24c8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5557154e2590 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5557154e2658 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5557154e2718 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5557154e27e0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5557154e2928 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5557154e2898 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5557154e2af8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5557154e29e8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5557154e2a60 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154e2bc8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5557154e2c88 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5557154e2d28 <col:20>
| `-OptimizeNoneAttr 0x5557154e2d80 <col:30>
|-CXXMethodDecl 0x5557154e2dd0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5557154e2e70 <col:20>
| `-OptimizeNoneAttr 0x5557154e2ec8 <col:30>
|-CXXMethodDecl 0x5557154e2f18 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5557154e2fd8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5557154e30a0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5557154e3140 <col:20>
| `-OptimizeNoneAttr 0x5557154e3198 <col:30>
|-CXXMethodDecl 0x5557154e32e8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5557154e31d8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5557154e3250 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154e3438 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5557154e33a8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154e3510 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5557154e35d0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5557154e3670 <col:20>
| `-OptimizeNoneAttr 0x5557154e36c8 <col:30>
|-CXXMethodDecl 0x5557154e3718 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5557154e37b8 <col:20>
| `-OptimizeNoneAttr 0x5557154e3810 <col:30>
|-CXXMethodDecl 0x5557154e3860 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5557154e3928 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5557154e39c8 <col:20>
| `-OptimizeNoneAttr 0x5557154e3a20 <col:30>
|-CXXMethodDecl 0x5557154e3a68 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5557154e3b88 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5557154e3cf8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5557154e3c38 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5557154e3de8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5557154e3e88 <col:20>
| `-OptimizeNoneAttr 0x5557154e3ee0 <col:30>
|-CXXMethodDecl 0x5557154e3f30 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5557154e3ff0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5557154e4228 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5557154e40a0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5557154e4118 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5557154e42d8 <col:20>
| `-OptimizeNoneAttr 0x5557154e4330 <col:30>
|-CXXMethodDecl 0x5557154e43d8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5557154e4478 <col:20>
| `-OptimizeNoneAttr 0x5557154e44d0 <col:30>
|-CXXMethodDecl 0x5557154e4520 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5557154e45c0 <col:20>
| `-OptimizeNoneAttr 0x5557154e4618 <col:30>
|-CXXMethodDecl 0x5557154e4660 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5557154e4700 <col:20>
| `-OptimizeNoneAttr 0x5557154e4758 <col:30>
|-CXXMethodDecl 0x5557154e4858 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5557154e4790 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5557154e4900 <col:20>
| `-OptimizeNoneAttr 0x5557154e4958 <col:30>
|-CXXMethodDecl 0x5557154e4b18 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5557154e4990 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5557154e4a08 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5557154e4bc8 <col:20>
| `-OptimizeNoneAttr 0x5557154e4c20 <col:30>
|-CXXMethodDecl 0x5557154e4cc8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5557154e4de8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5557154e4f08 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5557154e4fa8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5557154e4fd0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5557154e50f8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5557154e5198 <col:20>
| `-OptimizeNoneAttr 0x5557154e51f0 <col:30>
|-CXXMethodDecl 0x5557154e5298 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5557154e5338 <col:20>
| `-OptimizeNoneAttr 0x5557154e5390 <col:30>
|-AccessSpecDecl 0x5557154e53b8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5557154e53e0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5557154e54e0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5557154e5530 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557154e54c0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5557154e54a0 <col:14> 'int' 48
|-CXXMethodDecl 0x5557154e5598 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5557154e5638 <col:20>
| `-OptimizeNoneAttr 0x5557154e5690 <col:30>
|-CXXMethodDecl 0x5557154e5708 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5557154e57a8 <col:20>
| `-OptimizeNoneAttr 0x5557154e5800 <col:30>
|-CXXMethodDecl 0x5557154e58c8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5557154e5838 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5557154e5a68 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5557154e5c08 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5557154e5b18 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5557154e5cb0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5557154e5db0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5557154e6160 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e5d90 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5557154e5d70 <col:9> 'int' 0
| |-EnumConstantDecl 0x5557154e5e40 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5557154e6178 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e5e20 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5557154e5e00 <col:14> 'int' 1
| |-EnumConstantDecl 0x5557154e5ed0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5557154e6190 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e5eb0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5557154e5e90 <col:14> 'int' 2
| |-EnumConstantDecl 0x5557154e5f60 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5557154e61a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e5f40 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5557154e5f20 <col:14> 'int' 3
| |-EnumConstantDecl 0x5557154e5ff0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5557154e61c0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e5fd0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5557154e5fb0 <col:13> 'int' 4
| |-EnumConstantDecl 0x5557154e6080 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5557154e61d8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e6060 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5557154e6040 <col:13> 'int' 5
| `-EnumConstantDecl 0x5557154e6110 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5557154e61f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557154e60f0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5557154e60d0 <col:14> 'int' 6
|-CXXMethodDecl 0x5557154e6258 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5557154e62f8 <col:20>
| `-OptimizeNoneAttr 0x5557154e6350 <col:30>
|-CXXMethodDecl 0x5557154e6448 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5557154e6388 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5557154e64f0 <col:20>
| `-OptimizeNoneAttr 0x5557154e6548 <col:30>
|-CXXMethodDecl 0x5557154e65b8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5557154e66e0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5557154e6858 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5557154e6790 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5557154e6920 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5557154e69e8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5557154e6b28 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5557154e6a98 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5557154e6bd0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5557154e6cd0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5557154e6ed0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e6cb0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5557154e6c90 <col:23> 'int' 0
| |-EnumConstantDecl 0x5557154e6d60 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5557154e6ee8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e6d40 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5557154e6d20 <col:45> 'int' 4
| |-EnumConstantDecl 0x5557154e6df0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5557154e6f00 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e6dd0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5557154e6db0 <col:24> 'int' 0
| `-EnumConstantDecl 0x5557154e6e80 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5557154e6f18 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557154e6e60 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5557154e6e40 <col:47> 'int' 16
|-CXXMethodDecl 0x5557154e6f78 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5557154e70e8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5557154e7028 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5557154e7190 <col:20>
| `-OptimizeNoneAttr 0x5557154e71e8 <col:30>
|-CXXMethodDecl 0x5557154e7238 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5557154fabc0 <col:18, col:36>
|   `-ReturnStmt 0x5557154fabb0 <col:20, col:33>
|     `-ImplicitCastExpr 0x5557154fab98 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5557154fab78 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5557154fab48 <col:27> '<bound member function type>' ->xanno 0x5557154e5298
|           `-CXXThisExpr 0x5557154fab38 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5557154e7330 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5557154facd0 <col:30, col:48>
|   `-ReturnStmt 0x5557154facc0 <col:32, col:45>
|     `-ImplicitCastExpr 0x5557154faca8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5557154fac88 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5557154fac58 <col:39> '<bound member function type>' ->xanno 0x5557154e50f8
|           `-CXXThisExpr 0x5557154fac48 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5557154e7418 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5557154fae68 <col:24, col:50>
|   `-ReturnStmt 0x5557154fae58 <col:26, col:47>
|     `-UnaryOperator 0x5557154fae40 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5557154fae20 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5557154fae08 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5557154fadb8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5557154f00d8
|         |   `-CXXMemberCallExpr 0x5557154fad98 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5557154fad68 <col:34> '<bound member function type>' ->xanno 0x5557154e5298
|         |       `-CXXThisExpr 0x5557154fad58 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5557154fade8 <col:46> 'int' 0
|-CXXMethodDecl 0x5557154e7520 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5557154fb038 <col:36, col:62>
|   `-ReturnStmt 0x5557154fb028 <col:38, col:59>
|     `-UnaryOperator 0x5557154fb010 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5557154faff0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5557154fafd8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5557154faf50 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5557154f00d8
|         |   `-CXXMemberCallExpr 0x5557154faf30 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5557154faf00 <col:46> '<bound member function type>' ->xanno 0x5557154e50f8
|         |       `-CXXThisExpr 0x5557154faef0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5557154faf80 <col:58> 'int' 0
|-CXXMethodDecl 0x5557154e7638 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5557154fb1d0 <col:26, col:53>
|   `-ReturnStmt 0x5557154fb1c0 <col:28, col:50>
|     `-UnaryOperator 0x5557154fb1a8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5557154fb188 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5557154fb170 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5557154fb120 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5557154f03d8
|         |   `-CXXMemberCallExpr 0x5557154fb100 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5557154fb0d0 <col:36> '<bound member function type>' ->xanno 0x5557154e5298
|         |       `-CXXThisExpr 0x5557154fb0c0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5557154fb150 <col:49> 'int' 0
|-CXXMethodDecl 0x5557154e7758 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5557154fb3a8 <col:38, col:65>
|   `-ReturnStmt 0x5557154fb398 <col:40, col:62>
|     `-UnaryOperator 0x5557154fb380 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5557154fb360 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5557154fb348 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5557154fb2b8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5557154f03d8
|         |   `-CXXMemberCallExpr 0x5557154fb298 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5557154fb268 <col:48> '<bound member function type>' ->xanno 0x5557154e50f8
|         |       `-CXXThisExpr 0x5557154fb258 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5557154fb2e8 <col:61> 'int' 0
|-CXXMethodDecl 0x5557154e7908 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5557154e7810 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5557154fba78 <col:34, line:463:5>
|   |-ParenExpr 0x5557154fb8c0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5557154fb890 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5557154fb4f8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5557154fb4c8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5557154fb418 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5557154fb400 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5557154fb3c0 <col:23> 'int' lvalue ParmVar 0x5557154e7810 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5557154fb3e0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5557154fb4a8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5557154fb478 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5557154fb438 <col:33> 'int' lvalue ParmVar 0x5557154e7810 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5557154fb490 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5557154fb458 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5557154fb558 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5557154fb538 <col:56> 'int' 0
|   |   `-CallExpr 0x5557154fb7f0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5557154fb7d8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154fb7b8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5557154fb830 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fb648 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5557154fb848 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fb678 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5557154fb860 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557154fb6b0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5557154fb878 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557154fb7a0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557154fb788 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5557154fb748 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5557154fba68 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5557154fba50 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5557154fba30 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5557154fba00 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5557154fb9b0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5557154f00d8
|         |   `-CXXMemberCallExpr 0x5557154fb990 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5557154fb960 <col:9> '<bound member function type>' ->xanno 0x5557154e50f8
|         |       `-CXXThisExpr 0x5557154fb950 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5557154fba18 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5557154fb9e0 <col:21> 'int' lvalue ParmVar 0x5557154e7810 'i' 'int'
|-CXXMethodDecl 0x5557154e7b58 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5557154e79c8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5557154e7a40 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5557154fc108 <col:40, line:472:5>
|   |-ParenExpr 0x5557154fbf20 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5557154fbef0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5557154fbbd0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5557154fbba0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5557154fbaf0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5557154fbad8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5557154fba98 <col:23> 'int' lvalue ParmVar 0x5557154e79c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5557154fbab8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5557154fbb80 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5557154fbb50 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5557154fbb10 <col:33> 'int' lvalue ParmVar 0x5557154e79c8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5557154fbb68 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5557154fbb30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5557154fbc30 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5557154fbc10 <col:56> 'int' 0
|   |   `-CallExpr 0x5557154fbe50 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5557154fbe38 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154fbe18 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5557154fbe90 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fbca0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5557154fbea8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fbcd0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5557154fbec0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557154fbd08 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5557154fbed8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557154fbe00 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557154fbde8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5557154fbda8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5557154fc0e8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5557154fc090 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5557154fc060 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5557154fc010 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5557154f00d8
|     | |   `-CXXMemberCallExpr 0x5557154fbff0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5557154fbfc0 <col:2> '<bound member function type>' ->xanno 0x5557154e5298
|     | |       `-CXXThisExpr 0x5557154fbfb0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5557154fc078 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5557154fc040 <col:14> 'int' lvalue ParmVar 0x5557154e79c8 'i' 'int'
|     `-ImplicitCastExpr 0x5557154fc0d0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5557154fc0b0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5557154e7a40 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5557154e7d18 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5557154e7c20 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5557154fc888 <col:36, line:485:5>
|   |-ParenExpr 0x5557154fc5f0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5557154fc5c0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5557154fc2a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5557154fc270 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5557154fc180 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5557154fc168 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5557154fc128 <col:23> 'int' lvalue ParmVar 0x5557154e7c20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5557154fc148 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5557154fc250 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5557154fc238 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5557154fc1a0 <col:33> 'int' lvalue ParmVar 0x5557154e7c20 'i' 'int'
|   |   |     `-BinaryOperator 0x5557154fc218 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5557154fc200 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5557154fc1c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5557154fc1e0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5557154fc300 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5557154fc2e0 <col:60> 'int' 0
|   |   `-CallExpr 0x5557154fc520 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5557154fc508 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154fc4e8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5557154fc560 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fc370 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5557154fc578 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fc3a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5557154fc590 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557154fc3e0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5557154fc5a8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557154fc4d0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557154fc4b8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5557154fc478 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5557154fc878 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5557154fc860 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5557154fc848 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5557154fc818 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5557154fc7b8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5557154fc788 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5557154fc700 <col:61, col:70> 'char const[48]' lvalue ->c 0x5557154effb0
|             |   `-CXXMemberCallExpr 0x5557154fc6e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5557154fc6b0 <col:61> '<bound member function type>' ->xanno 0x5557154e50f8
|             |       `-CXXThisExpr 0x5557154fc6a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5557154fc7a0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5557154fc730 <col:74> 'int' lvalue ParmVar 0x5557154e7c20 'i' 'int'
|-CXXMethodDecl 0x5557154e7f68 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5557154e7dd8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5557154e7e50 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5557154fcfd8 <col:42, line:500:5>
|   |-ParenExpr 0x5557154fcd70 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5557154fcd40 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5557154fca20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5557154fc9f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5557154fc900 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5557154fc8e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5557154fc8a8 <col:23> 'int' lvalue ParmVar 0x5557154e7dd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5557154fc8c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5557154fc9d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5557154fc9b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5557154fc920 <col:33> 'int' lvalue ParmVar 0x5557154e7dd8 'i' 'int'
|   |   |     `-BinaryOperator 0x5557154fc998 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5557154fc980 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5557154fc940 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5557154fc960 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5557154fca80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5557154fca60 <col:60> 'int' 0
|   |   `-CallExpr 0x5557154fcca0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5557154fcc88 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154fcc68 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5557154fcce0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fcaf0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5557154fccf8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fcb28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5557154fcd10 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557154fcb60 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5557154fcd28 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557154fcc50 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557154fcc38 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5557154fcbf8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5557154fcfb8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5557154fcf68 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5557154fcf38 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5557154fcee0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5557154fceb0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5557154fce60 <col:48, col:57> 'char [48]' lvalue ->c 0x5557154effb0
|     |     |   `-CXXMemberCallExpr 0x5557154fce40 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5557154fce10 <col:48> '<bound member function type>' ->xanno 0x5557154e5298
|     |     |       `-CXXThisExpr 0x5557154fce00 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5557154fcec8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5557154fce90 <col:61> 'int' lvalue ParmVar 0x5557154e7dd8 'i' 'int'
|     `-ImplicitCastExpr 0x5557154fcfa0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5557154fcf80 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5557154e7e50 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5557154e8128 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5557154e8030 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5557154fd738 <col:35, line:513:5>
|   |-ParenExpr 0x5557154fd448 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5557154fd418 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5557154fd170 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5557154fd140 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5557154fd050 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5557154fd038 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5557154fcff8 <col:23> 'int' lvalue ParmVar 0x5557154e8030 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5557154fd018 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5557154fd120 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5557154fd108 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5557154fd070 <col:33> 'int' lvalue ParmVar 0x5557154e8030 'i' 'int'
|   |   |     `-BinaryOperator 0x5557154fd0e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5557154fd0d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5557154fd090 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5557154fd0b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5557154fd1d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5557154fd1b0 <col:60> 'int' 0
|   |   `-CallExpr 0x5557154fd378 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5557154fd360 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154fd340 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5557154fd3b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fd240 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5557154fd3d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fd278 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5557154fd3e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557154fd2b0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5557154fd400 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557154fd328 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557154fd310 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5557154fd2d0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5557154fd728 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5557154fd710 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5557154fd6f8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5557154fd6c8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5557154fd640 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5557154fd610 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5557154fd5c0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5557154effb0
|             |   `-CXXMemberCallExpr 0x5557154fd5a0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5557154fd570 <col:60> '<bound member function type>' ->xanno 0x5557154e50f8
|             |       `-CXXThisExpr 0x5557154fd560 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5557154fd628 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5557154fd5f0 <col:73> 'int' lvalue ParmVar 0x5557154e8030 'i' 'int'
|-CXXMethodDecl 0x5557154e8378 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5557154e81e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5557154e8260 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5557154fde58 <col:41, line:528:5>
|   |-ParenExpr 0x5557154fdbe0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5557154fdbb0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5557154fd8d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5557154fd8a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5557154fd7b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5557154fd798 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5557154fd758 <col:23> 'int' lvalue ParmVar 0x5557154e81e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5557154fd778 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5557154fd880 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5557154fd868 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5557154fd7d0 <col:33> 'int' lvalue ParmVar 0x5557154e81e8 'i' 'int'
|   |   |     `-BinaryOperator 0x5557154fd848 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5557154fd830 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5557154fd7f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5557154fd810 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5557154fd930 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5557154fd910 <col:60> 'int' 0
|   |   `-CallExpr 0x5557154fdb10 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5557154fdaf8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154fdad8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5557154fdb50 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fd9a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5557154fdb68 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fd9d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5557154fdb80 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557154fda10 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5557154fdb98 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557154fdac0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557154fdaa8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5557154fda68 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5557154fde38 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5557154fdde8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5557154fddb8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5557154fdd60 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5557154fdd20 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5557154fdcd0 <col:47, col:56> 'char [48]' lvalue ->c 0x5557154effb0
|     |     |   `-CXXMemberCallExpr 0x5557154fdcb0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5557154fdc80 <col:47> '<bound member function type>' ->xanno 0x5557154e5298
|     |     |       `-CXXThisExpr 0x5557154fdc70 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5557154fdd38 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5557154fdd00 <col:60> 'int' lvalue ParmVar 0x5557154e81e8 'i' 'int'
|     `-ImplicitCastExpr 0x5557154fde20 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5557154fde00 <col:65> 'int16_t':'short' lvalue ParmVar 0x5557154e8260 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5557154e8538 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5557154e8440 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5557154fe528 <col:36, line:541:5>
|   |-ParenExpr 0x5557154fe2c8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5557154fe298 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5557154fdff0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5557154fdfc0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5557154fded0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5557154fdeb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5557154fde78 <col:23> 'int' lvalue ParmVar 0x5557154e8440 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5557154fde98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5557154fdfa0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5557154fdf88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5557154fdef0 <col:33> 'int' lvalue ParmVar 0x5557154e8440 'i' 'int'
|   |   |     `-BinaryOperator 0x5557154fdf68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5557154fdf50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5557154fdf10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5557154fdf30 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5557154fe050 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5557154fe030 <col:60> 'int' 0
|   |   `-CallExpr 0x5557154fe1f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5557154fe1e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154fe1c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5557154fe238 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fe0c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5557154fe250 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fe0f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5557154fe268 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557154fe130 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5557154fe280 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557154fe1a8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557154fe190 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5557154fe150 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5557154fe518 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5557154fe500 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5557154fe4e8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5557154fe4b8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5557154fe460 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5557154fe430 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5557154fe3e0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5557154effb0
|             |   `-CXXMemberCallExpr 0x5557154fe3c0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5557154fe390 <col:61> '<bound member function type>' ->xanno 0x5557154e50f8
|             |       `-CXXThisExpr 0x5557154fe380 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5557154fe448 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5557154fe410 <col:74> 'int' lvalue ParmVar 0x5557154e8440 'i' 'int'
|-CXXMethodDecl 0x5557154e8708 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5557154e85f8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5557154e8670 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5557154e87b8 <col:20>
| `-OptimizeNoneAttr 0x5557154e8810 <col:30>
|-CXXMethodDecl 0x5557154e8948 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5557154e8850 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5557154febf8 <col:35, line:562:5>
|   |-ParenExpr 0x5557154fe998 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5557154fe968 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5557154fe6c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5557154fe690 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5557154fe5a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5557154fe588 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5557154fe548 <col:23> 'int' lvalue ParmVar 0x5557154e8850 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5557154fe568 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5557154fe670 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5557154fe658 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5557154fe5c0 <col:33> 'int' lvalue ParmVar 0x5557154e8850 'i' 'int'
|   |   |     `-BinaryOperator 0x5557154fe638 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5557154fe620 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5557154fe5e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5557154fe600 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5557154fe720 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5557154fe700 <col:60> 'int' 0
|   |   `-CallExpr 0x5557154fe8c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5557154fe8b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154fe890 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5557154fe908 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fe790 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5557154fe920 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fe7c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5557154fe938 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557154fe800 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5557154fe950 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557154fe878 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557154fe860 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5557154fe820 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5557154febe8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5557154febd0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5557154febb8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5557154feb88 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5557154feb30 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5557154feb00 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5557154feab0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5557154effb0
|             |   `-CXXMemberCallExpr 0x5557154fea90 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5557154fea60 <col:60> '<bound member function type>' ->xanno 0x5557154e50f8
|             |       `-CXXThisExpr 0x5557154fea50 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5557154feb18 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5557154feae0 <col:73> 'int' lvalue ParmVar 0x5557154e8850 'i' 'int'
|-CXXMethodDecl 0x5557154e8b58 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5557154e8a08 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5557154e8a80 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5557154ff2d8 <col:41, line:577:5>
|   |-ParenExpr 0x5557154ff068 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5557154ff038 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5557154fed90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5557154fed60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5557154fec70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5557154fec58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5557154fec18 <col:23> 'int' lvalue ParmVar 0x5557154e8a08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5557154fec38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5557154fed40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5557154fed28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5557154fec90 <col:33> 'int' lvalue ParmVar 0x5557154e8a08 'i' 'int'
|   |   |     `-BinaryOperator 0x5557154fed08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5557154fecf0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5557154fecb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5557154fecd0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5557154fedf0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5557154fedd0 <col:60> 'int' 0
|   |   `-CallExpr 0x5557154fef98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5557154fef80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154fef60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5557154fefd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fee60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5557154feff0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154fee98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5557154ff008 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557154feed0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5557154ff020 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557154fef48 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557154fef30 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5557154feef0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5557154ff2b8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5557154ff268 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5557154ff238 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5557154ff1d8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5557154ff1a8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5557154ff158 <col:47, col:56> 'char [48]' lvalue ->c 0x5557154effb0
|     |     |   `-CXXMemberCallExpr 0x5557154ff138 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5557154ff108 <col:47> '<bound member function type>' ->xanno 0x5557154e5298
|     |     |       `-CXXThisExpr 0x5557154ff0f8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5557154ff1c0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5557154ff188 <col:60> 'int' lvalue ParmVar 0x5557154e8a08 'i' 'int'
|     `-ImplicitCastExpr 0x5557154ff2a0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5557154ff280 <col:65> 'int32_t':'int' lvalue ParmVar 0x5557154e8a80 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5557154e8d18 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5557154e8c20 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5557154ffa08 <col:36, line:591:5>
|   |-ParenExpr 0x5557154ff748 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5557154ff718 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5557154ff470 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5557154ff440 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5557154ff350 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5557154ff338 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5557154ff2f8 <col:23> 'int' lvalue ParmVar 0x5557154e8c20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5557154ff318 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5557154ff420 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5557154ff408 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5557154ff370 <col:33> 'int' lvalue ParmVar 0x5557154e8c20 'i' 'int'
|   |   |     `-BinaryOperator 0x5557154ff3e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5557154ff3d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5557154ff390 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5557154ff3b0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5557154ff4d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5557154ff4b0 <col:60> 'int' 0
|   |   `-CallExpr 0x5557154ff678 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5557154ff660 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154ff640 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5557154ff6b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154ff540 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5557154ff6d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154ff578 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5557154ff6e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557154ff5b0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5557154ff700 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557154ff628 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557154ff610 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5557154ff5d0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5557154ff9f8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5557154ff9e0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5557154ff9c8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5557154ff998 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5557154ff910 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5557154ff8e0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5557154ff890 <col:61, col:70> 'char const[48]' lvalue ->c 0x5557154effb0
|             |   `-CXXMemberCallExpr 0x5557154ff870 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5557154ff840 <col:61> '<bound member function type>' ->xanno 0x5557154e50f8
|             |       `-CXXThisExpr 0x5557154ff830 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5557154ff8f8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5557154ff8c0 <col:74> 'int' lvalue ParmVar 0x5557154e8c20 'i' 'int'
|-CXXMethodDecl 0x5557154e8f68 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5557154e8dd8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5557154e8e50 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5557155000e8 <col:42, line:606:5>
|   |-ParenExpr 0x5557154ffe78 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5557154ffe48 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5557154ffba0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5557154ffb70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5557154ffa80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5557154ffa68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5557154ffa28 <col:23> 'int' lvalue ParmVar 0x5557154e8dd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5557154ffa48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5557154ffb50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5557154ffb38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5557154ffaa0 <col:33> 'int' lvalue ParmVar 0x5557154e8dd8 'i' 'int'
|   |   |     `-BinaryOperator 0x5557154ffb18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5557154ffb00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5557154ffac0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5557154ffae0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5557154ffc00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5557154ffbe0 <col:60> 'int' 0
|   |   `-CallExpr 0x5557154ffda8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5557154ffd90 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154ffd70 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5557154ffde8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154ffc70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5557154ffe00 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5557154ffca8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5557154ffe18 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557154ffce0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5557154ffe30 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557154ffd58 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5557154ffd40 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5557154ffd00 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5557155000c8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x555715500078 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x555715500048 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5557154fffe8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5557154fffb8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5557154fff68 <col:48, col:57> 'char [48]' lvalue ->c 0x5557154effb0
|     |     |   `-CXXMemberCallExpr 0x5557154fff48 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5557154fff18 <col:48> '<bound member function type>' ->xanno 0x5557154e5298
|     |     |       `-CXXThisExpr 0x5557154fff08 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5557154fffd0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5557154fff98 <col:61> 'int' lvalue ParmVar 0x5557154e8dd8 'i' 'int'
|     `-ImplicitCastExpr 0x5557155000b0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x555715500090 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5557154e8e50 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5557154e9100 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5557154e9030 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x555715500958 <col:33, line:620:5>
|   |-ParenExpr 0x5557155006d0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5557155006a0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5557155002f0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5557155002c0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555715500160 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555715500148 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555715500108 <col:23> 'int' lvalue ParmVar 0x5557154e9030 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555715500128 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5557155002a0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x555715500288 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555715500180 <col:33> 'int' lvalue ParmVar 0x5557154e9030 'i' 'int'
|   |   |     `-BinaryOperator 0x555715500268 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555715500250 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5557155001a0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x555715500228 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x555715500210 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5557155001d8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x555715500350 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555715500330 <col:79> 'int' 0
|   |   `-CallExpr 0x555715500600 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5557155005e8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557155005c8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555715500640 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555715500438 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x555715500658 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555715500480 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555715500670 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5557155004b8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x555715500688 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5557155005b0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555715500598 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555715500558 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x555715500948 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x555715500930 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x555715500918 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5557155008e8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x555715500860 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x555715500830 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5557155007e0 <col:67, col:76> 'char const[48]' lvalue ->c 0x5557154effb0
|             |   `-CXXMemberCallExpr 0x5557155007c0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x555715500790 <col:67> '<bound member function type>' ->xanno 0x5557154e50f8
|             |       `-CXXThisExpr 0x555715500780 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x555715500848 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x555715500810 <col:80> 'int' lvalue ParmVar 0x5557154e9030 'i' 'int'
|-CXXMethodDecl 0x5557154e9318 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5557154e91c0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5557154e9240 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x555715501180 <col:45, line:635:5>
|   |-ParenExpr 0x555715500ec8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x555715500e98 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x555715500b60 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555715500b30 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5557155009d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5557155009b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555715500978 <col:23> 'int' lvalue ParmVar 0x5557154e91c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555715500998 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555715500b10 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x555715500af8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5557155009f0 <col:33> 'int' lvalue ParmVar 0x5557154e91c0 'i' 'int'
|   |   |     `-BinaryOperator 0x555715500ad8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555715500ac0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x555715500a10 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5557154e54e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x555715500a98 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x555715500a80 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x555715500a48 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x555715500bc0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555715500ba0 <col:79> 'int' 0
|   |   `-CallExpr 0x555715500df8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x555715500de0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555715500dc0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555715500e38 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555715500c30 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x555715500e50 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555715500c78 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555715500e68 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555715500cb0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x555715500e80 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555715500da8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555715500d90 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555715500d48 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x555715501160 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5557155010c8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x555715501098 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x555715501038 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x555715501008 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x555715500fb8 <col:54, col:63> 'char [48]' lvalue ->c 0x5557154effb0
|     |     |   `-CXXMemberCallExpr 0x555715500f98 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x555715500f68 <col:54> '<bound member function type>' ->xanno 0x5557154e5298
|     |     |       `-CXXThisExpr 0x555715500f58 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x555715501020 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x555715500fe8 <col:67> 'int' lvalue ParmVar 0x5557154e91c0 'i' 'int'
|     `-CXXConstCastExpr 0x555715501130 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x555715501118 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5557155010e0 <col:91> 'const void *' lvalue ParmVar 0x5557154e9240 'x' 'const void *'
|-CXXMethodDecl 0x5557154e93e8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x555715501208 <col:34, line:640:5>
|   `-ReturnStmt 0x5557155011f8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5557155011e0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5557155011b0 <col:16> 'Packet *' lvalue ->_data_packet 0x5557154f0b68
|         `-CXXThisExpr 0x5557155011a0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5557154e9528 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5557154e9498 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5557154fa2c8 <col:46> 'bool' true
|-CXXMethodDecl 0x5557154e96a8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5557154e95e0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5557154e9750 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5557154e9f00 <line:660:22> "" ""
| |-EnumConstantDecl 0x5557154e9850 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5557154e9f70 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e9830 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5557154e9810 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5557154de9b0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5557154e98e0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5557154e9f88 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e98c0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5557154e98a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5557154dea40 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5557154e9970 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5557154e9fa0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e9950 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5557154e9930 <col:21> 'int' 0
| |-EnumConstantDecl 0x5557154e9a00 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5557154e9fb8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e99e0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5557154e99c0 <col:19> 'int' 16
| |-EnumConstantDecl 0x5557154e9a90 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5557154e9fd0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e9a70 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5557154e9a50 <col:21> 'int' 16
| |-EnumConstantDecl 0x5557154e9b20 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5557154e9fe8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e9b00 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5557154e9ae0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5557154e9bb0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5557154ea000 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e9b90 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5557154e9b70 <col:19> 'int' EnumConstant 0x5557154e9a00 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5557154e9c40 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5557154ea018 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e9c20 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5557154e9c00 <col:19> 'int' EnumConstant 0x5557154e9b20 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5557154e9d10 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5557154ea030 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e9cf0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5557154e9cd0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5557154e9c90 <col:23> 'int' EnumConstant 0x5557154e9c40 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5557154e9cb0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5557154e9de0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5557154ea048 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154e9dc0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5557154e9da0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5557154e9d60 <col:23> 'int' EnumConstant 0x5557154e9c40 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5557154e9d80 <col:40> 'int' 4
| `-EnumConstantDecl 0x5557154e9eb0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5557154ea060 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557154e9e90 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5557154e9e70 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5557154e9e30 <col:23> 'int' EnumConstant 0x5557154e9c40 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5557154e9e50 <col:40> 'int' 8
|-CXXMethodDecl 0x5557154ea0a0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5557154ea140 <col:68> "" ""
|-CXXMethodDecl 0x5557154ea1d8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5557154ea278 <col:45> "" ""
|-CXXMethodDecl 0x5557154ea310 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5557154ea3b0 <col:57> "" ""
|-CXXMethodDecl 0x5557154ea448 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5557154ea4e8 <col:45> "" ""
|-CXXMethodDecl 0x5557154ea580 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5557154ea620 <col:57> "" ""
|-CXXMethodDecl 0x5557154ea6b0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5557154ea750 <col:51> "" ""
|-CXXMethodDecl 0x5557154ea7e0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5557154ea880 <col:63> "" ""
|-CXXMethodDecl 0x5557154ea910 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5557154ea9b0 <col:53> "" ""
|-CXXMethodDecl 0x5557154eaa40 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5557154eaae0 <col:65> "" ""
|-CXXMethodDecl 0x5557154eabf8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5557154eab68 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5557154eaca0 <col:61> "" ""
|-CXXMethodDecl 0x5557154eae38 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5557154ead28 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5557154eada0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5557154eaee8 <col:67> "" ""
|-CXXMethodDecl 0x5557154eb000 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5557154eaf70 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5557154eb0a8 <col:63> "" ""
|-CXXMethodDecl 0x5557154eb240 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5557154eb130 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5557154eb1a8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5557154eb2f0 <col:69> "" ""
|-CXXMethodDecl 0x5557154eb408 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5557154eb378 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5557154eb4b0 <col:63> "" ""
|-CXXMethodDecl 0x5557154edb88 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5557154eda78 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5557154edaf0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5557154edc38 <col:69> "" ""
|-CXXMethodDecl 0x5557154edd50 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5557154edcc0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5557154eddf8 <col:62> "" ""
|-CXXMethodDecl 0x5557154edf90 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5557154ede80 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5557154edef8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5557154ee040 <col:68> "" ""
|-CXXMethodDecl 0x5557154ee158 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5557154ee0c8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5557154ee200 <col:63> "" ""
|-CXXMethodDecl 0x5557154ee398 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5557154ee288 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5557154ee300 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5557154ee448 <col:69> "" ""
|-CXXMethodDecl 0x5557154ee4d8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5557154ee578 <col:64> "" ""
|-CXXMethodDecl 0x5557154ee608 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5557154ee6a8 <col:52> "" ""
|-CXXMethodDecl 0x5557154ee738 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5557154ee7d8 <col:67> "" ""
|-CXXMethodDecl 0x5557154ee868 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5557154ee908 <col:55> "" ""
|-CXXMethodDecl 0x5557154eea20 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5557154ee990 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5557154eeac8 <col:58> "" ""
|-CXXMethodDecl 0x5557154eec60 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5557154eeb50 <col:33> col:36 'int'
| |-ParmVarDecl 0x5557154eebc8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5557154eed10 <col:62> "" ""
|-CXXMethodDecl 0x5557154eee28 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5557154eed98 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5557154eeed0 <col:58> "" ""
|-CXXMethodDecl 0x5557154ef068 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5557154eef58 <col:33> col:36 'int'
| |-ParmVarDecl 0x5557154eefd0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5557154ef118 <col:62> "" ""
|-CXXMethodDecl 0x5557154ef230 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5557154ef1a0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5557154ef2d8 <col:60> "" ""
|-CXXMethodDecl 0x5557154ef470 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5557154ef360 <col:34> col:37 'int'
| |-ParmVarDecl 0x5557154ef3d8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5557154ef520 <col:64> "" ""
|-CXXMethodDecl 0x5557154ef638 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5557154ef5a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5557154ef6e0 <col:58> "" ""
|-CXXMethodDecl 0x5557154ef878 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5557154ef768 <col:33> col:36 'int'
| |-ParmVarDecl 0x5557154ef7e0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5557154ef928 <col:62> "" ""
|-CXXMethodDecl 0x5557154efa40 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5557154ef9b0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5557154efae8 <col:59> "" ""
|-CXXMethodDecl 0x5557154efc80 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5557154efb70 <col:33> col:36 'int'
| |-ParmVarDecl 0x5557154efbe8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5557154efd30 <col:63> "" ""
|-AccessSpecDecl 0x5557154efda0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5557154efdc8 prev 0x5557154e4fd0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5557154efec0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5557154effb0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5557154f00d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5557154f0258 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5557154f03d8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5557154f0558 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x555715501388 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x555715501bf8 <col:11>
| |-CXXDestructorDecl 0x555715501460 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x555715501598 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x555715501598
| | `-ParmVarDecl 0x5557155016a8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x555715501748 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x555715501748
| | `-ParmVarDecl 0x555715501858 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x555715504618 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x555715504728 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5557155049a8 <col:11>
| |   `-ReturnStmt 0x555715504998 <col:11>
| |     `-UnaryOperator 0x555715504980 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x555715504970 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x555715504798 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x555715504798
|   `-ParmVarDecl 0x5557155048a8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5557154f05c0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5557154f06d8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5557154f0778 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5557154f07e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5557154f0848 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5557154f08b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5557154f0910 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5557154f09d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5557154f0a30 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5557154f0a90 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x555715501298 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5557154f0778 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x555715501c08 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x555715501c60 <col:12>
| |-CXXConstructorDecl 0x5557155018c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5557155018c8
| | `-ParmVarDecl 0x5557155019d8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x555715501a78 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x555715501a78
| | `-ParmVarDecl 0x555715501b88 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x555715503d00 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5557154f0b08 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5557154f0b68 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5557154f0bd0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5557154f0c38 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5557154f0ca0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5557154f0d08 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5557154f0d68 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5557154f0dc8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5557154f0e30 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5557154f0eb8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5557154f0b08 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x555715501230 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5557154f0d68 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x555715501c70 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x555715501cd0 <col:21, line:755:5>
|-CXXConstructorDecl 0x5557154f1058 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5557154f0f98 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5557154f1150 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5557154f1338 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5557154f1240 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5557154f1608 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5557154f13f0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5557154f1468 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5557154f14e0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154f1828 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5557154f16d8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5557154f1750 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5557154f9e08 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5557154f18e8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5557154f1960 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5557154f19d8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5557154f9f60 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5557154f9ed0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154fa0a8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5557154fa018 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5557154fa1a0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557155f45c0 <../elements/standard/simplequeue.hh:65:1, line:114:1> line:65:7 referenced class SimpleQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-public 'Storage'
|-CXXRecordDecl 0x5557155f4758 <col:1, col:7> col:7 implicit referenced class SimpleQueue
|-AccessSpecDecl 0x5557155f47e8 <col:54, col:60> col:54 public
|-CXXConstructorDecl 0x5557155f4870 <line:67:5, col:17> col:5 SimpleQueue 'void ()'
|-CXXMethodDecl 0x5557155f4970 <line:69:5, col:40> col:9 drops 'int () const'
| `-CompoundStmt 0x5557155f81e8 <col:23, col:40>
|   `-ReturnStmt 0x5557155f81d8 <col:25, col:32>
|     `-ImplicitCastExpr 0x5557155f81c0 <col:32> 'int' <LValueToRValue>
|       `-MemberExpr 0x5557155f8190 <col:32> 'const volatile int' lvalue ->_drops 0x5557155f6e28
|         `-CXXThisExpr 0x5557155f8180 <col:32> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x5557155f4a38 <line:70:5, col:62> col:9 highwater_length 'int () const'
| `-CompoundStmt 0x5557155f8268 <col:34, col:62>
|   `-ReturnStmt 0x5557155f8258 <col:36, col:43>
|     `-ImplicitCastExpr 0x5557155f8240 <col:43> 'int' <LValueToRValue>
|       `-MemberExpr 0x5557155f8210 <col:43> 'const int' lvalue ->_highwater_length 0x5557155f6e90
|         `-CXXThisExpr 0x5557155f8200 <col:43> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x5557155f4ba8 <line:72:5, col:28> col:17 enq 'bool (Packet *)' inline
| `-ParmVarDecl 0x5557155f4ae8 <col:21, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x5557155f4cf0 <line:73:5, col:33> col:17 lifo_enq 'void (Packet *)' inline
| `-ParmVarDecl 0x5557155f4c60 <col:26, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x5557155f4db8 <line:74:5, col:24> col:20 deq 'Packet *()' inline
|-CXXMethodDecl 0x5557155f4f00 <line:77:5, col:49> col:13 packet 'Packet *(int) const'
| |-ParmVarDecl 0x5557155f4e70 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5557155f8358 <col:33, col:49>
|   `-ReturnStmt 0x5557155f8348 <col:35, col:46>
|     `-ImplicitCastExpr 0x5557155f8330 <col:42, col:46> 'Packet *' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5557155f8310 <col:42, col:46> 'Packet *volatile' lvalue
|         |-ImplicitCastExpr 0x5557155f82e0 <col:42> 'Packet *volatile *' <LValueToRValue>
|         | `-MemberExpr 0x5557155f8290 <col:42> 'Packet *volatile *const' lvalue ->_q 0x5557155f6dc0
|         |   `-CXXThisExpr 0x5557155f8280 <col:42> 'const SimpleQueue *' implicit this
|         `-ImplicitCastExpr 0x5557155f82f8 <col:45> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5557155f82c0 <col:45> 'int' lvalue ParmVar 0x5557155f4e70 'i' 'int'
|-CXXMethodDecl 0x5557155f4fc8 <line:78:5, col:16> col:10 reset 'void ()'
|-FunctionTemplateDecl 0x5557155f52a8 <line:80:5, col:52> col:40 yank1
| |-TemplateTypeParmDecl 0x5557155f5068 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x5557155f5208 <col:32, col:52> col:40 yank1 'Packet *(Filter)'
|   `-ParmVarDecl 0x5557155f5118 <col:46> col:52 'Filter'
|-FunctionTemplateDecl 0x5557155f5518 <line:81:5, col:57> col:40 yank1_peek
| |-TemplateTypeParmDecl 0x5557155f5308 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x5557155f5478 <col:32, col:57> col:40 yank1_peek 'Packet *(Filter)'
|   `-ParmVarDecl 0x5557155f53b8 <col:51> col:57 'Filter'
|-FunctionTemplateDecl 0x5557155f5a60 <line:82:5, col:67> col:36 yank
| |-TemplateTypeParmDecl 0x5557155f5578 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x5557155f59c0 <col:32, col:67> col:36 yank 'int (Filter, Vector<Packet *> &)'
|   |-ParmVarDecl 0x5557155f5628 <col:41> col:47 'Filter'
|   `-ParmVarDecl 0x5557155f58a0 <col:49, col:66> col:67 'Vector<Packet *> &'
|-CXXMethodDecl 0x5557155f5af0 <line:84:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x555715518e68 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5557155f83c0 <col:36, col:60>
|   `-ReturnStmt 0x5557155f83b0 <col:38, col:45>
|     `-ImplicitCastExpr 0x5557155f8398 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5557155f8370 <col:45> 'const char [12]' lvalue "SimpleQueue"
|-CXXMethodDecl 0x5557155f5bb8 <line:85:5, col:58> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x555715518f30 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5557155f8420 <col:36, col:58>
|   `-ReturnStmt 0x5557155f8410 <col:38, col:45>
|     `-ImplicitCastExpr 0x5557155f83f8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5557155f83d8 <col:45> 'const char []' lvalue Var 0x555715519268 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x5557155f5c80 <line:86:5, col:53> col:17 processing 'const char *() const'
| |-Overrides: [ 0x5557155192f8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x5557155f8500 <col:36, col:53>
|   `-ReturnStmt 0x5557155f84f0 <col:38, col:45>
|     `-ImplicitCastExpr 0x5557155f84d8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5557155f84b8 <col:45> 'const char [5]' lvalue "h/lh"
|-CXXMethodDecl 0x5557155f5dd0 <line:87:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x555715519b20 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x5557155f5d38 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x5557155f60b0 <line:89:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55571551a700 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5557155f5f60 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x5557155f5fd8 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x5557155f6208 <line:90:5, col:33> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55571551a950 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x5557155f6170 <col:20, col:32> col:33 'ErrorHandler *'
|-CXXMethodDecl 0x5557155f6350 <line:91:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55571551b168 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x5557155f62c0 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x5557155f6418 <line:92:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x55571551d150 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x5557155f8538 <col:39, col:54>
|   `-ReturnStmt 0x5557155f8528 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x5557155f8518 <col:48> 'bool' true
|-CXXMethodDecl 0x5557155f66f0 <line:93:5, col:56> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55571551d420 Element::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5557155f65a0 <col:26, col:40> col:41 'Vector<String> &'
| `-ParmVarDecl 0x5557155f6618 <col:43, col:55> col:56 'ErrorHandler *'
|-CXXMethodDecl 0x5557155f68c0 <line:94:5, col:44> col:10 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x55571551ab58 Element::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5557155f67b0 <col:21, col:28> col:29 'Element *'
| `-ParmVarDecl 0x5557155f6828 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x5557155f6990 <line:95:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55571551a7d0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x5557155f6b58 <line:97:5, col:32> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x555715517cd8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5557155f6a48 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x5557155f6ac0 <col:25, col:31> col:32 'Packet *'
|-CXXMethodDecl 0x5557155f6cb0 <line:98:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x555715517e68 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x5557155f6c20 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x5557155f6d58 <line:100:3, col:12> col:3 protected
|-FieldDecl 0x5557155f6dc0 <line:102:5, col:24> col:24 referenced _q 'Packet *volatile *'
|-FieldDecl 0x5557155f6e28 <line:103:5, col:18> col:18 referenced _drops 'volatile int'
|-FieldDecl 0x5557155f6e90 <line:104:5, col:9> col:9 referenced _highwater_length 'int'
|-FriendDecl 0x5557155f6ff8 <line:106:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x5557155f7158 <line:107:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-FriendDecl 0x5557155f72b8 <line:108:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x5557155f7418 <line:109:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-CXXMethodDecl 0x5557155f7580 <line:111:5, col:47> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5557155f7468 <col:32, col:39> col:40 'Element *'
| `-ParmVarDecl 0x5557155f74e8 <col:42, col:46> col:47 'void *'
|-CXXMethodDecl 0x5557155f7860 <line:112:5, col:75> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5557155f7640 <col:30, col:42> col:43 'const String &'
| |-ParmVarDecl 0x5557155f76b8 <col:45, col:52> col:53 'Element *'
| |-ParmVarDecl 0x5557155f7738 <col:55, col:59> col:60 'void *'
| `-ParmVarDecl 0x5557155f77b0 <col:62, col:74> col:75 'ErrorHandler *'
|-CXXConstructorDecl 0x5557155f7948 <line:65:7> col:7 implicit SimpleQueue 'void (const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x5557155f7948
| `-ParmVarDecl 0x5557155f7a58 <col:7> col:7 'const SimpleQueue &'
|-CXXConstructorDecl 0x5557155f7af8 <col:7> col:7 implicit SimpleQueue 'void (SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x5557155f7af8
| `-ParmVarDecl 0x5557155f7c08 <col:7> col:7 'SimpleQueue &&'
|-CXXMethodDecl 0x5557155f7ca8 <col:7> col:7 implicit operator= 'SimpleQueue &(const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x5557155f7ca8
| `-ParmVarDecl 0x5557155f7db8 <col:7> col:7 'const SimpleQueue &'
|-CXXMethodDecl 0x5557155f7e28 <col:7> col:7 implicit operator= 'SimpleQueue &(SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x5557155f7e28
| `-ParmVarDecl 0x5557155f7f38 <col:7> col:7 'SimpleQueue &&'
`-CXXDestructorDecl 0x5557155f7fc0 <col:7> col:7 implicit used ~SimpleQueue 'void () noexcept' inline default
  |-Overrides: [ 0x555715517a08 Element::~Element 'void () noexcept' ]
  `-CompoundStmt 0x555715667a90 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  NonVirtualBaseLLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class ActiveNotifier
         0 |   class Notifier (primary base)
         0 |     (Notifier vtable pointer)
         8 |     class NotifierSignal _signal
         8 |       union NotifierSignal::vmvalue _v
         8 |         class atomic_uint32_t * v1
         8 |         struct NotifierSignal::vmpair * vm
        16 |       uint32_t _mask
        24 |     enum Notifier::SearchOp _search_op
        32 |   class Task * _listener1
        40 |   ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierQueue
         0 |   class SimpleQueue (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       108 |     class Storage (base)
       108 |       Storage::index_type _capacity
       112 |       volatile Storage::index_type _head
       116 |       volatile Storage::index_type _tail
       120 |     class Packet *volatile * _q
       128 |     volatile int _drops
       132 |     int _highwater_length
       136 |   int _sleepiness
       144 |   class ActiveNotifier _empty_note
       144 |     class Notifier (primary base)
       144 |       (Notifier vtable pointer)
       152 |       class NotifierSignal _signal
       152 |         union NotifierSignal::vmvalue _v
       152 |           class atomic_uint32_t * v1
       152 |           struct NotifierSignal::vmpair * vm
       160 |         uint32_t _mask
       168 |       enum Notifier::SearchOp _search_op
       176 |     class Task * _listener1
       184 |     ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=192, dsize=192, align=8,
           |  nvsize=192, nvalign=8]

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557155d0e28 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5557155d0f48 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x5557155d0fe8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x5557155d1048 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x5557155da498 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x5557155da498

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557155d10b0 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5557155d11c8 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x5557155d1268 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x5557155d12f8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x5557155d9030 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5557155d9468 <col:11>
|-CXXConstructorDecl 0x5557155d9138 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x5557155d9138
| `-ParmVarDecl 0x5557155d9248 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x5557155d92e8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x5557155d92e8
| `-ParmVarDecl 0x5557155d93f8 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x5557155da160 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557155ced60 prev 0x555715517400 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5557155cee58 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x5557155ceee8 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x5557155cf018 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x5557155cef90 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x555715517490 'NotifierSignal'
|   | `-CXXRecord 0x5557155ced60 'NotifierSignal'
|   `-ParenType 0x5557155cef30 'bool () const' sugar
|     `-FunctionProtoType 0x55571505db70 'bool () const' const cdecl
|       `-BuiltinType 0x555714fb3330 'bool'
|-CXXConstructorDecl 0x5557155cf0a8 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x5557155cf2e8 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x5557155cf160 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x5557155cf1d8 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5557155cf498 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x5557155cf3d8 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x5557155cf590 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x5557155cf6b8 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x5557155cf778 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x5557155cf838 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x5557155cf8f8 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x5557155cf9e8 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x5557155cfb58 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5557155cfcd8 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x5557155cfc18 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x5557155cfda0 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x5557155cfe60 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x5557155cff20 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x5557155cffe0 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x5557155d0298 <line:36:5, col:76> col:17
| `-FunctionDecl 0x5557155d01d8 parent 0x555714fb32b8 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x5557155d0090 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x5557155d0108 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x5557155d04b8 <line:37:5, col:76> col:17
| `-FunctionDecl 0x5557155d03f8 parent 0x555714fb32b8 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x5557155d02e8 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x5557155d0360 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x5557155d05f8 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x5557155d0508 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x5557155d0740 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x5557155d06b0 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x5557155d0a08 <line:41:5, col:78> col:27
| `-FunctionDecl 0x5557155d0948 parent 0x555714fb32b8 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x5557155d07f8 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x5557155d0870 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x5557155d0b18 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x5557155d0a58 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x5557155d0c98 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x5557155d0bd0 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x5557155d0d60 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x5557155d0e00 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x5557155d0e28 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5557155d0f48 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x5557155d0fe8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x5557155d1048 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x5557155da498 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x5557155da498
|-CXXRecordDecl 0x5557155d10b0 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5557155d11c8 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x5557155d1268 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x5557155d12f8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x5557155d9030 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5557155d9468 <col:11>
| |-CXXConstructorDecl 0x5557155d9138 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x5557155d9138
| | `-ParmVarDecl 0x5557155d9248 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x5557155d92e8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x5557155d92e8
| | `-ParmVarDecl 0x5557155d93f8 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x5557155da160 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x5557155d1370 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x5557155d13d0 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x5557155d1420 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x5557155d1520 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x5557155d1720 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557155d1500 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5557155d14e0 <col:14> 'int' 1
| |-EnumConstantDecl 0x5557155d15b0 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x5557155d1738 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557155d1590 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x5557155d1570 <col:30> 'int' 2
| |-EnumConstantDecl 0x5557155d1640 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x5557155d1750 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557155d1620 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x5557155d1600 <col:52> 'int' 4
| `-EnumConstantDecl 0x5557155d16d0 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x5557155d1768 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557155d16b0 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x5557155d1690 <col:23> 'int' 8
|-VarDecl 0x5557155d1790 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x5557155d1898 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x5557155d1808 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x5557155d1a60 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x5557155d1950 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x5557155d19c8 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x5557155d1c98 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x5557155d1b48 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x5557155d1bc0 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557155d1d48 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5557155d1e68 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x5557155d1ef8 <col:18, col:24> col:18 public
|-EnumDecl 0x5557155d1f20 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x5557155d2020 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x5557155d2110 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557155d2000 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x5557155d1fe0 <col:35> 'int' 0
| |-EnumConstantDecl 0x5557155d2070 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x5557155d20c0 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x5557155d2358 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x5557155d22f0 'void (*)(void *, Notifier *)'
|   `-ParenType 0x5557155d2290 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x5557155d2250 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x555714fb3310 'void'
|       |-PointerType 0x555714fb3b10 'void *'
|       | `-BuiltinType 0x555714fb3310 'void'
|       `-PointerType 0x5557155d21b0 'Notifier *'
|         `-RecordType 0x5557155d1de0 'Notifier'
|           `-CXXRecord 0x5557155d1d48 'Notifier'
|-CXXConstructorDecl 0x5557155d2498 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x5557155d23c0 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x5557155d7238 <col:35> 'Notifier::SearchOp' EnumConstant 0x5557155d2020 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x5557155d26a8 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x5557155d2558 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x5557155d25d0 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x5557155d7258 <col:65> 'Notifier::SearchOp' EnumConstant 0x5557155d2020 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x5557155d27a8 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x5557155d28d8 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x5557155d7318 <col:37, line:85:5>
|   `-ReturnStmt 0x5557155d7308 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x5557155d72e8 <col:9, col:29> 'bool'
|       `-MemberExpr 0x5557155d72b8 <col:9, col:17> '<bound member function type>' .initialized 0x5557155cffe0
|         `-MemberExpr 0x5557155d7288 <col:9> 'const NotifierSignal' lvalue ->_signal 0x5557155d6c58
|           `-CXXThisExpr 0x5557155d7278 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x5557155d2ae0 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x5557155d2990 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x5557155d2a08 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x5557155d2bd8 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x5557155d2cc8 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x5557155d2d88 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x5557155d2ec8 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x5557155d2e38 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x5557155d2f90 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x5557155d3e60 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x5557155d40d0 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x5557155d3f30 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5557155d3fb0 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x5557155d4328 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x5557155d4190 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5557155d4210 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x5557155d44b0 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x5557155d43e8 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x5557155d45f8 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x5557155d4568 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x5557155d4780 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x5557155d46b0 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x5557155d48f8 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x5557155d4838 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x5557155d49c0 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x5557155d4a48 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x5557155d4c18 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x5557155d4ac0 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x5557155d4b40 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x5557155d4eb8 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x5557155d4cd8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5557155d4d58 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x5557155d4dd0 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x5557155d5158 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x5557155d4f80 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5557155d5000 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x5557155d5078 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x5557155d54d8 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x5557155d5220 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x5557155d52a0 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x5557155d5318 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5557155d5398 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x5557155d56c0 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x5557155d55a8 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x5557155d5628 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x5557155d5918 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x5557155d5780 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x5557155d5800 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x5557155d5878 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x5557155d5b78 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x5557155d59e0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x5557155d5a60 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x5557155d5ad8 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x5557155d5e60 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x5557155d5c40 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x5557155d5cc0 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x5557155d5d38 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5557155d5db8 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x5557155d6118 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x5557155d5f30 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5557155d5fb0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x5557155d6030 <col:78> col:81 'int'
| `-DeprecatedAttr 0x5557155d61d0 <col:98> "" ""
|-CXXMethodDecl 0x5557155d64b8 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x5557155d6250 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5557155d62d0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x5557155d6350 <col:78> col:81 'int'
| |-ParmVarDecl 0x5557155d63c8 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x5557155d6578 <col:110> "" ""
|-CXXMethodDecl 0x5557155d6798 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x5557155d65f8 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x5557155d6678 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x5557155d66f8 <col:79> col:82 'int'
| `-DeprecatedAttr 0x5557155d6850 <col:99> "" ""
|-CXXMethodDecl 0x5557155d6af0 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x5557155d68d0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x5557155d6950 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x5557155d69d0 <col:79> col:82 'int'
| |-ParmVarDecl 0x5557155d6a48 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x5557155d6bb0 <col:111> "" ""
|-AccessSpecDecl 0x5557155d6c20 <line:123:3, col:10> col:3 private
|-FieldDecl 0x5557155d6c58 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x5557155d6cb8 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x5557155d6e30 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x5557155d6d20 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x5557155d6d98 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x5557155d6f08 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x5557155d6f08
| `-ParmVarDecl 0x5557155d7018 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x5557155d70b8 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x5557155d70b8
  `-ParmVarDecl 0x5557155d71c8 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555715535050 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x555715535168 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x555715535238 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x555715535298 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x555715535300 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x555715535388 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x5557155355f0 <col:16, line:46:5>
|   |-BinaryOperator 0x555715535538 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x555715535458 <col:9> 'TaskLink *' lvalue ->_prev 0x555715535238
|   | | `-CXXThisExpr 0x555715535448 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x555715535520 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x555715535500 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x555715535498 <col:17> 'TaskLink *' lvalue ->_next 0x555715535298
|   |     | `-CXXThisExpr 0x555715535488 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x5557155354e8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x5557155354c8 <col:25> 'int' 0
|   `-BinaryOperator 0x5557155355d0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x555715535568 <col:9> 'unsigned int' lvalue ->_pass 0x555715535300
|     | `-CXXThisExpr 0x555715535558 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x5557155355b8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x555715535598 <col:17> 'int' 0
|-CXXConstructorDecl 0x5557155c1b28 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x5557155c1b28
| `-ParmVarDecl 0x5557155c1c38 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x5557155c1cd8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x5557155c1cd8
| `-ParmVarDecl 0x5557155c1de8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x5557155c1fd8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x5557155c1fd8
|-CXXMethodDecl 0x5557155c27d8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x5557155c27d8
| `-ParmVarDecl 0x5557155c28e8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x5557155c2958 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x5557155c2958
  `-ParmVarDecl 0x5557155c2a68 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555715498718 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x555715498848 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x5557154988a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x555715498908 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x5557155c8ce8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x5557155c8dc0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5557155c8dc0
|-CXXConstructorDecl 0x5557155c9078 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5557155c9078
| `-ParmVarDecl 0x5557155c9188 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x5557155c9228 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5557155c9228
  `-ParmVarDecl 0x5557155c9338 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555715498568 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x555715498688 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x555715498718 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x555715498848 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x5557154988a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x555715498908 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x5557155c8ce8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x5557155c8dc0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5557155c8dc0
| |-CXXConstructorDecl 0x5557155c9078 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5557155c9078
| | `-ParmVarDecl 0x5557155c9188 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x5557155c9228 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5557155c9228
|   `-ParmVarDecl 0x5557155c9338 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x5557154989c8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x555715498a28 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x5557154989c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x555715498848 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x555715498a80 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x5557154989c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5557154988a8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x555715498ad8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x5557154989c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x555715498908 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x555715498b30 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5557155c8bf8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5557155c9558 <col:11>
|-CXXConstructorDecl 0x5557155c8ec8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5557155c8ec8
| `-ParmVarDecl 0x5557155c8fd8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x5557155c93d8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5557155c93d8
  `-ParmVarDecl 0x5557155c94e8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557154b0060 prev 0x5557154a6ea0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5557154b0158 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x5557154b01f8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x5557154b6fc0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5557154b73a8 <col:11>
|-CXXConstructorDecl 0x5557154b70a0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5557154b7188 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5557154b7af0 <col:11>
|-CXXConstructorDecl 0x5557154b7228 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5557154b7338 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x5557154b9348 <col:11>
|-CXXDestructorDecl 0x5557154b8658 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5557151befe8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5557151bf0f8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5557151bf9c0 <col:11>
|   `-ReturnStmt 0x5557151bf9b0 <col:11>
|     `-UnaryOperator 0x5557151bf998 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5557151bf988 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x5557151bf168 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5557151bf278 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x555715551a80 <col:11>
    `-ReturnStmt 0x555715551a70 <col:11>
      `-UnaryOperator 0x555715551a58 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x555715551a48 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557154a6058 prev 0x5557154a5d68 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5557154a6150 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x5557154a61e0 <col:19, col:25> col:19 public
|-TypedefDecl 0x5557154a6218 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55571510b1c0 'int32_t' sugar
|   |-Typedef 0x55571501c238 'int32_t'
|   `-TypedefType 0x555714ff53f0 '__int32_t' sugar
|     |-Typedef 0x555714ff5008 '__int32_t'
|     `-BuiltinType 0x555714fb33b0 'int'
|-TypedefDecl 0x5557154a6280 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55571510b380 'int64_t' sugar
|   |-Typedef 0x55571501c2a0 'int64_t'
|   `-TypedefType 0x555714ff5510 '__int64_t' sugar
|     |-Typedef 0x555714ff50e8 '__int64_t'
|     `-BuiltinType 0x555714fb33d0 'long'
|-EnumDecl 0x5557154a62d8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x5557154a6450 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x5557154a6430 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x5557154a6408 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x5557154a63f0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x5557154a63c0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x5557154a6548 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x5557154a6528 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x5557154a6500 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x5557154a64e8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x5557154a64c0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x5557154a64a0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x5557154a6598 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x5557154a66a0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5557154a6bf0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154a6680 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x5557154a6660 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x5557154a6730 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5557154a6c08 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154a6710 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5557154a66f0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x5557154a67c0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5557154a6c20 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154a67a0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x5557154a6780 <col:25> 'int' 1000
| |-EnumConstantDecl 0x5557154a6850 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5557154a6c38 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154a6830 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5557154a6810 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x5557154a68e0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5557154a6c50 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154a68c0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x5557154a68a0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x5557154a6970 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5557154a6c68 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154a6950 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x5557154a6930 <col:24> 'int' 1000
| |-EnumConstantDecl 0x5557154a6a00 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5557154a6c80 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154a69e0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x5557154a69c0 <col:26> 'int' EnumConstant 0x5557154a66a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x5557154a6ad0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5557154a6c98 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154a6ab0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x5557154a6a90 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x5557154a6a50 <col:27> 'int' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x5557154a6a70 <col:44> 'int' EnumConstant 0x5557154a6970 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x5557154a6ba0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x5557154a6cb0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557154a6b80 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x5557154a6b60 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x5557154a6b20 <col:27> 'int' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x5557154a6b40 <col:44> 'int' EnumConstant 0x5557154a6850 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x5557154a6cc8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x5557154a6dd0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x5557154a6e20 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557154a6db0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x5557154a6d90 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x5557154a6e48 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55571510adf0 'uninitialized_type'
|   `-CXXRecord 0x55571510ad58 'uninitialized_type'
|-CXXRecordDecl 0x5557154a6ea0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x5557154a6fb0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x5557154b11a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5557154b73b8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5557154b74d8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x5557154b7490 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x5557154b7420 <col:9> '<bound member function type>' ->assign 0x5557154abbf8
|     | `-CXXThisExpr 0x5557154b7410 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5557154b7450 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5557154b74c0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5557154b7470 <col:19> 'int' 0
|-CXXConstructorDecl 0x5557154a71f8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x5557154a7070 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x5557154a70e8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5557154b2cf0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5557154b2cd0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x5557154b11a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5557154b74f0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5557154b7640 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x5557154b75c8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x5557154b7558 <col:9> '<bound member function type>' ->assign 0x5557154abbf8
|     | `-CXXThisExpr 0x5557154b7548 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5557154b7610 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5557154b75f8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5557154b7588 <col:16> 'long' lvalue ParmVar 0x5557154a7070 'sec' 'long'
|     `-ImplicitCastExpr 0x5557154b7628 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5557154b75a8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154a70e8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5557154a7458 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5557154a72c8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x5557154a7340 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5557154b2d28 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5557154b2d08 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x5557154b11a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5557154b7658 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5557154b7790 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x5557154b7730 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x5557154b76c0 <col:9> '<bound member function type>' ->assign 0x5557154abbf8
|     | `-CXXThisExpr 0x5557154b76b0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5557154b7760 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5557154b76f0 <col:16> 'int' lvalue ParmVar 0x5557154a72c8 'sec' 'int'
|     `-ImplicitCastExpr 0x5557154b7778 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5557154b7710 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154a7340 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5557154a76b8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x5557154a7528 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x5557154a75a0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5557154b2d60 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5557154b2d40 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x5557154b11a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5557154b77a8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5557154b78f8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x5557154b7880 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x5557154b7810 <col:9> '<bound member function type>' ->assign 0x5557154abbf8
|     | `-CXXThisExpr 0x5557154b7800 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5557154b78c8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5557154b78b0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5557154b7840 <col:16> 'unsigned long' lvalue ParmVar 0x5557154a7528 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x5557154b78e0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5557154b7860 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154a75a0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5557154a8850 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x5557154a7788 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x5557154a7800 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5557154b2d98 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5557154b2d78 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x5557154b11a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5557154b7910 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5557154b7a60 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x5557154b79e8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x5557154b7978 <col:9> '<bound member function type>' ->assign 0x5557154abbf8
|     | `-CXXThisExpr 0x5557154b7968 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5557154b7a30 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5557154b7a18 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5557154b79a8 <col:16> 'unsigned int' lvalue ParmVar 0x5557154a7788 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x5557154b7a48 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5557154b79c8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154a7800 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5557154a89b0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x5557154a8920 <col:31> col:37 'double'
|-CXXConstructorDecl 0x5557154a8b48 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x5557154a8a88 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x5557154a8d78 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x5557154a8c80 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x5557154a8f28 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x5557154a8e68 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x5557154b11a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5557154b7b00 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x5557154b7a78 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x5557154a8e68 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5557154b7b60 <col:19, line:214:5>
|-CXXConstructorDecl 0x5557154a90f8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x5557154a9038 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x5557154b11a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5557154b7b70 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5557154b7c20 <col:53, line:219:5>
|   `-CStyleCastExpr 0x5557154b7bf8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x5557154b7bc8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x5557154a9038 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x5557154a92e8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x5557154a9260 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x5557154a5e00 'Timestamp'
|   | `-CXXRecord 0x5557154a6058 'Timestamp'
|   `-ParenType 0x5557154a9200 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x5557154a91d0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x5557154a63a0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x5557154a6218 'seconds_type'
|         `-TypedefType 0x55571510b1c0 'int32_t' sugar
|           |-Typedef 0x55571501c238 'int32_t'
|           `-TypedefType 0x555714ff53f0 '__int32_t' sugar
|             |-Typedef 0x555714ff5008 '__int32_t'
|             `-BuiltinType 0x555714fb33b0 'int'
|-CXXConversionDecl 0x5557154a9428 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5557154a94f8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x5557154b7d28 <col:37, line:231:5>
|   `-ReturnStmt 0x5557154b7d18 <line:227:9, col:23>
|     `-BinaryOperator 0x5557154b7cf8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x5557154b7cc8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5557154b7c78 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x5557154b01f8
|       |   `-MemberExpr 0x5557154b7c48 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x5557154b11a8
|       |     `-CXXThisExpr 0x5557154b7c38 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5557154b7ce0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x5557154b7ca8 <col:23> 'int' 0
|-CXXMethodDecl 0x5557154a95b8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x5557154a9678 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x5557154a9738 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x5557154a97f8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x5557154a98b8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x5557154a9a28 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x5557154a9968 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x5557154a9b70 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x5557154a9ae0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154a9c38 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5557154a9cd8 <col:54> "" ""
|-CXXMethodDecl 0x5557154a9d68 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5557154a9e08 <col:54> "" ""
|-CXXMethodDecl 0x5557154a9e98 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5557154a9f38 <col:54> "" ""
|-CXXMethodDecl 0x5557154aa038 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x5557154aa108 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x5557154aa238 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x5557154aa330 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x5557154aa468 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5557154b7f40 <col:39, line:271:5>
|   `-ReturnStmt 0x5557154b7f30 <line:267:9, col:61>
|     `-CallExpr 0x5557154b7ed0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5557154b7eb8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5557154b7d40 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5557154b14d8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5557154b7f00 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5557154b7da0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x5557154b01f8
|       |   `-MemberExpr 0x5557154b7d70 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x5557154b11a8
|       |     `-CXXThisExpr 0x5557154b7d60 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5557154b7f18 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5557154b7e40 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5557154b7e10 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5557154b7dd0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5557154b7e28 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5557154b7df0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6970 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5557154aa528 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5557154b8100 <col:39, line:279:5>
|   `-ReturnStmt 0x5557154b80f0 <line:275:9, col:61>
|     `-CallExpr 0x5557154b8090 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5557154b8078 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5557154b7f58 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5557154b14d8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5557154b80c0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5557154b7fb8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x5557154b01f8
|       |   `-MemberExpr 0x5557154b7f88 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x5557154b11a8
|       |     `-CXXThisExpr 0x5557154b7f78 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5557154b80d8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5557154b8058 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5557154b8028 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5557154b7fe8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5557154b8040 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5557154b8008 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6850 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5557154aa5e8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5557154b8298 <col:39, line:287:5>
|   `-ReturnStmt 0x5557154b8288 <line:283:9, col:53>
|     `-BinaryOperator 0x5557154b8268 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x5557154b8238 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5557154b8158 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x5557154b01f8
|       |   `-MemberExpr 0x5557154b8128 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x5557154b11a8
|       |     `-CXXThisExpr 0x5557154b8118 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5557154b8250 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x5557154b8218 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5557154b81f8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5557154b81c8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5557154b8188 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a66a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5557154b81e0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5557154b81a8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5557154aa6d8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5557154b9530 <col:40, line:293:5>
|   |-DeclStmt 0x5557154b83e0 <line:291:9, col:48>
|   | `-VarDecl 0x5557154b82c0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x5557154b83c0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x5557154b8368 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5557154b8338 <col:22> '<bound member function type>' ->subsec 0x5557154a9678
|   |     |   `-CXXThisExpr 0x5557154b8328 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x5557154b83a8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x5557154b8388 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6ad0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5557154b9520 <line:292:9, col:70>
|     `-ExprWithCleanups 0x5557154b9508 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5557154b94d8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5557154b94c0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5557154b94a0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5557154b9470 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5557154b9208 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5557154b91f0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5557154b83f8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x5557154b82c0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5557154b9410 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5557154b93f8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5557154b93c8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5557154b9220 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x5557154b9190 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x5557154b9178 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5557154b9128 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5557154a5fa8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5557154b90c8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5557154b8428 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5557154b8418 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5557154b9110 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5557154b90f8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5557154b88e8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5557154b8450 <col:39> 'int' 0
|               |               `-BinaryOperator 0x5557154b84e0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5557154b84b0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5557154b8470 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6ad0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x5557154b84c8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5557154b8490 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x5557154b82c0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x5557154b9440 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5557154b91d8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5557154b91c8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x5557154aa798 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5557154b9a88 <col:40, line:302:5>
|   |-DeclStmt 0x5557154b9680 <line:297:9, col:48>
|   | `-VarDecl 0x5557154b9560 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x5557154b9660 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x5557154b9608 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5557154b95d8 <col:22> '<bound member function type>' ->subsec 0x5557154a9678
|   |     |   `-CXXThisExpr 0x5557154b95c8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x5557154b9648 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x5557154b9628 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6ba0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5557154b9a78 <line:298:9, col:70>
|     `-ExprWithCleanups 0x5557154b9a60 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5557154b9a30 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5557154b9a18 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5557154b99f8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5557154b99c8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5557154b98f0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5557154b98d8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5557154b9698 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x5557154b9560 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5557154b9968 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5557154b9950 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5557154b9920 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5557154b9908 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x5557154b9878 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x5557154b9860 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5557154b9840 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5557154a5fa8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5557154b97e0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5557154b96c8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5557154b96b8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5557154b9828 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5557154b9810 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5557154b97a0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5557154b96f0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x5557154b9780 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5557154b9750 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5557154b9710 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6ba0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x5557154b9768 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5557154b9730 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x5557154b9560 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x5557154b9998 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5557154b98c0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5557154b98b0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x5557154aa858 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5557154b9b10 <col:40, line:306:5>
|   `-ReturnStmt 0x5557154b9b00 <line:305:9, col:17>
|     `-CXXConstructExpr 0x5557154b9ad0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x5557154b9ab8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5557154b9aa8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x5557154aa9f8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x5557154aa908 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x5557154aabc8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x5557154aaad0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x5557154aacb8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x5557154aae28 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x5557154aad68 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x5557154b9c58 <col:56, line:320:5>
|   `-ReturnStmt 0x5557154b9c48 <line:319:9, col:32>
|     `-ExprWithCleanups 0x5557154b9c30 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x5557154b9c00 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5557154b9be8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5557154b9ba8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5557154b9b78 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5557154b9b38 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5557154aad68 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x5557154b9b90 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5557154b9b58 <col:31> 'int' 0
|-CXXMethodDecl 0x5557154ab068 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5557154aaee0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5557154aaf58 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154b9e28 <col:72, line:326:5>
|   `-ReturnStmt 0x5557154b9e18 <line:325:9, col:51>
|     `-ExprWithCleanups 0x5557154b9e00 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5557154b9dd0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5557154b9db8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5557154b9d78 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5557154b9d60 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5557154b9c80 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5557154aaee0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5557154b9d20 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5557154b9d08 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5557154b9ca0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5557154af950 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5557154b9d48 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5557154b9cc0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154aaf58 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154ab218 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5557154ab128 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5557154ba4f0 <col:56, line:337:5>
|   |-DeclStmt 0x5557154ba128 <line:329:9, col:51>
|   | `-VarDecl 0x5557154b9e50 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5557154ba110 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5557154ba0e0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5557154ba0c8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5557154ba0b0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5557154ba080 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5557154ba068 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5557154ba050 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5557154b9f40 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5557154ba2e0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5557154ba190 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5557154b01f8
|   | | `-MemberExpr 0x5557154ba160 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5557154b11a8
|   | |   `-DeclRefExpr 0x5557154ba140 <col:9> 'Timestamp' lvalue Var 0x5557154b9e50 't' 'Timestamp'
|   | `-BinaryOperator 0x5557154ba2c0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5557154ba290 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557154ba1c0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x5557154ab128 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5557154ba2a8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5557154ba270 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5557154ba250 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5557154ba220 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5557154ba1e0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5557154ba238 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5557154ba200 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6970 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5557154ba4d8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x5557154ba4a8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5557154ba490 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5557154ba470 <col:16> 'Timestamp' lvalue Var 0x5557154b9e50 't' 'Timestamp'
|-CXXMethodDecl 0x5557154ab3e0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5557154ab2d0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5557154ab348 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154ba6a8 <col:72, line:343:5>
|   `-ReturnStmt 0x5557154ba698 <line:342:9, col:51>
|     `-ExprWithCleanups 0x5557154ba680 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5557154ba650 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5557154ba638 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5557154ba5f8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5557154ba5e0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5557154ba528 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5557154ab2d0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5557154ba5a0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5557154ba588 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5557154ba548 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5557154afa98 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5557154ba5c8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5557154ba568 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154ab348 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154ab530 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5557154ab4a0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5557154baaf0 <col:56, line:354:5>
|   |-DeclStmt 0x5557154ba898 <line:346:9, col:51>
|   | `-VarDecl 0x5557154ba6d0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5557154ba880 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5557154ba850 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5557154ba838 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5557154ba820 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5557154ba7f0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5557154ba7d8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5557154ba7c0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5557154ba790 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5557154baa50 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5557154ba900 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5557154b01f8
|   | | `-MemberExpr 0x5557154ba8d0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5557154b11a8
|   | |   `-DeclRefExpr 0x5557154ba8b0 <col:9> 'Timestamp' lvalue Var 0x5557154ba6d0 't' 'Timestamp'
|   | `-BinaryOperator 0x5557154baa30 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5557154baa00 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557154ba930 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x5557154ab4a0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5557154baa18 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5557154ba9e0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5557154ba9c0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5557154ba990 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5557154ba950 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5557154ba9a8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5557154ba970 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6850 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5557154baad8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x5557154baaa8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5557154baa90 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5557154baa70 <col:16> 'Timestamp' lvalue Var 0x5557154ba6d0 't' 'Timestamp'
|-CXXMethodDecl 0x5557154ab6f8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5557154ab5e8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5557154ab660 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154baca8 <col:72, line:360:5>
|   `-ReturnStmt 0x5557154bac98 <line:359:9, col:51>
|     `-ExprWithCleanups 0x5557154bac80 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5557154bac50 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5557154bac38 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5557154babf8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5557154babe0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5557154bab28 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5557154ab5e8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5557154baba0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5557154bab88 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5557154bab48 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5557154afbe0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5557154babc8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5557154bab68 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154ab660 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154ab848 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5557154ab7b8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5557154c7618 <col:56, line:371:5>
|   |-DeclStmt 0x5557154bae98 <line:363:9, col:51>
|   | `-VarDecl 0x5557154bacd0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5557154bae80 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5557154bae50 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5557154bae38 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5557154bae20 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5557154badf0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5557154badd8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5557154badc0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5557154bad90 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5557154c7578 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5557154baf00 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5557154b01f8
|   | | `-MemberExpr 0x5557154baed0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5557154b11a8
|   | |   `-DeclRefExpr 0x5557154baeb0 <col:9> 'Timestamp' lvalue Var 0x5557154bacd0 't' 'Timestamp'
|   | `-CallExpr 0x5557154c7518 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x5557154c7500 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5557154baf30 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5557154b14d8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x5557154c7548 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5557154baf50 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x5557154ab7b8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5557154c7560 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x5557154c74e0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x5557154c74b0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x5557154baf70 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a66a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x5557154c74c8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x5557154baf90 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5557154c7600 <line:370:9, col:16>
|     `-CXXConstructExpr 0x5557154c75d0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5557154c75b8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5557154c7598 <col:16> 'Timestamp' lvalue Var 0x5557154bacd0 't' 'Timestamp'
|-CXXMethodDecl 0x5557154ab938 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x5557154c7758 <col:39, line:377:5>
|   `-ReturnStmt 0x5557154c7748 <line:376:9, col:30>
|     `-ExprWithCleanups 0x5557154c7730 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x5557154c7700 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5557154c76e8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5557154c76a8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x5557154c7650 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x5557154c7690 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5557154c7670 <col:29> 'int' 1
|-CXXMethodDecl 0x5557154ab9f8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x5557154c7838 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x5557154c77f0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x5557154c7780 <col:9> '<bound member function type>' ->assign 0x5557154abbf8
|     | `-CXXThisExpr 0x5557154c7770 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5557154c77b0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5557154c7820 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5557154c77d0 <col:19> 'int' 0
|-CXXMethodDecl 0x5557154abbf8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5557154abaa8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5557154abb20 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5557154b2dd0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5557154b2db0 <col:60> 'int' 0
| `-CompoundStmt 0x5557154c7a30 <col:63, line:395:5>
|   `-BinaryOperator 0x5557154c7a10 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x5557154c7890 <col:9, col:12> 'int64_t':'long' lvalue .x 0x5557154b01f8
|     | `-MemberExpr 0x5557154c7860 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x5557154b11a8
|     |   `-CXXThisExpr 0x5557154c7850 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x5557154c79f0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x5557154c7980 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x5557154c7920 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x5557154c7908 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x5557154c78f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x5557154c78c0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5557154abaa8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x5557154c7968 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x5557154c7948 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x5557154c79d8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x5557154c79c0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x5557154c79a0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154abb20 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154abdc8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5557154abcb8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5557154abd30 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154c7b88 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x5557154c7b40 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x5557154c7a58 <col:9> '<bound member function type>' ->assign 0x5557154abbf8
|     | `-CXXThisExpr 0x5557154c7a48 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5557154c7b70 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5557154c7a88 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5557154abcb8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5557154c7b00 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5557154c7ae8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5557154c7aa8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5557154afa98 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5557154c7b28 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5557154c7ac8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154abd30 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154abf98 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5557154abe88 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5557154abf00 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154c7ce0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x5557154c7c98 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x5557154c7bb0 <col:9> '<bound member function type>' ->assign 0x5557154abbf8
|     | `-CXXThisExpr 0x5557154c7ba0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5557154c7cc8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5557154c7be0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5557154abe88 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5557154c7c58 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5557154c7c40 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5557154c7c00 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5557154afbe0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5557154c7c80 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5557154c7c20 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154abf00 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154ac168 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5557154ac058 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5557154ac0d0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5557154b2e08 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5557154b2de8 <col:57> 'int' 0
| `-DeprecatedAttr 0x5557154ac218 <col:75> "" ""
|-CXXMethodDecl 0x5557154ac3a8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5557154ac298 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5557154ac310 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5557154ac458 <col:74> "" ""
|-CXXMethodDecl 0x5557154ac5e8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5557154ac4d8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5557154ac550 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5557154ac698 <col:74> "" ""
|-CXXMethodDecl 0x5557154ac728 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x5557154ac7c8 <col:42> "" ""
|-CXXMethodDecl 0x5557154af000 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x5557154aeee0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5557154aef60 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x5557154af0d0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x5557154af190 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x5557154af230 <col:20>
| `-OptimizeNoneAttr 0x5557154af288 <col:30>
|-CXXMethodDecl 0x5557154af2d0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x5557154af390 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x5557154af450 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x5557154af510 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x5557154af5d0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x5557154af690 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x5557154af750 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x5557154af810 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x5557154af950 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5557154af8c0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154c7e28 <col:58, line:512:5>
|   `-ReturnStmt 0x5557154c7e18 <line:511:9, col:53>
|     `-BinaryOperator 0x5557154c7df8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5557154c7dc8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5557154c7cf8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154af8c0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5557154c7de0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5557154c7da8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5557154c7d88 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5557154c7d58 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5557154c7d18 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5557154c7d70 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5557154c7d38 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6970 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5557154afa98 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5557154afa08 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154c7f70 <col:58, line:516:5>
|   `-ReturnStmt 0x5557154c7f60 <line:515:9, col:53>
|     `-BinaryOperator 0x5557154c7f40 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5557154c7f10 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5557154c7e40 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154afa08 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5557154c7f28 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5557154c7ef0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5557154c7ed0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5557154c7ea0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5557154c7e60 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5557154c7eb8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5557154c7e80 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6850 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5557154afbe0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5557154afb50 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154c80b8 <col:58, line:520:5>
|   `-ReturnStmt 0x5557154c80a8 <line:519:9, col:53>
|     `-BinaryOperator 0x5557154c8088 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5557154c8058 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5557154c7f88 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154afb50 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5557154c8070 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5557154c8038 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5557154c8018 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5557154c7fe8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5557154c7fa8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a66a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5557154c8000 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5557154c7fc8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5557154afd28 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5557154afc98 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154c8200 <col:60, line:524:5>
|   `-ReturnStmt 0x5557154c81f0 <line:523:9, col:55>
|     `-BinaryOperator 0x5557154c81d0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5557154c81a0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5557154c80d0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154afc98 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5557154c81b8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5557154c8180 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5557154c8160 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5557154c8130 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5557154c80f0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5557154c8148 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5557154c8110 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6970 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5557154afe70 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5557154afde0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154c8348 <col:60, line:528:5>
|   `-ReturnStmt 0x5557154c8338 <line:527:9, col:55>
|     `-BinaryOperator 0x5557154c8318 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5557154c82e8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5557154c8218 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154afde0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5557154c8300 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5557154c82c8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5557154c82a8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5557154c8278 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5557154c8238 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5557154c8290 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5557154c8258 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6850 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5557154affb8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5557154aff28 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154c8490 <col:60, line:532:5>
|   `-ReturnStmt 0x5557154c8480 <line:531:9, col:55>
|     `-BinaryOperator 0x5557154c8460 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5557154c8430 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5557154c8360 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154aff28 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5557154c8448 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5557154c8410 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5557154c83f0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5557154c83c0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5557154c8380 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a66a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5557154c83d8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5557154c83a0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5557154a6a00 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x5557154b0060 prev 0x5557154a6ea0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5557154b0158 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x5557154b01f8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x5557154b6fc0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5557154b73a8 <col:11>
| |-CXXConstructorDecl 0x5557154b70a0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5557154b7188 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5557154b7af0 <col:11>
| |-CXXConstructorDecl 0x5557154b7228 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x5557154b7338 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x5557154b9348 <col:11>
| |-CXXDestructorDecl 0x5557154b8658 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5557151befe8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5557151bf0f8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5557151bf9c0 <col:11>
| |   `-ReturnStmt 0x5557151bf9b0 <col:11>
| |     `-UnaryOperator 0x5557151bf998 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5557151bf988 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x5557151bf168 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x5557151bf278 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x555715551a80 <col:11>
|     `-ReturnStmt 0x555715551a70 <col:11>
|       `-UnaryOperator 0x555715551a58 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x555715551a48 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x5557154b0260 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x5557154b0360 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5557154b0560 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154b0340 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5557154b0320 <col:21> 'int' 0
| |-EnumConstantDecl 0x5557154b03f0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5557154b0578 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154b03d0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x5557154b03b0 <col:23> 'int' 1
| |-EnumConstantDecl 0x5557154b0480 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5557154b0590 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5557154b0460 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x5557154b0440 <col:23> 'int' 2
| `-EnumConstantDecl 0x5557154b0510 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x5557154b05a8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557154b04f0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x5557154b04d0 <col:27> 'int' 3
|-CXXMethodDecl 0x5557154b05e8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x5557154b06b0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x5557154b08b8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x5557154b0760 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x5557154b07e0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x5557154b2e20 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x5557154b0ac8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x5557154b0978 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x5557154b09f0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x5557154b0b98 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x5557154b0c58 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x5557154b0dc8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x5557154b0d08 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x5557154b0e90 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x5557154b0f50 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x5557154b1010 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x5557154b10d0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x5557154b1170 <line:670:3, col:10> col:3 private
|-FieldDecl 0x5557154b11a8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x5557154b1218 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x5557154c84a8 <col:27, line:684:5>
|-CXXMethodDecl 0x5557154b12d8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x5557154c84b8 <col:27, line:696:5>
|-CXXMethodDecl 0x5557154b14d8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x5557154b1388 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x5557154b1400 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154c8640 <col:66, line:700:5>
|   `-ReturnStmt 0x5557154c8630 <line:699:9, col:31>
|     `-CallExpr 0x5557154c85d0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x5557154c85b8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5557154c8568 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x555715333888 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x5557154c8600 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x5557154c8528 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x5557154b1388 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x5557154c8618 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5557154c8548 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154b1400 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5557154b1848 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x5557154b1598 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x5557154b1610 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x5557154b1688 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x5557154b1700 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557154c8990 <col:64, line:707:5>
|   |-DeclStmt 0x5557154c86d0 <line:704:9, col:24>
|   | `-VarDecl 0x5557154c8668 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x5557154c88e0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x5557154c86e8 <col:9> 'int32_t':'int' lvalue ParmVar 0x5557154b1610 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x5557154c88c8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x5557154c8860 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x5557154c8848 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5557154c87c8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x555715338b58 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x5557154c8898 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5557154c8768 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x5557154b1688 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x5557154c88b0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5557154c8788 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x5557154b1700 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x5557154c87a8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x5557154c8668 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x5557154c8970 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x5557154c8900 <col:9> 'int32_t':'int' lvalue ParmVar 0x5557154b1598 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x5557154c8958 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x5557154c8940 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x5557154c8920 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x5557154c8668 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x5557154b1ae8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x5557154b1918 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x5557154b1990 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x5557154b1a08 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x5557154b1d88 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x5557154b1bb0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x5557154b1c28 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x5557154b1ca0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x5557154b1f18 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x5557154b1e50 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x5557154b2118 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x5557154b1fd0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x5557154b2048 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x5557154b23e8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x5557154b2328 parent 0x555714fb32b8 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5557154b21d8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x5557154b2250 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x5557154b2608 <line:718:5, col:72> col:24
| `-FunctionDecl 0x5557154b2548 parent 0x555714fb32b8 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5557154b2438 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x5557154b24b0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x5557154b27d0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x5557154b2718 parent 0x555714fb32b8 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x5557154b2658 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x5557154b2a58 <line:720:5, col:73> col:30
| `-FunctionDecl 0x5557154b2998 parent 0x555714fb32b8 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5557154b2848 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x5557154b28c0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x5557154b2c78 <line:721:5, col:73> col:30
| `-FunctionDecl 0x5557154b2bb8 parent 0x555714fb32b8 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5557154b2aa8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x5557154b2b20 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x5557154b8500 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5557154b85e8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x5557154b11a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5557154b9058 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x5557154b9010 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x5557154b11a8
| |     `-DeclRefExpr 0x5557154b8ff0 <col:7> 'const Timestamp' lvalue ParmVar 0x5557154b85e8 '' 'const Timestamp &'
| `-CompoundStmt 0x5557154b90b8 <col:7>
|-CXXConstructorDecl 0x5557154b8768 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5557154b8878 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x5557154b11a8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5557154b9358 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x5557154b9300 <col:7> 'Timestamp::rep_t' xvalue ._t 0x5557154b11a8
| |     `-CXXStaticCastExpr 0x5557154b92d0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x5557154b92a0 <col:7> 'Timestamp' lvalue ParmVar 0x5557154b8878 '' 'Timestamp &&'
| `-CompoundStmt 0x5557154b93b8 <col:7>
|-CXXDestructorDecl 0x5557154b8928 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5557151bee38 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5557151bef48 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x5557151bfa38 <col:7>
|   |-CXXMemberCallExpr 0x5557151bf9d8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x5557151bf918 <col:7> '<bound member function type>' .operator= 0x5557151befe8
|   | | `-MemberExpr 0x5557151bf828 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x5557154b11a8
|   | |   `-CXXThisExpr 0x5557151bf818 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x5557151bf8e8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x5557154b11a8
|   |   `-DeclRefExpr 0x5557151bf8c8 <col:7> 'const Timestamp' lvalue ParmVar 0x5557151bef48 '' 'const Timestamp &'
|   `-ReturnStmt 0x5557151bfa28 <col:7>
|     `-UnaryOperator 0x5557151bfa10 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5557151bfa00 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x5557151bf2e8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5557151bf3f8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x555715551af8 <col:7>
    |-CXXMemberCallExpr 0x555715551a98 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x555715551a00 <col:7> '<bound member function type>' .operator= 0x5557151bf168
    | | `-MemberExpr 0x5557155518d0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x5557154b11a8
    | |   `-CXXThisExpr 0x5557155518c0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x5557155519d0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x5557154b11a8
    |   `-CXXStaticCastExpr 0x5557155519a0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x555715551970 <col:7> 'Timestamp' lvalue ParmVar 0x5557151bf3f8 '' 'Timestamp &&'
    `-ReturnStmt 0x555715551ae8 <col:7>
      `-UnaryOperator 0x555715551ad0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x555715551ac0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5557155567f0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x5557155569c8 prev 0x5557155567f0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x555715556a58 <col:46, col:52> col:46 public
|-TypedefDecl 0x555715556a80 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555714fb33b0 'int'
|-TypedefDecl 0x55571555c480 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55571555c430 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x555715556f30 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x555715556e30 'type'
|     `-TemplateSpecializationType 0x555715556dc0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x555715556ca0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x555715556c80 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x555715556c60 <col:24> 'unsigned long' 16
|       `-RecordType 0x555715556da0 'char_array<16>'
|         `-ClassTemplateSpecialization 0x555715556cc0 'char_array'
|-TypedefDecl 0x55571555c538 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55571555c500 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55571555c4e0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55571555c480 'type'
|     `-ElaboratedType 0x55571555c430 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x555715556f30 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x555715556e30 'type'
|         `-TemplateSpecializationType 0x555715556dc0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x555715556ca0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x555715556c80 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x555715556c60 <col:24> 'unsigned long' 16
|           `-RecordType 0x555715556da0 'char_array<16>'
|             `-ClassTemplateSpecialization 0x555715556cc0 'char_array'
|-CXXMethodDecl 0x55571555c6b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55571555c5c8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55571555c7a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55571555c888 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55571555c888
|-CXXMethodDecl 0x55571555cb58 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55571555ca60 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55571555cd98 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55571555cc10 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55571555cc88 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55571555cf68 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55571555ce58 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55571555ced0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55571555d0c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55571555d198 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55571555d3e8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55571555d258 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55571555d2d0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55571555d648 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55571555d4b8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55571555d530 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55571555d808 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55571555d718 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55571555d9c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55571555d8d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55571555da80 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55571555db30 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55571555dd68 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55571555dbe0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55571555dc58 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55571555e008 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55571555df10 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55571555e0d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55571555e120 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55571555e170 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x555715555108 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x555715555318 prev 0x555715555108 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x555715556760 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x555715556710 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x5557155566f0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x5557155565a0 'type'
|     `-SubstTemplateTypeParmType 0x5557155563c0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55571527b7f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55571527b798 'T'
|       `-RecordType 0x555715555f10 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x555715555e28 'sized_array_memory'
|-FieldDecl 0x55571555e1c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55571555e210 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55571555e248 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x5557155553b0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5557152b36a8 'T'
|   `-RecordType 0x555715554310 'TimerSet::heap_element'
|     `-CXXRecord 0x555715554280 'heap_element'
|-TypedefDecl 0x55571555e308 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55571555e2d0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x5557155553b0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-RecordType 0x555715554310 'TimerSet::heap_element'
|       `-CXXRecord 0x555715554280 'heap_element'
|-TypedefDecl 0x55571555e398 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55571555e360 'const TimerSet::heap_element &'
|   `-QualType 0x5557155553b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5557155553b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x555715554310 'TimerSet::heap_element'
|         `-CXXRecord 0x555715554280 'heap_element'
|-TypedefDecl 0x55571555e428 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55571555e3f0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x5557155553b0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-RecordType 0x555715554310 'TimerSet::heap_element'
|       `-CXXRecord 0x555715554280 'heap_element'
|-TypedefDecl 0x55571555e4e8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55571555e4b0 'const TimerSet::heap_element *'
|   `-QualType 0x5557155553b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5557155553b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x555715554310 'TimerSet::heap_element'
|         `-CXXRecord 0x555715554280 'heap_element'
|-TypedefDecl 0x55571555f350 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55571555f300 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55571555f2e0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55571555f218 'type'
|     `-LValueReferenceType 0x55571555f1e0 'const TimerSet::heap_element &'
|       `-QualType 0x55571555ef81 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55571555ef80 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x555715285ec0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x555715285e68 'T'
|           `-RecordType 0x555715554310 'TimerSet::heap_element'
|             `-CXXRecord 0x555715554280 'heap_element'
|-TypedefDecl 0x55571555f3b8 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55571555e360 'const TimerSet::heap_element &'
|   `-QualType 0x5557155553b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5557155553b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x555715554310 'TimerSet::heap_element'
|         `-CXXRecord 0x555715554280 'heap_element'
|-TypedefDecl 0x55571555f410 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555714fb33b0 'int'
|-TypedefDecl 0x55571555f478 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55571555e3f0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x5557155553b0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-RecordType 0x555715554310 'TimerSet::heap_element'
|       `-CXXRecord 0x555715554280 'heap_element'
|-TypedefDecl 0x55571555f4e0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55571555e4b0 'const TimerSet::heap_element *'
|   `-QualType 0x5557155553b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5557155553b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x555715554310 'TimerSet::heap_element'
|         `-CXXRecord 0x555715554280 'heap_element'
|-EnumDecl 0x55571555f538 <line:134:5> col:5
| `-EnumConstantDecl 0x55571555f630 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55571555f610 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5557152b4d88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5557152b4d60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5557152b4d40 <col:40> 'int' 1
|-CXXConstructorDecl 0x55571555f6b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55571555f948 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55571555f770 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55571555f810 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55571555fc08 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55571555faf0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55571555fec8 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55571555fdb0 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x555715560210 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5557155600f0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x555715560520 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x555715560400 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x555715560810 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x555715560658 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5557155606d0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x555715560968 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x555715560a48 <col:20> Inherited
| `-OptimizeNoneAttr 0x555715560aa0 <col:30> Inherited
|-CXXMethodDecl 0x555715560ae8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x555715560b98 <col:20> Inherited
| `-OptimizeNoneAttr 0x555715560bf0 <col:30> Inherited
|-CXXMethodDecl 0x555715560cb8 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x555715560d68 <col:20> Inherited
| `-OptimizeNoneAttr 0x555715560dc0 <col:30> Inherited
|-CXXMethodDecl 0x555715560e08 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x555715560eb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x555715560f10 <col:30> Inherited
|-CXXMethodDecl 0x555715560f58 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x555715561008 <col:20> Inherited
| `-OptimizeNoneAttr 0x555715561060 <col:30> Inherited
|-CXXMethodDecl 0x5557155610a8 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x555715561158 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155611b0 <col:30> Inherited
|-CXXMethodDecl 0x5557155611d8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x555715561288 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x555715561338 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5557155614f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5557155613e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x555715561460 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x555715561648 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5557155615b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155617f8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x555715561700 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5557155618b0 <col:20>
| `-OptimizeNoneAttr 0x555715561908 <col:30>
|-CXXMethodDecl 0x555715561a28 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x555715561930 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x555715561ae0 <col:20>
| `-OptimizeNoneAttr 0x555715561b38 <col:30>
|-CXXMethodDecl 0x555715561bf0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x555715561b60 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555715561d38 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x555715561ca8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555715561e68 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x555715561f98 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x555715562068 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x555715562138 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x555715562278 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x5557155621e8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155623c0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x555715562330 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555715562508 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x555715562478 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5557155625c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5557155626c0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x555715562630 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x555715562778 <col:60> Inherited "" ""
|-CXXMethodDecl 0x555715562838 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x555715562938 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x555715562ae8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x5557155629f8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x5557155632d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x555715562ba0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x555715563238 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x555715563138 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x5557155633b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x555715563508 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x555715563478 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5557155635c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x555715563808 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x555715563680 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x5557155636f8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x555715563a60 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x5557155638d8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x555715563cb8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x555715563b28 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x555715563ba0 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x555715563d78 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x555715563fd8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x555715563ee0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x5557155640a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5557155640a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5557155655d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x5557155657a8 prev 0x5557155655d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x555715565838 <col:46, col:52> col:46 public
|-TypedefDecl 0x555715565860 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555714fb33b0 'int'
|-TypedefDecl 0x555715567430 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x5557155673e0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x555715565d10 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x555715565c10 'type'
|     `-TemplateSpecializationType 0x555715565ba0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x555715565a80 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x555715565a60 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x555715565a40 <col:24> 'unsigned long' 8
|       `-RecordType 0x555715565b80 'char_array<8>'
|         `-ClassTemplateSpecialization 0x555715565aa0 'char_array'
|-TypedefDecl 0x5557155674e8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x5557155674b0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x555715567490 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x555715567430 'type'
|     `-ElaboratedType 0x5557155673e0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x555715565d10 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x555715565c10 'type'
|         `-TemplateSpecializationType 0x555715565ba0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x555715565a80 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x555715565a60 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x555715565a40 <col:24> 'unsigned long' 8
|           `-RecordType 0x555715565b80 'char_array<8>'
|             `-ClassTemplateSpecialization 0x555715565aa0 'char_array'
|-CXXMethodDecl 0x555715567668 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x555715567578 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x555715567758 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x555715567838 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x555715567838
|-CXXMethodDecl 0x555715567b08 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x555715567a10 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x555715567d48 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x555715567bc0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x555715567c38 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x555715567f18 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x555715567e08 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x555715567e80 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x555715568078 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x555715568148 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x555715568398 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x555715568208 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x555715568280 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5557155685f8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x555715568468 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5557155684e0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5557155687b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5557155686c8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x555715568978 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x555715568880 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x555715568a30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x555715568ae0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x555715568d18 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x555715568b90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x555715568c08 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x555715568fb8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x555715568ec0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x555715569080 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x5557155690d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x555715569120 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5557155641f0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x5557155643f8 prev 0x5557155641f0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x555715565540 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5557155654f0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x5557155654d0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x555715565380 'type'
|     `-SubstTemplateTypeParmType 0x5557155651a0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55571527b7f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55571527b798 'T'
|       `-RecordType 0x555715564cf0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x555715564c08 'sized_array_memory'
|-FieldDecl 0x555715569170 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5557155691c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5557155691f8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x555715564490 'Timer *' sugar
|   |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5557152b36a8 'T'
|   `-PointerType 0x555715518290 'Timer *'
|     `-RecordType 0x5557155173e0 'Timer'
|       `-CXXRecord 0x55571549b078 'Timer'
|-TypedefDecl 0x5557155692b8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x555715569280 'Timer *&'
|   `-SubstTemplateTypeParmType 0x555715564490 'Timer *' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-PointerType 0x555715518290 'Timer *'
|       `-RecordType 0x5557155173e0 'Timer'
|         `-CXXRecord 0x55571549b078 'Timer'
|-TypedefDecl 0x555715569378 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x555715569340 'Timer *const &'
|   `-QualType 0x555715564491 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x555715564490 'Timer *' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-PointerType 0x555715518290 'Timer *'
|         `-RecordType 0x5557155173e0 'Timer'
|           `-CXXRecord 0x55571549b078 'Timer'
|-TypedefDecl 0x555715569438 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x555715569400 'Timer **'
|   `-SubstTemplateTypeParmType 0x555715564490 'Timer *' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-PointerType 0x555715518290 'Timer *'
|       `-RecordType 0x5557155173e0 'Timer'
|         `-CXXRecord 0x55571549b078 'Timer'
|-TypedefDecl 0x5557155694f8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x5557155694c0 'Timer *const *'
|   `-QualType 0x555715564491 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x555715564490 'Timer *' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-PointerType 0x555715518290 'Timer *'
|         `-RecordType 0x5557155173e0 'Timer'
|           `-CXXRecord 0x55571549b078 'Timer'
|-TypedefDecl 0x55571556a0d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55571556a080 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55571556a060 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x555715569ff0 'type'
|     `-SubstTemplateTypeParmType 0x555715569db0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5557152865f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152865a0 'T'
|       `-PointerType 0x555715518290 'Timer *'
|         `-RecordType 0x5557155173e0 'Timer'
|           `-CXXRecord 0x55571549b078 'Timer'
|-TypedefDecl 0x55571556a138 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x555715569340 'Timer *const &'
|   `-QualType 0x555715564491 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x555715564490 'Timer *' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-PointerType 0x555715518290 'Timer *'
|         `-RecordType 0x5557155173e0 'Timer'
|           `-CXXRecord 0x55571549b078 'Timer'
|-TypedefDecl 0x55571556a190 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555714fb33b0 'int'
|-TypedefDecl 0x55571556a1f8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x555715569400 'Timer **'
|   `-SubstTemplateTypeParmType 0x555715564490 'Timer *' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-PointerType 0x555715518290 'Timer *'
|       `-RecordType 0x5557155173e0 'Timer'
|         `-CXXRecord 0x55571549b078 'Timer'
|-TypedefDecl 0x55571556a260 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x5557155694c0 'Timer *const *'
|   `-QualType 0x555715564491 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x555715564490 'Timer *' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-PointerType 0x555715518290 'Timer *'
|         `-RecordType 0x5557155173e0 'Timer'
|           `-CXXRecord 0x55571549b078 'Timer'
|-EnumDecl 0x55571556a2b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55571556a3b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55571556a390 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5557152b4d88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5557152b4d60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5557152b4d40 <col:40> 'int' 1
|-CXXConstructorDecl 0x55571556a438 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55571556a6c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55571556a4f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55571556a590 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55571556a988 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55571556a870 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55571556ac48 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55571556ab30 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55571556af90 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55571556ae70 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55571556b2a0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55571556b180 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55571556b590 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55571556b3d8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55571556b450 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55571556b6e8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55571556b7c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55571556b820 <col:30> Inherited
|-CXXMethodDecl 0x55571556b868 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55571556b918 <col:20> Inherited
| `-OptimizeNoneAttr 0x55571556b970 <col:30> Inherited
|-CXXMethodDecl 0x55571556fa80 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55571556fb30 <col:20> Inherited
| `-OptimizeNoneAttr 0x55571556fb88 <col:30> Inherited
|-CXXMethodDecl 0x55571556fbd0 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55571556fc80 <col:20> Inherited
| `-OptimizeNoneAttr 0x55571556fcd8 <col:30> Inherited
|-CXXMethodDecl 0x55571556fd20 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55571556fdd0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55571556fe28 <col:30> Inherited
|-CXXMethodDecl 0x55571556fe70 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55571556ff20 <col:20> Inherited
| `-OptimizeNoneAttr 0x55571556ff78 <col:30> Inherited
|-CXXMethodDecl 0x55571556ffa0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x555715570050 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x555715570100 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5557155702c0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5557155701b0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x555715570228 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x555715570410 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x555715570380 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155705b8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x5557155704c8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x555715570670 <col:20>
| `-OptimizeNoneAttr 0x5557155706c8 <col:30>
|-CXXMethodDecl 0x5557155707e8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5557155706f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5557155708a0 <col:20>
| `-OptimizeNoneAttr 0x5557155708f8 <col:30>
|-CXXMethodDecl 0x5557155709b0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x555715570920 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555715570af8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x555715570a68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555715570c28 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x555715570d58 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x555715570e28 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x555715570ef8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x555715571038 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x555715570fa8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555715571180 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5557155710f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155712c8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x555715571238 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x555715571380 <col:48> Inherited "" ""
|-CXXMethodDecl 0x555715571480 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5557155713f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x555715571538 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5557155715f8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x5557155716f8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x555715571878 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x5557155717b8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x555715572038 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x555715571930 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x555715571f98 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x555715571e98 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x555715572118 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x555715572268 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x5557155721d8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x555715572320 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x555715572568 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5557155723e0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x555715572458 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x555715572728 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x555715572638 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x555715572978 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x5557155727f0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x555715572868 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x555715572a38 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x555715572c98 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x555715572ba0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x555715572d68 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x555715572d68

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555715531940 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x555715531a58 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x555715531ae8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x555715531b70 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x555715531c60 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x555715531d60 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x555715531e20 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x555715531ee0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x555715532008 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x555715532008
| `-ParmVarDecl 0x555715532118 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x555715573b18 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x555715573b18
  `-ParmVarDecl 0x555715573c28 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555715553400 prev 0x55571549f228 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5557155534f8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x555715553588 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x555715553610 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x555715553708 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x555715573f90 <col:43, col:67>
|   `-ReturnStmt 0x555715573f80 <col:45, col:52>
|     `-CXXConstructExpr 0x555715573f50 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x555715573f20 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x555715554ef0
|         `-CXXThisExpr 0x555715573f10 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5557155537c8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x5557155539d0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x555715553878 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x5557155538f0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x555715553ac8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x555715553b90 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x555715574010 <col:39, col:67>
|   `-ReturnStmt 0x555715574000 <col:41, col:48>
|     `-ImplicitCastExpr 0x555715573fe8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x555715573fb8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x555715554fd8
|         `-CXXThisExpr 0x555715573fa8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x555715553c58 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x555715574090 <col:35, col:59>
|   `-ReturnStmt 0x555715574080 <col:37, col:44>
|     `-ImplicitCastExpr 0x555715574068 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x555715574038 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x555715555040
|         `-CXXThisExpr 0x555715574028 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x555715553da0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x555715553d10 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x555715553ee8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x555715553e58 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5557155540e8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x555715553fa0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x555715554018 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x5557155541b8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x555715554258 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x555715554280 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x555715554398 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x555715554438 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x555715554498 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x5557155545c8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x5557155544f8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x555715554438 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x555715574168 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x555715574110 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x5557155740e0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55571549c6b8
|   |       `-ImplicitCastExpr 0x555715574130 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x5557155740c8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x5557155740a8 <col:17> 'Timer *' lvalue ParmVar 0x5557155544f8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x555715554498 't' 'Timer *'
|   | `-ImplicitCastExpr 0x555715574200 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557155741c0 <col:41> 'Timer *' lvalue ParmVar 0x5557155544f8 't_' 'Timer *'
|   `-CompoundStmt 0x555715574250 <col:45, line:44:2>
|-CXXRecordDecl 0x555715554690 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5557155547a8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x5557155549f8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x555715554878 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x5557155548f0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x555715574380 <col:71, line:49:2>
|     `-ReturnStmt 0x555715574370 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x555715574338 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x555715574320 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x555715574300 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x5557154d55f8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x555715574280 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x555715554438
|         | `-DeclRefExpr 0x555715574260 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x555715554878 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x5557155742d0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x555715554438
|           `-DeclRefExpr 0x5557155742b0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x5557155548f0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x555715554ac0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x555715554bd8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x555715554df8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x555715554c78 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x555715554cf0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x555715574588 <col:63, line:54:2>
|     `-BinaryOperator 0x555715574568 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x555715574418 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55571549e6c8
|       | `-ImplicitCastExpr 0x555715574400 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x5557155743d0 <col:6, col:9> 'Timer *' lvalue ->t 0x555715554498
|       |     `-ImplicitCastExpr 0x5557155743b8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x555715574398 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x555715554cf0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x555715574550 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x555715574530 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x5557155744d8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x5557155744b8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x555715574488 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x555715574448 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x555715554cf0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x5557155744a0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x555715574468 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x555715554c78 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x555715574518 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x5557155744f8 <col:39> 'int' 1
|-FieldDecl 0x555715554ef0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x555715554f60 <col:44, col:53> aligned
|   `-ConstantExpr 0x555715554f40 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x555715554ec0 <col:52> 'int' 8
|-FieldDecl 0x555715554fd8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x555715555040 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x5557155550a8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x555715564190 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x555715572e50 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x555715572eb0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x555715572f10 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x555715572f70 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555715573060 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x555715572fd0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x555715573128 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x5557155749e0 <col:29, line:81:5>
|   `-IfStmt 0x5557155749b8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x555715574670 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x555715574610 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x5557155745e0 <col:6, col:18> '<bound member function type>' .size 0x5557155611d8
|     |     `-ImplicitCastExpr 0x555715574658 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x5557155745b0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x555715564190
|     |         `-CXXThisExpr 0x5557155745a0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x555715574860 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x555715574848 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x555715574828 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x5557151bee38 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x555715574698 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x555715554ef0
|     | | `-CXXThisExpr 0x555715574688 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x555715574810 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x5557155747e0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x555715554438
|     |     `-CXXMemberCallExpr 0x5557155747b8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x555715574788 <col:22, col:34> '<bound member function type>' .unchecked_at 0x555715562278
|     |       | `-MemberExpr 0x5557155746d8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x555715564190
|     |       |   `-CXXThisExpr 0x5557155746c8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x555715574768 <col:47> 'int' 0
|     `-ExprWithCleanups 0x5557155749a0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x555715574968 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x555715574950 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x555715574930 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x5557151bf2e8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x5557155748a8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x555715554ef0
|         | `-CXXThisExpr 0x555715574898 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x555715574918 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5557155748e8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x555715573268 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x5557155731d8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x555715573330 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x5557155733f0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x5557155734b0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x5557155735a0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x555715573608 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x555715573608
| `-ParmVarDecl 0x555715573718 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x5557155737b8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x5557155737b8
| `-ParmVarDecl 0x5557155738c8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x555715573968 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x555715573968
| `-ParmVarDecl 0x555715573a78 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x555715573c98 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x555715573c98
| `-ParmVarDecl 0x555715573da8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x555715573e30 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x555715573e30

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5557155aa878 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x5557155aaa88 prev 0x5557155aa878 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5557155abb60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5557155abb10 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x5557155abaf0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x5557155ab9a0 'type'
|     `-SubstTemplateTypeParmType 0x5557155651a0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55571527b7f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55571527b798 'T'
|       `-RecordType 0x555715564cf0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x555715564c08 'sized_array_memory'
|-FieldDecl 0x5557155abc60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5557155abcb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5557155abce8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x5557155aab20 'pollfd' sugar
|   |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5557152b36a8 'T'
|   `-RecordType 0x55571559e8f0 'pollfd'
|     `-CXXRecord 0x55571559e860 'pollfd'
|-TypedefDecl 0x5557155abda8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x5557155abd70 'pollfd &'
|   `-SubstTemplateTypeParmType 0x5557155aab20 'pollfd' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-RecordType 0x55571559e8f0 'pollfd'
|       `-CXXRecord 0x55571559e860 'pollfd'
|-TypedefDecl 0x5557155abe68 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x5557155abe30 'const pollfd &'
|   `-QualType 0x5557155aab21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5557155aab20 'pollfd' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x55571559e8f0 'pollfd'
|         `-CXXRecord 0x55571559e860 'pollfd'
|-TypedefDecl 0x5557155abef8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x5557155abec0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x5557155aab20 'pollfd' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-RecordType 0x55571559e8f0 'pollfd'
|       `-CXXRecord 0x55571559e860 'pollfd'
|-TypedefDecl 0x5557155abfb8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x5557155abf80 'const pollfd *'
|   `-QualType 0x5557155aab21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5557155aab20 'pollfd' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x55571559e8f0 'pollfd'
|         `-CXXRecord 0x55571559e860 'pollfd'
|-TypedefDecl 0x5557155acb90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x5557155acb40 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x5557155acb20 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x5557155acab0 'type'
|     `-SubstTemplateTypeParmType 0x5557155ac870 'pollfd' sugar
|       |-TemplateTypeParmType 0x5557152865f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152865a0 'T'
|       `-RecordType 0x55571559e8f0 'pollfd'
|         `-CXXRecord 0x55571559e860 'pollfd'
|-TypedefDecl 0x5557155acbf8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x5557155abe30 'const pollfd &'
|   `-QualType 0x5557155aab21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5557155aab20 'pollfd' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x55571559e8f0 'pollfd'
|         `-CXXRecord 0x55571559e860 'pollfd'
|-TypedefDecl 0x5557155acc50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555714fb33b0 'int'
|-TypedefDecl 0x5557155accb8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x5557155abec0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x5557155aab20 'pollfd' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-RecordType 0x55571559e8f0 'pollfd'
|       `-CXXRecord 0x55571559e860 'pollfd'
|-TypedefDecl 0x5557155acd20 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x5557155abf80 'const pollfd *'
|   `-QualType 0x5557155aab21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5557155aab20 'pollfd' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x55571559e8f0 'pollfd'
|         `-CXXRecord 0x55571559e860 'pollfd'
|-EnumDecl 0x5557155acd78 <line:134:5> col:5
| `-EnumConstantDecl 0x5557155ace70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5557155ace50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5557152b4d88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5557152b4d60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5557152b4d40 <col:40> 'int' 1
|-CXXConstructorDecl 0x5557155acef8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5557155ad188 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5557155acfb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5557155ad050 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x5557155ad448 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5557155ad330 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x5557155ad708 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x5557155ad5f0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x5557155ada50 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5557155ad930 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x5557155add60 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x5557155adc40 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x5557155ae050 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5557155ade98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5557155adf10 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5557155ae1a8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x5557155ae288 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155ae2e0 <col:30> Inherited
|-CXXMethodDecl 0x5557155ae328 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x5557155ae3d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155ae430 <col:30> Inherited
|-CXXMethodDecl 0x5557155ae4f8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5557155ae5a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155ae600 <col:30> Inherited
|-CXXMethodDecl 0x5557155ae648 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5557155ae6f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155ae750 <col:30> Inherited
|-CXXMethodDecl 0x5557155ae798 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5557155ae848 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155ae8a0 <col:30> Inherited
|-CXXMethodDecl 0x5557155ae8e8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5557155ae998 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155ae9f0 <col:30> Inherited
|-CXXMethodDecl 0x5557155aea18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5557155aeac8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5557155aeb78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5557155aed38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5557155aec28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5557155aeca0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5557155aee88 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5557155aedf8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155af038 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x5557155aef40 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5557155af0f0 <col:20>
| `-OptimizeNoneAttr 0x5557155af148 <col:30>
|-CXXMethodDecl 0x5557155af268 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x5557155af170 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5557155af320 <col:20>
| `-OptimizeNoneAttr 0x5557155af378 <col:30>
|-CXXMethodDecl 0x5557155af430 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x5557155af3a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155af578 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5557155af4e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155af6a8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x5557155af7d8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x5557155af8a8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x5557155af978 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x5557155afab8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x5557155afa28 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155afc00 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5557155afb70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155afd48 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x5557155afcb8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5557155afe00 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5557155aff00 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5557155afe70 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5557155affb8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5557155b0078 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x5557155b0178 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x5557155b0328 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x5557155b0238 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x5557155b0ae8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5557155b03e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x5557155b0a48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x5557155b0948 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x5557155b0bc8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5557155b0d18 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x5557155b0c88 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5557155b0dd0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5557155b1018 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5557155b0e90 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5557155b0f08 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5557155b11d8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x5557155b10e8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5557155b1428 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x5557155b12a0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5557155b1318 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5557155b14e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5557155b1768 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5557155b1650 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x5557155b1838 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5557155b1838

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5557155b2e20 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x5557155b2ff8 prev 0x5557155b2e20 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5557155b3088 <col:46, col:52> col:46 public
|-TypedefDecl 0x5557155b30b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555714fb33b0 'int'
|-TypedefDecl 0x5557155b4c80 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x5557155b4c30 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x5557155b3560 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x5557155b3460 'type'
|     `-TemplateSpecializationType 0x5557155b33f0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5557155b32d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x5557155b32b0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5557155b3290 <col:24> 'unsigned long' 24
|       `-RecordType 0x5557155b33d0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x5557155b32f0 'char_array'
|-TypedefDecl 0x5557155b4d38 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x5557155b4d00 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x5557155b4ce0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x5557155b4c80 'type'
|     `-ElaboratedType 0x5557155b4c30 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x5557155b3560 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x5557155b3460 'type'
|         `-TemplateSpecializationType 0x5557155b33f0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5557155b32d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x5557155b32b0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5557155b3290 <col:24> 'unsigned long' 24
|           `-RecordType 0x5557155b33d0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x5557155b32f0 'char_array'
|-CXXMethodDecl 0x5557155b4eb8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x5557155b4dc8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x5557155b4fa8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5557155b5088 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5557155b5088
|-CXXMethodDecl 0x5557155b5358 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5557155b5260 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x5557155b5598 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5557155b5410 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5557155b5488 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5557155b5768 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5557155b5658 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5557155b56d0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5557155b58c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5557155b5998 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5557155b5be8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5557155b5a58 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5557155b5ad0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5557155b5e48 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x5557155b5cb8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5557155b5d30 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5557155b6008 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5557155b5f18 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5557155b61c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5557155b60d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5557155b6280 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5557155b6330 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5557155b6568 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5557155b63e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5557155b6458 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5557155b6808 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5557155b6710 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x5557155b68d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x5557155b6920 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5557155b6970 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5557155b1980 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x5557155b1b88 prev 0x5557155b1980 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5557155b2d90 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x5557155b2d40 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x5557155b2d20 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x5557155b2bd0 'type'
|     `-SubstTemplateTypeParmType 0x5557155b29f0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55571527b7f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55571527b798 'T'
|       `-RecordType 0x5557155b2540 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x5557155b2460 'sized_array_memory'
|-FieldDecl 0x5557155b69c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x5557155b6a10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5557155b6a48 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x5557155b1c20 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5557152b36a8 'T'
|   `-RecordType 0x5557155aa3e0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x5557155aa350 'SelectorInfo'
|-TypedefDecl 0x5557155b6b08 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5557155b6ad0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x5557155b1c20 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-RecordType 0x5557155aa3e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5557155aa350 'SelectorInfo'
|-TypedefDecl 0x5557155b6bc8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5557155b6b90 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5557155b1c21 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5557155b1c20 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x5557155aa3e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5557155aa350 'SelectorInfo'
|-TypedefDecl 0x5557155b6c58 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x5557155b6c20 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5557155b1c20 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-RecordType 0x5557155aa3e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5557155aa350 'SelectorInfo'
|-TypedefDecl 0x5557155b6d18 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5557155b6ce0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5557155b1c21 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5557155b1c20 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x5557155aa3e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5557155aa350 'SelectorInfo'
|-TypedefDecl 0x5557155b7970 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x5557155b7920 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x5557155b7900 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x5557155b7838 'type'
|     `-LValueReferenceType 0x5557155b7800 'const SelectSet::SelectorInfo &'
|       `-QualType 0x5557155b75a1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x5557155b75a0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x555715285ec0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x555715285e68 'T'
|           `-RecordType 0x5557155aa3e0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x5557155aa350 'SelectorInfo'
|-TypedefDecl 0x5557155b79d8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5557155b6b90 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5557155b1c21 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5557155b1c20 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x5557155aa3e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5557155aa350 'SelectorInfo'
|-TypedefDecl 0x5557155b7a30 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555714fb33b0 'int'
|-TypedefDecl 0x5557155b7a98 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x5557155b6c20 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5557155b1c20 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-RecordType 0x5557155aa3e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5557155aa350 'SelectorInfo'
|-TypedefDecl 0x5557155b7b00 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5557155b6ce0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5557155b1c21 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5557155b1c20 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x5557155aa3e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5557155aa350 'SelectorInfo'
|-EnumDecl 0x5557155b7b58 <line:134:5> col:5
| `-EnumConstantDecl 0x5557155b7c50 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5557155b7c30 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5557152b4d88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5557152b4d60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5557152b4d40 <col:40> 'int' 1
|-CXXConstructorDecl 0x5557155b7cd8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5557155b7f68 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5557155b7d90 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5557155b7e30 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x5557155b8228 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5557155b8110 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x5557155b84e8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5557155b83d0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5557155b8830 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5557155b8710 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x5557155b8b40 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5557155b8a20 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5557155b8e30 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5557155b8c78 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5557155b8cf0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5557155b8f88 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5557155b9068 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155b90c0 <col:30> Inherited
|-CXXMethodDecl 0x5557155b9108 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5557155b91b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155b9210 <col:30> Inherited
|-CXXMethodDecl 0x5557155b92d8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5557155b9388 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155b93e0 <col:30> Inherited
|-CXXMethodDecl 0x5557155b9428 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5557155b94d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155b9530 <col:30> Inherited
|-CXXMethodDecl 0x5557155b9578 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5557155b9628 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155b9680 <col:30> Inherited
|-CXXMethodDecl 0x5557155b9720 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5557155b97d0 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557155b9828 <col:30> Inherited
|-CXXMethodDecl 0x5557155b9850 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5557155b9900 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5557155b99b0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5557155b9b70 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5557155b9a60 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5557155b9ad8 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5557155b9cc0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5557155b9c30 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155b9e68 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x5557155b9d78 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5557155b9f20 <col:20>
| `-OptimizeNoneAttr 0x5557155b9f78 <col:30>
|-CXXMethodDecl 0x5557155ba098 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x5557155b9fa0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5557155ba150 <col:20>
| `-OptimizeNoneAttr 0x5557155ba1a8 <col:30>
|-CXXMethodDecl 0x5557155ba260 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5557155ba1d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155ba3a8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5557155ba318 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155ba4d8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5557155ba608 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5557155ba6d8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5557155ba7a8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5557155ba8e8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5557155ba858 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155baa30 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5557155ba9a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557155bab78 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x5557155baae8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5557155bac30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5557155bad30 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5557155baca0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5557155bade8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5557155baea8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x5557155bafa8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x5557155bb158 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5557155bb068 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x5557155bb918 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5557155bb210 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x5557155bb878 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x5557155bb778 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x5557155bb9f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5557155bbb48 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5557155bbab8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5557155bbc00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5557155bbe48 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5557155bbcc0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5557155bbd38 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5557155bc008 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x5557155bbf18 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5557155bc258 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x5557155bc0d0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5557155bc148 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5557155bc318 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5557155bc578 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5557155bc480 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x5557155bc648 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5557155bc648

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55571559f4f0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55571559f608 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55571559f698 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x5557155a9760 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x5557155a9850 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x5557155a9850
|-CXXMethodDecl 0x5557155a9950 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x5557155a9bf0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x5557155a9a08 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x5557155a9a80 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x5557155a9b00 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x5557155a9e60 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x5557155a9cc0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x5557155a9d38 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x5557155a9db8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x5557155a9fb8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x5557155a9f28 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x5557155aa080 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x5557155bdcf8 <col:34, line:50:5>
|   |-BinaryOperator 0x5557155bd6c8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x5557155bd688 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x5557155aa808
|   | | `-CXXThisExpr 0x5557155bd678 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x5557155bd6b8 <col:23> 'bool' true
|   `-CallExpr 0x5557155bdcd0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x5557155bdcb8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5557155bdc38 <col:2> 'void (long)' lvalue Function 0x5557155bdb38 'ignore_result' 'void (long)' (FunctionTemplate 0x555715276798 'ignore_result')
|     `-CallExpr 0x5557155bd8e0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x5557155bd8c8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5557155bd848 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x555715577a90 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x5557155bd918 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x5557155bd7f0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x5557155bd7d8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x5557155bd788 <col:22> 'int [2]' lvalue ->_wake_pipe 0x5557155aa7a8
|       |   |   `-CXXThisExpr 0x5557155bd778 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x5557155bd7b8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x5557155bd948 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x5557155bd930 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x5557155bd810 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x5557155bd960 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5557155bd828 <col:41> 'int' 1
|-CXXMethodDecl 0x5557155aa1c0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5557155aa130 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5557155aa288 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x5557155aa328 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x5557155aa350 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5557155aa468 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x5557155aa508 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x5557155aa568 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x5557155aa5d0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x5557155aa680 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x5557155aa508 'read' 'Element *'
|   | `-ImplicitCastExpr 0x5557155bdd58 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5557155bdd18 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x5557155aa568 'write' 'Element *'
|   | `-ImplicitCastExpr 0x5557155bddd8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5557155bdd98 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x5557155aa5d0 'pollfd' 'int'
|   | `-UnaryOperator 0x5557155bde38 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x5557155bde18 <col:35> 'int' 1
|   `-CompoundStmt 0x5557155bdeb0 <line:64:2, line:65:2>
|-FieldDecl 0x5557155aa7a8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x5557155aa808 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x5557155b1920 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x5557155bc730 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x5557155bc968 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x5557155bc798 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x5557155bc810 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x5557155bc888 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x5557155bcb50 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x5557155bca38 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x5557155bcab8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x5557155bcd98 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x5557155bcc18 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x5557155bcc98 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x5557155bcfa8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x5557155bce58 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x5557155bced0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x5557155bd0f8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x5557155bd068 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x5557155bd1c0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x5557155bd280 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x5557155bd348 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x5557155bd348
| `-ParmVarDecl 0x5557155bd458 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x5557155bd4f8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x5557155bd4f8
  `-ParmVarDecl 0x5557155bd608 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557155308a8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5557155309c8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x555715530a58 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x555715530ae0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x555715530bd0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x555715530cd0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x555715530d90 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x555715530e50 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x555715530f38 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x555715531058 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x555715531058
| `-ParmVarDecl 0x555715531168 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x5557155c2b08 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x5557155c2b08
  `-ParmVarDecl 0x5557155c2c18 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555715498de8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x555715498f08 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x555715498fa8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x555715499008 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x5557155c2108 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5557155c2108
| `-ParmVarDecl 0x5557155c2218 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x5557155c22b8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5557155c22b8
| `-ParmVarDecl 0x5557155c23c8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x5557155c2438 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5557155c2438
|-CXXMethodDecl 0x5557155c2cb8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5557155c2cb8
| `-ParmVarDecl 0x5557155c2dc8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x5557155c2e38 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5557155c2e38
| `-ParmVarDecl 0x5557155c2f48 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x5557155c95b8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x5557155c9690 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557155327a0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5557155328b8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x555715532948 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x5557155329d0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x555715532a90 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x555714fb33b0 'int'
|-CXXMethodDecl 0x555715532b58 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x555715532bf8 <col:45> always_inline
|-CXXMethodDecl 0x555715532d28 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x555715532c60 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x555715532dd0 <col:49> always_inline
|-CXXConstructorDecl 0x555715532ec8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x555715532ec8
| `-ParmVarDecl 0x555715532fd8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x555715533078 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x555715533078
| `-ParmVarDecl 0x555715533188 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x5557155c2520 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x5557155c2520
|-CXXMethodDecl 0x5557155c2fe8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5557155c2fe8
| `-ParmVarDecl 0x5557155c30f8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x5557155c3168 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5557155c3168
  `-ParmVarDecl 0x5557155c3278 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557155be320 prev 0x55571559f460 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5557155be418 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x5557155be4a8 <col:22, col:28> col:22 public
|-EnumDecl 0x5557155be4d0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x5557155be5e8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x5557155be5c8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5557155be5b0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5557155be590 <col:32> 'int' 1
| `-EnumConstantDecl 0x5557155be690 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x5557155be670 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5557155be658 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5557155be638 <col:53> 'int' 1000
|-CXXMethodDecl 0x5557155be730 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x5557155be7f0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5557155be8d8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x5557155c3338 <col:34, col:52>
|   `-ReturnStmt 0x5557155c3328 <col:36, col:43>
|     `-MemberExpr 0x5557155c32f8 <col:43> 'TimerSet' lvalue ->_timers 0x5557155c05a8
|       `-CXXThisExpr 0x5557155c32e8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5557155be9c8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x5557155c33a0 <col:46, col:64>
|   `-ReturnStmt 0x5557155c3390 <col:48, col:55>
|     `-MemberExpr 0x5557155c3360 <col:55> 'const TimerSet' lvalue ->_timers 0x5557155c05a8
|       `-CXXThisExpr 0x5557155c3350 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5557155beab8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x5557155c3408 <col:36, col:55>
|   `-ReturnStmt 0x5557155c33f8 <col:38, col:45>
|     `-MemberExpr 0x5557155c33c8 <col:45> 'SelectSet' lvalue ->_selects 0x5557155c0608
|       `-CXXThisExpr 0x5557155c33b8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5557155beba8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x5557155c3470 <col:48, col:67>
|   `-ReturnStmt 0x5557155c3460 <col:50, col:57>
|     `-MemberExpr 0x5557155c3430 <col:57> 'const SelectSet' lvalue ->_selects 0x5557155c0608
|       `-CXXThisExpr 0x5557155c3420 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5557155bec68 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x5557155bed58 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x5557155beec8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x5557155bee08 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x5557155bef90 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x5557155bf3d8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x5557155bf040 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x5557155bf2c0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x5557155bf4a8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x5557155bf568 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x5557155bf628 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x5557155bf768 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x5557155bf6d8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x5557155bf830 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x5557155bf8f0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x5557155bf9b0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x5557155bfa70 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x5557155bfbb0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5557155bfb20 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5557155bfc78 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x5557155bfd38 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x5557155bfdd8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x5557155bfea0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5557155bfef0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5557155bff40 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5557155bff90 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5557155bffe0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5557155c0030 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5557155c0080 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5557155c00d0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5557155c0120 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5557155c0170 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x5557155c01c0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x5557155c02b8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x5557155c0228 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x5557155c0408 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x5557155c0378 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x5557155c04b0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x5557155c04e8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x5557155c0548 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x5557155c05a8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x5557155c0608 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x5557155c0688 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x5557155c06f8 <col:40, col:50> aligned
|   `-ConstantExpr 0x5557155c06d8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x5557155c0658 <col:48> 'int' 64
|-FieldDecl 0x5557155c0768 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x5557155c07c8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x5557155c08c0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x5557155c09d0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x5557155c0a30 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x5557155c0ab0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x5557155c0b20 <col:36, col:46> aligned
|   `-ConstantExpr 0x5557155c0b00 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x5557155c0a80 <col:44> 'int' 64
|-FieldDecl 0x5557155c0b98 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x5557155c0bf8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x5557155c0c48 <line:170:3, col:9> col:3 public
|-FieldDecl 0x5557155c0c88 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x5557155c0cf0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x5557155c0d40 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x5557155c0ee8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x5557155c0d78 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x5557155c0df8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x5557155c0fe8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x5557155c0fe8
|-CXXMethodDecl 0x5557155c10f0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x5557155c11b8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x5557155c3568 <col:34, line:217:5>
|   `-ReturnStmt 0x5557155c3558 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x5557155c3540 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5557155c3510 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x555715535300
|         `-ImplicitCastExpr 0x5557155c34f8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x5557155c34c8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x555715535298
|             `-MemberExpr 0x5557155c3498 <col:16> 'const TaskLink' lvalue ->_task_link 0x5557155c04e8
|               `-CXXThisExpr 0x5557155c3488 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5557155c1278 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x5557155c1338 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x5557155c3c90 <col:39, line:226:5>
|   |-DeclStmt 0x5557155c37b8 <line:223:9, col:68>
|   | `-VarDecl 0x5557155c3590 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x5557155c3770 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x5557155c3740 <col:24, col:38> '<bound member function type>' .compare_swap 0x5557152dd000
|   |     | `-MemberExpr 0x5557155c3608 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x5557155c0768
|   |     |   `-CXXThisExpr 0x5557155c35f8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x5557155c36f8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x5557155c36e0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x5557155c36b8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x5557155c3698 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x5557155c37a0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x5557155c3720 <col:66> 'int' 0
|   |-CStyleCastExpr 0x5557155c3800 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5557155c37d0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x5557155c3590 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x5557155c3c70 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x5557155c3c40 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x5557155c3918 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x5557155c38e8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5557155c38d0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x5557155c3828 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x5557155c3590 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x5557155c38a8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x5557155c3890 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x5557155c3868 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x5557155c3848 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x5557155c3978 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x5557155c3958 <col:60> 'int' 0
|       `-CallExpr 0x5557155c3ba0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x5557155c3b88 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5557155c3b68 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x5557155c3be0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5557155c3a68 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x5557155c3bf8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5557155c3a98 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x5557155c3c10 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x5557155c3ad8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x5557155c3c28 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x5557155c3b50 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x5557155c3b38 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x5557155c3af8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x5557155c1480 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x5557155c13f0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x5557155c1548 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x5557155c1608 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x5557155c1730 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x5557155c17f0 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x5557155c18b0 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x5557155c19a0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x5557155c1a00 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x5557155c1a90 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x5557155c1e58 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x5557155c1e58
| `-ParmVarDecl 0x5557155c1f68 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x5557155c2628 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x5557155c2628
  `-ParmVarDecl 0x5557155c2738 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555715535610 prev 0x5557155172a0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x555715535748 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x5557155357d8 <col:33, col:39> col:33 public
|-EnumDecl 0x555715535800 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x555715535940 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x555715535920 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x555715535900 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5557155358c0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x5557155358e0 <col:26> 'int' 16
| `-EnumConstantDecl 0x555715535a10 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x5557155359f0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x5557155359d0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x555715535990 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x5557155359b0 <col:47> 'int' 31
|-EnumDecl 0x555715535a60 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x555715535ba0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x555715535cc0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715535b80 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x555715535b60 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x555715535b20 <col:26> 'int' 1
| |       `-IntegerLiteral 0x555715535b40 <col:29> 'int' 15
| `-EnumConstantDecl 0x555715535c70 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x555715535cd8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555715535c50 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x555715535c30 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x555715535bf0 <col:51> 'int' 1
|         `-IntegerLiteral 0x555715535c10 <col:54> 'int' 10
|-CXXConstructorDecl 0x555715535ea8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x555715535d00 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x555715535d80 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x555715536038 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x555715535f70 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x555715536130 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x555715536130
|-CXXMethodDecl 0x5557155362b8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x555715499f48 <col:42, line:100:5>
|   `-ReturnStmt 0x555715499f38 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x555715499f20 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x555715499ef0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x555715498c70
|         `-CXXThisExpr 0x555715499ee0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x555715536380 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x555715499fc8 <col:36, line:105:5>
|   `-ReturnStmt 0x555715499fb8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x555715499fa0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x555715499f70 <col:16> 'void *const' lvalue ->_thunk 0x555715498cd8
|         `-CXXThisExpr 0x555715499f60 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x555715536440 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55571549a048 <col:37, line:110:5>
|   `-ReturnStmt 0x55571549a038 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55571549a020 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x555715499ff0 <col:16> 'Element *const' lvalue ->_owner 0x555715498d98
|         `-CXXThisExpr 0x555715499fe0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x555715536500 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x5557155365c8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x555715536688 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x555715536748 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55571549a130 <col:35, line:137:5>
|   `-ReturnStmt 0x55571549a120 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55571549a0e8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55571549a0b8 <col:16, col:24> '<bound member function type>' ->router 0x555715529ab0
|         `-ImplicitCastExpr 0x55571549a108 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55571549a0a0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55571549a070 <col:16> 'Element *const' lvalue ->_owner 0x555715498d98
|               `-CXXThisExpr 0x55571549a060 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x555715536808 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x555715536a08 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x5557155368b8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x555715536930 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x555715536c18 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x555715536ac8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x555715536b40 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x555715536ce8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55571549a240 <col:35, line:181:5>
|   `-ReturnStmt 0x55571549a230 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55571549a218 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55571549a200 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55571549a1d0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x5557154988a8
|           `-MemberExpr 0x55571549a188 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5557154989c8
|             `-MemberExpr 0x55571549a158 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x555715498bf8
|               `-CXXThisExpr 0x55571549a148 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5557154978f0 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55571549a358 <col:30, line:192:5>
|   `-BinaryOperator 0x55571549a338 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55571549a2e0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5557154988a8
|     | `-MemberExpr 0x55571549a298 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5557154989c8
|     |   `-MemberExpr 0x55571549a268 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x555715498bf8
|     |     `-CXXThisExpr 0x55571549a258 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55571549a320 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55571549a310 <col:32> 'bool' false
|-CXXMethodDecl 0x5557154979b0 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55571549a6a8 <col:30, line:206:5>
|   |-BinaryOperator 0x55571549a450 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55571549a3f8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5557154988a8
|   | | `-MemberExpr 0x55571549a3b0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5557154989c8
|   | |   `-MemberExpr 0x55571549a380 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x555715498bf8
|   | |     `-CXXThisExpr 0x55571549a370 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55571549a438 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55571549a428 <col:32> 'bool' true
|   |-CallExpr 0x55571549a4f0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55571549a4d8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55571549a4b8 <col:9> 'void ()' lvalue Function 0x555715530460 'click_fence' 'void ()'
|   `-IfStmt 0x55571549a690 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55571549a5d0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55571549a5a0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55571549a550 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x555715499008
|     | |   `-MemberExpr 0x55571549a520 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x555715499080
|     | |     `-CXXThisExpr 0x55571549a510 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55571549a5b8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55571549a580 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55571549a650 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55571549a600 <col:13> '<bound member function type>' ->complete_schedule 0x555715499a80
|       | `-CXXThisExpr 0x55571549a5f0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55571549a678 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55571549a630 <col:31> 'int' 0
|-CXXMethodDecl 0x555715497a70 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55571549a7d0 <col:35, line:240:5>
|   `-BinaryOperator 0x55571549a7b0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55571549a758 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5557154988a8
|     | `-MemberExpr 0x55571549a710 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5557154989c8
|     |   `-MemberExpr 0x55571549a6e0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x555715498bf8
|     |     `-CXXThisExpr 0x55571549a6d0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55571549a798 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55571549a788 <col:32> 'bool' true
|-CXXMethodDecl 0x555715497b30 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55571549a9e8 <col:37, line:253:5>
|   |-BinaryOperator 0x55571549a8c8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55571549a870 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5557154988a8
|   | | `-MemberExpr 0x55571549a828 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5557154989c8
|   | |   `-MemberExpr 0x55571549a7f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x555715498bf8
|   | |     `-CXXThisExpr 0x55571549a7e8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55571549a8b0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55571549a8a0 <col:32> 'bool' false
|   `-BinaryOperator 0x55571549a9c8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55571549a970 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x555715498908
|     | `-MemberExpr 0x55571549a928 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5557154989c8
|     |   `-MemberExpr 0x55571549a8f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x555715498bf8
|     |     `-CXXThisExpr 0x55571549a8e8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55571549a9b0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55571549a9a0 <col:41> 'bool' true
|-CXXMethodDecl 0x555715497bf0 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55571549ab68 <col:37, line:264:5>
|   |-BinaryOperator 0x55571549aae8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55571549aa90 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x555715498908
|   | | `-MemberExpr 0x55571549aa48 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5557154989c8
|   | |   `-MemberExpr 0x55571549aa18 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x555715498bf8
|   | |     `-CXXThisExpr 0x55571549aa08 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55571549aad0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55571549aac0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55571549ab48 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55571549ab18 <col:9> '<bound member function type>' ->reschedule 0x5557154979b0
|       `-CXXThisExpr 0x55571549ab08 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x555715497d38 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x555715497ca8 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x555715497e08 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x555715497f50 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x555715497ec0 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x5557154980a0 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x555715498010 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x555715498168 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x555715498228 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x5557154982c8 <col:53> "" ""
|-CXXMethodDecl 0x555715498360 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x555715498400 <col:47> "" ""
|-AccessSpecDecl 0x555715498470 <line:303:3, col:10> col:3 private
|-FieldDecl 0x5557154984b0 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x555715498518 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x555715498568 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x555715498688 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x555715498718 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x555715498848 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x5557154988a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x555715498908 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x5557155c8ce8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x5557155c8dc0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5557155c8dc0
| | |-CXXConstructorDecl 0x5557155c9078 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5557155c9078
| | | `-ParmVarDecl 0x5557155c9188 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x5557155c9228 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5557155c9228
| |   `-ParmVarDecl 0x5557155c9338 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x5557154989c8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x555715498a28 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x5557154989c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x555715498848 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x555715498a80 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x5557154989c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5557154988a8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x555715498ad8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x5557154989c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x555715498908 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x555715498b30 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x5557155c8bf8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5557155c9558 <col:11>
| |-CXXConstructorDecl 0x5557155c8ec8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5557155c8ec8
| | `-ParmVarDecl 0x5557155c8fd8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x5557155c93d8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5557155c93d8
|   `-ParmVarDecl 0x5557155c94e8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x555715498bf8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x555715498c70 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x555715498cd8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x555715498d38 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x555715498d98 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x555715498de8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x555715498f08 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x555715498fa8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x555715499008 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x5557155c2108 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5557155c2108
| | `-ParmVarDecl 0x5557155c2218 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x5557155c22b8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5557155c22b8
| | `-ParmVarDecl 0x5557155c23c8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x5557155c2438 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5557155c2438
| |-CXXMethodDecl 0x5557155c2cb8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5557155c2cb8
| | `-ParmVarDecl 0x5557155c2dc8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x5557155c2e38 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5557155c2e38
| | `-ParmVarDecl 0x5557155c2f48 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x5557155c95b8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5557155c9690 <col:11>
|-FieldDecl 0x555715499080 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x5557154991c8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x555715499108 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x555715499378 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x555715499288 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x555715499440 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x555715499500 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x5557154995c0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55571549ac78 <col:41, line:355:5>
|   `-ReturnStmt 0x55571549ac68 <line:354:9, col:38>
|     `-BinaryOperator 0x55571549ac48 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55571549ac18 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55571549abc8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x555715499008
|       |   `-MemberExpr 0x55571549ab98 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x555715499080
|       |     `-CXXThisExpr 0x55571549ab88 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55571549ac30 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55571549abf8 <col:38> 'int' 0
|-CXXMethodDecl 0x555715499680 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x5557154997c0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x555715499730 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x555715499938 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x555715499878 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x555715499a80 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x5557154999f0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x555715499b48 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x555715499d10 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x555715499bf8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x555715499c78 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x555715499e10 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x555715499ea0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | ActiveNotifier::task_or_signal_t
         0 |   class Task * t
         0 |   Notifier::callback_type f
         0 |   void * v
         0 |   uintptr_t p
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557155d8258 <../dummy_inc/click/notifier.hh:151:13, line:156:5> line:151:13 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x5557155d8388 <line:152:2, col:8> col:8 referenced t 'Task *'
|-FieldDecl 0x5557155d83e8 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
|-FieldDecl 0x5557155d8450 <line:154:2, col:8> col:8 referenced v 'void *'
`-FieldDecl 0x5557155d84b0 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"union.ActiveNotifier::task_or_signal_t" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557155d7330 <../dummy_inc/click/notifier.hh:132:1, line:167:1> line:132:7 referenced class ActiveNotifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Notifier'
|-CXXRecordDecl 0x5557155d7488 <col:1, col:7> col:7 implicit referenced class ActiveNotifier
|-AccessSpecDecl 0x5557155d7518 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x5557155d7628 <line:134:5, col:45> col:5 ActiveNotifier 'void (Notifier::SearchOp)'
| `-ParmVarDecl 0x5557155d7550 <col:20, col:34> col:29 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x5557155d8e40 <col:34> 'Notifier::SearchOp' EnumConstant 0x5557155d2020 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x5557155d7720 <line:135:5, col:21> col:5 used ~ActiveNotifier 'void () noexcept'
| `-Overrides: [ 0x5557155d27a8 Notifier::~Notifier 'void () noexcept' ]
|-CXXMethodDecl 0x5557155d7930 <line:137:5, col:55> col:9 add_activate_callback 'int (Notifier::callback_type, void *)'
| |-Overrides: [ 0x5557155d40d0 Notifier::add_activate_callback 'int (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x5557155d7810 <col:31, col:45> col:45 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5557155d7890 <col:48, col:54> col:54 v 'void *'
|-CXXMethodDecl 0x5557155d7b08 <line:138:5, col:59> col:10 remove_activate_callback 'void (Notifier::callback_type, void *)'
| |-Overrides: [ 0x5557155d4328 Notifier::remove_activate_callback 'void (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x5557155d79f0 <col:35, col:49> col:49 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5557155d7a70 <col:52, col:58> col:58 v 'void *'
|-CXXMethodDecl 0x5557155d7dc8 <line:139:5, col:70> col:10 listeners 'void (Vector<Task *> &) const'
| |-ParmVarDecl 0x5557155d7ca0 <col:20, col:35> col:35 v 'Vector<Task *> &'
| `-DeprecatedAttr 0x5557155d7e70 <col:59> "" ""
|-CXXMethodDecl 0x5557155d8000 <line:141:5, col:61> col:17 used set_active 'void (bool, bool)' inline
| |-ParmVarDecl 0x5557155d7ef0 <col:28, col:33> col:33 active 'bool'
| `-ParmVarDecl 0x5557155d7f68 <col:41, col:57> col:46 schedule 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5557155d8e60 <col:57> 'bool' true
|-CXXMethodDecl 0x5557155d80d0 <line:142:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x5557155d8190 <line:143:5, col:23> col:17 sleep 'void ()' inline
|-AccessSpecDecl 0x5557155d8230 <line:149:3, col:10> col:3 private
|-CXXRecordDecl 0x5557155d8258 <line:151:13, line:156:5> line:151:13 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x5557155d8388 <line:152:2, col:8> col:8 referenced t 'Task *'
| |-FieldDecl 0x5557155d83e8 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| |-FieldDecl 0x5557155d8450 <line:154:2, col:8> col:8 referenced v 'void *'
| `-FieldDecl 0x5557155d84b0 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'
|-TypedefDecl 0x5557155d8578 <line:151:5, line:156:7> col:7 referenced task_or_signal_t 'union task_or_signal_t':'ActiveNotifier::task_or_signal_t'
| `-ElaboratedType 0x5557155d8520 'union task_or_signal_t' sugar
|   `-RecordType 0x5557155d82f0 'ActiveNotifier::task_or_signal_t'
|     `-CXXRecord 0x5557155d8258 ''
|-FieldDecl 0x5557155d85f8 <line:158:5, col:11> col:11 referenced _listener1 'Task *'
|-FieldDecl 0x5557155d86d8 <line:159:5, col:23> col:23 referenced _listeners 'ActiveNotifier::task_or_signal_t *'
|-CXXMethodDecl 0x5557155d8858 <line:161:5, col:46> col:9 listener_add 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x5557155d8738 <col:22, col:36> col:36 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5557155d87b8 <col:39, col:45> col:45 v 'void *'
|-CXXMethodDecl 0x5557155d8a38 <line:162:5, col:49> col:9 listener_remove 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x5557155d8918 <col:25, col:39> col:39 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x5557155d8998 <col:42, col:48> col:48 v 'void *'
|-CXXConstructorDecl 0x5557155d8be8 <line:164:5, col:41> col:5 ActiveNotifier 'void (const ActiveNotifier &)'
| `-ParmVarDecl 0x5557155d8b28 <col:20, col:40> col:41 'const ActiveNotifier &'
`-CXXMethodDecl 0x5557155d8d98 <line:165:5, col:52> col:21 operator= 'ActiveNotifier &(const ActiveNotifier &)'
  `-ParmVarDecl 0x5557155d8ca8 <col:31, col:51> col:52 'const ActiveNotifier &'

Layout: <CGRecordLayout
  LLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  NonVirtualBaseLLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555715608920 <../elements/standard/notifierqueue.hh:71:1, line:101:1> line:71:7 referenced class NotifierQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'SimpleQueue'
|-CXXRecordDecl 0x555715608a78 <col:1, col:7> col:7 implicit referenced class NotifierQueue
|-AccessSpecDecl 0x555715608b08 <col:44, col:50> col:44 public
|-CXXConstructorDecl 0x555715608b90 <line:73:5, col:19> col:5 used NotifierQueue 'void ()'
|-CXXMethodDecl 0x555715608c90 <line:75:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5557155f5af0 SimpleQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x55571560a100 <col:36, col:62>
|   `-ReturnStmt 0x55571560a0f0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55571560a0d8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55571560a0b0 <col:45> 'const char [14]' lvalue "NotifierQueue"
|-CXXMethodDecl 0x555715608de0 <line:76:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x5557155f5dd0 SimpleQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x555715608d48 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x5557156090c0 <line:78:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5557155f60b0 SimpleQueue::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x555715608f70 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x555715608fe8 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x555715609298 <line:80:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5557155f6b58 SimpleQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x555715609188 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x555715609200 <col:25, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x5557156093f0 <line:81:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x5557155f6cb0 SimpleQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x555715609360 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x555715609498 <line:87:3, col:12> col:3 protected
|-EnumDecl 0x5557156094c0 <line:89:5, col:35> col:5
| `-EnumConstantDecl 0x5557156095c0 <col:12, col:33> col:12 SLEEPINESS_TRIGGER 'NotifierQueue::(anonymous enum at ../elements/standard/notifierqueue.hh:89:5)'
|   `-ImplicitCastExpr 0x555715609610 <col:33> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557156095a0 <col:33> 'int' Int: 9
|       `-IntegerLiteral 0x555715609580 <col:33> 'int' 9
|-FieldDecl 0x555715609640 <line:90:5, col:9> col:9 _sleepiness 'int'
|-FieldDecl 0x5557156096a0 <line:91:5, col:20> col:20 _empty_note 'ActiveNotifier'
|-FriendDecl 0x555715609740 <line:93:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x5557156097d0 <line:94:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x555715609860 <line:95:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-FriendDecl 0x5557156098f0 <line:96:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-CXXConstructorDecl 0x555715609958 <line:71:7> col:7 implicit NotifierQueue 'void (const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x555715609958
| `-ParmVarDecl 0x555715609a68 <col:7> col:7 'const NotifierQueue &'
|-CXXConstructorDecl 0x555715609b08 <col:7> col:7 implicit NotifierQueue 'void (NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x555715609b08
| `-ParmVarDecl 0x555715609c18 <col:7> col:7 'NotifierQueue &&'
|-CXXMethodDecl 0x555715609cb8 <col:7> col:7 implicit operator= 'NotifierQueue &(const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x555715609cb8
| `-ParmVarDecl 0x555715609dc8 <col:7> col:7 'const NotifierQueue &'
|-CXXMethodDecl 0x555715609e38 <col:7> col:7 implicit operator= 'NotifierQueue &(NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x555715609e38
| `-ParmVarDecl 0x555715609f48 <col:7> col:7 'NotifierQueue &&'
`-CXXDestructorDecl 0x555715609fd0 <col:7> col:7 implicit used ~NotifierQueue 'void () noexcept' inline default
  |-Overrides: [ 0x5557155f7fc0 SimpleQueue::~SimpleQueue 'void () noexcept' ]
  `-CompoundStmt 0x555715667aa0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  NonVirtualBaseLLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class FrontDropQueue
         0 |   class NotifierQueue (primary base)
         0 |     class SimpleQueue (primary base)
         0 |       class Element (primary base)
         0 |         (Element vtable pointer)
         8 |         class Element::Port *[2] _ports
        24 |         class Element::Port [4] _inline_ports
        88 |         int [2] _nports
        96 |         class Router * _router
       104 |         int _eindex
       108 |       class Storage (base)
       108 |         Storage::index_type _capacity
       112 |         volatile Storage::index_type _head
       116 |         volatile Storage::index_type _tail
       120 |       class Packet *volatile * _q
       128 |       volatile int _drops
       132 |       int _highwater_length
       136 |     int _sleepiness
       144 |     class ActiveNotifier _empty_note
       144 |       class Notifier (primary base)
       144 |         (Notifier vtable pointer)
       152 |         class NotifierSignal _signal
       152 |           union NotifierSignal::vmvalue _v
       152 |             class atomic_uint32_t * v1
       152 |             struct NotifierSignal::vmpair * vm
       160 |           uint32_t _mask
       168 |         enum Notifier::SearchOp _search_op
       176 |       class Task * _listener1
       184 |       ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=192, dsize=192, align=8,
           |  nvsize=192, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55571560a118 <../elements/standard/frontdropqueue.hh:50:1, line:62:1> line:50:7 class FrontDropQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-public 'NotifierQueue'
|-CXXRecordDecl 0x55571560a278 <col:1, col:7> col:7 implicit referenced class FrontDropQueue
|-AccessSpecDecl 0x55571560a308 <col:47, col:53> col:47 public
|-CXXConstructorDecl 0x55571560a390 <line:52:3, col:18> col:3 FrontDropQueue 'void ()'
|-CXXMethodDecl 0x55571560a490 <line:54:3, col:61> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x555715608c90 NotifierQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x55571560b4f0 <col:34, col:61>
|   `-ReturnStmt 0x55571560b4e0 <col:36, col:43>
|     `-ImplicitCastExpr 0x55571560b4c8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55571560b4a0 <col:43> 'const char [15]' lvalue "FrontDropQueue"
|-CXXMethodDecl 0x55571560a5e0 <line:55:3, col:26> col:9 cast 'void *(const char *)'
| |-Overrides: [ 0x555715608de0 NotifierQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55571560a548 <col:14, col:25> col:26 'const char *'
|-CXXMethodDecl 0x55571560a8c0 <line:57:3, col:56> col:7 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5557155f66f0 SimpleQueue::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55571560a770 <col:24, col:39> col:40 'Vector<String> &'
| `-ParmVarDecl 0x55571560a7e8 <col:42, col:55> col:56 'ErrorHandler *'
|-CXXMethodDecl 0x55571560aa90 <line:58:3, col:44> col:8 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x5557155f68c0 SimpleQueue::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x55571560a980 <col:19, col:27> col:28 'Element *'
| `-ParmVarDecl 0x55571560a9f8 <col:30, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55571560ac68 <line:60:3, col:31> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x555715609298 NotifierQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55571560ab58 <col:13, col:17> col:17 port 'int'
| `-ParmVarDecl 0x55571560abd0 <col:23, col:30> col:31 'Packet *'
|-CXXConstructorDecl 0x55571560ad48 <line:50:7> col:7 implicit FrontDropQueue 'void (const FrontDropQueue &)' inline default_delete noexcept-unevaluated 0x55571560ad48
| `-ParmVarDecl 0x55571560ae58 <col:7> col:7 'const FrontDropQueue &'
|-CXXConstructorDecl 0x55571560aef8 <col:7> col:7 implicit FrontDropQueue 'void (FrontDropQueue &&)' inline default_delete noexcept-unevaluated 0x55571560aef8
| `-ParmVarDecl 0x55571560b008 <col:7> col:7 'FrontDropQueue &&'
|-CXXMethodDecl 0x55571560b0a8 <col:7> col:7 implicit operator= 'FrontDropQueue &(const FrontDropQueue &)' inline default_delete noexcept-unevaluated 0x55571560b0a8
| `-ParmVarDecl 0x55571560b1b8 <col:7> col:7 'const FrontDropQueue &'
|-CXXMethodDecl 0x55571560b228 <col:7> col:7 implicit operator= 'FrontDropQueue &(FrontDropQueue &&)' inline default_delete noexcept-unevaluated 0x55571560b228
| `-ParmVarDecl 0x55571560b338 <col:7> col:7 'FrontDropQueue &&'
`-CXXDestructorDecl 0x55571560b3c0 <col:7> col:7 implicit ~FrontDropQueue 'void ()' inline default noexcept-unevaluated 0x55571560b3c0
  `-Overrides: [ 0x555715609fd0 NotifierQueue::~NotifierQueue 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.FrontDropQueue = type { %class.NotifierQueue }
  NonVirtualBaseLLVMType:%class.FrontDropQueue = type { %class.NotifierQueue }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557152eb5d0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5557152eb6e8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5557152eb788 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5557152eb7e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5557152eb848 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5557152eb8f8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557152ebc00 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5557152ebd18 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5557152ebdc0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5557152ebe28 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5557152ebeb8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5557152f1f50 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5557152f2388 <col:12>
|-CXXConstructorDecl 0x5557152f2058 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5557152f2168 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5557152ebdc0 'data' 'const char *'
| | `-ImplicitCastExpr 0x5557152f4910 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5557152f48e0 <col:12> 'const char *const' lvalue .data 0x5557152ebdc0
| |     `-DeclRefExpr 0x5557152f48c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5557152f2168 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5557152ebe28 'length' 'int'
| | `-ImplicitCastExpr 0x5557152f49a0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5557152f4970 <col:12> 'const int' lvalue .length 0x5557152ebe28
| |     `-DeclRefExpr 0x5557152f4950 <col:12> 'const String::rep_t' lvalue ParmVar 0x5557152f2168 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5557152ebeb8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5557152f4a30 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5557152f4a00 <col:12> 'String::memo_t *const' lvalue .memo 0x5557152ebeb8
| |     `-DeclRefExpr 0x5557152f49e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5557152f2168 '' 'const String::rep_t &'
| `-CompoundStmt 0x5557152f4a88 <col:12>
|-CXXConstructorDecl 0x5557152f2208 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5557152f2208
| `-ParmVarDecl 0x5557152f2318 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5557152f7870 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x555715303288 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x555715303398 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5557153038b0 <col:12>
|   |-BinaryOperator 0x5557153036c8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x555715303680 <col:12> 'const char *' lvalue ->data 0x5557152ebdc0
|   | | `-CXXThisExpr 0x555715303670 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5557153036b0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x555715303640 <col:12> 'const char *const' lvalue .data 0x5557152ebdc0
|   |     `-DeclRefExpr 0x555715303620 <col:12> 'const String::rep_t' lvalue ParmVar 0x555715303398 '' 'const String::rep_t &'
|   |-BinaryOperator 0x555715303790 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x555715303748 <col:12> 'int' lvalue ->length 0x5557152ebe28
|   | | `-CXXThisExpr 0x555715303738 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x555715303778 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x555715303708 <col:12> 'const int' lvalue .length 0x5557152ebe28
|   |     `-DeclRefExpr 0x5557153036e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x555715303398 '' 'const String::rep_t &'
|   |-BinaryOperator 0x555715303858 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x555715303810 <col:12> 'String::memo_t *' lvalue ->memo 0x5557152ebeb8
|   | | `-CXXThisExpr 0x555715303800 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x555715303840 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5557153037d0 <col:12> 'String::memo_t *const' lvalue .memo 0x5557152ebeb8
|   |     `-DeclRefExpr 0x5557153037b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x555715303398 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5557153038a0 <col:12>
|     `-UnaryOperator 0x555715303888 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x555715303878 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x555715303408 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x555715303408
  `-ParmVarDecl 0x555715303518 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5557152e2b40 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5557152e2c58 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5557152e2ce8 <col:16, col:22> col:16 public
|-TypedefDecl 0x5557152e2d28 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x555714fb3e00 'const char *'
|   `-QualType 0x555714fb3351 'const char' const
|     `-BuiltinType 0x555714fb3350 'char'
|-TypedefDecl 0x5557152e2db0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5557152e2d80 'String::const_iterator' sugar
|   |-Typedef 0x5557152e2d28 'const_iterator'
|   `-PointerType 0x555714fb3e00 'const char *'
|     `-QualType 0x555714fb3351 'const char' const
|       `-BuiltinType 0x555714fb3350 'char'
|-TypedefDecl 0x5557152e2f20 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5557152e2e90 'int (String::*)() const'
|   |-RecordType 0x5557152e2bd0 'String'
|   | `-CXXRecord 0x5557152e2b40 'String'
|   `-ParenType 0x5557152e2e30 'int () const' sugar
|     `-FunctionProtoType 0x5557152b69c0 'int () const' const cdecl
|       `-BuiltinType 0x555714fb33b0 'int'
|-TypedefDecl 0x5557152e2f88 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55571510b380 'int64_t' sugar
|   |-Typedef 0x55571501c2a0 'int64_t'
|   `-TypedefType 0x555714ff5510 '__int64_t' sugar
|     |-Typedef 0x555714ff50e8 '__int64_t'
|     `-BuiltinType 0x555714fb33d0 'long'
|-TypedefDecl 0x5557152e2ff0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55571510b2a0 'uint64_t' sugar
|   |-Typedef 0x55571501c440 'uint64_t'
|   `-TypedefType 0x555714ff55a0 '__uint64_t' sugar
|     |-Typedef 0x555714ff5158 '__uint64_t'
|     `-BuiltinType 0x555714fb3470 'unsigned long'
|-TypedefDecl 0x5557152e3080 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5557152e3050 'String::intmax_t' sugar
|   |-Typedef 0x5557152e2f88 'intmax_t'
|   `-TypedefType 0x55571510b380 'int64_t' sugar
|     |-Typedef 0x55571501c2a0 'int64_t'
|     `-TypedefType 0x555714ff5510 '__int64_t' sugar
|       |-Typedef 0x555714ff50e8 '__int64_t'
|       `-BuiltinType 0x555714fb33d0 'long'
|-TypedefDecl 0x5557152e3110 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5557152e30e0 'String::uintmax_t' sugar
|   |-Typedef 0x5557152e2ff0 'uintmax_t'
|   `-TypedefType 0x55571510b2a0 'uint64_t' sugar
|     |-Typedef 0x55571501c440 'uint64_t'
|     `-TypedefType 0x555714ff55a0 '__uint64_t' sugar
|       |-Typedef 0x555714ff5158 '__uint64_t'
|       `-BuiltinType 0x555714fb3470 'unsigned long'
|-CXXConstructorDecl 0x5557152e31d0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5557152e3378 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5557152e32b8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5557152e3528 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5557152e3468 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5557152e3680 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5557152e35f0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5557152e3898 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5557152e3748 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5557152e37c8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5557152e3ab8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5557152e3968 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5557152e39e8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5557152e3cd8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5557152e3b88 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5557152e3c08 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5557152e3ef8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5557152e3da8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5557152e3e28 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5557152e4088 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x5557152e3fc0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5557152e4208 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5557152e4148 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5557152e4398 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5557152e42d0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5557152e44f0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5557152e4460 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5557152e4648 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5557152e45b8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5557152e47a0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5557152e4710 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5557152e4928 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5557152e4868 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5557152e4ab8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5557152e49f0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5557152e4c48 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5557152e4b80 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5557152e4dd8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5557152e4d10 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5557152e4ed0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5557152e4ff8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5557152e5178 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5557152e50b0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5557152e52c8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5557152e5238 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5557152e5380 <col:63> "" ""
|-CXXMethodDecl 0x5557152e54c8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5557152e5408 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5557152e56d8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5557152e5588 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5557152e5608 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5557152e58f8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5557152e57a0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5557152e5820 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5557152e5bd8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5557152e59b8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5557152e5a38 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5557152f1a20 <col:55> 'int' 10
| `-ParmVarDecl 0x5557152e5ab0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5557152f1a40 <col:76> 'bool' true
|-CXXMethodDecl 0x5557152e5eb8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5557152e5ca0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5557152e5d20 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5557152f1a50 <col:56> 'int' 10
| `-ParmVarDecl 0x5557152e5d98 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5557152f1a70 <col:77> 'bool' true
|-CXXMethodDecl 0x5557152e5fc0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5557152e6088 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5557152e6150 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5557152e61f0 <col:20>
| `-OptimizeNoneAttr 0x5557152e6248 <col:30>
|-CXXConversionDecl 0x5557152e6338 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5557152e6408 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5557152e64c8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5557152e65b8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5557152e6678 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5557152e67f8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5557152e6730 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5557152e6948 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5557152e68b8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5557152e6a38 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5557152e6af8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5557152e6d48 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5557152e6bb0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5557152e6c30 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5557152e6fa8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5557152e6e10 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5557152e6e90 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5557152e7078 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5557152e7288 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5557152e7130 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5557152e71b0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5557152e74a8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5557152e7350 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5557152e73d0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5557152e7638 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5557152e7570 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5557152e7728 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5557152e7898 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5557152e77d8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5557152e7aa8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5557152e7958 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5557152e79d8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5557152e7cc0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5557152e7b68 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5557152e7be0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5557152e7e50 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5557152e7d80 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5557152e8070 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5557152e7f10 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5557152e7f90 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5557152e81c0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5557152e8130 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5557152e8398 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5557152e8280 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5557152e8300 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5557152e84e8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5557152e8458 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5557152e8700 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5557152e85a0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5557152e8620 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5557152f1a80 <col:39> 'int' 0
|-CXXMethodDecl 0x5557152e8920 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5557152e87c0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5557152e8840 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5557152f1aa0 <col:48> 'int' 0
|-CXXMethodDecl 0x5557152e8b00 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5557152e89e0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5557152e8a60 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5557152f1ac0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5557152e8bd0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5557152e8c90 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5557152e8d50 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5557152e8e10 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5557152e8ed0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5557152e9078 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5557152e8f80 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5557152e91f8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5557152e9130 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5557152e93d0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5557152e92b8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5557152e9548 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5557152e9488 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5557152e9690 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5557152e9600 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5557152e97e0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5557152e9750 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5557152e99b8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5557152e98a0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5557152e9920 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5557152e9b98 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5557152e9a80 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5557152e9b00 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5557152e9ce8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5557152e9c58 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5557152e9ef8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5557152e9da8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5557152e9e28 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5557152ea058 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5557152e9fc0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5557152ea1b0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5557152ea118 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5557152ea258 <col:57> "" ""
|-CXXMethodDecl 0x5557152ea368 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5557152ea2d8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5557152ea4b8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5557152ea428 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5557152ea638 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5557152ea570 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5557152ea700 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5557152ea7c0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5557152ea880 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5557152ea920 <col:49> "" ""
|-CXXMethodDecl 0x5557152ea9b0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5557152eaa70 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5557152eab60 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5557152eac28 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5557152eace8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5557152eada8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5557152eaea0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5557152eaf68 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5557152eb030 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5557152eb208 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5557152eb0e8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5557152eb168 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5557152eb430 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5557152eb2d0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5557152eb350 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5557152eb540 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5557152eb5a8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5557152eb5d0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5557152eb6e8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5557152eb788 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5557152eb7e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5557152eb848 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5557152eb8f8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5557152eb960 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5557152ebb98 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5557152ebbe8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557152ebb78 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5557152eba88 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5557152eba30 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5557152eba70 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5557152eba50 <col:32> 'int' 8
|-CXXRecordDecl 0x5557152ebc00 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5557152ebd18 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5557152ebdc0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5557152ebe28 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5557152ebeb8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5557152f1f50 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5557152f2388 <col:12>
| |-CXXConstructorDecl 0x5557152f2058 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5557152f2168 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5557152ebdc0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5557152f4910 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5557152f48e0 <col:12> 'const char *const' lvalue .data 0x5557152ebdc0
| | |     `-DeclRefExpr 0x5557152f48c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5557152f2168 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5557152ebe28 'length' 'int'
| | | `-ImplicitCastExpr 0x5557152f49a0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5557152f4970 <col:12> 'const int' lvalue .length 0x5557152ebe28
| | |     `-DeclRefExpr 0x5557152f4950 <col:12> 'const String::rep_t' lvalue ParmVar 0x5557152f2168 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5557152ebeb8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5557152f4a30 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5557152f4a00 <col:12> 'String::memo_t *const' lvalue .memo 0x5557152ebeb8
| | |     `-DeclRefExpr 0x5557152f49e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5557152f2168 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5557152f4a88 <col:12>
| |-CXXConstructorDecl 0x5557152f2208 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5557152f2208
| | `-ParmVarDecl 0x5557152f2318 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5557152f7870 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x555715303288 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x555715303398 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5557153038b0 <col:12>
| |   |-BinaryOperator 0x5557153036c8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x555715303680 <col:12> 'const char *' lvalue ->data 0x5557152ebdc0
| |   | | `-CXXThisExpr 0x555715303670 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5557153036b0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x555715303640 <col:12> 'const char *const' lvalue .data 0x5557152ebdc0
| |   |     `-DeclRefExpr 0x555715303620 <col:12> 'const String::rep_t' lvalue ParmVar 0x555715303398 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x555715303790 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x555715303748 <col:12> 'int' lvalue ->length 0x5557152ebe28
| |   | | `-CXXThisExpr 0x555715303738 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x555715303778 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x555715303708 <col:12> 'const int' lvalue .length 0x5557152ebe28
| |   |     `-DeclRefExpr 0x5557153036e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x555715303398 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x555715303858 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x555715303810 <col:12> 'String::memo_t *' lvalue ->memo 0x5557152ebeb8
| |   | | `-CXXThisExpr 0x555715303800 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x555715303840 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5557153037d0 <col:12> 'String::memo_t *const' lvalue .memo 0x5557152ebeb8
| |   |     `-DeclRefExpr 0x5557153037b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x555715303398 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5557153038a0 <col:12>
| |     `-UnaryOperator 0x555715303888 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x555715303878 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x555715303408 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x555715303408
|   `-ParmVarDecl 0x555715303518 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5557152ebf30 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5557152ec178 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5557152ebf98 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5557152ec018 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5557152ec090 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5557152f1f10 <col:79, line:261:5>
|   |-BinaryOperator 0x5557152f1b88 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5557152f1b20 <col:2, col:5> 'const char *' lvalue .data 0x5557152ebdc0
|   | | `-MemberExpr 0x5557152f1af0 <col:2> 'String::rep_t' lvalue ->_r 0x5557152ebf30
|   | |   `-CXXThisExpr 0x5557152f1ae0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5557152f1b70 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557152f1b50 <col:12> 'const char *' lvalue ParmVar 0x5557152ebf98 'data' 'const char *'
|   |-BinaryOperator 0x5557152f1c50 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5557152f1be8 <col:2, col:5> 'int' lvalue .length 0x5557152ebe28
|   | | `-MemberExpr 0x5557152f1bb8 <col:2> 'String::rep_t' lvalue ->_r 0x5557152ebf30
|   | |   `-CXXThisExpr 0x5557152f1ba8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5557152f1c38 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5557152f1c18 <col:14> 'int' lvalue ParmVar 0x5557152ec018 'length' 'int'
|   `-IfStmt 0x5557152f1ef8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5557152f1d70 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5557152f1d58 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5557152f1d38 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5557152f1d18 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5557152f1cb0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5557152ebeb8
|     |       | `-MemberExpr 0x5557152f1c80 <col:7> 'String::rep_t' lvalue ->_r 0x5557152ebf30
|     |       |   `-CXXThisExpr 0x5557152f1c70 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5557152f1d00 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5557152f1ce0 <col:17> 'String::memo_t *' lvalue ParmVar 0x5557152ec090 'memo' 'String::memo_t *'
|     `-CallExpr 0x5557152f1ed0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5557152f1eb8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5557152f1dc0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5557152daba8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5557152f1e28 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5557152eb788
|         `-ImplicitCastExpr 0x5557152f1e10 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5557152f1df0 <col:27> 'String::memo_t *' lvalue ParmVar 0x5557152ec090 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5557152ec428 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5557152ec248 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5557152ec2c8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5557152ec340 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5557152ebf30 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5557152f2398 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5557152f2528 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5557152f2490 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5557152f2400 <col:2> '<bound member function type>' ->assign_memo 0x5557152ec178
|     | `-ImplicitCastExpr 0x5557152f24c8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5557152f23f0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5557152f24e0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5557152f2430 <col:14> 'const char *' lvalue ParmVar 0x5557152ec248 'data' 'const char *'
|     |-ImplicitCastExpr 0x5557152f24f8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5557152f2450 <col:20> 'int' lvalue ParmVar 0x5557152ec2c8 'length' 'int'
|     `-ImplicitCastExpr 0x5557152f2510 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5557152f2470 <col:28> 'String::memo_t *' lvalue ParmVar 0x5557152ec340 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5557152ec5b8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5557152ec4f8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5557152f2780 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5557152f2700 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5557152f2550 <col:2> '<bound member function type>' ->assign_memo 0x5557152ec178
|     | `-CXXThisExpr 0x5557152f2540 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5557152f2738 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5557152f25d0 <col:14, col:19> 'const char *' lvalue .data 0x5557152ebdc0
|     |   `-MemberExpr 0x5557152f25a0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5557152ebf30
|     |     `-DeclRefExpr 0x5557152f2580 <col:14> 'const String' lvalue ParmVar 0x5557152ec4f8 'x' 'const String &'
|     |-ImplicitCastExpr 0x5557152f2750 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5557152f2650 <col:25, col:30> 'int' lvalue .length 0x5557152ebe28
|     |   `-MemberExpr 0x5557152f2620 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5557152ebf30
|     |     `-DeclRefExpr 0x5557152f2600 <col:25> 'const String' lvalue ParmVar 0x5557152ec4f8 'x' 'const String &'
|     `-ImplicitCastExpr 0x5557152f2768 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5557152f26d0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5557152ebeb8
|         `-MemberExpr 0x5557152f26a0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5557152ebf30
|           `-DeclRefExpr 0x5557152f2680 <col:38> 'const String' lvalue ParmVar 0x5557152ec4f8 'x' 'const String &'
|-CXXMethodDecl 0x5557152ec680 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5557152f3140 <col:31, line:278:5>
|   `-IfStmt 0x5557152f3128 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5557152f2820 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5557152f2808 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5557152f27d8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5557152ebeb8
|     |     `-MemberExpr 0x5557152f27a8 <col:6> 'String::rep_t' lvalue ->_r 0x5557152ebf30
|     |       `-CXXThisExpr 0x5557152f2798 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5557152f3100 <col:15, line:277:2>
|       |-ParenExpr 0x5557152f2cd0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5557152f2ca0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5557152f2930 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5557152f2918 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5557152f2900 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5557152f28c0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5557152eb788
|       |   |       `-ImplicitCastExpr 0x5557152f28a8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5557152f2878 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5557152ebeb8
|       |   |           `-MemberExpr 0x5557152f2848 <col:27> 'String::rep_t' lvalue ->_r 0x5557152ebf30
|       |   |             `-CXXThisExpr 0x5557152f2838 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5557152f2990 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5557152f2970 <col:54> 'int' 0
|       |   `-CallExpr 0x5557152f2c00 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5557152f2be8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5557152f2b68 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555715051bf0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5557152f2c40 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5557152f2a78 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5557152f2c58 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5557152f2aa8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5557152f2c70 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5557152f2ae0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5557152f2c88 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5557152f2b50 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5557152f2b38 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5557152f2b00 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5557152f3020 <line:274:6, line:275:22>
|       | |-CallExpr 0x5557152f2ee0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5557152f2ec8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5557152f2e40 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5557152dbff0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5557152f2e10 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5557152eb788
|       | |   `-ImplicitCastExpr 0x5557152f2df8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5557152f2dc8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5557152ebeb8
|       | |       `-MemberExpr 0x5557152f2d98 <col:40> 'String::rep_t' lvalue ->_r 0x5557152ebf30
|       | |         `-CXXThisExpr 0x5557152f2d88 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5557152f2fe0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5557152f2fc8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5557152f2f08 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5557152f0e60 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5557152f3008 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5557152f2f68 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5557152ebeb8
|       |       `-MemberExpr 0x5557152f2f38 <col:15> 'String::rep_t' lvalue ->_r 0x5557152ebf30
|       |         `-CXXThisExpr 0x5557152f2f28 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5557152f30e0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5557152f3078 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5557152ebeb8
|         | `-MemberExpr 0x5557152f3048 <col:6> 'String::rep_t' lvalue ->_r 0x5557152ebf30
|         |   `-CXXThisExpr 0x5557152f3038 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5557152f30c8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5557152f30a8 <col:16> 'int' 0
|-CXXMethodDecl 0x5557152ec918 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5557152ec738 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5557152ec7b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5557152ec830 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5557152ec9f0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5557152ecc40 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5557152ecaa8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5557152ecb28 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5557152ecba0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5557152ece28 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5557152ecd10 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5557152ecd90 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5557152ecf28 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5557152f3218 <col:41, line:286:5>
|   `-ReturnStmt 0x5557152f3208 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5557152f31d8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5557152f31a0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5557152f3188 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5557152f3168 <col:46> 'int' 1
|-CXXMethodDecl 0x5557152ed1c8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5557152ecfe0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5557152ed060 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5557152ed0e0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5557152f0e60 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5557152ed290 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5557152f0f30 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5557152f1100 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5557152f0fe8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5557152f1068 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5557152f11c0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5557152f1288 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5557152f1388 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5557152f1400 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5557152f1478 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5557152f14e0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5557152f15e0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5557152f1630 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5557152f15c0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5557152f15a0 <col:22> 'int' 14
|-CXXMethodDecl 0x5557152f1848 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5557152f1660 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5557152f16e0 <col:38> col:41 'int'
| `-ParmVarDecl 0x5557152f1760 <col:43> col:46 'int'
|-FriendDecl 0x5557152f1950 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5557152f19e0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x555715629390 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x555715629568 prev 0x555715629390 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5557156295f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x555715629620 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555714fb33b0 'int'
|-TypedefDecl 0x55571562c7e0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55571562c790 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55571562c770 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x555715629838 'type'
|     `-SubstTemplateTypeParmType 0x555715629800 'String' sugar
|       |-TemplateTypeParmType 0x5557152a63e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152a6390 'T'
|       `-RecordType 0x5557152e2bd0 'String'
|         `-CXXRecord 0x5557152e2b40 'String'
|-TypedefDecl 0x55571562c898 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55571562c860 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55571562c840 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55571562c7e0 'type'
|     `-ElaboratedType 0x55571562c790 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55571562c770 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x555715629838 'type'
|         `-SubstTemplateTypeParmType 0x555715629800 'String' sugar
|           |-TemplateTypeParmType 0x5557152a63e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5557152a6390 'T'
|           `-RecordType 0x5557152e2bd0 'String'
|             `-CXXRecord 0x5557152e2b40 'String'
|-CXXMethodDecl 0x55571562ca18 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55571562c928 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55571562cb08 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55571562cbe8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55571562cbe8
|-CXXMethodDecl 0x55571562ceb8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55571562cdc0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55571562d0f8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55571562cf70 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55571562cfe8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55571562d2c8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55571562d1b8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55571562d230 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55571562d428 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55571562d4f8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55571562d748 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55571562d5b8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55571562d630 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55571562d9a8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55571562d818 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55571562d890 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55571562db68 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55571562da78 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55571562dd28 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55571562dc30 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55571562dde0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55571562de90 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55571562e0c8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55571562df40 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55571562dfb8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55571562e368 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55571562e270 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55571562e430 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55571562e480 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55571562e4d0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.8 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.8 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55571551a370 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x555715628138 prev 0x55571551a370 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x555715629300 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x5557156292b0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x555715629290 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x555715629140 'type'
|     `-SubstTemplateTypeParmType 0x555715628fd0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55571527bf70 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55571527bf18 'F'
|       `-RecordType 0x555715628c30 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x555715628b50 'typed_array_memory'
|-FieldDecl 0x55571562e520 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55571562e570 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55571562e5a8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x5557156281d0 'String' sugar
|   |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5557152b36a8 'T'
|   `-RecordType 0x5557152e2bd0 'String'
|     `-CXXRecord 0x5557152e2b40 'String'
|-TypedefDecl 0x55571562e638 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55571562e600 'String &'
|   `-SubstTemplateTypeParmType 0x5557156281d0 'String' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-RecordType 0x5557152e2bd0 'String'
|       `-CXXRecord 0x5557152e2b40 'String'
|-TypedefDecl 0x55571562e6c8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55571562e690 'const String &'
|   `-QualType 0x5557156281d1 'const String' const
|     `-SubstTemplateTypeParmType 0x5557156281d0 'String' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x5557152e2bd0 'String'
|         `-CXXRecord 0x5557152e2b40 'String'
|-TypedefDecl 0x55571562e758 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55571562e720 'String *'
|   `-SubstTemplateTypeParmType 0x5557156281d0 'String' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-RecordType 0x5557152e2bd0 'String'
|       `-CXXRecord 0x5557152e2b40 'String'
|-TypedefDecl 0x55571562e7e8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55571562e7b0 'const String *'
|   `-QualType 0x5557156281d1 'const String' const
|     `-SubstTemplateTypeParmType 0x5557156281d0 'String' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x5557152e2bd0 'String'
|         `-CXXRecord 0x5557152e2b40 'String'
|-TypedefDecl 0x55571562f440 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55571562f3f0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55571562f3d0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55571562f308 'type'
|     `-LValueReferenceType 0x55571562f2d0 'const String &'
|       `-QualType 0x55571562f071 'const String' const
|         `-SubstTemplateTypeParmType 0x55571562f070 'String' sugar
|           |-TemplateTypeParmType 0x555715285ec0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x555715285e68 'T'
|           `-RecordType 0x5557152e2bd0 'String'
|             `-CXXRecord 0x5557152e2b40 'String'
|-TypedefDecl 0x55571562f4a8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55571562e690 'const String &'
|   `-QualType 0x5557156281d1 'const String' const
|     `-SubstTemplateTypeParmType 0x5557156281d0 'String' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x5557152e2bd0 'String'
|         `-CXXRecord 0x5557152e2b40 'String'
|-TypedefDecl 0x55571562f500 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x555714fb33b0 'int'
|-TypedefDecl 0x55571562f568 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55571562e720 'String *'
|   `-SubstTemplateTypeParmType 0x5557156281d0 'String' sugar
|     |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5557152b36a8 'T'
|     `-RecordType 0x5557152e2bd0 'String'
|       `-CXXRecord 0x5557152e2b40 'String'
|-TypedefDecl 0x55571562f5d0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55571562e7b0 'const String *'
|   `-QualType 0x5557156281d1 'const String' const
|     `-SubstTemplateTypeParmType 0x5557156281d0 'String' sugar
|       |-TemplateTypeParmType 0x5557152b3700 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5557152b36a8 'T'
|       `-RecordType 0x5557152e2bd0 'String'
|         `-CXXRecord 0x5557152e2b40 'String'
|-EnumDecl 0x55571562f628 <line:134:5> col:5
| `-EnumConstantDecl 0x55571562f720 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55571562f700 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5557152b4d88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5557152b4d60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5557152b4d40 <col:40> 'int' 1
|-CXXConstructorDecl 0x55571562f7a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55571562fa38 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55571562f860 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55571562f900 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55571562fcc8 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55571562fbb0 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55571562ff88 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55571562fe70 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x5557156302a0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x555715630180 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x5557156305b0 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x555715630490 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x5557156308a0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5557156306e8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x555715630760 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5557156309c8 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x555715630a78 <col:20> Inherited
| `-OptimizeNoneAttr 0x555715630ad0 <col:30> Inherited
|-CXXMethodDecl 0x555715630b18 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x555715630bc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x555715630c20 <col:30> Inherited
|-CXXMethodDecl 0x555715630ce8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x555715630d98 <col:20> Inherited
| `-OptimizeNoneAttr 0x555715630df0 <col:30> Inherited
|-CXXMethodDecl 0x555715630e38 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x555715630ee8 <col:20> Inherited
| `-OptimizeNoneAttr 0x555715630f40 <col:30> Inherited
|-CXXMethodDecl 0x555715630f88 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x555715631038 <col:20> Inherited
| `-OptimizeNoneAttr 0x555715631090 <col:30> Inherited
|-CXXMethodDecl 0x5557156310d8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x555715631188 <col:20> Inherited
| `-OptimizeNoneAttr 0x5557156311e0 <col:30> Inherited
|-CXXMethodDecl 0x555715631208 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5557156312b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x555715631368 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x555715631528 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x555715631418 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x555715631490 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x555715631678 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5557156315e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x555715631828 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x555715631730 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5557156318e0 <col:20>
| `-OptimizeNoneAttr 0x555715631938 <col:30>
|-CXXMethodDecl 0x555715631a58 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x555715631960 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x555715631b10 <col:20>
| `-OptimizeNoneAttr 0x555715631b68 <col:30>
|-CXXMethodDecl 0x555715631c20 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x555715631b90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555715631d68 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x555715631cd8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555715631e98 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x555715631f98 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x555715632068 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x555715632138 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x555715632278 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5557156321e8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5557156323c0 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x555715632330 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x555715632508 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x555715632478 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5557156325c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5557156326c0 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x555715632630 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x555715632778 <col:60> Inherited "" ""
|-CXXMethodDecl 0x555715632838 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x555715632938 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x555715632ab8 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5557156329f8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x555715633248 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x555715632b70 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x5557156331a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x5557156330a8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x555715633328 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x555715633478 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5557156333e8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x555715633530 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x555715633778 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5557156335f0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x555715633668 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x555715633908 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x555715633848 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x555715633b18 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x5557156339d0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x555715633a48 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x555715633bd8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x555715633e38 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x555715633d40 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x555715633f08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x555715633f08

Layout: <CGRecordLayout
  LLVMType:%class.Vector.7 = type { %class.vector_memory.8 }
  NonVirtualBaseLLVMType:%class.Vector.7 = type { %class.vector_memory.8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555715640658 prev 0x55571560b628 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x555715640750 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x5557156407e0 <col:22, col:28> col:22 public
|-EnumDecl 0x555715640808 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x555715640928 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x555715640908 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x5557156408f0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5557156408d0 <col:14> 'int' 999
| |-EnumConstantDecl 0x5557156409d0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x5557156409b0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x555715640998 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x555715640978 <col:14> 'int' 1
| |-EnumConstantDecl 0x555715640a60 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x555715640a40 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x555715640a20 <col:17> 'int' 0
| |-EnumConstantDecl 0x555715640af0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x555715640ad0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x555715640ab0 <col:13> 'int' 1
| |-EnumConstantDecl 0x555715640b80 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x555715640b60 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x555715640b40 <col:16> 'int' 2
| |-EnumConstantDecl 0x555715640c10 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x555715640bf0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x555715640bd0 <col:13> 'int' 3
| |-EnumConstantDecl 0x555715640ca0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x555715640c80 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x555715640c60 <col:15> 'int' 4
| |-EnumConstantDecl 0x555715640d30 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x555715640d10 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x555715640cf0 <col:14> 'int' 5
| |-EnumConstantDecl 0x555715640dc0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x555715640da0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x555715640d80 <col:12> 'int' 6
| `-EnumConstantDecl 0x555715640e50 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x555715640e30 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x555715640e10 <col:13> 'int' 7
|-VarDecl 0x555715640ec0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x555715640f48 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x555715640fd0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x555715641058 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x5557156410e0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x555715641168 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x5557156411f0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x555715641278 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x555715641300 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x555715641388 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x555715641410 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x555715641510 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55571564a458 '_nerrors' 'int'
| | `-IntegerLiteral 0x55571564abe8 <line:128:13> 'int' 0
| `-CompoundStmt 0x55571564ac58 <col:16, line:129:5>
|-CXXDestructorDecl 0x555715641600 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55571564ac68 <col:29, line:132:5>
|-CXXMethodDecl 0x5557156417b8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x5557156416f0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x555715641880 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x555715641968 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55571564acc0 <col:44, line:161:5>
|   `-ReturnStmt 0x55571564acb0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55571564ac98 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55571564ac78 <col:9> 'ErrorHandler *' lvalue Var 0x55571564a4b8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x555715641ad8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x555715641a18 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x555715641ba0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55571564ad20 <col:43, line:173:5>
|   `-ReturnStmt 0x55571564ad10 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55571564acf8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55571564acd8 <col:9> 'ErrorHandler *' lvalue Var 0x55571564a530 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x555715641c58 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x555715641cd8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x555715641de8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x555715641d58 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x555715641f38 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x555715641ea8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x555715642090 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x555715641ff8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x5557156421e8 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x555715642150 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x555715642340 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x5557156422a8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x555715642550 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5557156423f8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x555715642478 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x555715642728 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x555715642610 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x555715642690 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x555715642948 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5557156427e8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x555715642868 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x555715642b28 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x555715642a08 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x555715642a88 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x555715642d08 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x555715642be8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x555715642c68 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x555715642e90 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x555715642dc8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x555715643060 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x555715642f48 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x555715642fc0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55571564af78 <col:57, line:234:5>
|   `-ReturnStmt 0x55571564af68 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55571564af50 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55571564aef8 <col:9, col:41> 'int'
|         |-MemberExpr 0x55571564aec8 <col:9> '<bound member function type>' ->xmessage 0x555715642e90
|         | `-CXXThisExpr 0x55571564aeb8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55571564af38 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55571564af20 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55571564ae98 <col:18, col:40> 'String' (CXXTemporary 0x55571564ae98)
|               `-CallExpr 0x55571564ae60 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55571564ae48 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55571564adc0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5557156450b8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55571564ade0 <col:31> 'const String' lvalue ParmVar 0x555715642fc0 'str' 'const String &'
|                 `-DeclRefExpr 0x55571564ae00 <col:36> 'const String' lvalue ParmVar 0x555715642f48 'anno' 'const String &'
|-CXXMethodDecl 0x5557156433a0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x555715643120 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5557156431a0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x555715643270 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55571564b208 <col:68, line:243:5>
|   `-ReturnStmt 0x55571564b1f8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55571564b1e0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55571564b180 <col:9, col:41> 'int'
|         |-MemberExpr 0x55571564b150 <col:9> '<bound member function type>' ->xmessage 0x555715643060
|         | `-CXXThisExpr 0x55571564b140 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55571564b018 <col:18> 'const String' lvalue ParmVar 0x555715643120 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55571564b1c8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55571564b1b0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55571564b120 <col:24, col:40> 'String' (CXXTemporary 0x55571564b120)
|               `-CXXMemberCallExpr 0x55571564b0b8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55571564b048 <col:24> '<bound member function type>' ->vformat 0x555715644580
|                 | `-CXXThisExpr 0x55571564b038 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55571564b0e8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55571564b078 <col:32> 'const char *' lvalue ParmVar 0x5557156431a0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55571564b100 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55571564b098 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x555715643270 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x555715643640 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x555715643468 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5557156434e0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x555715643558 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55571564b548 <col:23, line:254:5>
|   `-ReturnStmt 0x55571564b538 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55571564b520 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55571564b4c0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55571564b490 <col:9> '<bound member function type>' ->xmessage 0x555715643060
|         | `-CXXThisExpr 0x55571564b480 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55571564b508 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55571564b4f0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55571564b440 <col:18, col:65> 'String' (CXXTemporary 0x55571564b440)
|         |     `-CallExpr 0x55571564b3d8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55571564b3c0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55571564b2a8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5557156450b8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55571564b2c8 <col:31> 'const String' lvalue ParmVar 0x5557156434e0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55571564b420 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55571564b408 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55571564b3a0 <col:37, col:64> 'String' (CXXTemporary 0x55571564b3a0)
|         |             `-CallExpr 0x55571564b370 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55571564b358 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55571564b2e8 <col:37> 'String (const String &)' lvalue CXXMethod 0x555715645708 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55571564b308 <col:56> 'const String' lvalue ParmVar 0x555715643468 'landmark' 'const String &'
|         `-DeclRefExpr 0x55571564b460 <col:68> 'const String' lvalue ParmVar 0x555715643558 'str' 'const String &'
|-CXXMethodDecl 0x5557156439c0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x555715643708 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x555715643780 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x555715643800 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x555715643878 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55571564b800 <col:34, line:267:5>
|   `-ReturnStmt 0x55571564b7f0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55571564b7d8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55571564b770 <col:9, col:51> 'int'
|         |-MemberExpr 0x55571564b740 <col:9> '<bound member function type>' ->xmessage 0x555715643640
|         | `-CXXThisExpr 0x55571564b730 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55571564b5e8 <col:18> 'const String' lvalue ParmVar 0x555715643708 'landmark' 'const String &'
|         |-DeclRefExpr 0x55571564b608 <col:28> 'const String' lvalue ParmVar 0x555715643780 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55571564b7c0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55571564b7a8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55571564b710 <col:34, col:50> 'String' (CXXTemporary 0x55571564b710)
|               `-CXXMemberCallExpr 0x55571564b6a8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55571564b638 <col:34> '<bound member function type>' ->vformat 0x555715644580
|                 | `-CXXThisExpr 0x55571564b628 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55571564b6d8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55571564b668 <col:42> 'const char *' lvalue ParmVar 0x555715643800 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55571564b6f0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55571564b688 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x555715643878 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x555715643ad0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55571564b880 <col:25, line:288:5>
|   `-ReturnStmt 0x55571564b870 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55571564b858 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55571564b828 <col:9> 'const int' lvalue ->_nerrors 0x55571564a458
|         `-CXXThisExpr 0x55571564b818 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x555715643ce0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x555715643b88 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x555715643c08 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x555715643fc8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x555715643da8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x555715643e28 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x555715643ea0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x555715644160 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x555715644098 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x5557156443a8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x555715644220 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x555715644298 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55571564bae0 <col:58, line:357:5>
|   `-ReturnStmt 0x55571564bad0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55571564bab8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55571564ba88 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55571564ba70 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55571564ba50 <col:9, col:29> 'String' (CXXTemporary 0x55571564ba50)
|             `-CallExpr 0x55571564b9e0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55571564b9c8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55571564b948 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x555715643fc8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55571564b8e8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55571564ba18 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55571564b908 <col:21> 'const char *' lvalue ParmVar 0x555715644220 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55571564ba30 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55571564b928 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x555715644298 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x555715644580 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x555715644470 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x5557156444e8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5557156446d8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x555715644648 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x555715644820 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x555715644790 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x555715644ac0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x5557156448d8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x555715644958 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x5557156449d0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x555715644c20 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x555715644b90 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55571564bbf8 <col:37, line:441:5>
|   `-IfStmt 0x55571564bbe0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55571564bb68 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55571564bb38 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55571564baf8 <col:6> 'int' lvalue ParmVar 0x555715644b90 'level' 'int'
|     | `-ImplicitCastExpr 0x55571564bb50 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55571564bb18 <col:15> 'ErrorHandler::Level' EnumConstant 0x555715640c10 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55571564bbc8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55571564bb98 <col:8> 'int' lvalue ->_nerrors 0x55571564a458
|         `-CXXThisExpr 0x55571564bb88 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x555715644ce8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55571564bc90 <col:26, line:448:5>
|   `-BinaryOperator 0x55571564bc70 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55571564bc20 <col:2> 'int' lvalue ->_nerrors 0x55571564a458
|     | `-CXXThisExpr 0x55571564bc10 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55571564bc50 <col:13> 'int' 0
|-CXXMethodDecl 0x555715644eb0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x555715644da0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x555715644e18 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x5557156450b8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x555715644f70 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x555715644fe8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x555715645368 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x555715645178 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x5557156451f8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x555715645278 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x555715645420 <col:59> 0 0
|-CXXMethodDecl 0x5557156455b8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x555715645498 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x555715645518 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55571564c300 <col:70, line:534:5>
|   |-DeclStmt 0x55571564be00 <line:528:2, col:20>
|   | |-VarDecl 0x55571564bcb8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55571564bd20 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55571564bd58 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55571564bdc0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55571564bed0 <line:529:2, col:23>
|   | `-VarDecl 0x55571564be30 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55571564beb8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55571564be98 <col:18> 'const char *' lvalue ParmVar 0x555715645498 'begin' 'const char *'
|   |-DoStmt 0x55571564c298 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55571564c1c8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55571564c1b0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55571564c190 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55571564bee8 <col:6> 'const char *' lvalue Var 0x55571564be30 'x' 'const char *'
|   | |     `-CallExpr 0x55571564c0e0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55571564c0c8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55571564c080 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55571564a930 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55571564c148 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55571564c130 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55571564bfa0 <col:20, col:27> 'String' (CXXTemporary 0x55571564bfa0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55571564bf68 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55571564c160 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55571564bfc0 <col:30> 'const char *' lvalue Var 0x55571564be30 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55571564c178 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55571564bfe0 <col:33> 'const char *' lvalue ParmVar 0x555715645518 'end' 'const char *'
|   | |       |-UnaryOperator 0x55571564c020 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55571564c000 <col:39> 'String' lvalue Var 0x55571564bcb8 'name' 'String'
|   | |       |-UnaryOperator 0x55571564c058 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55571564c038 <col:46> 'String' lvalue Var 0x55571564bd58 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55571564c070 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55571564c280 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55571564c268 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55571564c248 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55571564c218 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5557152e6338
|   |         `-ImplicitCastExpr 0x55571564c200 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55571564c1e0 <col:11> 'String' lvalue Var 0x55571564bcb8 'name' 'String'
|   `-ReturnStmt 0x55571564c2f0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55571564c2d8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55571564c2b8 <col:9> 'const char *' lvalue Var 0x55571564be30 'x' 'const char *'
|-CXXMethodDecl 0x555715645708 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x555715645678 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55571564c908 <col:55, line:550:5>
|   `-IfStmt 0x55571564c8e0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55571564c540 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55571564c528 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55571564c510 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55571564c4f0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55571564c4c0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x5557152e6338
|     | |       `-DeclRefExpr 0x55571564c360 <col:6> 'const String' lvalue ParmVar 0x555715645678 'x' 'const String &'
|     | `-BinaryOperator 0x55571564c4a0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55571564c470 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55571564c420 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55571564c408 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55571564c3c0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x5557152ffb70 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55571564c380 <col:11> 'const String' lvalue ParmVar 0x555715645678 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55571564c3a0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55571564c488 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55571564c458 <col:19> 'char' 123
|     |-ReturnStmt 0x55571564c5b0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55571564c580 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55571564c560 <col:13> 'const String' lvalue ParmVar 0x555715645678 'x' 'const String &'
|     `-IfStmt 0x55571564c8b8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55571564c648 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55571564c630 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55571564c610 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55571564c5e0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5557152e6338
|       |       `-DeclRefExpr 0x55571564c5c0 <col:11> 'const String' lvalue ParmVar 0x555715645678 'x' 'const String &'
|       |-ReturnStmt 0x55571564c7d0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55571564c7b8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55571564c788 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55571564c770 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55571564c750 <col:13, col:29> 'String' (CXXTemporary 0x55571564c750)
|       |         `-CallExpr 0x55571564c700 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55571564c6e8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55571564c660 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x555715644eb0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55571564c730 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55571564c680 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55571564c6a0 <col:28> 'const String' lvalue ParmVar 0x555715645678 'x' 'const String &'
|       `-ReturnStmt 0x55571564c8a8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55571564c890 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55571564c860 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55571564c848 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55571564c828 <col:13, col:20> 'String' (CXXTemporary 0x55571564c828)
|                 `-CXXTemporaryObjectExpr 0x55571564c7f0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x5557156458d0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x5557156457c0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x555715645838 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55571564abd8 <col:71> 'bool' false
|-CXXRecordDecl 0x555715645980 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x555715645c78 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x555715645c10 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x555715645bb0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x555715645b70 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x5557152e2bd0 'String'
|       | `-CXXRecord 0x5557152e2b40 'String'
|       |-BuiltinType 0x555714fb33b0 'int'
|       `-DecayedType 0x555715643240 '__va_list_tag *' sugar
|         |-TypedefType 0x555715643210 'va_list' sugar
|         | |-Typedef 0x5557151d3a60 'va_list'
|         | `-TypedefType 0x5557151d3a10 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55571510b638 '__gnuc_va_list'
|         |   `-TypedefType 0x55571510b5a0 '__builtin_va_list' sugar
|         |     |-Typedef 0x555714ff4c18 '__builtin_va_list'
|         |     `-ConstantArrayType 0x555714ff4bc0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x555714fb4100 '__va_list_tag'
|         |         `-CXXRecord 0x555714fb4068 '__va_list_tag'
|         `-PointerType 0x5557151d9300 '__va_list_tag *'
|           `-RecordType 0x555714fb4100 '__va_list_tag'
|             `-CXXRecord 0x555714fb4068 '__va_list_tag'
|-EnumDecl 0x555715645cd0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x555715645dd0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555715649f00 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715645db0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x555715645d90 <col:16> 'int' 1
| |-EnumConstantDecl 0x555715645e60 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555715649f18 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715645e40 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x555715645e20 <col:21> 'int' 2
| |-EnumConstantDecl 0x555715645ef0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555715649f30 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715645ed0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x555715645eb0 <col:22> 'int' 4
| |-EnumConstantDecl 0x555715649b50 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555715649f48 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715649b30 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x555715645f40 <col:17> 'int' 8
| |-EnumConstantDecl 0x555715649be0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555715649f60 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715649bc0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x555715649ba0 <col:22> 'int' 16
| |-EnumConstantDecl 0x555715649c70 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555715649f78 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715649c50 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x555715649c30 <col:19> 'int' 32
| |-EnumConstantDecl 0x555715649d00 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555715649f90 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715649ce0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x555715649cc0 <col:17> 'int' 64
| |-EnumConstantDecl 0x555715649d90 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555715649fa8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715649d70 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x555715649d50 <col:14> 'int' 128
| |-EnumConstantDecl 0x555715649e20 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x555715649fc0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555715649e00 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x555715649de0 <col:16> 'int' 256
| `-EnumConstantDecl 0x555715649eb0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x555715649fd8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555715649e90 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x555715649e70 <col:12> 'int' 1024
|-CXXMethodDecl 0x55571564a1e8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55571564a000 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55571564a0a0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55571564a370 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55571564a2a8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55571564a418 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55571564a458 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55571564a4b8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55571564a530 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55571564a930 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55571564a5a8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55571564a628 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55571564a6a8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55571564a720 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55571564a798 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55571564a810 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55571564aa58 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55571564aa58
| `-ParmVarDecl 0x55571564ab68 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55571564cc68 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55571564cc68
  `-ParmVarDecl 0x55571564cd78 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55571549e778 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55571549e8a8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55571549f398 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55571549b078 prev 0x555715517350 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55571549b170 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55571549b200 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55571549b260 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55571549b308 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55571549b428 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55571549b5c8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55571549b508 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55571549b818 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55571549b688 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55571549b708 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55571549b970 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55571549b8e0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55571549baf8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55571549ba30 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55571549bca8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55571549bbe8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55571549bda0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55571549f570 <col:21, line:58:5>
|   `-IfStmt 0x55571549f558 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55571549f4c0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55571549f490 <col:6> '<bound member function type>' ->scheduled 0x55571549c5f8
|     |   `-ImplicitCastExpr 0x55571549f4e0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55571549f480 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55571549f538 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55571549f508 <col:6> '<bound member function type>' ->unschedule 0x55571549dc20
|         `-CXXThisExpr 0x55571549f4f8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55571549bea0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55571549f710 <col:26, line:65:5>
|   |-BinaryOperator 0x55571549f630 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55571549f5c8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55571549e8a8
|   | | `-MemberExpr 0x55571549f598 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55571549e968
|   | |   `-CXXThisExpr 0x55571549f588 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55571549f618 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55571549f5f8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55571549edc8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55571549f6f0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55571549f660 <col:2> 'void *' lvalue ->_thunk 0x55571549e9e8
|     | `-CXXThisExpr 0x55571549f650 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55571549f6c8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55571549f690 <col:20> 'int' 1
|-CXXMethodDecl 0x55571549bfe0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55571549bf50 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55571549f870 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55571549f760 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55571549f730 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55571549bf50 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55571549f850 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55571549f820 <col:2> '<bound member function type>' ->assign 0x55571549bea0
|       `-CXXThisExpr 0x55571549f810 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55571549c1b0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55571549c098 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55571549c118 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55571554fd50 <col:58, line:79:5>
|   |-BinaryOperator 0x55571554fc98 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55571554fc30 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55571549e8a8
|   | | `-MemberExpr 0x55571549f8a0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55571549e968
|   | |   `-CXXThisExpr 0x55571549f890 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55571554fc80 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55571554fc60 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55571549c098 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55571554fd30 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55571554fcc8 <col:2> 'void *' lvalue ->_thunk 0x55571549e9e8
|     | `-CXXThisExpr 0x55571554fcb8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55571554fd18 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55571554fcf8 <col:11> 'void *' lvalue ParmVar 0x55571549c118 'user_data' 'void *'
|-CXXMethodDecl 0x55571549c300 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55571549c270 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55571554fee8 <col:35, line:87:5>
|   |-BinaryOperator 0x55571554fe18 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55571554fdb0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55571549e8a8
|   | | `-MemberExpr 0x55571554fd80 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55571549e968
|   | |   `-CXXThisExpr 0x55571554fd70 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55571554fe00 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55571554fde0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55571549efa0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55571554fec8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55571554fe48 <col:2> 'void *' lvalue ->_thunk 0x55571549e9e8
|     | `-CXXThisExpr 0x55571554fe38 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55571554feb0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55571554fe98 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55571554fe78 <col:11> 'Element *' lvalue ParmVar 0x55571549c270 'element' 'Element *'
|-CXXMethodDecl 0x55571549c448 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55571549c3b8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x555715550080 <col:29, line:94:5>
|   |-BinaryOperator 0x55571554ffb0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55571554ff48 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55571549e8a8
|   | | `-MemberExpr 0x55571554ff18 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55571549e968
|   | |   `-CXXThisExpr 0x55571554ff08 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55571554ff98 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55571554ff78 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55571549f178 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x555715550060 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55571554ffe0 <col:2> 'void *' lvalue ->_thunk 0x55571549e9e8
|     | `-CXXThisExpr 0x55571554ffd0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x555715550048 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x555715550030 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x555715550010 <col:11> 'Task *' lvalue ParmVar 0x55571549c3b8 'task' 'Task *'
|-CXXMethodDecl 0x55571549c538 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x555715550160 <col:37, line:100:5>
|   `-ReturnStmt 0x555715550150 <line:99:2, col:19>
|     `-BinaryOperator 0x555715550130 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x555715550100 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x5557155500b0 <col:9> 'Element *const' lvalue ->_owner 0x55571549ea48
|       |   `-CXXThisExpr 0x5557155500a0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x555715550118 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x5557155500e0 <col:19> 'int' 0
|-CXXMethodDecl 0x55571549c5f8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x555715550220 <col:35, line:105:5>
|   `-ReturnStmt 0x555715550210 <line:104:2, col:23>
|     `-BinaryOperator 0x5557155501f0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x5557155501d8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x555715550188 <col:9> 'const int' lvalue ->_schedpos1 0x55571549e6c8
|       |   `-CXXThisExpr 0x555715550178 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x5557155501b8 <col:23> 'int' 0
|-CXXMethodDecl 0x55571549c6b8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x555715550288 <col:51, line:118:5>
|   `-ReturnStmt 0x555715550278 <line:117:2, col:9>
|     `-MemberExpr 0x555715550248 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55571549e728
|       `-CXXThisExpr 0x555715550238 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55571549c778 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x5557155507e0 <col:37, line:136:5>
|   `-IfStmt 0x5557155507b8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x555715550348 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x555715550330 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x555715550310 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x5557155502e0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x5557154a9428
|     |       `-MemberExpr 0x5557155502b0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55571549e728
|     |         `-CXXThisExpr 0x5557155502a0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x555715550728 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x555715550710 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x5557155506e0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x5557155506c8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x555715550690 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x555715550678 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x555715550658 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5557154d7c00 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x5557155505f8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x5557155505e0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x555715550508 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x5557155504f0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x5557155504d0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5557154d78c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x555715550470 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x555715550370 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55571549e728
|     |         |     |   `-CXXThisExpr 0x555715550360 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x5557155504b8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x5557155504a0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x555715550450 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x555715550438 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x5557155503d8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x5557154caf20 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x555715550640 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x555715550628 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x5557155505c0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x5557155505a8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x555715550578 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x555715326470 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x5557155507a8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x555715550778 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x555715550748 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55571549e728
|           `-CXXThisExpr 0x555715550738 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55571549c838 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x5557155508c8 <col:35, line:141:5>
|   `-ReturnStmt 0x5557155508b8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x555715550880 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x555715550850 <col:9, col:17> '<bound member function type>' ->router 0x555715529ab0
|         `-ImplicitCastExpr 0x5557155508a0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x555715550838 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x555715550808 <col:9> 'Element *const' lvalue ->_owner 0x55571549ea48
|               `-CXXThisExpr 0x5557155507f8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55571549c8f8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x555715550948 <col:37, line:146:5>
|   `-ReturnStmt 0x555715550938 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x555715550920 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x5557155508f0 <col:9> 'Element *const' lvalue ->_owner 0x55571549ea48
|         `-CXXThisExpr 0x5557155508e0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55571549c9b8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x5557155509c8 <col:41, line:151:5>
|   `-ReturnStmt 0x5557155509b8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x5557155509a0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x555715550970 <col:9> 'RouterThread *const' lvalue ->_thread 0x55571549eaa8
|         `-CXXThisExpr 0x555715550960 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55571549ca80 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55571549cc40 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55571549cb30 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55571549cba8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55571549f388 <col:50> 'bool' false
|-CXXMethodDecl 0x55571549cdc8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55571549cd00 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55571549cf10 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55571549ce80 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55571549d058 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55571549cfc8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55571549d1a0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55571549d110 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55571549d2e8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55571549d258 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55571549d3b0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x555715550b30 <col:32, line:223:5>
|   `-ExprWithCleanups 0x555715550b18 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x555715550ac0 <col:2, col:47> 'void'
|       |-MemberExpr 0x5557155509f0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55571549cf10
|       | `-CXXThisExpr 0x5557155509e0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x555715550b00 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x555715550ae8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x555715550aa0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x555715550a88 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x555715550a58 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x555715326470 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55571549d4f0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55571549d460 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55571549d638 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55571549d5a8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x555715550cb8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x555715550ca0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x555715550c48 <col:2, col:40> 'void'
|       |-MemberExpr 0x555715550b58 <col:2> '<bound member function type>' ->schedule_after 0x55571549d4f0
|       | `-CXXThisExpr 0x555715550b48 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x555715550c88 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x555715550c70 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x555715550c08 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x555715550bd8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x555715550b98 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55571549d5a8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x555715550bf0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x555715550bb8 <col:38> 'int' 0
|-CXXMethodDecl 0x55571549d780 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55571549d6f0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x555715550f28 <col:58, line:249:5>
|   `-ExprWithCleanups 0x555715550f10 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x555715550eb8 <col:2, col:49> 'void'
|       |-MemberExpr 0x555715550ce0 <col:2> '<bound member function type>' ->schedule_after 0x55571549d4f0
|       | `-CXXThisExpr 0x555715550cd0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x555715550ef8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x555715550ee0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x555715550e60 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x555715550e48 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x555715550db8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5557154ab218 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x555715550ea0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x555715550e88 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x555715550d98 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55571549d6f0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55571549d8c8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55571549d838 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x555715551108 <col:58, line:261:5>
|   `-ExprWithCleanups 0x5557155510f0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x555715551098 <col:2, col:38> 'void'
|       |-MemberExpr 0x555715550f50 <col:2> '<bound member function type>' ->schedule_at_steady 0x55571549cf10
|       | `-CXXThisExpr 0x555715550f40 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5557155510d8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5557155510c0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x555715551060 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x555715551048 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x555715551028 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5557154d78c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x555715550ff8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x555715550fe0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x555715550f90 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55571549e728
|             |     `-CXXThisExpr 0x555715550f80 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x555715550fc0 <col:33> 'const Timestamp' lvalue ParmVar 0x55571549d838 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55571549da10 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55571549d980 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5557155513e0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x5557155513c8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x555715551370 <col:2, col:79> 'void'
|       |-MemberExpr 0x555715551130 <col:2> '<bound member function type>' ->schedule_at_steady 0x55571549cf10
|       | `-CXXThisExpr 0x555715551120 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5557155513b0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x555715551398 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x555715551330 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x555715551268 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x555715551250 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x5557155511e0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x5557155511b0 <col:31, col:41> '<bound member function type>' .sec 0x555715327f68
|             | |     `-ImplicitCastExpr 0x555715551200 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x555715551180 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55571549e728
|             | |         `-CXXThisExpr 0x555715551170 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x555715551238 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x555715551218 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55571549d980 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x5557155512f8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x5557155512c8 <col:60, col:70> '<bound member function type>' .subsec 0x555715328660
|                 `-ImplicitCastExpr 0x555715551318 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x555715551298 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55571549e728
|                     `-CXXThisExpr 0x555715551288 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55571549db58 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55571549dac8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x555715551718 <col:60, line:279:5>
|   `-ExprWithCleanups 0x555715551700 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x5557155516a8 <col:2, col:65> 'void'
|       |-MemberExpr 0x555715551408 <col:2> '<bound member function type>' ->schedule_at_steady 0x55571549cf10
|       | `-CXXThisExpr 0x5557155513f8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5557155516e8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5557155516d0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x555715551670 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x555715551658 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x555715551638 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5557154d78c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x5557155515d8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x5557155515c0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x555715551448 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55571549e728
|             |     `-CXXThisExpr 0x555715551438 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x555715551620 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x555715551608 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x555715551568 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x555715551550 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x555715551520 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5557154ab218 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x5557155515a8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x555715551590 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x555715551500 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55571549dac8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55571549dc20 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55571549dce0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x555715551be0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x555715551770 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x555715551740 <col:2> '<bound member function type>' ->unschedule 0x55571549dc20
|   |   `-CXXThisExpr 0x555715551730 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x555715551bc8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x555715551b90 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x555715551b78 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x555715551828 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x5557151bf2e8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x5557155517a0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55571549e728
|       | `-CXXThisExpr 0x555715551790 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x555715551810 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x5557155517e0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55571549dda0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x555715551f38 <col:42, line:310:5>
|   |-IfStmt 0x555715551d80 <line:306:2, line:307:23>
|   | |-CallExpr 0x555715551cb0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x555715551c98 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x555715551c38 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x5557154c9390 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x555715551d70 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x555715551d58 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x555715551d28 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x555715551d10 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x555715551ce0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x555715551f28 <line:309:2, col:33>
|     `-ExprWithCleanups 0x555715551f10 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x555715551ee0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x555715551ec8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x555715551e88 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x555715551e70 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x555715551e40 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5557154ab530 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x555715551eb0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x555715551e20 <col:30> 'int' 500
|-CXXMethodDecl 0x55571549dee0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55571549de50 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55571549df88 <col:69> "" ""
|-CXXMethodDecl 0x55571549e098 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55571549e008 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55571549e140 <col:70> "" ""
|-CXXMethodDecl 0x55571549e250 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55571549e1c0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55571549e2f8 <col:71> "" ""
|-CXXMethodDecl 0x55571549e408 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55571549e378 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55571549e4b0 <col:72> "" ""
|-EnumDecl 0x55571549e520 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55571549e620 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55571549e670 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55571549e600 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55571549e5e0 <col:25> 'int' 1
|-AccessSpecDecl 0x55571549e688 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55571549e6c8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55571549e728 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55571549e778 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55571549e8a8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55571549f398 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55571549e968 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55571549e9e8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55571549ea48 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55571549eaa8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55571549ebf8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55571549eb08 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55571549edc8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55571549ecb0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55571549ed30 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55571549efa0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55571549ee88 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55571549ef08 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55571549f178 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55571549f060 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55571549f0e0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55571549f348 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x555715556cc0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x555715695498 <line:167:18>
|-CXXRecordDecl 0x555715695558 prev 0x555715556cc0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x555715695668 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
