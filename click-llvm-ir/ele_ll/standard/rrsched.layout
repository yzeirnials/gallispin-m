
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec2c1148 prev 0x564cec2b88d8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564cec2c1240 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x564cec2c12d0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x564cec2c1348 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x564cec2c1408 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x564cec2c14d0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x564cec2c1648 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x564cec2c1580 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x564cec2c16f0 <col:24>
| `-OptimizeNoneAttr 0x564cec2c1748 <col:34>
|-CXXMethodDecl 0x564cec2c17c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x564cec2c1a78 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x564cec2c1870 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x564cec2c18e8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x564cec2c1968 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x564cec2c1b30 <line:229:7, col:14> col:7 private
|-FieldDecl 0x564cec2c1b68 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x564cec2c1bd0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x564cec2c1c58 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x564cec2c1f78 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x564cec2c1d10 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x564cec2c1d88 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x564cec2c1e00 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x564cec2c1e80 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x564cec2c2090 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x564cec2c89a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x564cec2c89a8
| `-ParmVarDecl 0x564cec2c8ab8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x564cec2c8b58 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x564cec2c8b58
| `-ParmVarDecl 0x564cec2c8c68 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x564cec38bae8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec2af180 prev 0x564cec2aef00 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564cec2af278 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x564cec2af308 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x564cec2af368 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x564cec2af458 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x564cec2af558 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x564cec2af728 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x564cec2af5d8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x564cec2af650 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x564cec2af8b8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x564cec2af7f0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x564cec2af960 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x564cec2afa98 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x564cec2af9d0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x564cec2afc38 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x564cec2afb78 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x564cec2afdd8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x564cec2afd18 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x564cec2afe80 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x564cec2aff80 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x564cec2b0060 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2aff60 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x564cec2aff40 <col:26> 'int' 1
| `-EnumConstantDecl 0x564cec2b0010 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x564cec2b0078 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec2afff0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x564cec2affd0 <col:44> 'int' 2
|-CXXMethodDecl 0x564cec2b01c0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x564cec2b00a8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x564cec2b0128 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x564cec2b0318 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x564cec2b0288 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x564cec2b0558 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x564cec2b03d8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x564cec2b0450 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x564cec2b0608 <col:20>
| `-OptimizeNoneAttr 0x564cec2b0660 <col:30>
|-CXXMethodDecl 0x564cec2b57a0 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x564cec2b06a0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x564cec2b5848 <col:20>
| `-OptimizeNoneAttr 0x564cec2b58a0 <col:30>
|-CXXMethodDecl 0x564cec2b58f0 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x564cec2b59b8 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x564cec2b5a78 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x564cec2b5b00 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x564cec2b5b88 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x564cec2b5c10 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x564cec2b5c98 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x564cec2b5d28 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x564cec2b5de8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x564cec2b5e70 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x564cec2b5ef8 <line:64:5, col:28> col:23 used PULL 'const char []' static
|-VarDecl 0x564cec2b5f80 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x564cec2b6008 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x564cec2b6090 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x564cec2b6120 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x564cec2b61e0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x564cec2b6270 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x564cec2b63c0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x564cec2b6328 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x564cec2b6550 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x564cec2b6480 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x564cec2b67f0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x564cec2b6608 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x564cec2b6688 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x564cec2b6708 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x564cec2b68a8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x564cec2b69b0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x564cec2b6c40 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2b6990 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x564cec2b6970 <col:33> 'int' 0
| |-EnumConstantDecl 0x564cec2b6a40 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x564cec2b6c58 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2b6a20 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x564cec2b6a00 <col:32> 'int' 20
| |-EnumConstantDecl 0x564cec2b6ad0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x564cec2b6c70 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2b6ab0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x564cec2b6a90 <col:38> 'int' 90
| |-EnumConstantDecl 0x564cec2b6b60 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x564cec2b6c88 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2b6b40 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x564cec2b6b20 <col:35> 'int' 100
| `-EnumConstantDecl 0x564cec2b6bf0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x564cec2b6ca0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec2b6bd0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x564cec2b6bb0 <col:32> 'int' 2000
|-CXXMethodDecl 0x564cec2b6ce0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x564cec2b7120 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x564cec2b6f90 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x564cec2b7008 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564cec2b71f0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x564cec2b7370 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x564cec2b72a0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564cec2b7578 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x564cec2b7428 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x564cec2b74a0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564cec2b7678 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x564cec2b7718 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x564cec2b77e0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x564cec2b7870 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x564cec2b7aa0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2b7850 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x564cec2b7830 <col:36> 'int' EnumConstant 0x564cec2b77e0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x564cec2b78c0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x564cec2b7910 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x564cec2b7960 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x564cec2b79b0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x564cec2b7a00 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x564cec2b7a50 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x564cec2b7b88 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x564cec2b7ac8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x564cec2b7c50 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x564cec2b7d10 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x564cec2b7dd0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x564cec2b7e90 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x564cec2b7fa8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x564cec2b8070 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x564cec2b81f0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x564cec2b8120 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x564cec2b8318 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x564cec2b8518 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x564cec2b83c8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x564cec2b8448 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x564cec2c4e78 <col:54, line:127:5>
|   |-ParenExpr 0x564cec2c4d28 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x564cec2c4cf8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x564cec2c49e8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x564cec2c49c0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x564cec2c49a8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x564cec2c4990 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x564cec2c4960 <col:31> 'Router *' lvalue ->_router 0x564cec2c2840
|   |   |         `-CXXThisExpr 0x564cec2c4950 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x564cec2c4a48 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec2c4a28 <col:48> 'int' 0
|   |   `-CallExpr 0x564cec2c4c58 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x564cec2c4c40 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec2c4c20 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec2c4c98 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec2c4ab8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x564cec2c4cb0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec2c4ad8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x564cec2c4cc8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec2c4b10 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x564cec2c4ce0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec2c4c08 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec2c4bf0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec2c4ba8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x564cec2c4dc0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x564cec2c4d58 <col:9> 'Router *' lvalue ->_router 0x564cec2c2840
|   | | `-CXXThisExpr 0x564cec2c4d48 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x564cec2c4da8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x564cec2c4d88 <col:19> 'Router *' lvalue ParmVar 0x564cec2b83c8 'r' 'Router *'
|   `-BinaryOperator 0x564cec2c4e58 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x564cec2c4df0 <col:9> 'int' lvalue ->_eindex 0x564cec2c28a8
|     | `-CXXThisExpr 0x564cec2c4de0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x564cec2c4e40 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x564cec2c4e20 <col:19> 'int' lvalue ParmVar 0x564cec2b8448 'eindex' 'int'
|-CXXMethodDecl 0x564cec2b86a0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x564cec2b85d8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x564cec2b8770 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x564cec2b8838 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x564cec2b88d8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x564cec2b8b28 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x564cec2b89a0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x564cec2b8a20 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x564cec2b8bd8 <col:20>
| `-OptimizeNoneAttr 0x564cec2b8c30 <col:30>
|-CXXMethodDecl 0x564cec2b8d38 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x564cec2b8c70 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x564cec2b8de0 <col:20>
| `-OptimizeNoneAttr 0x564cec2b8e38 <col:30>
|-CXXMethodDecl 0x564cec2b8f08 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x564cec2b8e78 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x564cec2b8fb0 <col:20>
| `-OptimizeNoneAttr 0x564cec2b9008 <col:30>
|-CXXMethodDecl 0x564cec2b9198 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x564cec2b9040 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x564cec2b90c0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x564cec2b9328 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x564cec2b9260 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x564cec2b9478 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x564cec2b93e8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x564cec2b95c8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x564cec2b9538 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x564cec2b97b0 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x564cec2b9688 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x564cec2b9a68 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x564cec2b9868 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x564cec2b98e8 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x564cec2b9988 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x564cec2b9b40 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x564cec2b9c00 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x564cec2b9ed0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x564cec2b9d80 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x564cec2b9df8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x564cec2b9ff8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x564cec2ba1d0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x564cec2ba0b0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x564cec2ba130 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x564cec2ba3b8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x564cec2ba298 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x564cec2ba318 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x564cec2ba728 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x564cec2ba478 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x564cec2ba4f0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x564cec2ba570 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x564cec2c4460 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x564cec2c4440 <col:106> 'int' 0
| `-ParmVarDecl 0x564cec2ba5e8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564cec2c4498 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564cec2c4478 <col:126> 'int' 0
|-CXXMethodDecl 0x564cec2baaa8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x564cec2ba7f8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x564cec2ba870 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x564cec2ba8f0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x564cec2ba968 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564cec2c44d0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564cec2c44b0 <col:114> 'int' 0
|-CXXMethodDecl 0x564cec2bae38 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x564cec2bab80 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x564cec2babf8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x564cec2bac78 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x564cec2c44e8 <col:96> 'int' 0
| `-ParmVarDecl 0x564cec2bacf0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564cec2c4528 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564cec2c4508 <col:116> 'int' 0
|-CXXMethodDecl 0x564cec2bb1b8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x564cec2baf08 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x564cec2baf80 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x564cec2bb000 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x564cec2c4560 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x564cec2c4540 <col:109> 'int' 0
| `-ParmVarDecl 0x564cec2bb078 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564cec2c4598 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564cec2c4578 <col:129> 'int' 0
|-CXXMethodDecl 0x564cec2bb538 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x564cec2bb288 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x564cec2bb300 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x564cec2bb380 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x564cec2bb3f8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564cec2c45d0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564cec2c45b0 <col:117> 'int' 0
|-CXXMethodDecl 0x564cec2bb8c8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x564cec2bb610 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2bb688 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x564cec2bb708 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x564cec2c45e8 <col:99> 'int' 0
| `-ParmVarDecl 0x564cec2bb780 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x564cec2c4628 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x564cec2c4608 <col:119> 'int' 0
|-CXXMethodDecl 0x564cec2bbce8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x564cec2bb998 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x564cec2bba18 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x564cec2bba90 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x564cec2bbb10 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x564cec2c4660 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x564cec2c4640 <col:108> 'int' 0
| `-ParmVarDecl 0x564cec2bbb90 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x564cec2c4698 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x564cec2c4678 <col:141> 'int' 0
|-CXXMethodDecl 0x564cec2bc108 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x564cec2bbdc0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x564cec2bbe40 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x564cec2bbeb8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x564cec2bbf38 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x564cec2bbfb8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x564cec2c46b0 <col:121> 'int' 0
|-CXXMethodDecl 0x564cec2bc538 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x564cec2bc1e8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x564cec2bc268 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x564cec2bc2e0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x564cec2bc360 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x564cec2c46d0 <col:98> 'int' 0
| `-ParmVarDecl 0x564cec2bc3e0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x564cec2c46f0 <col:123> 'int' 0
|-CXXMethodDecl 0x564cec2bc800 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x564cec2bc610 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x564cec2bc690 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x564cec2bc710 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x564cec2c4710 <col:80> 'int' 0
|-EnumDecl 0x564cec2bc8b8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x564cec2bc9c0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x564cec2bcc50 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2bc9a0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x564cec2bc980 <col:42> 'int' 1
| |-EnumConstantDecl 0x564cec2bca50 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x564cec2bcc68 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2bca30 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x564cec2bca10 <col:40> 'int' 2
| |-EnumConstantDecl 0x564cec2bcae0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x564cec2bcc80 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2bcac0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x564cec2bcaa0 <col:44> 'int' 4
| |-EnumConstantDecl 0x564cec2bcb70 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x564cec2bcc98 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2bcb50 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x564cec2bcb30 <col:36> 'int' 7
| `-EnumConstantDecl 0x564cec2bcc00 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x564cec2bccb0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec2bcbe0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x564cec2bcbc0 <col:34> 'int' 6
|-CXXMethodDecl 0x564cec2bcf68 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x564cec2bccd8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x564cec2bcd78 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x564cec2bcdf8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x564cec2bce70 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x564cec2c47c8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x564cec2c47b0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x564cec2c4798 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x564cec2c4778 <col:98, col:105> 'String' (CXXTemporary 0x564cec2c4778)
|           `-CXXTemporaryObjectExpr 0x564cec2c4740 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x564cec2bd208 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x564cec2bd038 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x564cec2bd0b0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x564cec2bd128 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x564cec2c4878 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x564cec2c4860 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x564cec2c4848 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x564cec2c4828 <col:94, col:101> 'String' (CXXTemporary 0x564cec2c4828)
| |         `-CXXTemporaryObjectExpr 0x564cec2c47f0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x564cec2c5060 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x564cec2c4fd8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x564cec2c4fa8 <col:9> '<bound member function type>' ->add_task_handlers 0x564cec2bcf68
|     | `-CXXThisExpr 0x564cec2c4f98 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x564cec2c5018 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x564cec2c4f18 <col:27> 'Task *' lvalue ParmVar 0x564cec2bd038 'task' 'Task *'
|     |-ImplicitCastExpr 0x564cec2c5030 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x564cec2c4f38 <col:33> 'NotifierSignal *' lvalue ParmVar 0x564cec2bd0b0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x564cec2c5048 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x564cec2c4f58 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x564cec2bcc00 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x564cec2c4f78 <col:62> 'const String' lvalue ParmVar 0x564cec2bd128 'prefix' 'const String &'
|-CXXMethodDecl 0x564cec2bd418 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x564cec2bd2d0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x564cec2bd348 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x564cec2c4928 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x564cec2c4910 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x564cec2c48f8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x564cec2c48d8 <col:70, col:77> 'String' (CXXTemporary 0x564cec2c48d8)
| |         `-CXXTemporaryObjectExpr 0x564cec2c48a0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x564cec2c5238 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x564cec2c51b0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x564cec2c5180 <col:9> '<bound member function type>' ->add_task_handlers 0x564cec2bcf68
|     | `-CXXThisExpr 0x564cec2c5170 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x564cec2c51f0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x564cec2c50f0 <col:27> 'Task *' lvalue ParmVar 0x564cec2bd2d0 'task' 'Task *'
|     |-ImplicitCastExpr 0x564cec2c5208 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x564cec2c5110 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x564cec2c5220 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x564cec2c5130 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x564cec2bcc00 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x564cec2c5150 <col:57> 'const String' lvalue ParmVar 0x564cec2bd348 'prefix' 'const String &'
|-CXXMethodDecl 0x564cec2bd6f8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x564cec2bd4e0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2bd560 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2bd5d8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x564cec2bd9a8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x564cec2bd7c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2bd848 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2bd8c8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x564cec2bdc98 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x564cec2bda78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2bdaf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2bdb70 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x564cec2bdf48 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x564cec2bdd68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2bdde8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2bde68 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x564cec2be1f8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x564cec2be018 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2be098 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2be118 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x564cec2be4a8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x564cec2be2c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2be348 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2be3c0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x564cec2be758 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x564cec2be578 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2be5f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2be678 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x564cec2bea08 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x564cec2be828 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2be8a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2be928 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x564cec2bece8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x564cec2bead8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2beb58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2bec00 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x564cec2befc8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x564cec2bedb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2bee38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2beee0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x564cec2bf230 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x564cec2bf098 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x564cec2bf118 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x564cec2bf190 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x564cec2bf4d8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x564cec2bf300 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x564cec2bf380 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x564cec2bf3f8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x564cec2bf788 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x564cec2bf5a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2bf628 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2bf6a8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x564cec2bfa38 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x564cec2bf858 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2bf8d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2bf950 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x564cec2bfce8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x564cec2bfb08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2bfb88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2bfc00 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x564cec2bffb8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x564cec2bfdb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2bfe38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x564cec2bfed8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x564cec2c02e8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x564cec2c0088 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x564cec2c0108 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x564cec2c0180 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x564cec2c01f8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564cec2c4940 <col:93> 'bool' false
|-CXXMethodDecl 0x564cec2c04d0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x564cec2c03b8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x564cec2c0438 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x564cec2c06a8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x564cec2c0590 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x564cec2c0610 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x564cec2c0988 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x564cec2c0768 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x564cec2c07e0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x564cec2c0860 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x564cec2c08d8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x564cec2c0c78 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x564cec2c0a58 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x564cec2c0ad0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x564cec2c0b50 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x564cec2c0bc8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x564cec2c0eb0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x564cec2c0d50 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x564cec2c0dd0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x564cec2c1098 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x564cec2c0f78 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x564cec2c0ff8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x564cec2c1148 prev 0x564cec2b88d8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564cec2c1240 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x564cec2c12d0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x564cec2c1348 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x564cec2c1408 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x564cec2c14d0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x564cec2c1648 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x564cec2c1580 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x564cec2c16f0 <col:24>
| | `-OptimizeNoneAttr 0x564cec2c1748 <col:34>
| |-CXXMethodDecl 0x564cec2c17c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x564cec2c1a78 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x564cec2c1870 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x564cec2c18e8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x564cec2c1968 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x564cec2c1b30 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x564cec2c1b68 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x564cec2c1bd0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x564cec2c1c58 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x564cec2c1f78 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x564cec2c1d10 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x564cec2c1d88 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x564cec2c1e00 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x564cec2c1e80 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x564cec2c2090 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x564cec2c89a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x564cec2c89a8
| | `-ParmVarDecl 0x564cec2c8ab8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x564cec2c8b58 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x564cec2c8b58
| | `-ParmVarDecl 0x564cec2c8c68 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x564cec38bae8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x564cec2c2108 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x564cec2c21a8 <col:38> "" ""
|-CXXMethodDecl 0x564cec2c2238 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x564cec2c22d8 <col:44> "" ""
|-AccessSpecDecl 0x564cec2c2348 <line:260:3, col:10> col:3 private
|-EnumDecl 0x564cec2c2370 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x564cec2c2470 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x564cec2c24c0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec2c2450 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x564cec2c2430 <col:27> 'int' 4
|-FieldDecl 0x564cec2c2578 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x564cec2c2728 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x564cec2c27e0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x564cec2c2840 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x564cec2c28a8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x564cec2c29f8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x564cec2c2938 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x564cec2c2ba8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x564cec2c2ab8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x564cec2c2d88 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x564cec2c2c68 <col:20> col:23 'int'
| `-ParmVarDecl 0x564cec2c2ce8 <col:25> col:28 'int'
|-CXXMethodDecl 0x564cec2c3030 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x564cec2c2e50 <col:23> col:26 'int'
| |-ParmVarDecl 0x564cec2c2ed0 <col:28> col:31 'int'
| `-ParmVarDecl 0x564cec2c2f48 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x564cec2c30e8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x564cec2c31b0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x564cec2c3200 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x564cec2c3250 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x564cec2c3430 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x564cec2c32e0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x564cec2c3358 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564cec2c36d8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x564cec2c34f8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x564cec2c3578 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x564cec2c35f0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x564cec2c38f8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x564cec2c37a8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x564cec2c3828 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x564cec2c3c30 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x564cec2c39b8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x564cec2c3a38 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x564cec2c3ab0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x564cec2c3b30 <col:57> col:60 'int'
|-CXXMethodDecl 0x564cec2c3e18 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x564cec2c3d00 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x564cec2c3d80 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x564cec2c3f68 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x564cec2c3ed8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x564cec2c42e8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x564cec2c4028 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x564cec2c40a8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x564cec2c4120 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x564cec2c41a0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x564cec2c4400 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class RRSched
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   int _next
       112 |   class NotifierSignal * _signals
           | [sizeof=120, dsize=120, align=8,
           |  nvsize=120, nvalign=8]

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cebf59978 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564cebf59a98 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x564cebf59b28 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x564cebf59bf8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x564cebf59ce0 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x564cebf5ab98 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x564cebf5aa40 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cebf5ad48 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x564cebf5ac50 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x564cebf5ae90 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x564cebf5ae00 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x564cebf5afd8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x564cebf5af48 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cebf5b120 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x564cebf5b090 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cebf5b1e8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x564cebf5b368 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x564cebf5b2a0 <col:28> col:31 'int'
|-CXXMethodDecl 0x564cebf5b430 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x564cebf5b578 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x564cebf5b4e8 <col:28> col:31 'int'
|-CXXMethodDecl 0x564cebf5b6f8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x564cebf5b630 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cebf5b840 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x564cebf5b7b0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cebf5b908 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x564cebf5bb48 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x564cebf5b9b8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x564cebf5ba30 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cebf5bd98 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x564cebf5bc08 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564cebf5bc80 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564cebf5be48 <col:86> "" ""
|-CXXMethodDecl 0x564cebf5c0b8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x564cebf5bf28 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x564cebf5bfa0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cebf5c268 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x564cebf5c178 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x564cebf5c418 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x564cebf5c320 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x564cebf5c6e8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x564cebf5c4d0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x564cebf5c548 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x564cebf5c5c0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cebf5ca50 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x564cebf5c7b0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x564cebf5c828 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564cebf5c8a0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564cebf5cb08 <col:115> "" ""
|-AccessSpecDecl 0x564cebf5cb78 <line:84:3, col:10> col:3 private
|-FieldDecl 0x564cebf5cbb0 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cebf5d058 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x564cebf5d058
| `-ParmVarDecl 0x564cebf5d168 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x564cebf5d208 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x564cebf5d208
| `-ParmVarDecl 0x564cebf5d318 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x564cebfa4a28 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564cec28b460 <col:7>
|-CXXConstructorDecl 0x564cebfa4b00 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x564cebfa4b00
| `-ParmVarDecl 0x564cebfa4c18 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x564cebfa4c88 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x564cebfa4c88
| `-ParmVarDecl 0x564cebfa4d98 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x564cec28ddd0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec36d198 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564cec36d2b8 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x564cec36d358 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x564cec36d3b8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x564cec377ce8 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x564cec377ce8

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec36d420 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564cec36d538 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x564cec36d5d8 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x564cec36d668 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x564cec376880 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564cec376cb8 <col:11>
|-CXXConstructorDecl 0x564cec376988 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x564cec376988
| `-ParmVarDecl 0x564cec376a98 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x564cec376b38 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x564cec376b38
| `-ParmVarDecl 0x564cec376c48 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x564cec3779b0 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec36b0d0 prev 0x564cec2aee50 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564cec36b1c8 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x564cec36b258 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x564cec36b388 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x564cec36b300 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x564cec2aeee0 'NotifierSignal'
|   | `-CXXRecord 0x564cec36b0d0 'NotifierSignal'
|   `-ParenType 0x564cec36b2a0 'bool () const' sugar
|     `-FunctionProtoType 0x564cebde4df0 'bool () const' const cdecl
|       `-BuiltinType 0x564cebd3b500 'bool'
|-CXXConstructorDecl 0x564cec36b418 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x564cec36b658 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x564cec36b4d0 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x564cec36b548 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x564cec36b808 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x564cec36b748 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x564cec36b900 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x564cec36ba28 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x564cec36bae8 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x564cec36bba8 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x564cec36bc68 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x564cec36bd58 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x564cec36bec8 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x564cec36c048 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x564cec36bf88 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x564cec36c110 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x564cec36c1d0 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x564cec36c290 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x564cec36c350 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x564cec36c608 <line:36:5, col:76> col:17
| `-FunctionDecl 0x564cec36c548 parent 0x564cebd3b488 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x564cec36c400 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x564cec36c478 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x564cec36c828 <line:37:5, col:76> col:17
| `-FunctionDecl 0x564cec36c768 parent 0x564cebd3b488 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x564cec36c658 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x564cec36c6d0 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x564cec36c968 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x564cec36c878 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x564cec36cab0 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x564cec36ca20 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x564cec36cd78 <line:41:5, col:78> col:27
| `-FunctionDecl 0x564cec36ccb8 parent 0x564cebd3b488 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x564cec36cb68 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x564cec36cbe0 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x564cec36ce88 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x564cec36cdc8 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x564cec36d008 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x564cec36cf40 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x564cec36d0d0 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x564cec36d170 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x564cec36d198 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564cec36d2b8 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x564cec36d358 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x564cec36d3b8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x564cec377ce8 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x564cec377ce8
|-CXXRecordDecl 0x564cec36d420 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564cec36d538 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x564cec36d5d8 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x564cec36d668 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x564cec376880 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x564cec376cb8 <col:11>
| |-CXXConstructorDecl 0x564cec376988 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x564cec376988
| | `-ParmVarDecl 0x564cec376a98 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x564cec376b38 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x564cec376b38
| | `-ParmVarDecl 0x564cec376c48 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x564cec3779b0 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x564cec36d6e0 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x564cec36d740 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x564cec36d790 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x564cec36d890 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x564cec36da90 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec36d870 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x564cec36d850 <col:14> 'int' 1
| |-EnumConstantDecl 0x564cec36d920 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x564cec36daa8 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec36d900 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x564cec36d8e0 <col:30> 'int' 2
| |-EnumConstantDecl 0x564cec36d9b0 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x564cec36dac0 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec36d990 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x564cec36d970 <col:52> 'int' 4
| `-EnumConstantDecl 0x564cec36da40 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x564cec36dad8 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec36da20 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x564cec36da00 <col:23> 'int' 8
|-VarDecl 0x564cec36db00 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x564cec36dc08 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x564cec36db78 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x564cec36ddd0 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x564cec36dcc0 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x564cec36dd38 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x564cec36e008 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x564cec36deb8 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x564cec36df30 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec38a3f8 <../elements/standard/rrsched.hh:28:1, line:47:1> line:28:7 class RRSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x564cec38a558 <col:1, col:7> col:7 implicit referenced class RRSched
|-AccessSpecDecl 0x564cec38a5e8 <col:34, col:40> col:34 public
|-CXXConstructorDecl 0x564cec38a670 <line:30:5, col:13> col:5 RRSched 'void ()'
|-CXXMethodDecl 0x564cec38a770 <line:32:5, col:64> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x564cec2b58f0 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x564cec38b710 <col:36, col:64>
|   `-ReturnStmt 0x564cec38b700 <col:38, col:45>
|     `-ImplicitCastExpr 0x564cec38b6e8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x564cec38b6c0 <col:45> 'const char [16]' lvalue "RoundRobinSched"
|-CXXMethodDecl 0x564cec38a838 <line:33:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x564cec2b59b8 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x564cec38b770 <col:36, col:52>
|   `-ReturnStmt 0x564cec38b760 <col:38, col:45>
|     `-ImplicitCastExpr 0x564cec38b748 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x564cec38b728 <col:45> 'const char [4]' lvalue "-/1"
|-CXXMethodDecl 0x564cec38a900 <line:34:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x564cec2b5d28 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x564cec38b7d0 <col:36, col:51>
|   `-ReturnStmt 0x564cec38b7c0 <col:38, col:45>
|     `-ImplicitCastExpr 0x564cec38b7a8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x564cec38b788 <col:45> 'const char []' lvalue Var 0x564cec2b5ef8 'PULL' 'const char []'
|-CXXMethodDecl 0x564cec38a9c8 <line:35:5, col:46> col:17 flags 'const char *() const'
| |-Overrides: [ 0x564cec2b6270 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x564cec38b830 <col:31, col:46>
|   `-ReturnStmt 0x564cec38b820 <col:33, col:40>
|     `-ImplicitCastExpr 0x564cec38b808 <col:40> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x564cec38b7e8 <col:40> 'const char [3]' lvalue "S0"
|-CXXMethodDecl 0x564cec38ab10 <line:37:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x564cec2b7370 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x564cec38aa78 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x564cec38ac58 <line:38:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x564cec2b7b88 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x564cec38abc8 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x564cec38ada8 <line:40:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x564cec2af8b8 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x564cec38ad18 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x564cec38ae50 <line:42:3, col:10> col:3 private
|-FieldDecl 0x564cec38ae90 <line:44:5, col:9> col:9 _next 'int'
|-FieldDecl 0x564cec38aef0 <line:45:5, col:21> col:21 _signals 'NotifierSignal *'
|-CXXConstructorDecl 0x564cec38af68 <line:28:7> col:7 implicit RRSched 'void (const RRSched &)' inline default_delete noexcept-unevaluated 0x564cec38af68
| `-ParmVarDecl 0x564cec38b078 <col:7> col:7 'const RRSched &'
|-CXXConstructorDecl 0x564cec38b118 <col:7> col:7 implicit RRSched 'void (RRSched &&)' inline default_delete noexcept-unevaluated 0x564cec38b118
| `-ParmVarDecl 0x564cec38b228 <col:7> col:7 'RRSched &&'
|-CXXMethodDecl 0x564cec38b2c8 <col:7> col:7 implicit operator= 'RRSched &(const RRSched &)' inline default_delete noexcept-unevaluated 0x564cec38b2c8
| `-ParmVarDecl 0x564cec38b3d8 <col:7> col:7 'const RRSched &'
|-CXXMethodDecl 0x564cec38b448 <col:7> col:7 implicit operator= 'RRSched &(RRSched &&)' inline default_delete noexcept-unevaluated 0x564cec38b448
| `-ParmVarDecl 0x564cec38b558 <col:7> col:7 'RRSched &&'
`-CXXDestructorDecl 0x564cec38b5e0 <col:7> col:7 implicit ~RRSched 'void ()' inline default noexcept-unevaluated 0x564cec38b5e0
  `-Overrides: [ 0x564cec2af458 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.RRSched = type { %class.Element.base, i32, %class.NotifierSignal* }
  NonVirtualBaseLLVMType:%class.RRSched = type { %class.Element.base, i32, %class.NotifierSignal* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cebfc7cc0 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564cebfc7dd8 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x564cebfc7e68 <col:22, col:28> col:22 public
|-EnumDecl 0x564cebfc7e90 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x564cebfc7fa8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x564cebfc7f88 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x564cebfc7f70 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x564cebfc7f50 <col:14> 'int' 999
| |-EnumConstantDecl 0x564cebfc8050 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x564cebfc8030 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x564cebfc8018 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x564cebfc7ff8 <col:14> 'int' 1
| |-EnumConstantDecl 0x564cebfc80e0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x564cebfc80c0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x564cebfc80a0 <col:17> 'int' 0
| |-EnumConstantDecl 0x564cebfc8170 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x564cebfc8150 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x564cebfc8130 <col:13> 'int' 1
| |-EnumConstantDecl 0x564cebfc8200 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x564cebfc81e0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x564cebfc81c0 <col:16> 'int' 2
| |-EnumConstantDecl 0x564cebfc8290 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x564cebfc8270 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x564cebfc8250 <col:13> 'int' 3
| |-EnumConstantDecl 0x564cebfc8320 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x564cebfc8300 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x564cebfc82e0 <col:15> 'int' 4
| |-EnumConstantDecl 0x564cebfc83b0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x564cebfc8390 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x564cebfc8370 <col:14> 'int' 5
| |-EnumConstantDecl 0x564cebfc8440 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x564cebfc8420 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x564cebfc8400 <col:12> 'int' 6
| `-EnumConstantDecl 0x564cebfc84d0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x564cebfc84b0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x564cebfc8490 <col:13> 'int' 7
|-VarDecl 0x564cebfc8598 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x564cebfc8620 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x564cebfc86a8 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x564cebfc8730 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x564cebfc87b8 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x564cebfc8840 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x564cebfc88f0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x564cebfc8978 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x564cebfc8a00 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x564cebfc8a88 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x564cebfc8b10 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x564cebfc8c40 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x564cebfce288 '_nerrors' 'int'
| | `-IntegerLiteral 0x564cebfcea18 <line:128:13> 'int' 0
| `-CompoundStmt 0x564cebfd07c0 <col:16, line:129:5>
|-CXXDestructorDecl 0x564cebfc8d30 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x564cebfd07d0 <col:29, line:132:5>
|-CXXMethodDecl 0x564cebfc8ee8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x564cebfc8e20 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564cebfc8fb0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x564cebfc9098 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x564cebfd0828 <col:44, line:161:5>
|   `-ReturnStmt 0x564cebfd0818 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x564cebfd0800 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x564cebfd07e0 <col:9> 'ErrorHandler *' lvalue Var 0x564cebfce2e8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x564cebfc9208 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x564cebfc9148 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x564cebfc92d0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x564cebfd0888 <col:43, line:173:5>
|   `-ReturnStmt 0x564cebfd0878 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x564cebfd0860 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x564cebfd0840 <col:9> 'ErrorHandler *' lvalue Var 0x564cebfce360 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x564cebfc9388 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x564cebfc9408 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x564cebfc9550 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x564cebfc9488 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x564cebfc96a0 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x564cebfc9610 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x564cebfc97f8 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x564cebfc9760 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x564cebfc9950 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x564cebfc98b8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x564cebfc9aa8 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x564cebfc9a10 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x564cebfc9cc0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x564cebfc9b60 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x564cebfc9be0 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x564cebfc9e98 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x564cebfc9d80 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x564cebfc9e00 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x564cebfca0b8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x564cebfc9f58 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x564cebfc9fd8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x564cebfca298 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x564cebfca178 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x564cebfca1f8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x564cebfca478 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x564cebfca358 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x564cebfca3d8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x564cebfca600 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x564cebfca538 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x564cebfca7d0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x564cebfca6b8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x564cebfca730 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x564cebfd0ae8 <col:57, line:234:5>
|   `-ReturnStmt 0x564cebfd0ad8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x564cebfd0ac0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x564cebfd0a68 <col:9, col:41> 'int'
|         |-MemberExpr 0x564cebfd0a38 <col:9> '<bound member function type>' ->xmessage 0x564cebfca600
|         | `-CXXThisExpr 0x564cebfd0a28 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x564cebfd0aa8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x564cebfd0a90 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x564cebfd0a08 <col:18, col:40> 'String' (CXXTemporary 0x564cebfd0a08)
|               `-CallExpr 0x564cebfd09d0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x564cebfd09b8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x564cebfd0928 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x564cebfcca70 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x564cebfd0948 <col:31> 'const String' lvalue ParmVar 0x564cebfca730 'str' 'const String &'
|                 `-DeclRefExpr 0x564cebfd0968 <col:36> 'const String' lvalue ParmVar 0x564cebfca6b8 'anno' 'const String &'
|-CXXMethodDecl 0x564cebfcab80 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x564cebfca900 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x564cebfca980 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x564cebfcaa50 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x564cebfd0d78 <col:68, line:243:5>
|   `-ReturnStmt 0x564cebfd0d68 <line:242:2, col:41>
|     `-ExprWithCleanups 0x564cebfd0d50 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x564cebfd0cf0 <col:9, col:41> 'int'
|         |-MemberExpr 0x564cebfd0cc0 <col:9> '<bound member function type>' ->xmessage 0x564cebfca7d0
|         | `-CXXThisExpr 0x564cebfd0cb0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x564cebfd0b88 <col:18> 'const String' lvalue ParmVar 0x564cebfca900 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x564cebfd0d38 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x564cebfd0d20 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x564cebfd0c90 <col:24, col:40> 'String' (CXXTemporary 0x564cebfd0c90)
|               `-CXXMemberCallExpr 0x564cebfd0c28 <col:24, col:40> 'String'
|                 |-MemberExpr 0x564cebfd0bb8 <col:24> '<bound member function type>' ->vformat 0x564cebfcbd60
|                 | `-CXXThisExpr 0x564cebfd0ba8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x564cebfd0c58 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x564cebfd0be8 <col:32> 'const char *' lvalue ParmVar 0x564cebfca980 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x564cebfd0c70 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x564cebfd0c08 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x564cebfcaa50 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x564cebfcae20 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x564cebfcac48 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x564cebfcacc0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x564cebfcad38 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x564cebfd10b8 <col:23, line:254:5>
|   `-ReturnStmt 0x564cebfd10a8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x564cebfd1090 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x564cebfd1030 <col:9, col:71> 'int'
|         |-MemberExpr 0x564cebfd1000 <col:9> '<bound member function type>' ->xmessage 0x564cebfca7d0
|         | `-CXXThisExpr 0x564cebfd0ff0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x564cebfd1078 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x564cebfd1060 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x564cebfd0fb0 <col:18, col:65> 'String' (CXXTemporary 0x564cebfd0fb0)
|         |     `-CallExpr 0x564cebfd0f48 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x564cebfd0f30 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x564cebfd0e18 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x564cebfcca70 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x564cebfd0e38 <col:31> 'const String' lvalue ParmVar 0x564cebfcacc0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x564cebfd0f90 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x564cebfd0f78 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x564cebfd0f10 <col:37, col:64> 'String' (CXXTemporary 0x564cebfd0f10)
|         |             `-CallExpr 0x564cebfd0ee0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x564cebfd0ec8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x564cebfd0e58 <col:37> 'String (const String &)' lvalue CXXMethod 0x564cebfcd0c8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x564cebfd0e78 <col:56> 'const String' lvalue ParmVar 0x564cebfcac48 'landmark' 'const String &'
|         `-DeclRefExpr 0x564cebfd0fd0 <col:68> 'const String' lvalue ParmVar 0x564cebfcad38 'str' 'const String &'
|-CXXMethodDecl 0x564cebfcb1a0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x564cebfcaee8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x564cebfcaf60 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x564cebfcafe0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x564cebfcb058 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x564cebfd1370 <col:34, line:267:5>
|   `-ReturnStmt 0x564cebfd1360 <line:266:2, col:51>
|     `-ExprWithCleanups 0x564cebfd1348 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x564cebfd12e0 <col:9, col:51> 'int'
|         |-MemberExpr 0x564cebfd12b0 <col:9> '<bound member function type>' ->xmessage 0x564cebfcae20
|         | `-CXXThisExpr 0x564cebfd12a0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x564cebfd1158 <col:18> 'const String' lvalue ParmVar 0x564cebfcaee8 'landmark' 'const String &'
|         |-DeclRefExpr 0x564cebfd1178 <col:28> 'const String' lvalue ParmVar 0x564cebfcaf60 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x564cebfd1330 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x564cebfd1318 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x564cebfd1280 <col:34, col:50> 'String' (CXXTemporary 0x564cebfd1280)
|               `-CXXMemberCallExpr 0x564cebfd1218 <col:34, col:50> 'String'
|                 |-MemberExpr 0x564cebfd11a8 <col:34> '<bound member function type>' ->vformat 0x564cebfcbd60
|                 | `-CXXThisExpr 0x564cebfd1198 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x564cebfd1248 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x564cebfd11d8 <col:42> 'const char *' lvalue ParmVar 0x564cebfcafe0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x564cebfd1260 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x564cebfd11f8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x564cebfcb058 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x564cebfcb2b0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x564cebfd13f0 <col:25, line:288:5>
|   `-ReturnStmt 0x564cebfd13e0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x564cebfd13c8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x564cebfd1398 <col:9> 'const int' lvalue ->_nerrors 0x564cebfce288
|         `-CXXThisExpr 0x564cebfd1388 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x564cebfcb4c0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x564cebfcb368 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x564cebfcb3e8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x564cebfcb7a8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x564cebfcb588 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x564cebfcb608 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x564cebfcb680 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x564cebfcb940 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x564cebfcb878 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x564cebfcbb88 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x564cebfcba00 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x564cebfcba78 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x564cebfd1650 <col:58, line:357:5>
|   `-ReturnStmt 0x564cebfd1640 <line:356:2, col:29>
|     `-ExprWithCleanups 0x564cebfd1628 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x564cebfd15f8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x564cebfd15e0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x564cebfd15c0 <col:9, col:29> 'String' (CXXTemporary 0x564cebfd15c0)
|             `-CallExpr 0x564cebfd1550 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x564cebfd1538 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x564cebfd14b8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x564cebfcb7a8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x564cebfd1458 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x564cebfd1588 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x564cebfd1478 <col:21> 'const char *' lvalue ParmVar 0x564cebfcba00 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x564cebfd15a0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x564cebfd1498 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x564cebfcba78 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x564cebfcbd60 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x564cebfcbc50 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x564cebfcbcc8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x564cebfcbeb8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x564cebfcbe28 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x564cebfcc038 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x564cebfcbf70 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x564cebfcc2d0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x564cebfcc0f0 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x564cebfcc170 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x564cebfcc1e8 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x564cebfcc430 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x564cebfcc3a0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x564cebfd1768 <col:37, line:441:5>
|   `-IfStmt 0x564cebfd1750 <line:439:2, line:440:8>
|     |-BinaryOperator 0x564cebfd16d8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x564cebfd16a8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x564cebfd1668 <col:6> 'int' lvalue ParmVar 0x564cebfcc3a0 'level' 'int'
|     | `-ImplicitCastExpr 0x564cebfd16c0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x564cebfd1688 <col:15> 'ErrorHandler::Level' EnumConstant 0x564cebfc8290 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x564cebfd1738 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x564cebfd1708 <col:8> 'int' lvalue ->_nerrors 0x564cebfce288
|         `-CXXThisExpr 0x564cebfd16f8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x564cebfcc4f8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x564cebfd1800 <col:26, line:448:5>
|   `-BinaryOperator 0x564cebfd17e0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x564cebfd1790 <col:2> 'int' lvalue ->_nerrors 0x564cebfce288
|     | `-CXXThisExpr 0x564cebfd1780 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x564cebfd17c0 <col:13> 'int' 0
|-CXXMethodDecl 0x564cebfcc6c0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x564cebfcc5b0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x564cebfcc628 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x564cebfcca70 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x564cebfcc780 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x564cebfcc7f8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x564cebfccd28 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x564cebfccb30 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x564cebfccbb0 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x564cebfccc30 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x564cebfccde0 <col:59> 0 0
|-CXXMethodDecl 0x564cebfccf78 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x564cebfcce58 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x564cebfcced8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x564cebfd1e70 <col:70, line:534:5>
|   |-DeclStmt 0x564cebfd1970 <line:528:2, col:20>
|   | |-VarDecl 0x564cebfd1828 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x564cebfd1890 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x564cebfd18c8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x564cebfd1930 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x564cebfd1a40 <line:529:2, col:23>
|   | `-VarDecl 0x564cebfd19a0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x564cebfd1a28 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x564cebfd1a08 <col:18> 'const char *' lvalue ParmVar 0x564cebfcce58 'begin' 'const char *'
|   |-DoStmt 0x564cebfd1e08 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x564cebfd1d38 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x564cebfd1d20 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x564cebfd1d00 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x564cebfd1a58 <col:6> 'const char *' lvalue Var 0x564cebfd19a0 'x' 'const char *'
|   | |     `-CallExpr 0x564cebfd1c50 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x564cebfd1c38 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x564cebfd1bf0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x564cebfce760 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x564cebfd1cb8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x564cebfd1ca0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x564cebfd1b10 <col:20, col:27> 'String' (CXXTemporary 0x564cebfd1b10)
|   | |       |     `-CXXTemporaryObjectExpr 0x564cebfd1ad8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x564cebfd1cd0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x564cebfd1b30 <col:30> 'const char *' lvalue Var 0x564cebfd19a0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x564cebfd1ce8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x564cebfd1b50 <col:33> 'const char *' lvalue ParmVar 0x564cebfcced8 'end' 'const char *'
|   | |       |-UnaryOperator 0x564cebfd1b90 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x564cebfd1b70 <col:39> 'String' lvalue Var 0x564cebfd1828 'name' 'String'
|   | |       |-UnaryOperator 0x564cebfd1bc8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x564cebfd1ba8 <col:46> 'String' lvalue Var 0x564cebfd18c8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x564cebfd1be0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x564cebfd1df0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x564cebfd1dd8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x564cebfd1db8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x564cebfd1d88 <col:11> '<bound member function type>' .operator int (String::*)() const 0x564cebf7b218
|   |         `-ImplicitCastExpr 0x564cebfd1d70 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x564cebfd1d50 <col:11> 'String' lvalue Var 0x564cebfd1828 'name' 'String'
|   `-ReturnStmt 0x564cebfd1e60 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x564cebfd1e48 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x564cebfd1e28 <col:9> 'const char *' lvalue Var 0x564cebfd19a0 'x' 'const char *'
|-CXXMethodDecl 0x564cebfcd0c8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x564cebfcd038 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x564cebfd2478 <col:55, line:550:5>
|   `-IfStmt 0x564cebfd2450 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x564cebfd20b0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x564cebfd2098 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x564cebfd2080 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x564cebfd2060 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x564cebfd2030 <col:6> '<bound member function type>' .operator int (String::*)() const 0x564cebf7b218
|     | |       `-DeclRefExpr 0x564cebfd1ed0 <col:6> 'const String' lvalue ParmVar 0x564cebfcd038 'x' 'const String &'
|     | `-BinaryOperator 0x564cebfd2010 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x564cebfd1fe0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x564cebfd1f90 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x564cebfd1f78 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x564cebfd1f30 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x564cebf96160 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x564cebfd1ef0 <col:11> 'const String' lvalue ParmVar 0x564cebfcd038 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x564cebfd1f10 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x564cebfd1ff8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x564cebfd1fc8 <col:19> 'char' 123
|     |-ReturnStmt 0x564cebfd2120 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x564cebfd20f0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x564cebfd20d0 <col:13> 'const String' lvalue ParmVar 0x564cebfcd038 'x' 'const String &'
|     `-IfStmt 0x564cebfd2428 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x564cebfd21b8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x564cebfd21a0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x564cebfd2180 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x564cebfd2150 <col:11> '<bound member function type>' .operator int (String::*)() const 0x564cebf7b218
|       |       `-DeclRefExpr 0x564cebfd2130 <col:11> 'const String' lvalue ParmVar 0x564cebfcd038 'x' 'const String &'
|       |-ReturnStmt 0x564cebfd2340 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x564cebfd2328 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x564cebfd22f8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x564cebfd22e0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x564cebfd22c0 <col:13, col:29> 'String' (CXXTemporary 0x564cebfd22c0)
|       |         `-CallExpr 0x564cebfd2270 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x564cebfd2258 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x564cebfd21d0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x564cebfcc6c0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x564cebfd22a0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x564cebfd21f0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x564cebfd2210 <col:28> 'const String' lvalue ParmVar 0x564cebfcd038 'x' 'const String &'
|       `-ReturnStmt 0x564cebfd2418 <line:549:6, col:20>
|         `-ExprWithCleanups 0x564cebfd2400 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x564cebfd23d0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x564cebfd23b8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x564cebfd2398 <col:13, col:20> 'String' (CXXTemporary 0x564cebfd2398)
|                 `-CXXTemporaryObjectExpr 0x564cebfd2360 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x564cebfcd2c8 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x564cebfcd180 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x564cebfcd1f8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564cebfcea08 <col:71> 'bool' false
|-CXXRecordDecl 0x564cebfcd378 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x564cebfcd678 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x564cebfcd610 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x564cebfcd5b0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x564cebfcd570 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x564cebf77500 'String'
|       | `-CXXRecord 0x564cebf77470 'String'
|       |-BuiltinType 0x564cebd3b580 'int'
|       `-DecayedType 0x564cebfcaa20 '__va_list_tag *' sugar
|         |-TypedefType 0x564cebfca9f0 'va_list' sugar
|         | |-Typedef 0x564cebfae170 'va_list'
|         | `-TypedefType 0x564cebfae120 '__gnuc_va_list' sugar
|         |   |-Typedef 0x564cebfa94f8 '__gnuc_va_list'
|         |   `-TypedefType 0x564cebfa9460 '__builtin_va_list' sugar
|         |     |-Typedef 0x564cebd7cd38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x564cebd7cce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x564cebd3c2d0 '__va_list_tag'
|         |         `-CXXRecord 0x564cebd3c238 '__va_list_tag'
|         `-PointerType 0x564cebfb3cf0 '__va_list_tag *'
|           `-RecordType 0x564cebd3c2d0 '__va_list_tag'
|             `-CXXRecord 0x564cebd3c238 '__va_list_tag'
|-EnumDecl 0x564cebfcd6d0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x564cebfcd7d0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564cebfcdd30 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebfcd7b0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x564cebfcd790 <col:16> 'int' 1
| |-EnumConstantDecl 0x564cebfcd860 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564cebfcdd48 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebfcd840 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x564cebfcd820 <col:21> 'int' 2
| |-EnumConstantDecl 0x564cebfcd8f0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564cebfcdd60 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebfcd8d0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x564cebfcd8b0 <col:22> 'int' 4
| |-EnumConstantDecl 0x564cebfcd980 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564cebfcdd78 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebfcd960 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x564cebfcd940 <col:17> 'int' 8
| |-EnumConstantDecl 0x564cebfcda10 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564cebfcdd90 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebfcd9f0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x564cebfcd9d0 <col:22> 'int' 16
| |-EnumConstantDecl 0x564cebfcdaa0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564cebfcdda8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebfcda80 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x564cebfcda60 <col:19> 'int' 32
| |-EnumConstantDecl 0x564cebfcdb30 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564cebfcddc0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebfcdb10 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x564cebfcdaf0 <col:17> 'int' 64
| |-EnumConstantDecl 0x564cebfcdbc0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564cebfcddd8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebfcdba0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x564cebfcdb80 <col:14> 'int' 128
| |-EnumConstantDecl 0x564cebfcdc50 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x564cebfcddf0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebfcdc30 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x564cebfcdc10 <col:16> 'int' 256
| `-EnumConstantDecl 0x564cebfcdce0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x564cebfcde08 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cebfcdcc0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x564cebfcdca0 <col:12> 'int' 1024
|-CXXMethodDecl 0x564cebfce018 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x564cebfcde30 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x564cebfcded0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x564cebfce1a0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x564cebfce0d8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x564cebfce248 <line:580:3, col:10> col:3 private
|-FieldDecl 0x564cebfce288 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x564cebfce2e8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x564cebfce360 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x564cebfce760 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x564cebfce3d8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x564cebfce458 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x564cebfce4d8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x564cebfce550 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x564cebfce5c8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x564cebfce640 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x564cebfce888 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x564cebfce888
| `-ParmVarDecl 0x564cebfce998 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x564cebfd8108 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x564cebfd8108
  `-ParmVarDecl 0x564cebfd8218 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cebf522c8 prev 0x564cec27f490 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564cebf523c0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x564cebf524b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x564cebf525d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x564cebf52758 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x564cebf528d8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x564cebf52a58 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x564cec28b5c8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564cec28be38 <col:11>
|-CXXDestructorDecl 0x564cec28b6a0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x564cec28b7d8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x564cec28b7d8
| `-ParmVarDecl 0x564cec28b8e8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x564cec28b988 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x564cec28b988
| `-ParmVarDecl 0x564cec28ba98 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x564cec28e7c8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x564cec28e8d8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x564cec28eb58 <col:11>
|   `-ReturnStmt 0x564cec28eb48 <col:11>
|     `-UnaryOperator 0x564cec28eb30 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564cec28eb20 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x564cec28e948 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x564cec28e948
  `-ParmVarDecl 0x564cec28ea58 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cebf52ac0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564cebf52bd8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x564cebf52c78 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x564cebf52ce0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x564cebf52d48 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x564cebf52db0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x564cec282e00 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x564cec282ec0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x564cec282f20 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x564cec282f80 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x564cec28b4d8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x564cebf52c78 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x564cec28be48 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x564cec28bea0 <col:12>
|-CXXConstructorDecl 0x564cec28bb08 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x564cec28bb08
| `-ParmVarDecl 0x564cec28bc18 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x564cec28bcb8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x564cec28bcb8
| `-ParmVarDecl 0x564cec28bdc8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x564cec28deb0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec278b80 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564cec278c98 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x564cec278d28 <col:16, col:22> col:16 public
|-EnumDecl 0x564cec278d50 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x564cec278e50 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x564cec278f30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec278e30 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x564cec278e10 <col:21> 'int' 28
| `-EnumConstantDecl 0x564cec278ee0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x564cec278f48 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec278ec0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x564cec278ea0 <col:22> 'int' 64
|-CXXMethodDecl 0x564cec279288 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x564cec278f70 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564cec278ff0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x564cec279068 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564cec2790e0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x564cec279348 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x564cec279548 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x564cec2793c0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x564cec279438 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x564cec2795f8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x564cec279758 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x564cec279668 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x564cec279800 <col:72> warn_unused_result ""
|-TypedefDecl 0x564cec279b30 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x564cec279ac0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x564cec279a60 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x564cec279a20 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x564cebd3b4e0 'void'
|       |-PointerType 0x564cebf8ff40 'unsigned char *'
|       | `-BuiltinType 0x564cebd3b5e0 'unsigned char'
|       |-TypedefType 0x564cebde20b0 'size_t' sugar
|       | |-Typedef 0x564cebdabbe0 'size_t'
|       | `-BuiltinType 0x564cebd3b640 'unsigned long'
|       `-PointerType 0x564cebd3bce0 'void *'
|         `-BuiltinType 0x564cebd3b4e0 'void'
|-CXXMethodDecl 0x564cec279fa8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x564cec279ba0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x564cec279c18 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564cec279cb0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x564cec279d30 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x564cec284410 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x564cec2843f8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x564cec2843c0 <col:58> 'int' 0
| |-ParmVarDecl 0x564cec279db0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x564cec284438 <col:76> 'int' 0
| |-ParmVarDecl 0x564cec279e30 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x564cec284458 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x564cec27a078 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x564cec27a0f8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x564cec27a1b8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x564cec27a258 <col:20>
| `-OptimizeNoneAttr 0x564cec27a2b0 <col:30>
|-CXXMethodDecl 0x564cec27a328 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x564cec27a3c8 <col:20>
| `-OptimizeNoneAttr 0x564cec27a420 <col:30>
|-CXXMethodDecl 0x564cec27a498 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x564cec27a538 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x564cec27a5e8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x564cec27a688 <col:20>
| |-OptimizeNoneAttr 0x564cec27a6e0 <col:30>
| `-WarnUnusedResultAttr 0x564cec27a708 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x564cec27a760 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x564cec27a800 <col:20>
| `-OptimizeNoneAttr 0x564cec27a858 <col:30>
|-CXXMethodDecl 0x564cec27a8a8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x564cec27a948 <col:20>
| `-OptimizeNoneAttr 0x564cec27a9a0 <col:30>
|-CXXMethodDecl 0x564cec27a9e8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x564cec27aa88 <col:20>
| `-OptimizeNoneAttr 0x564cec27aae0 <col:30>
|-CXXMethodDecl 0x564cec27ab28 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x564cec27abe8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x564cec27acb0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x564cec27ad78 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x564cec27ae38 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x564cec27af58 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x564cec284520 <col:54, line:99:5>
|   `-ReturnStmt 0x564cec284510 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x564cec2844f8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x564cec2844c8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x564cec2832b8
|         `-CXXThisExpr 0x564cec2844b8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x564cec27b0f8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x564cec27b008 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x564cec2845d0 <col:67, line:103:5>
|   `-BinaryOperator 0x564cec2845b0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x564cec284548 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x564cec2832b8
|     | `-CXXThisExpr 0x564cec284538 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x564cec284598 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x564cec284578 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x564cec27b008 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x564cec27b1f0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x564cec284650 <col:33, line:107:5>
|   `-ReturnStmt 0x564cec284640 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x564cec284628 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x564cec2845f8 <col:16> 'void *' lvalue ->_destructor_argument 0x564cec283320
|         `-CXXThisExpr 0x564cec2845e8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x564cec27b2b0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x564cec284c80 <col:25, line:113:5>
|   |-ParenExpr 0x564cec2849c8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x564cec284998 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x564cec284708 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x564cec2846e0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x564cec2846a8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x564cec284678 <col:24> '<bound member function type>' ->shared 0x564cec27a328
|   |   |       `-ImplicitCastExpr 0x564cec2846c8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x564cec284668 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x564cec284768 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec284748 <col:42> 'int' 0
|   |   `-CallExpr 0x564cec2848f8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x564cec2848e0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec2848c0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec284938 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec2847d8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x564cec284950 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec284800 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec284968 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec284838 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x564cec284980 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec2848a8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec284890 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec284858 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x564cec284bc8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x564cec2849f8 <col:2> 'unsigned char *' lvalue ->_head 0x564cec2830c0
|   | | `-CXXThisExpr 0x564cec2849e8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x564cec284bb0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x564cec284b90 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x564cec284a38 <col:10> 'unsigned char *' lvalue ->_data 0x564cec283128
|   |     | `-CXXThisExpr 0x564cec284a28 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x564cec284b78 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x564cec284b58 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x564cec284a78 <col:18> 'unsigned char *' lvalue ->_tail 0x564cec283190
|   |         | `-CXXThisExpr 0x564cec284a68 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x564cec284b40 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x564cec284b20 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x564cec284ab8 <col:26> 'unsigned char *' lvalue ->_end 0x564cec2831f8
|   |             | `-CXXThisExpr 0x564cec284aa8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x564cec284b08 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x564cec284ae8 <col:33> 'int' 0
|   `-BinaryOperator 0x564cec284c60 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x564cec284bf8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x564cec2832b8
|     | `-CXXThisExpr 0x564cec284be8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x564cec284c48 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x564cec284c28 <col:16> 'int' 0
|-CXXMethodDecl 0x564cec27b3f0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x564cec27b360 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564cec27b498 <col:20>
| |-OptimizeNoneAttr 0x564cec27b4f0 <col:30>
| `-WarnUnusedResultAttr 0x564cec27b518 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x564cec27b5e8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x564cec27b558 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564cec27b690 <col:20>
| |-OptimizeNoneAttr 0x564cec27b6e8 <col:30>
| `-WarnUnusedResultAttr 0x564cec27b710 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x564cec27b848 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x564cec27b750 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x564cec27b8f0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x564cec27b9f0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x564cec27b960 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564cec27ba98 <col:20>
| `-OptimizeNoneAttr 0x564cec27baf0 <col:30>
|-CXXMethodDecl 0x564cec27bbb8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x564cec27bb28 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x564cec27bc60 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x564cec27bd60 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x564cec27bcd0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x564cec27be08 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x564cec27bf08 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x564cec27be78 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564cec27bfb0 <col:20>
| `-OptimizeNoneAttr 0x564cec27c008 <col:30>
|-CXXMethodDecl 0x564cec27c198 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x564cec27c048 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x564cec27c0c0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x564cec284478 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x564cec27c248 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x564cec27c448 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x564cec27c2c0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x564cec27c338 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec27c658 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x564cec27c508 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x564cec27c580 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec27c8d0 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x564cec27c718 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x564cec27c798 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x564cec284488 <col:39> 'int' 0
|-CXXMethodDecl 0x564cec27c9a0 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x564cec27ca68 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x564cec27cb30 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x564cec27cbf0 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x564cec27ccb8 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x564cec27ce00 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x564cec27cd70 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x564cec27cfd0 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x564cec27cec0 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x564cec27cf38 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec27d0a0 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x564cec27d160 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x564cec27d200 <col:20>
| `-OptimizeNoneAttr 0x564cec27d258 <col:30>
|-CXXMethodDecl 0x564cec27d2a8 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x564cec27d348 <col:20>
| `-OptimizeNoneAttr 0x564cec27d3a0 <col:30>
|-CXXMethodDecl 0x564cec27d3f0 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x564cec27d4b0 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x564cec27d578 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x564cec27d618 <col:20>
| `-OptimizeNoneAttr 0x564cec27d670 <col:30>
|-CXXMethodDecl 0x564cec27d7c0 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x564cec27d6b0 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x564cec27d728 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec27d910 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x564cec27d880 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec27d9d8 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x564cec27da98 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x564cec27db38 <col:20>
| `-OptimizeNoneAttr 0x564cec27db90 <col:30>
|-CXXMethodDecl 0x564cec27dbe0 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x564cec27dc80 <col:20>
| `-OptimizeNoneAttr 0x564cec27dcd8 <col:30>
|-CXXMethodDecl 0x564cec27dd28 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x564cec27ddf0 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x564cec27de90 <col:20>
| `-OptimizeNoneAttr 0x564cec27dee8 <col:30>
|-CXXMethodDecl 0x564cec27df30 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x564cec27e048 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x564cec27e1b8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x564cec27e0f8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x564cec27e2a8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x564cec27e348 <col:20>
| `-OptimizeNoneAttr 0x564cec27e3a0 <col:30>
|-CXXMethodDecl 0x564cec27e3f0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x564cec27e4b0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x564cec27e6e8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x564cec27e560 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x564cec27e5d8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564cec27e798 <col:20>
| `-OptimizeNoneAttr 0x564cec27e7f0 <col:30>
|-CXXMethodDecl 0x564cec27e898 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x564cec27e938 <col:20>
| `-OptimizeNoneAttr 0x564cec27e990 <col:30>
|-CXXMethodDecl 0x564cec27e9e0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x564cec27ea80 <col:20>
| `-OptimizeNoneAttr 0x564cec27ead8 <col:30>
|-CXXMethodDecl 0x564cec27eb20 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x564cec27ebc0 <col:20>
| `-OptimizeNoneAttr 0x564cec27ec18 <col:30>
|-CXXMethodDecl 0x564cec27ed18 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x564cec27ec50 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x564cec27edc0 <col:20>
| `-OptimizeNoneAttr 0x564cec27ee18 <col:30>
|-CXXMethodDecl 0x564cec27efd8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x564cec27ee50 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x564cec27eec8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564cec27f088 <col:20>
| `-OptimizeNoneAttr 0x564cec27f0e0 <col:30>
|-CXXMethodDecl 0x564cec27f188 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x564cec27f2a8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x564cec27f3c8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x564cec27f468 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x564cec27f490 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x564cec27f5b8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x564cec27f658 <col:20>
| `-OptimizeNoneAttr 0x564cec27f6b0 <col:30>
|-CXXMethodDecl 0x564cec27f758 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x564cec27f7f8 <col:20>
| `-OptimizeNoneAttr 0x564cec27f850 <col:30>
|-AccessSpecDecl 0x564cec27f878 <line:344:3, col:9> col:3 public
|-EnumDecl 0x564cec27f8a0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x564cec27f9a0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x564cec27f9f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec27f980 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x564cec27f960 <col:14> 'int' 48
|-CXXMethodDecl 0x564cec27fa58 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x564cec27faf8 <col:20>
| `-OptimizeNoneAttr 0x564cec27fb50 <col:30>
|-CXXMethodDecl 0x564cec27fbc8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x564cec27fc68 <col:20>
| `-OptimizeNoneAttr 0x564cec27fcc0 <col:30>
|-CXXMethodDecl 0x564cec27fd88 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x564cec27fcf8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x564cec27ff28 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x564cec2800c8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x564cec27ffd8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x564cec280170 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x564cec280270 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x564cec280620 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec280250 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x564cec280230 <col:9> 'int' 0
| |-EnumConstantDecl 0x564cec280300 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x564cec280638 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2802e0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x564cec2802c0 <col:14> 'int' 1
| |-EnumConstantDecl 0x564cec280390 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x564cec280650 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec280370 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x564cec280350 <col:14> 'int' 2
| |-EnumConstantDecl 0x564cec280420 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x564cec280668 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec280400 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x564cec2803e0 <col:14> 'int' 3
| |-EnumConstantDecl 0x564cec2804b0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x564cec280680 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec280490 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x564cec280470 <col:13> 'int' 4
| |-EnumConstantDecl 0x564cec280540 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x564cec280698 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec280520 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x564cec280500 <col:13> 'int' 5
| `-EnumConstantDecl 0x564cec2805d0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x564cec2806b0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec2805b0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x564cec280590 <col:14> 'int' 6
|-CXXMethodDecl 0x564cec280718 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x564cec2807b8 <col:20>
| `-OptimizeNoneAttr 0x564cec280810 <col:30>
|-CXXMethodDecl 0x564cebf43e18 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x564cec280848 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x564cebf43ec0 <col:20>
| `-OptimizeNoneAttr 0x564cebf43f18 <col:30>
|-CXXMethodDecl 0x564cebf43f88 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x564cebf440b0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x564cebf44228 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x564cebf44160 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x564cebf442f0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x564cebf443b8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x564cebf444f8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x564cebf44468 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x564cebf445a0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x564cebf446a0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x564cebf448a0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf44680 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x564cebf44660 <col:23> 'int' 0
| |-EnumConstantDecl 0x564cebf44730 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x564cebf448b8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf44710 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x564cebf446f0 <col:45> 'int' 4
| |-EnumConstantDecl 0x564cebf447c0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x564cebf448d0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf447a0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x564cebf44780 <col:24> 'int' 0
| `-EnumConstantDecl 0x564cebf44850 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x564cebf448e8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cebf44830 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x564cebf44810 <col:47> 'int' 16
|-CXXMethodDecl 0x564cebf44948 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x564cebf44ab8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x564cebf449f8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x564cebf44b60 <col:20>
| `-OptimizeNoneAttr 0x564cebf44bb8 <col:30>
|-CXXMethodDecl 0x564cebf44c08 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x564cec284da0 <col:18, col:36>
|   `-ReturnStmt 0x564cec284d90 <col:20, col:33>
|     `-ImplicitCastExpr 0x564cec284d78 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x564cec284d58 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x564cec284d28 <col:27> '<bound member function type>' ->xanno 0x564cec27f758
|           `-CXXThisExpr 0x564cec284d18 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x564cebf44d00 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x564cec284eb0 <col:30, col:48>
|   `-ReturnStmt 0x564cec284ea0 <col:32, col:45>
|     `-ImplicitCastExpr 0x564cec284e88 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x564cec284e68 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x564cec284e38 <col:39> '<bound member function type>' ->xanno 0x564cec27f5b8
|           `-CXXThisExpr 0x564cec284e28 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x564cebf44de8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x564cec285048 <col:24, col:50>
|   `-ReturnStmt 0x564cec285038 <col:26, col:47>
|     `-UnaryOperator 0x564cec285020 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x564cec285000 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x564cec284fe8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x564cec284f98 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x564cebf525d8
|         |   `-CXXMemberCallExpr 0x564cec284f78 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x564cec284f48 <col:34> '<bound member function type>' ->xanno 0x564cec27f758
|         |       `-CXXThisExpr 0x564cec284f38 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x564cec284fc8 <col:46> 'int' 0
|-CXXMethodDecl 0x564cebf44ed8 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x564cec285218 <col:36, col:62>
|   `-ReturnStmt 0x564cec285208 <col:38, col:59>
|     `-UnaryOperator 0x564cec2851f0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x564cec2851d0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x564cec2851b8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x564cec285130 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x564cebf525d8
|         |   `-CXXMemberCallExpr 0x564cec285110 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x564cec2850e0 <col:46> '<bound member function type>' ->xanno 0x564cec27f5b8
|         |       `-CXXThisExpr 0x564cec2850d0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x564cec285160 <col:58> 'int' 0
|-CXXMethodDecl 0x564cebf44ff8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x564cec2853b0 <col:26, col:53>
|   `-ReturnStmt 0x564cec2853a0 <col:28, col:50>
|     `-UnaryOperator 0x564cec285388 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x564cec285368 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x564cec285350 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x564cec285300 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x564cebf528d8
|         |   `-CXXMemberCallExpr 0x564cec2852e0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x564cec2852b0 <col:36> '<bound member function type>' ->xanno 0x564cec27f758
|         |       `-CXXThisExpr 0x564cec2852a0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x564cec285330 <col:49> 'int' 0
|-CXXMethodDecl 0x564cebf45118 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x564cec285588 <col:38, col:65>
|   `-ReturnStmt 0x564cec285578 <col:40, col:62>
|     `-UnaryOperator 0x564cec285560 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x564cec285540 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x564cec285528 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x564cec285498 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x564cebf528d8
|         |   `-CXXMemberCallExpr 0x564cec285478 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x564cec285448 <col:48> '<bound member function type>' ->xanno 0x564cec27f5b8
|         |       `-CXXThisExpr 0x564cec285438 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x564cec2854c8 <col:61> 'int' 0
|-CXXMethodDecl 0x564cebf452c8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x564cebf451d0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x564cec285c58 <col:34, line:463:5>
|   |-ParenExpr 0x564cec285aa0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x564cec285a70 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x564cec2856d8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec2856a8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec2855f8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec2855e0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec2855a0 <col:23> 'int' lvalue ParmVar 0x564cebf451d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec2855c0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec285688 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564cec285658 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec285618 <col:33> 'int' lvalue ParmVar 0x564cebf451d0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x564cec285670 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x564cec285638 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x564cec285738 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec285718 <col:56> 'int' 0
|   |   `-CallExpr 0x564cec2859d0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x564cec2859b8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec285998 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec285a10 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec285828 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x564cec285a28 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec285858 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec285a40 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec285890 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x564cec285a58 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec285980 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec285968 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec285928 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x564cec285c48 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x564cec285c30 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x564cec285c10 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x564cec285be0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x564cec285b90 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x564cebf525d8
|         |   `-CXXMemberCallExpr 0x564cec285b70 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x564cec285b40 <col:9> '<bound member function type>' ->xanno 0x564cec27f5b8
|         |       `-CXXThisExpr 0x564cec285b30 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x564cec285bf8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x564cec285bc0 <col:21> 'int' lvalue ParmVar 0x564cebf451d0 'i' 'int'
|-CXXMethodDecl 0x564cebf45518 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x564cebf45388 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x564cebf45400 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x564cec2862e8 <col:40, line:472:5>
|   |-ParenExpr 0x564cec286100 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x564cec2860d0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x564cec285db0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec285d80 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec285cd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec285cb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec285c78 <col:23> 'int' lvalue ParmVar 0x564cebf45388 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec285c98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec285d60 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564cec285d30 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec285cf0 <col:33> 'int' lvalue ParmVar 0x564cebf45388 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x564cec285d48 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x564cec285d10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x564cec285e10 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec285df0 <col:56> 'int' 0
|   |   `-CallExpr 0x564cec286030 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x564cec286018 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec285ff8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec286070 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec285e80 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x564cec286088 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec285eb0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec2860a0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec285ee8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x564cec2860b8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec285fe0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec285fc8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec285f88 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x564cec2862c8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x564cec286270 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x564cec286240 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x564cec2861f0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x564cebf525d8
|     | |   `-CXXMemberCallExpr 0x564cec2861d0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x564cec2861a0 <col:2> '<bound member function type>' ->xanno 0x564cec27f758
|     | |       `-CXXThisExpr 0x564cec286190 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x564cec286258 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x564cec286220 <col:14> 'int' lvalue ParmVar 0x564cebf45388 'i' 'int'
|     `-ImplicitCastExpr 0x564cec2862b0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x564cec286290 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x564cebf45400 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x564cebf456d8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x564cebf455e0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x564cec286a68 <col:36, line:485:5>
|   |-ParenExpr 0x564cec2867d0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x564cec2867a0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564cec286480 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec286450 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec286360 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec286348 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec286308 <col:23> 'int' lvalue ParmVar 0x564cebf455e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec286328 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec286430 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564cec286418 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec286380 <col:33> 'int' lvalue ParmVar 0x564cebf455e0 'i' 'int'
|   |   |     `-BinaryOperator 0x564cec2863f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564cec2863e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564cec2863a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564cec2863c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x564cec2864e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec2864c0 <col:60> 'int' 0
|   |   `-CallExpr 0x564cec286700 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564cec2866e8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec2866c8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec286740 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec286550 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x564cec286758 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec286588 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec286770 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec2865c0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x564cec286788 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec2866b0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec286698 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec286658 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x564cec286a58 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x564cec286a40 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x564cec286a28 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x564cec2869f8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x564cec286998 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x564cec286968 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564cec2868e0 <col:61, col:70> 'char const[48]' lvalue ->c 0x564cebf524b0
|             |   `-CXXMemberCallExpr 0x564cec2868c0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x564cec286890 <col:61> '<bound member function type>' ->xanno 0x564cec27f5b8
|             |       `-CXXThisExpr 0x564cec286880 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x564cec286980 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x564cec286910 <col:74> 'int' lvalue ParmVar 0x564cebf455e0 'i' 'int'
|-CXXMethodDecl 0x564cebf45928 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x564cebf45798 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x564cebf45810 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x564cec2871f8 <col:42, line:500:5>
|   |-ParenExpr 0x564cec286f88 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x564cec286f58 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564cec286c00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec286bd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec286ae0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec286ac8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec286a88 <col:23> 'int' lvalue ParmVar 0x564cebf45798 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec286aa8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec286bb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564cec286b98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec286b00 <col:33> 'int' lvalue ParmVar 0x564cebf45798 'i' 'int'
|   |   |     `-BinaryOperator 0x564cec286b78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564cec286b60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564cec286b20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564cec286b40 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x564cec286c60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec286c40 <col:60> 'int' 0
|   |   `-CallExpr 0x564cec286eb8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564cec286ea0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec286e80 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec286ef8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec286cd0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x564cec286f10 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec286d08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec286f28 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec286d40 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x564cec286f40 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec286e68 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec286e50 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec286e10 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x564cec2871d8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x564cec287188 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x564cec287158 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x564cec2870f8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x564cec2870c8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x564cec287078 <col:48, col:57> 'char [48]' lvalue ->c 0x564cebf524b0
|     |     |   `-CXXMemberCallExpr 0x564cec287058 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x564cec287028 <col:48> '<bound member function type>' ->xanno 0x564cec27f758
|     |     |       `-CXXThisExpr 0x564cec287018 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x564cec2870e0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x564cec2870a8 <col:61> 'int' lvalue ParmVar 0x564cebf45798 'i' 'int'
|     `-ImplicitCastExpr 0x564cec2871c0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x564cec2871a0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x564cebf45810 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x564cebf45ae8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x564cebf459f0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x564cec287958 <col:35, line:513:5>
|   |-ParenExpr 0x564cec287668 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x564cec287638 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564cec287390 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec287360 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec287270 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec287258 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec287218 <col:23> 'int' lvalue ParmVar 0x564cebf459f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec287238 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec287340 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564cec287328 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec287290 <col:33> 'int' lvalue ParmVar 0x564cebf459f0 'i' 'int'
|   |   |     `-BinaryOperator 0x564cec287308 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564cec2872f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564cec2872b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564cec2872d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x564cec2873f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec2873d0 <col:60> 'int' 0
|   |   `-CallExpr 0x564cec287598 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564cec287580 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec287560 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec2875d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec287460 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x564cec2875f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec287498 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec287608 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec2874d0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x564cec287620 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec287548 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec287530 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec2874f0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x564cec287948 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x564cec287930 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x564cec287918 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x564cec2878e8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x564cec287860 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x564cec287830 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564cec2877e0 <col:60, col:69> 'char const[48]' lvalue ->c 0x564cebf524b0
|             |   `-CXXMemberCallExpr 0x564cec2877c0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x564cec287790 <col:60> '<bound member function type>' ->xanno 0x564cec27f5b8
|             |       `-CXXThisExpr 0x564cec287780 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x564cec287848 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x564cec287810 <col:73> 'int' lvalue ParmVar 0x564cebf459f0 'i' 'int'
|-CXXMethodDecl 0x564cebf45d38 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x564cebf45ba8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x564cebf45c20 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x564cec288068 <col:41, line:528:5>
|   |-ParenExpr 0x564cec287e00 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x564cec287dd0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564cec287af0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec287ac0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec2879d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec2879b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec287978 <col:23> 'int' lvalue ParmVar 0x564cebf45ba8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec287998 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec287aa0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564cec287a88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec2879f0 <col:33> 'int' lvalue ParmVar 0x564cebf45ba8 'i' 'int'
|   |   |     `-BinaryOperator 0x564cec287a68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564cec287a50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564cec287a10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564cec287a30 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x564cec287b50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec287b30 <col:60> 'int' 0
|   |   `-CallExpr 0x564cec287d30 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564cec287d18 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec287cf8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec287d70 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec287bc0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x564cec287d88 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec287bf8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec287da0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec287c30 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x564cec287db8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec287ce0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec287cc8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec287c88 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x564cec288048 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x564cec287ff8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x564cec287fc8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x564cec287f70 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x564cec287f40 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x564cec287ef0 <col:47, col:56> 'char [48]' lvalue ->c 0x564cebf524b0
|     |     |   `-CXXMemberCallExpr 0x564cec287ed0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x564cec287ea0 <col:47> '<bound member function type>' ->xanno 0x564cec27f758
|     |     |       `-CXXThisExpr 0x564cec287e90 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x564cec287f58 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x564cec287f20 <col:60> 'int' lvalue ParmVar 0x564cebf45ba8 'i' 'int'
|     `-ImplicitCastExpr 0x564cec288030 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x564cec288010 <col:65> 'int16_t':'short' lvalue ParmVar 0x564cebf45c20 'x' 'int16_t':'short'
|-CXXMethodDecl 0x564cebf45ef8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x564cebf45e00 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x564cec288738 <col:36, line:541:5>
|   |-ParenExpr 0x564cec2884d8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x564cec2884a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564cec288200 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec2881d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec2880e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec2880c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec288088 <col:23> 'int' lvalue ParmVar 0x564cebf45e00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec2880a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec2881b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564cec288198 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec288100 <col:33> 'int' lvalue ParmVar 0x564cebf45e00 'i' 'int'
|   |   |     `-BinaryOperator 0x564cec288178 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564cec288160 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564cec288120 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564cec288140 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x564cec288260 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec288240 <col:60> 'int' 0
|   |   `-CallExpr 0x564cec288408 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564cec2883f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec2883d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec288448 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec2882d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x564cec288460 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec288308 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec288478 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec288340 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x564cec288490 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec2883b8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec2883a0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec288360 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x564cec288728 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x564cec288710 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x564cec2886f8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x564cec2886c8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x564cec288670 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x564cec288640 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564cec2885f0 <col:61, col:70> 'char const[48]' lvalue ->c 0x564cebf524b0
|             |   `-CXXMemberCallExpr 0x564cec2885d0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x564cec2885a0 <col:61> '<bound member function type>' ->xanno 0x564cec27f5b8
|             |       `-CXXThisExpr 0x564cec288590 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x564cec288658 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x564cec288620 <col:74> 'int' lvalue ParmVar 0x564cebf45e00 'i' 'int'
|-CXXMethodDecl 0x564cebf460c8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x564cebf45fb8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x564cebf46030 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x564cebf46178 <col:20>
| `-OptimizeNoneAttr 0x564cebf461d0 <col:30>
|-CXXMethodDecl 0x564cebf46308 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x564cebf46210 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x564cec288e08 <col:35, line:562:5>
|   |-ParenExpr 0x564cec288ba8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x564cec288b78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564cec2888d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec2888a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec2887b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec288798 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec288758 <col:23> 'int' lvalue ParmVar 0x564cebf46210 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec288778 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec288880 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564cec288868 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec2887d0 <col:33> 'int' lvalue ParmVar 0x564cebf46210 'i' 'int'
|   |   |     `-BinaryOperator 0x564cec288848 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564cec288830 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564cec2887f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564cec288810 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x564cec288930 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec288910 <col:60> 'int' 0
|   |   `-CallExpr 0x564cec288ad8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564cec288ac0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec288aa0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec288b18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec2889a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x564cec288b30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec2889d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec288b48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec288a10 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x564cec288b60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec288a88 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec288a70 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec288a30 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x564cec288df8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x564cec288de0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x564cec288dc8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x564cec288d98 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x564cec288d40 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x564cec288d10 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564cec288cc0 <col:60, col:69> 'char const[48]' lvalue ->c 0x564cebf524b0
|             |   `-CXXMemberCallExpr 0x564cec288ca0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x564cec288c70 <col:60> '<bound member function type>' ->xanno 0x564cec27f5b8
|             |       `-CXXThisExpr 0x564cec288c60 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x564cec288d28 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x564cec288cf0 <col:73> 'int' lvalue ParmVar 0x564cebf46210 'i' 'int'
|-CXXMethodDecl 0x564cebf46518 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x564cebf463c8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x564cebf46440 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x564cec2894e8 <col:41, line:577:5>
|   |-ParenExpr 0x564cec289278 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x564cec289248 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564cec288fa0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec288f70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec288e80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec288e68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec288e28 <col:23> 'int' lvalue ParmVar 0x564cebf463c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec288e48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec288f50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564cec288f38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec288ea0 <col:33> 'int' lvalue ParmVar 0x564cebf463c8 'i' 'int'
|   |   |     `-BinaryOperator 0x564cec288f18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564cec288f00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564cec288ec0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564cec288ee0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x564cec289000 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec288fe0 <col:60> 'int' 0
|   |   `-CallExpr 0x564cec2891a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564cec289190 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec289170 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec2891e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec289070 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x564cec289200 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec2890a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec289218 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec2890e0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x564cec289230 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec289158 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec289140 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec289100 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x564cec2894c8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x564cec289478 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x564cec289448 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x564cec2893e8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x564cec2893b8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x564cec289368 <col:47, col:56> 'char [48]' lvalue ->c 0x564cebf524b0
|     |     |   `-CXXMemberCallExpr 0x564cec289348 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x564cec289318 <col:47> '<bound member function type>' ->xanno 0x564cec27f758
|     |     |       `-CXXThisExpr 0x564cec289308 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x564cec2893d0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x564cec289398 <col:60> 'int' lvalue ParmVar 0x564cebf463c8 'i' 'int'
|     `-ImplicitCastExpr 0x564cec2894b0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x564cec289490 <col:65> 'int32_t':'int' lvalue ParmVar 0x564cebf46440 'x' 'int32_t':'int'
|-CXXMethodDecl 0x564cebf466d8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x564cebf465e0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x564cec289c18 <col:36, line:591:5>
|   |-ParenExpr 0x564cec289958 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x564cec289928 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564cec289680 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec289650 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec289560 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec289548 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec289508 <col:23> 'int' lvalue ParmVar 0x564cebf465e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec289528 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec289630 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564cec289618 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec289580 <col:33> 'int' lvalue ParmVar 0x564cebf465e0 'i' 'int'
|   |   |     `-BinaryOperator 0x564cec2895f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564cec2895e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564cec2895a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564cec2895c0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x564cec2896e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec2896c0 <col:60> 'int' 0
|   |   `-CallExpr 0x564cec289888 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564cec289870 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec289850 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec2898c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec289750 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x564cec2898e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec289788 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec2898f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec2897c0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x564cec289910 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec289838 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec289820 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec2897e0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x564cec289c08 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x564cec289bf0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x564cec289bd8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x564cec289ba8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x564cec289b20 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x564cec289af0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564cec289aa0 <col:61, col:70> 'char const[48]' lvalue ->c 0x564cebf524b0
|             |   `-CXXMemberCallExpr 0x564cec289a80 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x564cec289a50 <col:61> '<bound member function type>' ->xanno 0x564cec27f5b8
|             |       `-CXXThisExpr 0x564cec289a40 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x564cec289b08 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x564cec289ad0 <col:74> 'int' lvalue ParmVar 0x564cebf465e0 'i' 'int'
|-CXXMethodDecl 0x564cebf46928 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x564cebf46798 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x564cebf46810 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x564cec28a2f8 <col:42, line:606:5>
|   |-ParenExpr 0x564cec28a088 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x564cec28a058 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x564cec289db0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec289d80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec289c90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec289c78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec289c38 <col:23> 'int' lvalue ParmVar 0x564cebf46798 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec289c58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec289d60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x564cec289d48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec289cb0 <col:33> 'int' lvalue ParmVar 0x564cebf46798 'i' 'int'
|   |   |     `-BinaryOperator 0x564cec289d28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564cec289d10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564cec289cd0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x564cec289cf0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x564cec289e10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec289df0 <col:60> 'int' 0
|   |   `-CallExpr 0x564cec289fb8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x564cec289fa0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec289f80 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec289ff8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec289e80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x564cec28a010 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec289eb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec28a028 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec289ef0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x564cec28a040 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec289f68 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec289f50 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec289f10 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x564cec28a2d8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x564cec28a288 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x564cec28a258 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x564cec28a1f8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x564cec28a1c8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x564cec28a178 <col:48, col:57> 'char [48]' lvalue ->c 0x564cebf524b0
|     |     |   `-CXXMemberCallExpr 0x564cec28a158 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x564cec28a128 <col:48> '<bound member function type>' ->xanno 0x564cec27f758
|     |     |       `-CXXThisExpr 0x564cec28a118 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x564cec28a1e0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x564cec28a1a8 <col:61> 'int' lvalue ParmVar 0x564cebf46798 'i' 'int'
|     `-ImplicitCastExpr 0x564cec28a2c0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x564cec28a2a0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x564cebf46810 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x564cebf46ac0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x564cebf469f0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x564cec28ab68 <col:33, line:620:5>
|   |-ParenExpr 0x564cec28a8e0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x564cec28a8b0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x564cec28a500 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec28a4d0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec28a370 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec28a358 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec28a318 <col:23> 'int' lvalue ParmVar 0x564cebf469f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec28a338 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec28a4b0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x564cec28a498 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec28a390 <col:33> 'int' lvalue ParmVar 0x564cebf469f0 'i' 'int'
|   |   |     `-BinaryOperator 0x564cec28a478 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564cec28a460 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564cec28a3b0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x564cec28a438 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x564cec28a420 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x564cec28a3e8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x564cec28a560 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec28a540 <col:79> 'int' 0
|   |   `-CallExpr 0x564cec28a810 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x564cec28a7f8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec28a7d8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec28a850 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec28a648 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x564cec28a868 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec28a690 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec28a880 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec28a6c8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x564cec28a898 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec28a7c0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec28a7a8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec28a768 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x564cec28ab58 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x564cec28ab40 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x564cec28ab28 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x564cec28aaf8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x564cec28aa70 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x564cec28aa40 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x564cec28a9f0 <col:67, col:76> 'char const[48]' lvalue ->c 0x564cebf524b0
|             |   `-CXXMemberCallExpr 0x564cec28a9d0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x564cec28a9a0 <col:67> '<bound member function type>' ->xanno 0x564cec27f5b8
|             |       `-CXXThisExpr 0x564cec28a990 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x564cec28aa58 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x564cec28aa20 <col:80> 'int' lvalue ParmVar 0x564cebf469f0 'i' 'int'
|-CXXMethodDecl 0x564cebf46cd8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x564cebf46b80 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x564cebf46c00 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x564cec28b3c0 <col:45, line:635:5>
|   |-ParenExpr 0x564cec28b108 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x564cec28b0d8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x564cec28ad70 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x564cec28ad40 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x564cec28abe0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x564cec28abc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x564cec28ab88 <col:23> 'int' lvalue ParmVar 0x564cebf46b80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x564cec28aba8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x564cec28ad20 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x564cec28ad08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x564cec28ac00 <col:33> 'int' lvalue ParmVar 0x564cebf46b80 'i' 'int'
|   |   |     `-BinaryOperator 0x564cec28ace8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x564cec28acd0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x564cec28ac20 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x564cec27f9a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x564cec28aca8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x564cec28ac90 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x564cec28ac58 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x564cec28add0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x564cec28adb0 <col:79> 'int' 0
|   |   `-CallExpr 0x564cec28b038 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x564cec28b020 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec28b000 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x564cec28b078 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec28ae68 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x564cec28b090 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x564cec28aeb0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x564cec28b0a8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x564cec28aee8 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x564cec28b0c0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x564cec28afe8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x564cec28afd0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x564cec28af88 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x564cec28b3a0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x564cec28b308 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x564cec28b2d8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x564cec28b278 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x564cec28b248 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x564cec28b1f8 <col:54, col:63> 'char [48]' lvalue ->c 0x564cebf524b0
|     |     |   `-CXXMemberCallExpr 0x564cec28b1d8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x564cec28b1a8 <col:54> '<bound member function type>' ->xanno 0x564cec27f758
|     |     |       `-CXXThisExpr 0x564cec28b198 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x564cec28b260 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x564cec28b228 <col:67> 'int' lvalue ParmVar 0x564cebf46b80 'i' 'int'
|     `-CXXConstCastExpr 0x564cec28b370 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x564cec28b358 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x564cec28b320 <col:91> 'const void *' lvalue ParmVar 0x564cebf46c00 'x' 'const void *'
|-CXXMethodDecl 0x564cebf46da8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x564cec28b448 <col:34, line:640:5>
|   `-ReturnStmt 0x564cec28b438 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x564cec28b420 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x564cec28b3f0 <col:16> 'Packet *' lvalue ->_data_packet 0x564cec283058
|         `-CXXThisExpr 0x564cec28b3e0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x564cebf46ee8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x564cebf46e58 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564cec2844a8 <col:46> 'bool' true
|-CXXMethodDecl 0x564cebf47068 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x564cebf46fa0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x564cebf47110 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x564cebf478c0 <line:660:22> "" ""
| |-EnumConstantDecl 0x564cebf47210 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564cebf47930 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf471f0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x564cebf471d0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x564cec278e50 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x564cebf472a0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564cebf47948 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf47280 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x564cebf47260 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x564cec278ee0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x564cebf47330 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564cebf47960 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf47310 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x564cebf472f0 <col:21> 'int' 0
| |-EnumConstantDecl 0x564cebf473c0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564cebf47978 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf473a0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x564cebf47380 <col:19> 'int' 16
| |-EnumConstantDecl 0x564cebf47450 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564cebf47990 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf47430 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x564cebf47410 <col:21> 'int' 16
| |-EnumConstantDecl 0x564cebf474e0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564cebf479a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf474c0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x564cebf474a0 <col:19> 'int' 32
| |-EnumConstantDecl 0x564cebf47570 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564cebf479c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf47550 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x564cebf47530 <col:19> 'int' EnumConstant 0x564cebf473c0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x564cebf47600 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564cebf479d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf475e0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x564cebf475c0 <col:19> 'int' EnumConstant 0x564cebf474e0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x564cebf476d0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564cebf479f0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf476b0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x564cebf47690 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x564cebf47650 <col:23> 'int' EnumConstant 0x564cebf47600 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x564cebf47670 <col:40> 'int' 2
| |-EnumConstantDecl 0x564cebf477a0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x564cebf47a08 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cebf47780 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x564cebf47760 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x564cebf47720 <col:23> 'int' EnumConstant 0x564cebf47600 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x564cebf47740 <col:40> 'int' 4
| `-EnumConstantDecl 0x564cebf47870 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x564cebf47a20 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cebf47850 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x564cebf47830 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x564cebf477f0 <col:23> 'int' EnumConstant 0x564cebf47600 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x564cebf47810 <col:40> 'int' 8
|-CXXMethodDecl 0x564cebf47a60 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x564cebf47b00 <col:68> "" ""
|-CXXMethodDecl 0x564cebf47b98 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x564cebf47c38 <col:45> "" ""
|-CXXMethodDecl 0x564cebf47cd0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x564cebf47d70 <col:57> "" ""
|-CXXMethodDecl 0x564cebf4ee88 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x564cebf4ef28 <col:45> "" ""
|-CXXMethodDecl 0x564cebf4efc0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x564cebf4f060 <col:57> "" ""
|-CXXMethodDecl 0x564cebf4f0f0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x564cebf4f190 <col:51> "" ""
|-CXXMethodDecl 0x564cebf4f220 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x564cebf4f2c0 <col:63> "" ""
|-CXXMethodDecl 0x564cebf4f350 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x564cebf4f3f0 <col:53> "" ""
|-CXXMethodDecl 0x564cebf4f480 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x564cebf4f520 <col:65> "" ""
|-CXXMethodDecl 0x564cebf4f638 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x564cebf4f5a8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x564cebf4f6e0 <col:61> "" ""
|-CXXMethodDecl 0x564cebf4f878 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x564cebf4f768 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x564cebf4f7e0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x564cebf4f928 <col:67> "" ""
|-CXXMethodDecl 0x564cebf4fa40 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x564cebf4f9b0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x564cebf4fae8 <col:63> "" ""
|-CXXMethodDecl 0x564cebf4fc80 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x564cebf4fb70 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x564cebf4fbe8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x564cebf4fd30 <col:69> "" ""
|-CXXMethodDecl 0x564cebf4fe48 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x564cebf4fdb8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x564cebf4fef0 <col:63> "" ""
|-CXXMethodDecl 0x564cebf50088 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x564cebf4ff78 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x564cebf4fff0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564cebf50138 <col:69> "" ""
|-CXXMethodDecl 0x564cebf50250 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x564cebf501c0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x564cebf502f8 <col:62> "" ""
|-CXXMethodDecl 0x564cebf50490 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x564cebf50380 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x564cebf503f8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x564cebf50540 <col:68> "" ""
|-CXXMethodDecl 0x564cebf50658 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x564cebf505c8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x564cebf50700 <col:63> "" ""
|-CXXMethodDecl 0x564cebf50898 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x564cebf50788 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x564cebf50800 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x564cebf50948 <col:69> "" ""
|-CXXMethodDecl 0x564cebf509d8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x564cebf50a78 <col:64> "" ""
|-CXXMethodDecl 0x564cebf50b08 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x564cebf50ba8 <col:52> "" ""
|-CXXMethodDecl 0x564cebf50c38 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x564cebf50cd8 <col:67> "" ""
|-CXXMethodDecl 0x564cebf50d68 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x564cebf50e08 <col:55> "" ""
|-CXXMethodDecl 0x564cebf50f20 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x564cebf50e90 <col:32> col:35 'int'
| `-DeprecatedAttr 0x564cebf50fc8 <col:58> "" ""
|-CXXMethodDecl 0x564cebf51160 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x564cebf51050 <col:33> col:36 'int'
| |-ParmVarDecl 0x564cebf510c8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x564cebf51210 <col:62> "" ""
|-CXXMethodDecl 0x564cebf51328 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x564cebf51298 <col:32> col:35 'int'
| `-DeprecatedAttr 0x564cebf513d0 <col:58> "" ""
|-CXXMethodDecl 0x564cebf51568 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x564cebf51458 <col:33> col:36 'int'
| |-ParmVarDecl 0x564cebf514d0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x564cebf51618 <col:62> "" ""
|-CXXMethodDecl 0x564cebf51730 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x564cebf516a0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x564cebf517d8 <col:60> "" ""
|-CXXMethodDecl 0x564cebf51970 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x564cebf51860 <col:34> col:37 'int'
| |-ParmVarDecl 0x564cebf518d8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x564cebf51a20 <col:64> "" ""
|-CXXMethodDecl 0x564cebf51b38 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x564cebf51aa8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x564cebf51be0 <col:58> "" ""
|-CXXMethodDecl 0x564cebf51d78 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x564cebf51c68 <col:33> col:36 'int'
| |-ParmVarDecl 0x564cebf51ce0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x564cebf51e28 <col:62> "" ""
|-CXXMethodDecl 0x564cebf51f40 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x564cebf51eb0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x564cebf51fe8 <col:59> "" ""
|-CXXMethodDecl 0x564cebf52180 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x564cebf52070 <col:33> col:36 'int'
| |-ParmVarDecl 0x564cebf520e8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564cebf52230 <col:63> "" ""
|-AccessSpecDecl 0x564cebf522a0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x564cebf522c8 prev 0x564cec27f490 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564cebf523c0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x564cebf524b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x564cebf525d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x564cebf52758 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x564cebf528d8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x564cebf52a58 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x564cec28b5c8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x564cec28be38 <col:11>
| |-CXXDestructorDecl 0x564cec28b6a0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x564cec28b7d8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x564cec28b7d8
| | `-ParmVarDecl 0x564cec28b8e8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x564cec28b988 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x564cec28b988
| | `-ParmVarDecl 0x564cec28ba98 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x564cec28e7c8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x564cec28e8d8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x564cec28eb58 <col:11>
| |   `-ReturnStmt 0x564cec28eb48 <col:11>
| |     `-UnaryOperator 0x564cec28eb30 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x564cec28eb20 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x564cec28e948 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x564cec28e948
|   `-ParmVarDecl 0x564cec28ea58 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x564cebf52ac0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564cebf52bd8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x564cebf52c78 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x564cebf52ce0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x564cebf52d48 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x564cebf52db0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x564cec282e00 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x564cec282ec0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x564cec282f20 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x564cec282f80 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x564cec28b4d8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x564cebf52c78 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x564cec28be48 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x564cec28bea0 <col:12>
| |-CXXConstructorDecl 0x564cec28bb08 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x564cec28bb08
| | `-ParmVarDecl 0x564cec28bc18 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x564cec28bcb8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x564cec28bcb8
| | `-ParmVarDecl 0x564cec28bdc8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x564cec28deb0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x564cec282ff8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x564cec283058 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x564cec2830c0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x564cec283128 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x564cec283190 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x564cec2831f8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x564cec283258 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x564cec2832b8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x564cec283320 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x564cec2833a8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x564cec282ff8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x564cec28b470 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x564cec283258 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x564cec28beb0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x564cec28bf10 <col:21, line:755:5>
|-CXXConstructorDecl 0x564cec283548 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x564cec283488 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x564cec283640 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x564cec283828 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x564cec283730 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x564cec283af8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x564cec2838e0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x564cec283958 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x564cec2839d0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec283d18 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x564cec283bc8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x564cec283c40 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x564cec283fe8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x564cec283dd8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x564cec283e50 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x564cec283ec8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x564cec284140 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x564cec2840b0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec284288 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x564cec2841f8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x564cec284380 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec23c870 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564cec23c988 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x564cec23ca58 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x564cec23cab8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x564cec23cb20 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x564cec23cba8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x564cec23ce10 <col:16, line:46:5>
|   |-BinaryOperator 0x564cec23cd58 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x564cec23cc78 <col:9> 'TaskLink *' lvalue ->_prev 0x564cec23ca58
|   | | `-CXXThisExpr 0x564cec23cc68 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x564cec23cd40 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x564cec23cd20 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x564cec23ccb8 <col:17> 'TaskLink *' lvalue ->_next 0x564cec23cab8
|   |     | `-CXXThisExpr 0x564cec23cca8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x564cec23cd08 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x564cec23cce8 <col:25> 'int' 0
|   `-BinaryOperator 0x564cec23cdf0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x564cec23cd88 <col:9> 'unsigned int' lvalue ->_pass 0x564cec23cb20
|     | `-CXXThisExpr 0x564cec23cd78 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x564cec23cdd8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x564cec23cdb8 <col:17> 'int' 0
|-CXXConstructorDecl 0x564cec35d868 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x564cec35d868
| `-ParmVarDecl 0x564cec35d978 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x564cec35da18 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x564cec35da18
| `-ParmVarDecl 0x564cec35db28 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x564cec35dd18 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x564cec35dd18
|-CXXMethodDecl 0x564cec35e518 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x564cec35e518
| `-ParmVarDecl 0x564cec35e628 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x564cec35e698 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x564cec35e698
  `-ParmVarDecl 0x564cec35e7a8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec2dea68 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x564cec2deb98 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x564cec2debf8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x564cec2dec58 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x564cec366a28 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x564cec366b00 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x564cec366b00
|-CXXConstructorDecl 0x564cec366db8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x564cec366db8
| `-ParmVarDecl 0x564cec366ec8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x564cec366f68 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x564cec366f68
  `-ParmVarDecl 0x564cec367078 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec2de8c0 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x564cec2de9d8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x564cec2dea68 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x564cec2deb98 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x564cec2debf8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x564cec2dec58 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x564cec366a28 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x564cec366b00 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x564cec366b00
| |-CXXConstructorDecl 0x564cec366db8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x564cec366db8
| | `-ParmVarDecl 0x564cec366ec8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x564cec366f68 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x564cec366f68
|   `-ParmVarDecl 0x564cec367078 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x564cec2ded18 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x564cec2ded78 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x564cec2ded18 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x564cec2deb98 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x564cec2dedd0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x564cec2ded18 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x564cec2debf8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x564cec2dee28 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x564cec2ded18 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x564cec2dec58 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x564cec2dee80 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x564cec366938 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564cec367298 <col:11>
|-CXXConstructorDecl 0x564cec366c08 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x564cec366c08
| `-ParmVarDecl 0x564cec366d18 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x564cec367118 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x564cec367118
  `-ParmVarDecl 0x564cec367228 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec24ce00 prev 0x564cec245060 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564cec24cef8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x564cec24cf98 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x564cec2533b8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564cec253798 <col:11>
|-CXXConstructorDecl 0x564cec253490 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x564cec253578 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x564cec253ee0 <col:11>
|-CXXConstructorDecl 0x564cec253618 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x564cec253728 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x564cec255738 <col:11>
|-CXXDestructorDecl 0x564cec254a48 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x564cec292368 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x564cec292478 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x564cec292d40 <col:11>
|   `-ReturnStmt 0x564cec292d30 <col:11>
|     `-UnaryOperator 0x564cec292d18 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564cec292d08 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x564cec2924e8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x564cec2925f8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x564cec2ef9e0 <col:11>
    `-ReturnStmt 0x564cec2ef9d0 <col:11>
      `-UnaryOperator 0x564cec2ef9b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x564cec2ef9a8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec242b58 prev 0x564cec242868 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564cec242c50 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x564cec242ce0 <col:19, col:25> col:19 public
|-TypedefDecl 0x564cec242d18 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x564cebe92440 'int32_t' sugar
|   |-Typedef 0x564cebda4328 'int32_t'
|   `-TypedefType 0x564cebd7d510 '__int32_t' sugar
|     |-Typedef 0x564cebd7d128 '__int32_t'
|     `-BuiltinType 0x564cebd3b580 'int'
|-TypedefDecl 0x564cec242d80 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x564cebe92600 'int64_t' sugar
|   |-Typedef 0x564cebda4390 'int64_t'
|   `-TypedefType 0x564cebd7d630 '__int64_t' sugar
|     |-Typedef 0x564cebd7d208 '__int64_t'
|     `-BuiltinType 0x564cebd3b5a0 'long'
|-EnumDecl 0x564cec242dd8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x564cec242f50 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x564cec242f30 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x564cec242f08 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x564cec242ef0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x564cec242ec0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x564cec243048 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x564cec243028 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x564cec243000 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x564cec242fe8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x564cec242fc0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x564cec242fa0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x564cec243098 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x564cec2431a0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564cec244db0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec243180 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x564cec243160 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x564cec243230 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564cec244dc8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec243210 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x564cec2431f0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x564cec2432c0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564cec244de0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2432a0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x564cec243280 <col:25> 'int' 1000
| |-EnumConstantDecl 0x564cec243350 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564cec244df8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec243330 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x564cec243310 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x564cec244aa0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564cec244e10 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec2433c0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x564cec2433a0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x564cec244b30 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564cec244e28 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec244b10 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x564cec244af0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x564cec244bc0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564cec244e40 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec244ba0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x564cec244b80 <col:26> 'int' EnumConstant 0x564cec2431a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x564cec244c90 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x564cec244e58 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec244c70 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x564cec244c50 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x564cec244c10 <col:27> 'int' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x564cec244c30 <col:44> 'int' EnumConstant 0x564cec244b30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x564cec244d60 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x564cec244e70 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec244d40 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x564cec244d20 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x564cec244ce0 <col:27> 'int' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x564cec244d00 <col:44> 'int' EnumConstant 0x564cec243350 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x564cec244e88 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x564cec244f90 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x564cec244fe0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec244f70 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x564cec244f50 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x564cec245008 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x564cebe92070 'uninitialized_type'
|   `-CXXRecord 0x564cebe91fd8 'uninitialized_type'
|-CXXRecordDecl 0x564cec245060 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x564cec245170 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x564cec24df48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564cec2537a8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564cec2538c8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x564cec253880 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x564cec253810 <col:9> '<bound member function type>' ->assign 0x564cec24b028
|     | `-CXXThisExpr 0x564cec253800 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x564cec253840 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x564cec2538b0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x564cec253860 <col:19> 'int' 0
|-CXXConstructorDecl 0x564cec2453b8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x564cec245230 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x564cec2452a8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x564cec253250 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564cec253230 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x564cec24df48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564cec2538e0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564cec253a30 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x564cec2539b8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x564cec253948 <col:9> '<bound member function type>' ->assign 0x564cec24b028
|     | `-CXXThisExpr 0x564cec253938 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x564cec253a00 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x564cec2539e8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x564cec253978 <col:16> 'long' lvalue ParmVar 0x564cec245230 'sec' 'long'
|     `-ImplicitCastExpr 0x564cec253a18 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x564cec253998 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec2452a8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x564cec245618 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x564cec245488 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x564cec245500 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x564cec253288 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564cec253268 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x564cec24df48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564cec253a48 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564cec253b80 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x564cec253b20 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x564cec253ab0 <col:9> '<bound member function type>' ->assign 0x564cec24b028
|     | `-CXXThisExpr 0x564cec253aa0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x564cec253b50 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x564cec253ae0 <col:16> 'int' lvalue ParmVar 0x564cec245488 'sec' 'int'
|     `-ImplicitCastExpr 0x564cec253b68 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x564cec253b00 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec245500 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x564cec245878 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x564cec2456e8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x564cec245760 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x564cec2532c0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564cec2532a0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x564cec24df48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564cec253b98 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564cec253ce8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x564cec253c70 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x564cec253c00 <col:9> '<bound member function type>' ->assign 0x564cec24b028
|     | `-CXXThisExpr 0x564cec253bf0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x564cec253cb8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x564cec253ca0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x564cec253c30 <col:16> 'unsigned long' lvalue ParmVar 0x564cec2456e8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x564cec253cd0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x564cec253c50 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec245760 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x564cec245ad8 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x564cec245948 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x564cec2459c0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x564cec2532f8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564cec2532d8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x564cec24df48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564cec253d00 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564cec253e50 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x564cec253dd8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x564cec253d68 <col:9> '<bound member function type>' ->assign 0x564cec24b028
|     | `-CXXThisExpr 0x564cec253d58 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x564cec253e20 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x564cec253e08 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x564cec253d98 <col:16> 'unsigned int' lvalue ParmVar 0x564cec245948 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x564cec253e38 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x564cec253db8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec2459c0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x564cec245c38 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x564cec245ba8 <col:31> col:37 'double'
|-CXXConstructorDecl 0x564cec245dd8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x564cec245d10 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x564cec246008 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x564cec245f10 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x564cec2461b8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x564cec2460f8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x564cec24df48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564cec253ef0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x564cec253e68 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x564cec2460f8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x564cec253f50 <col:19, line:214:5>
|-CXXConstructorDecl 0x564cec246388 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x564cec2462c8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x564cec24df48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564cec253f60 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564cec254010 <col:53, line:219:5>
|   `-CStyleCastExpr 0x564cec253fe8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x564cec253fb8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x564cec2462c8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x564cec246578 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x564cec2464f0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x564cec242900 'Timestamp'
|   | `-CXXRecord 0x564cec242b58 'Timestamp'
|   `-ParenType 0x564cec246490 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x564cec246460 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x564cec242ea0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x564cec242d18 'seconds_type'
|         `-TypedefType 0x564cebe92440 'int32_t' sugar
|           |-Typedef 0x564cebda4328 'int32_t'
|           `-TypedefType 0x564cebd7d510 '__int32_t' sugar
|             |-Typedef 0x564cebd7d128 '__int32_t'
|             `-BuiltinType 0x564cebd3b580 'int'
|-CXXConversionDecl 0x564cec2466b8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x564cec246788 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x564cec254118 <col:37, line:231:5>
|   `-ReturnStmt 0x564cec254108 <line:227:9, col:23>
|     `-BinaryOperator 0x564cec2540e8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x564cec2540b8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x564cec254068 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x564cec24cf98
|       |   `-MemberExpr 0x564cec254038 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x564cec24df48
|       |     `-CXXThisExpr 0x564cec254028 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x564cec2540d0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x564cec254098 <col:23> 'int' 0
|-CXXMethodDecl 0x564cec246848 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x564cec246908 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x564cec2469c8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x564cec246a88 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x564cec246b48 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x564cec246cb8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x564cec246bf8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x564cec246e00 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x564cec246d70 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec246ec8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x564cec246f68 <col:54> "" ""
|-CXXMethodDecl 0x564cec246ff8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x564cec247098 <col:54> "" ""
|-CXXMethodDecl 0x564cec247128 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x564cec2471c8 <col:54> "" ""
|-CXXMethodDecl 0x564cec2472c8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x564cec247398 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x564cec2474c8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x564cec2475c0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x564cec2476f8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x564cec254330 <col:39, line:271:5>
|   `-ReturnStmt 0x564cec254320 <line:267:9, col:61>
|     `-CallExpr 0x564cec2542c0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x564cec2542a8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564cec254130 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x564cec24e278 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x564cec2542f0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x564cec254190 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x564cec24cf98
|       |   `-MemberExpr 0x564cec254160 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x564cec24df48
|       |     `-CXXThisExpr 0x564cec254150 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x564cec254308 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x564cec254230 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x564cec254200 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x564cec2541c0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x564cec254218 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x564cec2541e0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244b30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564cec2477b8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x564cec2544f0 <col:39, line:279:5>
|   `-ReturnStmt 0x564cec2544e0 <line:275:9, col:61>
|     `-CallExpr 0x564cec254480 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x564cec254468 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564cec254348 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x564cec24e278 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x564cec2544b0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x564cec2543a8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x564cec24cf98
|       |   `-MemberExpr 0x564cec254378 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x564cec24df48
|       |     `-CXXThisExpr 0x564cec254368 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x564cec2544c8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x564cec254448 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x564cec254418 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x564cec2543d8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x564cec254430 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x564cec2543f8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec243350 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564cec247878 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x564cec254688 <col:39, line:287:5>
|   `-ReturnStmt 0x564cec254678 <line:283:9, col:53>
|     `-BinaryOperator 0x564cec254658 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x564cec254628 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x564cec254548 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x564cec24cf98
|       |   `-MemberExpr 0x564cec254518 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x564cec24df48
|       |     `-CXXThisExpr 0x564cec254508 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x564cec254640 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x564cec254608 <col:23, col:53> 'int'
|           `-BinaryOperator 0x564cec2545e8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x564cec2545b8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564cec254578 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec2431a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564cec2545d0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564cec254598 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564cec247968 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x564cec255920 <col:40, line:293:5>
|   |-DeclStmt 0x564cec2547d0 <line:291:9, col:48>
|   | `-VarDecl 0x564cec2546b0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x564cec2547b0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x564cec254758 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x564cec254728 <col:22> '<bound member function type>' ->subsec 0x564cec246908
|   |     |   `-CXXThisExpr 0x564cec254718 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x564cec254798 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x564cec254778 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244c90 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x564cec255910 <line:292:9, col:70>
|     `-ExprWithCleanups 0x564cec2558f8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x564cec2558c8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564cec2558b0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x564cec255890 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x564cec255860 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x564cec2555f8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x564cec2555e0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x564cec2547e8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x564cec2546b0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x564cec255800 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x564cec2557e8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x564cec2557b8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x564cec255610 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x564cec255580 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x564cec255568 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x564cec255518 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x564cec242aa8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x564cec2554b8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x564cec254818 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x564cec254808 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x564cec255500 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x564cec2554e8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x564cec254cd8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x564cec254840 <col:39> 'int' 0
|               |               `-BinaryOperator 0x564cec2548d0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x564cec2548a0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x564cec254860 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244c90 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x564cec2548b8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x564cec254880 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x564cec2546b0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x564cec255830 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x564cec2555c8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x564cec2555b8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x564cec247a28 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x564cec255e78 <col:40, line:302:5>
|   |-DeclStmt 0x564cec255a70 <line:297:9, col:48>
|   | `-VarDecl 0x564cec255950 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x564cec255a50 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x564cec2559f8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x564cec2559c8 <col:22> '<bound member function type>' ->subsec 0x564cec246908
|   |     |   `-CXXThisExpr 0x564cec2559b8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x564cec255a38 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x564cec255a18 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244d60 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x564cec255e68 <line:298:9, col:70>
|     `-ExprWithCleanups 0x564cec255e50 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x564cec255e20 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564cec255e08 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x564cec255de8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x564cec255db8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x564cec255ce0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x564cec255cc8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x564cec255a88 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x564cec255950 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x564cec255d58 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x564cec255d40 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x564cec255d10 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x564cec255cf8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x564cec255c68 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x564cec255c50 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x564cec255c30 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x564cec242aa8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x564cec255bd0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x564cec255ab8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x564cec255aa8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x564cec255c18 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x564cec255c00 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x564cec255b90 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x564cec255ae0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x564cec255b70 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x564cec255b40 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x564cec255b00 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244d60 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x564cec255b58 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x564cec255b20 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x564cec255950 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x564cec255d88 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x564cec255cb0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x564cec255ca0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x564cec247ae8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x564cec255f00 <col:40, line:306:5>
|   `-ReturnStmt 0x564cec255ef0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x564cec255ec0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x564cec255ea8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564cec255e98 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x564cec247c88 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x564cec247b98 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x564cec247e58 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x564cec247d60 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x564cec247f48 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x564cec2480b8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x564cec247ff8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x564cec256048 <col:56, line:320:5>
|   `-ReturnStmt 0x564cec256038 <line:319:9, col:32>
|     `-ExprWithCleanups 0x564cec256020 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x564cec255ff0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564cec255fd8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x564cec255f98 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x564cec255f68 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x564cec255f28 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564cec247ff8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x564cec255f80 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x564cec255f48 <col:31> 'int' 0
|-CXXMethodDecl 0x564cec2482f8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x564cec248170 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564cec2481e8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec256218 <col:72, line:326:5>
|   `-ReturnStmt 0x564cec256208 <line:325:9, col:51>
|     `-ExprWithCleanups 0x564cec2561f0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x564cec2561c0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564cec2561a8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x564cec256168 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x564cec256150 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x564cec256070 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564cec248170 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x564cec256110 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x564cec2560f8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x564cec256090 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x564cec24c6f0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x564cec256138 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x564cec2560b0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec2481e8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec2484a8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x564cec2483b8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x564cec260df0 <col:56, line:337:5>
|   |-DeclStmt 0x564cec260a28 <line:329:9, col:51>
|   | `-VarDecl 0x564cec256240 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x564cec260a10 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x564cec2609e0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x564cec2609c8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x564cec2609b0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x564cec260980 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x564cec260968 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x564cec260950 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x564cec256330 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x564cec260be0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x564cec260a90 <col:9, col:14> 'int64_t':'long' lvalue .x 0x564cec24cf98
|   | | `-MemberExpr 0x564cec260a60 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x564cec24df48
|   | |   `-DeclRefExpr 0x564cec260a40 <col:9> 'Timestamp' lvalue Var 0x564cec256240 't' 'Timestamp'
|   | `-BinaryOperator 0x564cec260bc0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x564cec260b90 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564cec260ac0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x564cec2483b8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x564cec260ba8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x564cec260b70 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x564cec260b50 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x564cec260b20 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x564cec260ae0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x564cec260b38 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x564cec260b00 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244b30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x564cec260dd8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x564cec260da8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x564cec260d90 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x564cec260d70 <col:16> 'Timestamp' lvalue Var 0x564cec256240 't' 'Timestamp'
|-CXXMethodDecl 0x564cec248670 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x564cec248560 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564cec2485d8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec260fa8 <col:72, line:343:5>
|   `-ReturnStmt 0x564cec260f98 <line:342:9, col:51>
|     `-ExprWithCleanups 0x564cec260f80 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x564cec260f50 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564cec260f38 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x564cec260ef8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x564cec260ee0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x564cec260e28 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564cec248560 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x564cec260ea0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x564cec260e88 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x564cec260e48 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x564cec24c838 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x564cec260ec8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x564cec260e68 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec2485d8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec2487c0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x564cec248730 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x564cec2613f0 <col:56, line:354:5>
|   |-DeclStmt 0x564cec261198 <line:346:9, col:51>
|   | `-VarDecl 0x564cec260fd0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x564cec261180 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x564cec261150 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x564cec261138 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x564cec261120 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x564cec2610f0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x564cec2610d8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x564cec2610c0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x564cec261090 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x564cec261350 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x564cec261200 <col:9, col:14> 'int64_t':'long' lvalue .x 0x564cec24cf98
|   | | `-MemberExpr 0x564cec2611d0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x564cec24df48
|   | |   `-DeclRefExpr 0x564cec2611b0 <col:9> 'Timestamp' lvalue Var 0x564cec260fd0 't' 'Timestamp'
|   | `-BinaryOperator 0x564cec261330 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x564cec261300 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564cec261230 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x564cec248730 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x564cec261318 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x564cec2612e0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x564cec2612c0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x564cec261290 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x564cec261250 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x564cec2612a8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x564cec261270 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec243350 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x564cec2613d8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x564cec2613a8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x564cec261390 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x564cec261370 <col:16> 'Timestamp' lvalue Var 0x564cec260fd0 't' 'Timestamp'
|-CXXMethodDecl 0x564cec248988 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x564cec248878 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564cec2488f0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec2615a8 <col:72, line:360:5>
|   `-ReturnStmt 0x564cec261598 <line:359:9, col:51>
|     `-ExprWithCleanups 0x564cec261580 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x564cec261550 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564cec261538 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x564cec2614f8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x564cec2614e0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x564cec261428 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564cec248878 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x564cec2614a0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x564cec261488 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x564cec261448 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x564cec24c980 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x564cec2614c8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x564cec261468 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec2488f0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec24ac70 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x564cec24abe0 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x564cec261a18 <col:56, line:371:5>
|   |-DeclStmt 0x564cec261798 <line:363:9, col:51>
|   | `-VarDecl 0x564cec2615d0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x564cec261780 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x564cec261750 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x564cec261738 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x564cec261720 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x564cec2616f0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x564cec2616d8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x564cec2616c0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x564cec261690 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x564cec261978 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x564cec261800 <col:9, col:14> 'int64_t':'long' lvalue .x 0x564cec24cf98
|   | | `-MemberExpr 0x564cec2617d0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x564cec24df48
|   | |   `-DeclRefExpr 0x564cec2617b0 <col:9> 'Timestamp' lvalue Var 0x564cec2615d0 't' 'Timestamp'
|   | `-CallExpr 0x564cec261918 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x564cec261900 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x564cec261830 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x564cec24e278 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x564cec261948 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564cec261850 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x564cec24abe0 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x564cec261960 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x564cec2618e0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x564cec2618b0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x564cec261870 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec2431a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x564cec2618c8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x564cec261890 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x564cec261a00 <line:370:9, col:16>
|     `-CXXConstructExpr 0x564cec2619d0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x564cec2619b8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x564cec261998 <col:16> 'Timestamp' lvalue Var 0x564cec2615d0 't' 'Timestamp'
|-CXXMethodDecl 0x564cec24ad68 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x564cec261b58 <col:39, line:377:5>
|   `-ReturnStmt 0x564cec261b48 <line:376:9, col:30>
|     `-ExprWithCleanups 0x564cec261b30 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x564cec261b00 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564cec261ae8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x564cec261aa8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x564cec261a50 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x564cec261a90 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x564cec261a70 <col:29> 'int' 1
|-CXXMethodDecl 0x564cec24ae28 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x564cec261c38 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x564cec261bf0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x564cec261b80 <col:9> '<bound member function type>' ->assign 0x564cec24b028
|     | `-CXXThisExpr 0x564cec261b70 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x564cec261bb0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x564cec261c20 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x564cec261bd0 <col:19> 'int' 0
|-CXXMethodDecl 0x564cec24b028 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x564cec24aed8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564cec24af50 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x564cec253330 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564cec253310 <col:60> 'int' 0
| `-CompoundStmt 0x564cec261e30 <col:63, line:395:5>
|   `-BinaryOperator 0x564cec261e10 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x564cec261c90 <col:9, col:12> 'int64_t':'long' lvalue .x 0x564cec24cf98
|     | `-MemberExpr 0x564cec261c60 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x564cec24df48
|     |   `-CXXThisExpr 0x564cec261c50 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x564cec261df0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x564cec261d80 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x564cec261d20 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x564cec261d08 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x564cec261cf0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x564cec261cc0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564cec24aed8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x564cec261d68 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x564cec261d48 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x564cec261dd8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x564cec261dc0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x564cec261da0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec24af50 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec24b1f8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x564cec24b0e8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564cec24b160 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec261f88 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x564cec261f40 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x564cec261e58 <col:9> '<bound member function type>' ->assign 0x564cec24b028
|     | `-CXXThisExpr 0x564cec261e48 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x564cec261f70 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x564cec261e88 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564cec24b0e8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x564cec261f00 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x564cec261ee8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564cec261ea8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x564cec24c838 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x564cec261f28 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564cec261ec8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec24b160 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec24b3c8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x564cec24b2b8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564cec24b330 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec2620e0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x564cec262098 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x564cec261fb0 <col:9> '<bound member function type>' ->assign 0x564cec24b028
|     | `-CXXThisExpr 0x564cec261fa0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x564cec2620c8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x564cec261fe0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x564cec24b2b8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x564cec262058 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x564cec262040 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564cec262000 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x564cec24c980 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x564cec262080 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564cec262020 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec24b330 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec24b598 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x564cec24b488 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564cec24b500 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x564cec253368 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x564cec253348 <col:57> 'int' 0
| `-DeprecatedAttr 0x564cec24b648 <col:75> "" ""
|-CXXMethodDecl 0x564cec24b7d8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x564cec24b6c8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564cec24b740 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564cec24b888 <col:74> "" ""
|-CXXMethodDecl 0x564cec24ba18 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x564cec24b908 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x564cec24b980 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564cec24bac8 <col:74> "" ""
|-CXXMethodDecl 0x564cec24bb58 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x564cec24bbf8 <col:42> "" ""
|-CXXMethodDecl 0x564cec24bda0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x564cec24bc80 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x564cec24bd00 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x564cec24be70 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x564cec24bf30 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x564cec24bfd0 <col:20>
| `-OptimizeNoneAttr 0x564cec24c028 <col:30>
|-CXXMethodDecl 0x564cec24c070 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x564cec24c130 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x564cec24c1f0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x564cec24c2b0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x564cec24c370 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x564cec24c430 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x564cec24c4f0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x564cec24c5b0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x564cec24c6f0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x564cec24c660 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec262228 <col:58, line:512:5>
|   `-ReturnStmt 0x564cec262218 <line:511:9, col:53>
|     `-BinaryOperator 0x564cec2621f8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x564cec2621c8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x564cec2620f8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec24c660 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x564cec2621e0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x564cec2621a8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x564cec262188 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x564cec262158 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564cec262118 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564cec262170 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564cec262138 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244b30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564cec24c838 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x564cec24c7a8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec262370 <col:58, line:516:5>
|   `-ReturnStmt 0x564cec262360 <line:515:9, col:53>
|     `-BinaryOperator 0x564cec262340 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x564cec262310 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x564cec262240 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec24c7a8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x564cec262328 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x564cec2622f0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x564cec2622d0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x564cec2622a0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564cec262260 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564cec2622b8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564cec262280 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec243350 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564cec24c980 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x564cec24c8f0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec2624b8 <col:58, line:520:5>
|   `-ReturnStmt 0x564cec2624a8 <line:519:9, col:53>
|     `-BinaryOperator 0x564cec262488 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x564cec262458 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x564cec262388 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec24c8f0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x564cec262470 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x564cec262438 <col:23, col:53> 'int'
|           `-BinaryOperator 0x564cec262418 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x564cec2623e8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564cec2623a8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec2431a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564cec262400 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564cec2623c8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564cec24cac8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x564cec24ca38 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec262600 <col:60, line:524:5>
|   `-ReturnStmt 0x564cec2625f0 <line:523:9, col:55>
|     `-BinaryOperator 0x564cec2625d0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x564cec2625a0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x564cec2624d0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec24ca38 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x564cec2625b8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x564cec262580 <col:25, col:55> 'int'
|           `-BinaryOperator 0x564cec262560 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x564cec262530 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564cec2624f0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564cec262548 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564cec262510 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244b30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564cec24cc10 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x564cec24cb80 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec262748 <col:60, line:528:5>
|   `-ReturnStmt 0x564cec262738 <line:527:9, col:55>
|     `-BinaryOperator 0x564cec262718 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x564cec2626e8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x564cec262618 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec24cb80 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x564cec262700 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x564cec2626c8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x564cec2626a8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x564cec262678 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564cec262638 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564cec262690 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564cec262658 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec243350 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x564cec24cd58 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x564cec24ccc8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec262890 <col:60, line:532:5>
|   `-ReturnStmt 0x564cec262880 <line:531:9, col:55>
|     `-BinaryOperator 0x564cec262860 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x564cec262830 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x564cec262760 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec24ccc8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x564cec262848 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x564cec262810 <col:25, col:55> 'int'
|           `-BinaryOperator 0x564cec2627f0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x564cec2627c0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x564cec262780 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec2431a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x564cec2627d8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x564cec2627a0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x564cec244bc0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x564cec24ce00 prev 0x564cec245060 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564cec24cef8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x564cec24cf98 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x564cec2533b8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x564cec253798 <col:11>
| |-CXXConstructorDecl 0x564cec253490 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x564cec253578 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x564cec253ee0 <col:11>
| |-CXXConstructorDecl 0x564cec253618 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x564cec253728 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x564cec255738 <col:11>
| |-CXXDestructorDecl 0x564cec254a48 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x564cec292368 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x564cec292478 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x564cec292d40 <col:11>
| |   `-ReturnStmt 0x564cec292d30 <col:11>
| |     `-UnaryOperator 0x564cec292d18 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x564cec292d08 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x564cec2924e8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x564cec2925f8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x564cec2ef9e0 <col:11>
|     `-ReturnStmt 0x564cec2ef9d0 <col:11>
|       `-UnaryOperator 0x564cec2ef9b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x564cec2ef9a8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x564cec24d000 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x564cec24d100 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x564cec24d300 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec24d0e0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x564cec24d0c0 <col:21> 'int' 0
| |-EnumConstantDecl 0x564cec24d190 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x564cec24d318 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec24d170 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x564cec24d150 <col:23> 'int' 1
| |-EnumConstantDecl 0x564cec24d220 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x564cec24d330 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec24d200 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x564cec24d1e0 <col:23> 'int' 2
| `-EnumConstantDecl 0x564cec24d2b0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x564cec24d348 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec24d290 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x564cec24d270 <col:27> 'int' 3
|-CXXMethodDecl 0x564cec24d388 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x564cec24d450 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x564cec24d658 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x564cec24d500 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x564cec24d580 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x564cec253380 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x564cec24d868 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x564cec24d718 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x564cec24d790 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x564cec24d938 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x564cec24d9f8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x564cec24db68 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x564cec24daa8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x564cec24dc30 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x564cec24dcf0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x564cec24ddb0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x564cec24de70 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x564cec24df10 <line:670:3, col:10> col:3 private
|-FieldDecl 0x564cec24df48 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x564cec24dfb8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x564cec2628a8 <col:27, line:684:5>
|-CXXMethodDecl 0x564cec24e078 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x564cec2628b8 <col:27, line:696:5>
|-CXXMethodDecl 0x564cec24e278 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x564cec24e128 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x564cec24e1a0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec262a40 <col:66, line:700:5>
|   `-ReturnStmt 0x564cec262a30 <line:699:9, col:31>
|     `-CallExpr 0x564cec2629d0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x564cec2629b8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564cec262968 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x564cec0d1168 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x564cec262a00 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x564cec262928 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x564cec24e128 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x564cec262a18 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564cec262948 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec24e1a0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec24e5e8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x564cec24e338 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x564cec24e3b0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x564cec24e428 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x564cec24e4a0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec262d90 <col:64, line:707:5>
|   |-DeclStmt 0x564cec262ad0 <line:704:9, col:24>
|   | `-VarDecl 0x564cec262a68 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x564cec262ce0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x564cec262ae8 <col:9> 'int32_t':'int' lvalue ParmVar 0x564cec24e3b0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x564cec262cc8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x564cec262c60 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x564cec262c48 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x564cec262bc8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x564cec0d7798 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x564cec262c98 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x564cec262b68 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x564cec24e428 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x564cec262cb0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x564cec262b88 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec24e4a0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x564cec262ba8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x564cec262a68 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x564cec262d70 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x564cec262d00 <col:9> 'int32_t':'int' lvalue ParmVar 0x564cec24e338 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x564cec262d58 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x564cec262d40 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x564cec262d20 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x564cec262a68 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x564cec24e888 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x564cec24e6b8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x564cec24e730 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x564cec24e7a8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x564cec24eb28 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x564cec24e950 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x564cec24e9c8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x564cec24ea40 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x564cec252478 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x564cec2523b0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x564cec252678 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x564cec252530 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x564cec2525a8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x564cec252948 <line:717:5, col:73> col:24
| `-FunctionDecl 0x564cec252888 parent 0x564cebd3b488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x564cec252738 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x564cec2527b0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x564cec252b68 <line:718:5, col:72> col:24
| `-FunctionDecl 0x564cec252aa8 parent 0x564cebd3b488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x564cec252998 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x564cec252a10 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x564cec252d30 <line:719:5, col:57> col:29
| `-FunctionDecl 0x564cec252c78 parent 0x564cebd3b488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x564cec252bb8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x564cec252fb8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x564cec252ef8 parent 0x564cebd3b488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x564cec252da8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x564cec252e20 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x564cec2531d8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x564cec253118 parent 0x564cebd3b488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x564cec253008 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x564cec253080 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x564cec2548f0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x564cec2549d8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x564cec24df48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564cec255448 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x564cec255400 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x564cec24df48
| |     `-DeclRefExpr 0x564cec2553e0 <col:7> 'const Timestamp' lvalue ParmVar 0x564cec2549d8 '' 'const Timestamp &'
| `-CompoundStmt 0x564cec2554a8 <col:7>
|-CXXConstructorDecl 0x564cec254b58 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x564cec254c68 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x564cec24df48 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x564cec255748 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x564cec2556f0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x564cec24df48
| |     `-CXXStaticCastExpr 0x564cec2556c0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x564cec255690 <col:7> 'Timestamp' lvalue ParmVar 0x564cec254c68 '' 'Timestamp &&'
| `-CompoundStmt 0x564cec2557a8 <col:7>
|-CXXDestructorDecl 0x564cec254d18 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x564cec2921c0 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x564cec2922c8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x564cec292db8 <col:7>
|   |-CXXMemberCallExpr 0x564cec292d58 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x564cec292c98 <col:7> '<bound member function type>' .operator= 0x564cec292368
|   | | `-MemberExpr 0x564cec292ba8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x564cec24df48
|   | |   `-CXXThisExpr 0x564cec292b98 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x564cec292c68 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x564cec24df48
|   |   `-DeclRefExpr 0x564cec292c48 <col:7> 'const Timestamp' lvalue ParmVar 0x564cec2922c8 '' 'const Timestamp &'
|   `-ReturnStmt 0x564cec292da8 <col:7>
|     `-UnaryOperator 0x564cec292d90 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564cec292d80 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x564cec292668 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x564cec292778 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x564cec2efa58 <col:7>
    |-CXXMemberCallExpr 0x564cec2ef9f8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x564cec2ef960 <col:7> '<bound member function type>' .operator= 0x564cec2924e8
    | | `-MemberExpr 0x564cec2ef830 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x564cec24df48
    | |   `-CXXThisExpr 0x564cec2ef820 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x564cec2ef930 <col:7> 'Timestamp::rep_t' xvalue ._t 0x564cec24df48
    |   `-CXXStaticCastExpr 0x564cec2ef900 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x564cec2ef8d0 <col:7> 'Timestamp' lvalue ParmVar 0x564cec292778 '' 'Timestamp &&'
    `-ReturnStmt 0x564cec2efa48 <col:7>
      `-UnaryOperator 0x564cec2efa30 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x564cec2efa20 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564cec2f4750 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x564cec2f4928 prev 0x564cec2f4750 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x564cec2f49b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x564cec2f49e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564cebd3b580 'int'
|-TypedefDecl 0x564cec2fa430 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x564cec2fa3e0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x564cec2f8d10 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x564cec2f8c10 'type'
|     `-TemplateSpecializationType 0x564cec2f8ba0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x564cec2f8a78 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x564cec2f8a58 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x564cec2f8a38 <col:24> 'unsigned long' 16
|       `-RecordType 0x564cec2f8b80 'char_array<16>'
|         `-ClassTemplateSpecialization 0x564cec2f8a98 'char_array'
|-TypedefDecl 0x564cec2fa4e8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x564cec2fa4b0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x564cec2fa490 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x564cec2fa430 'type'
|     `-ElaboratedType 0x564cec2fa3e0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x564cec2f8d10 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x564cec2f8c10 'type'
|         `-TemplateSpecializationType 0x564cec2f8ba0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x564cec2f8a78 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x564cec2f8a58 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x564cec2f8a38 <col:24> 'unsigned long' 16
|           `-RecordType 0x564cec2f8b80 'char_array<16>'
|             `-ClassTemplateSpecialization 0x564cec2f8a98 'char_array'
|-CXXMethodDecl 0x564cec2fa668 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x564cec2fa578 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x564cec2fa758 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x564cec2fa838 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x564cec2fa838
|-CXXMethodDecl 0x564cec2fab08 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x564cec2faa10 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x564cec2fad48 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x564cec2fabc0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564cec2fac38 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564cec2faf18 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x564cec2fae08 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564cec2fae80 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564cec2fb078 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x564cec2fb148 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x564cec2fb398 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x564cec2fb208 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x564cec2fb280 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564cec2fb5f8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x564cec2fb468 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x564cec2fb4e0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564cec2fb7b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x564cec2fb6c8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564cec2fb978 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x564cec2fb880 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564cec2fba30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564cec2fbae0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x564cec2fbd18 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x564cec2fbb90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564cec2fbc08 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x564cec2fbfb8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x564cec2fbec0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x564cec2fc080 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x564cec2fc0d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x564cec2fc120 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564cec2f3068 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x564cec2f3278 prev 0x564cec2f3068 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564cec2f46c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x564cec2f4670 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x564cec2f4650 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x564cec2f4500 'type'
|     `-SubstTemplateTypeParmType 0x564cec2f4320 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x564cec05dda0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec05dd48 'T'
|       `-RecordType 0x564cec2f3e70 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x564cec2f3d88 'sized_array_memory'
|-FieldDecl 0x564cec2fc170 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x564cec2fc1c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564cec2fc1f8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x564cec2f3310 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564cec0927d0 'T'
|   `-RecordType 0x564cec2f2270 'TimerSet::heap_element'
|     `-CXXRecord 0x564cec2f21e0 'heap_element'
|-TypedefDecl 0x564cec2fc2b8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x564cec2fc280 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x564cec2f3310 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564cec0927d0 'T'
|     `-RecordType 0x564cec2f2270 'TimerSet::heap_element'
|       `-CXXRecord 0x564cec2f21e0 'heap_element'
|-TypedefDecl 0x564cec2fc348 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x564cec2fc310 'const TimerSet::heap_element &'
|   `-QualType 0x564cec2f3311 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x564cec2f3310 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-RecordType 0x564cec2f2270 'TimerSet::heap_element'
|         `-CXXRecord 0x564cec2f21e0 'heap_element'
|-TypedefDecl 0x564cec2fc3d8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x564cec2fc3a0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x564cec2f3310 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564cec0927d0 'T'
|     `-RecordType 0x564cec2f2270 'TimerSet::heap_element'
|       `-CXXRecord 0x564cec2f21e0 'heap_element'
|-TypedefDecl 0x564cec2fc498 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x564cec2fc460 'const TimerSet::heap_element *'
|   `-QualType 0x564cec2f3311 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x564cec2f3310 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-RecordType 0x564cec2f2270 'TimerSet::heap_element'
|         `-CXXRecord 0x564cec2f21e0 'heap_element'
|-TypedefDecl 0x564cec2fd300 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x564cec2fd2b0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x564cec2fd290 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x564cec2fd1c8 'type'
|     `-LValueReferenceType 0x564cec2fd190 'const TimerSet::heap_element &'
|       `-QualType 0x564cec2fcf31 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x564cec2fcf30 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x564cec066490 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x564cec066438 'T'
|           `-RecordType 0x564cec2f2270 'TimerSet::heap_element'
|             `-CXXRecord 0x564cec2f21e0 'heap_element'
|-TypedefDecl 0x564cec2fd368 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x564cec2fc310 'const TimerSet::heap_element &'
|   `-QualType 0x564cec2f3311 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x564cec2f3310 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-RecordType 0x564cec2f2270 'TimerSet::heap_element'
|         `-CXXRecord 0x564cec2f21e0 'heap_element'
|-TypedefDecl 0x564cec2fd3c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564cebd3b580 'int'
|-TypedefDecl 0x564cec2fd428 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x564cec2fc3a0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x564cec2f3310 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564cec0927d0 'T'
|     `-RecordType 0x564cec2f2270 'TimerSet::heap_element'
|       `-CXXRecord 0x564cec2f21e0 'heap_element'
|-TypedefDecl 0x564cec2fd490 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x564cec2fc460 'const TimerSet::heap_element *'
|   `-QualType 0x564cec2f3311 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x564cec2f3310 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-RecordType 0x564cec2f2270 'TimerSet::heap_element'
|         `-CXXRecord 0x564cec2f21e0 'heap_element'
|-EnumDecl 0x564cec2fd4e8 <line:134:5> col:5
| `-EnumConstantDecl 0x564cec2fd5e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564cec2fd5c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564cec0939e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564cec0939c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564cec0939a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x564cec2fd668 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564cec2fd8f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec2fd720 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564cec2fd7c0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x564cec2fdbb8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x564cec2fdaa0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x564cec2fde78 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x564cec2fdd60 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x564cec2fe1c0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x564cec2fe0a0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x564cec2fe4d0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x564cec2fe3b0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x564cec2fe7c0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec2fe608 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564cec2fe680 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x564cec2fe918 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x564cec2fe9f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec2fea50 <col:30> Inherited
|-CXXMethodDecl 0x564cec2fea98 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x564cec2feb48 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec2feba0 <col:30> Inherited
|-CXXMethodDecl 0x564cec2fec68 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x564cec2fed18 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec2fed70 <col:30> Inherited
|-CXXMethodDecl 0x564cec2fedb8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x564cec2fee68 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec2feec0 <col:30> Inherited
|-CXXMethodDecl 0x564cec2fef08 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x564cec2fefb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec2ff010 <col:30> Inherited
|-CXXMethodDecl 0x564cec2ff058 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x564cec2ff108 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec2ff160 <col:30> Inherited
|-CXXMethodDecl 0x564cec2ff188 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564cec2ff238 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564cec2ff2e8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x564cec2ff4a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec2ff398 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564cec2ff410 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x564cec2ff5f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564cec2ff568 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec2ff7a8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x564cec2ff6b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564cec2ff860 <col:20>
| `-OptimizeNoneAttr 0x564cec2ff8b8 <col:30>
|-CXXMethodDecl 0x564cec2ff9d8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x564cec2ff8e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564cec2ffa90 <col:20>
| `-OptimizeNoneAttr 0x564cec2ffae8 <col:30>
|-CXXMethodDecl 0x564cec2ffba0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x564cec2ffb10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec2ffce8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564cec2ffc58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec2ffe18 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x564cec2fff48 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x564cec300018 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x564cec3000e8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x564cec300228 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x564cec300198 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec300370 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564cec3002e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec3004b8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x564cec300428 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564cec300570 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564cec300670 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564cec3005e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564cec300728 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564cec3007e8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x564cec300990 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x564cec300b48 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x564cec300a50 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x564cec301338 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564cec300c00 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x564cec301298 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x564cec301198 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x564cec301418 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564cec301568 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x564cec3014d8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x564cec301620 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564cec301868 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec3016e0 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x564cec301758 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x564cec301a28 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x564cec301938 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x564cec301c78 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x564cec301af0 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x564cec301b68 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x564cec301d38 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564cec301f98 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x564cec301ea0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x564cec302068 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564cec302068

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564cec303590 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x564cec303768 prev 0x564cec303590 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x564cec3037f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x564cec303820 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564cebd3b580 'int'
|-TypedefDecl 0x564cec3053f0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x564cec3053a0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x564cec303cd0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x564cec303bd0 'type'
|     `-TemplateSpecializationType 0x564cec303b60 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x564cec303a40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x564cec303a20 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x564cec303a00 <col:24> 'unsigned long' 8
|       `-RecordType 0x564cec303b40 'char_array<8>'
|         `-ClassTemplateSpecialization 0x564cec303a60 'char_array'
|-TypedefDecl 0x564cec3054a8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x564cec305470 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x564cec305450 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x564cec3053f0 'type'
|     `-ElaboratedType 0x564cec3053a0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x564cec303cd0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x564cec303bd0 'type'
|         `-TemplateSpecializationType 0x564cec303b60 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x564cec303a40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x564cec303a20 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x564cec303a00 <col:24> 'unsigned long' 8
|           `-RecordType 0x564cec303b40 'char_array<8>'
|             `-ClassTemplateSpecialization 0x564cec303a60 'char_array'
|-CXXMethodDecl 0x564cec305628 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x564cec305538 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x564cec305718 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x564cec3057f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x564cec3057f8
|-CXXMethodDecl 0x564cec305ac8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x564cec3059d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x564cec305d08 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x564cec305b80 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564cec305bf8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564cec305ed8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x564cec305dc8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564cec305e40 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564cec306038 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x564cec306108 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x564cec306358 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x564cec3061c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x564cec306240 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564cec3065b8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x564cec306428 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x564cec3064a0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564cec306778 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x564cec306688 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564cec306938 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x564cec306840 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564cec3069f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564cec306aa0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x564cec306cd8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x564cec306b50 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564cec306bc8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x564cec306f78 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x564cec306e80 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x564cec307040 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x564cec307090 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x564cec3070e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564cec3021b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x564cec3023b8 prev 0x564cec3021b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564cec303500 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x564cec3034b0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x564cec303490 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x564cec303340 'type'
|     `-SubstTemplateTypeParmType 0x564cec303160 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x564cec05dda0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec05dd48 'T'
|       `-RecordType 0x564cec302cb0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x564cec302bc8 'sized_array_memory'
|-FieldDecl 0x564cec307130 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x564cec307180 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564cec3071b8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x564cec302450 'Timer *' sugar
|   |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564cec0927d0 'T'
|   `-PointerType 0x564cec2afce0 'Timer *'
|     `-RecordType 0x564cec2aee30 'Timer'
|       `-CXXRecord 0x564cec2e13c8 'Timer'
|-TypedefDecl 0x564cec307278 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x564cec307240 'Timer *&'
|   `-SubstTemplateTypeParmType 0x564cec302450 'Timer *' sugar
|     |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564cec0927d0 'T'
|     `-PointerType 0x564cec2afce0 'Timer *'
|       `-RecordType 0x564cec2aee30 'Timer'
|         `-CXXRecord 0x564cec2e13c8 'Timer'
|-TypedefDecl 0x564cec307338 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x564cec307300 'Timer *const &'
|   `-QualType 0x564cec302451 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x564cec302450 'Timer *' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-PointerType 0x564cec2afce0 'Timer *'
|         `-RecordType 0x564cec2aee30 'Timer'
|           `-CXXRecord 0x564cec2e13c8 'Timer'
|-TypedefDecl 0x564cec3073f8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x564cec3073c0 'Timer **'
|   `-SubstTemplateTypeParmType 0x564cec302450 'Timer *' sugar
|     |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564cec0927d0 'T'
|     `-PointerType 0x564cec2afce0 'Timer *'
|       `-RecordType 0x564cec2aee30 'Timer'
|         `-CXXRecord 0x564cec2e13c8 'Timer'
|-TypedefDecl 0x564cec3074b8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x564cec307480 'Timer *const *'
|   `-QualType 0x564cec302451 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x564cec302450 'Timer *' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-PointerType 0x564cec2afce0 'Timer *'
|         `-RecordType 0x564cec2aee30 'Timer'
|           `-CXXRecord 0x564cec2e13c8 'Timer'
|-TypedefDecl 0x564cec308090 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x564cec308040 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x564cec308020 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x564cec307fb0 'type'
|     `-SubstTemplateTypeParmType 0x564cec307d70 'Timer *' sugar
|       |-TemplateTypeParmType 0x564cec066bc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec066b70 'T'
|       `-PointerType 0x564cec2afce0 'Timer *'
|         `-RecordType 0x564cec2aee30 'Timer'
|           `-CXXRecord 0x564cec2e13c8 'Timer'
|-TypedefDecl 0x564cec3080f8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x564cec307300 'Timer *const &'
|   `-QualType 0x564cec302451 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x564cec302450 'Timer *' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-PointerType 0x564cec2afce0 'Timer *'
|         `-RecordType 0x564cec2aee30 'Timer'
|           `-CXXRecord 0x564cec2e13c8 'Timer'
|-TypedefDecl 0x564cec308150 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564cebd3b580 'int'
|-TypedefDecl 0x564cec3081b8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x564cec3073c0 'Timer **'
|   `-SubstTemplateTypeParmType 0x564cec302450 'Timer *' sugar
|     |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564cec0927d0 'T'
|     `-PointerType 0x564cec2afce0 'Timer *'
|       `-RecordType 0x564cec2aee30 'Timer'
|         `-CXXRecord 0x564cec2e13c8 'Timer'
|-TypedefDecl 0x564cec308220 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x564cec307480 'Timer *const *'
|   `-QualType 0x564cec302451 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x564cec302450 'Timer *' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-PointerType 0x564cec2afce0 'Timer *'
|         `-RecordType 0x564cec2aee30 'Timer'
|           `-CXXRecord 0x564cec2e13c8 'Timer'
|-EnumDecl 0x564cec308278 <line:134:5> col:5
| `-EnumConstantDecl 0x564cec308370 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564cec308350 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564cec0939e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564cec0939c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564cec0939a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x564cec3083f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564cec308688 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec3084b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564cec308550 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x564cec3089a0 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x564cec308830 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x564cec308c58 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x564cec308b40 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x564cec308fa0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x564cec308e80 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x564cec3092b0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x564cec309190 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x564cec3095a0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec3093e8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564cec309460 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x564cec3096f8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x564cec3097d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec309830 <col:30> Inherited
|-CXXMethodDecl 0x564cec309878 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x564cec309928 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec309980 <col:30> Inherited
|-CXXMethodDecl 0x564cec309a48 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x564cec309af8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec309b50 <col:30> Inherited
|-CXXMethodDecl 0x564cec309b98 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x564cec309c48 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec309ca0 <col:30> Inherited
|-CXXMethodDecl 0x564cec309ce8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x564cec309d98 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec309df0 <col:30> Inherited
|-CXXMethodDecl 0x564cec309e38 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x564cec309ee8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec309f40 <col:30> Inherited
|-CXXMethodDecl 0x564cec309f68 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564cec30a018 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564cec30a0c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564cec30a288 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec30a178 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564cec30a1f0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x564cec30a3d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564cec30a348 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec30a588 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x564cec30a490 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564cec30a640 <col:20>
| `-OptimizeNoneAttr 0x564cec30a698 <col:30>
|-CXXMethodDecl 0x564cec30a7b8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x564cec30a6c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564cec30a870 <col:20>
| `-OptimizeNoneAttr 0x564cec30a8c8 <col:30>
|-CXXMethodDecl 0x564cec30a980 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x564cec30a8f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec30aac8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564cec30aa38 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec30abf8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x564cec30ad28 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x564cec30adf8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x564cec30aec8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x564cec30b008 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x564cec30af78 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec30b150 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564cec30b0c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec30b298 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x564cec30b208 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564cec30b350 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564cec30b450 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564cec30b3c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564cec30b508 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564cec30b5c8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x564cec30b6c8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x564cec30b848 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x564cec30b788 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x564cec30c008 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564cec30b900 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x564cec30bf68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x564cec30be68 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x564cec30c0e8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564cec30c238 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x564cec30c1a8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x564cec30c2f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564cec30c538 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec30c3b0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x564cec30c428 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x564cec30c6f8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x564cec30c608 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x564cec30c948 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x564cec30c7c0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x564cec30c838 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x564cec30ca08 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564cec30cc68 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x564cec30cb70 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x564cec30cd38 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564cec30cd38

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec239160 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564cec239278 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x564cec239308 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x564cec239390 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x564cec239480 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x564cec239580 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x564cec239640 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x564cec239700 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x564cec239828 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x564cec239828
| `-ParmVarDecl 0x564cec239938 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x564cec30dae8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x564cec30dae8
  `-ParmVarDecl 0x564cec30dbf8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec2f1360 prev 0x564cec2ed4e8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x564cec2f1458 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x564cec2f14e8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x564cec2f1570 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x564cec2f1668 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x564cec30df60 <col:43, col:67>
|   `-ReturnStmt 0x564cec30df50 <col:45, col:52>
|     `-CXXConstructExpr 0x564cec30df20 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x564cec30def0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x564cec2f2e50
|         `-CXXThisExpr 0x564cec30dee0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x564cec2f1728 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x564cec2f1930 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x564cec2f17d8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x564cec2f1850 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x564cec2f1a28 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x564cec2f1af0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x564cec30dfe0 <col:39, col:67>
|   `-ReturnStmt 0x564cec30dfd0 <col:41, col:48>
|     `-ImplicitCastExpr 0x564cec30dfb8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x564cec30df88 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x564cec2f2f38
|         `-CXXThisExpr 0x564cec30df78 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x564cec2f1bb8 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x564cec30e060 <col:35, col:59>
|   `-ReturnStmt 0x564cec30e050 <col:37, col:44>
|     `-ImplicitCastExpr 0x564cec30e038 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x564cec30e008 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x564cec2f2fa0
|         `-CXXThisExpr 0x564cec30dff8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x564cec2f1d00 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x564cec2f1c70 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x564cec2f1e48 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x564cec2f1db8 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x564cec2f2048 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x564cec2f1f00 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x564cec2f1f78 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x564cec2f2118 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x564cec2f21b8 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x564cec2f21e0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x564cec2f22f8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x564cec2f2398 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x564cec2f23f8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x564cec2f2528 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x564cec2f2458 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x564cec2f2398 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x564cec30e138 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x564cec30e0e0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x564cec30e0b0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x564cec2e2a08
|   |       `-ImplicitCastExpr 0x564cec30e100 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x564cec30e098 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x564cec30e078 <col:17> 'Timer *' lvalue ParmVar 0x564cec2f2458 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x564cec2f23f8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x564cec30e1d0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x564cec30e190 <col:41> 'Timer *' lvalue ParmVar 0x564cec2f2458 't_' 'Timer *'
|   `-CompoundStmt 0x564cec30e220 <col:45, line:44:2>
|-CXXRecordDecl 0x564cec2f25f0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x564cec2f2708 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x564cec2f2958 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x564cec2f27d8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x564cec2f2850 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x564cec30e350 <col:71, line:49:2>
|     `-ReturnStmt 0x564cec30e340 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x564cec30e308 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x564cec30e2f0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x564cec30e2d0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x564cec26fa18 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x564cec30e250 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x564cec2f2398
|         | `-DeclRefExpr 0x564cec30e230 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x564cec2f27d8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x564cec30e2a0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x564cec2f2398
|           `-DeclRefExpr 0x564cec30e280 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x564cec2f2850 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x564cec2f2a20 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x564cec2f2b38 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x564cec2f2d58 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x564cec2f2bd8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x564cec2f2c50 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x564cec30e558 <col:63, line:54:2>
|     `-BinaryOperator 0x564cec30e538 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x564cec30e3e8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x564cec2e4a18
|       | `-ImplicitCastExpr 0x564cec30e3d0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x564cec30e3a0 <col:6, col:9> 'Timer *' lvalue ->t 0x564cec2f23f8
|       |     `-ImplicitCastExpr 0x564cec30e388 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x564cec30e368 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x564cec2f2c50 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x564cec30e520 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x564cec30e500 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x564cec30e4a8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x564cec30e488 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x564cec30e458 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x564cec30e418 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x564cec2f2c50 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x564cec30e470 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x564cec30e438 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x564cec2f2bd8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x564cec30e4e8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x564cec30e4c8 <col:39> 'int' 1
|-FieldDecl 0x564cec2f2e50 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x564cec2f2ec0 <col:44, col:53> aligned
|   `-ConstantExpr 0x564cec2f2ea0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x564cec2f2e20 <col:52> 'int' 8
|-FieldDecl 0x564cec2f2f38 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x564cec2f2fa0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x564cec2f3008 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x564cec302150 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x564cec30ce20 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x564cec30ce80 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x564cec30cee0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x564cec30cf40 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec30d030 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x564cec30cfa0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x564cec30d0f8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x564cec30e9b0 <col:29, line:81:5>
|   `-IfStmt 0x564cec30e988 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x564cec30e640 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x564cec30e5e0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x564cec30e5b0 <col:6, col:18> '<bound member function type>' .size 0x564cec2ff188
|     |     `-ImplicitCastExpr 0x564cec30e628 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x564cec30e580 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x564cec302150
|     |         `-CXXThisExpr 0x564cec30e570 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x564cec30e830 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x564cec30e818 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x564cec30e7f8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x564cec2921c0 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x564cec30e668 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x564cec2f2e50
|     | | `-CXXThisExpr 0x564cec30e658 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x564cec30e7e0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x564cec30e7b0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x564cec2f2398
|     |     `-CXXMemberCallExpr 0x564cec30e788 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x564cec30e758 <col:22, col:34> '<bound member function type>' .unchecked_at 0x564cec300228
|     |       | `-MemberExpr 0x564cec30e6a8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x564cec302150
|     |       |   `-CXXThisExpr 0x564cec30e698 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x564cec30e738 <col:47> 'int' 0
|     `-ExprWithCleanups 0x564cec30e970 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x564cec30e938 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x564cec30e920 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x564cec30e900 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x564cec292668 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x564cec30e878 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x564cec2f2e50
|         | `-CXXThisExpr 0x564cec30e868 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x564cec30e8e8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x564cec30e8b8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x564cec30d238 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x564cec30d1a8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x564cec30d300 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x564cec30d3c0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x564cec30d480 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x564cec30d570 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x564cec30d5d8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x564cec30d5d8
| `-ParmVarDecl 0x564cec30d6e8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x564cec30d788 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x564cec30d788
| `-ParmVarDecl 0x564cec30d898 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x564cec30d938 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x564cec30d938
| `-ParmVarDecl 0x564cec30da48 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x564cec30dc68 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x564cec30dc68
| `-ParmVarDecl 0x564cec30dd78 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x564cec30de00 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x564cec30de00

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564cec344418 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x564cec344628 prev 0x564cec344418 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564cec345700 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x564cec3456b0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x564cec345690 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x564cec345540 'type'
|     `-SubstTemplateTypeParmType 0x564cec303160 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x564cec05dda0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec05dd48 'T'
|       `-RecordType 0x564cec302cb0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x564cec302bc8 'sized_array_memory'
|-FieldDecl 0x564cec345800 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x564cec345850 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564cec345888 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x564cec3446c0 'pollfd' sugar
|   |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564cec0927d0 'T'
|   `-RecordType 0x564cec3424d0 'pollfd'
|     `-CXXRecord 0x564cec342440 'pollfd'
|-TypedefDecl 0x564cec345948 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x564cec345910 'pollfd &'
|   `-SubstTemplateTypeParmType 0x564cec3446c0 'pollfd' sugar
|     |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564cec0927d0 'T'
|     `-RecordType 0x564cec3424d0 'pollfd'
|       `-CXXRecord 0x564cec342440 'pollfd'
|-TypedefDecl 0x564cec345a08 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x564cec3459d0 'const pollfd &'
|   `-QualType 0x564cec3446c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x564cec3446c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-RecordType 0x564cec3424d0 'pollfd'
|         `-CXXRecord 0x564cec342440 'pollfd'
|-TypedefDecl 0x564cec345a98 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x564cec345a60 'pollfd *'
|   `-SubstTemplateTypeParmType 0x564cec3446c0 'pollfd' sugar
|     |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564cec0927d0 'T'
|     `-RecordType 0x564cec3424d0 'pollfd'
|       `-CXXRecord 0x564cec342440 'pollfd'
|-TypedefDecl 0x564cec345b58 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x564cec345b20 'const pollfd *'
|   `-QualType 0x564cec3446c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x564cec3446c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-RecordType 0x564cec3424d0 'pollfd'
|         `-CXXRecord 0x564cec342440 'pollfd'
|-TypedefDecl 0x564cec346730 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x564cec3466e0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x564cec3466c0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x564cec346650 'type'
|     `-SubstTemplateTypeParmType 0x564cec346410 'pollfd' sugar
|       |-TemplateTypeParmType 0x564cec066bc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec066b70 'T'
|       `-RecordType 0x564cec3424d0 'pollfd'
|         `-CXXRecord 0x564cec342440 'pollfd'
|-TypedefDecl 0x564cec346798 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x564cec3459d0 'const pollfd &'
|   `-QualType 0x564cec3446c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x564cec3446c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-RecordType 0x564cec3424d0 'pollfd'
|         `-CXXRecord 0x564cec342440 'pollfd'
|-TypedefDecl 0x564cec3467f0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564cebd3b580 'int'
|-TypedefDecl 0x564cec346858 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x564cec345a60 'pollfd *'
|   `-SubstTemplateTypeParmType 0x564cec3446c0 'pollfd' sugar
|     |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564cec0927d0 'T'
|     `-RecordType 0x564cec3424d0 'pollfd'
|       `-CXXRecord 0x564cec342440 'pollfd'
|-TypedefDecl 0x564cec3468c0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x564cec345b20 'const pollfd *'
|   `-QualType 0x564cec3446c1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x564cec3446c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-RecordType 0x564cec3424d0 'pollfd'
|         `-CXXRecord 0x564cec342440 'pollfd'
|-EnumDecl 0x564cec346918 <line:134:5> col:5
| `-EnumConstantDecl 0x564cec346a10 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564cec3469f0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564cec0939e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564cec0939c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564cec0939a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x564cec346a98 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564cec346d28 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec346b50 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564cec346bf0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x564cec346fe8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x564cec346ed0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x564cec3472a8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x564cec347190 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x564cec3475f0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x564cec3474d0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x564cec347900 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x564cec3477e0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x564cec347bf0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec347a38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564cec347ab0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x564cec347d48 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x564cec347e28 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec347e80 <col:30> Inherited
|-CXXMethodDecl 0x564cec347ec8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x564cec347f78 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec347fd0 <col:30> Inherited
|-CXXMethodDecl 0x564cec348098 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x564cec348148 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec3481a0 <col:30> Inherited
|-CXXMethodDecl 0x564cec3481e8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x564cec348298 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec3482f0 <col:30> Inherited
|-CXXMethodDecl 0x564cec348338 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x564cec3483e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec348440 <col:30> Inherited
|-CXXMethodDecl 0x564cec348488 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x564cec348538 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec348590 <col:30> Inherited
|-CXXMethodDecl 0x564cec3485b8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564cec348668 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564cec348718 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564cec3488d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec3487c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564cec348840 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x564cec348a28 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564cec348998 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec348bd8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x564cec348ae0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564cec348c90 <col:20>
| `-OptimizeNoneAttr 0x564cec348ce8 <col:30>
|-CXXMethodDecl 0x564cec348e08 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x564cec348d10 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564cec348ec0 <col:20>
| `-OptimizeNoneAttr 0x564cec348f18 <col:30>
|-CXXMethodDecl 0x564cec348fd0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x564cec348f40 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec349118 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564cec349088 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec349248 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x564cec349378 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x564cec349448 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x564cec349518 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x564cec349658 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x564cec3495c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec3497a0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564cec349710 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec3498e8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x564cec349858 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564cec3499a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564cec349aa0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564cec349a10 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564cec349b58 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564cec349c18 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x564cec349d18 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x564cec349ec8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x564cec349dd8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x564cec34a6a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564cec349f80 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x564cec34a608 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x564cec34a508 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x564cec34a788 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564cec34a8d8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x564cec34a848 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x564cec34a990 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564cec34abd8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec34aa50 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x564cec34aac8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x564cec34ad98 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x564cec34aca8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x564cec34afe8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x564cec34ae60 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x564cec34aed8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x564cec34b0a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564cec34b308 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x564cec34b210 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x564cec34b3d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564cec34b3d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564cec34c9c0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x564cec34cb98 prev 0x564cec34c9c0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x564cec34cc28 <col:46, col:52> col:46 public
|-TypedefDecl 0x564cec34cc50 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564cebd3b580 'int'
|-TypedefDecl 0x564cec34e820 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x564cec34e7d0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x564cec34d100 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x564cec34d000 'type'
|     `-TemplateSpecializationType 0x564cec34cf90 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x564cec34ce70 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x564cec34ce50 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x564cec34ce30 <col:24> 'unsigned long' 24
|       `-RecordType 0x564cec34cf70 'char_array<24>'
|         `-ClassTemplateSpecialization 0x564cec34ce90 'char_array'
|-TypedefDecl 0x564cec34e8d8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x564cec34e8a0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x564cec34e880 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x564cec34e820 'type'
|     `-ElaboratedType 0x564cec34e7d0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x564cec34d100 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x564cec34d000 'type'
|         `-TemplateSpecializationType 0x564cec34cf90 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x564cec34ce70 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x564cec34ce50 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x564cec34ce30 <col:24> 'unsigned long' 24
|           `-RecordType 0x564cec34cf70 'char_array<24>'
|             `-ClassTemplateSpecialization 0x564cec34ce90 'char_array'
|-CXXMethodDecl 0x564cec34ea58 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x564cec34e968 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x564cec34eb48 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x564cec34ec28 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x564cec34ec28
|-CXXMethodDecl 0x564cec34eef8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x564cec34ee00 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x564cec34f138 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x564cec34efb0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564cec34f028 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564cec34f308 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x564cec34f1f8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564cec34f270 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564cec34f468 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x564cec34f538 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x564cec34f788 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x564cec34f5f8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x564cec34f670 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564cec34f9e8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x564cec34f858 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x564cec34f8d0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564cec34fba8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x564cec34fab8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564cec34fd68 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x564cec34fc70 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564cec34fe20 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564cec34fed0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x564cec350108 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x564cec34ff80 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x564cec34fff8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x564cec3503a8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x564cec3502b0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x564cec350470 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x564cec3504c0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x564cec350510 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564cec34b520 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x564cec34b728 prev 0x564cec34b520 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x564cec34c930 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x564cec34c8e0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x564cec34c8c0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x564cec34c770 'type'
|     `-SubstTemplateTypeParmType 0x564cec34c590 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x564cec05dda0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec05dd48 'T'
|       `-RecordType 0x564cec34c0e0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x564cec34c000 'sized_array_memory'
|-FieldDecl 0x564cec350560 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x564cec3505b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x564cec3505e8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x564cec34b7c0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x564cec0927d0 'T'
|   `-RecordType 0x564cec343f80 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x564cec343ef0 'SelectorInfo'
|-TypedefDecl 0x564cec3506a8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x564cec350670 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x564cec34b7c0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564cec0927d0 'T'
|     `-RecordType 0x564cec343f80 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x564cec343ef0 'SelectorInfo'
|-TypedefDecl 0x564cec350768 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x564cec350730 'const SelectSet::SelectorInfo &'
|   `-QualType 0x564cec34b7c1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x564cec34b7c0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-RecordType 0x564cec343f80 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x564cec343ef0 'SelectorInfo'
|-TypedefDecl 0x564cec3507f8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x564cec3507c0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x564cec34b7c0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564cec0927d0 'T'
|     `-RecordType 0x564cec343f80 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x564cec343ef0 'SelectorInfo'
|-TypedefDecl 0x564cec3508b8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x564cec350880 'const SelectSet::SelectorInfo *'
|   `-QualType 0x564cec34b7c1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x564cec34b7c0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-RecordType 0x564cec343f80 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x564cec343ef0 'SelectorInfo'
|-TypedefDecl 0x564cec351510 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x564cec3514c0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x564cec3514a0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x564cec3513d8 'type'
|     `-LValueReferenceType 0x564cec3513a0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x564cec351141 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x564cec351140 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x564cec066490 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x564cec066438 'T'
|           `-RecordType 0x564cec343f80 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x564cec343ef0 'SelectorInfo'
|-TypedefDecl 0x564cec351578 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x564cec350730 'const SelectSet::SelectorInfo &'
|   `-QualType 0x564cec34b7c1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x564cec34b7c0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-RecordType 0x564cec343f80 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x564cec343ef0 'SelectorInfo'
|-TypedefDecl 0x564cec3515d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x564cebd3b580 'int'
|-TypedefDecl 0x564cec351638 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x564cec3507c0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x564cec34b7c0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x564cec0927d0 'T'
|     `-RecordType 0x564cec343f80 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x564cec343ef0 'SelectorInfo'
|-TypedefDecl 0x564cec3516a0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x564cec350880 'const SelectSet::SelectorInfo *'
|   `-QualType 0x564cec34b7c1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x564cec34b7c0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x564cec092820 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x564cec0927d0 'T'
|       `-RecordType 0x564cec343f80 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x564cec343ef0 'SelectorInfo'
|-EnumDecl 0x564cec3516f8 <line:134:5> col:5
| `-EnumConstantDecl 0x564cec3517f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x564cec3517d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x564cec0939e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x564cec0939c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x564cec0939a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x564cec351878 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x564cec351b08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec351930 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564cec3519d0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x564cec351dc8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x564cec351cb0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x564cec352088 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x564cec351f70 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x564cec352400 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x564cec3522e0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x564cec352710 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x564cec3525f0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x564cec352a00 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec352848 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564cec3528c0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x564cec352b58 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x564cec352c38 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec352c90 <col:30> Inherited
|-CXXMethodDecl 0x564cec352cd8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x564cec352d88 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec352de0 <col:30> Inherited
|-CXXMethodDecl 0x564cec352ea8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x564cec352f58 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec352fb0 <col:30> Inherited
|-CXXMethodDecl 0x564cec352ff8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x564cec3530a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec353100 <col:30> Inherited
|-CXXMethodDecl 0x564cec353148 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x564cec3531f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec353250 <col:30> Inherited
|-CXXMethodDecl 0x564cec353298 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x564cec353348 <col:20> Inherited
| `-OptimizeNoneAttr 0x564cec3533a0 <col:30> Inherited
|-CXXMethodDecl 0x564cec3533c8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564cec353478 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x564cec353528 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x564cec3536e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec3535d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x564cec353650 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x564cec353838 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x564cec3537a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec3539e8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x564cec3538f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564cec353aa0 <col:20>
| `-OptimizeNoneAttr 0x564cec353af8 <col:30>
|-CXXMethodDecl 0x564cec353c18 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x564cec353b20 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x564cec353cd0 <col:20>
| `-OptimizeNoneAttr 0x564cec353d28 <col:30>
|-CXXMethodDecl 0x564cec353de0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x564cec353d50 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec353f28 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564cec353e98 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec354058 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x564cec354188 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x564cec354258 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x564cec354328 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x564cec354468 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x564cec3543d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec3545b0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x564cec354520 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x564cec3546f8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x564cec354668 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564cec3547b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x564cec3548b0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x564cec354820 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x564cec354968 <col:60> Inherited "" ""
|-CXXMethodDecl 0x564cec354a28 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x564cec354b28 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x564cec354cd8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x564cec354be8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x564cec355498 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x564cec354d90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x564cec3553f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x564cec3552f8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x564cec355578 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x564cec3556c8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x564cec355638 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x564cec355780 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x564cec3559c8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x564cec355840 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x564cec3558b8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x564cec355b88 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x564cec355a98 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x564cec355dd8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x564cec355c50 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x564cec355cc8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x564cec355e98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x564cec3560f8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x564cec356000 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x564cec3561c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x564cec3561c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec3430d0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564cec3431e8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x564cec343278 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x564cec343300 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x564cec3433f0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x564cec3433f0
|-CXXMethodDecl 0x564cec3434f0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x564cec343790 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x564cec3435a8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x564cec343620 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x564cec3436a0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x564cec343a00 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x564cec343860 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x564cec3438d8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x564cec343958 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x564cec343b58 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x564cec343ac8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x564cec343c20 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x564cec357878 <col:34, line:50:5>
|   |-BinaryOperator 0x564cec357248 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x564cec357208 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x564cec3443a8
|   | | `-CXXThisExpr 0x564cec3571f8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x564cec357238 <col:23> 'bool' true
|   `-CallExpr 0x564cec357850 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x564cec357838 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x564cec3577b8 <col:2> 'void (long)' lvalue Function 0x564cec3576b8 'ignore_result' 'void (long)' (FunctionTemplate 0x564cebf56e88 'ignore_result')
|     `-CallExpr 0x564cec357460 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x564cec357448 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564cec3573c8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x564cec31d5d8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x564cec357498 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x564cec357370 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x564cec357358 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x564cec357308 <col:22> 'int [2]' lvalue ->_wake_pipe 0x564cec344348
|       |   |   `-CXXThisExpr 0x564cec3572f8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x564cec357338 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x564cec3574c8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x564cec3574b0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x564cec357390 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x564cec3574e0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x564cec3573a8 <col:41> 'int' 1
|-CXXMethodDecl 0x564cec343d60 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x564cec343cd0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x564cec343e28 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x564cec343ec8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x564cec343ef0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x564cec344008 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x564cec3440a8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x564cec344108 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x564cec344170 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x564cec344220 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x564cec3440a8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x564cec3578d8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x564cec357898 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x564cec344108 'write' 'Element *'
|   | `-ImplicitCastExpr 0x564cec357958 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x564cec357918 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x564cec344170 'pollfd' 'int'
|   | `-UnaryOperator 0x564cec3579b8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x564cec357998 <col:35> 'int' 1
|   `-CompoundStmt 0x564cec357a30 <line:64:2, line:65:2>
|-FieldDecl 0x564cec344348 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x564cec3443a8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x564cec34b4c0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x564cec3562b0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x564cec3564e8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x564cec356318 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x564cec356390 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x564cec356408 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x564cec3566d0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x564cec3565b8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x564cec356638 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x564cec356918 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x564cec356798 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x564cec356818 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x564cec356b28 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x564cec3569d8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x564cec356a50 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x564cec356c78 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x564cec356be8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x564cec356d40 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x564cec356e00 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x564cec356ec8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x564cec356ec8
| `-ParmVarDecl 0x564cec356fd8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x564cec357078 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x564cec357078
  `-ParmVarDecl 0x564cec357188 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec2380c8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564cec2381e8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x564cec238278 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x564cec238300 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x564cec2383f0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x564cec2384f0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x564cec2385b0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x564cec238670 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x564cec238758 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x564cec238878 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x564cec238878
| `-ParmVarDecl 0x564cec238988 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x564cec35e848 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x564cec35e848
  `-ParmVarDecl 0x564cec35e958 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec2df138 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564cec2df258 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x564cec2df2f8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x564cec2df358 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x564cec35de48 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x564cec35de48
| `-ParmVarDecl 0x564cec35df58 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x564cec35dff8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x564cec35dff8
| `-ParmVarDecl 0x564cec35e108 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x564cec35e178 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x564cec35e178
|-CXXMethodDecl 0x564cec35e9f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x564cec35e9f8
| `-ParmVarDecl 0x564cec35eb08 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x564cec35eb78 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x564cec35eb78
| `-ParmVarDecl 0x564cec35ec88 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x564cec3672f8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x564cec3673d0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec239fc0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564cec23a0d8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x564cec23a168 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x564cec23a1f0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x564cec23a2b0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x564cebd3b580 'int'
|-CXXMethodDecl 0x564cec23a378 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x564cec23a418 <col:45> always_inline
|-CXXMethodDecl 0x564cec23a548 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x564cec23a480 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x564cec23a5f0 <col:49> always_inline
|-CXXConstructorDecl 0x564cec23a6e8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x564cec23a6e8
| `-ParmVarDecl 0x564cec23a7f8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x564cec23a898 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x564cec23a898
| `-ParmVarDecl 0x564cec23a9a8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x564cec35e260 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x564cec35e260
|-CXXMethodDecl 0x564cec35ed28 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x564cec35ed28
| `-ParmVarDecl 0x564cec35ee38 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x564cec35eea8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x564cec35eea8
  `-ParmVarDecl 0x564cec35efb8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec357ea0 prev 0x564cec343040 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x564cec357f98 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x564cec358028 <col:22, col:28> col:22 public
|-EnumDecl 0x564cec358050 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x564cec358168 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x564cec358148 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x564cec358130 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x564cec358110 <col:32> 'int' 1
| `-EnumConstantDecl 0x564cec358210 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x564cec3581f0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x564cec3581d8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x564cec3581b8 <col:53> 'int' 1000
|-CXXMethodDecl 0x564cec3582b0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x564cec358370 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x564cec358458 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x564cec35f078 <col:34, col:52>
|   `-ReturnStmt 0x564cec35f068 <col:36, col:43>
|     `-MemberExpr 0x564cec35f038 <col:43> 'TimerSet' lvalue ->_timers 0x564cec35a128
|       `-CXXThisExpr 0x564cec35f028 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x564cec358548 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x564cec35f0e0 <col:46, col:64>
|   `-ReturnStmt 0x564cec35f0d0 <col:48, col:55>
|     `-MemberExpr 0x564cec35f0a0 <col:55> 'const TimerSet' lvalue ->_timers 0x564cec35a128
|       `-CXXThisExpr 0x564cec35f090 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x564cec358638 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x564cec35f148 <col:36, col:55>
|   `-ReturnStmt 0x564cec35f138 <col:38, col:45>
|     `-MemberExpr 0x564cec35f108 <col:45> 'SelectSet' lvalue ->_selects 0x564cec35a188
|       `-CXXThisExpr 0x564cec35f0f8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x564cec358728 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x564cec35f1b0 <col:48, col:67>
|   `-ReturnStmt 0x564cec35f1a0 <col:50, col:57>
|     `-MemberExpr 0x564cec35f170 <col:57> 'const SelectSet' lvalue ->_selects 0x564cec35a188
|       `-CXXThisExpr 0x564cec35f160 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x564cec3587e8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x564cec3588d8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x564cec358a48 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x564cec358988 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x564cec358b10 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x564cec358f58 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x564cec358bc0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x564cec358e40 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x564cec359028 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x564cec3590e8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x564cec3591a8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x564cec3592e8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x564cec359258 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x564cec3593b0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x564cec359470 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x564cec359530 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x564cec3595f0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x564cec359730 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x564cec3596a0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x564cec3597f8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x564cec3598b8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x564cec359958 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x564cec359a20 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564cec359a70 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564cec359ac0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564cec359b10 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564cec359b60 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564cec359bb0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564cec359c00 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564cec359c50 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564cec359ca0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x564cec359cf0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x564cec359d40 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x564cec359e38 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x564cec359da8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x564cec359f88 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x564cec359ef8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x564cec35a030 <line:104:3, col:10> col:3 private
|-FieldDecl 0x564cec35a068 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x564cec35a0c8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x564cec35a128 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x564cec35a188 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x564cec35c420 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x564cec35c490 <col:40, col:50> aligned
|   `-ConstantExpr 0x564cec35c470 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x564cec35a1d8 <col:48> 'int' 64
|-FieldDecl 0x564cec35c500 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x564cec35c560 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x564cec35c660 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x564cec35c770 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x564cec35c7d0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x564cec35c850 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x564cec35c8c0 <col:36, col:46> aligned
|   `-ConstantExpr 0x564cec35c8a0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x564cec35c820 <col:44> 'int' 64
|-FieldDecl 0x564cec35c938 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x564cec35c998 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x564cec35c9e8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x564cec35ca28 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x564cec35ca90 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x564cec35cae0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x564cec35cc88 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x564cec35cb18 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x564cec35cb98 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x564cec35cd88 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x564cec35cd88
|-CXXMethodDecl 0x564cec35ce90 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x564cec35cf58 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x564cec35f2a8 <col:34, line:217:5>
|   `-ReturnStmt 0x564cec35f298 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x564cec35f280 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x564cec35f250 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x564cec23cb20
|         `-ImplicitCastExpr 0x564cec35f238 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x564cec35f208 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x564cec23cab8
|             `-MemberExpr 0x564cec35f1d8 <col:16> 'const TaskLink' lvalue ->_task_link 0x564cec35a068
|               `-CXXThisExpr 0x564cec35f1c8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x564cec35d018 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x564cec35d0d8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x564cec35f9d0 <col:39, line:226:5>
|   |-DeclStmt 0x564cec35f4f8 <line:223:9, col:68>
|   | `-VarDecl 0x564cec35f2d0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x564cec35f4b0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x564cec35f480 <col:24, col:38> '<bound member function type>' .compare_swap 0x564cebf64470
|   |     | `-MemberExpr 0x564cec35f348 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x564cec35c500
|   |     |   `-CXXThisExpr 0x564cec35f338 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x564cec35f438 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x564cec35f420 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x564cec35f3f8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x564cec35f3d8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x564cec35f4e0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x564cec35f460 <col:66> 'int' 0
|   |-CStyleCastExpr 0x564cec35f540 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x564cec35f510 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x564cec35f2d0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x564cec35f9b0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x564cec35f980 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x564cec35f658 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x564cec35f628 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x564cec35f610 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x564cec35f568 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x564cec35f2d0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x564cec35f5e8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x564cec35f5d0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x564cec35f5a8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x564cec35f588 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x564cec35f6b8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x564cec35f698 <col:60> 'int' 0
|       `-CallExpr 0x564cec35f8e0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x564cec35f8c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x564cec35f8a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x564cec35f920 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x564cec35f7a8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x564cec35f938 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x564cec35f7d8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x564cec35f950 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x564cec35f818 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x564cec35f968 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x564cec35f890 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x564cec35f878 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x564cec35f838 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x564cec35d220 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x564cec35d190 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x564cec35d2e8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x564cec35d3a8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x564cec35d468 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x564cec35d528 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x564cec35d5e8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x564cec35d6e0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x564cec35d740 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x564cec35d7d0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x564cec35db98 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x564cec35db98
| `-ParmVarDecl 0x564cec35dca8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x564cec35e368 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x564cec35e368
  `-ParmVarDecl 0x564cec35e478 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec23ce30 prev 0x564cec2aecf0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x564cec23cf68 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x564cec23cff8 <col:33, col:39> col:33 public
|-EnumDecl 0x564cec23d020 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x564cec23d160 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x564cec23d140 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x564cec23d120 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x564cec23d0e0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x564cec23d100 <col:26> 'int' 16
| `-EnumConstantDecl 0x564cec23d230 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x564cec23d210 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x564cec23d1f0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x564cec23d1b0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x564cec23d1d0 <col:47> 'int' 31
|-EnumDecl 0x564cec23d280 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x564cec23d3c0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x564cec23d4e0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec23d3a0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x564cec23d380 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x564cec23d340 <col:26> 'int' 1
| |       `-IntegerLiteral 0x564cec23d360 <col:29> 'int' 15
| `-EnumConstantDecl 0x564cec23d490 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x564cec23d4f8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec23d470 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x564cec23d450 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x564cec23d410 <col:51> 'int' 1
|         `-IntegerLiteral 0x564cec23d430 <col:54> 'int' 10
|-CXXConstructorDecl 0x564cec2dcd48 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x564cec23d520 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x564cec2dcc20 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x564cec2dced8 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x564cec2dce10 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x564cec2dcfd0 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x564cec2dcfd0
|-CXXMethodDecl 0x564cec2dd158 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x564cec2e0298 <col:42, line:100:5>
|   `-ReturnStmt 0x564cec2e0288 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x564cec2e0270 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x564cec2e0240 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x564cec2defc0
|         `-CXXThisExpr 0x564cec2e0230 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x564cec2dd220 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x564cec2e0318 <col:36, line:105:5>
|   `-ReturnStmt 0x564cec2e0308 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x564cec2e02f0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x564cec2e02c0 <col:16> 'void *const' lvalue ->_thunk 0x564cec2df028
|         `-CXXThisExpr 0x564cec2e02b0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x564cec2dd2e0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x564cec2e0398 <col:37, line:110:5>
|   `-ReturnStmt 0x564cec2e0388 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x564cec2e0370 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x564cec2e0340 <col:16> 'Element *const' lvalue ->_owner 0x564cec2df0e8
|         `-CXXThisExpr 0x564cec2e0330 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x564cec2dd3a0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x564cec2dd468 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x564cec2dd528 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x564cec2dd5e8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x564cec2e0480 <col:35, line:137:5>
|   `-ReturnStmt 0x564cec2e0470 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x564cec2e0438 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x564cec2e0408 <col:16, col:24> '<bound member function type>' ->router 0x564cec2c54e0
|         `-ImplicitCastExpr 0x564cec2e0458 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x564cec2e03f0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x564cec2e03c0 <col:16> 'Element *const' lvalue ->_owner 0x564cec2df0e8
|               `-CXXThisExpr 0x564cec2e03b0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x564cec2dd6a8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x564cec2dd8a8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x564cec2dd758 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x564cec2dd7d0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x564cec2ddab8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x564cec2dd968 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x564cec2dd9e0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x564cec2ddb88 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x564cec2e0590 <col:35, line:181:5>
|   `-ReturnStmt 0x564cec2e0580 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x564cec2e0568 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x564cec2e0550 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x564cec2e0520 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x564cec2debf8
|           `-MemberExpr 0x564cec2e04d8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564cec2ded18
|             `-MemberExpr 0x564cec2e04a8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x564cec2def48
|               `-CXXThisExpr 0x564cec2e0498 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x564cec2ddc48 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x564cec2e06a8 <col:30, line:192:5>
|   `-BinaryOperator 0x564cec2e0688 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x564cec2e0630 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x564cec2debf8
|     | `-MemberExpr 0x564cec2e05e8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564cec2ded18
|     |   `-MemberExpr 0x564cec2e05b8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x564cec2def48
|     |     `-CXXThisExpr 0x564cec2e05a8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x564cec2e0670 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x564cec2e0660 <col:32> 'bool' false
|-CXXMethodDecl 0x564cec2ddd08 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x564cec2e09f8 <col:30, line:206:5>
|   |-BinaryOperator 0x564cec2e07a0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x564cec2e0748 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x564cec2debf8
|   | | `-MemberExpr 0x564cec2e0700 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564cec2ded18
|   | |   `-MemberExpr 0x564cec2e06d0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x564cec2def48
|   | |     `-CXXThisExpr 0x564cec2e06c0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x564cec2e0788 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x564cec2e0778 <col:32> 'bool' true
|   |-CallExpr 0x564cec2e0840 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x564cec2e0828 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564cec2e0808 <col:9> 'void ()' lvalue Function 0x564cec237c80 'click_fence' 'void ()'
|   `-IfStmt 0x564cec2e09e0 <line:204:9, line:205:32>
|     |-BinaryOperator 0x564cec2e0920 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x564cec2e08f0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x564cec2e08a0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x564cec2df358
|     | |   `-MemberExpr 0x564cec2e0870 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x564cec2df3d0
|     | |     `-CXXThisExpr 0x564cec2e0860 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x564cec2e0908 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x564cec2e08d0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x564cec2e09a0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x564cec2e0950 <col:13> '<bound member function type>' ->complete_schedule 0x564cec2dfdd0
|       | `-CXXThisExpr 0x564cec2e0940 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x564cec2e09c8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x564cec2e0980 <col:31> 'int' 0
|-CXXMethodDecl 0x564cec2dddc8 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x564cec2e0b20 <col:35, line:240:5>
|   `-BinaryOperator 0x564cec2e0b00 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x564cec2e0aa8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x564cec2debf8
|     | `-MemberExpr 0x564cec2e0a60 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564cec2ded18
|     |   `-MemberExpr 0x564cec2e0a30 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x564cec2def48
|     |     `-CXXThisExpr 0x564cec2e0a20 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x564cec2e0ae8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x564cec2e0ad8 <col:32> 'bool' true
|-CXXMethodDecl 0x564cec2dde88 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x564cec2e0d38 <col:37, line:253:5>
|   |-BinaryOperator 0x564cec2e0c18 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x564cec2e0bc0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x564cec2debf8
|   | | `-MemberExpr 0x564cec2e0b78 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564cec2ded18
|   | |   `-MemberExpr 0x564cec2e0b48 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x564cec2def48
|   | |     `-CXXThisExpr 0x564cec2e0b38 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x564cec2e0c00 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x564cec2e0bf0 <col:32> 'bool' false
|   `-BinaryOperator 0x564cec2e0d18 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x564cec2e0cc0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x564cec2dec58
|     | `-MemberExpr 0x564cec2e0c78 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564cec2ded18
|     |   `-MemberExpr 0x564cec2e0c48 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x564cec2def48
|     |     `-CXXThisExpr 0x564cec2e0c38 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x564cec2e0d00 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x564cec2e0cf0 <col:41> 'bool' true
|-CXXMethodDecl 0x564cec2ddf48 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x564cec2e0eb8 <col:37, line:264:5>
|   |-BinaryOperator 0x564cec2e0e38 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x564cec2e0de0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x564cec2dec58
|   | | `-MemberExpr 0x564cec2e0d98 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x564cec2ded18
|   | |   `-MemberExpr 0x564cec2e0d68 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x564cec2def48
|   | |     `-CXXThisExpr 0x564cec2e0d58 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x564cec2e0e20 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x564cec2e0e10 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x564cec2e0e98 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x564cec2e0e68 <col:9> '<bound member function type>' ->reschedule 0x564cec2ddd08
|       `-CXXThisExpr 0x564cec2e0e58 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x564cec2de090 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x564cec2de000 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x564cec2de160 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x564cec2de2a8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x564cec2de218 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x564cec2de3f8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x564cec2de368 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x564cec2de4c0 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x564cec2de580 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x564cec2de620 <col:53> "" ""
|-CXXMethodDecl 0x564cec2de6b8 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x564cec2de758 <col:47> "" ""
|-AccessSpecDecl 0x564cec2de7c8 <line:303:3, col:10> col:3 private
|-FieldDecl 0x564cec2de808 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x564cec2de870 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x564cec2de8c0 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x564cec2de9d8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x564cec2dea68 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x564cec2deb98 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x564cec2debf8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x564cec2dec58 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x564cec366a28 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x564cec366b00 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x564cec366b00
| | |-CXXConstructorDecl 0x564cec366db8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x564cec366db8
| | | `-ParmVarDecl 0x564cec366ec8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x564cec366f68 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x564cec366f68
| |   `-ParmVarDecl 0x564cec367078 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x564cec2ded18 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x564cec2ded78 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x564cec2ded18 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x564cec2deb98 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x564cec2dedd0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x564cec2ded18 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x564cec2debf8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x564cec2dee28 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x564cec2ded18 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x564cec2dec58 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x564cec2dee80 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x564cec366938 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x564cec367298 <col:11>
| |-CXXConstructorDecl 0x564cec366c08 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x564cec366c08
| | `-ParmVarDecl 0x564cec366d18 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x564cec367118 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x564cec367118
|   `-ParmVarDecl 0x564cec367228 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x564cec2def48 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x564cec2defc0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x564cec2df028 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x564cec2df088 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x564cec2df0e8 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x564cec2df138 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564cec2df258 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x564cec2df2f8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x564cec2df358 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x564cec35de48 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x564cec35de48
| | `-ParmVarDecl 0x564cec35df58 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x564cec35dff8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x564cec35dff8
| | `-ParmVarDecl 0x564cec35e108 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x564cec35e178 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x564cec35e178
| |-CXXMethodDecl 0x564cec35e9f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x564cec35e9f8
| | `-ParmVarDecl 0x564cec35eb08 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x564cec35eb78 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x564cec35eb78
| | `-ParmVarDecl 0x564cec35ec88 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x564cec3672f8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x564cec3673d0 <col:11>
|-FieldDecl 0x564cec2df3d0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x564cec2df518 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x564cec2df458 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x564cec2df6c8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x564cec2df5d8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x564cec2df790 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x564cec2df850 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x564cec2df910 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x564cec2e0fc8 <col:41, line:355:5>
|   `-ReturnStmt 0x564cec2e0fb8 <line:354:9, col:38>
|     `-BinaryOperator 0x564cec2e0f98 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x564cec2e0f68 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x564cec2e0f18 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x564cec2df358
|       |   `-MemberExpr 0x564cec2e0ee8 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x564cec2df3d0
|       |     `-CXXThisExpr 0x564cec2e0ed8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x564cec2e0f80 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x564cec2e0f48 <col:38> 'int' 0
|-CXXMethodDecl 0x564cec2df9d0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x564cec2dfb10 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x564cec2dfa80 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x564cec2dfc88 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x564cec2dfbc8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x564cec2dfdd0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x564cec2dfd40 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x564cec2dfe98 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x564cec2e0060 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x564cec2dff48 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x564cec2dffc8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x564cec2e0160 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x564cec2e01f0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec2e4ac8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x564cec2ecb60 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x564cec2ed658 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec2e13c8 prev 0x564cec2aeda0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564cec2e14c0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x564cec2e1550 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x564cec2e15b0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x564cec2e1658 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x564cec2e1778 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x564cec2e1918 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x564cec2e1858 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x564cec2e1b68 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x564cec2e19d8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x564cec2e1a58 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x564cec2e1cc0 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x564cec2e1c30 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x564cec2e1e48 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x564cec2e1d80 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x564cec2e1ff8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x564cec2e1f38 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x564cec2e20f0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x564cec2ed830 <col:21, line:58:5>
|   `-IfStmt 0x564cec2ed818 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x564cec2ed780 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x564cec2ed750 <col:6> '<bound member function type>' ->scheduled 0x564cec2e2948
|     |   `-ImplicitCastExpr 0x564cec2ed7a0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x564cec2ed740 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x564cec2ed7f8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x564cec2ed7c8 <col:6> '<bound member function type>' ->unschedule 0x564cec2e3f70
|         `-CXXThisExpr 0x564cec2ed7b8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x564cec2e21f0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x564cec2ed9d0 <col:26, line:65:5>
|   |-BinaryOperator 0x564cec2ed8f0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x564cec2ed888 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x564cec2ecb60
|   | | `-MemberExpr 0x564cec2ed858 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x564cec2ecc28
|   | |   `-CXXThisExpr 0x564cec2ed848 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x564cec2ed8d8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564cec2ed8b8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x564cec2ed088 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x564cec2ed9b0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x564cec2ed920 <col:2> 'void *' lvalue ->_thunk 0x564cec2ecca8
|     | `-CXXThisExpr 0x564cec2ed910 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x564cec2ed988 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x564cec2ed950 <col:20> 'int' 1
|-CXXMethodDecl 0x564cec2e2330 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x564cec2e22a0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x564cec2edb30 <col:52, line:71:5>
|   |-CStyleCastExpr 0x564cec2eda20 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x564cec2ed9f0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x564cec2e22a0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x564cec2edb10 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x564cec2edae0 <col:2> '<bound member function type>' ->assign 0x564cec2e21f0
|       `-CXXThisExpr 0x564cec2edad0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x564cec2e2500 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x564cec2e23e8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x564cec2e2468 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x564cec2edcb0 <col:58, line:79:5>
|   |-BinaryOperator 0x564cec2edbf8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x564cec2edb90 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x564cec2ecb60
|   | | `-MemberExpr 0x564cec2edb60 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x564cec2ecc28
|   | |   `-CXXThisExpr 0x564cec2edb50 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x564cec2edbe0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x564cec2edbc0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x564cec2e23e8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x564cec2edc90 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x564cec2edc28 <col:2> 'void *' lvalue ->_thunk 0x564cec2ecca8
|     | `-CXXThisExpr 0x564cec2edc18 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x564cec2edc78 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x564cec2edc58 <col:11> 'void *' lvalue ParmVar 0x564cec2e2468 'user_data' 'void *'
|-CXXMethodDecl 0x564cec2e2650 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x564cec2e25c0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x564cec2ede48 <col:35, line:87:5>
|   |-BinaryOperator 0x564cec2edd78 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x564cec2edd10 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x564cec2ecb60
|   | | `-MemberExpr 0x564cec2edce0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x564cec2ecc28
|   | |   `-CXXThisExpr 0x564cec2edcd0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x564cec2edd60 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564cec2edd40 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x564cec2ed260 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x564cec2ede28 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x564cec2edda8 <col:2> 'void *' lvalue ->_thunk 0x564cec2ecca8
|     | `-CXXThisExpr 0x564cec2edd98 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x564cec2ede10 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x564cec2eddf8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x564cec2eddd8 <col:11> 'Element *' lvalue ParmVar 0x564cec2e25c0 'element' 'Element *'
|-CXXMethodDecl 0x564cec2e2798 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x564cec2e2708 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x564cec2edfe0 <col:29, line:94:5>
|   |-BinaryOperator 0x564cec2edf10 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x564cec2edea8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x564cec2ecb60
|   | | `-MemberExpr 0x564cec2ede78 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x564cec2ecc28
|   | |   `-CXXThisExpr 0x564cec2ede68 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x564cec2edef8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564cec2eded8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x564cec2ed438 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x564cec2edfc0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x564cec2edf40 <col:2> 'void *' lvalue ->_thunk 0x564cec2ecca8
|     | `-CXXThisExpr 0x564cec2edf30 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x564cec2edfa8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x564cec2edf90 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x564cec2edf70 <col:11> 'Task *' lvalue ParmVar 0x564cec2e2708 'task' 'Task *'
|-CXXMethodDecl 0x564cec2e2888 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x564cec2ee0c0 <col:37, line:100:5>
|   `-ReturnStmt 0x564cec2ee0b0 <line:99:2, col:19>
|     `-BinaryOperator 0x564cec2ee090 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x564cec2ee060 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x564cec2ee010 <col:9> 'Element *const' lvalue ->_owner 0x564cec2ecd08
|       |   `-CXXThisExpr 0x564cec2ee000 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x564cec2ee078 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x564cec2ee040 <col:19> 'int' 0
|-CXXMethodDecl 0x564cec2e2948 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x564cec2ee180 <col:35, line:105:5>
|   `-ReturnStmt 0x564cec2ee170 <line:104:2, col:23>
|     `-BinaryOperator 0x564cec2ee150 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x564cec2ee138 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x564cec2ee0e8 <col:9> 'const int' lvalue ->_schedpos1 0x564cec2e4a18
|       |   `-CXXThisExpr 0x564cec2ee0d8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x564cec2ee118 <col:23> 'int' 0
|-CXXMethodDecl 0x564cec2e2a08 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x564cec2ee1e8 <col:51, line:118:5>
|   `-ReturnStmt 0x564cec2ee1d8 <line:117:2, col:9>
|     `-MemberExpr 0x564cec2ee1a8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x564cec2e4a78
|       `-CXXThisExpr 0x564cec2ee198 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x564cec2e2ac8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x564cec2ee740 <col:37, line:136:5>
|   `-IfStmt 0x564cec2ee718 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x564cec2ee2a8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x564cec2ee290 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x564cec2ee270 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x564cec2ee240 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x564cec2466b8
|     |       `-MemberExpr 0x564cec2ee210 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x564cec2e4a78
|     |         `-CXXThisExpr 0x564cec2ee200 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x564cec2ee688 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x564cec2ee670 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x564cec2ee640 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x564cec2ee628 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x564cec2ee5f0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x564cec2ee5d8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x564cec2ee5b8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x564cec271fa0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x564cec2ee558 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x564cec2ee540 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x564cec2ee468 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x564cec2ee450 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x564cec2ee430 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x564cec271c58 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x564cec2ee3d0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x564cec2ee2d0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x564cec2e4a78
|     |         |     |   `-CXXThisExpr 0x564cec2ee2c0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x564cec2ee418 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x564cec2ee400 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x564cec2ee3b0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x564cec2ee398 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x564cec2ee338 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x564cec0bd7c0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x564cec2ee5a0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x564cec2ee588 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x564cec2ee520 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x564cec2ee508 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x564cec2ee4d8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x564cec0be490 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x564cec2ee708 <line:135:6, col:13>
|       `-CXXConstructExpr 0x564cec2ee6d8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x564cec2ee6a8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x564cec2e4a78
|           `-CXXThisExpr 0x564cec2ee698 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x564cec2e2b88 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x564cec2ee828 <col:35, line:141:5>
|   `-ReturnStmt 0x564cec2ee818 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x564cec2ee7e0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x564cec2ee7b0 <col:9, col:17> '<bound member function type>' ->router 0x564cec2c54e0
|         `-ImplicitCastExpr 0x564cec2ee800 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x564cec2ee798 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x564cec2ee768 <col:9> 'Element *const' lvalue ->_owner 0x564cec2ecd08
|               `-CXXThisExpr 0x564cec2ee758 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x564cec2e2c48 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x564cec2ee8a8 <col:37, line:146:5>
|   `-ReturnStmt 0x564cec2ee898 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x564cec2ee880 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x564cec2ee850 <col:9> 'Element *const' lvalue ->_owner 0x564cec2ecd08
|         `-CXXThisExpr 0x564cec2ee840 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x564cec2e2d08 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x564cec2ee928 <col:41, line:151:5>
|   `-ReturnStmt 0x564cec2ee918 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x564cec2ee900 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x564cec2ee8d0 <col:9> 'RouterThread *const' lvalue ->_thread 0x564cec2ecd68
|         `-CXXThisExpr 0x564cec2ee8c0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x564cec2e2dd0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x564cec2e2f90 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x564cec2e2e80 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x564cec2e2ef8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564cec2ed648 <col:50> 'bool' false
|-CXXMethodDecl 0x564cec2e3118 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x564cec2e3050 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x564cec2e3260 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x564cec2e31d0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x564cec2e33a8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x564cec2e3318 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x564cec2e34f0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x564cec2e3460 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x564cec2e3638 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x564cec2e35a8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x564cec2e3700 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x564cec2eea90 <col:32, line:223:5>
|   `-ExprWithCleanups 0x564cec2eea78 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x564cec2eea20 <col:2, col:47> 'void'
|       |-MemberExpr 0x564cec2ee950 <col:2> '<bound member function type>' ->schedule_at_steady 0x564cec2e3260
|       | `-CXXThisExpr 0x564cec2ee940 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564cec2eea60 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x564cec2eea48 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x564cec2eea00 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x564cec2ee9e8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x564cec2ee9b8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x564cec0be490 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x564cec2e3840 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x564cec2e37b0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x564cec2e3988 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x564cec2e38f8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec2eec18 <col:56, line:241:5>
|   `-ExprWithCleanups 0x564cec2eec00 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x564cec2eeba8 <col:2, col:40> 'void'
|       |-MemberExpr 0x564cec2eeab8 <col:2> '<bound member function type>' ->schedule_after 0x564cec2e3840
|       | `-CXXThisExpr 0x564cec2eeaa8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564cec2eebe8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x564cec2eebd0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x564cec2eeb68 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x564cec2eeb38 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x564cec2eeaf8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec2e38f8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x564cec2eeb50 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x564cec2eeb18 <col:38> 'int' 0
|-CXXMethodDecl 0x564cec2e3ad0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x564cec2e3a40 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec2eee88 <col:58, line:249:5>
|   `-ExprWithCleanups 0x564cec2eee70 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x564cec2eee18 <col:2, col:49> 'void'
|       |-MemberExpr 0x564cec2eec40 <col:2> '<bound member function type>' ->schedule_after 0x564cec2e3840
|       | `-CXXThisExpr 0x564cec2eec30 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564cec2eee58 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x564cec2eee40 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x564cec2eedc0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x564cec2eeda8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x564cec2eed18 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x564cec2484a8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x564cec2eee00 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x564cec2eede8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x564cec2eecf8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec2e3a40 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec2e3c18 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x564cec2e3b88 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x564cec2ef068 <col:58, line:261:5>
|   `-ExprWithCleanups 0x564cec2ef050 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x564cec2eeff8 <col:2, col:38> 'void'
|       |-MemberExpr 0x564cec2eeeb0 <col:2> '<bound member function type>' ->schedule_at_steady 0x564cec2e3260
|       | `-CXXThisExpr 0x564cec2eeea0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564cec2ef038 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x564cec2ef020 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x564cec2eefc0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x564cec2eefa8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x564cec2eef88 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x564cec271c58 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x564cec2eef58 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x564cec2eef40 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x564cec2eeef0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x564cec2e4a78
|             |     `-CXXThisExpr 0x564cec2eeee0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x564cec2eef20 <col:33> 'const Timestamp' lvalue ParmVar 0x564cec2e3b88 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x564cec2e3d60 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x564cec2e3cd0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec2ef340 <col:58, line:270:5>
|   `-ExprWithCleanups 0x564cec2ef328 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x564cec2ef2d0 <col:2, col:79> 'void'
|       |-MemberExpr 0x564cec2ef090 <col:2> '<bound member function type>' ->schedule_at_steady 0x564cec2e3260
|       | `-CXXThisExpr 0x564cec2ef080 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564cec2ef310 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x564cec2ef2f8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x564cec2ef290 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x564cec2ef1c8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x564cec2ef1b0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x564cec2ef140 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x564cec2ef110 <col:31, col:41> '<bound member function type>' .sec 0x564cec0bff88
|             | |     `-ImplicitCastExpr 0x564cec2ef160 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x564cec2ef0e0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x564cec2e4a78
|             | |         `-CXXThisExpr 0x564cec2ef0d0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x564cec2ef198 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x564cec2ef178 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec2e3cd0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x564cec2ef258 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x564cec2ef228 <col:60, col:70> '<bound member function type>' .subsec 0x564cec0c0680
|                 `-ImplicitCastExpr 0x564cec2ef278 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x564cec2ef1f8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x564cec2e4a78
|                     `-CXXThisExpr 0x564cec2ef1e8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x564cec2e3ea8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x564cec2e3e18 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x564cec2ef678 <col:60, line:279:5>
|   `-ExprWithCleanups 0x564cec2ef660 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x564cec2ef608 <col:2, col:65> 'void'
|       |-MemberExpr 0x564cec2ef368 <col:2> '<bound member function type>' ->schedule_at_steady 0x564cec2e3260
|       | `-CXXThisExpr 0x564cec2ef358 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564cec2ef648 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x564cec2ef630 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x564cec2ef5d0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x564cec2ef5b8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x564cec2ef598 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x564cec271c58 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x564cec2ef538 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x564cec2ef520 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x564cec2ef3a8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x564cec2e4a78
|             |     `-CXXThisExpr 0x564cec2ef398 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x564cec2ef580 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x564cec2ef568 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x564cec2ef4c8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x564cec2ef4b0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x564cec2ef480 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x564cec2484a8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x564cec2ef508 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x564cec2ef4f0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x564cec2ef460 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x564cec2e3e18 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x564cec2e3f70 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x564cec2e4030 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x564cec2efb40 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x564cec2ef6d0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x564cec2ef6a0 <col:2> '<bound member function type>' ->unschedule 0x564cec2e3f70
|   |   `-CXXThisExpr 0x564cec2ef690 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x564cec2efb28 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x564cec2efaf0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x564cec2efad8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564cec2ef788 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x564cec292668 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x564cec2ef700 <col:2> 'Timestamp' lvalue ->_expiry_s 0x564cec2e4a78
|       | `-CXXThisExpr 0x564cec2ef6f0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x564cec2ef770 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x564cec2ef740 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x564cec2e40f0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x564cec2efe98 <col:42, line:310:5>
|   |-IfStmt 0x564cec2efce0 <line:306:2, line:307:23>
|   | |-CallExpr 0x564cec2efc10 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x564cec2efbf8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x564cec2efb98 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x564cec263790 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x564cec2efcd0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x564cec2efcb8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x564cec2efc88 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x564cec2efc70 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x564cec2efc40 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x564cec2efe88 <line:309:2, col:33>
|     `-ExprWithCleanups 0x564cec2efe70 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x564cec2efe40 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x564cec2efe28 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x564cec2efde8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x564cec2efdd0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x564cec2efda0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x564cec2487c0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x564cec2efe10 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x564cec2efd80 <col:30> 'int' 500
|-CXXMethodDecl 0x564cec2e4230 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x564cec2e41a0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564cec2e42d8 <col:69> "" ""
|-CXXMethodDecl 0x564cec2e43e8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x564cec2e4358 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564cec2e4490 <col:70> "" ""
|-CXXMethodDecl 0x564cec2e45a0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x564cec2e4510 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564cec2e4648 <col:71> "" ""
|-CXXMethodDecl 0x564cec2e4758 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x564cec2e46c8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x564cec2e4800 <col:72> "" ""
|-EnumDecl 0x564cec2e4870 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x564cec2e4970 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x564cec2e49c0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cec2e4950 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x564cec2e4930 <col:25> 'int' 1
|-AccessSpecDecl 0x564cec2e49d8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x564cec2e4a18 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x564cec2e4a78 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x564cec2e4ac8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x564cec2ecb60 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x564cec2ed658 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x564cec2ecc28 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x564cec2ecca8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x564cec2ecd08 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x564cec2ecd68 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x564cec2eceb8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x564cec2ecdc8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x564cec2ed088 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x564cec2ecf70 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x564cec2ecff0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x564cec2ed260 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x564cec2ed148 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x564cec2ed1c8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x564cec2ed438 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x564cec2ed320 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x564cec2ed3a0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x564cec2ed608 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cebf80d20 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x564cebf82fc0 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x564cebf83060 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x564cebf830c0 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x564cebf83120 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x564cebf831d0 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cebf834e0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x564cebf835f8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x564cebf836a0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x564cebf83708 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x564cebf83798 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x564cebf879d0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x564cebf87e08 <col:12>
|-CXXConstructorDecl 0x564cebf87ad8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x564cebf87be8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x564cebf836a0 'data' 'const char *'
| | `-ImplicitCastExpr 0x564cebf8aac0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x564cebf8aa90 <col:12> 'const char *const' lvalue .data 0x564cebf836a0
| |     `-DeclRefExpr 0x564cebf8aa70 <col:12> 'const String::rep_t' lvalue ParmVar 0x564cebf87be8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x564cebf83708 'length' 'int'
| | `-ImplicitCastExpr 0x564cebf8ab50 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x564cebf8ab20 <col:12> 'const int' lvalue .length 0x564cebf83708
| |     `-DeclRefExpr 0x564cebf8ab00 <col:12> 'const String::rep_t' lvalue ParmVar 0x564cebf87be8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x564cebf83798 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x564cebf8abe0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x564cebf8abb0 <col:12> 'String::memo_t *const' lvalue .memo 0x564cebf83798
| |     `-DeclRefExpr 0x564cebf8ab90 <col:12> 'const String::rep_t' lvalue ParmVar 0x564cebf87be8 '' 'const String::rep_t &'
| `-CompoundStmt 0x564cebf8ac38 <col:12>
|-CXXConstructorDecl 0x564cebf87c88 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x564cebf87c88
| `-ParmVarDecl 0x564cebf87d98 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x564cebf90210 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x564cebf9bb78 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x564cebf9bc88 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x564cebf9c1a0 <col:12>
|   |-BinaryOperator 0x564cebf9bfb8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x564cebf9bf70 <col:12> 'const char *' lvalue ->data 0x564cebf836a0
|   | | `-CXXThisExpr 0x564cebf9bf60 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x564cebf9bfa0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x564cebf9bf30 <col:12> 'const char *const' lvalue .data 0x564cebf836a0
|   |     `-DeclRefExpr 0x564cebf9bf10 <col:12> 'const String::rep_t' lvalue ParmVar 0x564cebf9bc88 '' 'const String::rep_t &'
|   |-BinaryOperator 0x564cebf9c080 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x564cebf9c038 <col:12> 'int' lvalue ->length 0x564cebf83708
|   | | `-CXXThisExpr 0x564cebf9c028 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x564cebf9c068 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x564cebf9bff8 <col:12> 'const int' lvalue .length 0x564cebf83708
|   |     `-DeclRefExpr 0x564cebf9bfd8 <col:12> 'const String::rep_t' lvalue ParmVar 0x564cebf9bc88 '' 'const String::rep_t &'
|   |-BinaryOperator 0x564cebf9c148 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x564cebf9c100 <col:12> 'String::memo_t *' lvalue ->memo 0x564cebf83798
|   | | `-CXXThisExpr 0x564cebf9c0f0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x564cebf9c130 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x564cebf9c0c0 <col:12> 'String::memo_t *const' lvalue .memo 0x564cebf83798
|   |     `-DeclRefExpr 0x564cebf9c0a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x564cebf9bc88 '' 'const String::rep_t &'
|   `-ReturnStmt 0x564cebf9c190 <col:12>
|     `-UnaryOperator 0x564cebf9c178 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x564cebf9c168 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x564cebf9bcf8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x564cebf9bcf8
  `-ParmVarDecl 0x564cebf9be08 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cebf77470 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x564cebf77588 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x564cebf77618 <col:16, col:22> col:16 public
|-TypedefDecl 0x564cebf77658 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x564cebd3bfd0 'const char *'
|   `-QualType 0x564cebd3b521 'const char' const
|     `-BuiltinType 0x564cebd3b520 'char'
|-TypedefDecl 0x564cebf776e0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x564cebf776b0 'String::const_iterator' sugar
|   |-Typedef 0x564cebf77658 'const_iterator'
|   `-PointerType 0x564cebd3bfd0 'const char *'
|     `-QualType 0x564cebd3b521 'const char' const
|       `-BuiltinType 0x564cebd3b520 'char'
|-TypedefDecl 0x564cebf77880 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x564cebf777f0 'int (String::*)() const'
|   |-RecordType 0x564cebf77500 'String'
|   | `-CXXRecord 0x564cebf77470 'String'
|   `-ParenType 0x564cebf77790 'int () const' sugar
|     `-FunctionProtoType 0x564cebf77760 'int () const' const cdecl
|       `-BuiltinType 0x564cebd3b580 'int'
|-TypedefDecl 0x564cebf778e8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x564cebe92600 'int64_t' sugar
|   |-Typedef 0x564cebda4390 'int64_t'
|   `-TypedefType 0x564cebd7d630 '__int64_t' sugar
|     |-Typedef 0x564cebd7d208 '__int64_t'
|     `-BuiltinType 0x564cebd3b5a0 'long'
|-TypedefDecl 0x564cebf77950 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x564cebe92520 'uint64_t' sugar
|   |-Typedef 0x564cebda4530 'uint64_t'
|   `-TypedefType 0x564cebd7d6c0 '__uint64_t' sugar
|     |-Typedef 0x564cebd7d278 '__uint64_t'
|     `-BuiltinType 0x564cebd3b640 'unsigned long'
|-TypedefDecl 0x564cebf779e0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x564cebf779b0 'String::intmax_t' sugar
|   |-Typedef 0x564cebf778e8 'intmax_t'
|   `-TypedefType 0x564cebe92600 'int64_t' sugar
|     |-Typedef 0x564cebda4390 'int64_t'
|     `-TypedefType 0x564cebd7d630 '__int64_t' sugar
|       |-Typedef 0x564cebd7d208 '__int64_t'
|       `-BuiltinType 0x564cebd3b5a0 'long'
|-TypedefDecl 0x564cebf77a70 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x564cebf77a40 'String::uintmax_t' sugar
|   |-Typedef 0x564cebf77950 'uintmax_t'
|   `-TypedefType 0x564cebe92520 'uint64_t' sugar
|     |-Typedef 0x564cebda4530 'uint64_t'
|     `-TypedefType 0x564cebd7d6c0 '__uint64_t' sugar
|       |-Typedef 0x564cebd7d278 '__uint64_t'
|       `-BuiltinType 0x564cebd3b640 'unsigned long'
|-CXXConstructorDecl 0x564cebf77b30 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x564cebf77cd8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x564cebf77c18 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x564cebf77e88 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x564cebf77dc8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x564cebf77fe0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x564cebf77f50 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x564cebf78260 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x564cebf780a8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x564cebf78128 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x564cebf784b8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x564cebf78360 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x564cebf783e0 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x564cebf786d8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x564cebf78588 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x564cebf78608 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x564cebf788f8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x564cebf787a8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x564cebf78828 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x564cebf78a88 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x564cebf789c0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x564cebf78c08 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x564cebf78b48 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x564cebf78d98 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x564cebf78cd0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x564cebf78ef0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x564cebf78e60 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x564cebf79078 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x564cebf78fb8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x564cebf79208 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x564cebf79140 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x564cebf79398 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x564cebf792d0 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x564cebf79528 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x564cebf79460 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x564cebf796b8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x564cebf795f0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x564cebf79848 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x564cebf79780 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x564cebf79940 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x564cebf79a68 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x564cebf79be8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x564cebf79b20 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x564cebf79d38 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x564cebf79ca8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x564cebf79de0 <col:63> "" ""
|-CXXMethodDecl 0x564cebf79f28 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x564cebf79e68 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x564cebf7a138 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x564cebf79fe8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x564cebf7a068 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x564cebf7a7d8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x564cebf7a680 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x564cebf7a700 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x564cebf7aab8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x564cebf7a898 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x564cebf7a918 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x564cebf874a0 <col:55> 'int' 10
| `-ParmVarDecl 0x564cebf7a990 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564cebf874c0 <col:76> 'bool' true
|-CXXMethodDecl 0x564cebf7ad98 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x564cebf7ab80 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x564cebf7ac00 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x564cebf874d0 <col:56> 'int' 10
| `-ParmVarDecl 0x564cebf7ac78 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x564cebf874f0 <col:77> 'bool' true
|-CXXMethodDecl 0x564cebf7aea0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x564cebf7af68 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x564cebf7b030 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x564cebf7b0d0 <col:20>
| `-OptimizeNoneAttr 0x564cebf7b128 <col:30>
|-CXXConversionDecl 0x564cebf7b218 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x564cebf7b2e8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x564cebf7b3a8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x564cebf7b498 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x564cebf7b558 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x564cebf7b6d8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x564cebf7b610 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x564cebf7b828 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x564cebf7b798 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x564cebf7b918 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x564cebf7b9d8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x564cebf7bc28 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x564cebf7ba90 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x564cebf7bb10 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x564cebf7be88 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x564cebf7bcf0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x564cebf7bd70 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x564cebf7bf58 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x564cebf7c168 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x564cebf7c010 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x564cebf7c090 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x564cebf7c388 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x564cebf7c230 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x564cebf7c2b0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x564cebf7c518 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x564cebf7c450 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x564cebf7cb60 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x564cebf7ccd8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x564cebf7cc10 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x564cebf7cee8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x564cebf7cd98 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x564cebf7ce18 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x564cebf7d100 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x564cebf7cfa8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x564cebf7d020 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x564cebf7d290 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x564cebf7d1c0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x564cebf7d4b0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x564cebf7d350 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x564cebf7d3d0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x564cebf7d600 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x564cebf7d570 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x564cebf7d7d8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x564cebf7d6c0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x564cebf7d740 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x564cebf7d928 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x564cebf7d898 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x564cebf7db40 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x564cebf7d9e0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x564cebf7da60 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x564cebf87500 <col:39> 'int' 0
|-CXXMethodDecl 0x564cebf7dd60 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x564cebf7dc00 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x564cebf7dc80 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x564cebf87520 <col:48> 'int' 0
|-CXXMethodDecl 0x564cebf7df40 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x564cebf7de20 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x564cebf7dea0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x564cebf87540 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x564cebf7e010 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x564cebf7e0d0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x564cebf7e190 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x564cebf7e250 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x564cebf7e310 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x564cebf7e4b8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x564cebf7e3c0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x564cebf7e638 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x564cebf7e570 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x564cebf7e7b8 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x564cebf7e6f8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x564cebf7e938 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x564cebf7e870 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x564cebf7ea80 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x564cebf7e9f0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x564cebf7ef30 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x564cebf7eea0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x564cebf7f108 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x564cebf7eff0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x564cebf7f070 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x564cebf7f2e8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x564cebf7f1d0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x564cebf7f250 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x564cebf7f438 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x564cebf7f3a8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x564cebf7f648 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x564cebf7f4f8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x564cebf7f578 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x564cebf7f7a8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x564cebf7f710 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x564cebf7f900 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x564cebf7f868 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x564cebf7f9a8 <col:57> "" ""
|-CXXMethodDecl 0x564cebf7fab8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x564cebf7fa28 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x564cebf7fc08 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x564cebf7fb78 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x564cebf7fd88 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x564cebf7fcc0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x564cebf7fe50 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x564cebf7ff10 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x564cebf7ffd0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x564cebf80070 <col:49> "" ""
|-CXXMethodDecl 0x564cebf80100 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x564cebf801c0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x564cebf802b0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x564cebf80378 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x564cebf80438 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x564cebf804f8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x564cebf805f0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x564cebf806b8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x564cebf80780 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x564cebf80958 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x564cebf80838 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x564cebf808b8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x564cebf80b80 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x564cebf80a20 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x564cebf80aa0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x564cebf80c90 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x564cebf80cf8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x564cebf80d20 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x564cebf82fc0 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x564cebf83060 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x564cebf830c0 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x564cebf83120 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x564cebf831d0 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x564cebf83238 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x564cebf83478 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x564cebf834c8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cebf83458 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x564cebf83368 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x564cebf83310 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x564cebf83350 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x564cebf83330 <col:32> 'int' 8
|-CXXRecordDecl 0x564cebf834e0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x564cebf835f8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x564cebf836a0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x564cebf83708 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x564cebf83798 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x564cebf879d0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x564cebf87e08 <col:12>
| |-CXXConstructorDecl 0x564cebf87ad8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x564cebf87be8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x564cebf836a0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x564cebf8aac0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x564cebf8aa90 <col:12> 'const char *const' lvalue .data 0x564cebf836a0
| | |     `-DeclRefExpr 0x564cebf8aa70 <col:12> 'const String::rep_t' lvalue ParmVar 0x564cebf87be8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x564cebf83708 'length' 'int'
| | | `-ImplicitCastExpr 0x564cebf8ab50 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x564cebf8ab20 <col:12> 'const int' lvalue .length 0x564cebf83708
| | |     `-DeclRefExpr 0x564cebf8ab00 <col:12> 'const String::rep_t' lvalue ParmVar 0x564cebf87be8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x564cebf83798 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x564cebf8abe0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x564cebf8abb0 <col:12> 'String::memo_t *const' lvalue .memo 0x564cebf83798
| | |     `-DeclRefExpr 0x564cebf8ab90 <col:12> 'const String::rep_t' lvalue ParmVar 0x564cebf87be8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x564cebf8ac38 <col:12>
| |-CXXConstructorDecl 0x564cebf87c88 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x564cebf87c88
| | `-ParmVarDecl 0x564cebf87d98 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x564cebf90210 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x564cebf9bb78 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x564cebf9bc88 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x564cebf9c1a0 <col:12>
| |   |-BinaryOperator 0x564cebf9bfb8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x564cebf9bf70 <col:12> 'const char *' lvalue ->data 0x564cebf836a0
| |   | | `-CXXThisExpr 0x564cebf9bf60 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x564cebf9bfa0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x564cebf9bf30 <col:12> 'const char *const' lvalue .data 0x564cebf836a0
| |   |     `-DeclRefExpr 0x564cebf9bf10 <col:12> 'const String::rep_t' lvalue ParmVar 0x564cebf9bc88 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x564cebf9c080 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x564cebf9c038 <col:12> 'int' lvalue ->length 0x564cebf83708
| |   | | `-CXXThisExpr 0x564cebf9c028 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x564cebf9c068 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x564cebf9bff8 <col:12> 'const int' lvalue .length 0x564cebf83708
| |   |     `-DeclRefExpr 0x564cebf9bfd8 <col:12> 'const String::rep_t' lvalue ParmVar 0x564cebf9bc88 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x564cebf9c148 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x564cebf9c100 <col:12> 'String::memo_t *' lvalue ->memo 0x564cebf83798
| |   | | `-CXXThisExpr 0x564cebf9c0f0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x564cebf9c130 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x564cebf9c0c0 <col:12> 'String::memo_t *const' lvalue .memo 0x564cebf83798
| |   |     `-DeclRefExpr 0x564cebf9c0a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x564cebf9bc88 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x564cebf9c190 <col:12>
| |     `-UnaryOperator 0x564cebf9c178 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x564cebf9c168 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x564cebf9bcf8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x564cebf9bcf8
|   `-ParmVarDecl 0x564cebf9be08 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x564cebf83810 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x564cebf83a58 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x564cebf83878 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x564cebf838f8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x564cebf83970 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x564cebf87990 <col:79, line:261:5>
|   |-BinaryOperator 0x564cebf87608 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x564cebf875a0 <col:2, col:5> 'const char *' lvalue .data 0x564cebf836a0
|   | | `-MemberExpr 0x564cebf87570 <col:2> 'String::rep_t' lvalue ->_r 0x564cebf83810
|   | |   `-CXXThisExpr 0x564cebf87560 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x564cebf875f0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x564cebf875d0 <col:12> 'const char *' lvalue ParmVar 0x564cebf83878 'data' 'const char *'
|   |-BinaryOperator 0x564cebf876d0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x564cebf87668 <col:2, col:5> 'int' lvalue .length 0x564cebf83708
|   | | `-MemberExpr 0x564cebf87638 <col:2> 'String::rep_t' lvalue ->_r 0x564cebf83810
|   | |   `-CXXThisExpr 0x564cebf87628 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x564cebf876b8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564cebf87698 <col:14> 'int' lvalue ParmVar 0x564cebf838f8 'length' 'int'
|   `-IfStmt 0x564cebf87978 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x564cebf877f0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x564cebf877d8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x564cebf877b8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x564cebf87798 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x564cebf87730 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x564cebf83798
|     |       | `-MemberExpr 0x564cebf87700 <col:7> 'String::rep_t' lvalue ->_r 0x564cebf83810
|     |       |   `-CXXThisExpr 0x564cebf876f0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x564cebf87780 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x564cebf87760 <col:17> 'String::memo_t *' lvalue ParmVar 0x564cebf83970 'memo' 'String::memo_t *'
|     `-CallExpr 0x564cebf87950 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x564cebf87938 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x564cebf87840 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x564cebf5e0c8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x564cebf878a8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x564cebf83060
|         `-ImplicitCastExpr 0x564cebf87890 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x564cebf87870 <col:27> 'String::memo_t *' lvalue ParmVar 0x564cebf83970 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x564cebf83d08 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x564cebf83b28 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x564cebf83ba8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x564cebf83c20 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x564cebf83810 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x564cebf87e18 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x564cebf87fa8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x564cebf87f10 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x564cebf87e80 <col:2> '<bound member function type>' ->assign_memo 0x564cebf83a58
|     | `-ImplicitCastExpr 0x564cebf87f48 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x564cebf87e70 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x564cebf87f60 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x564cebf87eb0 <col:14> 'const char *' lvalue ParmVar 0x564cebf83b28 'data' 'const char *'
|     |-ImplicitCastExpr 0x564cebf87f78 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x564cebf87ed0 <col:20> 'int' lvalue ParmVar 0x564cebf83ba8 'length' 'int'
|     `-ImplicitCastExpr 0x564cebf87f90 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x564cebf87ef0 <col:28> 'String::memo_t *' lvalue ParmVar 0x564cebf83c20 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x564cebf83e98 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x564cebf83dd8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x564cebf88200 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x564cebf88180 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x564cebf87fd0 <col:2> '<bound member function type>' ->assign_memo 0x564cebf83a58
|     | `-CXXThisExpr 0x564cebf87fc0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x564cebf881b8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x564cebf88050 <col:14, col:19> 'const char *' lvalue .data 0x564cebf836a0
|     |   `-MemberExpr 0x564cebf88020 <col:14, col:16> 'String::rep_t' lvalue ._r 0x564cebf83810
|     |     `-DeclRefExpr 0x564cebf88000 <col:14> 'const String' lvalue ParmVar 0x564cebf83dd8 'x' 'const String &'
|     |-ImplicitCastExpr 0x564cebf881d0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x564cebf880d0 <col:25, col:30> 'int' lvalue .length 0x564cebf83708
|     |   `-MemberExpr 0x564cebf880a0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x564cebf83810
|     |     `-DeclRefExpr 0x564cebf88080 <col:25> 'const String' lvalue ParmVar 0x564cebf83dd8 'x' 'const String &'
|     `-ImplicitCastExpr 0x564cebf881e8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x564cebf88150 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x564cebf83798
|         `-MemberExpr 0x564cebf88120 <col:38, col:40> 'String::rep_t' lvalue ._r 0x564cebf83810
|           `-DeclRefExpr 0x564cebf88100 <col:38> 'const String' lvalue ParmVar 0x564cebf83dd8 'x' 'const String &'
|-CXXMethodDecl 0x564cebf83f60 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x564cebf892c8 <col:31, line:278:5>
|   `-IfStmt 0x564cebf892b0 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x564cebf882a0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x564cebf88288 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x564cebf88258 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x564cebf83798
|     |     `-MemberExpr 0x564cebf88228 <col:6> 'String::rep_t' lvalue ->_r 0x564cebf83810
|     |       `-CXXThisExpr 0x564cebf88218 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x564cebf89288 <col:15, line:277:2>
|       |-ParenExpr 0x564cebf88840 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x564cebf88810 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x564cebf883b0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x564cebf88398 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x564cebf88380 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x564cebf88340 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x564cebf83060
|       |   |       `-ImplicitCastExpr 0x564cebf88328 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x564cebf882f8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x564cebf83798
|       |   |           `-MemberExpr 0x564cebf882c8 <col:27> 'String::rep_t' lvalue ->_r 0x564cebf83810
|       |   |             `-CXXThisExpr 0x564cebf882b8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x564cebf88410 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x564cebf883f0 <col:54> 'int' 0
|       |   `-CallExpr 0x564cebf88770 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x564cebf88758 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x564cebf886e0 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x564cebdd8e10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x564cebf887b0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x564cebf884f8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x564cebf887c8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x564cebf885a8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x564cebf887e0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x564cebf885e0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x564cebf887f8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x564cebf886c8 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x564cebf886b0 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x564cebf88678 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x564cebf891a8 <line:274:6, line:275:22>
|       | |-CallExpr 0x564cebf88a50 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x564cebf88a38 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x564cebf889b0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x564cebf63460 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x564cebf88980 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x564cebf83060
|       | |   `-ImplicitCastExpr 0x564cebf88968 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x564cebf88938 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x564cebf83798
|       | |       `-MemberExpr 0x564cebf88908 <col:40> 'String::rep_t' lvalue ->_r 0x564cebf83810
|       | |         `-CXXThisExpr 0x564cebf888f8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x564cebf88b50 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x564cebf88b38 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x564cebf88a78 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x564cebf84c38 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x564cebf89190 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x564cebf88ad8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x564cebf83798
|       |       `-MemberExpr 0x564cebf88aa8 <col:15> 'String::rep_t' lvalue ->_r 0x564cebf83810
|       |         `-CXXThisExpr 0x564cebf88a98 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x564cebf89268 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x564cebf89200 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x564cebf83798
|         | `-MemberExpr 0x564cebf891d0 <col:6> 'String::rep_t' lvalue ->_r 0x564cebf83810
|         |   `-CXXThisExpr 0x564cebf891c0 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x564cebf89250 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x564cebf89230 <col:16> 'int' 0
|-CXXMethodDecl 0x564cebf841f8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x564cebf84018 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x564cebf84098 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x564cebf84110 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x564cebf842d0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x564cebf84520 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x564cebf84388 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x564cebf84408 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x564cebf84480 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x564cebf84708 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x564cebf845f0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x564cebf84670 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x564cebf84808 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x564cebf893c0 <col:41, line:286:5>
|   `-ReturnStmt 0x564cebf893b0 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x564cebf89380 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x564cebf89348 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x564cebf89330 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x564cebf89310 <col:46> 'int' 1
|-CXXMethodDecl 0x564cebf84aa8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x564cebf848c0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x564cebf84940 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x564cebf849c0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x564cebf84c38 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x564cebf84b70 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x564cebf84d08 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x564cebf84ed8 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x564cebf84dc0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x564cebf84e40 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x564cebf86b80 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x564cebf86cc8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x564cebf86e08 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x564cebf86e80 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x564cebf86ef8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x564cebf86f60 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x564cebf87060 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x564cebf870b0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x564cebf87040 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x564cebf87020 <col:22> 'int' 14
|-CXXMethodDecl 0x564cebf872c8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x564cebf870e0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x564cebf87160 <col:38> col:41 'int'
| `-ParmVarDecl 0x564cebf871e0 <col:43> col:46 'int'
|-FriendDecl 0x564cebf873d0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x564cebf87460 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x564cec2f8a98 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x564cec3a2df8 <line:167:18>
|-CXXRecordDecl 0x564cec3a2eb8 prev 0x564cec2f8a98 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x564cec3a2fc8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x564cec36e0b8 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x564cec36e1d8 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x564cec36e268 <col:18, col:24> col:18 public
|-EnumDecl 0x564cec36e290 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x564cec370680 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x564cec370770 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x564cec36e370 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x564cec36e350 <col:35> 'int' 0
| |-EnumConstantDecl 0x564cec3706d0 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x564cec370720 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x564cec3709b8 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x564cec370950 'void (*)(void *, Notifier *)'
|   `-ParenType 0x564cec3708f0 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x564cec3708b0 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x564cebd3b4e0 'void'
|       |-PointerType 0x564cebd3bce0 'void *'
|       | `-BuiltinType 0x564cebd3b4e0 'void'
|       `-PointerType 0x564cec370810 'Notifier *'
|         `-RecordType 0x564cec36e150 'Notifier'
|           `-CXXRecord 0x564cec36e0b8 'Notifier'
|-CXXConstructorDecl 0x564cec370af8 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x564cec370a20 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x564cec374a88 <col:35> 'Notifier::SearchOp' EnumConstant 0x564cec370680 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x564cec370d08 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x564cec370bb8 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x564cec370c30 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x564cec374aa8 <col:65> 'Notifier::SearchOp' EnumConstant 0x564cec370680 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x564cec370e08 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x564cec370f38 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x564cec374b68 <col:37, line:85:5>
|   `-ReturnStmt 0x564cec374b58 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x564cec374b38 <col:9, col:29> 'bool'
|       `-MemberExpr 0x564cec374b08 <col:9, col:17> '<bound member function type>' .initialized 0x564cec36c350
|         `-MemberExpr 0x564cec374ad8 <col:9> 'const NotifierSignal' lvalue ->_signal 0x564cec3744a8
|           `-CXXThisExpr 0x564cec374ac8 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x564cec371140 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x564cec370ff0 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x564cec371068 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x564cec371238 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x564cec371328 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x564cec3713e8 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x564cec371528 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x564cec371498 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x564cec3715f0 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x564cec3716b0 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x564cec371920 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x564cec371780 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x564cec371800 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x564cec371b78 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x564cec3719e0 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x564cec371a60 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x564cec371d00 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x564cec371c38 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x564cec371e48 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x564cec371db8 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x564cec371fd0 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x564cec371f00 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x564cec372148 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x564cec372088 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x564cec372210 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x564cec372298 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x564cec372468 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x564cec372310 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x564cec372390 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x564cec372708 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x564cec372528 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x564cec3725a8 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x564cec372620 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x564cec3729a8 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x564cec3727d0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x564cec372850 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x564cec3728c8 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x564cec372d28 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x564cec372a70 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x564cec372af0 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x564cec372b68 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x564cec372be8 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x564cec372f10 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x564cec372df8 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x564cec372e78 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x564cec373168 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x564cec372fd0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x564cec373050 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x564cec3730c8 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x564cec3733c8 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x564cec373230 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x564cec3732b0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x564cec373328 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x564cec3736b0 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x564cec373490 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x564cec373510 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x564cec373588 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x564cec373608 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x564cec373968 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x564cec373780 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x564cec373800 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x564cec373880 <col:78> col:81 'int'
| `-DeprecatedAttr 0x564cec373a20 <col:98> "" ""
|-CXXMethodDecl 0x564cec373d08 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x564cec373aa0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x564cec373b20 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x564cec373ba0 <col:78> col:81 'int'
| |-ParmVarDecl 0x564cec373c18 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x564cec373dc8 <col:110> "" ""
|-CXXMethodDecl 0x564cec373fe8 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x564cec373e48 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x564cec373ec8 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x564cec373f48 <col:79> col:82 'int'
| `-DeprecatedAttr 0x564cec3740a0 <col:99> "" ""
|-CXXMethodDecl 0x564cec374340 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x564cec374120 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x564cec3741a0 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x564cec374220 <col:79> col:82 'int'
| |-ParmVarDecl 0x564cec374298 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x564cec374400 <col:111> "" ""
|-AccessSpecDecl 0x564cec374470 <line:123:3, col:10> col:3 private
|-FieldDecl 0x564cec3744a8 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x564cec374508 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x564cec374680 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x564cec374570 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x564cec3745e8 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x564cec374758 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x564cec374758
| `-ParmVarDecl 0x564cec374868 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x564cec374908 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x564cec374908
  `-ParmVarDecl 0x564cec374a18 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>
