
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55989899d968 prev 0x559898995108 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55989899da60 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55989899daf0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55989899db68 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55989899dc28 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55989899dcf0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55989899de68 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55989899dda0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55989899df10 <col:24>
| `-OptimizeNoneAttr 0x55989899df68 <col:34>
|-CXXMethodDecl 0x55989899dfb0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55989899e268 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55989899e060 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55989899e0d8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55989899e158 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55989899e320 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55989899e358 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55989899e3c0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55989899e448 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55989899e768 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55989899e500 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55989899e578 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55989899e5f0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55989899e670 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55989899e880 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5598989a61f8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5598989a61f8
| `-ParmVarDecl 0x5598989a6308 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5598989a63a8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5598989a63a8
| `-ParmVarDecl 0x5598989a64b8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5598989aa5c0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559898990980 prev 0x559898990700 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559898990a78 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x559898990b08 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x559898990b68 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x559898990c58 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x559898990d58 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x559898990f28 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x559898990dd8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x559898990e50 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5598989910b8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x559898990ff0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x559898991160 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x559898991298 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5598989911d0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x559898991438 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x559898991378 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5598989915d8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x559898991518 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x559898991680 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x559898991780 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x559898991860 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898991760 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x559898991740 <col:26> 'int' 1
| `-EnumConstantDecl 0x559898991810 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x559898991878 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5598989917f0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5598989917d0 <col:44> 'int' 2
|-CXXMethodDecl 0x5598989919c0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5598989918a8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x559898991928 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x559898991b18 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x559898991a88 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x559898991d58 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x559898991bd8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x559898991c50 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x559898991e08 <col:20>
| `-OptimizeNoneAttr 0x559898991e60 <col:30>
|-CXXMethodDecl 0x559898991f68 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x559898991ea0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x559898992010 <col:20>
| `-OptimizeNoneAttr 0x559898992068 <col:30>
|-CXXMethodDecl 0x5598989920b8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x559898992180 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x559898992298 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x559898992320 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5598989923a8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x559898992430 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x5598989924b8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x559898992548 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x559898992608 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x559898992690 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x559898992718 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5598989927a0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x559898992828 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5598989928b0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x559898992940 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x559898992a00 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x559898992a90 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x559898992be0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x559898992b48 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x559898992d70 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x559898992ca0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x559898993020 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x559898992e28 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x559898992ea8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x559898992f28 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5598989930d8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5598989931e0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559898993470 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5598989931c0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5598989931a0 <col:33> 'int' 0
| |-EnumConstantDecl 0x559898993270 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559898993488 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898993250 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x559898993230 <col:32> 'int' 20
| |-EnumConstantDecl 0x559898993300 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5598989934a0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5598989932e0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5598989932c0 <col:38> 'int' 90
| |-EnumConstantDecl 0x559898993390 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5598989934b8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898993370 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x559898993350 <col:35> 'int' 100
| `-EnumConstantDecl 0x559898993420 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5598989934d0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559898993400 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5598989933e0 <col:32> 'int' 2000
|-CXXMethodDecl 0x559898993510 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x559898993950 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5598989937c0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x559898993838 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559898993a20 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x559898993ba0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x559898993ad0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559898993da8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559898993c58 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x559898993cd0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559898993ea8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x559898993f48 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x559898994010 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5598989940a0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5598989942d0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898994080 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x559898994060 <col:36> 'int' EnumConstant 0x559898994010 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5598989940f0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559898994140 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559898994190 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5598989941e0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559898994230 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x559898994280 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5598989943b8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5598989942f8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x559898994480 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x559898994540 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x559898994600 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5598989946c0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5598989947d8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5598989948a0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x559898994a20 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x559898994950 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x559898994b48 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x559898994d48 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x559898994bf8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x559898994c78 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5598989a2698 <col:54, line:127:5>
|   |-ParenExpr 0x5598989a2548 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5598989a2518 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5598989a2208 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5598989a21e0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5598989a21c8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5598989a21b0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5598989a2180 <col:31> 'Router *' lvalue ->_router 0x5598989a0060
|   |   |         `-CXXThisExpr 0x5598989a2170 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5598989a2268 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5598989a2248 <col:48> 'int' 0
|   |   `-CallExpr 0x5598989a2478 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5598989a2460 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5598989a2440 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5598989a24b8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5598989a22d8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5598989a24d0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5598989a22f8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5598989a24e8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5598989a2330 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5598989a2500 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5598989a2428 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5598989a2410 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5598989a23c8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5598989a25e0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5598989a2578 <col:9> 'Router *' lvalue ->_router 0x5598989a0060
|   | | `-CXXThisExpr 0x5598989a2568 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5598989a25c8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5598989a25a8 <col:19> 'Router *' lvalue ParmVar 0x559898994bf8 'r' 'Router *'
|   `-BinaryOperator 0x5598989a2678 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5598989a2610 <col:9> 'int' lvalue ->_eindex 0x5598989a00c8
|     | `-CXXThisExpr 0x5598989a2600 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5598989a2660 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5598989a2640 <col:19> 'int' lvalue ParmVar 0x559898994c78 'eindex' 'int'
|-CXXMethodDecl 0x559898994ed0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x559898994e08 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x559898994fa0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x559898995068 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x559898995108 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x559898995358 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5598989951d0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x559898995250 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x559898995408 <col:20>
| `-OptimizeNoneAttr 0x559898995460 <col:30>
|-CXXMethodDecl 0x559898995568 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5598989954a0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x559898995610 <col:20>
| `-OptimizeNoneAttr 0x559898995668 <col:30>
|-CXXMethodDecl 0x559898995738 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5598989956a8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5598989957e0 <col:20>
| `-OptimizeNoneAttr 0x559898995838 <col:30>
|-CXXMethodDecl 0x5598989959c8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x559898995870 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5598989958f0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x559898995b58 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x559898995a90 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x559898995ca8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x559898995c18 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x559898995df8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x559898995d68 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x559898995f48 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x559898995eb8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x559898996208 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x559898996000 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x559898996080 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x559898996128 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5598989962e0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5598989963a0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x559898996670 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559898996520 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x559898996598 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x559898996798 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x559898996970 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x559898996850 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5598989968d0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x559898996b58 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x559898996a38 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x559898996ab8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x559898996ec8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x559898996c18 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x559898996c90 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x559898996d10 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5598989a1c80 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5598989a1c60 <col:106> 'int' 0
| `-ParmVarDecl 0x559898996d88 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5598989a1cb8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5598989a1c98 <col:126> 'int' 0
|-CXXMethodDecl 0x559898997268 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559898996f98 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x559898997030 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5598989970b0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x559898997128 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5598989a1cf0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5598989a1cd0 <col:114> 'int' 0
|-CXXMethodDecl 0x5598989975f8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559898997340 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5598989973b8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x559898997438 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5598989a1d08 <col:96> 'int' 0
| `-ParmVarDecl 0x5598989974b0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5598989a1d48 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5598989a1d28 <col:116> 'int' 0
|-CXXMethodDecl 0x559898997978 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5598989976c8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x559898997740 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5598989977c0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5598989a1d80 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5598989a1d60 <col:109> 'int' 0
| `-ParmVarDecl 0x559898997838 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5598989a1db8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5598989a1d98 <col:129> 'int' 0
|-CXXMethodDecl 0x559898997cf8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559898997a48 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x559898997ac0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x559898997b40 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x559898997bb8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5598989a1df0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5598989a1dd0 <col:117> 'int' 0
|-CXXMethodDecl 0x559898998088 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559898997dd0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559898997e48 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x559898997ec8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5598989a1e08 <col:99> 'int' 0
| `-ParmVarDecl 0x559898997f40 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5598989a1e48 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5598989a1e28 <col:119> 'int' 0
|-CXXMethodDecl 0x5598989984a8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x559898998158 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5598989981d8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x559898998250 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5598989982d0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5598989a1e80 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5598989a1e60 <col:108> 'int' 0
| `-ParmVarDecl 0x559898998350 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5598989a1eb8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5598989a1e98 <col:141> 'int' 0
|-CXXMethodDecl 0x5598989988c8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x559898998580 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x559898998600 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x559898998678 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5598989986f8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x559898998778 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5598989a1ed0 <col:121> 'int' 0
|-CXXMethodDecl 0x559898998cf8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5598989989a8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x559898998a28 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x559898998aa0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x559898998b20 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5598989a1ef0 <col:98> 'int' 0
| `-ParmVarDecl 0x559898998ba0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5598989a1f10 <col:123> 'int' 0
|-CXXMethodDecl 0x559898998fc0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x559898998dd0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x559898998e50 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x559898998ed0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5598989a1f30 <col:80> 'int' 0
|-EnumDecl 0x559898999078 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x559898999180 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559898999410 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898999160 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x559898999140 <col:42> 'int' 1
| |-EnumConstantDecl 0x559898999210 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559898999428 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5598989991f0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5598989991d0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5598989992a0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559898999440 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898999280 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x559898999260 <col:44> 'int' 4
| |-EnumConstantDecl 0x559898999330 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559898999458 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898999310 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5598989992f0 <col:36> 'int' 7
| `-EnumConstantDecl 0x5598989993c0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x559898999470 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5598989993a0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x559898999380 <col:34> 'int' 6
|-CXXMethodDecl 0x559898999728 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x559898999498 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x559898999538 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5598989995b8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x559898999630 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5598989a1fe8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5598989a1fd0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5598989a1fb8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5598989a1f98 <col:98, col:105> 'String' (CXXTemporary 0x5598989a1f98)
|           `-CXXTemporaryObjectExpr 0x5598989a1f60 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5598989999c8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5598989997f8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x559898999870 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5598989998e8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5598989a2098 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5598989a2080 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5598989a2068 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5598989a2048 <col:94, col:101> 'String' (CXXTemporary 0x5598989a2048)
| |         `-CXXTemporaryObjectExpr 0x5598989a2010 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5598989a2880 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5598989a27f8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5598989a27c8 <col:9> '<bound member function type>' ->add_task_handlers 0x559898999728
|     | `-CXXThisExpr 0x5598989a27b8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5598989a2838 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5598989a2738 <col:27> 'Task *' lvalue ParmVar 0x5598989997f8 'task' 'Task *'
|     |-ImplicitCastExpr 0x5598989a2850 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5598989a2758 <col:33> 'NotifierSignal *' lvalue ParmVar 0x559898999870 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5598989a2868 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5598989a2778 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5598989993c0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5598989a2798 <col:62> 'const String' lvalue ParmVar 0x5598989998e8 'prefix' 'const String &'
|-CXXMethodDecl 0x559898999bd8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x559898999a90 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x559898999b08 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5598989a2148 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5598989a2130 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5598989a2118 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5598989a20f8 <col:70, col:77> 'String' (CXXTemporary 0x5598989a20f8)
| |         `-CXXTemporaryObjectExpr 0x5598989a20c0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5598989a2a58 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5598989a29d0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5598989a29a0 <col:9> '<bound member function type>' ->add_task_handlers 0x559898999728
|     | `-CXXThisExpr 0x5598989a2990 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5598989a2a10 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5598989a2910 <col:27> 'Task *' lvalue ParmVar 0x559898999a90 'task' 'Task *'
|     |-ImplicitCastExpr 0x5598989a2a28 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5598989a2930 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5598989a2a40 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5598989a2950 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5598989993c0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5598989a2970 <col:57> 'const String' lvalue ParmVar 0x559898999b08 'prefix' 'const String &'
|-CXXMethodDecl 0x559898999eb8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x559898999ca0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559898999d20 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559898999d98 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55989899a168 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x559898999f88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899a008 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899a088 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55989899a458 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55989899a238 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899a2b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899a330 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55989899a708 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55989899a528 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899a5a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899a628 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55989899a9b8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55989899a7d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899a858 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899a8d8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55989899ac68 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55989899aa88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899ab08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899ab80 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55989899af18 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55989899ad38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899adb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899ae38 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55989899b228 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55989899b040 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899b0c0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899b140 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55989899b508 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55989899b2f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899b378 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899b420 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55989899b7e8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55989899b5d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899b658 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899b700 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55989899ba50 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55989899b8b8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55989899b938 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55989899b9b0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55989899bcf8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55989899bb20 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55989899bba0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55989899bc18 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55989899bfa8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55989899bdc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899be48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899bec8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55989899c258 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55989899c078 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899c0f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899c170 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55989899c508 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55989899c328 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899c3a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899c420 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55989899c7d8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55989899c5d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899c658 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55989899c6f8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55989899cb08 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55989899c8a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55989899c928 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55989899c9a0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55989899ca18 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5598989a2160 <col:93> 'bool' false
|-CXXMethodDecl 0x55989899ccf0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55989899cbd8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55989899cc58 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55989899cec8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55989899cdb0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55989899ce30 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55989899d1a8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55989899cf88 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55989899d000 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55989899d080 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55989899d0f8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55989899d498 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55989899d278 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55989899d2f0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55989899d370 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55989899d3e8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55989899d6d0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55989899d570 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55989899d5f0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55989899d8b8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55989899d798 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55989899d818 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55989899d968 prev 0x559898995108 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55989899da60 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55989899daf0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55989899db68 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55989899dc28 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55989899dcf0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55989899de68 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55989899dda0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55989899df10 <col:24>
| | `-OptimizeNoneAttr 0x55989899df68 <col:34>
| |-CXXMethodDecl 0x55989899dfb0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55989899e268 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55989899e060 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55989899e0d8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55989899e158 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55989899e320 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55989899e358 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55989899e3c0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55989899e448 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55989899e768 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55989899e500 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55989899e578 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55989899e5f0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55989899e670 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55989899e880 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5598989a61f8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5598989a61f8
| | `-ParmVarDecl 0x5598989a6308 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5598989a63a8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5598989a63a8
| | `-ParmVarDecl 0x5598989a64b8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5598989aa5c0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55989899e8f8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55989899e998 <col:38> "" ""
|-CXXMethodDecl 0x55989899ea28 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55989899eac8 <col:44> "" ""
|-AccessSpecDecl 0x55989899eb38 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55989899eb60 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55989899ec60 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55989899ecb0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55989899ec40 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55989899ec20 <col:27> 'int' 4
|-FieldDecl 0x55989899ed68 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55989899ef18 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55989899efd0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5598989a0060 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5598989a00c8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5598989a0218 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5598989a0158 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5598989a03c8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5598989a02d8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5598989a05a8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5598989a0488 <col:20> col:23 'int'
| `-ParmVarDecl 0x5598989a0508 <col:25> col:28 'int'
|-CXXMethodDecl 0x5598989a0850 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5598989a0670 <col:23> col:26 'int'
| |-ParmVarDecl 0x5598989a06f0 <col:28> col:31 'int'
| `-ParmVarDecl 0x5598989a0768 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5598989a0908 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5598989a09d0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5598989a0a20 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5598989a0a70 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5598989a0c50 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5598989a0b00 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5598989a0b78 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5598989a0ef8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5598989a0d18 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5598989a0d98 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5598989a0e10 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5598989a1118 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5598989a0fc8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5598989a1048 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5598989a1450 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5598989a11d8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5598989a1258 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5598989a12d0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5598989a1350 <col:57> col:60 'int'
|-CXXMethodDecl 0x5598989a1638 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5598989a1520 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5598989a15a0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5598989a1788 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5598989a16f8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5598989a1b08 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5598989a1848 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5598989a18c8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5598989a1940 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5598989a19c0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5598989a1c20 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class RandomSwitch
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5598989a9368 <../elements/standard/randomswitch.hh:21:1, line:31:1> line:21:7 class RandomSwitch definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5598989a94c8 <col:1, col:7> col:7 implicit referenced class RandomSwitch
|-AccessSpecDecl 0x5598989a9558 <col:39, col:45> col:39 public
|-CXXConstructorDecl 0x5598989a95e0 <line:23:5, col:18> col:5 RandomSwitch 'void ()'
|-CXXMethodDecl 0x5598989a96e0 <line:25:5, col:61> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5598989920b8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5598989aa2c0 <col:36, col:61>
|   `-ReturnStmt 0x5598989aa2b0 <col:38, col:45>
|     `-ImplicitCastExpr 0x5598989aa298 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5598989aa270 <col:45> 'const char [13]' lvalue "RandomSwitch"
|-CXXMethodDecl 0x5598989a97a8 <line:26:5, col:53> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x559898992180 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5598989aa3a0 <col:36, col:53>
|   `-ReturnStmt 0x5598989aa390 <col:38, col:45>
|     `-ImplicitCastExpr 0x5598989aa378 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5598989aa358 <col:45> 'const char [5]' lvalue "1/1-"
|-CXXMethodDecl 0x5598989a9870 <line:27:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x559898992548 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x5598989aa400 <col:36, col:51>
|   `-ReturnStmt 0x5598989aa3f0 <col:38, col:45>
|     `-ImplicitCastExpr 0x5598989aa3d8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5598989aa3b8 <col:45> 'const char []' lvalue Var 0x559898992690 'PUSH' 'const char []'
|-CXXMethodDecl 0x5598989a9a38 <line:29:5, col:28> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x559898990f28 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5598989a9928 <col:15> col:18 'int'
| `-ParmVarDecl 0x5598989a99a0 <col:20, col:27> col:28 'Packet *'
|-CXXConstructorDecl 0x5598989a9b18 <line:21:7> col:7 implicit RandomSwitch 'void (const RandomSwitch &)' inline default_delete noexcept-unevaluated 0x5598989a9b18
| `-ParmVarDecl 0x5598989a9c28 <col:7> col:7 'const RandomSwitch &'
|-CXXConstructorDecl 0x5598989a9cc8 <col:7> col:7 implicit RandomSwitch 'void (RandomSwitch &&)' inline default_delete noexcept-unevaluated 0x5598989a9cc8
| `-ParmVarDecl 0x5598989a9dd8 <col:7> col:7 'RandomSwitch &&'
|-CXXMethodDecl 0x5598989a9e78 <col:7> col:7 implicit operator= 'RandomSwitch &(const RandomSwitch &)' inline default_delete noexcept-unevaluated 0x5598989a9e78
| `-ParmVarDecl 0x5598989a9f88 <col:7> col:7 'const RandomSwitch &'
|-CXXMethodDecl 0x5598989a9ff8 <col:7> col:7 implicit operator= 'RandomSwitch &(RandomSwitch &&)' inline default_delete noexcept-unevaluated 0x5598989a9ff8
| `-ParmVarDecl 0x5598989aa108 <col:7> col:7 'RandomSwitch &&'
`-CXXDestructorDecl 0x5598989aa190 <col:7> col:7 implicit ~RandomSwitch 'void ()' inline default noexcept-unevaluated 0x5598989aa190
  `-Overrides: [ 0x559898990c58 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.RandomSwitch = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.RandomSwitch.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55989874f230 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55989874f348 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55989874f3d8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55989874f4a8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55989874f590 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55989874f7a8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55989874f650 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55989874f958 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55989874f860 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55989874faa0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55989874fa10 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55989874fbe8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55989874fb58 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55989874fd30 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55989874fca0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55989874fdf8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55989874ff40 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55989874feb0 <col:28> col:31 'int'
|-CXXMethodDecl 0x559898750008 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x559898750150 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5598987500c0 <col:28> col:31 'int'
|-CXXMethodDecl 0x5598987502c8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x559898750208 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559898750410 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x559898750380 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5598987504d8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x559898750698 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x559898750588 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559898750600 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5598987508e8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x559898750758 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5598987507d0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559898750998 <col:86> "" ""
|-CXXMethodDecl 0x559898750c08 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x559898750a78 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x559898750af0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559898750db8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x559898750cc8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x559898750f68 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x559898750e70 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x559898751238 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x559898751020 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x559898751098 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559898751110 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559898751518 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x559898751300 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x559898751378 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5598987513f0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5598987515d0 <col:115> "" ""
|-AccessSpecDecl 0x559898751640 <line:84:3, col:10> col:3 private
|-FieldDecl 0x559898751678 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559898752b90 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x559898752b90
| `-ParmVarDecl 0x559898752c98 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x559898752d38 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x559898752d38
| `-ParmVarDecl 0x559898752e48 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x559898788478 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55989897a470 <col:7>
|-CXXConstructorDecl 0x559898788550 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x559898788550
| `-ParmVarDecl 0x559898788668 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5598987886d8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5598987886d8
| `-ParmVarDecl 0x5598987887e8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55989897ce70 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559898969018 prev 0x55989895e220 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559898969110 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x559898969200 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x559898969328 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5598989694a8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x559898969628 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5598989697a8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55989897a5d8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55989897ae48 <col:11>
|-CXXDestructorDecl 0x55989897a6b0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55989897a7e8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55989897a7e8
| `-ParmVarDecl 0x55989897a8f8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55989897a998 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55989897a998
| `-ParmVarDecl 0x55989897aaa8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55989897d868 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55989897d978 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55989897dbf8 <col:11>
|   `-ReturnStmt 0x55989897dbe8 <col:11>
|     `-UnaryOperator 0x55989897dbd0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55989897dbc0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55989897d9e8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55989897d9e8
  `-ParmVarDecl 0x55989897daf8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559898969810 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559898969928 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5598989699c8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x559898969a30 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x559898969a98 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x559898969b00 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x559898969b60 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x559898969c20 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x559898969c80 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x559898969ce0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55989897a4e8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5598989699c8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55989897ae58 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55989897aeb0 <col:12>
|-CXXConstructorDecl 0x55989897ab18 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55989897ab18
| `-ParmVarDecl 0x55989897ac28 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55989897acc8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55989897acc8
| `-ParmVarDecl 0x55989897add8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55989897cf50 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559898957930 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559898957a48 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x559898957ad8 <col:16, col:22> col:16 public
|-EnumDecl 0x559898957b00 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x559898957c00 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x559898957ce0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898957be0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x559898957bc0 <col:21> 'int' 28
| `-EnumConstantDecl 0x559898957c90 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x559898957cf8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559898957c70 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x559898957c50 <col:22> 'int' 64
|-CXXMethodDecl 0x559898958038 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x559898957d20 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559898957da0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x559898957e18 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559898957e90 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5598989580f8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5598989582f8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x559898958170 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5598989581e8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5598989583a8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x559898958508 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x559898958418 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5598989585b0 <col:72> warn_unused_result ""
|-TypedefDecl 0x559898958910 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5598989588a0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x559898958840 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x559898958800 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5598984312d0 'void'
|       |-PointerType 0x5598986d7ad0 'unsigned char *'
|       | `-BuiltinType 0x5598984313d0 'unsigned char'
|       |-TypedefType 0x5598984d4040 'size_t' sugar
|       | |-Typedef 0x5598984a1b20 'size_t'
|       | `-BuiltinType 0x559898431430 'unsigned long'
|       `-PointerType 0x559898431ad0 'void *'
|         `-BuiltinType 0x5598984312d0 'void'
|-CXXMethodDecl 0x559898958d88 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x559898958980 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5598989589f8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559898958a90 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x559898958b10 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x559898973480 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x559898973468 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x559898973430 <col:58> 'int' 0
| |-ParmVarDecl 0x559898958b90 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5598989734a8 <col:76> 'int' 0
| |-ParmVarDecl 0x559898958c10 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5598989734c8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x559898958e58 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x559898958ed8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x559898958f98 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x559898959038 <col:20>
| `-OptimizeNoneAttr 0x559898959090 <col:30>
|-CXXMethodDecl 0x559898959108 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5598989591a8 <col:20>
| `-OptimizeNoneAttr 0x559898959200 <col:30>
|-CXXMethodDecl 0x559898959278 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x559898959318 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5598989593c8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x559898959468 <col:20>
| |-OptimizeNoneAttr 0x5598989594c0 <col:30>
| `-WarnUnusedResultAttr 0x5598989594e8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x559898959540 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5598989595e0 <col:20>
| `-OptimizeNoneAttr 0x559898959638 <col:30>
|-CXXMethodDecl 0x559898959688 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x559898959728 <col:20>
| `-OptimizeNoneAttr 0x559898959780 <col:30>
|-CXXMethodDecl 0x5598989597c8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x559898959868 <col:20>
| `-OptimizeNoneAttr 0x5598989598c0 <col:30>
|-CXXMethodDecl 0x559898959908 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5598989599c8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x559898959a90 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559898959b58 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559898959c18 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559898959d38 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x559898973590 <col:54, line:99:5>
|   `-ReturnStmt 0x559898973580 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x559898973568 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x559898973538 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55989896a018
|         `-CXXThisExpr 0x559898973528 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x559898959ed8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x559898959de8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x559898973640 <col:67, line:103:5>
|   `-BinaryOperator 0x559898973620 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5598989735b8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55989896a018
|     | `-CXXThisExpr 0x5598989735a8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x559898973608 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5598989735e8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x559898959de8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x559898959fd0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5598989736c0 <col:33, line:107:5>
|   `-ReturnStmt 0x5598989736b0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x559898973698 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x559898973668 <col:16> 'void *' lvalue ->_destructor_argument 0x55989896a080
|         `-CXXThisExpr 0x559898973658 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55989895a090 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x559898973cf0 <col:25, line:113:5>
|   |-ParenExpr 0x559898973a38 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x559898973a08 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x559898973778 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x559898973750 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x559898973718 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5598989736e8 <col:24> '<bound member function type>' ->shared 0x559898959108
|   |   |       `-ImplicitCastExpr 0x559898973738 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5598989736d8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5598989737d8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5598989737b8 <col:42> 'int' 0
|   |   `-CallExpr 0x559898973968 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x559898973950 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559898973930 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5598989739a8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898973848 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5598989739c0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898973870 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5598989739d8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5598989738a8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5598989739f0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559898973918 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559898973900 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5598989738c8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x559898973c38 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x559898973a68 <col:2> 'unsigned char *' lvalue ->_head 0x559898969e20
|   | | `-CXXThisExpr 0x559898973a58 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x559898973c20 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x559898973c00 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x559898973aa8 <col:10> 'unsigned char *' lvalue ->_data 0x559898969e88
|   |     | `-CXXThisExpr 0x559898973a98 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x559898973be8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x559898973bc8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x559898973ae8 <col:18> 'unsigned char *' lvalue ->_tail 0x559898969ef0
|   |         | `-CXXThisExpr 0x559898973ad8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x559898973bb0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x559898973b90 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x559898973b28 <col:26> 'unsigned char *' lvalue ->_end 0x559898969f58
|   |             | `-CXXThisExpr 0x559898973b18 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x559898973b78 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x559898973b58 <col:33> 'int' 0
|   `-BinaryOperator 0x559898973cd0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x559898973c68 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55989896a018
|     | `-CXXThisExpr 0x559898973c58 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x559898973cb8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x559898973c98 <col:16> 'int' 0
|-CXXMethodDecl 0x55989895a1d0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55989895a140 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55989895a278 <col:20>
| |-OptimizeNoneAttr 0x55989895a2d0 <col:30>
| `-WarnUnusedResultAttr 0x55989895a2f8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55989895a3c8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55989895a338 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55989895a470 <col:20>
| |-OptimizeNoneAttr 0x55989895a4c8 <col:30>
| `-WarnUnusedResultAttr 0x55989895a4f0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55989895a628 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55989895a530 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55989895a6d0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55989895a7d0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55989895a740 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55989895a878 <col:20>
| `-OptimizeNoneAttr 0x55989895a8d0 <col:30>
|-CXXMethodDecl 0x55989895a998 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55989895a908 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55989895aa40 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55989895ab40 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55989895aab0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55989895abe8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55989895ace8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55989895ac58 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55989895ad90 <col:20>
| `-OptimizeNoneAttr 0x55989895ade8 <col:30>
|-CXXMethodDecl 0x55989895af78 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55989895ae28 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55989895aea0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5598989734e8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55989895b028 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55989895b228 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55989895b0a0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55989895b118 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55989895b438 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55989895b2e8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55989895b360 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55989895b648 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55989895b4f8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55989895b578 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5598989734f8 <col:39> 'int' 0
|-CXXMethodDecl 0x55989895b718 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55989895b7e0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55989895b8a8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55989895b968 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55989895ba30 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55989895bb78 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55989895bae8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55989895bd48 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55989895bc38 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55989895bcb0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55989895be18 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55989895bed8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55989895bf78 <col:20>
| `-OptimizeNoneAttr 0x55989895bfd0 <col:30>
|-CXXMethodDecl 0x55989895c020 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55989895c0c0 <col:20>
| `-OptimizeNoneAttr 0x55989895c118 <col:30>
|-CXXMethodDecl 0x55989895c168 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55989895c228 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55989895c2f0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55989895c390 <col:20>
| `-OptimizeNoneAttr 0x55989895c3e8 <col:30>
|-CXXMethodDecl 0x55989895c538 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55989895c428 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55989895c4a0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55989895c688 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55989895c5f8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55989895c760 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55989895c820 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55989895c8c0 <col:20>
| `-OptimizeNoneAttr 0x55989895c918 <col:30>
|-CXXMethodDecl 0x55989895c968 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55989895ca08 <col:20>
| `-OptimizeNoneAttr 0x55989895ca60 <col:30>
|-CXXMethodDecl 0x55989895cab0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55989895cb78 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55989895cc18 <col:20>
| `-OptimizeNoneAttr 0x55989895cc70 <col:30>
|-CXXMethodDecl 0x55989895ccb8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55989895cdd8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55989895cf48 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55989895ce88 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55989895d038 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55989895d0d8 <col:20>
| `-OptimizeNoneAttr 0x55989895d130 <col:30>
|-CXXMethodDecl 0x55989895d180 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55989895d240 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55989895d478 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55989895d2f0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55989895d368 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55989895d528 <col:20>
| `-OptimizeNoneAttr 0x55989895d580 <col:30>
|-CXXMethodDecl 0x55989895d628 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55989895d6c8 <col:20>
| `-OptimizeNoneAttr 0x55989895d720 <col:30>
|-CXXMethodDecl 0x55989895d770 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55989895d810 <col:20>
| `-OptimizeNoneAttr 0x55989895d868 <col:30>
|-CXXMethodDecl 0x55989895d8b0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55989895d950 <col:20>
| `-OptimizeNoneAttr 0x55989895d9a8 <col:30>
|-CXXMethodDecl 0x55989895daa8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55989895d9e0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55989895db50 <col:20>
| `-OptimizeNoneAttr 0x55989895dba8 <col:30>
|-CXXMethodDecl 0x55989895dd68 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55989895dbe0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55989895dc58 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55989895de18 <col:20>
| `-OptimizeNoneAttr 0x55989895de70 <col:30>
|-CXXMethodDecl 0x55989895df18 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55989895e038 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55989895e158 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55989895e1f8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55989895e220 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55989895e348 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55989895e3e8 <col:20>
| `-OptimizeNoneAttr 0x55989895e440 <col:30>
|-CXXMethodDecl 0x55989895e4e8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55989895e588 <col:20>
| `-OptimizeNoneAttr 0x55989895e5e0 <col:30>
|-AccessSpecDecl 0x55989895e608 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55989895e630 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55989895e730 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55989895e780 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55989895e710 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55989895e6f0 <col:14> 'int' 48
|-CXXMethodDecl 0x55989895e7e8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55989895e888 <col:20>
| `-OptimizeNoneAttr 0x55989895e8e0 <col:30>
|-CXXMethodDecl 0x55989895e958 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55989895e9f8 <col:20>
| `-OptimizeNoneAttr 0x55989895ea50 <col:30>
|-CXXMethodDecl 0x55989895eb18 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55989895ea88 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55989895ecb8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55989895ee58 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55989895ed68 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55989895ef00 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55989895f000 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55989895f3b0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55989895efe0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55989895efc0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55989895f090 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55989895f3c8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55989895f070 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55989895f050 <col:14> 'int' 1
| |-EnumConstantDecl 0x55989895f120 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55989895f3e0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55989895f100 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55989895f0e0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55989895f1b0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55989895f3f8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55989895f190 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55989895f170 <col:14> 'int' 3
| |-EnumConstantDecl 0x55989895f240 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55989895f410 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55989895f220 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55989895f200 <col:13> 'int' 4
| |-EnumConstantDecl 0x55989895f2d0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55989895f428 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55989895f2b0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55989895f290 <col:13> 'int' 5
| `-EnumConstantDecl 0x55989895f360 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55989895f440 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55989895f340 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55989895f320 <col:14> 'int' 6
|-CXXMethodDecl 0x55989895f4a8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55989895f548 <col:20>
| `-OptimizeNoneAttr 0x55989895f5a0 <col:30>
|-CXXMethodDecl 0x55989895f698 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55989895f5d8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55989895f740 <col:20>
| `-OptimizeNoneAttr 0x55989895f798 <col:30>
|-CXXMethodDecl 0x55989895f808 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55989895f930 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55989895faa8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55989895f9e0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55989895fb70 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55989895fc38 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55989895fd78 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55989895fce8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55989895fe20 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55989895ff20 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x559898960120 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55989895ff00 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55989895fee0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55989895ffb0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x559898960138 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55989895ff90 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55989895ff70 <col:45> 'int' 4
| |-EnumConstantDecl 0x559898960040 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x559898960150 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898960020 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x559898960000 <col:24> 'int' 0
| `-EnumConstantDecl 0x5598989600d0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x559898960168 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5598989600b0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x559898960090 <col:47> 'int' 16
|-CXXMethodDecl 0x5598989601c8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x559898960338 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x559898960278 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5598989603e0 <col:20>
| `-OptimizeNoneAttr 0x559898960438 <col:30>
|-CXXMethodDecl 0x559898960488 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x559898973e10 <col:18, col:36>
|   `-ReturnStmt 0x559898973e00 <col:20, col:33>
|     `-ImplicitCastExpr 0x559898973de8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x559898973dc8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x559898973d98 <col:27> '<bound member function type>' ->xanno 0x55989895e4e8
|           `-CXXThisExpr 0x559898973d88 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x559898960580 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x559898973f20 <col:30, col:48>
|   `-ReturnStmt 0x559898973f10 <col:32, col:45>
|     `-ImplicitCastExpr 0x559898973ef8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x559898973ed8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x559898973ea8 <col:39> '<bound member function type>' ->xanno 0x55989895e348
|           `-CXXThisExpr 0x559898973e98 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x559898960668 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5598989740b8 <col:24, col:50>
|   `-ReturnStmt 0x5598989740a8 <col:26, col:47>
|     `-UnaryOperator 0x559898974090 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559898974070 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x559898974058 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559898974008 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x559898969328
|         |   `-CXXMemberCallExpr 0x559898973fe8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x559898973fb8 <col:34> '<bound member function type>' ->xanno 0x55989895e4e8
|         |       `-CXXThisExpr 0x559898973fa8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x559898974038 <col:46> 'int' 0
|-CXXMethodDecl 0x559898960770 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x559898974288 <col:36, col:62>
|   `-ReturnStmt 0x559898974278 <col:38, col:59>
|     `-UnaryOperator 0x559898974260 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559898974240 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x559898974228 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5598989741a0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x559898969328
|         |   `-CXXMemberCallExpr 0x559898974180 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x559898974150 <col:46> '<bound member function type>' ->xanno 0x55989895e348
|         |       `-CXXThisExpr 0x559898974140 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5598989741d0 <col:58> 'int' 0
|-CXXMethodDecl 0x559898960888 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x559898974420 <col:26, col:53>
|   `-ReturnStmt 0x559898974410 <col:28, col:50>
|     `-UnaryOperator 0x5598989743f8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5598989743d8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5598989743c0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559898974370 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x559898969628
|         |   `-CXXMemberCallExpr 0x559898974350 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x559898974320 <col:36> '<bound member function type>' ->xanno 0x55989895e4e8
|         |       `-CXXThisExpr 0x559898974310 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5598989743a0 <col:49> 'int' 0
|-CXXMethodDecl 0x5598989609a8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5598989745f8 <col:38, col:65>
|   `-ReturnStmt 0x5598989745e8 <col:40, col:62>
|     `-UnaryOperator 0x5598989745d0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5598989745b0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x559898974598 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559898974508 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x559898969628
|         |   `-CXXMemberCallExpr 0x5598989744e8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5598989744b8 <col:48> '<bound member function type>' ->xanno 0x55989895e348
|         |       `-CXXThisExpr 0x5598989744a8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x559898974538 <col:61> 'int' 0
|-CXXMethodDecl 0x559898960b58 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x559898960a60 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x559898974cc8 <col:34, line:463:5>
|   |-ParenExpr 0x559898974b10 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x559898974ae0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x559898974748 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559898974718 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559898974668 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559898974650 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559898974610 <col:23> 'int' lvalue ParmVar 0x559898960a60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559898974630 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5598989746f8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5598989746c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559898974688 <col:33> 'int' lvalue ParmVar 0x559898960a60 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5598989746e0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5598989746a8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5598989747a8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898974788 <col:56> 'int' 0
|   |   `-CallExpr 0x559898974a40 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x559898974a28 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559898974a08 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559898974a80 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898974898 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x559898974a98 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5598989748c8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559898974ab0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898974900 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x559898974ac8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5598989749f0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5598989749d8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559898974998 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x559898974cb8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x559898974ca0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x559898974c80 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x559898974c50 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559898974c00 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x559898969328
|         |   `-CXXMemberCallExpr 0x559898974be0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x559898974bb0 <col:9> '<bound member function type>' ->xanno 0x55989895e348
|         |       `-CXXThisExpr 0x559898974ba0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x559898974c68 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x559898974c30 <col:21> 'int' lvalue ParmVar 0x559898960a60 'i' 'int'
|-CXXMethodDecl 0x559898960da8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x559898960c18 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x559898960c90 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x559898975358 <col:40, line:472:5>
|   |-ParenExpr 0x559898975170 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x559898975140 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x559898974e20 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559898974df0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559898974d40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559898974d28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559898974ce8 <col:23> 'int' lvalue ParmVar 0x559898960c18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559898974d08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559898974dd0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559898974da0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559898974d60 <col:33> 'int' lvalue ParmVar 0x559898960c18 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x559898974db8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x559898974d80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x559898974e80 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898974e60 <col:56> 'int' 0
|   |   `-CallExpr 0x5598989750a0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x559898975088 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559898975068 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5598989750e0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898974ef0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5598989750f8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898974f20 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559898975110 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898974f58 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x559898975128 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559898975050 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559898975038 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559898974ff8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x559898975338 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5598989752e0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5598989752b0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x559898975260 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x559898969328
|     | |   `-CXXMemberCallExpr 0x559898975240 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x559898975210 <col:2> '<bound member function type>' ->xanno 0x55989895e4e8
|     | |       `-CXXThisExpr 0x559898975200 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5598989752c8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x559898975290 <col:14> 'int' lvalue ParmVar 0x559898960c18 'i' 'int'
|     `-ImplicitCastExpr 0x559898975320 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x559898975300 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x559898960c90 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x559898960f68 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x559898960e70 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x559898975ad8 <col:36, line:485:5>
|   |-ParenExpr 0x559898975840 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x559898975810 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5598989754f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5598989754c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5598989753d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5598989753b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559898975378 <col:23> 'int' lvalue ParmVar 0x559898960e70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559898975398 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5598989754a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559898975488 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5598989753f0 <col:33> 'int' lvalue ParmVar 0x559898960e70 'i' 'int'
|   |   |     `-BinaryOperator 0x559898975468 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559898975450 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559898975410 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559898975430 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559898975550 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898975530 <col:60> 'int' 0
|   |   `-CallExpr 0x559898975770 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559898975758 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559898975738 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5598989757b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5598989755c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5598989757c8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5598989755f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5598989757e0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898975630 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5598989757f8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559898975720 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559898975708 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5598989756c8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x559898975ac8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x559898975ab0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x559898975a98 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559898975a68 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x559898975a08 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5598989759d8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559898975950 <col:61, col:70> 'char const[48]' lvalue ->c 0x559898969200
|             |   `-CXXMemberCallExpr 0x559898975930 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559898975900 <col:61> '<bound member function type>' ->xanno 0x55989895e348
|             |       `-CXXThisExpr 0x5598989758f0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5598989759f0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559898975980 <col:74> 'int' lvalue ParmVar 0x559898960e70 'i' 'int'
|-CXXMethodDecl 0x5598989611b8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x559898961028 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5598989610a0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x559898976228 <col:42, line:500:5>
|   |-ParenExpr 0x559898975fc0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x559898975f90 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559898975c70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559898975c40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559898975b50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559898975b38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559898975af8 <col:23> 'int' lvalue ParmVar 0x559898961028 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559898975b18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559898975c20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559898975c08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559898975b70 <col:33> 'int' lvalue ParmVar 0x559898961028 'i' 'int'
|   |   |     `-BinaryOperator 0x559898975be8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559898975bd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559898975b90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559898975bb0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559898975cd0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898975cb0 <col:60> 'int' 0
|   |   `-CallExpr 0x559898975ef0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559898975ed8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559898975eb8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559898975f30 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898975d40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559898975f48 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898975d78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559898975f60 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898975db0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x559898975f78 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559898975ea0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559898975e88 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559898975e48 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x559898976208 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5598989761b8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559898976188 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x559898976130 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559898976100 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5598989760b0 <col:48, col:57> 'char [48]' lvalue ->c 0x559898969200
|     |     |   `-CXXMemberCallExpr 0x559898976090 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559898976060 <col:48> '<bound member function type>' ->xanno 0x55989895e4e8
|     |     |       `-CXXThisExpr 0x559898976050 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559898976118 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5598989760e0 <col:61> 'int' lvalue ParmVar 0x559898961028 'i' 'int'
|     `-ImplicitCastExpr 0x5598989761f0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5598989761d0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5598989610a0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x559898961378 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x559898961280 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x559898976988 <col:35, line:513:5>
|   |-ParenExpr 0x559898976698 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x559898976668 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5598989763c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559898976390 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5598989762a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559898976288 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559898976248 <col:23> 'int' lvalue ParmVar 0x559898961280 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559898976268 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559898976370 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559898976358 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5598989762c0 <col:33> 'int' lvalue ParmVar 0x559898961280 'i' 'int'
|   |   |     `-BinaryOperator 0x559898976338 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559898976320 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5598989762e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559898976300 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559898976420 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898976400 <col:60> 'int' 0
|   |   `-CallExpr 0x5598989765c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5598989765b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559898976590 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559898976608 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898976490 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559898976620 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5598989764c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559898976638 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898976500 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x559898976650 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559898976578 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559898976560 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559898976520 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x559898976978 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x559898976960 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x559898976948 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559898976918 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x559898976890 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x559898976860 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559898976810 <col:60, col:69> 'char const[48]' lvalue ->c 0x559898969200
|             |   `-CXXMemberCallExpr 0x5598989767f0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5598989767c0 <col:60> '<bound member function type>' ->xanno 0x55989895e348
|             |       `-CXXThisExpr 0x5598989767b0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559898976878 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559898976840 <col:73> 'int' lvalue ParmVar 0x559898961280 'i' 'int'
|-CXXMethodDecl 0x5598989615c8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x559898961438 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5598989614b0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5598989770a8 <col:41, line:528:5>
|   |-ParenExpr 0x559898976e30 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x559898976e00 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559898976b20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559898976af0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559898976a00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5598989769e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5598989769a8 <col:23> 'int' lvalue ParmVar 0x559898961438 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5598989769c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559898976ad0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559898976ab8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559898976a20 <col:33> 'int' lvalue ParmVar 0x559898961438 'i' 'int'
|   |   |     `-BinaryOperator 0x559898976a98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559898976a80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559898976a40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559898976a60 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559898976b80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898976b60 <col:60> 'int' 0
|   |   `-CallExpr 0x559898976d60 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559898976d48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559898976d28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559898976da0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898976bf0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559898976db8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898976c28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559898976dd0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898976c60 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x559898976de8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559898976d10 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559898976cf8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559898976cb8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x559898977088 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x559898977038 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559898977008 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x559898976fb0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559898976f70 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559898976f20 <col:47, col:56> 'char [48]' lvalue ->c 0x559898969200
|     |     |   `-CXXMemberCallExpr 0x559898976f00 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559898976ed0 <col:47> '<bound member function type>' ->xanno 0x55989895e4e8
|     |     |       `-CXXThisExpr 0x559898976ec0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559898976f88 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559898976f50 <col:60> 'int' lvalue ParmVar 0x559898961438 'i' 'int'
|     `-ImplicitCastExpr 0x559898977070 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x559898977050 <col:65> 'int16_t':'short' lvalue ParmVar 0x5598989614b0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x559898961788 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x559898961690 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x559898977778 <col:36, line:541:5>
|   |-ParenExpr 0x559898977518 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5598989774e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559898977240 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559898977210 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559898977120 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559898977108 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5598989770c8 <col:23> 'int' lvalue ParmVar 0x559898961690 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5598989770e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5598989771f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5598989771d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559898977140 <col:33> 'int' lvalue ParmVar 0x559898961690 'i' 'int'
|   |   |     `-BinaryOperator 0x5598989771b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5598989771a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559898977160 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559898977180 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5598989772a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898977280 <col:60> 'int' 0
|   |   `-CallExpr 0x559898977448 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559898977430 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559898977410 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559898977488 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898977310 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5598989774a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898977348 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5598989774b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898977380 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5598989774d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5598989773f8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5598989773e0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5598989773a0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x559898977768 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x559898977750 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x559898977738 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559898977708 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5598989776b0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x559898977680 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559898977630 <col:61, col:70> 'char const[48]' lvalue ->c 0x559898969200
|             |   `-CXXMemberCallExpr 0x559898977610 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5598989775e0 <col:61> '<bound member function type>' ->xanno 0x55989895e348
|             |       `-CXXThisExpr 0x5598989775d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559898977698 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559898977660 <col:74> 'int' lvalue ParmVar 0x559898961690 'i' 'int'
|-CXXMethodDecl 0x559898961958 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x559898961848 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5598989618c0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559898961a08 <col:20>
| `-OptimizeNoneAttr 0x559898961a60 <col:30>
|-CXXMethodDecl 0x559898961b98 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x559898961aa0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x559898977e48 <col:35, line:562:5>
|   |-ParenExpr 0x559898977be8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x559898977bb8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559898977910 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5598989778e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5598989777f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5598989777d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559898977798 <col:23> 'int' lvalue ParmVar 0x559898961aa0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5598989777b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5598989778c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5598989778a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559898977810 <col:33> 'int' lvalue ParmVar 0x559898961aa0 'i' 'int'
|   |   |     `-BinaryOperator 0x559898977888 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559898977870 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559898977830 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559898977850 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x559898977970 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898977950 <col:60> 'int' 0
|   |   `-CallExpr 0x559898977b18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559898977b00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559898977ae0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559898977b58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5598989779e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x559898977b70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898977a18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559898977b88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898977a50 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x559898977ba0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559898977ac8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559898977ab0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559898977a70 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x559898977e38 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x559898977e20 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x559898977e08 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559898977dd8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x559898977d80 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x559898977d50 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559898977d00 <col:60, col:69> 'char const[48]' lvalue ->c 0x559898969200
|             |   `-CXXMemberCallExpr 0x559898977ce0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559898977cb0 <col:60> '<bound member function type>' ->xanno 0x55989895e348
|             |       `-CXXThisExpr 0x559898977ca0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559898977d68 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559898977d30 <col:73> 'int' lvalue ParmVar 0x559898961aa0 'i' 'int'
|-CXXMethodDecl 0x559898961da8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x559898961c58 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559898961cd0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x559898978528 <col:41, line:577:5>
|   |-ParenExpr 0x5598989782b8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x559898978288 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559898977fe0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559898977fb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559898977ec0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559898977ea8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559898977e68 <col:23> 'int' lvalue ParmVar 0x559898961c58 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559898977e88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559898977f90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559898977f78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559898977ee0 <col:33> 'int' lvalue ParmVar 0x559898961c58 'i' 'int'
|   |   |     `-BinaryOperator 0x559898977f58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559898977f40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559898977f00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559898977f20 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x559898978040 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898978020 <col:60> 'int' 0
|   |   `-CallExpr 0x5598989781e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5598989781d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5598989781b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559898978228 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5598989780b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x559898978240 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5598989780e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559898978258 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898978120 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x559898978270 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559898978198 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559898978180 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559898978140 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x559898978508 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5598989784b8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559898978488 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x559898978428 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5598989783f8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5598989783a8 <col:47, col:56> 'char [48]' lvalue ->c 0x559898969200
|     |     |   `-CXXMemberCallExpr 0x559898978388 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559898978358 <col:47> '<bound member function type>' ->xanno 0x55989895e4e8
|     |     |       `-CXXThisExpr 0x559898978348 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559898978410 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5598989783d8 <col:60> 'int' lvalue ParmVar 0x559898961c58 'i' 'int'
|     `-ImplicitCastExpr 0x5598989784f0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5598989784d0 <col:65> 'int32_t':'int' lvalue ParmVar 0x559898961cd0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x559898961f68 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x559898961e70 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x559898978c58 <col:36, line:591:5>
|   |-ParenExpr 0x559898978998 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x559898978968 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5598989786c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559898978690 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5598989785a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559898978588 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559898978548 <col:23> 'int' lvalue ParmVar 0x559898961e70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559898978568 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559898978670 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559898978658 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5598989785c0 <col:33> 'int' lvalue ParmVar 0x559898961e70 'i' 'int'
|   |   |     `-BinaryOperator 0x559898978638 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559898978620 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5598989785e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559898978600 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x559898978720 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898978700 <col:60> 'int' 0
|   |   `-CallExpr 0x5598989788c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5598989788b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559898978890 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559898978908 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898978790 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x559898978920 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5598989787c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559898978938 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898978800 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x559898978950 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559898978878 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559898978860 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559898978820 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x559898978c48 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x559898978c30 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x559898978c18 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559898978be8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x559898978b60 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x559898978b30 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559898978ae0 <col:61, col:70> 'char const[48]' lvalue ->c 0x559898969200
|             |   `-CXXMemberCallExpr 0x559898978ac0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559898978a90 <col:61> '<bound member function type>' ->xanno 0x55989895e348
|             |       `-CXXThisExpr 0x559898978a80 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559898978b48 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559898978b10 <col:74> 'int' lvalue ParmVar 0x559898961e70 'i' 'int'
|-CXXMethodDecl 0x5598989621b8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x559898962028 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5598989620a0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x559898979338 <col:42, line:606:5>
|   |-ParenExpr 0x5598989790c8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x559898979098 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559898978df0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559898978dc0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559898978cd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559898978cb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559898978c78 <col:23> 'int' lvalue ParmVar 0x559898962028 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559898978c98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559898978da0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559898978d88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559898978cf0 <col:33> 'int' lvalue ParmVar 0x559898962028 'i' 'int'
|   |   |     `-BinaryOperator 0x559898978d68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559898978d50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559898978d10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559898978d30 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x559898978e50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898978e30 <col:60> 'int' 0
|   |   `-CallExpr 0x559898978ff8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559898978fe0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559898978fc0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559898979038 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898978ec0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x559898979050 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898978ef8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559898979068 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898978f30 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x559898979080 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559898978fa8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559898978f90 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559898978f50 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x559898979318 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5598989792c8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559898979298 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x559898979238 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559898979208 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5598989791b8 <col:48, col:57> 'char [48]' lvalue ->c 0x559898969200
|     |     |   `-CXXMemberCallExpr 0x559898979198 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559898979168 <col:48> '<bound member function type>' ->xanno 0x55989895e4e8
|     |     |       `-CXXThisExpr 0x559898979158 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559898979220 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5598989791e8 <col:61> 'int' lvalue ParmVar 0x559898962028 'i' 'int'
|     `-ImplicitCastExpr 0x559898979300 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5598989792e0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5598989620a0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x559898962350 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x559898962280 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x559898979ba8 <col:33, line:620:5>
|   |-ParenExpr 0x559898979920 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5598989798f0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x559898979540 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559898979510 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5598989793b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559898979398 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559898979358 <col:23> 'int' lvalue ParmVar 0x559898962280 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559898979378 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5598989794f0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5598989794d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5598989793d0 <col:33> 'int' lvalue ParmVar 0x559898962280 'i' 'int'
|   |   |     `-BinaryOperator 0x5598989794b8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5598989794a0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5598989793f0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x559898979478 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x559898979460 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x559898979428 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5598989795a0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898979580 <col:79> 'int' 0
|   |   `-CallExpr 0x559898979850 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x559898979838 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559898979818 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559898979890 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898979688 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5598989798a8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5598989796d0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5598989798c0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898979708 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5598989798d8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559898979800 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5598989797e8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5598989797a8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x559898979b98 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x559898979b80 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x559898979b68 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559898979b38 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x559898979ab0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x559898979a80 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559898979a30 <col:67, col:76> 'char const[48]' lvalue ->c 0x559898969200
|             |   `-CXXMemberCallExpr 0x559898979a10 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5598989799e0 <col:67> '<bound member function type>' ->xanno 0x55989895e348
|             |       `-CXXThisExpr 0x5598989799d0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559898979a98 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559898979a60 <col:80> 'int' lvalue ParmVar 0x559898962280 'i' 'int'
|-CXXMethodDecl 0x559898962568 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x559898962410 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559898962490 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55989897a3d0 <col:45, line:635:5>
|   |-ParenExpr 0x55989897a118 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55989897a0e8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x559898979db0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559898979d80 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559898979c20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559898979c08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559898979bc8 <col:23> 'int' lvalue ParmVar 0x559898962410 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559898979be8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559898979d60 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x559898979d48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559898979c40 <col:33> 'int' lvalue ParmVar 0x559898962410 'i' 'int'
|   |   |     `-BinaryOperator 0x559898979d28 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559898979d10 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559898979c60 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55989895e730 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x559898979ce8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x559898979cd0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x559898979c98 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x559898979e10 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559898979df0 <col:79> 'int' 0
|   |   `-CallExpr 0x55989897a048 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55989897a030 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55989897a010 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55989897a088 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898979e80 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55989897a0a0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559898979ec8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55989897a0b8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559898979f00 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55989897a0d0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559898979ff8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559898979fe0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559898979f98 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55989897a3b0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55989897a318 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55989897a2e8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55989897a288 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55989897a258 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55989897a208 <col:54, col:63> 'char [48]' lvalue ->c 0x559898969200
|     |     |   `-CXXMemberCallExpr 0x55989897a1e8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55989897a1b8 <col:54> '<bound member function type>' ->xanno 0x55989895e4e8
|     |     |       `-CXXThisExpr 0x55989897a1a8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55989897a270 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55989897a238 <col:67> 'int' lvalue ParmVar 0x559898962410 'i' 'int'
|     `-CXXConstCastExpr 0x55989897a380 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55989897a368 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55989897a330 <col:91> 'const void *' lvalue ParmVar 0x559898962490 'x' 'const void *'
|-CXXMethodDecl 0x559898962638 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55989897a458 <col:34, line:640:5>
|   `-ReturnStmt 0x55989897a448 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55989897a430 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55989897a400 <col:16> 'Packet *' lvalue ->_data_packet 0x559898969db8
|         `-CXXThisExpr 0x55989897a3f0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x559898962778 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5598989626e8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559898973518 <col:46> 'bool' true
|-CXXMethodDecl 0x5598989628f8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x559898962830 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5598989629a0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x559898963150 <line:660:22> "" ""
| |-EnumConstantDecl 0x559898962aa0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5598989631c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898962a80 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x559898962a60 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x559898957c00 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x559898962b30 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5598989631d8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898962b10 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x559898962af0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x559898957c90 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x559898962bc0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5598989631f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898962ba0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x559898962b80 <col:21> 'int' 0
| |-EnumConstantDecl 0x559898962c50 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559898963208 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898962c30 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x559898962c10 <col:19> 'int' 16
| |-EnumConstantDecl 0x559898962ce0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559898963220 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898962cc0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x559898962ca0 <col:21> 'int' 16
| |-EnumConstantDecl 0x559898962d70 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559898963238 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898962d50 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x559898962d30 <col:19> 'int' 32
| |-EnumConstantDecl 0x559898962e00 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559898963250 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898962de0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x559898962dc0 <col:19> 'int' EnumConstant 0x559898962c50 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x559898962e90 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559898963268 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898962e70 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x559898962e50 <col:19> 'int' EnumConstant 0x559898962d70 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x559898962f60 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559898963280 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898962f40 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x559898962f20 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x559898962ee0 <col:23> 'int' EnumConstant 0x559898962e90 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x559898962f00 <col:40> 'int' 2
| |-EnumConstantDecl 0x559898963030 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559898963298 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559898963010 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x559898962ff0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x559898962fb0 <col:23> 'int' EnumConstant 0x559898962e90 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x559898962fd0 <col:40> 'int' 4
| `-EnumConstantDecl 0x559898963100 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5598989632b0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5598989630e0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5598989630c0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x559898963080 <col:23> 'int' EnumConstant 0x559898962e90 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5598989630a0 <col:40> 'int' 8
|-CXXMethodDecl 0x5598989632f0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x559898963390 <col:68> "" ""
|-CXXMethodDecl 0x559898963428 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5598989634c8 <col:45> "" ""
|-CXXMethodDecl 0x559898963560 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x559898963600 <col:57> "" ""
|-CXXMethodDecl 0x559898963698 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x559898963738 <col:45> "" ""
|-CXXMethodDecl 0x5598989637d0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x559898963870 <col:57> "" ""
|-CXXMethodDecl 0x559898963900 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5598989639a0 <col:51> "" ""
|-CXXMethodDecl 0x559898963a30 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x559898963ad0 <col:63> "" ""
|-CXXMethodDecl 0x559898963b60 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x559898963c00 <col:53> "" ""
|-CXXMethodDecl 0x559898963c90 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x559898963d30 <col:65> "" ""
|-CXXMethodDecl 0x559898963e48 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x559898963db8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x559898963ef0 <col:61> "" ""
|-CXXMethodDecl 0x559898964088 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x559898963f78 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x559898963ff0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x559898964138 <col:67> "" ""
|-CXXMethodDecl 0x559898964250 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5598989641c0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5598989642f8 <col:63> "" ""
|-CXXMethodDecl 0x559898964490 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x559898964380 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5598989643f8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x559898964540 <col:69> "" ""
|-CXXMethodDecl 0x559898964658 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5598989645c8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x559898964700 <col:63> "" ""
|-CXXMethodDecl 0x559898966dd8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x559898966cc8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559898966d40 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559898966e88 <col:69> "" ""
|-CXXMethodDecl 0x559898966fa0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x559898966f10 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x559898967048 <col:62> "" ""
|-CXXMethodDecl 0x5598989671e0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5598989670d0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559898967148 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x559898967290 <col:68> "" ""
|-CXXMethodDecl 0x5598989673a8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x559898967318 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x559898967450 <col:63> "" ""
|-CXXMethodDecl 0x5598989675e8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5598989674d8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559898967550 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x559898967698 <col:69> "" ""
|-CXXMethodDecl 0x559898967728 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5598989677c8 <col:64> "" ""
|-CXXMethodDecl 0x559898967858 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5598989678f8 <col:52> "" ""
|-CXXMethodDecl 0x559898967988 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x559898967a28 <col:67> "" ""
|-CXXMethodDecl 0x559898967ab8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x559898967b58 <col:55> "" ""
|-CXXMethodDecl 0x559898967c70 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x559898967be0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x559898967d18 <col:58> "" ""
|-CXXMethodDecl 0x559898967eb0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x559898967da0 <col:33> col:36 'int'
| |-ParmVarDecl 0x559898967e18 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x559898967f60 <col:62> "" ""
|-CXXMethodDecl 0x559898968078 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x559898967fe8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x559898968120 <col:58> "" ""
|-CXXMethodDecl 0x5598989682b8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5598989681a8 <col:33> col:36 'int'
| |-ParmVarDecl 0x559898968220 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x559898968368 <col:62> "" ""
|-CXXMethodDecl 0x559898968480 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5598989683f0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x559898968528 <col:60> "" ""
|-CXXMethodDecl 0x5598989686c0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5598989685b0 <col:34> col:37 'int'
| |-ParmVarDecl 0x559898968628 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x559898968770 <col:64> "" ""
|-CXXMethodDecl 0x559898968888 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5598989687f8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x559898968930 <col:58> "" ""
|-CXXMethodDecl 0x559898968ac8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5598989689b8 <col:33> col:36 'int'
| |-ParmVarDecl 0x559898968a30 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x559898968b78 <col:62> "" ""
|-CXXMethodDecl 0x559898968c90 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x559898968c00 <col:33> col:36 'int'
| `-DeprecatedAttr 0x559898968d38 <col:59> "" ""
|-CXXMethodDecl 0x559898968ed0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x559898968dc0 <col:33> col:36 'int'
| |-ParmVarDecl 0x559898968e38 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559898968f80 <col:63> "" ""
|-AccessSpecDecl 0x559898968ff0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x559898969018 prev 0x55989895e220 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559898969110 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x559898969200 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x559898969328 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5598989694a8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x559898969628 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5598989697a8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55989897a5d8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55989897ae48 <col:11>
| |-CXXDestructorDecl 0x55989897a6b0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55989897a7e8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55989897a7e8
| | `-ParmVarDecl 0x55989897a8f8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55989897a998 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55989897a998
| | `-ParmVarDecl 0x55989897aaa8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55989897d868 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55989897d978 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55989897dbf8 <col:11>
| |   `-ReturnStmt 0x55989897dbe8 <col:11>
| |     `-UnaryOperator 0x55989897dbd0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55989897dbc0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55989897d9e8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55989897d9e8
|   `-ParmVarDecl 0x55989897daf8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x559898969810 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559898969928 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5598989699c8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x559898969a30 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x559898969a98 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x559898969b00 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x559898969b60 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x559898969c20 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x559898969c80 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x559898969ce0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55989897a4e8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5598989699c8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55989897ae58 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55989897aeb0 <col:12>
| |-CXXConstructorDecl 0x55989897ab18 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55989897ab18
| | `-ParmVarDecl 0x55989897ac28 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55989897acc8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55989897acc8
| | `-ParmVarDecl 0x55989897add8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55989897cf50 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x559898969d58 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x559898969db8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x559898969e20 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x559898969e88 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x559898969ef0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x559898969f58 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x559898969fb8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55989896a018 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55989896a080 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55989896a108 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x559898969d58 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55989897a480 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x559898969fb8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55989897aec0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55989897af20 <col:21, line:755:5>
|-CXXConstructorDecl 0x55989896a2a8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55989896a1e8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55989896a3a0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55989896a588 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55989896a490 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55989896a858 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55989896a640 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55989896a6b8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55989896a730 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55989896aa78 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55989896a928 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55989896a9a0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x559898973058 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55989896ab38 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55989896abb0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55989896ac28 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5598989731b0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x559898973120 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5598989732f8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x559898973268 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5598989733f0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559898764620 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559898764738 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5598987647d8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x559898764838 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x559898764898 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x559898764948 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559898764c50 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559898764d68 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x559898764e10 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x559898764e78 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x559898764f08 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55989876afa0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55989876b3d8 <col:12>
|-CXXConstructorDecl 0x55989876b0a8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55989876b1b8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x559898764e10 'data' 'const char *'
| | `-ImplicitCastExpr 0x55989876d960 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55989876d930 <col:12> 'const char *const' lvalue .data 0x559898764e10
| |     `-DeclRefExpr 0x55989876d910 <col:12> 'const String::rep_t' lvalue ParmVar 0x55989876b1b8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x559898764e78 'length' 'int'
| | `-ImplicitCastExpr 0x55989876d9f0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55989876d9c0 <col:12> 'const int' lvalue .length 0x559898764e78
| |     `-DeclRefExpr 0x55989876d9a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55989876b1b8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x559898764f08 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55989876da80 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55989876da50 <col:12> 'String::memo_t *const' lvalue .memo 0x559898764f08
| |     `-DeclRefExpr 0x55989876da30 <col:12> 'const String::rep_t' lvalue ParmVar 0x55989876b1b8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55989876dad8 <col:12>
|-CXXConstructorDecl 0x55989876b258 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55989876b258
| `-ParmVarDecl 0x55989876b368 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5598987708c0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55989877c2d8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55989877c3e8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55989877c900 <col:12>
|   |-BinaryOperator 0x55989877c718 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55989877c6d0 <col:12> 'const char *' lvalue ->data 0x559898764e10
|   | | `-CXXThisExpr 0x55989877c6c0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55989877c700 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55989877c690 <col:12> 'const char *const' lvalue .data 0x559898764e10
|   |     `-DeclRefExpr 0x55989877c670 <col:12> 'const String::rep_t' lvalue ParmVar 0x55989877c3e8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55989877c7e0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55989877c798 <col:12> 'int' lvalue ->length 0x559898764e78
|   | | `-CXXThisExpr 0x55989877c788 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55989877c7c8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55989877c758 <col:12> 'const int' lvalue .length 0x559898764e78
|   |     `-DeclRefExpr 0x55989877c738 <col:12> 'const String::rep_t' lvalue ParmVar 0x55989877c3e8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55989877c8a8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55989877c860 <col:12> 'String::memo_t *' lvalue ->memo 0x559898764f08
|   | | `-CXXThisExpr 0x55989877c850 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55989877c890 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55989877c820 <col:12> 'String::memo_t *const' lvalue .memo 0x559898764f08
|   |     `-DeclRefExpr 0x55989877c800 <col:12> 'const String::rep_t' lvalue ParmVar 0x55989877c3e8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55989877c8f0 <col:12>
|     `-UnaryOperator 0x55989877c8d8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55989877c8c8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55989877c458 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55989877c458
  `-ParmVarDecl 0x55989877c568 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55989875bb90 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55989875bca8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55989875bd38 <col:16, col:22> col:16 public
|-TypedefDecl 0x55989875bd78 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x559898431dc0 'const char *'
|   `-QualType 0x559898431311 'const char' const
|     `-BuiltinType 0x559898431310 'char'
|-TypedefDecl 0x55989875be00 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55989875bdd0 'String::const_iterator' sugar
|   |-Typedef 0x55989875bd78 'const_iterator'
|   `-PointerType 0x559898431dc0 'const char *'
|     `-QualType 0x559898431311 'const char' const
|       `-BuiltinType 0x559898431310 'char'
|-TypedefDecl 0x55989875bf70 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55989875bee0 'int (String::*)() const'
|   |-RecordType 0x55989875bc20 'String'
|   | `-CXXRecord 0x55989875bb90 'String'
|   `-ParenType 0x55989875be80 'int () const' sugar
|     `-FunctionProtoType 0x55989872fa10 'int () const' const cdecl
|       `-BuiltinType 0x559898431370 'int'
|-TypedefDecl 0x55989875bfd8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5598985845f0 'int64_t' sugar
|   |-Typedef 0x55989849a2d0 'int64_t'
|   `-TypedefType 0x5598984734d0 '__int64_t' sugar
|     |-Typedef 0x5598984730a8 '__int64_t'
|     `-BuiltinType 0x559898431390 'long'
|-TypedefDecl 0x55989875c040 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x559898584510 'uint64_t' sugar
|   |-Typedef 0x55989849a470 'uint64_t'
|   `-TypedefType 0x559898473560 '__uint64_t' sugar
|     |-Typedef 0x559898473118 '__uint64_t'
|     `-BuiltinType 0x559898431430 'unsigned long'
|-TypedefDecl 0x55989875c0d0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55989875c0a0 'String::intmax_t' sugar
|   |-Typedef 0x55989875bfd8 'intmax_t'
|   `-TypedefType 0x5598985845f0 'int64_t' sugar
|     |-Typedef 0x55989849a2d0 'int64_t'
|     `-TypedefType 0x5598984734d0 '__int64_t' sugar
|       |-Typedef 0x5598984730a8 '__int64_t'
|       `-BuiltinType 0x559898431390 'long'
|-TypedefDecl 0x55989875c160 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55989875c130 'String::uintmax_t' sugar
|   |-Typedef 0x55989875c040 'uintmax_t'
|   `-TypedefType 0x559898584510 'uint64_t' sugar
|     |-Typedef 0x55989849a470 'uint64_t'
|     `-TypedefType 0x559898473560 '__uint64_t' sugar
|       |-Typedef 0x559898473118 '__uint64_t'
|       `-BuiltinType 0x559898431430 'unsigned long'
|-CXXConstructorDecl 0x55989875c220 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55989875c3c8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55989875c308 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55989875c578 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55989875c4b8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55989875c6d0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55989875c640 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55989875c8e8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55989875c798 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55989875c818 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55989875cb08 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55989875c9b8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55989875ca38 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55989875cd28 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55989875cbd8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55989875cc58 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55989875cf48 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55989875cdf8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55989875ce78 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55989875d0d8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55989875d010 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55989875d258 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55989875d198 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55989875d3e8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55989875d320 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55989875d540 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55989875d4b0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55989875d698 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55989875d608 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55989875d7f0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55989875d760 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55989875d978 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55989875d8b8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55989875db08 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55989875da40 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55989875dc98 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55989875dbd0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55989875de28 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55989875dd60 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55989875df20 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55989875e048 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55989875e1c8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55989875e100 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55989875e318 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55989875e288 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55989875e3d0 <col:63> "" ""
|-CXXMethodDecl 0x55989875e518 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55989875e458 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55989875e728 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55989875e5d8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55989875e658 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55989875e948 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55989875e7f0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55989875e870 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55989875ec28 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55989875ea08 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55989875ea88 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55989876aa70 <col:55> 'int' 10
| `-ParmVarDecl 0x55989875eb00 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55989876aa90 <col:76> 'bool' true
|-CXXMethodDecl 0x55989875ef08 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55989875ecf0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55989875ed70 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55989876aaa0 <col:56> 'int' 10
| `-ParmVarDecl 0x55989875ede8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55989876aac0 <col:77> 'bool' true
|-CXXMethodDecl 0x55989875f010 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55989875f0d8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55989875f1a0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55989875f240 <col:20>
| `-OptimizeNoneAttr 0x55989875f298 <col:30>
|-CXXConversionDecl 0x55989875f388 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55989875f458 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55989875f518 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55989875f608 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55989875f6c8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55989875f848 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55989875f780 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55989875f998 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55989875f908 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55989875fa88 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55989875fb48 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55989875fd98 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55989875fc00 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55989875fc80 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55989875fff8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55989875fe60 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55989875fee0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5598987600c8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5598987602d8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x559898760180 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x559898760200 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5598987604f8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5598987603a0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x559898760420 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x559898760688 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5598987605c0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x559898760778 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5598987608e8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x559898760828 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x559898760af8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5598987609a8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x559898760a28 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x559898760d10 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x559898760bb8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x559898760c30 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x559898760ea0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x559898760dd0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5598987610c0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x559898760f60 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x559898760fe0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x559898761210 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x559898761180 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5598987613e8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5598987612d0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x559898761350 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x559898761538 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5598987614a8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x559898761750 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5598987615f0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x559898761670 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55989876aad0 <col:39> 'int' 0
|-CXXMethodDecl 0x559898761970 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x559898761810 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x559898761890 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55989876aaf0 <col:48> 'int' 0
|-CXXMethodDecl 0x559898761b50 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x559898761a30 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x559898761ab0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55989876ab10 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x559898761c20 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x559898761ce0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x559898761da0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x559898761e60 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x559898761f20 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5598987620c8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x559898761fd0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x559898762248 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x559898762180 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x559898762420 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x559898762308 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x559898762598 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5598987624d8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5598987626e0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x559898762650 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x559898762830 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5598987627a0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x559898762a08 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5598987628f0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x559898762970 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x559898762be8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x559898762ad0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x559898762b50 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x559898762d38 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x559898762ca8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x559898762f48 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x559898762df8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x559898762e78 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5598987630a8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x559898763010 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x559898763200 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x559898763168 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5598987632a8 <col:57> "" ""
|-CXXMethodDecl 0x5598987633b8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x559898763328 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x559898763508 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x559898763478 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x559898763688 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5598987635c0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x559898763750 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x559898763810 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5598987638d0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x559898763970 <col:49> "" ""
|-CXXMethodDecl 0x559898763a00 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x559898763ac0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x559898763bb0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x559898763c78 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x559898763d38 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x559898763df8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x559898763ef0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x559898763fb8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x559898764080 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x559898764258 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x559898764138 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5598987641b8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x559898764480 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x559898764320 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5598987643a0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x559898764590 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5598987645f8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x559898764620 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x559898764738 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5598987647d8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x559898764838 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x559898764898 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x559898764948 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5598987649b0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x559898764be8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x559898764c38 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559898764bc8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x559898764ad8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x559898764a80 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x559898764ac0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x559898764aa0 <col:32> 'int' 8
|-CXXRecordDecl 0x559898764c50 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559898764d68 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x559898764e10 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x559898764e78 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x559898764f08 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55989876afa0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55989876b3d8 <col:12>
| |-CXXConstructorDecl 0x55989876b0a8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55989876b1b8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x559898764e10 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55989876d960 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55989876d930 <col:12> 'const char *const' lvalue .data 0x559898764e10
| | |     `-DeclRefExpr 0x55989876d910 <col:12> 'const String::rep_t' lvalue ParmVar 0x55989876b1b8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x559898764e78 'length' 'int'
| | | `-ImplicitCastExpr 0x55989876d9f0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55989876d9c0 <col:12> 'const int' lvalue .length 0x559898764e78
| | |     `-DeclRefExpr 0x55989876d9a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55989876b1b8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x559898764f08 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55989876da80 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55989876da50 <col:12> 'String::memo_t *const' lvalue .memo 0x559898764f08
| | |     `-DeclRefExpr 0x55989876da30 <col:12> 'const String::rep_t' lvalue ParmVar 0x55989876b1b8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55989876dad8 <col:12>
| |-CXXConstructorDecl 0x55989876b258 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55989876b258
| | `-ParmVarDecl 0x55989876b368 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5598987708c0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55989877c2d8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55989877c3e8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55989877c900 <col:12>
| |   |-BinaryOperator 0x55989877c718 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55989877c6d0 <col:12> 'const char *' lvalue ->data 0x559898764e10
| |   | | `-CXXThisExpr 0x55989877c6c0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55989877c700 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55989877c690 <col:12> 'const char *const' lvalue .data 0x559898764e10
| |   |     `-DeclRefExpr 0x55989877c670 <col:12> 'const String::rep_t' lvalue ParmVar 0x55989877c3e8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55989877c7e0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55989877c798 <col:12> 'int' lvalue ->length 0x559898764e78
| |   | | `-CXXThisExpr 0x55989877c788 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55989877c7c8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55989877c758 <col:12> 'const int' lvalue .length 0x559898764e78
| |   |     `-DeclRefExpr 0x55989877c738 <col:12> 'const String::rep_t' lvalue ParmVar 0x55989877c3e8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55989877c8a8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55989877c860 <col:12> 'String::memo_t *' lvalue ->memo 0x559898764f08
| |   | | `-CXXThisExpr 0x55989877c850 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55989877c890 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55989877c820 <col:12> 'String::memo_t *const' lvalue .memo 0x559898764f08
| |   |     `-DeclRefExpr 0x55989877c800 <col:12> 'const String::rep_t' lvalue ParmVar 0x55989877c3e8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55989877c8f0 <col:12>
| |     `-UnaryOperator 0x55989877c8d8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55989877c8c8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55989877c458 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55989877c458
|   `-ParmVarDecl 0x55989877c568 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x559898764f80 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5598987651c8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x559898764fe8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x559898765068 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5598987650e0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55989876af60 <col:79, line:261:5>
|   |-BinaryOperator 0x55989876abd8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55989876ab70 <col:2, col:5> 'const char *' lvalue .data 0x559898764e10
|   | | `-MemberExpr 0x55989876ab40 <col:2> 'String::rep_t' lvalue ->_r 0x559898764f80
|   | |   `-CXXThisExpr 0x55989876ab30 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55989876abc0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55989876aba0 <col:12> 'const char *' lvalue ParmVar 0x559898764fe8 'data' 'const char *'
|   |-BinaryOperator 0x55989876aca0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55989876ac38 <col:2, col:5> 'int' lvalue .length 0x559898764e78
|   | | `-MemberExpr 0x55989876ac08 <col:2> 'String::rep_t' lvalue ->_r 0x559898764f80
|   | |   `-CXXThisExpr 0x55989876abf8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55989876ac88 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55989876ac68 <col:14> 'int' lvalue ParmVar 0x559898765068 'length' 'int'
|   `-IfStmt 0x55989876af48 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55989876adc0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55989876ada8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55989876ad88 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55989876ad68 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55989876ad00 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x559898764f08
|     |       | `-MemberExpr 0x55989876acd0 <col:7> 'String::rep_t' lvalue ->_r 0x559898764f80
|     |       |   `-CXXThisExpr 0x55989876acc0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55989876ad50 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55989876ad30 <col:17> 'String::memo_t *' lvalue ParmVar 0x5598987650e0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55989876af20 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55989876af08 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55989876ae10 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x559898753bf8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55989876ae78 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5598987647d8
|         `-ImplicitCastExpr 0x55989876ae60 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55989876ae40 <col:27> 'String::memo_t *' lvalue ParmVar 0x5598987650e0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x559898765478 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x559898765298 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x559898765318 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x559898765390 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x559898764f80 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55989876b3e8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55989876b578 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55989876b4e0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55989876b450 <col:2> '<bound member function type>' ->assign_memo 0x5598987651c8
|     | `-ImplicitCastExpr 0x55989876b518 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55989876b440 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55989876b530 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55989876b480 <col:14> 'const char *' lvalue ParmVar 0x559898765298 'data' 'const char *'
|     |-ImplicitCastExpr 0x55989876b548 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55989876b4a0 <col:20> 'int' lvalue ParmVar 0x559898765318 'length' 'int'
|     `-ImplicitCastExpr 0x55989876b560 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55989876b4c0 <col:28> 'String::memo_t *' lvalue ParmVar 0x559898765390 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x559898765608 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x559898765548 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55989876b7d0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55989876b750 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55989876b5a0 <col:2> '<bound member function type>' ->assign_memo 0x5598987651c8
|     | `-CXXThisExpr 0x55989876b590 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55989876b788 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55989876b620 <col:14, col:19> 'const char *' lvalue .data 0x559898764e10
|     |   `-MemberExpr 0x55989876b5f0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x559898764f80
|     |     `-DeclRefExpr 0x55989876b5d0 <col:14> 'const String' lvalue ParmVar 0x559898765548 'x' 'const String &'
|     |-ImplicitCastExpr 0x55989876b7a0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55989876b6a0 <col:25, col:30> 'int' lvalue .length 0x559898764e78
|     |   `-MemberExpr 0x55989876b670 <col:25, col:27> 'String::rep_t' lvalue ._r 0x559898764f80
|     |     `-DeclRefExpr 0x55989876b650 <col:25> 'const String' lvalue ParmVar 0x559898765548 'x' 'const String &'
|     `-ImplicitCastExpr 0x55989876b7b8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55989876b720 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x559898764f08
|         `-MemberExpr 0x55989876b6f0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x559898764f80
|           `-DeclRefExpr 0x55989876b6d0 <col:38> 'const String' lvalue ParmVar 0x559898765548 'x' 'const String &'
|-CXXMethodDecl 0x5598987656d0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55989876c190 <col:31, line:278:5>
|   `-IfStmt 0x55989876c178 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55989876b870 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55989876b858 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55989876b828 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x559898764f08
|     |     `-MemberExpr 0x55989876b7f8 <col:6> 'String::rep_t' lvalue ->_r 0x559898764f80
|     |       `-CXXThisExpr 0x55989876b7e8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55989876c150 <col:15, line:277:2>
|       |-ParenExpr 0x55989876bd20 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55989876bcf0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55989876b980 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55989876b968 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55989876b950 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55989876b910 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5598987647d8
|       |   |       `-ImplicitCastExpr 0x55989876b8f8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55989876b8c8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x559898764f08
|       |   |           `-MemberExpr 0x55989876b898 <col:27> 'String::rep_t' lvalue ->_r 0x559898764f80
|       |   |             `-CXXThisExpr 0x55989876b888 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55989876b9e0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55989876b9c0 <col:54> 'int' 0
|       |   `-CallExpr 0x55989876bc50 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55989876bc38 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55989876bbb8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5598984cae50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55989876bc90 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55989876bac8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55989876bca8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55989876baf8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55989876bcc0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55989876bb30 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55989876bcd8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55989876bba0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55989876bb88 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55989876bb50 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55989876c070 <line:274:6, line:275:22>
|       | |-CallExpr 0x55989876bf30 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55989876bf18 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55989876be90 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x559898755040 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55989876be60 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5598987647d8
|       | |   `-ImplicitCastExpr 0x55989876be48 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55989876be18 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x559898764f08
|       | |       `-MemberExpr 0x55989876bde8 <col:40> 'String::rep_t' lvalue ->_r 0x559898764f80
|       | |         `-CXXThisExpr 0x55989876bdd8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55989876c030 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55989876c018 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55989876bf58 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x559898769eb0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55989876c058 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55989876bfb8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x559898764f08
|       |       `-MemberExpr 0x55989876bf88 <col:15> 'String::rep_t' lvalue ->_r 0x559898764f80
|       |         `-CXXThisExpr 0x55989876bf78 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55989876c130 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55989876c0c8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x559898764f08
|         | `-MemberExpr 0x55989876c098 <col:6> 'String::rep_t' lvalue ->_r 0x559898764f80
|         |   `-CXXThisExpr 0x55989876c088 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55989876c118 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55989876c0f8 <col:16> 'int' 0
|-CXXMethodDecl 0x559898765968 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x559898765788 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x559898765808 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x559898765880 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x559898765a40 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x559898765c90 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x559898765af8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x559898765b78 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x559898765bf0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x559898765e78 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x559898765d60 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x559898765de0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x559898765f78 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55989876c268 <col:41, line:286:5>
|   `-ReturnStmt 0x55989876c258 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55989876c228 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55989876c1f0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55989876c1d8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55989876c1b8 <col:46> 'int' 1
|-CXXMethodDecl 0x559898766218 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x559898766030 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5598987660b0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x559898766130 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x559898769eb0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5598987662e0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x559898769f80 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55989876a150 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55989876a038 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55989876a0b8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55989876a210 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55989876a2d8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55989876a3d8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55989876a450 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55989876a4c8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55989876a530 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55989876a630 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55989876a680 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55989876a610 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55989876a5f0 <col:22> 'int' 14
|-CXXMethodDecl 0x55989876a898 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55989876a6b0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55989876a730 <col:38> col:41 'int'
| `-ParmVarDecl 0x55989876a7b0 <col:43> col:46 'int'
|-FriendDecl 0x55989876a9a0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55989876aa30 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
