
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a11285c118 prev 0x55a1128538b8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a11285c210 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55a11285c2a0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55a11285c318 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55a11285c3d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55a11285c4a0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55a11285c618 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55a11285c550 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55a11285c6c0 <col:24>
| `-OptimizeNoneAttr 0x55a11285c718 <col:34>
|-CXXMethodDecl 0x55a11285c760 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55a11285ca18 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55a11285c810 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55a11285c888 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55a11285c908 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55a11285cad0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55a11285cb08 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55a11285cb70 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55a11285cbf8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55a11285cf18 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55a11285ccb0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55a11285cd28 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55a11285cda0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55a11285ce20 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55a11285d030 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55a1128649a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55a1128649a8
| `-ParmVarDecl 0x55a112864ab8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55a112864b58 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55a112864b58
| `-ParmVarDecl 0x55a112864c68 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55a11294bf08 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a11284f130 prev 0x55a11284eeb0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a11284f228 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55a11284f2b8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55a11284f318 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55a11284f408 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55a11284f508 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55a11284f6d8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55a11284f588 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55a11284f600 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55a11284f868 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55a11284f7a0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55a11284f910 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55a11284fa48 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55a11284f980 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55a11284fbe8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55a11284fb28 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55a11284fd88 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55a11284fcc8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55a11284fe30 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55a11284ff30 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55a112850010 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a11284ff10 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55a11284fef0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55a11284ffc0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55a112850028 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a11284ffa0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55a11284ff80 <col:44> 'int' 2
|-CXXMethodDecl 0x55a112850170 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55a112850058 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55a1128500d8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55a1128502c8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55a112850238 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55a112850508 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55a112850388 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55a112850400 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55a1128505b8 <col:20>
| `-OptimizeNoneAttr 0x55a112850610 <col:30>
|-CXXMethodDecl 0x55a112850718 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55a112850650 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55a1128507c0 <col:20>
| `-OptimizeNoneAttr 0x55a112850818 <col:30>
|-CXXMethodDecl 0x55a112850868 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55a112850930 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55a112850a48 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55a112850ad0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55a112850b58 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55a112850be0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55a112850c68 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55a112850cf8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55a112850db8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55a112850e40 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x55a112850ec8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55a112850f50 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55a112850fd8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55a112851060 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55a1128510f0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55a1128511b0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55a112851240 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55a112851390 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55a1128512f8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55a112851520 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55a112851450 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55a1128517d0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55a1128515d8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55a112851658 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55a1128516d8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55a112851888 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55a112851990 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a112851c20 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112851970 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55a112851950 <col:33> 'int' 0
| |-EnumConstantDecl 0x55a112851a20 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a112851c38 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112851a00 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55a1128519e0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55a112851ab0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a112851c50 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112851a90 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55a112851a70 <col:38> 'int' 90
| |-EnumConstantDecl 0x55a112851b40 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a112851c68 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112851b20 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55a112851b00 <col:35> 'int' 100
| `-EnumConstantDecl 0x55a112851bd0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55a112851c80 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a112851bb0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55a112851b90 <col:32> 'int' 2000
|-CXXMethodDecl 0x55a112851cc0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55a112852100 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a112851f70 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55a112851fe8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a1128521d0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55a112852350 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55a112852280 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a112852558 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a112852408 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55a112852480 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a112852658 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55a1128526f8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55a1128527c0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a112852850 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55a112852a80 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112852830 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55a112852810 <col:36> 'int' EnumConstant 0x55a1128527c0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a1128528a0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a1128528f0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a112852940 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a112852990 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a1128529e0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55a112852a30 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55a112852b68 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55a112852aa8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55a112852c30 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55a112852cf0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55a112852db0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55a112852e70 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55a112852f88 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55a112853050 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55a1128531d0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55a112853100 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55a1128532f8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55a1128534f8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55a1128533a8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55a112853428 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55a112860e48 <col:54, line:127:5>
|   |-ParenExpr 0x55a112860cf8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55a112860cc8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55a1128609b8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55a112860990 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55a112860978 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55a112860960 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55a112860930 <col:31> 'Router *' lvalue ->_router 0x55a11285e810
|   |   |         `-CXXThisExpr 0x55a112860920 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55a112860a18 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a1128609f8 <col:48> 'int' 0
|   |   `-CallExpr 0x55a112860c28 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55a112860c10 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a112860bf0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a112860c68 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112860a88 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55a112860c80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112860aa8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55a112860c98 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a112860ae0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55a112860cb0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a112860bd8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a112860bc0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a112860b78 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55a112860d90 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55a112860d28 <col:9> 'Router *' lvalue ->_router 0x55a11285e810
|   | | `-CXXThisExpr 0x55a112860d18 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55a112860d78 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a112860d58 <col:19> 'Router *' lvalue ParmVar 0x55a1128533a8 'r' 'Router *'
|   `-BinaryOperator 0x55a112860e28 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55a112860dc0 <col:9> 'int' lvalue ->_eindex 0x55a11285e878
|     | `-CXXThisExpr 0x55a112860db0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55a112860e10 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55a112860df0 <col:19> 'int' lvalue ParmVar 0x55a112853428 'eindex' 'int'
|-CXXMethodDecl 0x55a112853680 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55a1128535b8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55a112853750 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55a112853818 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55a1128538b8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55a112853b08 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55a112853980 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55a112853a00 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55a112853bb8 <col:20>
| `-OptimizeNoneAttr 0x55a112853c10 <col:30>
|-CXXMethodDecl 0x55a112853d18 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55a112853c50 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55a112853dc0 <col:20>
| `-OptimizeNoneAttr 0x55a112853e18 <col:30>
|-CXXMethodDecl 0x55a112853ee8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55a112853e58 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55a112853f90 <col:20>
| `-OptimizeNoneAttr 0x55a112853fe8 <col:30>
|-CXXMethodDecl 0x55a112854178 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55a112854020 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55a1128540a0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55a112854308 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55a112854240 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55a112854458 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55a1128543c8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55a1128545a8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55a112854518 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55a1128546f8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55a112854668 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55a1128549b8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55a1128547b0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55a112854830 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55a1128548d8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55a112854a90 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55a112854b50 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55a112854e20 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a112854cd0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55a112854d48 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55a112854f48 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55a112855120 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55a112855000 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55a112855080 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55a112855308 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55a1128551e8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55a112855268 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55a112855678 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55a1128553c8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a112855440 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a1128554c0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a112860430 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a112860410 <col:106> 'int' 0
| `-ParmVarDecl 0x55a112855538 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a112860468 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a112860448 <col:126> 'int' 0
|-CXXMethodDecl 0x55a112855a18 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a112855748 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a1128557e0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a112855860 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55a1128558d8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a1128604a0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a112860480 <col:114> 'int' 0
|-CXXMethodDecl 0x55a112855da8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a112855af0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55a112855b68 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a112855be8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55a1128604b8 <col:96> 'int' 0
| `-ParmVarDecl 0x55a112855c60 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a1128604f8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a1128604d8 <col:116> 'int' 0
|-CXXMethodDecl 0x55a112856128 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55a112855e78 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55a112855ef0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a112855f70 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a112860530 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a112860510 <col:109> 'int' 0
| `-ParmVarDecl 0x55a112855fe8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a112860568 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a112860548 <col:129> 'int' 0
|-CXXMethodDecl 0x55a1128564a8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a1128561f8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55a112856270 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a1128562f0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55a112856368 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a1128605a0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a112860580 <col:117> 'int' 0
|-CXXMethodDecl 0x55a112856838 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a112856580 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a1128565f8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a112856678 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55a1128605b8 <col:99> 'int' 0
| `-ParmVarDecl 0x55a1128566f0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a1128605f8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a1128605d8 <col:119> 'int' 0
|-CXXMethodDecl 0x55a112856c58 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55a112856908 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55a112856988 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55a112856a00 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a112856a80 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a112860630 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a112860610 <col:108> 'int' 0
| `-ParmVarDecl 0x55a112856b00 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55a112860668 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55a112860648 <col:141> 'int' 0
|-CXXMethodDecl 0x55a112857078 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55a112856d30 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55a112856db0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55a112856e28 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a112856ea8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55a112856f28 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55a112860680 <col:121> 'int' 0
|-CXXMethodDecl 0x55a1128574a8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55a112857158 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55a1128571d8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55a112857250 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a1128572d0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55a1128606a0 <col:98> 'int' 0
| `-ParmVarDecl 0x55a112857350 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55a1128606c0 <col:123> 'int' 0
|-CXXMethodDecl 0x55a112857770 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55a112857580 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a112857600 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55a112857680 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55a1128606e0 <col:80> 'int' 0
|-EnumDecl 0x55a112857828 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55a112857930 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a112857bc0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112857910 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55a1128578f0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55a1128579c0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a112857bd8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128579a0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55a112857980 <col:40> 'int' 2
| |-EnumConstantDecl 0x55a112857a50 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a112857bf0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112857a30 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55a112857a10 <col:44> 'int' 4
| |-EnumConstantDecl 0x55a112857ae0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a112857c08 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112857ac0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55a112857aa0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55a112857b70 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55a112857c20 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a112857b50 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55a112857b30 <col:34> 'int' 6
|-CXXMethodDecl 0x55a112857ed8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55a112857c48 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55a112857ce8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55a112857d68 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55a112857de0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55a112860798 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55a112860780 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55a112860768 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55a112860748 <col:98, col:105> 'String' (CXXTemporary 0x55a112860748)
|           `-CXXTemporaryObjectExpr 0x55a112860710 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55a112858178 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55a112857fa8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55a112858020 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55a112858098 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55a112860848 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55a112860830 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55a112860818 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55a1128607f8 <col:94, col:101> 'String' (CXXTemporary 0x55a1128607f8)
| |         `-CXXTemporaryObjectExpr 0x55a1128607c0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55a112861030 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55a112860fa8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55a112860f78 <col:9> '<bound member function type>' ->add_task_handlers 0x55a112857ed8
|     | `-CXXThisExpr 0x55a112860f68 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55a112860fe8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a112860ee8 <col:27> 'Task *' lvalue ParmVar 0x55a112857fa8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55a112861000 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a112860f08 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55a112858020 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55a112861018 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55a112860f28 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55a112857b70 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55a112860f48 <col:62> 'const String' lvalue ParmVar 0x55a112858098 'prefix' 'const String &'
|-CXXMethodDecl 0x55a112858388 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55a112858240 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55a1128582b8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55a1128608f8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55a1128608e0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55a1128608c8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55a1128608a8 <col:70, col:77> 'String' (CXXTemporary 0x55a1128608a8)
| |         `-CXXTemporaryObjectExpr 0x55a112860870 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55a112861208 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55a112861180 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55a112861150 <col:9> '<bound member function type>' ->add_task_handlers 0x55a112857ed8
|     | `-CXXThisExpr 0x55a112861140 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55a1128611c0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a1128610c0 <col:27> 'Task *' lvalue ParmVar 0x55a112858240 'task' 'Task *'
|     |-ImplicitCastExpr 0x55a1128611d8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55a1128610e0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55a1128611f0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55a112861100 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55a112857b70 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55a112861120 <col:57> 'const String' lvalue ParmVar 0x55a1128582b8 'prefix' 'const String &'
|-CXXMethodDecl 0x55a112858668 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55a112858450 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a1128584d0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a112858548 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55a112858918 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55a112858738 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a1128587b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a112858838 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55a112858c08 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55a1128589e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a112858a68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a112858ae0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55a112858eb8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55a112858cd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a112858d58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a112858dd8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55a112859168 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55a112858f88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a112859008 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a112859088 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55a112859418 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55a112859238 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a1128592b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a112859330 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55a1128596c8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55a1128594e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a112859568 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a1128595e8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55a1128599d8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55a1128597f0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a112859870 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a1128598f0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55a112859cb8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55a112859aa8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a112859b28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a112859bd0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55a112859f98 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55a112859d88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a112859e08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a112859eb0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55a11285a200 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55a11285a068 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55a11285a0e8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55a11285a160 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55a11285a4a8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55a11285a2d0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55a11285a350 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55a11285a3c8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55a11285a758 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55a11285a578 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a11285a5f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a11285a678 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55a11285aa08 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55a11285a828 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a11285a8a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a11285a920 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55a11285acb8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55a11285aad8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a11285ab58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a11285abd0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55a11285af88 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55a11285ad88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a11285ae08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a11285aea8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55a11285b2b8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55a11285b058 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a11285b0d8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55a11285b150 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55a11285b1c8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a112860910 <col:93> 'bool' false
|-CXXMethodDecl 0x55a11285b4a0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a11285b388 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55a11285b408 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55a11285b678 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a11285b560 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55a11285b5e0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55a11285b958 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55a11285b738 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55a11285b7b0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55a11285b830 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55a11285b8a8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55a11285bc48 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55a11285ba28 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55a11285baa0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55a11285bb20 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55a11285bb98 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55a11285be80 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55a11285bd20 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55a11285bda0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55a11285c068 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55a11285bf48 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55a11285bfc8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55a11285c118 prev 0x55a1128538b8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a11285c210 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55a11285c2a0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55a11285c318 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55a11285c3d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55a11285c4a0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55a11285c618 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55a11285c550 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55a11285c6c0 <col:24>
| | `-OptimizeNoneAttr 0x55a11285c718 <col:34>
| |-CXXMethodDecl 0x55a11285c760 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55a11285ca18 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55a11285c810 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55a11285c888 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55a11285c908 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55a11285cad0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55a11285cb08 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55a11285cb70 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55a11285cbf8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55a11285cf18 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55a11285ccb0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55a11285cd28 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55a11285cda0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55a11285ce20 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55a11285d030 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55a1128649a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55a1128649a8
| | `-ParmVarDecl 0x55a112864ab8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55a112864b58 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55a112864b58
| | `-ParmVarDecl 0x55a112864c68 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55a11294bf08 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a11285d0a8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55a11285d148 <col:38> "" ""
|-CXXMethodDecl 0x55a11285d1d8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55a11285d278 <col:44> "" ""
|-AccessSpecDecl 0x55a11285d2e8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55a11285d310 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55a11285d410 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55a11285d460 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a11285d3f0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55a11285d3d0 <col:27> 'int' 4
|-FieldDecl 0x55a11285d518 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55a11285d6c8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55a11285d780 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55a11285e810 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55a11285e878 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55a11285e9c8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55a11285e908 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55a11285eb78 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55a11285ea88 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55a11285ed58 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55a11285ec38 <col:20> col:23 'int'
| `-ParmVarDecl 0x55a11285ecb8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55a11285f000 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55a11285ee20 <col:23> col:26 'int'
| |-ParmVarDecl 0x55a11285eea0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55a11285ef18 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55a11285f0b8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55a11285f180 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55a11285f1d0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55a11285f220 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55a11285f400 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55a11285f2b0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55a11285f328 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a11285f6a8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55a11285f4c8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55a11285f548 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55a11285f5c0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55a11285f8c8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55a11285f778 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55a11285f7f8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55a11285fc00 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55a11285f988 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55a11285fa08 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55a11285fa80 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55a11285fb00 <col:57> col:60 'int'
|-CXXMethodDecl 0x55a11285fde8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a11285fcd0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55a11285fd50 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55a11285ff38 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55a11285fea8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55a1128602b8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55a11285fff8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55a112860078 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55a1128600f0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55a112860170 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55a1128603d0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class FixedEWMAXParameters<4, 10, unsigned int, int> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class RateEWMAXParameters<4, 10, unsigned int, int> (empty)
         0 |   class FixedEWMAXParameters<4, 10, unsigned int, int> (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class DirectEWMAX<class RateEWMAXParameters<4, 10, unsigned int, int> >
         0 |   class RateEWMAXParameters<4, 10, unsigned int, int> (base) (empty)
         0 |     class FixedEWMAXParameters<4, 10, unsigned int, int> (base) (empty)
         0 |   DirectEWMAX<class RateEWMAXParameters<4, 10, unsigned int, int> >::value_type _avg
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class RateEWMAX<class RateEWMAXParameters<4, 10, unsigned int, int> >
         0 |   class RateEWMAXParameters<4, 10, unsigned int, int> (base) (empty)
         0 |     class FixedEWMAXParameters<4, 10, unsigned int, int> (base) (empty)
         0 |   unsigned int _current_epoch
         4 |   RateEWMAX<class RateEWMAXParameters<4, 10, unsigned int, int> >::value_type [1] _current
         8 |   DirectEWMAX<class RateEWMAXParameters<4, 10, unsigned int, int> > [1] _avg
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class BandwidthMeter
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class RateEWMAX<class RateEWMAXParameters<4, 10, unsigned int, int> > _rate
       108 |     class RateEWMAXParameters<4, 10, unsigned int, int> (base) (empty)
       108 |       class FixedEWMAXParameters<4, 10, unsigned int, int> (base) (empty)
       108 |     unsigned int _current_epoch
       112 |     RateEWMAX<class RateEWMAXParameters<4, 10, unsigned int, int> >::value_type [1] _current
       116 |     DirectEWMAX<class RateEWMAXParameters<4, 10, unsigned int, int> > [1] _avg
       120 |   unsigned int _meter1
       128 |   unsigned int * _meters
       136 |   int _nmeters
           | [sizeof=144, dsize=140, align=8,
           |  nvsize=140, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a1127d3158 <../dummy_inc/click/ewma.hh:212:1, line:242:1> line:213:7 class FixedEWMAXParameters definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument integral 4
|-TemplateArgument integral 10
|-TemplateArgument type 'unsigned int'
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55a1128bf128 prev 0x55a1127d3158 <col:1, col:7> col:7 implicit class FixedEWMAXParameters
|-AccessSpecDecl 0x55a1128bf1b8 <col:30, col:36> col:30 public
|-TypedefDecl 0x55a1128bf218 <line:215:5, col:15> col:15 referenced value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55a1128bf1e0 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55a1127d2240 'T' dependent depth 0 index 2
|   | `-TemplateTypeParm 0x55a1127d21f0 'T'
|   `-BuiltinType 0x55a1122ed450 'unsigned int'
|-TypedefDecl 0x55a1128bf2a8 <line:216:5, col:15> col:15 referenced signed_value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55a1128bf270 'int' sugar
|   |-TemplateTypeParmType 0x55a1127d22d0 'U' dependent depth 0 index 3
|   | `-TemplateTypeParm 0x55a1127d2280 'U'
|   `-BuiltinType 0x55a1122ed3b0 'int'
|-CXXMethodDecl 0x55a1128bf300 <line:220:5, line:222:5> line:220:21 stability_shift 'unsigned int ()' static
|-CXXMethodDecl 0x55a1128bf3b0 <line:226:5, line:229:5> line:226:21 scale 'unsigned int ()' static
|-CXXMethodDecl 0x55a1128bf4c8 <line:232:5, line:234:5> line:232:23 scaled_one 'FixedEWMAXParameters<4, 10, unsigned int, int>::value_type ()' static
|-CXXMethodDecl 0x55a1128bf578 <line:238:5, line:240:5> line:238:21 compensation 'unsigned int ()' static
|-CXXConstructorDecl 0x55a11294af08 <line:213:7> col:7 implicit constexpr FixedEWMAXParameters 'void (const FixedEWMAXParameters<4, 10, unsigned int, int> &)' inline default trivial noexcept-unevaluated 0x55a11294af08
| `-ParmVarDecl 0x55a11294b018 <col:7> col:7 'const FixedEWMAXParameters<4, 10, unsigned int, int> &'
|-CXXConstructorDecl 0x55a11294b0b8 <col:7> col:7 implicit constexpr FixedEWMAXParameters 'void (FixedEWMAXParameters<4, 10, unsigned int, int> &&)' inline default trivial noexcept-unevaluated 0x55a11294b0b8
| `-ParmVarDecl 0x55a11294b1c8 <col:7> col:7 'FixedEWMAXParameters<4, 10, unsigned int, int> &&'
`-CXXDestructorDecl 0x55a11294b3b8 <col:7> col:7 implicit ~FixedEWMAXParameters 'void ()' inline default trivial noexcept-unevaluated 0x55a11294b3b8

Layout: <CGRecordLayout
  LLVMType:%class.FixedEWMAXParameters = type { i8 }
  NonVirtualBaseLLVMType:%class.FixedEWMAXParameters = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a1128bc4b8 <../dummy_inc/click/ewma.hh:455:1, line:471:1> line:456:7 class RateEWMAXParameters definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'FixedEWMAXParameters<4U, 10U, unsigned int, int>':'FixedEWMAXParameters<4, 10, unsigned int, int>'
|-TemplateArgument integral 4
|-TemplateArgument integral 10
|-TemplateArgument type 'unsigned int'
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55a1128bf670 prev 0x55a1128bc4b8 <col:1, col:7> col:7 implicit class RateEWMAXParameters
|-AccessSpecDecl 0x55a1128bf700 <col:83, col:89> col:83 public
|-EnumDecl 0x55a1128bf728 <line:457:5> col:5
| `-EnumConstantDecl 0x55a1128bf820 <line:458:2, col:15> col:2 referenced rate_count 'RateEWMAXParameters<4, 10, unsigned int, int>::(anonymous enum at ../dummy_inc/click/ewma.hh:457:5)'
|   `-ImplicitCastExpr 0x55a1128bf870 <col:15> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a1128bf800 <col:15> 'int' Int: 1
|       `-IntegerLiteral 0x55a1128bc040 <col:15> 'int' 1
|-CXXMethodDecl 0x55a1128bf888 <line:463:5, line:465:5> line:463:21 epoch 'unsigned int ()' static
|-CXXMethodDecl 0x55a1128bf938 <line:468:5, line:470:5> line:468:21 used epoch_frequency 'unsigned int ()' static
|-CXXConstructorDecl 0x55a11294b238 <line:456:7> col:7 implicit constexpr RateEWMAXParameters 'void (const RateEWMAXParameters<4, 10, unsigned int, int> &)' inline default trivial noexcept-unevaluated 0x55a11294b238
| `-ParmVarDecl 0x55a11294b348 <col:7> col:7 'const RateEWMAXParameters<4, 10, unsigned int, int> &'
|-CXXConstructorDecl 0x55a11294b4c8 <col:7> col:7 implicit constexpr RateEWMAXParameters 'void (RateEWMAXParameters<4, 10, unsigned int, int> &&)' inline default trivial noexcept-unevaluated 0x55a11294b4c8
| `-ParmVarDecl 0x55a11294b5d8 <col:7> col:7 'RateEWMAXParameters<4, 10, unsigned int, int> &&'
`-CXXDestructorDecl 0x55a11294b7f8 <col:7> col:7 implicit ~RateEWMAXParameters 'void ()' inline default trivial noexcept-unevaluated 0x55a11294b7f8

Layout: <CGRecordLayout
  LLVMType:%class.RateEWMAXParameters = type { i8 }
  NonVirtualBaseLLVMType:%class.RateEWMAXParameters = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a1128c0748 <../dummy_inc/click/ewma.hh:73:1, line:135:1> line:74:7 class DirectEWMAX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'RateEWMAXParameters<4, 10, unsigned int, int>':'RateEWMAXParameters<4, 10, unsigned int, int>'
|-TemplateArgument type 'RateEWMAXParameters<4, 10, unsigned int, int>'
|-CXXRecordDecl 0x55a1128c0a88 prev 0x55a1128c0748 <col:1, col:7> col:7 implicit class DirectEWMAX
|-AccessSpecDecl 0x55a1128c0b18 <col:32, col:38> col:32 public
|-TypedefDecl 0x55a1128c0bd0 <line:76:5, col:36> col:36 value_type 'typename RateEWMAXParameters<4, 10, unsigned int, int>::value_type':'unsigned int'
| `-ElaboratedType 0x55a1128c0b80 'typename RateEWMAXParameters<4, 10, unsigned int, int>::value_type' sugar
|   `-TypedefType 0x55a1128bf460 'FixedEWMAXParameters<4, 10, unsigned int, int>::value_type' sugar
|     |-Typedef 0x55a1128bf218 'value_type'
|     `-SubstTemplateTypeParmType 0x55a1128bf1e0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a1127d2240 'T' dependent depth 0 index 2
|       | `-TemplateTypeParm 0x55a1127d21f0 'T'
|       `-BuiltinType 0x55a1122ed450 'unsigned int'
|-CXXConstructorDecl 0x55a1128c0c60 <line:79:5, line:81:5> line:79:5 DirectEWMAX 'void ()'
|-CXXConstructorDecl 0x55a1128c0e38 <line:84:5, line:86:5> line:84:5 DirectEWMAX 'void (DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type)'
| `-ParmVarDecl 0x55a1128c0d50 <col:17, col:28> col:28 scaled_value 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type':'unsigned int'
|-CXXMethodDecl 0x55a1128c0f48 <line:90:5, line:92:5> line:90:16 scaled_average 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type () const'
|-CXXMethodDecl 0x55a1128c1018 <line:96:5, line:98:5> line:96:16 unscaled_average 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type () const'
|-CXXMethodDecl 0x55a1128c10c8 <line:101:5, line:103:5> line:101:10 clear 'void ()'
|-CXXMethodDecl 0x55a1128c1218 <line:106:5, line:108:5> line:106:17 assign 'void (DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type)' inline
| `-ParmVarDecl 0x55a1128c1188 <col:24, col:35> col:35 scaled_value 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type':'unsigned int'
|-CXXMethodDecl 0x55a1128c1370 <line:112:5, col:36> col:17 update 'void (DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type)' inline
| `-ParmVarDecl 0x55a1128c12e0 <col:24, col:35> col:35 x 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type':'unsigned int'
|-CXXMethodDecl 0x55a1128c1578 <line:119:5, col:43> col:10 update_n 'void (DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type, unsigned int)'
| |-ParmVarDecl 0x55a1128c1438 <col:19, col:30> col:30 x 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type':'unsigned int'
| `-ParmVarDecl 0x55a1128c14a0 <col:33, col:42> col:42 n 'unsigned int'
|-CXXMethodDecl 0x55a1128c1638 <line:124:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55a1128c1788 <line:129:5, col:69> col:17 update_with 'void (DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type)' inline
| |-ParmVarDecl 0x55a1128c16f8 <col:29, col:40> col:40 x 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type':'unsigned int'
| `-DeprecatedAttr 0x55a1128c1868 <col:58> Inherited "" ""
|-AccessSpecDecl 0x55a1128c18d8 <line:131:3, col:10> col:3 private
|-FieldDecl 0x55a1128c1910 <line:133:5, col:16> col:16 _avg 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type':'unsigned int'
|-CXXConstructorDecl 0x55a11294b678 <line:74:7> col:7 implicit constexpr DirectEWMAX 'void (const DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> > &)' inline default trivial noexcept-unevaluated 0x55a11294b678
| `-ParmVarDecl 0x55a11294b788 <col:7> col:7 'const DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> > &'
|-CXXConstructorDecl 0x55a11294b908 <col:7> col:7 implicit constexpr DirectEWMAX 'void (DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> > &&)' inline default trivial noexcept-unevaluated 0x55a11294b908
| `-ParmVarDecl 0x55a11294ba18 <col:7> col:7 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> > &&'
`-CXXDestructorDecl 0x55a11294bc08 <col:7> col:7 implicit ~DirectEWMAX 'void ()' inline default trivial noexcept-unevaluated 0x55a11294bc08

Layout: <CGRecordLayout
  LLVMType:%class.DirectEWMAX = type { i32 }
  NonVirtualBaseLLVMType:%class.DirectEWMAX = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a1128bc6e8 <../dummy_inc/click/ewma.hh:372:1, line:440:1> line:373:7 class RateEWMAX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'RateEWMAXParameters<4, 10, unsigned int, int>':'RateEWMAXParameters<4, 10, unsigned int, int>'
|-TemplateArgument type 'RateEWMAXParameters<4, 10, unsigned int, int>'
|-CXXRecordDecl 0x55a1128bfa30 prev 0x55a1128bc6e8 <col:1, col:7> col:7 implicit class RateEWMAX
|-AccessSpecDecl 0x55a1128bfac0 <col:30, col:36> col:30 public
|-TypedefDecl 0x55a1128bfb70 <line:375:5, col:36> col:36 value_type 'typename RateEWMAXParameters<4, 10, unsigned int, int>::value_type':'unsigned int'
| `-ElaboratedType 0x55a1128bfb20 'typename RateEWMAXParameters<4, 10, unsigned int, int>::value_type' sugar
|   `-TypedefType 0x55a1128bf460 'FixedEWMAXParameters<4, 10, unsigned int, int>::value_type' sugar
|     |-Typedef 0x55a1128bf218 'value_type'
|     `-SubstTemplateTypeParmType 0x55a1128bf1e0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a1127d2240 'T' dependent depth 0 index 2
|       | `-TemplateTypeParm 0x55a1127d21f0 'T'
|       `-BuiltinType 0x55a1122ed450 'unsigned int'
|-TypedefDecl 0x55a1128bfc60 <line:376:5, col:43> col:43 signed_value_type 'typename RateEWMAXParameters<4, 10, unsigned int, int>::signed_value_type':'int'
| `-ElaboratedType 0x55a1128bfc10 'typename RateEWMAXParameters<4, 10, unsigned int, int>::signed_value_type' sugar
|   `-TypedefType 0x55a1128bfbf0 'FixedEWMAXParameters<4, 10, unsigned int, int>::signed_value_type' sugar
|     |-Typedef 0x55a1128bf2a8 'signed_value_type'
|     `-SubstTemplateTypeParmType 0x55a1128bf270 'int' sugar
|       |-TemplateTypeParmType 0x55a1127d22d0 'U' dependent depth 0 index 3
|       | `-TemplateTypeParm 0x55a1127d2280 'U'
|       `-BuiltinType 0x55a1122ed3b0 'int'
|-CXXConstructorDecl 0x55a1128bfcf0 <line:379:5, line:383:5> line:379:5 used RateEWMAX 'void ()'
|-CXXMethodDecl 0x55a1128bfe98 <line:392:5, line:395:5> line:392:23 used scaled_average 'RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::signed_value_type (unsigned int) const'
| `-ParmVarDecl 0x55a1128bfdd0 <col:38, col:57> col:47 ratenum 'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a1128c51b8 <col:57> 'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a1128baf70 <col:57> 'int' 0
|-CXXMethodDecl 0x55a1128bffe8 <line:399:5, line:401:5> line:399:14 used scale 'unsigned int (unsigned int) const'
| `-ParmVarDecl 0x55a1128bff50 <col:20, col:39> col:29 ratenum 'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a1128c52c8 <col:39> 'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a1128bafa8 <col:39> 'int' 0
|-CXXMethodDecl 0x55a1128c0138 <line:410:5, col:43> col:16 rate 'int (unsigned int) const' inline
| `-ParmVarDecl 0x55a1128c00a0 <col:21, col:40> col:30 ratenum 'unsigned int'
|-CXXMethodDecl 0x55a1128c0338 <line:420:5, col:69> col:17 update 'void (RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::signed_value_type, unsigned int)' inline
| |-ParmVarDecl 0x55a1128c0200 <col:24, col:42> col:42 delta 'RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::signed_value_type':'int'
| `-ParmVarDecl 0x55a1128c0268 <col:49, col:68> col:58 ratenum 'unsigned int'
|-CXXMethodDecl 0x55a1128c0488 <line:430:5, col:47> col:12 unparse_rate 'String (unsigned int) const'
| `-ParmVarDecl 0x55a1128c03f8 <col:25, col:44> col:34 ratenum 'unsigned int'
|-AccessSpecDecl 0x55a1128c0540 <line:432:3, col:10> col:3 private
|-FieldDecl 0x55a1128c0568 <line:434:5, col:14> col:14 _current_epoch 'unsigned int'
|-FieldDecl 0x55a1128c06e8 <line:435:5, col:38> col:16 _current 'RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::value_type [1]'
|-FieldDecl 0x55a1128c1978 <line:436:5, col:38> col:20 _avg 'DirectEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> > [1]'
|-CXXMethodDecl 0x55a1128c1a58 <line:438:5, col:41> col:17 update_time 'void (unsigned int)' inline
| `-ParmVarDecl 0x55a1128c19c8 <col:29, col:38> col:38 now 'unsigned int'
|-CXXConstructorDecl 0x55a11294ba88 <line:373:7> col:7 implicit constexpr RateEWMAX 'void (const RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> > &)' inline default trivial noexcept-unevaluated 0x55a11294ba88
| `-ParmVarDecl 0x55a11294bb98 <col:7> col:7 'const RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> > &'
`-CXXConstructorDecl 0x55a11294bd18 <col:7> col:7 implicit constexpr RateEWMAX 'void (RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> > &&)' inline default trivial noexcept-unevaluated 0x55a11294bd18
  `-ParmVarDecl 0x55a11294be28 <col:7> col:7 'RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> > &&'

Layout: <CGRecordLayout
  LLVMType:%class.RateEWMAX = type { i32, [1 x i32], [1 x %class.DirectEWMAX] }
  NonVirtualBaseLLVMType:%class.RateEWMAX = type { i32, [1 x i32], [1 x %class.DirectEWMAX] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a1128beb28 <../elements/standard/bandwidthmeter.hh:38:1, line:67:1> line:38:7 class BandwidthMeter definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55a1128bec88 <col:1, col:7> col:7 implicit referenced class BandwidthMeter
|-AccessSpecDecl 0x55a1128bed18 <col:41, col:50> col:41 protected
|-FieldDecl 0x55a1128c1b28 <line:40:3, col:12> col:12 referenced _rate 'RateEWMA':'RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >'
|-FieldDecl 0x55a1128c1b90 <line:42:3, col:12> col:12 _meter1 'unsigned int'
|-FieldDecl 0x55a1128c1bf8 <line:43:3, col:13> col:13 _meters 'unsigned int *'
|-FieldDecl 0x55a1128c1c60 <line:44:3, col:7> col:7 _nmeters 'int'
|-CXXMethodDecl 0x55a1128c1e08 <line:46:3, col:54> col:17 meters_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a1128c1cc0 <col:37, col:45> col:46 'Element *'
| `-ParmVarDecl 0x55a1128c1d40 <col:48, col:53> col:54 'void *'
|-CXXMethodDecl 0x55a1128c1fe0 <line:47:3, col:52> col:17 read_rate_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a1128c1ec8 <col:35, col:43> col:44 'Element *'
| `-ParmVarDecl 0x55a1128c1f48 <col:46, col:51> col:52 'void *'
|-AccessSpecDecl 0x55a1128c2090 <line:49:2, col:8> col:2 public
|-CXXConstructorDecl 0x55a1128c20f0 <line:51:3, col:18> col:3 BandwidthMeter 'void ()'
|-CXXDestructorDecl 0x55a1128c21e0 <line:52:3, col:19> col:3 ~BandwidthMeter 'void ()' noexcept-unevaluated 0x55a1128c21e0
| `-Overrides: [ 0x55a11284f408 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55a1128c2310 <line:54:3, col:61> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55a112850868 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55a1128c4fa8 <col:34, col:61>
|   `-ReturnStmt 0x55a1128c4f98 <col:36, col:43>
|     `-ImplicitCastExpr 0x55a1128c4f80 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55a1128c4f58 <col:43> 'const char [15]' lvalue "BandwidthMeter"
|-CXXMethodDecl 0x55a1128c23d8 <line:55:3, col:51> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x55a112850930 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55a1128c5080 <col:34, col:51>
|   `-ReturnStmt 0x55a1128c5070 <col:36, col:43>
|     `-ImplicitCastExpr 0x55a1128c5058 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55a1128c5038 <col:43> 'const char [5]' lvalue "1/2-"
|-CXXMethodDecl 0x55a1128c24a0 <line:56:3, col:49> col:15 processing 'const char *() const'
| |-Overrides: [ 0x55a112850cf8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55a1128c50e0 <col:34, col:49>
|   `-ReturnStmt 0x55a1128c50d0 <col:36, col:43>
|     `-ImplicitCastExpr 0x55a1128c50b8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55a1128c5098 <col:43> 'const char []' lvalue Var 0x55a112850e40 'PUSH' 'const char []'
|-CXXMethodDecl 0x55a1128c2568 <line:58:3, col:65> col:12 scaled_rate 'unsigned int () const'
| `-CompoundStmt 0x55a1128c5218 <col:32, col:65>
|   `-ReturnStmt 0x55a1128c5208 <col:34, col:62>
|     `-ImplicitCastExpr 0x55a1128c51f0 <col:41, col:62> 'unsigned int' <IntegralCast>
|       `-CXXMemberCallExpr 0x55a1128c5168 <col:41, col:62> 'RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >::signed_value_type':'int'
|         |-MemberExpr 0x55a1128c5138 <col:41, col:47> '<bound member function type>' .scaled_average 0x55a1128bfe98
|         | `-MemberExpr 0x55a1128c5108 <col:41> 'const RateEWMA':'const RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >' lvalue ->_rate 0x55a1128c1b28
|         |   `-CXXThisExpr 0x55a1128c50f8 <col:41> 'const BandwidthMeter *' implicit this
|         `-CXXDefaultArgExpr 0x55a1128c51d0 <<invalid sloc>> 'unsigned int'
|-CXXMethodDecl 0x55a1128c2630 <line:59:3, col:55> col:12 rate_scale 'unsigned int () const'
| `-CompoundStmt 0x55a1128c5310 <col:31, col:55>
|   `-ReturnStmt 0x55a1128c5300 <col:33, col:52>
|     `-CXXMemberCallExpr 0x55a1128c52a0 <col:40, col:52> 'unsigned int'
|       |-MemberExpr 0x55a1128c5270 <col:40, col:46> '<bound member function type>' .scale 0x55a1128bffe8
|       | `-MemberExpr 0x55a1128c5240 <col:40> 'const RateEWMA':'const RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >' lvalue ->_rate 0x55a1128c1b28
|       |   `-CXXThisExpr 0x55a1128c5230 <col:40> 'const BandwidthMeter *' implicit this
|       `-CXXDefaultArgExpr 0x55a1128c52e0 <<invalid sloc>> 'unsigned int'
|-CXXMethodDecl 0x55a1128c26f8 <line:60:3, col:64> col:12 rate_freq 'unsigned int () const'
| `-CompoundStmt 0x55a1128c53e0 <col:30, col:64>
|   `-ReturnStmt 0x55a1128c53d0 <col:32, col:61>
|     `-CallExpr 0x55a1128c53b0 <col:39, col:61> 'unsigned int'
|       `-ImplicitCastExpr 0x55a1128c5398 <col:39, col:45> 'unsigned int (*)()' <FunctionToPointerDecay>
|         `-MemberExpr 0x55a1128c5368 <col:39, col:45> 'unsigned int ()' lvalue .epoch_frequency 0x55a1128bf938
|           `-MemberExpr 0x55a1128c5338 <col:39> 'const RateEWMA':'const RateEWMAX<RateEWMAXParameters<4, 10, unsigned int, int> >' lvalue ->_rate 0x55a1128c1b28
|             `-CXXThisExpr 0x55a1128c5328 <col:39> 'const BandwidthMeter *' implicit this
|-CXXMethodDecl 0x55a1128c29d0 <line:62:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55a112852100 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55a1128c2880 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x55a1128c28f8 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55a1128c2aa0 <line:63:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x55a1128521d0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55a1128c2c68 <line:65:3, col:31> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x55a11284f6d8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55a1128c2b58 <col:13, col:17> col:17 port 'int'
| `-ParmVarDecl 0x55a1128c2bd0 <col:23, col:30> col:31 'Packet *'
|-CXXConstructorDecl 0x55a1128c2d48 <line:38:7> col:7 implicit BandwidthMeter 'void (const BandwidthMeter &)' inline default_delete noexcept-unevaluated 0x55a1128c2d48
| `-ParmVarDecl 0x55a1128c4d40 <col:7> col:7 'const BandwidthMeter &'
`-CXXMethodDecl 0x55a1128c4dd8 <col:7> col:7 implicit operator= 'BandwidthMeter &(const BandwidthMeter &)' inline default_delete noexcept-unevaluated 0x55a1128c4dd8
  `-ParmVarDecl 0x55a1128c4ee8 <col:7> col:7 'const BandwidthMeter &'

Layout: <CGRecordLayout
  LLVMType:%class.BandwidthMeter = type <{ %class.Element.base, %class.RateEWMAX, i32, [4 x i8], i32*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.BandwidthMeter.base = type <{ %class.Element.base, %class.RateEWMAX, i32, [4 x i8], i32*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class BandwidthArg
         0 |   class NumArg (base) (empty)
         0 |   int status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a112622fd0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55a1126230e8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55a112623188 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55a1126231e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55a112623248 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55a1126232f8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a112623600 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a112623718 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55a1126237c0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55a112623828 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55a1126238b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55a112629950 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a112629d88 <col:12>
|-CXXConstructorDecl 0x55a112629a58 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a112629b68 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a1126237c0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55a11262c310 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55a11262c2e0 <col:12> 'const char *const' lvalue .data 0x55a1126237c0
| |     `-DeclRefExpr 0x55a11262c2c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a112629b68 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a112623828 'length' 'int'
| | `-ImplicitCastExpr 0x55a11262c3a0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55a11262c370 <col:12> 'const int' lvalue .length 0x55a112623828
| |     `-DeclRefExpr 0x55a11262c350 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a112629b68 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a1126238b8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55a11262c430 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55a11262c400 <col:12> 'String::memo_t *const' lvalue .memo 0x55a1126238b8
| |     `-DeclRefExpr 0x55a11262c3e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a112629b68 '' 'const String::rep_t &'
| `-CompoundStmt 0x55a11262c488 <col:12>
|-CXXConstructorDecl 0x55a112629c08 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a112629c08
| `-ParmVarDecl 0x55a112629d18 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55a11262f270 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a11263ac88 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a11263ad98 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55a11263b2b0 <col:12>
|   |-BinaryOperator 0x55a11263b0c8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55a11263b080 <col:12> 'const char *' lvalue ->data 0x55a1126237c0
|   | | `-CXXThisExpr 0x55a11263b070 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a11263b0b0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55a11263b040 <col:12> 'const char *const' lvalue .data 0x55a1126237c0
|   |     `-DeclRefExpr 0x55a11263b020 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a11263ad98 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55a11263b190 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55a11263b148 <col:12> 'int' lvalue ->length 0x55a112623828
|   | | `-CXXThisExpr 0x55a11263b138 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a11263b178 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55a11263b108 <col:12> 'const int' lvalue .length 0x55a112623828
|   |     `-DeclRefExpr 0x55a11263b0e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a11263ad98 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55a11263b258 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55a11263b210 <col:12> 'String::memo_t *' lvalue ->memo 0x55a1126238b8
|   | | `-CXXThisExpr 0x55a11263b200 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a11263b240 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55a11263b1d0 <col:12> 'String::memo_t *const' lvalue .memo 0x55a1126238b8
|   |     `-DeclRefExpr 0x55a11263b1b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a11263ad98 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55a11263b2a0 <col:12>
|     `-UnaryOperator 0x55a11263b288 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a11263b278 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55a11263ae08 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a11263ae08
  `-ParmVarDecl 0x55a11263af18 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a11261a540 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a11261a658 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55a11261a6e8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55a11261a728 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55a1122ede00 'const char *'
|   `-QualType 0x55a1122ed351 'const char' const
|     `-BuiltinType 0x55a1122ed350 'char'
|-TypedefDecl 0x55a11261a7b0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55a11261a780 'String::const_iterator' sugar
|   |-Typedef 0x55a11261a728 'const_iterator'
|   `-PointerType 0x55a1122ede00 'const char *'
|     `-QualType 0x55a1122ed351 'const char' const
|       `-BuiltinType 0x55a1122ed350 'char'
|-TypedefDecl 0x55a11261a920 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55a11261a890 'int (String::*)() const'
|   |-RecordType 0x55a11261a5d0 'String'
|   | `-CXXRecord 0x55a11261a540 'String'
|   `-ParenType 0x55a11261a830 'int () const' sugar
|     `-FunctionProtoType 0x55a1125ee3c0 'int () const' const cdecl
|       `-BuiltinType 0x55a1122ed3b0 'int'
|-TypedefDecl 0x55a11261a988 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55a112442d80 'int64_t' sugar
|   |-Typedef 0x55a1123562a0 'int64_t'
|   `-TypedefType 0x55a11232f510 '__int64_t' sugar
|     |-Typedef 0x55a11232f0e8 '__int64_t'
|     `-BuiltinType 0x55a1122ed3d0 'long'
|-TypedefDecl 0x55a11261a9f0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55a112442ca0 'uint64_t' sugar
|   |-Typedef 0x55a112356440 'uint64_t'
|   `-TypedefType 0x55a11232f5a0 '__uint64_t' sugar
|     |-Typedef 0x55a11232f158 '__uint64_t'
|     `-BuiltinType 0x55a1122ed470 'unsigned long'
|-TypedefDecl 0x55a11261aa80 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55a11261aa50 'String::intmax_t' sugar
|   |-Typedef 0x55a11261a988 'intmax_t'
|   `-TypedefType 0x55a112442d80 'int64_t' sugar
|     |-Typedef 0x55a1123562a0 'int64_t'
|     `-TypedefType 0x55a11232f510 '__int64_t' sugar
|       |-Typedef 0x55a11232f0e8 '__int64_t'
|       `-BuiltinType 0x55a1122ed3d0 'long'
|-TypedefDecl 0x55a11261ab10 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55a11261aae0 'String::uintmax_t' sugar
|   |-Typedef 0x55a11261a9f0 'uintmax_t'
|   `-TypedefType 0x55a112442ca0 'uint64_t' sugar
|     |-Typedef 0x55a112356440 'uint64_t'
|     `-TypedefType 0x55a11232f5a0 '__uint64_t' sugar
|       |-Typedef 0x55a11232f158 '__uint64_t'
|       `-BuiltinType 0x55a1122ed470 'unsigned long'
|-CXXConstructorDecl 0x55a11261abd0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55a11261ad78 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55a11261acb8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55a11261af28 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55a11261ae68 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55a11261b080 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55a11261aff0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55a11261b298 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55a11261b148 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55a11261b1c8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55a11261b4b8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55a11261b368 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55a11261b3e8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55a11261b6d8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55a11261b588 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55a11261b608 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55a11261b8f8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55a11261b7a8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55a11261b828 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55a11261ba88 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55a11261b9c0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55a11261bc08 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55a11261bb48 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55a11261bd98 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55a11261bcd0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55a11261bef0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55a11261be60 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55a11261c048 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55a11261bfb8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55a11261c1a0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55a11261c110 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55a11261c328 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55a11261c268 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55a11261c4b8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55a11261c3f0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55a11261c648 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55a11261c580 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55a11261c7d8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55a11261c710 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55a11261c8d0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55a11261c9f8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55a11261cb78 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55a11261cab0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55a11261ccc8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55a11261cc38 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55a11261cd80 <col:63> "" ""
|-CXXMethodDecl 0x55a11261cec8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55a11261ce08 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55a11261d0d8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55a11261cf88 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55a11261d008 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55a11261d2f8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55a11261d1a0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55a11261d220 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55a11261d5d8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55a11261d3b8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55a11261d438 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55a112629420 <col:55> 'int' 10
| `-ParmVarDecl 0x55a11261d4b0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a112629440 <col:76> 'bool' true
|-CXXMethodDecl 0x55a11261d8b8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55a11261d6a0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55a11261d720 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55a112629450 <col:56> 'int' 10
| `-ParmVarDecl 0x55a11261d798 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a112629470 <col:77> 'bool' true
|-CXXMethodDecl 0x55a11261d9c0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55a11261da88 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55a11261db50 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55a11261dbf0 <col:20>
| `-OptimizeNoneAttr 0x55a11261dc48 <col:30>
|-CXXConversionDecl 0x55a11261dd38 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55a11261de08 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55a11261dec8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55a11261dfb8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55a11261e078 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55a11261e1f8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55a11261e130 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55a11261e348 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55a11261e2b8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55a11261e438 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55a11261e4f8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55a11261e748 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55a11261e5b0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55a11261e630 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55a11261e9a8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55a11261e810 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55a11261e890 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55a11261ea78 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55a11261ec88 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55a11261eb30 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55a11261ebb0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55a11261eea8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55a11261ed50 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55a11261edd0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55a11261f038 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55a11261ef70 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55a11261f128 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55a11261f298 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55a11261f1d8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a11261f4a8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55a11261f358 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55a11261f3d8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55a11261f6c0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55a11261f568 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55a11261f5e0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55a11261f850 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55a11261f780 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a11261fa70 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55a11261f910 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55a11261f990 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55a11261fbc0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55a11261fb30 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55a11261fd98 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55a11261fc80 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55a11261fd00 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55a11261fee8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55a11261fe58 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55a112620100 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55a11261ffa0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55a112620020 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55a112629480 <col:39> 'int' 0
|-CXXMethodDecl 0x55a112620320 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55a1126201c0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55a112620240 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55a1126294a0 <col:48> 'int' 0
|-CXXMethodDecl 0x55a112620500 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55a1126203e0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55a112620460 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55a1126294c0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55a1126205d0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55a112620690 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55a112620750 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55a112620810 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55a1126208d0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55a112620a78 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55a112620980 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55a112620bf8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55a112620b30 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55a112620dd0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55a112620cb8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55a112620f48 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55a112620e88 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55a112621090 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55a112621000 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a1126211e0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55a112621150 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55a1126213b8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55a1126212a0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55a112621320 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55a112621598 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55a112621480 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55a112621500 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55a1126216e8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55a112621658 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55a1126218f8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55a1126217a8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55a112621828 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55a112621a58 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55a1126219c0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55a112621bb0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55a112621b18 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55a112621c58 <col:57> "" ""
|-CXXMethodDecl 0x55a112621d68 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55a112621cd8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55a112621eb8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55a112621e28 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55a112622038 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55a112621f70 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55a112622100 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55a1126221c0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55a112622280 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55a112622320 <col:49> "" ""
|-CXXMethodDecl 0x55a1126223b0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55a112622470 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55a112622560 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55a112622628 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55a1126226e8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55a1126227a8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55a1126228a0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55a112622968 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55a112622a30 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55a112622c08 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55a112622ae8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55a112622b68 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55a112622e30 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55a112622cd0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55a112622d50 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55a112622f40 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55a112622fa8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55a112622fd0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a1126230e8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55a112623188 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55a1126231e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55a112623248 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55a1126232f8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55a112623360 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55a112623598 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55a1126235e8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a112623578 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55a112623488 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55a112623430 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55a112623470 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55a112623450 <col:32> 'int' 8
|-CXXRecordDecl 0x55a112623600 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a112623718 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55a1126237c0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55a112623828 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55a1126238b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55a112629950 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a112629d88 <col:12>
| |-CXXConstructorDecl 0x55a112629a58 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a112629b68 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a1126237c0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55a11262c310 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55a11262c2e0 <col:12> 'const char *const' lvalue .data 0x55a1126237c0
| | |     `-DeclRefExpr 0x55a11262c2c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a112629b68 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a112623828 'length' 'int'
| | | `-ImplicitCastExpr 0x55a11262c3a0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55a11262c370 <col:12> 'const int' lvalue .length 0x55a112623828
| | |     `-DeclRefExpr 0x55a11262c350 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a112629b68 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a1126238b8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55a11262c430 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55a11262c400 <col:12> 'String::memo_t *const' lvalue .memo 0x55a1126238b8
| | |     `-DeclRefExpr 0x55a11262c3e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a112629b68 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55a11262c488 <col:12>
| |-CXXConstructorDecl 0x55a112629c08 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a112629c08
| | `-ParmVarDecl 0x55a112629d18 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55a11262f270 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55a11263ac88 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a11263ad98 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55a11263b2b0 <col:12>
| |   |-BinaryOperator 0x55a11263b0c8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55a11263b080 <col:12> 'const char *' lvalue ->data 0x55a1126237c0
| |   | | `-CXXThisExpr 0x55a11263b070 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a11263b0b0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55a11263b040 <col:12> 'const char *const' lvalue .data 0x55a1126237c0
| |   |     `-DeclRefExpr 0x55a11263b020 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a11263ad98 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55a11263b190 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55a11263b148 <col:12> 'int' lvalue ->length 0x55a112623828
| |   | | `-CXXThisExpr 0x55a11263b138 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a11263b178 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55a11263b108 <col:12> 'const int' lvalue .length 0x55a112623828
| |   |     `-DeclRefExpr 0x55a11263b0e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a11263ad98 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55a11263b258 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55a11263b210 <col:12> 'String::memo_t *' lvalue ->memo 0x55a1126238b8
| |   | | `-CXXThisExpr 0x55a11263b200 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a11263b240 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55a11263b1d0 <col:12> 'String::memo_t *const' lvalue .memo 0x55a1126238b8
| |   |     `-DeclRefExpr 0x55a11263b1b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a11263ad98 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55a11263b2a0 <col:12>
| |     `-UnaryOperator 0x55a11263b288 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55a11263b278 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55a11263ae08 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a11263ae08
|   `-ParmVarDecl 0x55a11263af18 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55a112623930 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55a112623b78 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55a112623998 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55a112623a18 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55a112623a90 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55a112629910 <col:79, line:261:5>
|   |-BinaryOperator 0x55a112629588 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55a112629520 <col:2, col:5> 'const char *' lvalue .data 0x55a1126237c0
|   | | `-MemberExpr 0x55a1126294f0 <col:2> 'String::rep_t' lvalue ->_r 0x55a112623930
|   | |   `-CXXThisExpr 0x55a1126294e0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55a112629570 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a112629550 <col:12> 'const char *' lvalue ParmVar 0x55a112623998 'data' 'const char *'
|   |-BinaryOperator 0x55a112629650 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55a1126295e8 <col:2, col:5> 'int' lvalue .length 0x55a112623828
|   | | `-MemberExpr 0x55a1126295b8 <col:2> 'String::rep_t' lvalue ->_r 0x55a112623930
|   | |   `-CXXThisExpr 0x55a1126295a8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55a112629638 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a112629618 <col:14> 'int' lvalue ParmVar 0x55a112623a18 'length' 'int'
|   `-IfStmt 0x55a1126298f8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55a112629770 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55a112629758 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55a112629738 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55a112629718 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55a1126296b0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55a1126238b8
|     |       | `-MemberExpr 0x55a112629680 <col:7> 'String::rep_t' lvalue ->_r 0x55a112623930
|     |       |   `-CXXThisExpr 0x55a112629670 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55a112629700 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55a1126296e0 <col:17> 'String::memo_t *' lvalue ParmVar 0x55a112623a90 'memo' 'String::memo_t *'
|     `-CallExpr 0x55a1126298d0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55a1126298b8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a1126297c0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55a1126125a8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55a112629828 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a112623188
|         `-ImplicitCastExpr 0x55a112629810 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55a1126297f0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55a112623a90 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55a112623e28 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55a112623c48 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55a112623cc8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55a112623d40 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55a112623930 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55a112629d98 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a112629f28 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55a112629e90 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55a112629e00 <col:2> '<bound member function type>' ->assign_memo 0x55a112623b78
|     | `-ImplicitCastExpr 0x55a112629ec8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55a112629df0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55a112629ee0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a112629e30 <col:14> 'const char *' lvalue ParmVar 0x55a112623c48 'data' 'const char *'
|     |-ImplicitCastExpr 0x55a112629ef8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55a112629e50 <col:20> 'int' lvalue ParmVar 0x55a112623cc8 'length' 'int'
|     `-ImplicitCastExpr 0x55a112629f10 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55a112629e70 <col:28> 'String::memo_t *' lvalue ParmVar 0x55a112623d40 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55a112623fb8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55a112623ef8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55a11262a180 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55a11262a100 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55a112629f50 <col:2> '<bound member function type>' ->assign_memo 0x55a112623b78
|     | `-CXXThisExpr 0x55a112629f40 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55a11262a138 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55a112629fd0 <col:14, col:19> 'const char *' lvalue .data 0x55a1126237c0
|     |   `-MemberExpr 0x55a112629fa0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55a112623930
|     |     `-DeclRefExpr 0x55a112629f80 <col:14> 'const String' lvalue ParmVar 0x55a112623ef8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55a11262a150 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55a11262a050 <col:25, col:30> 'int' lvalue .length 0x55a112623828
|     |   `-MemberExpr 0x55a11262a020 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55a112623930
|     |     `-DeclRefExpr 0x55a11262a000 <col:25> 'const String' lvalue ParmVar 0x55a112623ef8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55a11262a168 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55a11262a0d0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55a1126238b8
|         `-MemberExpr 0x55a11262a0a0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55a112623930
|           `-DeclRefExpr 0x55a11262a080 <col:38> 'const String' lvalue ParmVar 0x55a112623ef8 'x' 'const String &'
|-CXXMethodDecl 0x55a112624080 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55a11262ab40 <col:31, line:278:5>
|   `-IfStmt 0x55a11262ab28 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55a11262a220 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55a11262a208 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55a11262a1d8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55a1126238b8
|     |     `-MemberExpr 0x55a11262a1a8 <col:6> 'String::rep_t' lvalue ->_r 0x55a112623930
|     |       `-CXXThisExpr 0x55a11262a198 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55a11262ab00 <col:15, line:277:2>
|       |-ParenExpr 0x55a11262a6d0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55a11262a6a0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55a11262a330 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55a11262a318 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55a11262a300 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55a11262a2c0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a112623188
|       |   |       `-ImplicitCastExpr 0x55a11262a2a8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55a11262a278 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55a1126238b8
|       |   |           `-MemberExpr 0x55a11262a248 <col:27> 'String::rep_t' lvalue ->_r 0x55a112623930
|       |   |             `-CXXThisExpr 0x55a11262a238 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55a11262a390 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55a11262a370 <col:54> 'int' 0
|       |   `-CallExpr 0x55a11262a600 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55a11262a5e8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55a11262a568 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55a11262a640 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55a11262a478 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55a11262a658 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55a11262a4a8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55a11262a670 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55a11262a4e0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55a11262a688 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55a11262a550 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55a11262a538 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55a11262a500 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55a11262aa20 <line:274:6, line:275:22>
|       | |-CallExpr 0x55a11262a8e0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55a11262a8c8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55a11262a840 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55a1126139f0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55a11262a810 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a112623188
|       | |   `-ImplicitCastExpr 0x55a11262a7f8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55a11262a7c8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55a1126238b8
|       | |       `-MemberExpr 0x55a11262a798 <col:40> 'String::rep_t' lvalue ->_r 0x55a112623930
|       | |         `-CXXThisExpr 0x55a11262a788 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55a11262a9e0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55a11262a9c8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55a11262a908 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55a112628860 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55a11262aa08 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55a11262a968 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55a1126238b8
|       |       `-MemberExpr 0x55a11262a938 <col:15> 'String::rep_t' lvalue ->_r 0x55a112623930
|       |         `-CXXThisExpr 0x55a11262a928 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55a11262aae0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55a11262aa78 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55a1126238b8
|         | `-MemberExpr 0x55a11262aa48 <col:6> 'String::rep_t' lvalue ->_r 0x55a112623930
|         |   `-CXXThisExpr 0x55a11262aa38 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55a11262aac8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55a11262aaa8 <col:16> 'int' 0
|-CXXMethodDecl 0x55a112624318 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55a112624138 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55a1126241b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55a112624230 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55a1126243f0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55a112624640 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55a1126244a8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55a112624528 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55a1126245a0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55a112624828 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55a112624710 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55a112624790 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55a112624928 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55a11262ac18 <col:41, line:286:5>
|   `-ReturnStmt 0x55a11262ac08 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55a11262abd8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55a11262aba0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55a11262ab88 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55a11262ab68 <col:46> 'int' 1
|-CXXMethodDecl 0x55a112624bc8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55a1126249e0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55a112624a60 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55a112624ae0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55a112628860 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55a112624c90 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55a112628930 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55a112628b00 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55a1126289e8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55a112628a68 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55a112628bc0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55a112628c88 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55a112628d88 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55a112628e00 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55a112628e78 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55a112628ee0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55a112628fe0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55a112629030 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a112628fc0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55a112628fa0 <col:22> 'int' 14
|-CXXMethodDecl 0x55a112629248 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55a112629060 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55a1126290e0 <col:38> col:41 'int'
| `-ParmVarDecl 0x55a112629160 <col:43> col:46 'int'
|-FriendDecl 0x55a112629350 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55a1126293e0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a112894ca0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55a112894e78 prev 0x55a112894ca0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a112894f08 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a112894f30 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a1122ed3b0 'int'
|-TypedefDecl 0x55a112896890 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55a112896840 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55a112896820 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55a112895148 'type'
|     `-SubstTemplateTypeParmType 0x55a112895110 'String' sugar
|       |-TemplateTypeParmType 0x55a1125ddde0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a1125ddd90 'T'
|       `-RecordType 0x55a11261a5d0 'String'
|         `-CXXRecord 0x55a11261a540 'String'
|-TypedefDecl 0x55a112896948 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55a112896910 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55a1128968f0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55a112896890 'type'
|     `-ElaboratedType 0x55a112896840 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55a112896820 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55a112895148 'type'
|         `-SubstTemplateTypeParmType 0x55a112895110 'String' sugar
|           |-TemplateTypeParmType 0x55a1125ddde0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a1125ddd90 'T'
|           `-RecordType 0x55a11261a5d0 'String'
|             `-CXXRecord 0x55a11261a540 'String'
|-CXXMethodDecl 0x55a112896ac8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55a1128969d8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55a112896bb8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a112896c98 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55a112896c98
|-CXXMethodDecl 0x55a112896f68 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55a112896e70 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55a1128971a8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55a112897020 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a112897098 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a112897378 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55a112897268 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a1128972e0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a1128974d8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55a1128975a8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55a1128977f8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55a112897668 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55a1128976e0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a112897a58 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55a1128978c8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55a112897940 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a112897c18 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55a112897b28 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a112897dd8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55a112897ce0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a112897e90 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a112897f40 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a112898178 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55a112897ff0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a112898068 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a112898418 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55a112898320 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55a1128984e0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55a112898530 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a112898580 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a112851d70 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55a112893708 prev 0x55a112851d70 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a112894c10 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55a112894bc0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55a112894ba0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55a112894a50 'type'
|     `-SubstTemplateTypeParmType 0x55a1128948e0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55a1125b3970 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55a1125b3918 'F'
|       `-RecordType 0x55a112894540 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55a112894460 'typed_array_memory'
|-FieldDecl 0x55a1128985d0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55a112898620 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a112898658 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55a1128937a0 'String' sugar
|   |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|   `-RecordType 0x55a11261a5d0 'String'
|     `-CXXRecord 0x55a11261a540 'String'
|-TypedefDecl 0x55a1128986e8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55a1128986b0 'String &'
|   `-SubstTemplateTypeParmType 0x55a1128937a0 'String' sugar
|     |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|     `-RecordType 0x55a11261a5d0 'String'
|       `-CXXRecord 0x55a11261a540 'String'
|-TypedefDecl 0x55a112898778 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55a112898740 'const String &'
|   `-QualType 0x55a1128937a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55a1128937a0 'String' sugar
|       |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|       `-RecordType 0x55a11261a5d0 'String'
|         `-CXXRecord 0x55a11261a540 'String'
|-TypedefDecl 0x55a112898808 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55a1128987d0 'String *'
|   `-SubstTemplateTypeParmType 0x55a1128937a0 'String' sugar
|     |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|     `-RecordType 0x55a11261a5d0 'String'
|       `-CXXRecord 0x55a11261a540 'String'
|-TypedefDecl 0x55a1128988b0 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55a112898860 'const String *'
|   `-QualType 0x55a1128937a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55a1128937a0 'String' sugar
|       |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|       `-RecordType 0x55a11261a5d0 'String'
|         `-CXXRecord 0x55a11261a540 'String'
|-TypedefDecl 0x55a112899510 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55a1128994c0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55a1128994a0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55a1128993d8 'type'
|     `-LValueReferenceType 0x55a1128993a0 'const String &'
|       `-QualType 0x55a112899141 'const String' const
|         `-SubstTemplateTypeParmType 0x55a112899140 'String' sugar
|           |-TemplateTypeParmType 0x55a1125bd8c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a1125bd868 'T'
|           `-RecordType 0x55a11261a5d0 'String'
|             `-CXXRecord 0x55a11261a540 'String'
|-TypedefDecl 0x55a112899578 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55a112898740 'const String &'
|   `-QualType 0x55a1128937a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55a1128937a0 'String' sugar
|       |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|       `-RecordType 0x55a11261a5d0 'String'
|         `-CXXRecord 0x55a11261a540 'String'
|-TypedefDecl 0x55a1128995d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a1122ed3b0 'int'
|-TypedefDecl 0x55a112899638 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55a1128987d0 'String *'
|   `-SubstTemplateTypeParmType 0x55a1128937a0 'String' sugar
|     |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|     `-RecordType 0x55a11261a5d0 'String'
|       `-CXXRecord 0x55a11261a540 'String'
|-TypedefDecl 0x55a1128996a0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55a112898860 'const String *'
|   `-QualType 0x55a1128937a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55a1128937a0 'String' sugar
|       |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|       `-RecordType 0x55a11261a5d0 'String'
|         `-CXXRecord 0x55a11261a540 'String'
|-EnumDecl 0x55a1128996f8 <line:134:5> col:5
| `-EnumConstantDecl 0x55a1128997f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a1128997d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a1125ec788 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a1125ec760 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a1125ec740 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a112899878 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a112899b08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55a112899930 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a1128999d0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55a112899d98 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55a112899c80 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55a11289a058 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55a112899f40 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55a11289a370 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55a11289a250 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55a11289a680 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55a11289a560 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55a11289a970 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55a11289a7b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a11289a830 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55a11289aa98 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55a11289ab48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a11289aba0 <col:30> Inherited
|-CXXMethodDecl 0x55a11289abe8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55a11289ac98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a11289acf0 <col:30> Inherited
|-CXXMethodDecl 0x55a11289adb8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55a11289ae68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a11289aec0 <col:30> Inherited
|-CXXMethodDecl 0x55a11289af08 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55a11289afb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a11289b010 <col:30> Inherited
|-CXXMethodDecl 0x55a11289b058 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55a11289b108 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a11289b160 <col:30> Inherited
|-CXXMethodDecl 0x55a11289b1a8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55a11289b258 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a11289b2b0 <col:30> Inherited
|-CXXMethodDecl 0x55a11289b2d8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a11289b388 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a11289b438 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a11289b5f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55a11289b4e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a11289b560 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55a11289b748 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a11289b6b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a11289b8f8 <line:163:5, col:65> col:43 used operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55a11289b800 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a11289b9b0 <col:20>
| `-OptimizeNoneAttr 0x55a11289ba08 <col:30>
|-CXXMethodDecl 0x55a11289bb28 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55a11289ba30 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a11289bbe0 <col:20>
| `-OptimizeNoneAttr 0x55a11289bc38 <col:30>
|-CXXMethodDecl 0x55a11289bcf0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a11289bc60 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a11289be38 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a11289bda8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a11289bf68 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55a11289c068 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55a11289c138 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55a11289c208 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55a11289c348 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a11289c2b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a11289c490 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a11289c400 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a11289c5d8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a11289c548 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a11289c690 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a11289c790 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a11289c700 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a11289c848 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a11289c908 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55a11289ca08 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55a11289cb88 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55a11289cac8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55a11289d348 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a11289cc40 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55a11289d2a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55a11289d1a8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55a11289d428 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a11289d578 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55a11289d4e8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55a11289d630 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a11289d878 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55a11289d6f0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55a11289d768 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55a11289da08 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55a11289d948 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55a11289dc18 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55a11289dad0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55a11289db48 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55a11289dcd8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55a11289df38 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55a11289de40 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55a11289e008 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a11289e008

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a1128c53f8 prev 0x55a112867c38 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a1128c54f0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55a1128c5580 <col:22, col:28> col:22 public
|-EnumDecl 0x55a1128c55a8 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55a1128c56c8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a1128c56a8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55a1128c5690 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55a1128c5670 <col:14> 'int' 999
| |-EnumConstantDecl 0x55a1128c5770 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a1128c5750 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55a1128c5738 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55a1128c5718 <col:14> 'int' 1
| |-EnumConstantDecl 0x55a1128c5800 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a1128c57e0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55a1128c57c0 <col:17> 'int' 0
| |-EnumConstantDecl 0x55a1128c5890 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a1128c5870 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55a1128c5850 <col:13> 'int' 1
| |-EnumConstantDecl 0x55a1128c5920 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a1128c5900 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55a1128c58e0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55a1128c59b0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a1128c5990 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55a1128c5970 <col:13> 'int' 3
| |-EnumConstantDecl 0x55a1128c5a40 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a1128c5a20 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55a1128c5a00 <col:15> 'int' 4
| |-EnumConstantDecl 0x55a1128c5ad0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a1128c5ab0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55a1128c5a90 <col:14> 'int' 5
| |-EnumConstantDecl 0x55a1128c5b60 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a1128c5b40 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55a1128c5b20 <col:12> 'int' 6
| `-EnumConstantDecl 0x55a1128c5bf0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55a1128c5bd0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55a1128c5bb0 <col:13> 'int' 7
|-VarDecl 0x55a1128c5c60 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55a1128c5ce8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55a1128c5d70 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55a1128c5df8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55a1128c5e80 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55a1128c5f08 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55a1128c5f90 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55a1128c6018 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55a1128c60a0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55a1128c6128 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55a1128c61b0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55a1128c62b0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55a1128cb628 '_nerrors' 'int'
| | `-IntegerLiteral 0x55a1128cbdb8 <line:128:13> 'int' 0
| `-CompoundStmt 0x55a1128cbe28 <col:16, line:129:5>
|-CXXDestructorDecl 0x55a1128c63a0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55a1128cbe38 <col:29, line:132:5>
|-CXXMethodDecl 0x55a1128c6558 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55a1128c6490 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a1128c6620 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55a1128c6708 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55a1128cbe90 <col:44, line:161:5>
|   `-ReturnStmt 0x55a1128cbe80 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55a1128cbe68 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55a1128cbe48 <col:9> 'ErrorHandler *' lvalue Var 0x55a1128cb688 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55a1128c6878 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55a1128c67b8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a1128c6940 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55a1128cbef0 <col:43, line:173:5>
|   `-ReturnStmt 0x55a1128cbee0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55a1128cbec8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55a1128cbea8 <col:9> 'ErrorHandler *' lvalue Var 0x55a1128cb700 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55a1128c69f8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55a1128c6a78 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55a1128c6b88 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55a1128c6af8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c6cd8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55a1128c6c48 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c6e30 <line:193:5, col:37> col:9 used warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55a1128c6d98 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c6f88 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x55a1128c6ef0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c70e0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55a1128c7048 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c72f0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a1128c7198 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55a1128c7218 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c74c8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a1128c73b0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55a1128c7430 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c76e8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a1128c7588 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55a1128c7608 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c78c8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a1128c77a8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55a1128c7828 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c7aa8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a1128c7988 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55a1128c7a08 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c7c30 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55a1128c7b68 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55a1128c7e00 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55a1128c7ce8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55a1128c7d60 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55a1128cc148 <col:57, line:234:5>
|   `-ReturnStmt 0x55a1128cc138 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55a1128cc120 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55a1128cc0c8 <col:9, col:41> 'int'
|         |-MemberExpr 0x55a1128cc098 <col:9> '<bound member function type>' ->xmessage 0x55a1128c7c30
|         | `-CXXThisExpr 0x55a1128cc088 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55a1128cc108 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55a1128cc0f0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55a1128cc068 <col:18, col:40> 'String' (CXXTemporary 0x55a1128cc068)
|               `-CallExpr 0x55a1128cc030 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55a1128cc018 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55a1128cbf90 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55a1128c9e58 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55a1128cbfb0 <col:31> 'const String' lvalue ParmVar 0x55a1128c7d60 'str' 'const String &'
|                 `-DeclRefExpr 0x55a1128cbfd0 <col:36> 'const String' lvalue ParmVar 0x55a1128c7ce8 'anno' 'const String &'
|-CXXMethodDecl 0x55a1128c8140 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55a1128c7ec0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55a1128c7f40 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55a1128c8010 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55a1128cc3d8 <col:68, line:243:5>
|   `-ReturnStmt 0x55a1128cc3c8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55a1128cc3b0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55a1128cc350 <col:9, col:41> 'int'
|         |-MemberExpr 0x55a1128cc320 <col:9> '<bound member function type>' ->xmessage 0x55a1128c7e00
|         | `-CXXThisExpr 0x55a1128cc310 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55a1128cc1e8 <col:18> 'const String' lvalue ParmVar 0x55a1128c7ec0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55a1128cc398 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55a1128cc380 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55a1128cc2f0 <col:24, col:40> 'String' (CXXTemporary 0x55a1128cc2f0)
|               `-CXXMemberCallExpr 0x55a1128cc288 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55a1128cc218 <col:24> '<bound member function type>' ->vformat 0x55a1128c9320
|                 | `-CXXThisExpr 0x55a1128cc208 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55a1128cc2b8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55a1128cc248 <col:32> 'const char *' lvalue ParmVar 0x55a1128c7f40 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55a1128cc2d0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55a1128cc268 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55a1128c8010 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a1128c83e0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55a1128c8208 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55a1128c8280 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55a1128c82f8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55a1128cc718 <col:23, line:254:5>
|   `-ReturnStmt 0x55a1128cc708 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55a1128cc6f0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55a1128cc690 <col:9, col:71> 'int'
|         |-MemberExpr 0x55a1128cc660 <col:9> '<bound member function type>' ->xmessage 0x55a1128c7e00
|         | `-CXXThisExpr 0x55a1128cc650 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55a1128cc6d8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55a1128cc6c0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55a1128cc610 <col:18, col:65> 'String' (CXXTemporary 0x55a1128cc610)
|         |     `-CallExpr 0x55a1128cc5a8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55a1128cc590 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55a1128cc478 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55a1128c9e58 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55a1128cc498 <col:31> 'const String' lvalue ParmVar 0x55a1128c8280 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55a1128cc5f0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55a1128cc5d8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55a1128cc570 <col:37, col:64> 'String' (CXXTemporary 0x55a1128cc570)
|         |             `-CallExpr 0x55a1128cc540 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55a1128cc528 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55a1128cc4b8 <col:37> 'String (const String &)' lvalue CXXMethod 0x55a1128ca4a8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55a1128cc4d8 <col:56> 'const String' lvalue ParmVar 0x55a1128c8208 'landmark' 'const String &'
|         `-DeclRefExpr 0x55a1128cc630 <col:68> 'const String' lvalue ParmVar 0x55a1128c82f8 'str' 'const String &'
|-CXXMethodDecl 0x55a1128c8760 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55a1128c84a8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55a1128c8520 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55a1128c85a0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55a1128c8618 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55a1128cc9d0 <col:34, line:267:5>
|   `-ReturnStmt 0x55a1128cc9c0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55a1128cc9a8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55a1128cc940 <col:9, col:51> 'int'
|         |-MemberExpr 0x55a1128cc910 <col:9> '<bound member function type>' ->xmessage 0x55a1128c83e0
|         | `-CXXThisExpr 0x55a1128cc900 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55a1128cc7b8 <col:18> 'const String' lvalue ParmVar 0x55a1128c84a8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55a1128cc7d8 <col:28> 'const String' lvalue ParmVar 0x55a1128c8520 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55a1128cc990 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55a1128cc978 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55a1128cc8e0 <col:34, col:50> 'String' (CXXTemporary 0x55a1128cc8e0)
|               `-CXXMemberCallExpr 0x55a1128cc878 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55a1128cc808 <col:34> '<bound member function type>' ->vformat 0x55a1128c9320
|                 | `-CXXThisExpr 0x55a1128cc7f8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55a1128cc8a8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55a1128cc838 <col:42> 'const char *' lvalue ParmVar 0x55a1128c85a0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55a1128cc8c0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55a1128cc858 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55a1128c8618 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a1128c8870 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55a1128cca50 <col:25, line:288:5>
|   `-ReturnStmt 0x55a1128cca40 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55a1128cca28 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55a1128cc9f8 <col:9> 'const int' lvalue ->_nerrors 0x55a1128cb628
|         `-CXXThisExpr 0x55a1128cc9e8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55a1128c8a80 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55a1128c8928 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55a1128c89a8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c8d68 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55a1128c8b48 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55a1128c8bc8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55a1128c8c40 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a1128c8f00 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55a1128c8e38 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c9148 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55a1128c8fc0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55a1128c9038 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55a1128cccb0 <col:58, line:357:5>
|   `-ReturnStmt 0x55a1128ccca0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55a1128ccc88 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55a1128ccc58 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55a1128ccc40 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55a1128ccc20 <col:9, col:29> 'String' (CXXTemporary 0x55a1128ccc20)
|             `-CallExpr 0x55a1128ccbb0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55a1128ccb98 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55a1128ccb18 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55a1128c8d68 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55a1128ccab8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55a1128ccbe8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55a1128ccad8 <col:21> 'const char *' lvalue ParmVar 0x55a1128c8fc0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55a1128ccc00 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55a1128ccaf8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55a1128c9038 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a1128c9320 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55a1128c9210 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55a1128c9288 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a1128c9478 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55a1128c93e8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55a1128c95c0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55a1128c9530 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55a1128c9860 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55a1128c9678 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55a1128c96f8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55a1128c9770 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55a1128c99c0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55a1128c9930 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55a1128ec6e0 <col:37, line:441:5>
|   `-IfStmt 0x55a1128ec6c8 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55a1128ec650 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55a1128ccd08 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55a1128cccc8 <col:6> 'int' lvalue ParmVar 0x55a1128c9930 'level' 'int'
|     | `-ImplicitCastExpr 0x55a1128ccd20 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55a1128ccce8 <col:15> 'ErrorHandler::Level' EnumConstant 0x55a1128c59b0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55a1128ec6b0 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55a1128ec680 <col:8> 'int' lvalue ->_nerrors 0x55a1128cb628
|         `-CXXThisExpr 0x55a1128ec670 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55a1128c9a88 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55a1128ec778 <col:26, line:448:5>
|   `-BinaryOperator 0x55a1128ec758 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55a1128ec708 <col:2> 'int' lvalue ->_nerrors 0x55a1128cb628
|     | `-CXXThisExpr 0x55a1128ec6f8 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55a1128ec738 <col:13> 'int' 0
|-CXXMethodDecl 0x55a1128c9c50 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55a1128c9b40 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55a1128c9bb8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55a1128c9e58 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55a1128c9d10 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55a1128c9d88 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55a1128ca108 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55a1128c9f18 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55a1128c9f98 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55a1128ca018 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55a1128ca1c0 <col:59> 0 0
|-CXXMethodDecl 0x55a1128ca358 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55a1128ca238 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55a1128ca2b8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55a1128ecdf0 <col:70, line:534:5>
|   |-DeclStmt 0x55a1128ec8e8 <line:528:2, col:20>
|   | |-VarDecl 0x55a1128ec7a0 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55a1128ec808 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55a1128ec840 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55a1128ec8a8 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55a1128ec9b8 <line:529:2, col:23>
|   | `-VarDecl 0x55a1128ec918 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55a1128ec9a0 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55a1128ec980 <col:18> 'const char *' lvalue ParmVar 0x55a1128ca238 'begin' 'const char *'
|   |-DoStmt 0x55a1128ecd88 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55a1128eccb8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55a1128ecca0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55a1128ecc80 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55a1128ec9d0 <col:6> 'const char *' lvalue Var 0x55a1128ec918 'x' 'const char *'
|   | |     `-CallExpr 0x55a1128ecbd0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55a1128ecbb8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55a1128ecb68 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55a1128cbb00 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55a1128ecc38 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55a1128ecc20 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55a1128eca88 <col:20, col:27> 'String' (CXXTemporary 0x55a1128eca88)
|   | |       |     `-CXXTemporaryObjectExpr 0x55a1128eca50 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55a1128ecc50 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55a1128ecaa8 <col:30> 'const char *' lvalue Var 0x55a1128ec918 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55a1128ecc68 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55a1128ecac8 <col:33> 'const char *' lvalue ParmVar 0x55a1128ca2b8 'end' 'const char *'
|   | |       |-UnaryOperator 0x55a1128ecb08 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55a1128ecae8 <col:39> 'String' lvalue Var 0x55a1128ec7a0 'name' 'String'
|   | |       |-UnaryOperator 0x55a1128ecb40 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55a1128ecb20 <col:46> 'String' lvalue Var 0x55a1128ec840 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55a1128ecb58 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55a1128ecd70 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55a1128ecd58 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55a1128ecd38 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55a1128ecd08 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55a11261dd38
|   |         `-ImplicitCastExpr 0x55a1128eccf0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55a1128eccd0 <col:11> 'String' lvalue Var 0x55a1128ec7a0 'name' 'String'
|   `-ReturnStmt 0x55a1128ecde0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55a1128ecdc8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55a1128ecda8 <col:9> 'const char *' lvalue Var 0x55a1128ec918 'x' 'const char *'
|-CXXMethodDecl 0x55a1128ca4a8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55a1128ca418 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55a1128ed3f8 <col:55, line:550:5>
|   `-IfStmt 0x55a1128ed3d0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55a1128ed030 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55a1128ed018 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55a1128ed000 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55a1128ecfe0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55a1128ecfb0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55a11261dd38
|     | |       `-DeclRefExpr 0x55a1128ece50 <col:6> 'const String' lvalue ParmVar 0x55a1128ca418 'x' 'const String &'
|     | `-BinaryOperator 0x55a1128ecf90 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55a1128ecf60 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55a1128ecf10 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55a1128ecef8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55a1128eceb0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55a112637570 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55a1128ece70 <col:11> 'const String' lvalue ParmVar 0x55a1128ca418 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55a1128ece90 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55a1128ecf78 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55a1128ecf48 <col:19> 'char' 123
|     |-ReturnStmt 0x55a1128ed0a0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55a1128ed070 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55a1128ed050 <col:13> 'const String' lvalue ParmVar 0x55a1128ca418 'x' 'const String &'
|     `-IfStmt 0x55a1128ed3a8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55a1128ed138 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55a1128ed120 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55a1128ed100 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55a1128ed0d0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55a11261dd38
|       |       `-DeclRefExpr 0x55a1128ed0b0 <col:11> 'const String' lvalue ParmVar 0x55a1128ca418 'x' 'const String &'
|       |-ReturnStmt 0x55a1128ed2c0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55a1128ed2a8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55a1128ed278 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55a1128ed260 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55a1128ed240 <col:13, col:29> 'String' (CXXTemporary 0x55a1128ed240)
|       |         `-CallExpr 0x55a1128ed1f0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55a1128ed1d8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55a1128ed150 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55a1128c9c50 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55a1128ed220 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55a1128ed170 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55a1128ed190 <col:28> 'const String' lvalue ParmVar 0x55a1128ca418 'x' 'const String &'
|       `-ReturnStmt 0x55a1128ed398 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55a1128ed380 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55a1128ed350 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55a1128ed338 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55a1128ed318 <col:13, col:20> 'String' (CXXTemporary 0x55a1128ed318)
|                 `-CXXTemporaryObjectExpr 0x55a1128ed2e0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55a1128ca670 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55a1128ca560 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55a1128ca5d8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a1128cbda8 <col:71> 'bool' false
|-CXXRecordDecl 0x55a1128ca720 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55a1128caa18 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55a1128ca9b0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55a1128ca950 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55a1128ca910 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55a11261a5d0 'String'
|       | `-CXXRecord 0x55a11261a540 'String'
|       |-BuiltinType 0x55a1122ed3b0 'int'
|       `-DecayedType 0x55a1128c7fe0 '__va_list_tag *' sugar
|         |-TypedefType 0x55a1128c7fb0 'va_list' sugar
|         | |-Typedef 0x55a11250b460 'va_list'
|         | `-TypedefType 0x55a11250b410 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55a112443038 '__gnuc_va_list'
|         |   `-TypedefType 0x55a112442fa0 '__builtin_va_list' sugar
|         |     |-Typedef 0x55a11232ec18 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55a11232ebc0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55a1122ee100 '__va_list_tag'
|         |         `-CXXRecord 0x55a1122ee068 '__va_list_tag'
|         `-PointerType 0x55a112510d00 '__va_list_tag *'
|           `-RecordType 0x55a1122ee100 '__va_list_tag'
|             `-CXXRecord 0x55a1122ee068 '__va_list_tag'
|-EnumDecl 0x55a1128caa70 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55a1128cab70 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a1128cb0d0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128cab50 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55a1128cab30 <col:16> 'int' 1
| |-EnumConstantDecl 0x55a1128cac00 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a1128cb0e8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128cabe0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55a1128cabc0 <col:21> 'int' 2
| |-EnumConstantDecl 0x55a1128cac90 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a1128cb100 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128cac70 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55a1128cac50 <col:22> 'int' 4
| |-EnumConstantDecl 0x55a1128cad20 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a1128cb118 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128cad00 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55a1128cace0 <col:17> 'int' 8
| |-EnumConstantDecl 0x55a1128cadb0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a1128cb130 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128cad90 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55a1128cad70 <col:22> 'int' 16
| |-EnumConstantDecl 0x55a1128cae40 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a1128cb148 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128cae20 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55a1128cae00 <col:19> 'int' 32
| |-EnumConstantDecl 0x55a1128caed0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a1128cb160 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128caeb0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55a1128cae90 <col:17> 'int' 64
| |-EnumConstantDecl 0x55a1128caf60 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a1128cb178 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128caf40 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55a1128caf20 <col:14> 'int' 128
| |-EnumConstantDecl 0x55a1128caff0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a1128cb190 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128cafd0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55a1128cafb0 <col:16> 'int' 256
| `-EnumConstantDecl 0x55a1128cb080 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55a1128cb1a8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a1128cb060 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55a1128cb040 <col:12> 'int' 1024
|-CXXMethodDecl 0x55a1128cb3b8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55a1128cb1d0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55a1128cb270 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55a1128cb540 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55a1128cb478 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55a1128cb5e8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55a1128cb628 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55a1128cb688 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55a1128cb700 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55a1128cbb00 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55a1128cb778 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55a1128cb7f8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55a1128cb878 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55a1128cb8f0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55a1128cb968 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55a1128cb9e0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55a1128cbc28 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55a1128cbc28
| `-ParmVarDecl 0x55a1128cbd38 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55a1128ed758 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55a1128ed758
  `-ParmVarDecl 0x55a1128ed868 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a1129096f0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55a1129098c8 prev 0x55a1129096f0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a112909958 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a112909980 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a1122ed3b0 'int'
|-TypedefDecl 0x55a11290b550 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55a11290b500 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55a112909e30 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55a112909d30 'type'
|     `-TemplateSpecializationType 0x55a112909cc0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55a112909ba0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55a112909b80 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55a112909b60 <col:24> 'unsigned long' 4
|       `-RecordType 0x55a112909ca0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55a112909bc0 'char_array'
|-TypedefDecl 0x55a11290b608 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55a11290b5d0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55a11290b5b0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55a11290b550 'type'
|     `-ElaboratedType 0x55a11290b500 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55a112909e30 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55a112909d30 'type'
|         `-TemplateSpecializationType 0x55a112909cc0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55a112909ba0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55a112909b80 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55a112909b60 <col:24> 'unsigned long' 4
|           `-RecordType 0x55a112909ca0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55a112909bc0 'char_array'
|-CXXMethodDecl 0x55a11290b788 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55a11290b698 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55a11290b878 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a11290b958 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55a11290bc28 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55a11290bb30 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55a11290be68 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55a11290bce0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a11290bd58 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a11290c038 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55a11290bf28 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a11290bfa0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a11290c198 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55a11290c268 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55a11290c4b8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55a11290c328 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55a11290c3a0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a11290c718 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55a11290c588 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55a11290c600 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a11290c8d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55a11290c7e8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a11290ca98 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55a11290c9a0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a11290cb50 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a11290cc00 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a11290ce38 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55a11290ccb0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a11290cd28 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a1129134e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55a11290cfe0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55a1129135b0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55a112913600 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a112913650 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a11294d0a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55a11294d3e0 prev 0x55a11294d0a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a11294e3f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55a11294e3a0 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55a11294e380 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55a11294e230 'type'
|     `-SubstTemplateTypeParmType 0x55a1129092c0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55a1125b31f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a1125b3198 'T'
|       `-RecordType 0x55a112908e10 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55a112908d28 'sized_array_memory'
|-FieldDecl 0x55a11294e4f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55a11294e540 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a11294e578 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55a11294d470 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|   `-BuiltinType 0x55a1122ed450 'unsigned int'
|-TypedefDecl 0x55a11294e608 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55a11294e5d0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55a11294d470 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|     `-BuiltinType 0x55a1122ed450 'unsigned int'
|-TypedefDecl 0x55a11294e6c8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55a11294e690 'const unsigned int &'
|   `-QualType 0x55a11294d471 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55a11294d470 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|       `-BuiltinType 0x55a1122ed450 'unsigned int'
|-TypedefDecl 0x55a11294e758 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55a11294e720 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55a11294d470 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|     `-BuiltinType 0x55a1122ed450 'unsigned int'
|-TypedefDecl 0x55a11294e7e8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55a11294e7b0 'const unsigned int *'
|   `-QualType 0x55a11294d471 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55a11294d470 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|       `-BuiltinType 0x55a1122ed450 'unsigned int'
|-TypedefDecl 0x55a11294f3d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55a11294f380 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55a11294f360 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55a11294f2f0 'type'
|     `-SubstTemplateTypeParmType 0x55a11294f0b0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a1125bdff0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a1125bdfa0 'T'
|       `-BuiltinType 0x55a1122ed450 'unsigned int'
|-TypedefDecl 0x55a11294f438 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55a11294e690 'const unsigned int &'
|   `-QualType 0x55a11294d471 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55a11294d470 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|       `-BuiltinType 0x55a1122ed450 'unsigned int'
|-TypedefDecl 0x55a11294f490 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a1122ed3b0 'int'
|-TypedefDecl 0x55a11294f4f8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55a11294e720 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55a11294d470 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|     `-BuiltinType 0x55a1122ed450 'unsigned int'
|-TypedefDecl 0x55a11294f560 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55a11294e7b0 'const unsigned int *'
|   `-QualType 0x55a11294d471 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55a11294d470 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a1125eb100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a1125eb0a8 'T'
|       `-BuiltinType 0x55a1122ed450 'unsigned int'
|-EnumDecl 0x55a11294f5b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55a11294f6b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a11294f690 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a1125ec788 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a1125ec760 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a1125ec740 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a11294f738 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a11294f988 <line:138:5, col:62> col:21 used Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a11294f7f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a11294f890 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55a11294fc48 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55a11294fb30 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55a11294ff08 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55a11294fdf0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55a112950250 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55a112950130 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55a112950560 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55a112950440 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55a112950850 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a112950698 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a112950710 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55a112950978 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55a112950a58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a112950ab0 <col:30> Inherited
|-CXXMethodDecl 0x55a112950af8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55a11295a030 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a11295a088 <col:30> Inherited
|-CXXMethodDecl 0x55a11295a118 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55a11295a1c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a11295a220 <col:30> Inherited
|-CXXMethodDecl 0x55a11295a268 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55a11295a318 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a11295a370 <col:30> Inherited
|-CXXMethodDecl 0x55a11295a3b8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55a11295a468 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a11295a4c0 <col:30> Inherited
|-CXXMethodDecl 0x55a11295a508 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55a11295a5b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a11295a610 <col:30> Inherited
|-CXXMethodDecl 0x55a11295a638 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a11295a6e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a11295a798 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a11295a958 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a11295a848 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a11295a8c0 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55a11295aaa8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a11295aa18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a11295ac58 <line:163:5, col:65> col:43 used operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55a11295ab60 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a11295ad10 <col:20>
| `-OptimizeNoneAttr 0x55a11295ad68 <col:30>
|-CXXMethodDecl 0x55a11295ae88 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55a11295ad90 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a11295af40 <col:20>
| `-OptimizeNoneAttr 0x55a11295af98 <col:30>
|-CXXMethodDecl 0x55a11295b050 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a11295afc0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a11295b198 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a11295b108 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a11295b2c8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55a11295b3f8 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55a11295b4c8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55a11295b598 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55a11295b6d8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a11295b648 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a11295b820 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a11295b790 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a11295b968 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a11295b8d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a11295ba20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a11295bb20 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a11295ba90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a11295bbd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a11295bc98 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55a11295bd98 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55a11295bf18 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55a11295be58 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55a11295c6d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a11295bfd0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55a11295c638 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55a11295c538 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55a11295c7b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a11295c908 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55a11295c878 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55a11295c9c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a11295cc08 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a11295ca80 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55a11295caf8 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55a11295cdc8 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55a11295ccd8 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55a11295d018 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55a11295ce90 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55a11295cf08 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55a11295d0d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a11295d338 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55a11295d240 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55a11295d408 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55a11295d540 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a1129357b0 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a1129358c8 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55a112935958 <col:16, col:22> col:16 public
|-EnumDecl 0x55a112935980 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55a112935a80 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55a112935cd0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112935a60 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55a112935a40 <col:21> 'int' 0
| |-EnumConstantDecl 0x55a112935b10 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55a112935ce8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112935af0 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55a112935ad0 <col:24> 'int' 22
| |-EnumConstantDecl 0x55a112935ba0 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55a112935d00 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112935b80 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55a112935b60 <col:24> 'int' 34
| |-EnumConstantDecl 0x55a112935c30 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55a112935d18 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112935c10 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55a112935bf0 <col:25> 'int' 95
| `-EnumConstantDecl 0x55a112935c80 <line:1025:9> col:9 referenced status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55a112937690 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a112937ac8 <col:7>
|-CXXConstructorDecl 0x55a112937798 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55a112937798
| `-ParmVarDecl 0x55a1129378a8 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55a112937948 <col:7> col:7 implicit constexpr NumArg 'void (NumArg &&)' inline default trivial noexcept-unevaluated 0x55a112937948
| `-ParmVarDecl 0x55a112937a58 <col:7> col:7 'NumArg &&'
`-CXXDestructorDecl 0x55a112939c08 <col:7> col:7 implicit ~NumArg 'void ()' inline default trivial noexcept-unevaluated 0x55a112939c08

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a1129449b0 <../dummy_inc/click/args.hh:1284:1, line:1288:1> line:1284:7 referenced class BandwidthArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'NumArg'
|-CXXRecordDecl 0x55a112944b08 <col:1, col:7> col:7 implicit class BandwidthArg
|-AccessSpecDecl 0x55a112944b98 <col:38, col:44> col:38 public
|-CXXMethodDecl 0x55a112944d90 <line:1285:5, col:84> col:10 used parse 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55a112944bd0 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55a112944c48 <col:35, col:45> col:45 result 'uint32_t &'
| `-ParmVarDecl 0x55a112944cc0 <col:53, col:74> col:72 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55a112945010 <col:74> 'const ArgContext' lvalue Var 0x55a11292b678 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55a112944ee8 <line:1286:5, col:37> col:19 unparse 'String (uint32_t)' static
| `-ParmVarDecl 0x55a112944e58 <col:27, col:36> col:36 x 'uint32_t':'unsigned int'
|-FieldDecl 0x55a112944fa8 <line:1287:5, col:9> col:9 referenced status 'int'
|-CXXConstructorDecl 0x55a11295d5f8 <line:1284:7> col:7 implicit used BandwidthArg 'void () noexcept' inline default trivial
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55a11295da28 <col:7> 'NumArg' 'void () noexcept'
| `-CompoundStmt 0x55a11295da90 <col:7>
|-CXXConstructorDecl 0x55a11295d6f8 <col:7> col:7 implicit constexpr BandwidthArg 'void (const BandwidthArg &)' inline default trivial noexcept-unevaluated 0x55a11295d6f8
| `-ParmVarDecl 0x55a11295d808 <col:7> col:7 'const BandwidthArg &'
`-CXXConstructorDecl 0x55a11295d8a8 <col:7> col:7 implicit constexpr BandwidthArg 'void (BandwidthArg &&)' inline default trivial noexcept-unevaluated 0x55a11295d8a8
  `-ParmVarDecl 0x55a11295d9b8 <col:7> col:7 'BandwidthArg &&'

Layout: <CGRecordLayout
  LLVMType:%class.BandwidthArg = type { i32 }
  NonVirtualBaseLLVMType:%class.BandwidthArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a1128d4ec8 prev 0x55a112814818 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55a1128d4fc0 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55a1128d5050 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55a1128d5158 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55a1128d5088 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55a1128d6530 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55a1128d6510 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55a1128d60a8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55a1128d65c0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55a1128d6580 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55a1128d5088 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55a1128d6110 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55a1128d6640 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55a1128d6600 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55a1128d6170 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55a1128d6680 <col:54> 'bool' false
| `-CompoundStmt 0x55a1128d6788 <col:61, line:38:5>
|   `-BinaryOperator 0x55a1128d6768 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55a1128d6700 <col:9> 'const Element *' lvalue ->_context 0x55a1128d6048
|     | `-CXXThisExpr 0x55a1128d66f0 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55a1128d6750 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55a1128d6730 <col:20> 'int' 0
|-CXXConstructorDecl 0x55a1128d5368 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55a1128d5218 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55a1128d5290 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55a1128d6568 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55a1128d6548 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55a1128d6048 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55a1128d67e0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55a1128d67a0 <col:20> 'const Element *' lvalue ParmVar 0x55a1128d5218 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55a1128d60a8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55a1128d6860 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55a1128d6820 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55a1128d5290 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55a1128d6110 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55a1128d68e0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55a1128d68a0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55a1128d6170 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55a1128d6920 <col:73> 'bool' false
| `-CompoundStmt 0x55a1128d6998 <col:80, line:46:5>
|-CXXMethodDecl 0x55a1128d5498 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55a1128d6a10 <col:36, line:51:5>
|   `-ReturnStmt 0x55a1128d6a00 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55a1128d69e8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55a1128d69b8 <col:16> 'const Element *const' lvalue ->_context 0x55a1128d6048
|         `-CXXThisExpr 0x55a1128d69a8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55a1128d5588 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55a1128d6a90 <col:32, line:57:5>
|   `-ReturnStmt 0x55a1128d6a80 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55a1128d6a68 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55a1128d6a38 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55a1128d60a8
|         `-CXXThisExpr 0x55a1128d6a28 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55a1128d5648 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55a1128d57d0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55a1128d5700 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55a1128d5920 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55a1128d5890 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55a1128d5a70 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55a1128d59e0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55a1128d5c78 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55a1128d5b28 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55a1128d5ba0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55a1128d5f58 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55a1128d5d38 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55a1128d5db8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55a1128d5e30 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55a1128d6010 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55a1128d6048 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55a1128d60a8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55a1128d6110 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55a1128d6170 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55a1128d61c0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55a1128d61c0
| `-ParmVarDecl 0x55a1128d62d8 <col:7> col:7 'const ArgContext &'
`-CXXMethodDecl 0x55a1128d6378 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55a1128d6378
  `-ParmVarDecl 0x55a1128d6488 <col:7> col:7 'const ArgContext &'

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a11260dbe0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a11260dcf8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55a11260dd88 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55a11260de58 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55a11260df40 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55a11260e158 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a11260e000 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a11260e308 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55a11260e210 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55a11260e450 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55a11260e3c0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55a11260e598 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a11260e508 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a11260e6e0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a11260e650 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a11260e7a8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55a11260e8f0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55a11260e860 <col:28> col:31 'int'
|-CXXMethodDecl 0x55a11260e9b8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55a11260eb00 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55a11260ea70 <col:28> col:31 'int'
|-CXXMethodDecl 0x55a11260ec78 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55a11260ebb8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a11260edc0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55a11260ed30 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a11260ee88 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55a11260f048 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a11260ef38 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a11260efb0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a11260f298 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a11260f108 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a11260f180 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a11260f348 <col:86> "" ""
|-CXXMethodDecl 0x55a11260f5b8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55a11260f428 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55a11260f4a0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a11260f768 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55a11260f678 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55a11260f918 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55a11260f820 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55a11260fbe8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55a11260f9d0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55a11260fa48 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a11260fac0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a11260fec8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55a11260fcb0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55a11260fd28 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a11260fda0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a11260ff80 <col:115> "" ""
|-AccessSpecDecl 0x55a11260fff0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55a112610028 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a112611540 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55a112611540
| `-ParmVarDecl 0x55a112611648 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55a1126116e8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55a1126116e8
| `-ParmVarDecl 0x55a1126117f8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55a112646e28 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a112838c20 <col:7>
|-CXXConstructorDecl 0x55a112646f00 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55a112646f00
| `-ParmVarDecl 0x55a112647018 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55a112647088 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55a112647088
| `-ParmVarDecl 0x55a112647198 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55a11283b620 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a1128277c8 prev 0x55a11281c9d0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a1128278c0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55a1128279b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55a112827ad8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55a112827c58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55a112827dd8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55a112827f58 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55a112838d88 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a1128395f8 <col:11>
|-CXXDestructorDecl 0x55a112838e60 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55a112838f98 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55a112838f98
| `-ParmVarDecl 0x55a1128390a8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55a112839148 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a112839148
| `-ParmVarDecl 0x55a112839258 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55a11283c018 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a11283c128 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55a11283c3a8 <col:11>
|   `-ReturnStmt 0x55a11283c398 <col:11>
|     `-UnaryOperator 0x55a11283c380 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a11283c370 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55a11283c198 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a11283c198
  `-ParmVarDecl 0x55a11283c2a8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a112827fc0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a1128280d8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55a112828178 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55a1128281e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55a112828248 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55a1128282b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55a112828310 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55a1128283d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55a112828430 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55a112828490 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55a112838c98 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55a112828178 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55a112839608 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55a112839660 <col:12>
|-CXXConstructorDecl 0x55a1128392c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55a1128392c8
| `-ParmVarDecl 0x55a1128393d8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55a112839478 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55a112839478
| `-ParmVarDecl 0x55a112839588 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55a11283b700 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a1128160e0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a1128161f8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55a112816288 <col:16, col:22> col:16 public
|-EnumDecl 0x55a1128162b0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55a1128163b0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55a112816490 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112816390 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55a112816370 <col:21> 'int' 28
| `-EnumConstantDecl 0x55a112816440 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55a1128164a8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a112816420 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55a112816400 <col:22> 'int' 64
|-CXXMethodDecl 0x55a1128167e8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55a1128164d0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a112816550 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55a1128165c8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a112816640 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a1128168a8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55a112816aa8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55a112816920 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55a112816998 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a112816b58 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55a112816cb8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55a112816bc8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a112816d60 <col:72> warn_unused_result ""
|-TypedefDecl 0x55a1128170c0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55a112817050 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55a112816ff0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55a112816fb0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55a1122ed310 'void'
|       |-PointerType 0x55a112596260 'unsigned char *'
|       | `-BuiltinType 0x55a1122ed410 'unsigned char'
|       |-TypedefType 0x55a112392830 'size_t' sugar
|       | |-Typedef 0x55a11235daf0 'size_t'
|       | `-BuiltinType 0x55a1122ed470 'unsigned long'
|       `-PointerType 0x55a1122edb10 'void *'
|         `-BuiltinType 0x55a1122ed310 'void'
|-CXXMethodDecl 0x55a112817538 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55a112817130 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55a1128171a8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a112817240 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55a1128172c0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55a112831c30 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55a112831c18 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55a112831be0 <col:58> 'int' 0
| |-ParmVarDecl 0x55a112817340 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55a112831c58 <col:76> 'int' 0
| |-ParmVarDecl 0x55a1128173c0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55a112831c78 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55a112817608 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55a112817688 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55a112817748 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55a1128177e8 <col:20>
| `-OptimizeNoneAttr 0x55a112817840 <col:30>
|-CXXMethodDecl 0x55a1128178b8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55a112817958 <col:20>
| `-OptimizeNoneAttr 0x55a1128179b0 <col:30>
|-CXXMethodDecl 0x55a112817a28 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55a112817ac8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55a112817b78 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55a112817c18 <col:20>
| |-OptimizeNoneAttr 0x55a112817c70 <col:30>
| `-WarnUnusedResultAttr 0x55a112817c98 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55a112817cf0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55a112817d90 <col:20>
| `-OptimizeNoneAttr 0x55a112817de8 <col:30>
|-CXXMethodDecl 0x55a112817e38 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55a112817ed8 <col:20>
| `-OptimizeNoneAttr 0x55a112817f30 <col:30>
|-CXXMethodDecl 0x55a112817f78 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x55a112818018 <col:20>
| `-OptimizeNoneAttr 0x55a112818070 <col:30>
|-CXXMethodDecl 0x55a1128180b8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55a112818178 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55a112818240 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a112818308 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a1128183c8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a1128184e8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55a112831d40 <col:54, line:99:5>
|   `-ReturnStmt 0x55a112831d30 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55a112831d18 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55a112831ce8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a1128287c8
|         `-CXXThisExpr 0x55a112831cd8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55a112818688 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55a112818598 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55a112831df0 <col:67, line:103:5>
|   `-BinaryOperator 0x55a112831dd0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55a112831d68 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a1128287c8
|     | `-CXXThisExpr 0x55a112831d58 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55a112831db8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55a112831d98 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55a112818598 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55a112818780 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55a112831e70 <col:33, line:107:5>
|   `-ReturnStmt 0x55a112831e60 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55a112831e48 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55a112831e18 <col:16> 'void *' lvalue ->_destructor_argument 0x55a112828830
|         `-CXXThisExpr 0x55a112831e08 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55a112818840 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55a1128324a0 <col:25, line:113:5>
|   |-ParenExpr 0x55a1128321e8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55a1128321b8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55a112831f28 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55a112831f00 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55a112831ec8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55a112831e98 <col:24> '<bound member function type>' ->shared 0x55a1128178b8
|   |   |       `-ImplicitCastExpr 0x55a112831ee8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55a112831e88 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55a112831f88 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a112831f68 <col:42> 'int' 0
|   |   `-CallExpr 0x55a112832118 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55a112832100 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a1128320e0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a112832158 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112831ff8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55a112832170 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112832020 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a112832188 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a112832058 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55a1128321a0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a1128320c8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a1128320b0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a112832078 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55a1128323e8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55a112832218 <col:2> 'unsigned char *' lvalue ->_head 0x55a1128285d0
|   | | `-CXXThisExpr 0x55a112832208 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55a1128323d0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55a1128323b0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55a112832258 <col:10> 'unsigned char *' lvalue ->_data 0x55a112828638
|   |     | `-CXXThisExpr 0x55a112832248 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55a112832398 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55a112832378 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55a112832298 <col:18> 'unsigned char *' lvalue ->_tail 0x55a1128286a0
|   |         | `-CXXThisExpr 0x55a112832288 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55a112832360 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55a112832340 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55a1128322d8 <col:26> 'unsigned char *' lvalue ->_end 0x55a112828708
|   |             | `-CXXThisExpr 0x55a1128322c8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55a112832328 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55a112832308 <col:33> 'int' 0
|   `-BinaryOperator 0x55a112832480 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55a112832418 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a1128287c8
|     | `-CXXThisExpr 0x55a112832408 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55a112832468 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55a112832448 <col:16> 'int' 0
|-CXXMethodDecl 0x55a112818980 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a1128188f0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a112818a28 <col:20>
| |-OptimizeNoneAttr 0x55a112818a80 <col:30>
| `-WarnUnusedResultAttr 0x55a112818aa8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55a112818b78 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a112818ae8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a112818c20 <col:20>
| |-OptimizeNoneAttr 0x55a112818c78 <col:30>
| `-WarnUnusedResultAttr 0x55a112818ca0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55a112818dd8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55a112818ce0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a112818e80 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55a112818f80 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55a112818ef0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a112819028 <col:20>
| `-OptimizeNoneAttr 0x55a112819080 <col:30>
|-CXXMethodDecl 0x55a112819148 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a1128190b8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a1128191f0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55a1128192f0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55a112819260 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a112819398 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55a112819498 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55a112819408 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a112819540 <col:20>
| `-OptimizeNoneAttr 0x55a112819598 <col:30>
|-CXXMethodDecl 0x55a112819728 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55a1128195d8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55a112819650 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55a112831c98 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55a1128197d8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55a1128199d8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a112819850 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55a1128198c8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a112819be8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a112819a98 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a112819b10 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a112819df8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55a112819ca8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55a112819d28 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55a112831ca8 <col:39> 'int' 0
|-CXXMethodDecl 0x55a112819ec8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55a112819f90 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a11281a058 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a11281a118 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a11281a1e0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55a11281a328 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55a11281a298 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55a11281a4f8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a11281a3e8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55a11281a460 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a11281a5c8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55a11281a688 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55a11281a728 <col:20>
| `-OptimizeNoneAttr 0x55a11281a780 <col:30>
|-CXXMethodDecl 0x55a11281a7d0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55a11281a870 <col:20>
| `-OptimizeNoneAttr 0x55a11281a8c8 <col:30>
|-CXXMethodDecl 0x55a11281a918 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a11281a9d8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a11281aaa0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55a11281ab40 <col:20>
| `-OptimizeNoneAttr 0x55a11281ab98 <col:30>
|-CXXMethodDecl 0x55a11281ace8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a11281abd8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55a11281ac50 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a11281ae38 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55a11281ada8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a11281af10 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55a11281afd0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55a11281b070 <col:20>
| `-OptimizeNoneAttr 0x55a11281b0c8 <col:30>
|-CXXMethodDecl 0x55a11281b118 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55a11281b1b8 <col:20>
| `-OptimizeNoneAttr 0x55a11281b210 <col:30>
|-CXXMethodDecl 0x55a11281b260 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a11281b328 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55a11281b3c8 <col:20>
| `-OptimizeNoneAttr 0x55a11281b420 <col:30>
|-CXXMethodDecl 0x55a11281b468 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55a11281b588 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55a11281b6f8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55a11281b638 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55a11281b7e8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55a11281b888 <col:20>
| `-OptimizeNoneAttr 0x55a11281b8e0 <col:30>
|-CXXMethodDecl 0x55a11281b930 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a11281b9f0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a11281bc28 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55a11281baa0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55a11281bb18 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a11281bcd8 <col:20>
| `-OptimizeNoneAttr 0x55a11281bd30 <col:30>
|-CXXMethodDecl 0x55a11281bdd8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55a11281be78 <col:20>
| `-OptimizeNoneAttr 0x55a11281bed0 <col:30>
|-CXXMethodDecl 0x55a11281bf20 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55a11281bfc0 <col:20>
| `-OptimizeNoneAttr 0x55a11281c018 <col:30>
|-CXXMethodDecl 0x55a11281c060 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55a11281c100 <col:20>
| `-OptimizeNoneAttr 0x55a11281c158 <col:30>
|-CXXMethodDecl 0x55a11281c258 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55a11281c190 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55a11281c300 <col:20>
| `-OptimizeNoneAttr 0x55a11281c358 <col:30>
|-CXXMethodDecl 0x55a11281c518 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55a11281c390 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55a11281c408 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a11281c5c8 <col:20>
| `-OptimizeNoneAttr 0x55a11281c620 <col:30>
|-CXXMethodDecl 0x55a11281c6c8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55a11281c7e8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55a11281c908 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55a11281c9a8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55a11281c9d0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55a11281caf8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55a11281cb98 <col:20>
| `-OptimizeNoneAttr 0x55a11281cbf0 <col:30>
|-CXXMethodDecl 0x55a11281cc98 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55a11281cd38 <col:20>
| `-OptimizeNoneAttr 0x55a11281cd90 <col:30>
|-AccessSpecDecl 0x55a11281cdb8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55a11281cde0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55a11281cee0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55a11281cf30 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a11281cec0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55a11281cea0 <col:14> 'int' 48
|-CXXMethodDecl 0x55a11281cf98 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55a11281d038 <col:20>
| `-OptimizeNoneAttr 0x55a11281d090 <col:30>
|-CXXMethodDecl 0x55a11281d108 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55a11281d1a8 <col:20>
| `-OptimizeNoneAttr 0x55a11281d200 <col:30>
|-CXXMethodDecl 0x55a11281d2c8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55a11281d238 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55a11281d468 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55a11281d608 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55a11281d518 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55a11281d6b0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55a11281d7b0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a11281db60 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a11281d790 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55a11281d770 <col:9> 'int' 0
| |-EnumConstantDecl 0x55a11281d840 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a11281db78 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a11281d820 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55a11281d800 <col:14> 'int' 1
| |-EnumConstantDecl 0x55a11281d8d0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a11281db90 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a11281d8b0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55a11281d890 <col:14> 'int' 2
| |-EnumConstantDecl 0x55a11281d960 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a11281dba8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a11281d940 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55a11281d920 <col:14> 'int' 3
| |-EnumConstantDecl 0x55a11281d9f0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a11281dbc0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a11281d9d0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55a11281d9b0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55a11281da80 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a11281dbd8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a11281da60 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55a11281da40 <col:13> 'int' 5
| `-EnumConstantDecl 0x55a11281db10 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55a11281dbf0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a11281daf0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55a11281dad0 <col:14> 'int' 6
|-CXXMethodDecl 0x55a11281dc58 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55a11281dcf8 <col:20>
| `-OptimizeNoneAttr 0x55a11281dd50 <col:30>
|-CXXMethodDecl 0x55a11281de48 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55a11281dd88 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55a11281def0 <col:20>
| `-OptimizeNoneAttr 0x55a11281df48 <col:30>
|-CXXMethodDecl 0x55a11281dfb8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55a11281e0e0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55a11281e258 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55a11281e190 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55a11281e320 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55a11281e3e8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55a11281e528 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55a11281e498 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55a11281e5d0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55a11281e6d0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a11281e8d0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a11281e6b0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55a11281e690 <col:23> 'int' 0
| |-EnumConstantDecl 0x55a11281e760 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a11281e8e8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a11281e740 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55a11281e720 <col:45> 'int' 4
| |-EnumConstantDecl 0x55a11281e7f0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a11281e900 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a11281e7d0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55a11281e7b0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55a11281e880 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55a11281e918 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a11281e860 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55a11281e840 <col:47> 'int' 16
|-CXXMethodDecl 0x55a11281e978 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55a11281eae8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55a11281ea28 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55a11281eb90 <col:20>
| `-OptimizeNoneAttr 0x55a11281ebe8 <col:30>
|-CXXMethodDecl 0x55a11281ec38 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55a1128325c0 <col:18, col:36>
|   `-ReturnStmt 0x55a1128325b0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55a112832598 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55a112832578 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55a112832548 <col:27> '<bound member function type>' ->xanno 0x55a11281cc98
|           `-CXXThisExpr 0x55a112832538 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55a11281ed30 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55a1128326d0 <col:30, col:48>
|   `-ReturnStmt 0x55a1128326c0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55a1128326a8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55a112832688 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55a112832658 <col:39> '<bound member function type>' ->xanno 0x55a11281caf8
|           `-CXXThisExpr 0x55a112832648 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55a11281ee18 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55a112832868 <col:24, col:50>
|   `-ReturnStmt 0x55a112832858 <col:26, col:47>
|     `-UnaryOperator 0x55a112832840 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a112832820 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a112832808 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a1128327b8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55a112827ad8
|         |   `-CXXMemberCallExpr 0x55a112832798 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55a112832768 <col:34> '<bound member function type>' ->xanno 0x55a11281cc98
|         |       `-CXXThisExpr 0x55a112832758 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55a1128327e8 <col:46> 'int' 0
|-CXXMethodDecl 0x55a11281ef20 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55a112832a38 <col:36, col:62>
|   `-ReturnStmt 0x55a112832a28 <col:38, col:59>
|     `-UnaryOperator 0x55a112832a10 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a1128329f0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a1128329d8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a112832950 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55a112827ad8
|         |   `-CXXMemberCallExpr 0x55a112832930 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a112832900 <col:46> '<bound member function type>' ->xanno 0x55a11281caf8
|         |       `-CXXThisExpr 0x55a1128328f0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55a112832980 <col:58> 'int' 0
|-CXXMethodDecl 0x55a11281f038 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55a112832bd0 <col:26, col:53>
|   `-ReturnStmt 0x55a112832bc0 <col:28, col:50>
|     `-UnaryOperator 0x55a112832ba8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a112832b88 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55a112832b70 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a112832b20 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55a112827dd8
|         |   `-CXXMemberCallExpr 0x55a112832b00 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55a112832ad0 <col:36> '<bound member function type>' ->xanno 0x55a11281cc98
|         |       `-CXXThisExpr 0x55a112832ac0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55a112832b50 <col:49> 'int' 0
|-CXXMethodDecl 0x55a11281f158 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55a112832da8 <col:38, col:65>
|   `-ReturnStmt 0x55a112832d98 <col:40, col:62>
|     `-UnaryOperator 0x55a112832d80 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a112832d60 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55a112832d48 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a112832cb8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55a112827dd8
|         |   `-CXXMemberCallExpr 0x55a112832c98 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a112832c68 <col:48> '<bound member function type>' ->xanno 0x55a11281caf8
|         |       `-CXXThisExpr 0x55a112832c58 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55a112832ce8 <col:61> 'int' 0
|-CXXMethodDecl 0x55a11281f308 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55a11281f210 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55a112833478 <col:34, line:463:5>
|   |-ParenExpr 0x55a1128332c0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55a112833290 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55a112832ef8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a112832ec8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a112832e18 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a112832e00 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a112832dc0 <col:23> 'int' lvalue ParmVar 0x55a11281f210 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a112832de0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a112832ea8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a112832e78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a112832e38 <col:33> 'int' lvalue ParmVar 0x55a11281f210 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55a112832e90 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55a112832e58 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55a112832f58 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a112832f38 <col:56> 'int' 0
|   |   `-CallExpr 0x55a1128331f0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55a1128331d8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a1128331b8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a112833230 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112833048 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55a112833248 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112833078 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a112833260 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a1128330b0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55a112833278 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a1128331a0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a112833188 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a112833148 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55a112833468 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55a112833450 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55a112833430 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a112833400 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a1128333b0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55a112827ad8
|         |   `-CXXMemberCallExpr 0x55a112833390 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a112833360 <col:9> '<bound member function type>' ->xanno 0x55a11281caf8
|         |       `-CXXThisExpr 0x55a112833350 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55a112833418 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55a1128333e0 <col:21> 'int' lvalue ParmVar 0x55a11281f210 'i' 'int'
|-CXXMethodDecl 0x55a11281f558 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55a11281f3c8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55a11281f440 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55a112833b08 <col:40, line:472:5>
|   |-ParenExpr 0x55a112833920 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55a1128338f0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55a1128335d0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a1128335a0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a1128334f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a1128334d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a112833498 <col:23> 'int' lvalue ParmVar 0x55a11281f3c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a1128334b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a112833580 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a112833550 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a112833510 <col:33> 'int' lvalue ParmVar 0x55a11281f3c8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55a112833568 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55a112833530 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55a112833630 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a112833610 <col:56> 'int' 0
|   |   `-CallExpr 0x55a112833850 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55a112833838 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a112833818 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a112833890 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a1128336a0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55a1128338a8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a1128336d0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a1128338c0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a112833708 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55a1128338d8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a112833800 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a1128337e8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a1128337a8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55a112833ae8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55a112833a90 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55a112833a60 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55a112833a10 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55a112827ad8
|     | |   `-CXXMemberCallExpr 0x55a1128339f0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55a1128339c0 <col:2> '<bound member function type>' ->xanno 0x55a11281cc98
|     | |       `-CXXThisExpr 0x55a1128339b0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55a112833a78 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a112833a40 <col:14> 'int' lvalue ParmVar 0x55a11281f3c8 'i' 'int'
|     `-ImplicitCastExpr 0x55a112833ad0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55a112833ab0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55a11281f440 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55a11281f718 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55a11281f620 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a112834288 <col:36, line:485:5>
|   |-ParenExpr 0x55a112833ff0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a112833fc0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a112833ca0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a112833c70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a112833b80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a112833b68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a112833b28 <col:23> 'int' lvalue ParmVar 0x55a11281f620 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a112833b48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a112833c50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a112833c38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a112833ba0 <col:33> 'int' lvalue ParmVar 0x55a11281f620 'i' 'int'
|   |   |     `-BinaryOperator 0x55a112833c18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a112833c00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a112833bc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a112833be0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a112833d00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a112833ce0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a112833f20 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a112833f08 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a112833ee8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a112833f60 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112833d70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a112833f78 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112833da8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a112833f90 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a112833de0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55a112833fa8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a112833ed0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a112833eb8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a112833e78 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55a112834278 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55a112834260 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55a112834248 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a112834218 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55a1128341b8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a112834188 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a112834100 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a1128279b0
|             |   `-CXXMemberCallExpr 0x55a1128340e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a1128340b0 <col:61> '<bound member function type>' ->xanno 0x55a11281caf8
|             |       `-CXXThisExpr 0x55a1128340a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a1128341a0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a112834130 <col:74> 'int' lvalue ParmVar 0x55a11281f620 'i' 'int'
|-CXXMethodDecl 0x55a11281f968 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55a11281f7d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a11281f850 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55a1128349d8 <col:42, line:500:5>
|   |-ParenExpr 0x55a112834770 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a112834740 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a112834420 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a1128343f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a112834300 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a1128342e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a1128342a8 <col:23> 'int' lvalue ParmVar 0x55a11281f7d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a1128342c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a1128343d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a1128343b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a112834320 <col:33> 'int' lvalue ParmVar 0x55a11281f7d8 'i' 'int'
|   |   |     `-BinaryOperator 0x55a112834398 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a112834380 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a112834340 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a112834360 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a112834480 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a112834460 <col:60> 'int' 0
|   |   `-CallExpr 0x55a1128346a0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a112834688 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a112834668 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a1128346e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a1128344f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a1128346f8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112834528 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a112834710 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a112834560 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55a112834728 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a112834650 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a112834638 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a1128345f8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55a1128349b8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55a112834968 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a112834938 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55a1128348e0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a1128348b0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a112834860 <col:48, col:57> 'char [48]' lvalue ->c 0x55a1128279b0
|     |     |   `-CXXMemberCallExpr 0x55a112834840 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a112834810 <col:48> '<bound member function type>' ->xanno 0x55a11281cc98
|     |     |       `-CXXThisExpr 0x55a112834800 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a1128348c8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a112834890 <col:61> 'int' lvalue ParmVar 0x55a11281f7d8 'i' 'int'
|     `-ImplicitCastExpr 0x55a1128349a0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55a112834980 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55a11281f850 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55a11281fb28 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55a11281fa30 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55a112835138 <col:35, line:513:5>
|   |-ParenExpr 0x55a112834e48 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a112834e18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a112834b70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a112834b40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a112834a50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a112834a38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a1128349f8 <col:23> 'int' lvalue ParmVar 0x55a11281fa30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a112834a18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a112834b20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a112834b08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a112834a70 <col:33> 'int' lvalue ParmVar 0x55a11281fa30 'i' 'int'
|   |   |     `-BinaryOperator 0x55a112834ae8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a112834ad0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a112834a90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a112834ab0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a112834bd0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a112834bb0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a112834d78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a112834d60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a112834d40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a112834db8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112834c40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a112834dd0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112834c78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a112834de8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a112834cb0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55a112834e00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a112834d28 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a112834d10 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a112834cd0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55a112835128 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55a112835110 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55a1128350f8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a1128350c8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55a112835040 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a112835010 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a112834fc0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55a1128279b0
|             |   `-CXXMemberCallExpr 0x55a112834fa0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a112834f70 <col:60> '<bound member function type>' ->xanno 0x55a11281caf8
|             |       `-CXXThisExpr 0x55a112834f60 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a112835028 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a112834ff0 <col:73> 'int' lvalue ParmVar 0x55a11281fa30 'i' 'int'
|-CXXMethodDecl 0x55a11281fd78 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55a11281fbe8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a11281fc60 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55a112835858 <col:41, line:528:5>
|   |-ParenExpr 0x55a1128355e0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a1128355b0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a1128352d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a1128352a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a1128351b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a112835198 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a112835158 <col:23> 'int' lvalue ParmVar 0x55a11281fbe8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a112835178 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a112835280 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a112835268 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a1128351d0 <col:33> 'int' lvalue ParmVar 0x55a11281fbe8 'i' 'int'
|   |   |     `-BinaryOperator 0x55a112835248 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a112835230 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a1128351f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a112835210 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a112835330 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a112835310 <col:60> 'int' 0
|   |   `-CallExpr 0x55a112835510 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a1128354f8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a1128354d8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a112835550 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a1128353a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a112835568 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a1128353d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a112835580 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a112835410 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55a112835598 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a1128354c0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a1128354a8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a112835468 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55a112835838 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55a1128357e8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a1128357b8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55a112835760 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a112835720 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a1128356d0 <col:47, col:56> 'char [48]' lvalue ->c 0x55a1128279b0
|     |     |   `-CXXMemberCallExpr 0x55a1128356b0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a112835680 <col:47> '<bound member function type>' ->xanno 0x55a11281cc98
|     |     |       `-CXXThisExpr 0x55a112835670 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a112835738 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a112835700 <col:60> 'int' lvalue ParmVar 0x55a11281fbe8 'i' 'int'
|     `-ImplicitCastExpr 0x55a112835820 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55a112835800 <col:65> 'int16_t':'short' lvalue ParmVar 0x55a11281fc60 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55a11281ff38 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55a11281fe40 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a112835f28 <col:36, line:541:5>
|   |-ParenExpr 0x55a112835cc8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a112835c98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a1128359f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a1128359c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a1128358d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a1128358b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a112835878 <col:23> 'int' lvalue ParmVar 0x55a11281fe40 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a112835898 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a1128359a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a112835988 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a1128358f0 <col:33> 'int' lvalue ParmVar 0x55a11281fe40 'i' 'int'
|   |   |     `-BinaryOperator 0x55a112835968 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a112835950 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a112835910 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a112835930 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a112835a50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a112835a30 <col:60> 'int' 0
|   |   `-CallExpr 0x55a112835bf8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a112835be0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a112835bc0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a112835c38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112835ac0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a112835c50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112835af8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a112835c68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a112835b30 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55a112835c80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a112835ba8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a112835b90 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a112835b50 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55a112835f18 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55a112835f00 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55a112835ee8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a112835eb8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55a112835e60 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a112835e30 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a112835de0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a1128279b0
|             |   `-CXXMemberCallExpr 0x55a112835dc0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a112835d90 <col:61> '<bound member function type>' ->xanno 0x55a11281caf8
|             |       `-CXXThisExpr 0x55a112835d80 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a112835e48 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a112835e10 <col:74> 'int' lvalue ParmVar 0x55a11281fe40 'i' 'int'
|-CXXMethodDecl 0x55a112820108 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55a11281fff8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55a112820070 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a1128201b8 <col:20>
| `-OptimizeNoneAttr 0x55a112820210 <col:30>
|-CXXMethodDecl 0x55a112820348 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55a112820250 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55a1128365f8 <col:35, line:562:5>
|   |-ParenExpr 0x55a112836398 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a112836368 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a1128360c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a112836090 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a112835fa0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a112835f88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a112835f48 <col:23> 'int' lvalue ParmVar 0x55a112820250 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a112835f68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a112836070 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a112836058 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a112835fc0 <col:33> 'int' lvalue ParmVar 0x55a112820250 'i' 'int'
|   |   |     `-BinaryOperator 0x55a112836038 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a112836020 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a112835fe0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a112836000 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a112836120 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a112836100 <col:60> 'int' 0
|   |   `-CallExpr 0x55a1128362c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a1128362b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a112836290 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a112836308 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112836190 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a112836320 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a1128361c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a112836338 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a112836200 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55a112836350 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a112836278 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a112836260 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a112836220 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55a1128365e8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55a1128365d0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55a1128365b8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a112836588 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55a112836530 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a112836500 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a1128364b0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55a1128279b0
|             |   `-CXXMemberCallExpr 0x55a112836490 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a112836460 <col:60> '<bound member function type>' ->xanno 0x55a11281caf8
|             |       `-CXXThisExpr 0x55a112836450 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a112836518 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a1128364e0 <col:73> 'int' lvalue ParmVar 0x55a112820250 'i' 'int'
|-CXXMethodDecl 0x55a112820558 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55a112820408 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a112820480 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55a112836cd8 <col:41, line:577:5>
|   |-ParenExpr 0x55a112836a68 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a112836a38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a112836790 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a112836760 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a112836670 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a112836658 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a112836618 <col:23> 'int' lvalue ParmVar 0x55a112820408 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a112836638 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a112836740 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a112836728 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a112836690 <col:33> 'int' lvalue ParmVar 0x55a112820408 'i' 'int'
|   |   |     `-BinaryOperator 0x55a112836708 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a1128366f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a1128366b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a1128366d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a1128367f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a1128367d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a112836998 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a112836980 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a112836960 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a1128369d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112836860 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a1128369f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112836898 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a112836a08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a1128368d0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55a112836a20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a112836948 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a112836930 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a1128368f0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55a112836cb8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55a112836c68 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a112836c38 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55a112836bd8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a112836ba8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a112836b58 <col:47, col:56> 'char [48]' lvalue ->c 0x55a1128279b0
|     |     |   `-CXXMemberCallExpr 0x55a112836b38 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a112836b08 <col:47> '<bound member function type>' ->xanno 0x55a11281cc98
|     |     |       `-CXXThisExpr 0x55a112836af8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a112836bc0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a112836b88 <col:60> 'int' lvalue ParmVar 0x55a112820408 'i' 'int'
|     `-ImplicitCastExpr 0x55a112836ca0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55a112836c80 <col:65> 'int32_t':'int' lvalue ParmVar 0x55a112820480 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55a112820718 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55a112820620 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a112837408 <col:36, line:591:5>
|   |-ParenExpr 0x55a112837148 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a112837118 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a112836e70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a112836e40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a112836d50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a112836d38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a112836cf8 <col:23> 'int' lvalue ParmVar 0x55a112820620 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a112836d18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a112836e20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a112836e08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a112836d70 <col:33> 'int' lvalue ParmVar 0x55a112820620 'i' 'int'
|   |   |     `-BinaryOperator 0x55a112836de8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a112836dd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a112836d90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a112836db0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55a112836ed0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a112836eb0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a112837078 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a112837060 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a112837040 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a1128370b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112836f40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55a1128370d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112836f78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a1128370e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a112836fb0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55a112837100 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a112837028 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a112837010 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a112836fd0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55a1128373f8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55a1128373e0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55a1128373c8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a112837398 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55a112837310 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a1128372e0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a112837290 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a1128279b0
|             |   `-CXXMemberCallExpr 0x55a112837270 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a112837240 <col:61> '<bound member function type>' ->xanno 0x55a11281caf8
|             |       `-CXXThisExpr 0x55a112837230 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a1128372f8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a1128372c0 <col:74> 'int' lvalue ParmVar 0x55a112820620 'i' 'int'
|-CXXMethodDecl 0x55a112820968 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55a1128207d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a112820850 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55a112837ae8 <col:42, line:606:5>
|   |-ParenExpr 0x55a112837878 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a112837848 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a1128375a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a112837570 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a112837480 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a112837468 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a112837428 <col:23> 'int' lvalue ParmVar 0x55a1128207d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a112837448 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a112837550 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a112837538 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a1128374a0 <col:33> 'int' lvalue ParmVar 0x55a1128207d8 'i' 'int'
|   |   |     `-BinaryOperator 0x55a112837518 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a112837500 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a1128374c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a1128374e0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55a112837600 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a1128375e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a1128377a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a112837790 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a112837770 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a1128377e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112837670 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55a112837800 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a1128376a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a112837818 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a1128376e0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55a112837830 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a112837758 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a112837740 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a112837700 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55a112837ac8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55a112837a78 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a112837a48 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55a1128379e8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a1128379b8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a112837968 <col:48, col:57> 'char [48]' lvalue ->c 0x55a1128279b0
|     |     |   `-CXXMemberCallExpr 0x55a112837948 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a112837918 <col:48> '<bound member function type>' ->xanno 0x55a11281cc98
|     |     |       `-CXXThisExpr 0x55a112837908 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a1128379d0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a112837998 <col:61> 'int' lvalue ParmVar 0x55a1128207d8 'i' 'int'
|     `-ImplicitCastExpr 0x55a112837ab0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55a112837a90 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55a112820850 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55a112820b00 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55a112820a30 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55a112838358 <col:33, line:620:5>
|   |-ParenExpr 0x55a1128380d0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55a1128380a0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55a112837cf0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a112837cc0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a112837b60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a112837b48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a112837b08 <col:23> 'int' lvalue ParmVar 0x55a112820a30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a112837b28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a112837ca0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55a112837c88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a112837b80 <col:33> 'int' lvalue ParmVar 0x55a112820a30 'i' 'int'
|   |   |     `-BinaryOperator 0x55a112837c68 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a112837c50 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a112837ba0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55a112837c28 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55a112837c10 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55a112837bd8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55a112837d50 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a112837d30 <col:79> 'int' 0
|   |   `-CallExpr 0x55a112838000 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55a112837fe8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a112837fc8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a112838040 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112837e38 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55a112838058 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112837e80 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a112838070 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a112837eb8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55a112838088 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a112837fb0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a112837f98 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a112837f58 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55a112838348 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55a112838330 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55a112838318 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a1128382e8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55a112838260 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a112838230 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a1128381e0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55a1128279b0
|             |   `-CXXMemberCallExpr 0x55a1128381c0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a112838190 <col:67> '<bound member function type>' ->xanno 0x55a11281caf8
|             |       `-CXXThisExpr 0x55a112838180 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a112838248 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a112838210 <col:80> 'int' lvalue ParmVar 0x55a112820a30 'i' 'int'
|-CXXMethodDecl 0x55a112820d18 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55a112820bc0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a112820c40 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55a112838b80 <col:45, line:635:5>
|   |-ParenExpr 0x55a1128388c8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55a112838898 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55a112838560 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a112838530 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a1128383d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a1128383b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a112838378 <col:23> 'int' lvalue ParmVar 0x55a112820bc0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a112838398 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a112838510 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55a1128384f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a1128383f0 <col:33> 'int' lvalue ParmVar 0x55a112820bc0 'i' 'int'
|   |   |     `-BinaryOperator 0x55a1128384d8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a1128384c0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a112838410 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a11281cee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55a112838498 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55a112838480 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55a112838448 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55a1128385c0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a1128385a0 <col:79> 'int' 0
|   |   `-CallExpr 0x55a1128387f8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55a1128387e0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a1128387c0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a1123895f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a112838838 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112838630 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55a112838850 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a112838678 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a112838868 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a1128386b0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55a112838880 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a1128387a8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a112838790 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a112838748 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55a112838b60 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55a112838ac8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a112838a98 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55a112838a38 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a112838a08 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a1128389b8 <col:54, col:63> 'char [48]' lvalue ->c 0x55a1128279b0
|     |     |   `-CXXMemberCallExpr 0x55a112838998 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a112838968 <col:54> '<bound member function type>' ->xanno 0x55a11281cc98
|     |     |       `-CXXThisExpr 0x55a112838958 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a112838a20 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a1128389e8 <col:67> 'int' lvalue ParmVar 0x55a112820bc0 'i' 'int'
|     `-CXXConstCastExpr 0x55a112838b30 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55a112838b18 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55a112838ae0 <col:91> 'const void *' lvalue ParmVar 0x55a112820c40 'x' 'const void *'
|-CXXMethodDecl 0x55a112820de8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55a112838c08 <col:34, line:640:5>
|   `-ReturnStmt 0x55a112838bf8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55a112838be0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55a112838bb0 <col:16> 'Packet *' lvalue ->_data_packet 0x55a112828568
|         `-CXXThisExpr 0x55a112838ba0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55a112820f28 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55a112820e98 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a112831cc8 <col:46> 'bool' true
|-CXXMethodDecl 0x55a1128210a8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55a112820fe0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55a112821150 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55a112821900 <line:660:22> "" ""
| |-EnumConstantDecl 0x55a112821250 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a112821970 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112821230 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55a112821210 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55a1128163b0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55a1128212e0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a112821988 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128212c0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55a1128212a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55a112816440 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55a112821370 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a1128219a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112821350 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55a112821330 <col:21> 'int' 0
| |-EnumConstantDecl 0x55a112821400 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a1128219b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128213e0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55a1128213c0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55a112821490 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a1128219d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112821470 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55a112821450 <col:21> 'int' 16
| |-EnumConstantDecl 0x55a112821520 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a1128219e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112821500 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55a1128214e0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55a1128215b0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a112821a00 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112821590 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55a112821570 <col:19> 'int' EnumConstant 0x55a112821400 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55a112821640 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a112821a18 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a112821620 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55a112821600 <col:19> 'int' EnumConstant 0x55a112821520 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55a112821710 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a112821a30 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128216f0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55a1128216d0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55a112821690 <col:23> 'int' EnumConstant 0x55a112821640 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55a1128216b0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55a1128217e0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a112821a48 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a1128217c0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55a1128217a0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55a112821760 <col:23> 'int' EnumConstant 0x55a112821640 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55a112821780 <col:40> 'int' 4
| `-EnumConstantDecl 0x55a1128218b0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55a112821a60 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a112821890 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55a112821870 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55a112821830 <col:23> 'int' EnumConstant 0x55a112821640 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55a112821850 <col:40> 'int' 8
|-CXXMethodDecl 0x55a112821aa0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55a112821b40 <col:68> "" ""
|-CXXMethodDecl 0x55a112821bd8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55a112821c78 <col:45> "" ""
|-CXXMethodDecl 0x55a112821d10 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55a112821db0 <col:57> "" ""
|-CXXMethodDecl 0x55a112821e48 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55a112821ee8 <col:45> "" ""
|-CXXMethodDecl 0x55a112821f80 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55a112822020 <col:57> "" ""
|-CXXMethodDecl 0x55a1128220b0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55a112822150 <col:51> "" ""
|-CXXMethodDecl 0x55a1128221e0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55a112822280 <col:63> "" ""
|-CXXMethodDecl 0x55a112822310 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55a1128223b0 <col:53> "" ""
|-CXXMethodDecl 0x55a112822440 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55a1128224e0 <col:65> "" ""
|-CXXMethodDecl 0x55a1128225f8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55a112822568 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55a1128226a0 <col:61> "" ""
|-CXXMethodDecl 0x55a112822838 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55a112822728 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55a1128227a0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55a1128228e8 <col:67> "" ""
|-CXXMethodDecl 0x55a112822a00 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55a112822970 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a112822aa8 <col:63> "" ""
|-CXXMethodDecl 0x55a112822c40 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55a112822b30 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a112822ba8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55a112822cf0 <col:69> "" ""
|-CXXMethodDecl 0x55a112822e08 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55a112822d78 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a112822eb0 <col:63> "" ""
|-CXXMethodDecl 0x55a112825588 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55a112825478 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a1128254f0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a112825638 <col:69> "" ""
|-CXXMethodDecl 0x55a112825750 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55a1128256c0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55a1128257f8 <col:62> "" ""
|-CXXMethodDecl 0x55a112825990 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55a112825880 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a1128258f8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55a112825a40 <col:68> "" ""
|-CXXMethodDecl 0x55a112825b58 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55a112825ac8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a112825c00 <col:63> "" ""
|-CXXMethodDecl 0x55a112825d98 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55a112825c88 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a112825d00 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55a112825e48 <col:69> "" ""
|-CXXMethodDecl 0x55a112825ed8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55a112825f78 <col:64> "" ""
|-CXXMethodDecl 0x55a112826008 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55a1128260a8 <col:52> "" ""
|-CXXMethodDecl 0x55a112826138 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55a1128261d8 <col:67> "" ""
|-CXXMethodDecl 0x55a112826268 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55a112826308 <col:55> "" ""
|-CXXMethodDecl 0x55a112826420 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55a112826390 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a1128264c8 <col:58> "" ""
|-CXXMethodDecl 0x55a112826660 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55a112826550 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a1128265c8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55a112826710 <col:62> "" ""
|-CXXMethodDecl 0x55a112826828 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55a112826798 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a1128268d0 <col:58> "" ""
|-CXXMethodDecl 0x55a112826a68 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55a112826958 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a1128269d0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55a112826b18 <col:62> "" ""
|-CXXMethodDecl 0x55a112826c30 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55a112826ba0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55a112826cd8 <col:60> "" ""
|-CXXMethodDecl 0x55a112826e70 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55a112826d60 <col:34> col:37 'int'
| |-ParmVarDecl 0x55a112826dd8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55a112826f20 <col:64> "" ""
|-CXXMethodDecl 0x55a112827038 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55a112826fa8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a1128270e0 <col:58> "" ""
|-CXXMethodDecl 0x55a112827278 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55a112827168 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a1128271e0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55a112827328 <col:62> "" ""
|-CXXMethodDecl 0x55a112827440 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55a1128273b0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55a1128274e8 <col:59> "" ""
|-CXXMethodDecl 0x55a112827680 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55a112827570 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a1128275e8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a112827730 <col:63> "" ""
|-AccessSpecDecl 0x55a1128277a0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55a1128277c8 prev 0x55a11281c9d0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a1128278c0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55a1128279b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55a112827ad8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55a112827c58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55a112827dd8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55a112827f58 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55a112838d88 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a1128395f8 <col:11>
| |-CXXDestructorDecl 0x55a112838e60 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55a112838f98 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55a112838f98
| | `-ParmVarDecl 0x55a1128390a8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55a112839148 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a112839148
| | `-ParmVarDecl 0x55a112839258 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55a11283c018 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a11283c128 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55a11283c3a8 <col:11>
| |   `-ReturnStmt 0x55a11283c398 <col:11>
| |     `-UnaryOperator 0x55a11283c380 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55a11283c370 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55a11283c198 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a11283c198
|   `-ParmVarDecl 0x55a11283c2a8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55a112827fc0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a1128280d8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55a112828178 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55a1128281e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55a112828248 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55a1128282b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55a112828310 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55a1128283d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55a112828430 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55a112828490 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55a112838c98 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55a112828178 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55a112839608 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55a112839660 <col:12>
| |-CXXConstructorDecl 0x55a1128392c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55a1128392c8
| | `-ParmVarDecl 0x55a1128393d8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55a112839478 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55a112839478
| | `-ParmVarDecl 0x55a112839588 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55a11283b700 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55a112828508 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55a112828568 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55a1128285d0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55a112828638 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55a1128286a0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55a112828708 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55a112828768 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55a1128287c8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55a112828830 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55a1128288b8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55a112828508 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55a112838c30 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55a112828768 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55a112839670 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55a1128396d0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55a112828a58 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55a112828998 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55a112828b50 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55a112828d38 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55a112828c40 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55a112829008 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55a112828df0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a112828e68 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a112828ee0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a112829228 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55a1128290d8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55a112829150 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55a112831808 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55a1128292e8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55a112829360 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55a1128293d8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55a112831960 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55a1128318d0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a112831aa8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55a112831a18 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55a112831ba0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<4>
         0 |   char [4] x
           | [sizeof=4, dsize=4, align=1,
           |  nvsize=4, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a112909bc0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 4
|-PackedAttr 0x55a11299ac50 <line:167:18>
|-CXXRecordDecl 0x55a11299ad10 prev 0x55a112909bc0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55a11299ae20 <line:166:5, col:13> col:10 x 'char [4]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [4 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [4 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
