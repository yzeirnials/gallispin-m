
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a8f7a839f8 prev 0x55a8f7a7b198 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a8f7a83af0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55a8f7a83b80 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55a8f7a83bf8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55a8f7a83cb8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55a8f7a83d80 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55a8f7a83ef8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55a8f7a83e30 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55a8f7a83fa0 <col:24>
| `-OptimizeNoneAttr 0x55a8f7a83ff8 <col:34>
|-CXXMethodDecl 0x55a8f7a84040 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55a8f7a842f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55a8f7a840f0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55a8f7a84168 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55a8f7a841e8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55a8f7a843b0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55a8f7a843e8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55a8f7a84450 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55a8f7a844d8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55a8f7a847f8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55a8f7a84590 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55a8f7a84608 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55a8f7a84680 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55a8f7a84700 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55a8f7a84910 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55a8f7a8c288 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55a8f7a8c288
| `-ParmVarDecl 0x55a8f7a8c398 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55a8f7a8c438 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55a8f7a8c438
| `-ParmVarDecl 0x55a8f7a8c548 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55a8f7a90480 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a8f7a76a10 prev 0x55a8f7a76790 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a8f7a76b08 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55a8f7a76b98 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55a8f7a76bf8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55a8f7a76ce8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55a8f7a76de8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55a8f7a76fb8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55a8f7a76e68 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55a8f7a76ee0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55a8f7a77148 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55a8f7a77080 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55a8f7a771f0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55a8f7a77328 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55a8f7a77260 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55a8f7a774c8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55a8f7a77408 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55a8f7a77668 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55a8f7a775a8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55a8f7a77710 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55a8f7a77810 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55a8f7a778f0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a777f0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55a8f7a777d0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55a8f7a778a0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55a8f7a77908 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a8f7a77880 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55a8f7a77860 <col:44> 'int' 2
|-CXXMethodDecl 0x55a8f7a77a50 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55a8f7a77938 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55a8f7a779b8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55a8f7a77ba8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55a8f7a77b18 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55a8f7a77de8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55a8f7a77c68 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55a8f7a77ce0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55a8f7a77e98 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a77ef0 <col:30>
|-CXXMethodDecl 0x55a8f7a77ff8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55a8f7a77f30 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55a8f7a780a0 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a780f8 <col:30>
|-CXXMethodDecl 0x55a8f7a78148 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55a8f7a78210 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55a8f7a78328 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55a8f7a783b0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55a8f7a78438 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55a8f7a784c0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55a8f7a78548 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55a8f7a785d8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55a8f7a78698 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55a8f7a78720 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55a8f7a787a8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55a8f7a78830 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55a8f7a788b8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55a8f7a78940 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55a8f7a789d0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55a8f7a78a90 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55a8f7a78b20 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55a8f7a78c70 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55a8f7a78bd8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55a8f7a78e00 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55a8f7a78d30 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55a8f7a790b0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55a8f7a78eb8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55a8f7a78f38 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55a8f7a78fb8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55a8f7a79168 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55a8f7a79270 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a8f7a79500 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a79250 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55a8f7a79230 <col:33> 'int' 0
| |-EnumConstantDecl 0x55a8f7a79300 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a8f7a79518 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a792e0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55a8f7a792c0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55a8f7a79390 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a8f7a79530 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a79370 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55a8f7a79350 <col:38> 'int' 90
| |-EnumConstantDecl 0x55a8f7a79420 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a8f7a79548 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a79400 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55a8f7a793e0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55a8f7a794b0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55a8f7a79560 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a8f7a79490 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55a8f7a79470 <col:32> 'int' 2000
|-CXXMethodDecl 0x55a8f7a795a0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55a8f7a799e0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a8f7a79850 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55a8f7a798c8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a8f7a79ab0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55a8f7a79c30 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55a8f7a79b60 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a8f7a79e38 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a8f7a79ce8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55a8f7a79d60 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a8f7a79f38 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55a8f7a79fd8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55a8f7a7a0a0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a8f7a7a130 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55a8f7a7a360 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a7a110 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55a8f7a7a0f0 <col:36> 'int' EnumConstant 0x55a8f7a7a0a0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a8f7a7a180 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a8f7a7a1d0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a8f7a7a220 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a8f7a7a270 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a8f7a7a2c0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55a8f7a7a310 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55a8f7a7a448 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55a8f7a7a388 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55a8f7a7a510 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55a8f7a7a5d0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55a8f7a7a690 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55a8f7a7a750 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55a8f7a7a868 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55a8f7a7a930 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55a8f7a7aab0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55a8f7a7a9e0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55a8f7a7abd8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55a8f7a7add8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55a8f7a7ac88 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55a8f7a7ad08 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55a8f7a88728 <col:54, line:127:5>
|   |-ParenExpr 0x55a8f7a885d8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55a8f7a885a8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a88298 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55a8f7a88270 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55a8f7a88258 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55a8f7a88240 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55a8f7a88210 <col:31> 'Router *' lvalue ->_router 0x55a8f7a860f0
|   |   |         `-CXXThisExpr 0x55a8f7a88200 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55a8f7a882f8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a882d8 <col:48> 'int' 0
|   |   `-CallExpr 0x55a8f7a88508 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a884f0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a884d0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a88548 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a88368 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55a8f7a88560 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a88388 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a88578 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a883c0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55a8f7a88590 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a884b8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a884a0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a88458 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55a8f7a88670 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55a8f7a88608 <col:9> 'Router *' lvalue ->_router 0x55a8f7a860f0
|   | | `-CXXThisExpr 0x55a8f7a885f8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55a8f7a88658 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8f7a88638 <col:19> 'Router *' lvalue ParmVar 0x55a8f7a7ac88 'r' 'Router *'
|   `-BinaryOperator 0x55a8f7a88708 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55a8f7a886a0 <col:9> 'int' lvalue ->_eindex 0x55a8f7a86158
|     | `-CXXThisExpr 0x55a8f7a88690 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55a8f7a886f0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55a8f7a886d0 <col:19> 'int' lvalue ParmVar 0x55a8f7a7ad08 'eindex' 'int'
|-CXXMethodDecl 0x55a8f7a7af60 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55a8f7a7ae98 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55a8f7a7b030 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55a8f7a7b0f8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55a8f7a7b198 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55a8f7a7b3e8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55a8f7a7b260 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55a8f7a7b2e0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55a8f7a7b498 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a7b4f0 <col:30>
|-CXXMethodDecl 0x55a8f7a7b5f8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55a8f7a7b530 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55a8f7a7b6a0 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a7b6f8 <col:30>
|-CXXMethodDecl 0x55a8f7a7b7c8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55a8f7a7b738 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55a8f7a7b870 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a7b8c8 <col:30>
|-CXXMethodDecl 0x55a8f7a7ba58 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55a8f7a7b900 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55a8f7a7b980 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55a8f7a7bbe8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55a8f7a7bb20 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55a8f7a7bd38 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55a8f7a7bca8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55a8f7a7be88 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55a8f7a7bdf8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55a8f7a7bfd8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55a8f7a7bf48 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55a8f7a7c298 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55a8f7a7c090 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55a8f7a7c110 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55a8f7a7c1b8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55a8f7a7c370 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55a8f7a7c430 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55a8f7a7c700 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a8f7a7c5b0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55a8f7a7c628 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55a8f7a7c828 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55a8f7a7ca00 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55a8f7a7c8e0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55a8f7a7c960 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55a8f7a7cbe8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55a8f7a7cac8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55a8f7a7cb48 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55a8f7a7cf58 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55a8f7a7cca8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a8f7a7cd20 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a8f7a7cda0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a8f7a87d10 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a8f7a87cf0 <col:106> 'int' 0
| `-ParmVarDecl 0x55a8f7a7ce18 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a8f7a87d48 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a8f7a87d28 <col:126> 'int' 0
|-CXXMethodDecl 0x55a8f7a7d2f8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a8f7a7d028 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a8f7a7d0c0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a8f7a7d140 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55a8f7a7d1b8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a8f7a87d80 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a8f7a87d60 <col:114> 'int' 0
|-CXXMethodDecl 0x55a8f7a7d688 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a8f7a7d3d0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55a8f7a7d448 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a8f7a7d4c8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55a8f7a87d98 <col:96> 'int' 0
| `-ParmVarDecl 0x55a8f7a7d540 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a8f7a87dd8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a8f7a87db8 <col:116> 'int' 0
|-CXXMethodDecl 0x55a8f7a7da08 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55a8f7a7d758 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55a8f7a7d7d0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a8f7a7d850 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a8f7a87e10 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a8f7a87df0 <col:109> 'int' 0
| `-ParmVarDecl 0x55a8f7a7d8c8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a8f7a87e48 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a8f7a87e28 <col:129> 'int' 0
|-CXXMethodDecl 0x55a8f7a7dd88 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a8f7a7dad8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55a8f7a7db50 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a8f7a7dbd0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55a8f7a7dc48 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a8f7a87e80 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a8f7a87e60 <col:117> 'int' 0
|-CXXMethodDecl 0x55a8f7a7e118 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a8f7a7de60 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a7ded8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a8f7a7df58 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55a8f7a87e98 <col:99> 'int' 0
| `-ParmVarDecl 0x55a8f7a7dfd0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a8f7a87ed8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a8f7a87eb8 <col:119> 'int' 0
|-CXXMethodDecl 0x55a8f7a7e538 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55a8f7a7e1e8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55a8f7a7e268 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55a8f7a7e2e0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a8f7a7e360 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a8f7a87f10 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a8f7a87ef0 <col:108> 'int' 0
| `-ParmVarDecl 0x55a8f7a7e3e0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55a8f7a87f48 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55a8f7a87f28 <col:141> 'int' 0
|-CXXMethodDecl 0x55a8f7a7e958 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55a8f7a7e610 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55a8f7a7e690 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55a8f7a7e708 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a8f7a7e788 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55a8f7a7e808 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55a8f7a87f60 <col:121> 'int' 0
|-CXXMethodDecl 0x55a8f7a7ed88 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55a8f7a7ea38 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55a8f7a7eab8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55a8f7a7eb30 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a8f7a7ebb0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55a8f7a87f80 <col:98> 'int' 0
| `-ParmVarDecl 0x55a8f7a7ec30 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55a8f7a87fa0 <col:123> 'int' 0
|-CXXMethodDecl 0x55a8f7a7f050 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55a8f7a7ee60 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a8f7a7eee0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55a8f7a7ef60 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55a8f7a87fc0 <col:80> 'int' 0
|-EnumDecl 0x55a8f7a7f108 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55a8f7a7f210 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a8f7a7f4a0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a7f1f0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55a8f7a7f1d0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55a8f7a7f2a0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a8f7a7f4b8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a7f280 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55a8f7a7f260 <col:40> 'int' 2
| |-EnumConstantDecl 0x55a8f7a7f330 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a8f7a7f4d0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a7f310 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55a8f7a7f2f0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55a8f7a7f3c0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a8f7a7f4e8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a7f3a0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55a8f7a7f380 <col:36> 'int' 7
| `-EnumConstantDecl 0x55a8f7a7f450 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55a8f7a7f500 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a8f7a7f430 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55a8f7a7f410 <col:34> 'int' 6
|-CXXMethodDecl 0x55a8f7a7f7b8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55a8f7a7f528 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55a8f7a7f5c8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55a8f7a7f648 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55a8f7a7f6c0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55a8f7a88078 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55a8f7a88060 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55a8f7a88048 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55a8f7a88028 <col:98, col:105> 'String' (CXXTemporary 0x55a8f7a88028)
|           `-CXXTemporaryObjectExpr 0x55a8f7a87ff0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55a8f7a7fa58 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55a8f7a7f888 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55a8f7a7f900 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55a8f7a7f978 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55a8f7a88128 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55a8f7a88110 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55a8f7a880f8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55a8f7a880d8 <col:94, col:101> 'String' (CXXTemporary 0x55a8f7a880d8)
| |         `-CXXTemporaryObjectExpr 0x55a8f7a880a0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55a8f7a88910 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55a8f7a88888 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55a8f7a88858 <col:9> '<bound member function type>' ->add_task_handlers 0x55a8f7a7f7b8
|     | `-CXXThisExpr 0x55a8f7a88848 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55a8f7a888c8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a8f7a887c8 <col:27> 'Task *' lvalue ParmVar 0x55a8f7a7f888 'task' 'Task *'
|     |-ImplicitCastExpr 0x55a8f7a888e0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a8f7a887e8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55a8f7a7f900 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55a8f7a888f8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55a8f7a88808 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55a8f7a7f450 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55a8f7a88828 <col:62> 'const String' lvalue ParmVar 0x55a8f7a7f978 'prefix' 'const String &'
|-CXXMethodDecl 0x55a8f7a7fc68 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55a8f7a7fb20 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55a8f7a7fb98 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55a8f7a881d8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55a8f7a881c0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55a8f7a881a8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55a8f7a88188 <col:70, col:77> 'String' (CXXTemporary 0x55a8f7a88188)
| |         `-CXXTemporaryObjectExpr 0x55a8f7a88150 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55a8f7a88ae8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55a8f7a88a60 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55a8f7a88a30 <col:9> '<bound member function type>' ->add_task_handlers 0x55a8f7a7f7b8
|     | `-CXXThisExpr 0x55a8f7a88a20 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55a8f7a88aa0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a8f7a889a0 <col:27> 'Task *' lvalue ParmVar 0x55a8f7a7fb20 'task' 'Task *'
|     |-ImplicitCastExpr 0x55a8f7a88ab8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55a8f7a889c0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55a8f7a88ad0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55a8f7a889e0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55a8f7a7f450 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55a8f7a88a00 <col:57> 'const String' lvalue ParmVar 0x55a8f7a7fb98 'prefix' 'const String &'
|-CXXMethodDecl 0x55a8f7a7ff48 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55a8f7a7fd30 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a7fdb0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a7fe28 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55a8f7a801f8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55a8f7a80018 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a80098 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a80118 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55a8f7a804e8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55a8f7a802c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a80348 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a803c0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55a8f7a80798 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55a8f7a805b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a80638 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a806b8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55a8f7a80a48 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55a8f7a80868 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a808e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a80968 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55a8f7a80cf8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55a8f7a80b18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a80b98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a80c10 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55a8f7a80fa8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55a8f7a80dc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a80e48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a80ec8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55a8f7a812b8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55a8f7a810d0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a81150 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a811d0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55a8f7a81598 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55a8f7a81388 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a81408 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a814b0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55a8f7a81878 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55a8f7a81668 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a816e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a81790 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55a8f7a81ae0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55a8f7a81948 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55a8f7a819c8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55a8f7a81a40 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55a8f7a81d88 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55a8f7a81bb0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55a8f7a81c30 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55a8f7a81ca8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55a8f7a82038 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55a8f7a81e58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a81ed8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a81f58 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55a8f7a822e8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55a8f7a82108 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a82188 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a82200 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55a8f7a82598 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55a8f7a823b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a82438 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a824b0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55a8f7a82868 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55a8f7a82668 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a826e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a8f7a82788 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55a8f7a82b98 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55a8f7a82938 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a8f7a829b8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55a8f7a82a30 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55a8f7a82aa8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a8f7a881f0 <col:93> 'bool' false
|-CXXMethodDecl 0x55a8f7a82d80 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a8f7a82c68 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55a8f7a82ce8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55a8f7a82f58 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a8f7a82e40 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55a8f7a82ec0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55a8f7a83238 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55a8f7a83018 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55a8f7a83090 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55a8f7a83110 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55a8f7a83188 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55a8f7a83528 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55a8f7a83308 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55a8f7a83380 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55a8f7a83400 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55a8f7a83478 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55a8f7a83760 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55a8f7a83600 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55a8f7a83680 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55a8f7a83948 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55a8f7a83828 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55a8f7a838a8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55a8f7a839f8 prev 0x55a8f7a7b198 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a8f7a83af0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55a8f7a83b80 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55a8f7a83bf8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55a8f7a83cb8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55a8f7a83d80 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55a8f7a83ef8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55a8f7a83e30 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55a8f7a83fa0 <col:24>
| | `-OptimizeNoneAttr 0x55a8f7a83ff8 <col:34>
| |-CXXMethodDecl 0x55a8f7a84040 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55a8f7a842f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55a8f7a840f0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55a8f7a84168 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55a8f7a841e8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55a8f7a843b0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55a8f7a843e8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55a8f7a84450 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55a8f7a844d8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55a8f7a847f8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55a8f7a84590 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55a8f7a84608 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55a8f7a84680 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55a8f7a84700 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55a8f7a84910 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55a8f7a8c288 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55a8f7a8c288
| | `-ParmVarDecl 0x55a8f7a8c398 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55a8f7a8c438 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55a8f7a8c438
| | `-ParmVarDecl 0x55a8f7a8c548 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55a8f7a90480 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a8f7a84988 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55a8f7a84a28 <col:38> "" ""
|-CXXMethodDecl 0x55a8f7a84ab8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55a8f7a84b58 <col:44> "" ""
|-AccessSpecDecl 0x55a8f7a84bc8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55a8f7a84bf0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55a8f7a84cf0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55a8f7a84d40 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a8f7a84cd0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55a8f7a84cb0 <col:27> 'int' 4
|-FieldDecl 0x55a8f7a84df8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55a8f7a84fa8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55a8f7a85060 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55a8f7a860f0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55a8f7a86158 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55a8f7a862a8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55a8f7a861e8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55a8f7a86458 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55a8f7a86368 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55a8f7a86638 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55a8f7a86518 <col:20> col:23 'int'
| `-ParmVarDecl 0x55a8f7a86598 <col:25> col:28 'int'
|-CXXMethodDecl 0x55a8f7a868e0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55a8f7a86700 <col:23> col:26 'int'
| |-ParmVarDecl 0x55a8f7a86780 <col:28> col:31 'int'
| `-ParmVarDecl 0x55a8f7a867f8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55a8f7a86998 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55a8f7a86a60 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55a8f7a86ab0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55a8f7a86b00 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55a8f7a86ce0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55a8f7a86b90 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55a8f7a86c08 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a8f7a86f88 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55a8f7a86da8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55a8f7a86e28 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55a8f7a86ea0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55a8f7a871a8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55a8f7a87058 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55a8f7a870d8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55a8f7a874e0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55a8f7a87268 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55a8f7a872e8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55a8f7a87360 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55a8f7a873e0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55a8f7a876c8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a8f7a875b0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55a8f7a87630 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55a8f7a87818 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55a8f7a87788 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55a8f7a87b98 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55a8f7a878d8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55a8f7a87958 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55a8f7a879d0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55a8f7a87a50 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55a8f7a87cb0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class DevirtualizeInfo
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a8f7a8f3f8 <../elements/standard/devirtualizeinfo.hh:6:1, line:15:1> line:6:7 class DevirtualizeInfo definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55a8f7a8f558 <col:1, col:7> col:7 implicit referenced class DevirtualizeInfo
|-AccessSpecDecl 0x55a8f7a8f5e8 <line:8:2, col:8> col:2 public
|-CXXConstructorDecl 0x55a8f7a8f670 <line:10:3, col:20> col:3 DevirtualizeInfo 'void ()'
|-CXXMethodDecl 0x55a8f7a8f770 <line:12:3, col:63> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55a8f7a78148 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55a8f7a902c0 <col:34, col:63>
|   `-ReturnStmt 0x55a8f7a902b0 <col:36, col:43>
|     `-ImplicitCastExpr 0x55a8f7a90298 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55a8f7a90270 <col:43> 'const char [17]' lvalue "DevirtualizeInfo"
|-CXXMethodDecl 0x55a8f7a8fa40 <line:13:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55a8f7a799e0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55a8f7a8f8f0 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x55a8f7a8f968 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXConstructorDecl 0x55a8f7a8fb18 <line:6:7> col:7 implicit DevirtualizeInfo 'void (const DevirtualizeInfo &)' inline default_delete noexcept-unevaluated 0x55a8f7a8fb18
| `-ParmVarDecl 0x55a8f7a8fc28 <col:7> col:7 'const DevirtualizeInfo &'
|-CXXConstructorDecl 0x55a8f7a8fcc8 <col:7> col:7 implicit DevirtualizeInfo 'void (DevirtualizeInfo &&)' inline default_delete noexcept-unevaluated 0x55a8f7a8fcc8
| `-ParmVarDecl 0x55a8f7a8fdd8 <col:7> col:7 'DevirtualizeInfo &&'
|-CXXMethodDecl 0x55a8f7a8fe78 <col:7> col:7 implicit operator= 'DevirtualizeInfo &(const DevirtualizeInfo &)' inline default_delete noexcept-unevaluated 0x55a8f7a8fe78
| `-ParmVarDecl 0x55a8f7a8ff88 <col:7> col:7 'const DevirtualizeInfo &'
|-CXXMethodDecl 0x55a8f7a8fff8 <col:7> col:7 implicit operator= 'DevirtualizeInfo &(DevirtualizeInfo &&)' inline default_delete noexcept-unevaluated 0x55a8f7a8fff8
| `-ParmVarDecl 0x55a8f7a90108 <col:7> col:7 'DevirtualizeInfo &&'
`-CXXDestructorDecl 0x55a8f7a90190 <col:7> col:7 implicit ~DevirtualizeInfo 'void ()' inline default noexcept-unevaluated 0x55a8f7a90190
  `-Overrides: [ 0x55a8f7a76ce8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.DevirtualizeInfo = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.DevirtualizeInfo.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a8f78354c0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a8f78355d8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55a8f7835668 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55a8f7835738 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55a8f7835820 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55a8f7835a38 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a8f78358e0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7835be8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55a8f7835af0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55a8f7835d30 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55a8f7835ca0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55a8f7835e78 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a8f7835de8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7835fc0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a8f7835f30 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7836088 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55a8f78361d0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55a8f7836140 <col:28> col:31 'int'
|-CXXMethodDecl 0x55a8f7836298 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55a8f78363e0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55a8f7836350 <col:28> col:31 'int'
|-CXXMethodDecl 0x55a8f7836558 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55a8f7836498 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f78366a0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55a8f7836610 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7836768 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55a8f7836928 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a8f7836818 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a8f7836890 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7836b78 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a8f78369e8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a8f7836a60 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a8f7836c28 <col:86> "" ""
|-CXXMethodDecl 0x55a8f7836e98 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55a8f7836d08 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55a8f7836d80 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7837048 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55a8f7836f58 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55a8f78371f8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55a8f7837100 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55a8f78374c8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55a8f78372b0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55a8f7837328 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a8f78373a0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f78377a8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55a8f7837590 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55a8f7837608 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a8f7837680 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a8f7837860 <col:115> "" ""
|-AccessSpecDecl 0x55a8f78378d0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55a8f7837908 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7838e20 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55a8f7838e20
| `-ParmVarDecl 0x55a8f7838f28 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55a8f7838fc8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55a8f7838fc8
| `-ParmVarDecl 0x55a8f78390d8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55a8f786e708 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a8f7a60500 <col:7>
|-CXXConstructorDecl 0x55a8f786e7e0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55a8f786e7e0
| `-ParmVarDecl 0x55a8f786e8f8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55a8f786e968 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55a8f786e968
| `-ParmVarDecl 0x55a8f786ea78 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55a8f7a62f00 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a8f7a4f0a8 prev 0x55a8f7a442b0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a8f7a4f1a0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55a8f7a4f290 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55a8f7a4f3b8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55a8f7a4f538 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55a8f7a4f6b8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55a8f7a4f838 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55a8f7a60668 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a8f7a60ed8 <col:11>
|-CXXDestructorDecl 0x55a8f7a60740 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55a8f7a60878 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55a8f7a60878
| `-ParmVarDecl 0x55a8f7a60988 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55a8f7a60a28 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a8f7a60a28
| `-ParmVarDecl 0x55a8f7a60b38 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55a8f7a638f8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a8f7a63a08 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55a8f7a63c88 <col:11>
|   `-ReturnStmt 0x55a8f7a63c78 <col:11>
|     `-UnaryOperator 0x55a8f7a63c60 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a8f7a63c50 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55a8f7a63a78 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a8f7a63a78
  `-ParmVarDecl 0x55a8f7a63b88 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a8f7a4f8a0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a8f7a4f9b8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55a8f7a4fa58 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55a8f7a4fac0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55a8f7a4fb28 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55a8f7a4fb90 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55a8f7a4fbf0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55a8f7a4fcb0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55a8f7a4fd10 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55a8f7a4fd70 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55a8f7a60578 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55a8f7a4fa58 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55a8f7a60ee8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55a8f7a60f40 <col:12>
|-CXXConstructorDecl 0x55a8f7a60ba8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55a8f7a60ba8
| `-ParmVarDecl 0x55a8f7a60cb8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55a8f7a60d58 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55a8f7a60d58
| `-ParmVarDecl 0x55a8f7a60e68 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55a8f7a62fe0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a8f7a3d9c0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a8f7a3dad8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55a8f7a3db68 <col:16, col:22> col:16 public
|-EnumDecl 0x55a8f7a3db90 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55a8f7a3dc90 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55a8f7a3dd70 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a3dc70 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55a8f7a3dc50 <col:21> 'int' 28
| `-EnumConstantDecl 0x55a8f7a3dd20 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55a8f7a3dd88 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a8f7a3dd00 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55a8f7a3dce0 <col:22> 'int' 64
|-CXXMethodDecl 0x55a8f7a3e0c8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55a8f7a3ddb0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a8f7a3de30 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55a8f7a3dea8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a8f7a3df20 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a8f7a3e188 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55a8f7a3e388 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55a8f7a3e200 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55a8f7a3e278 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a8f7a3e438 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55a8f7a3e598 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55a8f7a3e4a8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a8f7a3e640 <col:72> warn_unused_result ""
|-TypedefDecl 0x55a8f7a3e9a0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55a8f7a3e930 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55a8f7a3e8d0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55a8f7a3e890 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55a8f7517310 'void'
|       |-PointerType 0x55a8f77bdd60 'unsigned char *'
|       | `-BuiltinType 0x55a8f7517410 'unsigned char'
|       |-TypedefType 0x55a8f75ba110 'size_t' sugar
|       | |-Typedef 0x55a8f7587af0 'size_t'
|       | `-BuiltinType 0x55a8f7517470 'unsigned long'
|       `-PointerType 0x55a8f7517b10 'void *'
|         `-BuiltinType 0x55a8f7517310 'void'
|-CXXMethodDecl 0x55a8f7a3ee18 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55a8f7a3ea10 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55a8f7a3ea88 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a8f7a3eb20 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55a8f7a3eba0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55a8f7a59510 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55a8f7a594f8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55a8f7a594c0 <col:58> 'int' 0
| |-ParmVarDecl 0x55a8f7a3ec20 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55a8f7a59538 <col:76> 'int' 0
| |-ParmVarDecl 0x55a8f7a3eca0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55a8f7a59558 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55a8f7a3eee8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55a8f7a3ef68 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55a8f7a3f028 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55a8f7a3f0c8 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a3f120 <col:30>
|-CXXMethodDecl 0x55a8f7a3f198 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55a8f7a3f238 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a3f290 <col:30>
|-CXXMethodDecl 0x55a8f7a3f308 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55a8f7a3f3a8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55a8f7a3f458 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55a8f7a3f4f8 <col:20>
| |-OptimizeNoneAttr 0x55a8f7a3f550 <col:30>
| `-WarnUnusedResultAttr 0x55a8f7a3f578 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55a8f7a3f5d0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55a8f7a3f670 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a3f6c8 <col:30>
|-CXXMethodDecl 0x55a8f7a3f718 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55a8f7a3f7b8 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a3f810 <col:30>
|-CXXMethodDecl 0x55a8f7a3f858 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55a8f7a3f8f8 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a3f950 <col:30>
|-CXXMethodDecl 0x55a8f7a3f998 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55a8f7a3fa58 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55a8f7a3fb20 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a8f7a3fbe8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a8f7a3fca8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a8f7a3fdc8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55a8f7a59620 <col:54, line:99:5>
|   `-ReturnStmt 0x55a8f7a59610 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55a8f7a595f8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55a8f7a595c8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a8f7a500a8
|         `-CXXThisExpr 0x55a8f7a595b8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55a8f7a3ff68 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55a8f7a3fe78 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55a8f7a596d0 <col:67, line:103:5>
|   `-BinaryOperator 0x55a8f7a596b0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55a8f7a59648 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a8f7a500a8
|     | `-CXXThisExpr 0x55a8f7a59638 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55a8f7a59698 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55a8f7a59678 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55a8f7a3fe78 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55a8f7a40060 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55a8f7a59750 <col:33, line:107:5>
|   `-ReturnStmt 0x55a8f7a59740 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55a8f7a59728 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55a8f7a596f8 <col:16> 'void *' lvalue ->_destructor_argument 0x55a8f7a50110
|         `-CXXThisExpr 0x55a8f7a596e8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55a8f7a40120 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55a8f7a59d80 <col:25, line:113:5>
|   |-ParenExpr 0x55a8f7a59ac8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55a8f7a59a98 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a59808 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55a8f7a597e0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55a8f7a597a8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55a8f7a59778 <col:24> '<bound member function type>' ->shared 0x55a8f7a3f198
|   |   |       `-ImplicitCastExpr 0x55a8f7a597c8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55a8f7a59768 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55a8f7a59868 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a59848 <col:42> 'int' 0
|   |   `-CallExpr 0x55a8f7a599f8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a599e0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a599c0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a59a38 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a598d8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55a8f7a59a50 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a59900 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a59a68 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a59938 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55a8f7a59a80 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a599a8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a59990 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a59958 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55a8f7a59cc8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55a8f7a59af8 <col:2> 'unsigned char *' lvalue ->_head 0x55a8f7a4feb0
|   | | `-CXXThisExpr 0x55a8f7a59ae8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55a8f7a59cb0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55a8f7a59c90 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55a8f7a59b38 <col:10> 'unsigned char *' lvalue ->_data 0x55a8f7a4ff18
|   |     | `-CXXThisExpr 0x55a8f7a59b28 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55a8f7a59c78 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55a8f7a59c58 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55a8f7a59b78 <col:18> 'unsigned char *' lvalue ->_tail 0x55a8f7a4ff80
|   |         | `-CXXThisExpr 0x55a8f7a59b68 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55a8f7a59c40 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55a8f7a59c20 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55a8f7a59bb8 <col:26> 'unsigned char *' lvalue ->_end 0x55a8f7a4ffe8
|   |             | `-CXXThisExpr 0x55a8f7a59ba8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55a8f7a59c08 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55a8f7a59be8 <col:33> 'int' 0
|   `-BinaryOperator 0x55a8f7a59d60 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55a8f7a59cf8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a8f7a500a8
|     | `-CXXThisExpr 0x55a8f7a59ce8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55a8f7a59d48 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55a8f7a59d28 <col:16> 'int' 0
|-CXXMethodDecl 0x55a8f7a40260 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a8f7a401d0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a8f7a40308 <col:20>
| |-OptimizeNoneAttr 0x55a8f7a40360 <col:30>
| `-WarnUnusedResultAttr 0x55a8f7a40388 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55a8f7a40458 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a8f7a403c8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a8f7a40500 <col:20>
| |-OptimizeNoneAttr 0x55a8f7a40558 <col:30>
| `-WarnUnusedResultAttr 0x55a8f7a40580 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55a8f7a406b8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55a8f7a405c0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a8f7a40760 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55a8f7a40860 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55a8f7a407d0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a8f7a40908 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a40960 <col:30>
|-CXXMethodDecl 0x55a8f7a40a28 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a8f7a40998 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a8f7a40ad0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55a8f7a40bd0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55a8f7a40b40 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a8f7a40c78 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55a8f7a40d78 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55a8f7a40ce8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a8f7a40e20 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a40e78 <col:30>
|-CXXMethodDecl 0x55a8f7a41008 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55a8f7a40eb8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55a8f7a40f30 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55a8f7a59578 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55a8f7a410b8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55a8f7a412b8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a8f7a41130 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55a8f7a411a8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7a414c8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a8f7a41378 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a8f7a413f0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7a416d8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55a8f7a41588 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55a8f7a41608 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55a8f7a59588 <col:39> 'int' 0
|-CXXMethodDecl 0x55a8f7a417a8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55a8f7a41870 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a8f7a41938 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a8f7a419f8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a8f7a41ac0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55a8f7a41c08 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55a8f7a41b78 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55a8f7a41dd8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a8f7a41cc8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55a8f7a41d40 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7a41ea8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55a8f7a41f68 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55a8f7a42008 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a42060 <col:30>
|-CXXMethodDecl 0x55a8f7a420b0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55a8f7a42150 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a421a8 <col:30>
|-CXXMethodDecl 0x55a8f7a421f8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a8f7a422b8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a8f7a42380 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55a8f7a42420 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a42478 <col:30>
|-CXXMethodDecl 0x55a8f7a425c8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a8f7a424b8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55a8f7a42530 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7a42718 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55a8f7a42688 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7a427f0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55a8f7a428b0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55a8f7a42950 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a429a8 <col:30>
|-CXXMethodDecl 0x55a8f7a429f8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55a8f7a42a98 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a42af0 <col:30>
|-CXXMethodDecl 0x55a8f7a42b40 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a8f7a42c08 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55a8f7a42ca8 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a42d00 <col:30>
|-CXXMethodDecl 0x55a8f7a42d48 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55a8f7a42e68 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55a8f7a42fd8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55a8f7a42f18 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55a8f7a430c8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55a8f7a43168 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a431c0 <col:30>
|-CXXMethodDecl 0x55a8f7a43210 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a8f7a432d0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a8f7a43508 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55a8f7a43380 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55a8f7a433f8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a8f7a435b8 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a43610 <col:30>
|-CXXMethodDecl 0x55a8f7a436b8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55a8f7a43758 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a437b0 <col:30>
|-CXXMethodDecl 0x55a8f7a43800 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55a8f7a438a0 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a438f8 <col:30>
|-CXXMethodDecl 0x55a8f7a43940 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55a8f7a439e0 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a43a38 <col:30>
|-CXXMethodDecl 0x55a8f7a43b38 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55a8f7a43a70 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55a8f7a43be0 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a43c38 <col:30>
|-CXXMethodDecl 0x55a8f7a43df8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55a8f7a43c70 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55a8f7a43ce8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a8f7a43ea8 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a43f00 <col:30>
|-CXXMethodDecl 0x55a8f7a43fa8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55a8f7a440c8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55a8f7a441e8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55a8f7a44288 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55a8f7a442b0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55a8f7a443d8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55a8f7a44478 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a444d0 <col:30>
|-CXXMethodDecl 0x55a8f7a44578 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55a8f7a44618 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a44670 <col:30>
|-AccessSpecDecl 0x55a8f7a44698 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55a8f7a446c0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55a8f7a447c0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55a8f7a44810 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a8f7a447a0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55a8f7a44780 <col:14> 'int' 48
|-CXXMethodDecl 0x55a8f7a44878 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55a8f7a44918 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a44970 <col:30>
|-CXXMethodDecl 0x55a8f7a449e8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55a8f7a44a88 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a44ae0 <col:30>
|-CXXMethodDecl 0x55a8f7a44ba8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55a8f7a44b18 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55a8f7a44d48 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55a8f7a44ee8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55a8f7a44df8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55a8f7a44f90 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55a8f7a45090 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a8f7a45440 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a45070 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55a8f7a45050 <col:9> 'int' 0
| |-EnumConstantDecl 0x55a8f7a45120 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a8f7a45458 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a45100 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55a8f7a450e0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55a8f7a451b0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a8f7a45470 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a45190 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55a8f7a45170 <col:14> 'int' 2
| |-EnumConstantDecl 0x55a8f7a45240 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a8f7a45488 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a45220 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55a8f7a45200 <col:14> 'int' 3
| |-EnumConstantDecl 0x55a8f7a452d0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a8f7a454a0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a452b0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55a8f7a45290 <col:13> 'int' 4
| |-EnumConstantDecl 0x55a8f7a45360 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a8f7a454b8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a45340 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55a8f7a45320 <col:13> 'int' 5
| `-EnumConstantDecl 0x55a8f7a453f0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55a8f7a454d0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a8f7a453d0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55a8f7a453b0 <col:14> 'int' 6
|-CXXMethodDecl 0x55a8f7a45538 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55a8f7a455d8 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a45630 <col:30>
|-CXXMethodDecl 0x55a8f7a45728 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55a8f7a45668 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55a8f7a457d0 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a45828 <col:30>
|-CXXMethodDecl 0x55a8f7a45898 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55a8f7a459c0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55a8f7a45b38 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55a8f7a45a70 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55a8f7a45c00 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55a8f7a45cc8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55a8f7a45e08 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55a8f7a45d78 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55a8f7a45eb0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55a8f7a45fb0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a8f7a461b0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a45f90 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55a8f7a45f70 <col:23> 'int' 0
| |-EnumConstantDecl 0x55a8f7a46040 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a8f7a461c8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a46020 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55a8f7a46000 <col:45> 'int' 4
| |-EnumConstantDecl 0x55a8f7a460d0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a8f7a461e0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a460b0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55a8f7a46090 <col:24> 'int' 0
| `-EnumConstantDecl 0x55a8f7a46160 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55a8f7a461f8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a8f7a46140 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55a8f7a46120 <col:47> 'int' 16
|-CXXMethodDecl 0x55a8f7a46258 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55a8f7a463c8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55a8f7a46308 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55a8f7a46470 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a464c8 <col:30>
|-CXXMethodDecl 0x55a8f7a46518 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55a8f7a59ea0 <col:18, col:36>
|   `-ReturnStmt 0x55a8f7a59e90 <col:20, col:33>
|     `-ImplicitCastExpr 0x55a8f7a59e78 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55a8f7a59e58 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55a8f7a59e28 <col:27> '<bound member function type>' ->xanno 0x55a8f7a44578
|           `-CXXThisExpr 0x55a8f7a59e18 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55a8f7a46610 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55a8f7a59fb0 <col:30, col:48>
|   `-ReturnStmt 0x55a8f7a59fa0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55a8f7a59f88 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55a8f7a59f68 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55a8f7a59f38 <col:39> '<bound member function type>' ->xanno 0x55a8f7a443d8
|           `-CXXThisExpr 0x55a8f7a59f28 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55a8f7a466f8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55a8f7a5a148 <col:24, col:50>
|   `-ReturnStmt 0x55a8f7a5a138 <col:26, col:47>
|     `-UnaryOperator 0x55a8f7a5a120 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a8f7a5a100 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a8f7a5a0e8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a8f7a5a098 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55a8f7a4f3b8
|         |   `-CXXMemberCallExpr 0x55a8f7a5a078 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55a8f7a5a048 <col:34> '<bound member function type>' ->xanno 0x55a8f7a44578
|         |       `-CXXThisExpr 0x55a8f7a5a038 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55a8f7a5a0c8 <col:46> 'int' 0
|-CXXMethodDecl 0x55a8f7a46800 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55a8f7a5a318 <col:36, col:62>
|   `-ReturnStmt 0x55a8f7a5a308 <col:38, col:59>
|     `-UnaryOperator 0x55a8f7a5a2f0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a8f7a5a2d0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a8f7a5a2b8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a8f7a5a230 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55a8f7a4f3b8
|         |   `-CXXMemberCallExpr 0x55a8f7a5a210 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a8f7a5a1e0 <col:46> '<bound member function type>' ->xanno 0x55a8f7a443d8
|         |       `-CXXThisExpr 0x55a8f7a5a1d0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55a8f7a5a260 <col:58> 'int' 0
|-CXXMethodDecl 0x55a8f7a46918 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55a8f7a5a4b0 <col:26, col:53>
|   `-ReturnStmt 0x55a8f7a5a4a0 <col:28, col:50>
|     `-UnaryOperator 0x55a8f7a5a488 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a8f7a5a468 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55a8f7a5a450 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a8f7a5a400 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55a8f7a4f6b8
|         |   `-CXXMemberCallExpr 0x55a8f7a5a3e0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55a8f7a5a3b0 <col:36> '<bound member function type>' ->xanno 0x55a8f7a44578
|         |       `-CXXThisExpr 0x55a8f7a5a3a0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55a8f7a5a430 <col:49> 'int' 0
|-CXXMethodDecl 0x55a8f7a46a38 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55a8f7a5a688 <col:38, col:65>
|   `-ReturnStmt 0x55a8f7a5a678 <col:40, col:62>
|     `-UnaryOperator 0x55a8f7a5a660 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a8f7a5a640 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55a8f7a5a628 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a8f7a5a598 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55a8f7a4f6b8
|         |   `-CXXMemberCallExpr 0x55a8f7a5a578 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a8f7a5a548 <col:48> '<bound member function type>' ->xanno 0x55a8f7a443d8
|         |       `-CXXThisExpr 0x55a8f7a5a538 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55a8f7a5a5c8 <col:61> 'int' 0
|-CXXMethodDecl 0x55a8f7a46be8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55a8f7a46af0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55a8f7a5ad58 <col:34, line:463:5>
|   |-ParenExpr 0x55a8f7a5aba0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55a8f7a5ab70 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5a7d8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5a7a8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5a6f8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5a6e0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5a6a0 <col:23> 'int' lvalue ParmVar 0x55a8f7a46af0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5a6c0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5a788 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a8f7a5a758 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5a718 <col:33> 'int' lvalue ParmVar 0x55a8f7a46af0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55a8f7a5a770 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55a8f7a5a738 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5a838 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5a818 <col:56> 'int' 0
|   |   `-CallExpr 0x55a8f7a5aad0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a5aab8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a5aa98 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a5ab10 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5a928 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55a8f7a5ab28 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5a958 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a5ab40 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5a990 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55a8f7a5ab58 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a5aa80 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a5aa68 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a5aa28 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55a8f7a5ad48 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55a8f7a5ad30 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55a8f7a5ad10 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a8f7a5ace0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a8f7a5ac90 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55a8f7a4f3b8
|         |   `-CXXMemberCallExpr 0x55a8f7a5ac70 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a8f7a5ac40 <col:9> '<bound member function type>' ->xanno 0x55a8f7a443d8
|         |       `-CXXThisExpr 0x55a8f7a5ac30 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55a8f7a5acf8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55a8f7a5acc0 <col:21> 'int' lvalue ParmVar 0x55a8f7a46af0 'i' 'int'
|-CXXMethodDecl 0x55a8f7a46e38 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55a8f7a46ca8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55a8f7a46d20 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55a8f7a5b3e8 <col:40, line:472:5>
|   |-ParenExpr 0x55a8f7a5b200 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55a8f7a5b1d0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5aeb0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5ae80 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5add0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5adb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5ad78 <col:23> 'int' lvalue ParmVar 0x55a8f7a46ca8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5ad98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5ae60 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a8f7a5ae30 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5adf0 <col:33> 'int' lvalue ParmVar 0x55a8f7a46ca8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55a8f7a5ae48 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55a8f7a5ae10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5af10 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5aef0 <col:56> 'int' 0
|   |   `-CallExpr 0x55a8f7a5b130 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a5b118 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a5b0f8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a5b170 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5af80 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55a8f7a5b188 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5afb0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a5b1a0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5afe8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55a8f7a5b1b8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a5b0e0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a5b0c8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a5b088 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55a8f7a5b3c8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55a8f7a5b370 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55a8f7a5b340 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55a8f7a5b2f0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55a8f7a4f3b8
|     | |   `-CXXMemberCallExpr 0x55a8f7a5b2d0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55a8f7a5b2a0 <col:2> '<bound member function type>' ->xanno 0x55a8f7a44578
|     | |       `-CXXThisExpr 0x55a8f7a5b290 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55a8f7a5b358 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a8f7a5b320 <col:14> 'int' lvalue ParmVar 0x55a8f7a46ca8 'i' 'int'
|     `-ImplicitCastExpr 0x55a8f7a5b3b0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55a8f7a5b390 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55a8f7a46d20 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55a8f7a46ff8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55a8f7a46f00 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a8f7a5bb68 <col:36, line:485:5>
|   |-ParenExpr 0x55a8f7a5b8d0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a8f7a5b8a0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5b580 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5b550 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5b460 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5b448 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5b408 <col:23> 'int' lvalue ParmVar 0x55a8f7a46f00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5b428 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5b530 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a8f7a5b518 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5b480 <col:33> 'int' lvalue ParmVar 0x55a8f7a46f00 'i' 'int'
|   |   |     `-BinaryOperator 0x55a8f7a5b4f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a8f7a5b4e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a8f7a5b4a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a8f7a5b4c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5b5e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5b5c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a8f7a5b800 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a5b7e8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a5b7c8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a5b840 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5b650 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a8f7a5b858 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5b688 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a5b870 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5b6c0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55a8f7a5b888 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a5b7b0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a5b798 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a5b758 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55a8f7a5bb58 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55a8f7a5bb40 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55a8f7a5bb28 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a8f7a5baf8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55a8f7a5ba98 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a8f7a5ba68 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a8f7a5b9e0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a8f7a4f290
|             |   `-CXXMemberCallExpr 0x55a8f7a5b9c0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a8f7a5b990 <col:61> '<bound member function type>' ->xanno 0x55a8f7a443d8
|             |       `-CXXThisExpr 0x55a8f7a5b980 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a8f7a5ba80 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a8f7a5ba10 <col:74> 'int' lvalue ParmVar 0x55a8f7a46f00 'i' 'int'
|-CXXMethodDecl 0x55a8f7a47248 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55a8f7a470b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a8f7a47130 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55a8f7a5c2b8 <col:42, line:500:5>
|   |-ParenExpr 0x55a8f7a5c050 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a8f7a5c020 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5bd00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5bcd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5bbe0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5bbc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5bb88 <col:23> 'int' lvalue ParmVar 0x55a8f7a470b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5bba8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5bcb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a8f7a5bc98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5bc00 <col:33> 'int' lvalue ParmVar 0x55a8f7a470b8 'i' 'int'
|   |   |     `-BinaryOperator 0x55a8f7a5bc78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a8f7a5bc60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a8f7a5bc20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a8f7a5bc40 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5bd60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5bd40 <col:60> 'int' 0
|   |   `-CallExpr 0x55a8f7a5bf80 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a5bf68 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a5bf48 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a5bfc0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5bdd0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a8f7a5bfd8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5be08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a5bff0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5be40 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55a8f7a5c008 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a5bf30 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a5bf18 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a5bed8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55a8f7a5c298 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55a8f7a5c248 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a8f7a5c218 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55a8f7a5c1c0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a8f7a5c190 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a8f7a5c140 <col:48, col:57> 'char [48]' lvalue ->c 0x55a8f7a4f290
|     |     |   `-CXXMemberCallExpr 0x55a8f7a5c120 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a8f7a5c0f0 <col:48> '<bound member function type>' ->xanno 0x55a8f7a44578
|     |     |       `-CXXThisExpr 0x55a8f7a5c0e0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a8f7a5c1a8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a8f7a5c170 <col:61> 'int' lvalue ParmVar 0x55a8f7a470b8 'i' 'int'
|     `-ImplicitCastExpr 0x55a8f7a5c280 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55a8f7a5c260 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55a8f7a47130 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55a8f7a47408 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55a8f7a47310 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55a8f7a5ca18 <col:35, line:513:5>
|   |-ParenExpr 0x55a8f7a5c728 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a8f7a5c6f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5c450 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5c420 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5c330 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5c318 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5c2d8 <col:23> 'int' lvalue ParmVar 0x55a8f7a47310 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5c2f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5c400 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a8f7a5c3e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5c350 <col:33> 'int' lvalue ParmVar 0x55a8f7a47310 'i' 'int'
|   |   |     `-BinaryOperator 0x55a8f7a5c3c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a8f7a5c3b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a8f7a5c370 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a8f7a5c390 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5c4b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5c490 <col:60> 'int' 0
|   |   `-CallExpr 0x55a8f7a5c658 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a5c640 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a5c620 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a5c698 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5c520 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a8f7a5c6b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5c558 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a5c6c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5c590 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55a8f7a5c6e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a5c608 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a5c5f0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a5c5b0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55a8f7a5ca08 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55a8f7a5c9f0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55a8f7a5c9d8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a8f7a5c9a8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55a8f7a5c920 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a8f7a5c8f0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a8f7a5c8a0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55a8f7a4f290
|             |   `-CXXMemberCallExpr 0x55a8f7a5c880 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a8f7a5c850 <col:60> '<bound member function type>' ->xanno 0x55a8f7a443d8
|             |       `-CXXThisExpr 0x55a8f7a5c840 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a8f7a5c908 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a8f7a5c8d0 <col:73> 'int' lvalue ParmVar 0x55a8f7a47310 'i' 'int'
|-CXXMethodDecl 0x55a8f7a47658 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55a8f7a474c8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a8f7a47540 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55a8f7a5d138 <col:41, line:528:5>
|   |-ParenExpr 0x55a8f7a5cec0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a8f7a5ce90 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5cbb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5cb80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5ca90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5ca78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5ca38 <col:23> 'int' lvalue ParmVar 0x55a8f7a474c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5ca58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5cb60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a8f7a5cb48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5cab0 <col:33> 'int' lvalue ParmVar 0x55a8f7a474c8 'i' 'int'
|   |   |     `-BinaryOperator 0x55a8f7a5cb28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a8f7a5cb10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a8f7a5cad0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a8f7a5caf0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5cc10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5cbf0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a8f7a5cdf0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a5cdd8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a5cdb8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a5ce30 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5cc80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a8f7a5ce48 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5ccb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a5ce60 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5ccf0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55a8f7a5ce78 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a5cda0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a5cd88 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a5cd48 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55a8f7a5d118 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55a8f7a5d0c8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a8f7a5d098 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55a8f7a5d040 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a8f7a5d000 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a8f7a5cfb0 <col:47, col:56> 'char [48]' lvalue ->c 0x55a8f7a4f290
|     |     |   `-CXXMemberCallExpr 0x55a8f7a5cf90 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a8f7a5cf60 <col:47> '<bound member function type>' ->xanno 0x55a8f7a44578
|     |     |       `-CXXThisExpr 0x55a8f7a5cf50 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a8f7a5d018 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a8f7a5cfe0 <col:60> 'int' lvalue ParmVar 0x55a8f7a474c8 'i' 'int'
|     `-ImplicitCastExpr 0x55a8f7a5d100 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55a8f7a5d0e0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55a8f7a47540 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55a8f7a47818 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55a8f7a47720 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a8f7a5d808 <col:36, line:541:5>
|   |-ParenExpr 0x55a8f7a5d5a8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a8f7a5d578 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5d2d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5d2a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5d1b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5d198 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5d158 <col:23> 'int' lvalue ParmVar 0x55a8f7a47720 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5d178 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5d280 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a8f7a5d268 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5d1d0 <col:33> 'int' lvalue ParmVar 0x55a8f7a47720 'i' 'int'
|   |   |     `-BinaryOperator 0x55a8f7a5d248 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a8f7a5d230 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a8f7a5d1f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a8f7a5d210 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5d330 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5d310 <col:60> 'int' 0
|   |   `-CallExpr 0x55a8f7a5d4d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a5d4c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a5d4a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a5d518 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5d3a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a8f7a5d530 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5d3d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a5d548 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5d410 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55a8f7a5d560 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a5d488 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a5d470 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a5d430 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55a8f7a5d7f8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55a8f7a5d7e0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55a8f7a5d7c8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a8f7a5d798 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55a8f7a5d740 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a8f7a5d710 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a8f7a5d6c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a8f7a4f290
|             |   `-CXXMemberCallExpr 0x55a8f7a5d6a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a8f7a5d670 <col:61> '<bound member function type>' ->xanno 0x55a8f7a443d8
|             |       `-CXXThisExpr 0x55a8f7a5d660 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a8f7a5d728 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a8f7a5d6f0 <col:74> 'int' lvalue ParmVar 0x55a8f7a47720 'i' 'int'
|-CXXMethodDecl 0x55a8f7a479e8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55a8f7a478d8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55a8f7a47950 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a8f7a47a98 <col:20>
| `-OptimizeNoneAttr 0x55a8f7a47af0 <col:30>
|-CXXMethodDecl 0x55a8f7a47c28 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55a8f7a47b30 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55a8f7a5ded8 <col:35, line:562:5>
|   |-ParenExpr 0x55a8f7a5dc78 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a8f7a5dc48 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5d9a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5d970 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5d880 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5d868 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5d828 <col:23> 'int' lvalue ParmVar 0x55a8f7a47b30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5d848 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5d950 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a8f7a5d938 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5d8a0 <col:33> 'int' lvalue ParmVar 0x55a8f7a47b30 'i' 'int'
|   |   |     `-BinaryOperator 0x55a8f7a5d918 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a8f7a5d900 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a8f7a5d8c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a8f7a5d8e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5da00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5d9e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a8f7a5dba8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a5db90 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a5db70 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a5dbe8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5da70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a8f7a5dc00 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5daa8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a5dc18 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5dae0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55a8f7a5dc30 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a5db58 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a5db40 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a5db00 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55a8f7a5dec8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55a8f7a5deb0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55a8f7a5de98 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a8f7a5de68 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55a8f7a5de10 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a8f7a5dde0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a8f7a5dd90 <col:60, col:69> 'char const[48]' lvalue ->c 0x55a8f7a4f290
|             |   `-CXXMemberCallExpr 0x55a8f7a5dd70 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a8f7a5dd40 <col:60> '<bound member function type>' ->xanno 0x55a8f7a443d8
|             |       `-CXXThisExpr 0x55a8f7a5dd30 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a8f7a5ddf8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a8f7a5ddc0 <col:73> 'int' lvalue ParmVar 0x55a8f7a47b30 'i' 'int'
|-CXXMethodDecl 0x55a8f7a47e38 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55a8f7a47ce8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a8f7a47d60 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55a8f7a5e5b8 <col:41, line:577:5>
|   |-ParenExpr 0x55a8f7a5e348 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a8f7a5e318 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5e070 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5e040 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5df50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5df38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5def8 <col:23> 'int' lvalue ParmVar 0x55a8f7a47ce8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5df18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5e020 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a8f7a5e008 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5df70 <col:33> 'int' lvalue ParmVar 0x55a8f7a47ce8 'i' 'int'
|   |   |     `-BinaryOperator 0x55a8f7a5dfe8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a8f7a5dfd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a8f7a5df90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a8f7a5dfb0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5e0d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5e0b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a8f7a5e278 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a5e260 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a5e240 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a5e2b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5e140 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a8f7a5e2d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5e178 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a5e2e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5e1b0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55a8f7a5e300 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a5e228 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a5e210 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a5e1d0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55a8f7a5e598 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55a8f7a5e548 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a8f7a5e518 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55a8f7a5e4b8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a8f7a5e488 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a8f7a5e438 <col:47, col:56> 'char [48]' lvalue ->c 0x55a8f7a4f290
|     |     |   `-CXXMemberCallExpr 0x55a8f7a5e418 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a8f7a5e3e8 <col:47> '<bound member function type>' ->xanno 0x55a8f7a44578
|     |     |       `-CXXThisExpr 0x55a8f7a5e3d8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a8f7a5e4a0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a8f7a5e468 <col:60> 'int' lvalue ParmVar 0x55a8f7a47ce8 'i' 'int'
|     `-ImplicitCastExpr 0x55a8f7a5e580 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55a8f7a5e560 <col:65> 'int32_t':'int' lvalue ParmVar 0x55a8f7a47d60 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55a8f7a47ff8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55a8f7a47f00 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a8f7a5ece8 <col:36, line:591:5>
|   |-ParenExpr 0x55a8f7a5ea28 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a8f7a5e9f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5e750 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5e720 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5e630 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5e618 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5e5d8 <col:23> 'int' lvalue ParmVar 0x55a8f7a47f00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5e5f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5e700 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a8f7a5e6e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5e650 <col:33> 'int' lvalue ParmVar 0x55a8f7a47f00 'i' 'int'
|   |   |     `-BinaryOperator 0x55a8f7a5e6c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a8f7a5e6b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a8f7a5e670 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a8f7a5e690 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5e7b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5e790 <col:60> 'int' 0
|   |   `-CallExpr 0x55a8f7a5e958 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a5e940 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a5e920 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a5e998 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5e820 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55a8f7a5e9b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5e858 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a5e9c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5e890 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55a8f7a5e9e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a5e908 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a5e8f0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a5e8b0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55a8f7a5ecd8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55a8f7a5ecc0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55a8f7a5eca8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a8f7a5ec78 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55a8f7a5ebf0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a8f7a5ebc0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a8f7a5eb70 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a8f7a4f290
|             |   `-CXXMemberCallExpr 0x55a8f7a5eb50 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a8f7a5eb20 <col:61> '<bound member function type>' ->xanno 0x55a8f7a443d8
|             |       `-CXXThisExpr 0x55a8f7a5eb10 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a8f7a5ebd8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a8f7a5eba0 <col:74> 'int' lvalue ParmVar 0x55a8f7a47f00 'i' 'int'
|-CXXMethodDecl 0x55a8f7a48248 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55a8f7a480b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a8f7a48130 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55a8f7a5f3c8 <col:42, line:606:5>
|   |-ParenExpr 0x55a8f7a5f158 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a8f7a5f128 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5ee80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5ee50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5ed60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5ed48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5ed08 <col:23> 'int' lvalue ParmVar 0x55a8f7a480b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5ed28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5ee30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a8f7a5ee18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5ed80 <col:33> 'int' lvalue ParmVar 0x55a8f7a480b8 'i' 'int'
|   |   |     `-BinaryOperator 0x55a8f7a5edf8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a8f7a5ede0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a8f7a5eda0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a8f7a5edc0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5eee0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5eec0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a8f7a5f088 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a5f070 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a5f050 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a5f0c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5ef50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55a8f7a5f0e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5ef88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a5f0f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5efc0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55a8f7a5f110 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a5f038 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a5f020 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a5efe0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55a8f7a5f3a8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55a8f7a5f358 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a8f7a5f328 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55a8f7a5f2c8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a8f7a5f298 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a8f7a5f248 <col:48, col:57> 'char [48]' lvalue ->c 0x55a8f7a4f290
|     |     |   `-CXXMemberCallExpr 0x55a8f7a5f228 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a8f7a5f1f8 <col:48> '<bound member function type>' ->xanno 0x55a8f7a44578
|     |     |       `-CXXThisExpr 0x55a8f7a5f1e8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a8f7a5f2b0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a8f7a5f278 <col:61> 'int' lvalue ParmVar 0x55a8f7a480b8 'i' 'int'
|     `-ImplicitCastExpr 0x55a8f7a5f390 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55a8f7a5f370 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55a8f7a48130 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55a8f7a483e0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55a8f7a48310 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55a8f7a5fc38 <col:33, line:620:5>
|   |-ParenExpr 0x55a8f7a5f9b0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55a8f7a5f980 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5f5d0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5f5a0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5f440 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5f428 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5f3e8 <col:23> 'int' lvalue ParmVar 0x55a8f7a48310 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5f408 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5f580 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55a8f7a5f568 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5f460 <col:33> 'int' lvalue ParmVar 0x55a8f7a48310 'i' 'int'
|   |   |     `-BinaryOperator 0x55a8f7a5f548 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a8f7a5f530 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a8f7a5f480 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55a8f7a5f508 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55a8f7a5f4f0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55a8f7a5f4b8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5f630 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5f610 <col:79> 'int' 0
|   |   `-CallExpr 0x55a8f7a5f8e0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a5f8c8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a5f8a8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a5f920 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5f718 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55a8f7a5f938 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5f760 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a5f950 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5f798 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55a8f7a5f968 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a5f890 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a5f878 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a5f838 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55a8f7a5fc28 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55a8f7a5fc10 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55a8f7a5fbf8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a8f7a5fbc8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55a8f7a5fb40 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a8f7a5fb10 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a8f7a5fac0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55a8f7a4f290
|             |   `-CXXMemberCallExpr 0x55a8f7a5faa0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a8f7a5fa70 <col:67> '<bound member function type>' ->xanno 0x55a8f7a443d8
|             |       `-CXXThisExpr 0x55a8f7a5fa60 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a8f7a5fb28 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a8f7a5faf0 <col:80> 'int' lvalue ParmVar 0x55a8f7a48310 'i' 'int'
|-CXXMethodDecl 0x55a8f7a485f8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55a8f7a484a0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a8f7a48520 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55a8f7a60460 <col:45, line:635:5>
|   |-ParenExpr 0x55a8f7a601a8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55a8f7a60178 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55a8f7a5fe40 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a8f7a5fe10 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a8f7a5fcb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a8f7a5fc98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a8f7a5fc58 <col:23> 'int' lvalue ParmVar 0x55a8f7a484a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a8f7a5fc78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a8f7a5fdf0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55a8f7a5fdd8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a8f7a5fcd0 <col:33> 'int' lvalue ParmVar 0x55a8f7a484a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55a8f7a5fdb8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a8f7a5fda0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a8f7a5fcf0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a8f7a447c0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55a8f7a5fd78 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55a8f7a5fd60 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55a8f7a5fd28 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55a8f7a5fea0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a8f7a5fe80 <col:79> 'int' 0
|   |   `-CallExpr 0x55a8f7a600d8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55a8f7a600c0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a8f7a600a0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a8f7a60118 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5ff10 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55a8f7a60130 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a8f7a5ff58 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a8f7a60148 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a8f7a5ff90 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55a8f7a60160 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a8f7a60088 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a8f7a60070 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a8f7a60028 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55a8f7a60440 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55a8f7a603a8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a8f7a60378 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55a8f7a60318 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a8f7a602e8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a8f7a60298 <col:54, col:63> 'char [48]' lvalue ->c 0x55a8f7a4f290
|     |     |   `-CXXMemberCallExpr 0x55a8f7a60278 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a8f7a60248 <col:54> '<bound member function type>' ->xanno 0x55a8f7a44578
|     |     |       `-CXXThisExpr 0x55a8f7a60238 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a8f7a60300 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a8f7a602c8 <col:67> 'int' lvalue ParmVar 0x55a8f7a484a0 'i' 'int'
|     `-CXXConstCastExpr 0x55a8f7a60410 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55a8f7a603f8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55a8f7a603c0 <col:91> 'const void *' lvalue ParmVar 0x55a8f7a48520 'x' 'const void *'
|-CXXMethodDecl 0x55a8f7a486c8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55a8f7a604e8 <col:34, line:640:5>
|   `-ReturnStmt 0x55a8f7a604d8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55a8f7a604c0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55a8f7a60490 <col:16> 'Packet *' lvalue ->_data_packet 0x55a8f7a4fe48
|         `-CXXThisExpr 0x55a8f7a60480 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55a8f7a48808 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55a8f7a48778 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a8f7a595a8 <col:46> 'bool' true
|-CXXMethodDecl 0x55a8f7a48988 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55a8f7a488c0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55a8f7a48a30 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55a8f7a491e0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55a8f7a48b30 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a8f7a49250 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a48b10 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55a8f7a48af0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55a8f7a3dc90 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55a8f7a48bc0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a8f7a49268 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a48ba0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55a8f7a48b80 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55a8f7a3dd20 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55a8f7a48c50 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a8f7a49280 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a48c30 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55a8f7a48c10 <col:21> 'int' 0
| |-EnumConstantDecl 0x55a8f7a48ce0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a8f7a49298 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a48cc0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55a8f7a48ca0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55a8f7a48d70 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a8f7a492b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a48d50 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55a8f7a48d30 <col:21> 'int' 16
| |-EnumConstantDecl 0x55a8f7a48e00 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a8f7a492c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a48de0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55a8f7a48dc0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55a8f7a48e90 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a8f7a492e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a48e70 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55a8f7a48e50 <col:19> 'int' EnumConstant 0x55a8f7a48ce0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55a8f7a48f20 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a8f7a492f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a48f00 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55a8f7a48ee0 <col:19> 'int' EnumConstant 0x55a8f7a48e00 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55a8f7a48ff0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a8f7a49310 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a48fd0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55a8f7a48fb0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55a8f7a48f70 <col:23> 'int' EnumConstant 0x55a8f7a48f20 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55a8f7a48f90 <col:40> 'int' 2
| |-EnumConstantDecl 0x55a8f7a490c0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a8f7a49328 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a8f7a490a0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55a8f7a49080 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55a8f7a49040 <col:23> 'int' EnumConstant 0x55a8f7a48f20 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55a8f7a49060 <col:40> 'int' 4
| `-EnumConstantDecl 0x55a8f7a49190 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55a8f7a49340 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a8f7a49170 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55a8f7a49150 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55a8f7a49110 <col:23> 'int' EnumConstant 0x55a8f7a48f20 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55a8f7a49130 <col:40> 'int' 8
|-CXXMethodDecl 0x55a8f7a49380 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55a8f7a49420 <col:68> "" ""
|-CXXMethodDecl 0x55a8f7a494b8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55a8f7a49558 <col:45> "" ""
|-CXXMethodDecl 0x55a8f7a495f0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55a8f7a49690 <col:57> "" ""
|-CXXMethodDecl 0x55a8f7a49728 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55a8f7a497c8 <col:45> "" ""
|-CXXMethodDecl 0x55a8f7a49860 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55a8f7a49900 <col:57> "" ""
|-CXXMethodDecl 0x55a8f7a49990 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55a8f7a49a30 <col:51> "" ""
|-CXXMethodDecl 0x55a8f7a49ac0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55a8f7a49b60 <col:63> "" ""
|-CXXMethodDecl 0x55a8f7a49bf0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55a8f7a49c90 <col:53> "" ""
|-CXXMethodDecl 0x55a8f7a49d20 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55a8f7a49dc0 <col:65> "" ""
|-CXXMethodDecl 0x55a8f7a49ed8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55a8f7a49e48 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55a8f7a49f80 <col:61> "" ""
|-CXXMethodDecl 0x55a8f7a4a118 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55a8f7a4a008 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55a8f7a4a080 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55a8f7a4a1c8 <col:67> "" ""
|-CXXMethodDecl 0x55a8f7a4a2e0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55a8f7a4a250 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a8f7a4a388 <col:63> "" ""
|-CXXMethodDecl 0x55a8f7a4a520 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55a8f7a4a410 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a8f7a4a488 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55a8f7a4a5d0 <col:69> "" ""
|-CXXMethodDecl 0x55a8f7a4a6e8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55a8f7a4a658 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a8f7a4a790 <col:63> "" ""
|-CXXMethodDecl 0x55a8f7a4ce68 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55a8f7a4cd58 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a8f7a4cdd0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a8f7a4cf18 <col:69> "" ""
|-CXXMethodDecl 0x55a8f7a4d030 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55a8f7a4cfa0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55a8f7a4d0d8 <col:62> "" ""
|-CXXMethodDecl 0x55a8f7a4d270 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55a8f7a4d160 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a8f7a4d1d8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55a8f7a4d320 <col:68> "" ""
|-CXXMethodDecl 0x55a8f7a4d438 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55a8f7a4d3a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a8f7a4d4e0 <col:63> "" ""
|-CXXMethodDecl 0x55a8f7a4d678 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55a8f7a4d568 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a8f7a4d5e0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55a8f7a4d728 <col:69> "" ""
|-CXXMethodDecl 0x55a8f7a4d7b8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55a8f7a4d858 <col:64> "" ""
|-CXXMethodDecl 0x55a8f7a4d8e8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55a8f7a4d988 <col:52> "" ""
|-CXXMethodDecl 0x55a8f7a4da18 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55a8f7a4dab8 <col:67> "" ""
|-CXXMethodDecl 0x55a8f7a4db48 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55a8f7a4dbe8 <col:55> "" ""
|-CXXMethodDecl 0x55a8f7a4dd00 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55a8f7a4dc70 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a8f7a4dda8 <col:58> "" ""
|-CXXMethodDecl 0x55a8f7a4df40 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55a8f7a4de30 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a8f7a4dea8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55a8f7a4dff0 <col:62> "" ""
|-CXXMethodDecl 0x55a8f7a4e108 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55a8f7a4e078 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a8f7a4e1b0 <col:58> "" ""
|-CXXMethodDecl 0x55a8f7a4e348 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55a8f7a4e238 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a8f7a4e2b0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55a8f7a4e3f8 <col:62> "" ""
|-CXXMethodDecl 0x55a8f7a4e510 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55a8f7a4e480 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55a8f7a4e5b8 <col:60> "" ""
|-CXXMethodDecl 0x55a8f7a4e750 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55a8f7a4e640 <col:34> col:37 'int'
| |-ParmVarDecl 0x55a8f7a4e6b8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55a8f7a4e800 <col:64> "" ""
|-CXXMethodDecl 0x55a8f7a4e918 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55a8f7a4e888 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a8f7a4e9c0 <col:58> "" ""
|-CXXMethodDecl 0x55a8f7a4eb58 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55a8f7a4ea48 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a8f7a4eac0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55a8f7a4ec08 <col:62> "" ""
|-CXXMethodDecl 0x55a8f7a4ed20 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55a8f7a4ec90 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55a8f7a4edc8 <col:59> "" ""
|-CXXMethodDecl 0x55a8f7a4ef60 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55a8f7a4ee50 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a8f7a4eec8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a8f7a4f010 <col:63> "" ""
|-AccessSpecDecl 0x55a8f7a4f080 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55a8f7a4f0a8 prev 0x55a8f7a442b0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a8f7a4f1a0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55a8f7a4f290 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55a8f7a4f3b8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55a8f7a4f538 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55a8f7a4f6b8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55a8f7a4f838 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55a8f7a60668 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a8f7a60ed8 <col:11>
| |-CXXDestructorDecl 0x55a8f7a60740 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55a8f7a60878 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55a8f7a60878
| | `-ParmVarDecl 0x55a8f7a60988 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55a8f7a60a28 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a8f7a60a28
| | `-ParmVarDecl 0x55a8f7a60b38 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55a8f7a638f8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a8f7a63a08 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55a8f7a63c88 <col:11>
| |   `-ReturnStmt 0x55a8f7a63c78 <col:11>
| |     `-UnaryOperator 0x55a8f7a63c60 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55a8f7a63c50 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55a8f7a63a78 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a8f7a63a78
|   `-ParmVarDecl 0x55a8f7a63b88 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55a8f7a4f8a0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a8f7a4f9b8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55a8f7a4fa58 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55a8f7a4fac0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55a8f7a4fb28 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55a8f7a4fb90 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55a8f7a4fbf0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55a8f7a4fcb0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55a8f7a4fd10 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55a8f7a4fd70 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55a8f7a60578 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55a8f7a4fa58 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55a8f7a60ee8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55a8f7a60f40 <col:12>
| |-CXXConstructorDecl 0x55a8f7a60ba8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55a8f7a60ba8
| | `-ParmVarDecl 0x55a8f7a60cb8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55a8f7a60d58 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55a8f7a60d58
| | `-ParmVarDecl 0x55a8f7a60e68 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55a8f7a62fe0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55a8f7a4fde8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55a8f7a4fe48 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55a8f7a4feb0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55a8f7a4ff18 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55a8f7a4ff80 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55a8f7a4ffe8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55a8f7a50048 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55a8f7a500a8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55a8f7a50110 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55a8f7a50198 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55a8f7a4fde8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55a8f7a60510 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55a8f7a50048 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55a8f7a60f50 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55a8f7a60fb0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55a8f7a50338 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55a8f7a50278 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55a8f7a50430 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55a8f7a50618 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55a8f7a50520 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55a8f7a508e8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55a8f7a506d0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a8f7a50748 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a8f7a507c0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7a50b08 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55a8f7a509b8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55a8f7a50a30 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55a8f7a590e8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55a8f7a50bc8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55a8f7a50c40 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55a8f7a50cb8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55a8f7a59240 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55a8f7a591b0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a8f7a59388 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55a8f7a592f8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55a8f7a59480 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a8f784a8b0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55a8f784a9c8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55a8f784aa68 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55a8f784aac8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55a8f784ab28 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55a8f784abd8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a8f784aee0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a8f784aff8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55a8f784b0a0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55a8f784b108 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55a8f784b198 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55a8f7851230 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a8f7851668 <col:12>
|-CXXConstructorDecl 0x55a8f7851338 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a8f7851448 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a8f784b0a0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55a8f7853bf0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55a8f7853bc0 <col:12> 'const char *const' lvalue .data 0x55a8f784b0a0
| |     `-DeclRefExpr 0x55a8f7853ba0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a8f7851448 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a8f784b108 'length' 'int'
| | `-ImplicitCastExpr 0x55a8f7853c80 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55a8f7853c50 <col:12> 'const int' lvalue .length 0x55a8f784b108
| |     `-DeclRefExpr 0x55a8f7853c30 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a8f7851448 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a8f784b198 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55a8f7853d10 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55a8f7853ce0 <col:12> 'String::memo_t *const' lvalue .memo 0x55a8f784b198
| |     `-DeclRefExpr 0x55a8f7853cc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a8f7851448 '' 'const String::rep_t &'
| `-CompoundStmt 0x55a8f7853d68 <col:12>
|-CXXConstructorDecl 0x55a8f78514e8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a8f78514e8
| `-ParmVarDecl 0x55a8f78515f8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55a8f7856b50 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a8f7862568 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a8f7862678 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55a8f7862b90 <col:12>
|   |-BinaryOperator 0x55a8f78629a8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55a8f7862960 <col:12> 'const char *' lvalue ->data 0x55a8f784b0a0
|   | | `-CXXThisExpr 0x55a8f7862950 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a8f7862990 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55a8f7862920 <col:12> 'const char *const' lvalue .data 0x55a8f784b0a0
|   |     `-DeclRefExpr 0x55a8f7862900 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a8f7862678 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55a8f7862a70 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55a8f7862a28 <col:12> 'int' lvalue ->length 0x55a8f784b108
|   | | `-CXXThisExpr 0x55a8f7862a18 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a8f7862a58 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55a8f78629e8 <col:12> 'const int' lvalue .length 0x55a8f784b108
|   |     `-DeclRefExpr 0x55a8f78629c8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a8f7862678 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55a8f7862b38 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55a8f7862af0 <col:12> 'String::memo_t *' lvalue ->memo 0x55a8f784b198
|   | | `-CXXThisExpr 0x55a8f7862ae0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a8f7862b20 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55a8f7862ab0 <col:12> 'String::memo_t *const' lvalue .memo 0x55a8f784b198
|   |     `-DeclRefExpr 0x55a8f7862a90 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a8f7862678 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55a8f7862b80 <col:12>
|     `-UnaryOperator 0x55a8f7862b68 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a8f7862b58 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55a8f78626e8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a8f78626e8
  `-ParmVarDecl 0x55a8f78627f8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a8f7841e20 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a8f7841f38 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55a8f7841fc8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55a8f7842008 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55a8f7517e00 'const char *'
|   `-QualType 0x55a8f7517351 'const char' const
|     `-BuiltinType 0x55a8f7517350 'char'
|-TypedefDecl 0x55a8f7842090 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55a8f7842060 'String::const_iterator' sugar
|   |-Typedef 0x55a8f7842008 'const_iterator'
|   `-PointerType 0x55a8f7517e00 'const char *'
|     `-QualType 0x55a8f7517351 'const char' const
|       `-BuiltinType 0x55a8f7517350 'char'
|-TypedefDecl 0x55a8f7842200 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55a8f7842170 'int (String::*)() const'
|   |-RecordType 0x55a8f7841eb0 'String'
|   | `-CXXRecord 0x55a8f7841e20 'String'
|   `-ParenType 0x55a8f7842110 'int () const' sugar
|     `-FunctionProtoType 0x55a8f7815ca0 'int () const' const cdecl
|       `-BuiltinType 0x55a8f75173b0 'int'
|-TypedefDecl 0x55a8f7842268 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55a8f766a6c0 'int64_t' sugar
|   |-Typedef 0x55a8f75802a0 'int64_t'
|   `-TypedefType 0x55a8f7559510 '__int64_t' sugar
|     |-Typedef 0x55a8f75590e8 '__int64_t'
|     `-BuiltinType 0x55a8f75173d0 'long'
|-TypedefDecl 0x55a8f78422d0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55a8f766a5e0 'uint64_t' sugar
|   |-Typedef 0x55a8f7580440 'uint64_t'
|   `-TypedefType 0x55a8f75595a0 '__uint64_t' sugar
|     |-Typedef 0x55a8f7559158 '__uint64_t'
|     `-BuiltinType 0x55a8f7517470 'unsigned long'
|-TypedefDecl 0x55a8f7842360 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55a8f7842330 'String::intmax_t' sugar
|   |-Typedef 0x55a8f7842268 'intmax_t'
|   `-TypedefType 0x55a8f766a6c0 'int64_t' sugar
|     |-Typedef 0x55a8f75802a0 'int64_t'
|     `-TypedefType 0x55a8f7559510 '__int64_t' sugar
|       |-Typedef 0x55a8f75590e8 '__int64_t'
|       `-BuiltinType 0x55a8f75173d0 'long'
|-TypedefDecl 0x55a8f78423f0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55a8f78423c0 'String::uintmax_t' sugar
|   |-Typedef 0x55a8f78422d0 'uintmax_t'
|   `-TypedefType 0x55a8f766a5e0 'uint64_t' sugar
|     |-Typedef 0x55a8f7580440 'uint64_t'
|     `-TypedefType 0x55a8f75595a0 '__uint64_t' sugar
|       |-Typedef 0x55a8f7559158 '__uint64_t'
|       `-BuiltinType 0x55a8f7517470 'unsigned long'
|-CXXConstructorDecl 0x55a8f78424b0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55a8f7842658 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55a8f7842598 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55a8f7842808 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55a8f7842748 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55a8f7842960 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55a8f78428d0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55a8f7842b78 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55a8f7842a28 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55a8f7842aa8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55a8f7842d98 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55a8f7842c48 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55a8f7842cc8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55a8f7842fb8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55a8f7842e68 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55a8f7842ee8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55a8f78431d8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55a8f7843088 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55a8f7843108 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55a8f7843368 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55a8f78432a0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55a8f78434e8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55a8f7843428 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55a8f7843678 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55a8f78435b0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55a8f78437d0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55a8f7843740 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55a8f7843928 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55a8f7843898 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55a8f7843a80 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55a8f78439f0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55a8f7843c08 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55a8f7843b48 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55a8f7843d98 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55a8f7843cd0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55a8f7843f28 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55a8f7843e60 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55a8f78440b8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55a8f7843ff0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55a8f78441b0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55a8f78442d8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55a8f7844458 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55a8f7844390 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55a8f78445a8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55a8f7844518 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55a8f7844660 <col:63> "" ""
|-CXXMethodDecl 0x55a8f78447a8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55a8f78446e8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55a8f78449b8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55a8f7844868 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55a8f78448e8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55a8f7844bd8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55a8f7844a80 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55a8f7844b00 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55a8f7844eb8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55a8f7844c98 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55a8f7844d18 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55a8f7850d00 <col:55> 'int' 10
| `-ParmVarDecl 0x55a8f7844d90 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a8f7850d20 <col:76> 'bool' true
|-CXXMethodDecl 0x55a8f7845198 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55a8f7844f80 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55a8f7845000 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55a8f7850d30 <col:56> 'int' 10
| `-ParmVarDecl 0x55a8f7845078 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a8f7850d50 <col:77> 'bool' true
|-CXXMethodDecl 0x55a8f78452a0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55a8f7845368 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55a8f7845430 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55a8f78454d0 <col:20>
| `-OptimizeNoneAttr 0x55a8f7845528 <col:30>
|-CXXConversionDecl 0x55a8f7845618 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55a8f78456e8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55a8f78457a8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55a8f7845898 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55a8f7845958 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55a8f7845ad8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55a8f7845a10 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55a8f7845c28 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55a8f7845b98 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55a8f7845d18 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55a8f7845dd8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55a8f7846028 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55a8f7845e90 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55a8f7845f10 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55a8f7846288 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55a8f78460f0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55a8f7846170 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55a8f7846358 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55a8f7846568 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55a8f7846410 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55a8f7846490 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55a8f7846788 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55a8f7846630 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55a8f78466b0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55a8f7846918 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55a8f7846850 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55a8f7846a08 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55a8f7846b78 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55a8f7846ab8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a8f7846d88 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55a8f7846c38 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55a8f7846cb8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55a8f7846fa0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55a8f7846e48 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55a8f7846ec0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55a8f7847130 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55a8f7847060 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a8f7847350 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55a8f78471f0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55a8f7847270 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55a8f78474a0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55a8f7847410 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55a8f7847678 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55a8f7847560 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55a8f78475e0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55a8f78477c8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55a8f7847738 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55a8f78479e0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55a8f7847880 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55a8f7847900 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55a8f7850d60 <col:39> 'int' 0
|-CXXMethodDecl 0x55a8f7847c00 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55a8f7847aa0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55a8f7847b20 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55a8f7850d80 <col:48> 'int' 0
|-CXXMethodDecl 0x55a8f7847de0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55a8f7847cc0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55a8f7847d40 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55a8f7850da0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55a8f7847eb0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55a8f7847f70 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55a8f7848030 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55a8f78480f0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55a8f78481b0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55a8f7848358 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55a8f7848260 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55a8f78484d8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55a8f7848410 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55a8f78486b0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55a8f7848598 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55a8f7848828 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55a8f7848768 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55a8f7848970 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55a8f78488e0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a8f7848ac0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55a8f7848a30 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55a8f7848c98 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55a8f7848b80 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55a8f7848c00 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55a8f7848e78 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55a8f7848d60 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55a8f7848de0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55a8f7848fc8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55a8f7848f38 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55a8f78491d8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55a8f7849088 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55a8f7849108 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55a8f7849338 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55a8f78492a0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55a8f7849490 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55a8f78493f8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55a8f7849538 <col:57> "" ""
|-CXXMethodDecl 0x55a8f7849648 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55a8f78495b8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55a8f7849798 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55a8f7849708 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55a8f7849918 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55a8f7849850 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55a8f78499e0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55a8f7849aa0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55a8f7849b60 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55a8f7849c00 <col:49> "" ""
|-CXXMethodDecl 0x55a8f7849c90 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55a8f7849d50 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55a8f7849e40 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55a8f7849f08 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55a8f7849fc8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55a8f784a088 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55a8f784a180 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55a8f784a248 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55a8f784a310 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55a8f784a4e8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55a8f784a3c8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55a8f784a448 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55a8f784a710 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55a8f784a5b0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55a8f784a630 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55a8f784a820 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55a8f784a888 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55a8f784a8b0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a8f784a9c8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55a8f784aa68 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55a8f784aac8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55a8f784ab28 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55a8f784abd8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55a8f784ac40 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55a8f784ae78 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55a8f784aec8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a8f784ae58 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55a8f784ad68 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55a8f784ad10 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55a8f784ad50 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55a8f784ad30 <col:32> 'int' 8
|-CXXRecordDecl 0x55a8f784aee0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a8f784aff8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55a8f784b0a0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55a8f784b108 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55a8f784b198 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55a8f7851230 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a8f7851668 <col:12>
| |-CXXConstructorDecl 0x55a8f7851338 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a8f7851448 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a8f784b0a0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55a8f7853bf0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55a8f7853bc0 <col:12> 'const char *const' lvalue .data 0x55a8f784b0a0
| | |     `-DeclRefExpr 0x55a8f7853ba0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a8f7851448 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a8f784b108 'length' 'int'
| | | `-ImplicitCastExpr 0x55a8f7853c80 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55a8f7853c50 <col:12> 'const int' lvalue .length 0x55a8f784b108
| | |     `-DeclRefExpr 0x55a8f7853c30 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a8f7851448 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a8f784b198 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55a8f7853d10 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55a8f7853ce0 <col:12> 'String::memo_t *const' lvalue .memo 0x55a8f784b198
| | |     `-DeclRefExpr 0x55a8f7853cc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a8f7851448 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55a8f7853d68 <col:12>
| |-CXXConstructorDecl 0x55a8f78514e8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a8f78514e8
| | `-ParmVarDecl 0x55a8f78515f8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55a8f7856b50 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55a8f7862568 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a8f7862678 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55a8f7862b90 <col:12>
| |   |-BinaryOperator 0x55a8f78629a8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55a8f7862960 <col:12> 'const char *' lvalue ->data 0x55a8f784b0a0
| |   | | `-CXXThisExpr 0x55a8f7862950 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a8f7862990 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55a8f7862920 <col:12> 'const char *const' lvalue .data 0x55a8f784b0a0
| |   |     `-DeclRefExpr 0x55a8f7862900 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a8f7862678 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55a8f7862a70 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55a8f7862a28 <col:12> 'int' lvalue ->length 0x55a8f784b108
| |   | | `-CXXThisExpr 0x55a8f7862a18 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a8f7862a58 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55a8f78629e8 <col:12> 'const int' lvalue .length 0x55a8f784b108
| |   |     `-DeclRefExpr 0x55a8f78629c8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a8f7862678 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55a8f7862b38 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55a8f7862af0 <col:12> 'String::memo_t *' lvalue ->memo 0x55a8f784b198
| |   | | `-CXXThisExpr 0x55a8f7862ae0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a8f7862b20 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55a8f7862ab0 <col:12> 'String::memo_t *const' lvalue .memo 0x55a8f784b198
| |   |     `-DeclRefExpr 0x55a8f7862a90 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a8f7862678 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55a8f7862b80 <col:12>
| |     `-UnaryOperator 0x55a8f7862b68 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55a8f7862b58 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55a8f78626e8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a8f78626e8
|   `-ParmVarDecl 0x55a8f78627f8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55a8f784b210 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55a8f784b458 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55a8f784b278 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55a8f784b2f8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55a8f784b370 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55a8f78511f0 <col:79, line:261:5>
|   |-BinaryOperator 0x55a8f7850e68 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55a8f7850e00 <col:2, col:5> 'const char *' lvalue .data 0x55a8f784b0a0
|   | | `-MemberExpr 0x55a8f7850dd0 <col:2> 'String::rep_t' lvalue ->_r 0x55a8f784b210
|   | |   `-CXXThisExpr 0x55a8f7850dc0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55a8f7850e50 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8f7850e30 <col:12> 'const char *' lvalue ParmVar 0x55a8f784b278 'data' 'const char *'
|   |-BinaryOperator 0x55a8f7850f30 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55a8f7850ec8 <col:2, col:5> 'int' lvalue .length 0x55a8f784b108
|   | | `-MemberExpr 0x55a8f7850e98 <col:2> 'String::rep_t' lvalue ->_r 0x55a8f784b210
|   | |   `-CXXThisExpr 0x55a8f7850e88 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55a8f7850f18 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a8f7850ef8 <col:14> 'int' lvalue ParmVar 0x55a8f784b2f8 'length' 'int'
|   `-IfStmt 0x55a8f78511d8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55a8f7851050 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55a8f7851038 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55a8f7851018 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55a8f7850ff8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55a8f7850f90 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55a8f784b198
|     |       | `-MemberExpr 0x55a8f7850f60 <col:7> 'String::rep_t' lvalue ->_r 0x55a8f784b210
|     |       |   `-CXXThisExpr 0x55a8f7850f50 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55a8f7850fe0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55a8f7850fc0 <col:17> 'String::memo_t *' lvalue ParmVar 0x55a8f784b370 'memo' 'String::memo_t *'
|     `-CallExpr 0x55a8f78511b0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55a8f7851198 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a8f78510a0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55a8f7839e88 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55a8f7851108 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a8f784aa68
|         `-ImplicitCastExpr 0x55a8f78510f0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55a8f78510d0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55a8f784b370 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55a8f784b708 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55a8f784b528 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55a8f784b5a8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55a8f784b620 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55a8f784b210 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55a8f7851678 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a8f7851808 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55a8f7851770 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55a8f78516e0 <col:2> '<bound member function type>' ->assign_memo 0x55a8f784b458
|     | `-ImplicitCastExpr 0x55a8f78517a8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55a8f78516d0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55a8f78517c0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a8f7851710 <col:14> 'const char *' lvalue ParmVar 0x55a8f784b528 'data' 'const char *'
|     |-ImplicitCastExpr 0x55a8f78517d8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55a8f7851730 <col:20> 'int' lvalue ParmVar 0x55a8f784b5a8 'length' 'int'
|     `-ImplicitCastExpr 0x55a8f78517f0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55a8f7851750 <col:28> 'String::memo_t *' lvalue ParmVar 0x55a8f784b620 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55a8f784b898 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55a8f784b7d8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55a8f7851a60 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55a8f78519e0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55a8f7851830 <col:2> '<bound member function type>' ->assign_memo 0x55a8f784b458
|     | `-CXXThisExpr 0x55a8f7851820 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55a8f7851a18 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55a8f78518b0 <col:14, col:19> 'const char *' lvalue .data 0x55a8f784b0a0
|     |   `-MemberExpr 0x55a8f7851880 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55a8f784b210
|     |     `-DeclRefExpr 0x55a8f7851860 <col:14> 'const String' lvalue ParmVar 0x55a8f784b7d8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55a8f7851a30 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55a8f7851930 <col:25, col:30> 'int' lvalue .length 0x55a8f784b108
|     |   `-MemberExpr 0x55a8f7851900 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55a8f784b210
|     |     `-DeclRefExpr 0x55a8f78518e0 <col:25> 'const String' lvalue ParmVar 0x55a8f784b7d8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55a8f7851a48 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55a8f78519b0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55a8f784b198
|         `-MemberExpr 0x55a8f7851980 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55a8f784b210
|           `-DeclRefExpr 0x55a8f7851960 <col:38> 'const String' lvalue ParmVar 0x55a8f784b7d8 'x' 'const String &'
|-CXXMethodDecl 0x55a8f784b960 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55a8f7852420 <col:31, line:278:5>
|   `-IfStmt 0x55a8f7852408 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55a8f7851b00 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55a8f7851ae8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55a8f7851ab8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55a8f784b198
|     |     `-MemberExpr 0x55a8f7851a88 <col:6> 'String::rep_t' lvalue ->_r 0x55a8f784b210
|     |       `-CXXThisExpr 0x55a8f7851a78 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55a8f78523e0 <col:15, line:277:2>
|       |-ParenExpr 0x55a8f7851fb0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55a8f7851f80 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55a8f7851c10 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55a8f7851bf8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55a8f7851be0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55a8f7851ba0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a8f784aa68
|       |   |       `-ImplicitCastExpr 0x55a8f7851b88 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55a8f7851b58 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55a8f784b198
|       |   |           `-MemberExpr 0x55a8f7851b28 <col:27> 'String::rep_t' lvalue ->_r 0x55a8f784b210
|       |   |             `-CXXThisExpr 0x55a8f7851b18 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55a8f7851c70 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55a8f7851c50 <col:54> 'int' 0
|       |   `-CallExpr 0x55a8f7851ee0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55a8f7851ec8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55a8f7851e48 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a8f75b0ed0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55a8f7851f20 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55a8f7851d58 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55a8f7851f38 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55a8f7851d88 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55a8f7851f50 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55a8f7851dc0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55a8f7851f68 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55a8f7851e30 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55a8f7851e18 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55a8f7851de0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55a8f7852300 <line:274:6, line:275:22>
|       | |-CallExpr 0x55a8f78521c0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55a8f78521a8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55a8f7852120 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55a8f783b2d0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55a8f78520f0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a8f784aa68
|       | |   `-ImplicitCastExpr 0x55a8f78520d8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55a8f78520a8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55a8f784b198
|       | |       `-MemberExpr 0x55a8f7852078 <col:40> 'String::rep_t' lvalue ->_r 0x55a8f784b210
|       | |         `-CXXThisExpr 0x55a8f7852068 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55a8f78522c0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55a8f78522a8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55a8f78521e8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55a8f7850140 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55a8f78522e8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55a8f7852248 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55a8f784b198
|       |       `-MemberExpr 0x55a8f7852218 <col:15> 'String::rep_t' lvalue ->_r 0x55a8f784b210
|       |         `-CXXThisExpr 0x55a8f7852208 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55a8f78523c0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55a8f7852358 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55a8f784b198
|         | `-MemberExpr 0x55a8f7852328 <col:6> 'String::rep_t' lvalue ->_r 0x55a8f784b210
|         |   `-CXXThisExpr 0x55a8f7852318 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55a8f78523a8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55a8f7852388 <col:16> 'int' 0
|-CXXMethodDecl 0x55a8f784bbf8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55a8f784ba18 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55a8f784ba98 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55a8f784bb10 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55a8f784bcd0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55a8f784bf20 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55a8f784bd88 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55a8f784be08 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55a8f784be80 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55a8f784c108 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55a8f784bff0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55a8f784c070 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55a8f784c208 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55a8f78524f8 <col:41, line:286:5>
|   `-ReturnStmt 0x55a8f78524e8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55a8f78524b8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55a8f7852480 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55a8f7852468 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55a8f7852448 <col:46> 'int' 1
|-CXXMethodDecl 0x55a8f784c4a8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55a8f784c2c0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55a8f784c340 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55a8f784c3c0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55a8f7850140 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55a8f784c570 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55a8f7850210 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55a8f78503e0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55a8f78502c8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55a8f7850348 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55a8f78504a0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55a8f7850568 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55a8f7850668 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55a8f78506e0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55a8f7850758 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55a8f78507c0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55a8f78508c0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55a8f7850910 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a8f78508a0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55a8f7850880 <col:22> 'int' 14
|-CXXMethodDecl 0x55a8f7850b28 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55a8f7850940 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55a8f78509c0 <col:38> col:41 'int'
| `-ParmVarDecl 0x55a8f7850a40 <col:43> col:46 'int'
|-FriendDecl 0x55a8f7850c30 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55a8f7850cc0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
