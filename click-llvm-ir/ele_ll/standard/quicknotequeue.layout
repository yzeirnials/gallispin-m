
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e5e9688 prev 0x56194e5e0e28 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e5e9780 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x56194e5e9810 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x56194e5e9888 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x56194e5e9948 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x56194e5e9a10 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x56194e5e9b88 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x56194e5e9ac0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x56194e5e9c30 <col:24>
| `-OptimizeNoneAttr 0x56194e5e9c88 <col:34>
|-CXXMethodDecl 0x56194e5e9cd0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x56194e5e9f88 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x56194e5e9d80 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56194e5e9df8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x56194e5e9e78 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x56194e5ea040 <line:229:7, col:14> col:7 private
|-FieldDecl 0x56194e5ea078 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x56194e5ea0e0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x56194e5ea168 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x56194e5ea488 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x56194e5ea220 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56194e5ea298 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x56194e5ea310 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x56194e5ea390 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x56194e5ea5a0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x56194e5f1f18 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56194e5f1f18
| `-ParmVarDecl 0x56194e5f2028 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x56194e5f20c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56194e5f20c8
| `-ParmVarDecl 0x56194e5f21d8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x56194e6d3e60 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e5dc6a0 prev 0x56194e5dc420 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56194e5dc798 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x56194e5dc828 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x56194e5dc888 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x56194e5dc978 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x56194e5dca78 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x56194e5dcc48 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x56194e5dcaf8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x56194e5dcb70 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x56194e5dcdd8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x56194e5dcd10 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x56194e5dce80 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x56194e5dcfb8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x56194e5dcef0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x56194e5dd158 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x56194e5dd098 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x56194e5dd2f8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x56194e5dd238 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x56194e5dd3a0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x56194e5dd4a0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x56194e5dd580 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5dd480 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x56194e5dd460 <col:26> 'int' 1
| `-EnumConstantDecl 0x56194e5dd530 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x56194e5dd598 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e5dd510 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x56194e5dd4f0 <col:44> 'int' 2
|-CXXMethodDecl 0x56194e5dd6e0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x56194e5dd5c8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56194e5dd648 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x56194e5dd838 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x56194e5dd7a8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x56194e5dda78 <line:48:5, col:86> col:45 used checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x56194e5dd8f8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x56194e5dd970 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x56194e5ddb28 <col:20>
| `-OptimizeNoneAttr 0x56194e5ddb80 <col:30>
|-CXXMethodDecl 0x56194e5ddc88 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x56194e5ddbc0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x56194e5ddd30 <col:20>
| `-OptimizeNoneAttr 0x56194e5ddd88 <col:30>
|-CXXMethodDecl 0x56194e5dddd8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x56194e5ddea0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x56194e5ddfb8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x56194e5de040 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x56194e5de0c8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x56194e5de150 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x56194e5de1d8 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x56194e5de268 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x56194e5de328 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x56194e5de3b0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x56194e5de438 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x56194e5de4c0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x56194e5de548 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x56194e5de5d0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x56194e5de660 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x56194e5de720 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x56194e5de7b0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x56194e5de900 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x56194e5de868 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x56194e5dea90 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x56194e5de9c0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x56194e5ded40 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x56194e5deb48 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x56194e5debc8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x56194e5dec48 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x56194e5dedf8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x56194e5def00 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56194e5df190 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5deee0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x56194e5deec0 <col:33> 'int' 0
| |-EnumConstantDecl 0x56194e5def90 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56194e5df1a8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5def70 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x56194e5def50 <col:32> 'int' 20
| |-EnumConstantDecl 0x56194e5df020 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56194e5df1c0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5df000 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x56194e5defe0 <col:38> 'int' 90
| |-EnumConstantDecl 0x56194e5df0b0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56194e5df1d8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5df090 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x56194e5df070 <col:35> 'int' 100
| `-EnumConstantDecl 0x56194e5df140 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x56194e5df1f0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e5df120 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x56194e5df100 <col:32> 'int' 2000
|-CXXMethodDecl 0x56194e5df230 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x56194e5df670 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56194e5df4e0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x56194e5df558 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56194e5df740 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x56194e5df8c0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x56194e5df7f0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56194e5dfac8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56194e5df978 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x56194e5df9f0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56194e5dfbc8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x56194e5dfc68 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x56194e5dfd30 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x56194e5dfdc0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x56194e5dfff0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5dfda0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x56194e5dfd80 <col:36> 'int' EnumConstant 0x56194e5dfd30 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x56194e5dfe10 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56194e5dfe60 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56194e5dfeb0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56194e5dff00 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56194e5dff50 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x56194e5dffa0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x56194e5e00d8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x56194e5e0018 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x56194e5e01a0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x56194e5e0260 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x56194e5e0320 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x56194e5e03e0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x56194e5e04f8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x56194e5e05c0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x56194e5e0740 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x56194e5e0670 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x56194e5e0868 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56194e5e0a68 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x56194e5e0918 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x56194e5e0998 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x56194e5ee3b8 <col:54, line:127:5>
|   |-ParenExpr 0x56194e5ee268 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x56194e5ee238 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5edf28 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56194e5edf00 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x56194e5edee8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x56194e5eded0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x56194e5edea0 <col:31> 'Router *' lvalue ->_router 0x56194e5ebd80
|   |   |         `-CXXThisExpr 0x56194e5ede90 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56194e5edf88 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5edf68 <col:48> 'int' 0
|   |   `-CallExpr 0x56194e5ee198 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x56194e5ee180 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5ee160 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5ee1d8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5edff8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x56194e5ee1f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5ee018 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x56194e5ee208 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5ee050 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x56194e5ee220 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5ee148 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5ee130 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5ee0e8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x56194e5ee300 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x56194e5ee298 <col:9> 'Router *' lvalue ->_router 0x56194e5ebd80
|   | | `-CXXThisExpr 0x56194e5ee288 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x56194e5ee2e8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56194e5ee2c8 <col:19> 'Router *' lvalue ParmVar 0x56194e5e0918 'r' 'Router *'
|   `-BinaryOperator 0x56194e5ee398 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x56194e5ee330 <col:9> 'int' lvalue ->_eindex 0x56194e5ebde8
|     | `-CXXThisExpr 0x56194e5ee320 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x56194e5ee380 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x56194e5ee360 <col:19> 'int' lvalue ParmVar 0x56194e5e0998 'eindex' 'int'
|-CXXMethodDecl 0x56194e5e0bf0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x56194e5e0b28 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x56194e5e0cc0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x56194e5e0d88 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x56194e5e0e28 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x56194e5e1078 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x56194e5e0ef0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x56194e5e0f70 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x56194e5e1128 <col:20>
| `-OptimizeNoneAttr 0x56194e5e1180 <col:30>
|-CXXMethodDecl 0x56194e5e1288 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56194e5e11c0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x56194e5e1330 <col:20>
| `-OptimizeNoneAttr 0x56194e5e1388 <col:30>
|-CXXMethodDecl 0x56194e5e1458 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56194e5e13c8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x56194e5e1500 <col:20>
| `-OptimizeNoneAttr 0x56194e5e1558 <col:30>
|-CXXMethodDecl 0x56194e5e16e8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x56194e5e1590 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x56194e5e1610 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x56194e5e1878 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56194e5e17b0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56194e5e19c8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56194e5e1938 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56194e5e1b18 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56194e5e1a88 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56194e5e1c68 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56194e5e1bd8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56194e5e1f28 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x56194e5e1d20 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x56194e5e1da0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x56194e5e1e48 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x56194e5e2000 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x56194e5e20c0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x56194e5e2390 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56194e5e2240 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x56194e5e22b8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x56194e5e24b8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x56194e5e2690 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x56194e5e2570 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x56194e5e25f0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x56194e5e2878 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x56194e5e2758 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x56194e5e27d8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x56194e5e2be8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56194e5e2938 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56194e5e29b0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56194e5e2a30 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56194e5ed9a0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56194e5ed980 <col:106> 'int' 0
| `-ParmVarDecl 0x56194e5e2aa8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56194e5ed9d8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56194e5ed9b8 <col:126> 'int' 0
|-CXXMethodDecl 0x56194e5e2f88 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56194e5e2cb8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56194e5e2d50 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56194e5e2dd0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x56194e5e2e48 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56194e5eda10 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56194e5ed9f0 <col:114> 'int' 0
|-CXXMethodDecl 0x56194e5e3318 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56194e5e3060 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x56194e5e30d8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56194e5e3158 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x56194e5eda28 <col:96> 'int' 0
| `-ParmVarDecl 0x56194e5e31d0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56194e5eda68 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56194e5eda48 <col:116> 'int' 0
|-CXXMethodDecl 0x56194e5e3698 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56194e5e33e8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56194e5e3460 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56194e5e34e0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56194e5edaa0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56194e5eda80 <col:109> 'int' 0
| `-ParmVarDecl 0x56194e5e3558 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56194e5edad8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56194e5edab8 <col:129> 'int' 0
|-CXXMethodDecl 0x56194e5e3a18 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56194e5e3768 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56194e5e37e0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56194e5e3860 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x56194e5e38d8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56194e5edb10 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56194e5edaf0 <col:117> 'int' 0
|-CXXMethodDecl 0x56194e5e3da8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56194e5e3af0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e3b68 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56194e5e3be8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x56194e5edb28 <col:99> 'int' 0
| `-ParmVarDecl 0x56194e5e3c60 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56194e5edb68 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56194e5edb48 <col:119> 'int' 0
|-CXXMethodDecl 0x56194e5e41c8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x56194e5e3e78 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56194e5e3ef8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56194e5e3f70 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56194e5e3ff0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56194e5edba0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56194e5edb80 <col:108> 'int' 0
| `-ParmVarDecl 0x56194e5e4070 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x56194e5edbd8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x56194e5edbb8 <col:141> 'int' 0
|-CXXMethodDecl 0x56194e5e45e8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56194e5e42a0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56194e5e4320 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56194e5e4398 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56194e5e4418 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x56194e5e4498 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56194e5edbf0 <col:121> 'int' 0
|-CXXMethodDecl 0x56194e5e4a18 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56194e5e46c8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x56194e5e4748 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x56194e5e47c0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56194e5e4840 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x56194e5edc10 <col:98> 'int' 0
| `-ParmVarDecl 0x56194e5e48c0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56194e5edc30 <col:123> 'int' 0
|-CXXMethodDecl 0x56194e5e4ce0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x56194e5e4af0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56194e5e4b70 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x56194e5e4bf0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x56194e5edc50 <col:80> 'int' 0
|-EnumDecl 0x56194e5e4d98 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x56194e5e4ea0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56194e5e5130 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5e4e80 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x56194e5e4e60 <col:42> 'int' 1
| |-EnumConstantDecl 0x56194e5e4f30 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56194e5e5148 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5e4f10 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x56194e5e4ef0 <col:40> 'int' 2
| |-EnumConstantDecl 0x56194e5e4fc0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56194e5e5160 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5e4fa0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x56194e5e4f80 <col:44> 'int' 4
| |-EnumConstantDecl 0x56194e5e5050 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56194e5e5178 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5e5030 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x56194e5e5010 <col:36> 'int' 7
| `-EnumConstantDecl 0x56194e5e50e0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x56194e5e5190 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e5e50c0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x56194e5e50a0 <col:34> 'int' 6
|-CXXMethodDecl 0x56194e5e5448 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x56194e5e51b8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x56194e5e5258 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x56194e5e52d8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x56194e5e5350 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x56194e5edd08 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56194e5edcf0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x56194e5edcd8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56194e5edcb8 <col:98, col:105> 'String' (CXXTemporary 0x56194e5edcb8)
|           `-CXXTemporaryObjectExpr 0x56194e5edc80 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x56194e5e56e8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x56194e5e5518 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56194e5e5590 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x56194e5e5608 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56194e5eddb8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56194e5edda0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56194e5edd88 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56194e5edd68 <col:94, col:101> 'String' (CXXTemporary 0x56194e5edd68)
| |         `-CXXTemporaryObjectExpr 0x56194e5edd30 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x56194e5ee5a0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x56194e5ee518 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x56194e5ee4e8 <col:9> '<bound member function type>' ->add_task_handlers 0x56194e5e5448
|     | `-CXXThisExpr 0x56194e5ee4d8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56194e5ee558 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56194e5ee458 <col:27> 'Task *' lvalue ParmVar 0x56194e5e5518 'task' 'Task *'
|     |-ImplicitCastExpr 0x56194e5ee570 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x56194e5ee478 <col:33> 'NotifierSignal *' lvalue ParmVar 0x56194e5e5590 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x56194e5ee588 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56194e5ee498 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56194e5e50e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56194e5ee4b8 <col:62> 'const String' lvalue ParmVar 0x56194e5e5608 'prefix' 'const String &'
|-CXXMethodDecl 0x56194e5e58f8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x56194e5e57b0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56194e5e5828 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56194e5ede68 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56194e5ede50 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56194e5ede38 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56194e5ede18 <col:70, col:77> 'String' (CXXTemporary 0x56194e5ede18)
| |         `-CXXTemporaryObjectExpr 0x56194e5edde0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x56194e5ee778 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x56194e5ee6f0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x56194e5ee6c0 <col:9> '<bound member function type>' ->add_task_handlers 0x56194e5e5448
|     | `-CXXThisExpr 0x56194e5ee6b0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56194e5ee730 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56194e5ee630 <col:27> 'Task *' lvalue ParmVar 0x56194e5e57b0 'task' 'Task *'
|     |-ImplicitCastExpr 0x56194e5ee748 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x56194e5ee650 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x56194e5ee760 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56194e5ee670 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56194e5e50e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56194e5ee690 <col:57> 'const String' lvalue ParmVar 0x56194e5e5828 'prefix' 'const String &'
|-CXXMethodDecl 0x56194e5e5bd8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x56194e5e59c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e5a40 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e5ab8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x56194e5e5e88 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x56194e5e5ca8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e5d28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e5da8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x56194e5e6178 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56194e5e5f58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e5fd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e6050 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x56194e5e6428 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x56194e5e6248 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e62c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e6348 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x56194e5e66d8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x56194e5e64f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e6578 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e65f8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x56194e5e6988 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x56194e5e67a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e6828 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e68a0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x56194e5e6c38 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x56194e5e6a58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e6ad8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e6b58 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x56194e5e6f48 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x56194e5e6d60 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e6de0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e6e60 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x56194e5e7228 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x56194e5e7018 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e7098 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e7140 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x56194e5e7508 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x56194e5e72f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e7378 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e7420 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x56194e5e7770 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56194e5e75d8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56194e5e7658 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56194e5e76d0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x56194e5e7a18 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x56194e5e7840 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56194e5e78c0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56194e5e7938 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x56194e5e7cc8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x56194e5e7ae8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e7b68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e7be8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x56194e5e7f78 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x56194e5e7d98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e7e18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e7e90 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x56194e5e8228 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x56194e5e8048 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e80c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e8140 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x56194e5e84f8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x56194e5e82f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e8378 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56194e5e8418 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x56194e5e8828 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x56194e5e85c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56194e5e8648 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x56194e5e86c0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x56194e5e8738 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56194e5ede80 <col:93> 'bool' false
|-CXXMethodDecl 0x56194e5e8a10 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56194e5e88f8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x56194e5e8978 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x56194e5e8be8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56194e5e8ad0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x56194e5e8b50 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x56194e5e8ec8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56194e5e8ca8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x56194e5e8d20 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x56194e5e8da0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x56194e5e8e18 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x56194e5e91b8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56194e5e8f98 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x56194e5e9010 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x56194e5e9090 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x56194e5e9108 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x56194e5e93f0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x56194e5e9290 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x56194e5e9310 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x56194e5e95d8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x56194e5e94b8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x56194e5e9538 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x56194e5e9688 prev 0x56194e5e0e28 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56194e5e9780 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x56194e5e9810 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x56194e5e9888 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x56194e5e9948 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x56194e5e9a10 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x56194e5e9b88 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x56194e5e9ac0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x56194e5e9c30 <col:24>
| | `-OptimizeNoneAttr 0x56194e5e9c88 <col:34>
| |-CXXMethodDecl 0x56194e5e9cd0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x56194e5e9f88 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x56194e5e9d80 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56194e5e9df8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x56194e5e9e78 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x56194e5ea040 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x56194e5ea078 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x56194e5ea0e0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x56194e5ea168 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x56194e5ea488 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x56194e5ea220 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56194e5ea298 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x56194e5ea310 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x56194e5ea390 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x56194e5ea5a0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x56194e5f1f18 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56194e5f1f18
| | `-ParmVarDecl 0x56194e5f2028 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x56194e5f20c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56194e5f20c8
| | `-ParmVarDecl 0x56194e5f21d8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x56194e6d3e60 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56194e5ea618 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x56194e5ea6b8 <col:38> "" ""
|-CXXMethodDecl 0x56194e5ea748 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x56194e5ea7e8 <col:44> "" ""
|-AccessSpecDecl 0x56194e5ea858 <line:260:3, col:10> col:3 private
|-EnumDecl 0x56194e5ea880 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x56194e5ea980 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x56194e5ea9d0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e5ea960 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x56194e5ea940 <col:27> 'int' 4
|-FieldDecl 0x56194e5eaa88 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x56194e5eac38 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x56194e5eacf0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x56194e5ebd80 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x56194e5ebde8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x56194e5ebf38 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x56194e5ebe78 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x56194e5ec0e8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x56194e5ebff8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x56194e5ec2c8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x56194e5ec1a8 <col:20> col:23 'int'
| `-ParmVarDecl 0x56194e5ec228 <col:25> col:28 'int'
|-CXXMethodDecl 0x56194e5ec570 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x56194e5ec390 <col:23> col:26 'int'
| |-ParmVarDecl 0x56194e5ec410 <col:28> col:31 'int'
| `-ParmVarDecl 0x56194e5ec488 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x56194e5ec628 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x56194e5ec6f0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x56194e5ec740 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x56194e5ec790 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x56194e5ec970 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x56194e5ec820 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x56194e5ec898 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56194e5ecc18 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x56194e5eca38 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x56194e5ecab8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x56194e5ecb30 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x56194e5ece38 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x56194e5ecce8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x56194e5ecd68 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x56194e5ed170 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x56194e5ecef8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x56194e5ecf78 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x56194e5ecff0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x56194e5ed070 <col:57> col:60 'int'
|-CXXMethodDecl 0x56194e5ed358 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56194e5ed240 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56194e5ed2c0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x56194e5ed4a8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x56194e5ed418 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x56194e5ed828 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x56194e5ed568 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x56194e5ed5e8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x56194e5ed660 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x56194e5ed6e0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x56194e5ed940 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Storage
         0 |   Storage::index_type _capacity
         4 |   volatile Storage::index_type _head
         8 |   volatile Storage::index_type _tail
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e6b27d8 <../dummy_inc/click/standard/storage.hh:9:1, line:54:1> line:9:7 referenced class Storage definition
|-DefinitionData pass_in_registers trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e6b28f8 <col:1, col:7> col:7 implicit referenced class Storage
|-AccessSpecDecl 0x56194e6b2988 <col:17, col:23> col:17 public
|-TypedefDecl 0x56194e6b29c0 <line:11:5, col:22> col:22 referenced index_type 'uint32_t':'unsigned int'
| `-TypedefType 0x56194e1d0270 'uint32_t' sugar
|   |-Typedef 0x56194e0e23d8 'uint32_t'
|   `-TypedefType 0x56194e0bb480 '__uint32_t' sugar
|     |-Typedef 0x56194e0bb078 '__uint32_t'
|     `-BuiltinType 0x56194e079450 'unsigned int'
|-TypedefDecl 0x56194e6b2a28 <line:12:5, col:21> col:21 referenced signed_index_type 'int32_t':'int'
| `-TypedefType 0x56194e1d0350 'int32_t' sugar
|   |-Typedef 0x56194e0e2238 'int32_t'
|   `-TypedefType 0x56194e0bb3f0 '__int32_t' sugar
|     |-Typedef 0x56194e0bb008 '__int32_t'
|     `-BuiltinType 0x56194e0793b0 'int'
|-VarDecl 0x56194e6b2ab0 <line:13:5, col:59> col:29 referenced invalid_index 'const Storage::index_type':'const unsigned int' static cinit
| `-CStyleCastExpr 0x56194e6b2b78 <col:45, col:59> 'Storage::index_type':'unsigned int' <NoOp>
|   `-ImplicitCastExpr 0x56194e6b2b60 <col:58, col:59> 'Storage::index_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|     `-UnaryOperator 0x56194e6b2b38 <col:58, col:59> 'int' prefix '-'
|       `-IntegerLiteral 0x56194e6b2b18 <col:59> 'int' 1
|-CXXConstructorDecl 0x56194e6b2c60 <line:15:5, col:38> col:5 Storage 'void ()'
| |-CXXCtorInitializer Field 0x56194e6b44b0 '_head' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x56194e6b45b8 <col:23> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56194e6b4578 <col:23> 'int' 0
| |-CXXCtorInitializer Field 0x56194e6b4510 '_tail' 'volatile Storage::index_type':'volatile unsigned int'
| | `-ImplicitCastExpr 0x56194e6b4638 <col:33> 'volatile Storage::index_type':'volatile unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56194e6b45f8 <col:33> 'int' 0
| `-CompoundStmt 0x56194e6b4688 <col:36, col:38>
|-CXXConversionDecl 0x56194e6b2d68 <line:17:5, col:52> col:5 operator bool 'bool () const'
| `-CompoundStmt 0x56194e6b4778 <col:27, col:52>
|   `-ReturnStmt 0x56194e6b4768 <col:29, col:45>
|     `-BinaryOperator 0x56194e6b4748 <col:36, col:45> 'bool' '!='
|       |-ImplicitCastExpr 0x56194e6b4718 <col:36> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x56194e6b46a8 <col:36> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x56194e6b44b0
|       |   `-CXXThisExpr 0x56194e6b4698 <col:36> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x56194e6b4730 <col:45> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x56194e6b46e8 <col:45> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x56194e6b4510
|           `-CXXThisExpr 0x56194e6b46d8 <col:45> 'const Storage *' implicit this
|-CXXMethodDecl 0x56194e6b2e38 <line:18:5, col:49> col:10 empty 'bool () const'
| `-CompoundStmt 0x56194e6b4870 <col:24, col:49>
|   `-ReturnStmt 0x56194e6b4860 <col:26, col:42>
|     `-BinaryOperator 0x56194e6b4840 <col:33, col:42> 'bool' '=='
|       |-ImplicitCastExpr 0x56194e6b4810 <col:33> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       | `-MemberExpr 0x56194e6b47a0 <col:33> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x56194e6b44b0
|       |   `-CXXThisExpr 0x56194e6b4790 <col:33> 'const Storage *' implicit this
|       `-ImplicitCastExpr 0x56194e6b4828 <col:42> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x56194e6b47e0 <col:42> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x56194e6b4510
|           `-CXXThisExpr 0x56194e6b47d0 <col:42> 'const Storage *' implicit this
|-CXXMethodDecl 0x56194e6b2f00 <line:19:5, col:16> col:9 size 'int () const'
|-CXXMethodDecl 0x56194e6b3140 <line:20:5, col:48> col:9 used size 'int (Storage::index_type, Storage::index_type) const'
| |-ParmVarDecl 0x56194e6b2fb0 <col:14, col:25> col:25 head 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x56194e6b3028 <col:31, col:42> col:42 tail 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x56194e6b3218 <line:21:5, col:46> col:9 used capacity 'int () const'
| `-CompoundStmt 0x56194e6b4908 <col:26, col:46>
|   `-ReturnStmt 0x56194e6b48f8 <col:28, col:35>
|     `-ImplicitCastExpr 0x56194e6b48e0 <col:35> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x56194e6b48c8 <col:35> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x56194e6b4898 <col:35> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x56194e6b4428
|           `-CXXThisExpr 0x56194e6b4888 <col:35> 'const Storage *' implicit this
|-CXXMethodDecl 0x56194e6b3308 <line:23:5, col:45> col:16 used head 'Storage::index_type () const'
| `-CompoundStmt 0x56194e6b4988 <col:29, col:45>
|   `-ReturnStmt 0x56194e6b4978 <col:31, col:38>
|     `-ImplicitCastExpr 0x56194e6b4960 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56194e6b4930 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_head 0x56194e6b44b0
|         `-CXXThisExpr 0x56194e6b4920 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x56194e6b33c8 <line:24:5, col:45> col:16 used tail 'Storage::index_type () const'
| `-CompoundStmt 0x56194e6b4a08 <col:29, col:45>
|   `-ReturnStmt 0x56194e6b49f8 <col:31, col:38>
|     `-ImplicitCastExpr 0x56194e6b49e0 <col:38> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56194e6b49b0 <col:38> 'const volatile Storage::index_type':'const volatile unsigned int' lvalue ->_tail 0x56194e6b4510
|         `-CXXThisExpr 0x56194e6b49a0 <col:38> 'const Storage *' implicit this
|-CXXMethodDecl 0x56194e6b3568 <line:26:5, line:28:5> line:26:16 used next_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x56194e6b3478 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x56194e6b4bf8 <col:43, line:28:5>
|   `-ReturnStmt 0x56194e6b4be8 <line:27:2, col:32>
|     `-ParenExpr 0x56194e6b4bc8 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x56194e6b4b98 <col:10, col:31> 'unsigned int'
|         |-BinaryOperator 0x56194e6b4ab0 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x56194e6b4a80 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56194e6b4a20 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x56194e6b3478 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x56194e6b4a98 <col:13> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         |   `-MemberExpr 0x56194e6b4a50 <col:13> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x56194e6b4428
|         |     `-CXXThisExpr 0x56194e6b4a40 <col:13> 'const Storage *' implicit this
|         |-BinaryOperator 0x56194e6b4b40 <col:25, col:27> 'unsigned int' '+'
|         | |-ImplicitCastExpr 0x56194e6b4b10 <col:25> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56194e6b4ad0 <col:25> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x56194e6b3478 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x56194e6b4b28 <col:27> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x56194e6b4af0 <col:27> 'int' 1
|         `-ImplicitCastExpr 0x56194e6b4b80 <col:31> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x56194e6b4b60 <col:31> 'int' 0
|-CXXMethodDecl 0x56194e6b36b0 <line:29:5, line:31:5> line:29:16 used prev_i 'Storage::index_type (Storage::index_type) const'
| |-ParmVarDecl 0x56194e6b3620 <col:23, col:34> col:34 used i 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x56194e6b4de8 <col:43, line:31:5>
|   `-ReturnStmt 0x56194e6b4dd8 <line:30:2, col:32>
|     `-ParenExpr 0x56194e6b4db8 <col:9, col:32> 'unsigned int'
|       `-ConditionalOperator 0x56194e6b4d88 <col:10, col:23> 'unsigned int'
|         |-BinaryOperator 0x56194e6b4c80 <col:10, col:13> 'bool' '!='
|         | |-ImplicitCastExpr 0x56194e6b4c50 <col:10> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56194e6b4c10 <col:10> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x56194e6b3620 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x56194e6b4c68 <col:13> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x56194e6b4c30 <col:13> 'int' 0
|         |-BinaryOperator 0x56194e6b4d10 <col:17, col:19> 'unsigned int' '-'
|         | |-ImplicitCastExpr 0x56194e6b4ce0 <col:17> 'Storage::index_type':'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56194e6b4ca0 <col:17> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x56194e6b3620 'i' 'Storage::index_type':'unsigned int'
|         | `-ImplicitCastExpr 0x56194e6b4cf8 <col:19> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x56194e6b4cc0 <col:19> 'int' 1
|         `-ImplicitCastExpr 0x56194e6b4d70 <col:23> 'Storage::index_type':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x56194e6b4d40 <col:23> 'const Storage::index_type':'const unsigned int' lvalue ->_capacity 0x56194e6b4428
|             `-CXXThisExpr 0x56194e6b4d30 <col:23> 'const Storage *' implicit this
|-CXXMethodDecl 0x56194e6b3828 <line:34:5, col:54> col:10 set_capacity 'void (Storage::index_type)'
| |-ParmVarDecl 0x56194e6b3768 <col:23, col:34> col:34 used c 'Storage::index_type':'unsigned int'
| `-CompoundStmt 0x56194e6b4e98 <col:37, col:54>
|   `-BinaryOperator 0x56194e6b4e78 <col:39, col:51> 'Storage::index_type':'unsigned int' lvalue '='
|     |-MemberExpr 0x56194e6b4e10 <col:39> 'Storage::index_type':'unsigned int' lvalue ->_capacity 0x56194e6b4428
|     | `-CXXThisExpr 0x56194e6b4e00 <col:39> 'Storage *' implicit this
|     `-ImplicitCastExpr 0x56194e6b4e60 <col:51> 'Storage::index_type':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56194e6b4e40 <col:51> 'Storage::index_type':'unsigned int' lvalue ParmVar 0x56194e6b3768 'c' 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x56194e6b3970 <line:35:5, col:38> col:17 used set_head 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x56194e6b38e0 <col:26, col:37> col:37 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x56194e6b3ab8 <line:36:5, col:38> col:17 used set_tail 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x56194e6b3a28 <col:26, col:37> col:37 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x56194e6b3c00 <line:37:5, col:46> col:17 used set_head_release 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x56194e6b3b70 <col:34, col:45> col:45 h 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x56194e6b3d48 <line:38:5, col:46> col:17 set_tail_acquire 'void (Storage::index_type)' inline
| `-ParmVarDecl 0x56194e6b3cb8 <col:34, col:45> col:45 t 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x56194e6b3e38 <line:39:5, col:43> col:23 reserve_tail_atomic 'Storage::index_type ()' inline
|-CXXMethodDecl 0x56194e6b40d8 <line:41:5, line:43:35> line:41:24 packet_memory_barrier 'void (Packet *volatile &, volatile Storage::index_type &)' static inline
| |-ParmVarDecl 0x56194e6b3f20 <col:46, col:64> col:64 packet 'Packet *volatile &'
| |-ParmVarDecl 0x56194e6b3fc8 <line:42:46, col:67> col:67 index 'volatile Storage::index_type &'
| `-DeprecatedAttr 0x56194e6b4188 <line:43:24> "" ""
|-CXXMethodDecl 0x56194e6b42d8 <line:44:5, line:45:35> line:44:17 packet_memory_barrier 'void (Packet *volatile &)' inline
| |-ParmVarDecl 0x56194e6b4210 <col:39, col:57> col:57 packet 'Packet *volatile &'
| `-DeprecatedAttr 0x56194e6b4380 <line:45:24> "" ""
|-AccessSpecDecl 0x56194e6b43f0 <line:47:3, col:12> col:3 protected
|-FieldDecl 0x56194e6b4428 <line:48:5, col:16> col:16 referenced _capacity 'Storage::index_type':'unsigned int'
|-AccessSpecDecl 0x56194e6b4478 <line:50:3, col:10> col:3 private
|-FieldDecl 0x56194e6b44b0 <line:51:5, col:25> col:25 referenced _head 'volatile Storage::index_type':'volatile unsigned int'
|-FieldDecl 0x56194e6b4510 <line:52:5, col:25> col:25 referenced _tail 'volatile Storage::index_type':'volatile unsigned int'
`-CXXDestructorDecl 0x56194e6bd010 <line:9:7> col:7 implicit ~Storage 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.Storage = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.Storage = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SimpleQueue
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class Storage (base)
       108 |     Storage::index_type _capacity
       112 |     volatile Storage::index_type _head
       116 |     volatile Storage::index_type _tail
       120 |   class Packet *volatile * _q
       128 |   volatile int _drops
       132 |   int _highwater_length
           | [sizeof=136, dsize=136, align=8,
           |  nvsize=136, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e39c160 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e39c278 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x56194e39c308 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x56194e39c3d8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x56194e39c4c0 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x56194e39c6d8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56194e39c580 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e39c888 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56194e39c790 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56194e39c9d0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56194e39c940 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56194e39cb18 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56194e39ca88 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e39cc60 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56194e39cbd0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e39cd28 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x56194e39ce70 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x56194e39cde0 <col:28> col:31 'int'
|-CXXMethodDecl 0x56194e39cf38 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x56194e39d080 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x56194e39cff0 <col:28> col:31 'int'
|-CXXMethodDecl 0x56194e39d1f8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56194e39d138 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e39d340 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56194e39d2b0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e39d408 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x56194e39d5c8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56194e39d4b8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56194e39d530 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e39d818 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56194e39d688 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56194e39d700 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56194e39d8c8 <col:86> "" ""
|-CXXMethodDecl 0x56194e39db38 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x56194e39d9a8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x56194e39da20 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e39dce8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56194e39dbf8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56194e39de98 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56194e39dda0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56194e39e168 <line:81:5, col:98> col:28 used compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56194e39df50 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56194e39dfc8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56194e39e040 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e39e448 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56194e39e230 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56194e39e2a8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56194e39e320 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56194e39e500 <col:115> "" ""
|-AccessSpecDecl 0x56194e39e570 <line:84:3, col:10> col:3 private
|-FieldDecl 0x56194e39e5a8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e39eab0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56194e39eab0
| `-ParmVarDecl 0x56194e39ebb8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x56194e39ec58 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56194e39ec58
| `-ParmVarDecl 0x56194e39ed68 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x56194e3d4398 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56194e5c6190 <col:7>
|-CXXConstructorDecl 0x56194e3d4470 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56194e3d4470
| `-ParmVarDecl 0x56194e3d4588 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x56194e3d45f8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56194e3d45f8
| `-ParmVarDecl 0x56194e3d4708 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x56194e5c8b90 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e5b4d38 prev 0x56194e5a9f40 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e5b4e30 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x56194e5b4f20 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x56194e5b5048 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x56194e5b51c8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x56194e5b5348 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x56194e5b54c8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x56194e5c62f8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56194e5c6b68 <col:11>
|-CXXDestructorDecl 0x56194e5c63d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56194e5c6508 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56194e5c6508
| `-ParmVarDecl 0x56194e5c6618 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x56194e5c66b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56194e5c66b8
| `-ParmVarDecl 0x56194e5c67c8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x56194e5c9588 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x56194e5c9698 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x56194e5c9918 <col:11>
|   `-ReturnStmt 0x56194e5c9908 <col:11>
|     `-UnaryOperator 0x56194e5c98f0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56194e5c98e0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x56194e5c9708 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56194e5c9708
  `-ParmVarDecl 0x56194e5c9818 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e5b5530 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e5b5648 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x56194e5b56e8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x56194e5b5750 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x56194e5b57b8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x56194e5b5820 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x56194e5b5880 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x56194e5b5940 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x56194e5b59a0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x56194e5b5a00 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x56194e5c6208 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x56194e5b56e8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x56194e5c6b78 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x56194e5c6bd0 <col:12>
|-CXXConstructorDecl 0x56194e5c6838 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56194e5c6838
| `-ParmVarDecl 0x56194e5c6948 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x56194e5c69e8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56194e5c69e8
| `-ParmVarDecl 0x56194e5c6af8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x56194e5c8c70 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e5a3650 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56194e5a3768 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x56194e5a37f8 <col:16, col:22> col:16 public
|-EnumDecl 0x56194e5a3820 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x56194e5a3920 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x56194e5a3a00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5a3900 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x56194e5a38e0 <col:21> 'int' 28
| `-EnumConstantDecl 0x56194e5a39b0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x56194e5a3a18 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e5a3990 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x56194e5a3970 <col:22> 'int' 64
|-CXXMethodDecl 0x56194e5a3d58 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56194e5a3a40 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56194e5a3ac0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x56194e5a3b38 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56194e5a3bb0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56194e5a3e18 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56194e5a4018 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x56194e5a3e90 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x56194e5a3f08 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56194e5a40c8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56194e5a4228 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x56194e5a4138 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56194e5a42d0 <col:72> warn_unused_result ""
|-TypedefDecl 0x56194e5a4630 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x56194e5a45c0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x56194e5a4560 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x56194e5a4520 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x56194e079310 'void'
|       |-PointerType 0x56194e3239f0 'unsigned char *'
|       | `-BuiltinType 0x56194e079410 'unsigned char'
|       |-TypedefType 0x56194e11ffc0 'size_t' sugar
|       | |-Typedef 0x56194e0e9af0 'size_t'
|       | `-BuiltinType 0x56194e079470 'unsigned long'
|       `-PointerType 0x56194e079b10 'void *'
|         `-BuiltinType 0x56194e079310 'void'
|-CXXMethodDecl 0x56194e5a4aa8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x56194e5a46a0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x56194e5a4718 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56194e5a47b0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x56194e5a4830 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x56194e5bf1a0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x56194e5bf188 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x56194e5bf150 <col:58> 'int' 0
| |-ParmVarDecl 0x56194e5a48b0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x56194e5bf1c8 <col:76> 'int' 0
| |-ParmVarDecl 0x56194e5a4930 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x56194e5bf1e8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x56194e5a4b78 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x56194e5a4bf8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56194e5a4cb8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x56194e5a4d58 <col:20>
| `-OptimizeNoneAttr 0x56194e5a4db0 <col:30>
|-CXXMethodDecl 0x56194e5a4e28 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x56194e5a4ec8 <col:20>
| `-OptimizeNoneAttr 0x56194e5a4f20 <col:30>
|-CXXMethodDecl 0x56194e5a4f98 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x56194e5a5038 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x56194e5a50e8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x56194e5a5188 <col:20>
| |-OptimizeNoneAttr 0x56194e5a51e0 <col:30>
| `-WarnUnusedResultAttr 0x56194e5a5208 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x56194e5a5260 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x56194e5a5300 <col:20>
| `-OptimizeNoneAttr 0x56194e5a5358 <col:30>
|-CXXMethodDecl 0x56194e5a53a8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x56194e5a5448 <col:20>
| `-OptimizeNoneAttr 0x56194e5a54a0 <col:30>
|-CXXMethodDecl 0x56194e5a54e8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x56194e5a5588 <col:20>
| `-OptimizeNoneAttr 0x56194e5a55e0 <col:30>
|-CXXMethodDecl 0x56194e5a5628 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56194e5a56e8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56194e5a57b0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56194e5a5878 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56194e5a5938 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56194e5a5a58 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x56194e5bf2b0 <col:54, line:99:5>
|   `-ReturnStmt 0x56194e5bf2a0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x56194e5bf288 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x56194e5bf258 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56194e5b5d38
|         `-CXXThisExpr 0x56194e5bf248 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x56194e5a5bf8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x56194e5a5b08 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x56194e5bf360 <col:67, line:103:5>
|   `-BinaryOperator 0x56194e5bf340 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56194e5bf2d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56194e5b5d38
|     | `-CXXThisExpr 0x56194e5bf2c8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56194e5bf328 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x56194e5bf308 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x56194e5a5b08 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x56194e5a5cf0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x56194e5bf3e0 <col:33, line:107:5>
|   `-ReturnStmt 0x56194e5bf3d0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x56194e5bf3b8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56194e5bf388 <col:16> 'void *' lvalue ->_destructor_argument 0x56194e5b5da0
|         `-CXXThisExpr 0x56194e5bf378 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56194e5a5db0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x56194e5bfa10 <col:25, line:113:5>
|   |-ParenExpr 0x56194e5bf758 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x56194e5bf728 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5bf498 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56194e5bf470 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x56194e5bf438 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x56194e5bf408 <col:24> '<bound member function type>' ->shared 0x56194e5a4e28
|   |   |       `-ImplicitCastExpr 0x56194e5bf458 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x56194e5bf3f8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56194e5bf4f8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5bf4d8 <col:42> 'int' 0
|   |   `-CallExpr 0x56194e5bf688 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x56194e5bf670 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5bf650 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5bf6c8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5bf568 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x56194e5bf6e0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5bf590 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5bf6f8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5bf5c8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x56194e5bf710 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5bf638 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5bf620 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5bf5e8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x56194e5bf958 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x56194e5bf788 <col:2> 'unsigned char *' lvalue ->_head 0x56194e5b5b40
|   | | `-CXXThisExpr 0x56194e5bf778 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x56194e5bf940 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x56194e5bf920 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x56194e5bf7c8 <col:10> 'unsigned char *' lvalue ->_data 0x56194e5b5ba8
|   |     | `-CXXThisExpr 0x56194e5bf7b8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x56194e5bf908 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x56194e5bf8e8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x56194e5bf808 <col:18> 'unsigned char *' lvalue ->_tail 0x56194e5b5c10
|   |         | `-CXXThisExpr 0x56194e5bf7f8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x56194e5bf8d0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x56194e5bf8b0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x56194e5bf848 <col:26> 'unsigned char *' lvalue ->_end 0x56194e5b5c78
|   |             | `-CXXThisExpr 0x56194e5bf838 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x56194e5bf898 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x56194e5bf878 <col:33> 'int' 0
|   `-BinaryOperator 0x56194e5bf9f0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56194e5bf988 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56194e5b5d38
|     | `-CXXThisExpr 0x56194e5bf978 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56194e5bf9d8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x56194e5bf9b8 <col:16> 'int' 0
|-CXXMethodDecl 0x56194e5a5ef0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56194e5a5e60 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56194e5a5f98 <col:20>
| |-OptimizeNoneAttr 0x56194e5a5ff0 <col:30>
| `-WarnUnusedResultAttr 0x56194e5a6018 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56194e5a60e8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56194e5a6058 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56194e5a6190 <col:20>
| |-OptimizeNoneAttr 0x56194e5a61e8 <col:30>
| `-WarnUnusedResultAttr 0x56194e5a6210 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x56194e5a6348 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56194e5a6250 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56194e5a63f0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x56194e5a64f0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x56194e5a6460 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56194e5a6598 <col:20>
| `-OptimizeNoneAttr 0x56194e5a65f0 <col:30>
|-CXXMethodDecl 0x56194e5a66b8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56194e5a6628 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56194e5a6760 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x56194e5a6860 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56194e5a67d0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56194e5a6908 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56194e5a6a08 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x56194e5a6978 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56194e5a6ab0 <col:20>
| `-OptimizeNoneAttr 0x56194e5a6b08 <col:30>
|-CXXMethodDecl 0x56194e5a6c98 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x56194e5a6b48 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x56194e5a6bc0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x56194e5bf208 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x56194e5a6d48 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x56194e5a6f48 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56194e5a6dc0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x56194e5a6e38 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e5a7158 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56194e5a7008 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56194e5a7080 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e5a7368 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x56194e5a7218 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x56194e5a7298 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x56194e5bf218 <col:39> 'int' 0
|-CXXMethodDecl 0x56194e5a7438 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x56194e5a7500 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56194e5a75c8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x56194e5a7688 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56194e5a7750 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x56194e5a7898 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x56194e5a7808 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x56194e5a7a68 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56194e5a7958 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x56194e5a79d0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e5a7b38 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x56194e5a7bf8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x56194e5a7c98 <col:20>
| `-OptimizeNoneAttr 0x56194e5a7cf0 <col:30>
|-CXXMethodDecl 0x56194e5a7d40 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56194e5a7de0 <col:20>
| `-OptimizeNoneAttr 0x56194e5a7e38 <col:30>
|-CXXMethodDecl 0x56194e5a7e88 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x56194e5a7f48 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56194e5a8010 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x56194e5a80b0 <col:20>
| `-OptimizeNoneAttr 0x56194e5a8108 <col:30>
|-CXXMethodDecl 0x56194e5a8258 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56194e5a8148 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x56194e5a81c0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e5a83a8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x56194e5a8318 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e5a8480 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x56194e5a8540 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x56194e5a85e0 <col:20>
| `-OptimizeNoneAttr 0x56194e5a8638 <col:30>
|-CXXMethodDecl 0x56194e5a8688 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56194e5a8728 <col:20>
| `-OptimizeNoneAttr 0x56194e5a8780 <col:30>
|-CXXMethodDecl 0x56194e5a87d0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x56194e5a8898 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x56194e5a8938 <col:20>
| `-OptimizeNoneAttr 0x56194e5a8990 <col:30>
|-CXXMethodDecl 0x56194e5a89d8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x56194e5a8af8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x56194e5a8c68 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x56194e5a8ba8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x56194e5a8d58 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x56194e5a8df8 <col:20>
| `-OptimizeNoneAttr 0x56194e5a8e50 <col:30>
|-CXXMethodDecl 0x56194e5a8ea0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x56194e5a8f60 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56194e5a9198 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x56194e5a9010 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x56194e5a9088 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56194e5a9248 <col:20>
| `-OptimizeNoneAttr 0x56194e5a92a0 <col:30>
|-CXXMethodDecl 0x56194e5a9348 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x56194e5a93e8 <col:20>
| `-OptimizeNoneAttr 0x56194e5a9440 <col:30>
|-CXXMethodDecl 0x56194e5a9490 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x56194e5a9530 <col:20>
| `-OptimizeNoneAttr 0x56194e5a9588 <col:30>
|-CXXMethodDecl 0x56194e5a95d0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x56194e5a9670 <col:20>
| `-OptimizeNoneAttr 0x56194e5a96c8 <col:30>
|-CXXMethodDecl 0x56194e5a97c8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x56194e5a9700 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x56194e5a9870 <col:20>
| `-OptimizeNoneAttr 0x56194e5a98c8 <col:30>
|-CXXMethodDecl 0x56194e5a9a88 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x56194e5a9900 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x56194e5a9978 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56194e5a9b38 <col:20>
| `-OptimizeNoneAttr 0x56194e5a9b90 <col:30>
|-CXXMethodDecl 0x56194e5a9c38 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x56194e5a9d58 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x56194e5a9e78 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x56194e5a9f18 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x56194e5a9f40 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x56194e5aa068 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x56194e5aa108 <col:20>
| `-OptimizeNoneAttr 0x56194e5aa160 <col:30>
|-CXXMethodDecl 0x56194e5aa208 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x56194e5aa2a8 <col:20>
| `-OptimizeNoneAttr 0x56194e5aa300 <col:30>
|-AccessSpecDecl 0x56194e5aa328 <line:344:3, col:9> col:3 public
|-EnumDecl 0x56194e5aa350 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x56194e5aa450 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x56194e5aa4a0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e5aa430 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x56194e5aa410 <col:14> 'int' 48
|-CXXMethodDecl 0x56194e5aa508 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x56194e5aa5a8 <col:20>
| `-OptimizeNoneAttr 0x56194e5aa600 <col:30>
|-CXXMethodDecl 0x56194e5aa678 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x56194e5aa718 <col:20>
| `-OptimizeNoneAttr 0x56194e5aa770 <col:30>
|-CXXMethodDecl 0x56194e5aa838 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56194e5aa7a8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x56194e5aa9d8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x56194e5aab78 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x56194e5aaa88 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x56194e5aac20 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x56194e5aad20 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56194e5ab0d0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5aad00 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x56194e5aace0 <col:9> 'int' 0
| |-EnumConstantDecl 0x56194e5aadb0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56194e5ab0e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5aad90 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56194e5aad70 <col:14> 'int' 1
| |-EnumConstantDecl 0x56194e5aae40 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56194e5ab100 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5aae20 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x56194e5aae00 <col:14> 'int' 2
| |-EnumConstantDecl 0x56194e5aaed0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56194e5ab118 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5aaeb0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x56194e5aae90 <col:14> 'int' 3
| |-EnumConstantDecl 0x56194e5aaf60 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56194e5ab130 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5aaf40 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x56194e5aaf20 <col:13> 'int' 4
| |-EnumConstantDecl 0x56194e5aaff0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56194e5ab148 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5aafd0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x56194e5aafb0 <col:13> 'int' 5
| `-EnumConstantDecl 0x56194e5ab080 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x56194e5ab160 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e5ab060 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x56194e5ab040 <col:14> 'int' 6
|-CXXMethodDecl 0x56194e5ab1c8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x56194e5ab268 <col:20>
| `-OptimizeNoneAttr 0x56194e5ab2c0 <col:30>
|-CXXMethodDecl 0x56194e5ab3b8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x56194e5ab2f8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x56194e5ab460 <col:20>
| `-OptimizeNoneAttr 0x56194e5ab4b8 <col:30>
|-CXXMethodDecl 0x56194e5ab528 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x56194e5ab650 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x56194e5ab7c8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x56194e5ab700 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x56194e5ab890 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x56194e5ab958 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x56194e5aba98 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x56194e5aba08 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x56194e5abb40 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x56194e5abc40 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56194e5abe40 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5abc20 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x56194e5abc00 <col:23> 'int' 0
| |-EnumConstantDecl 0x56194e5abcd0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56194e5abe58 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5abcb0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x56194e5abc90 <col:45> 'int' 4
| |-EnumConstantDecl 0x56194e5abd60 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56194e5abe70 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5abd40 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x56194e5abd20 <col:24> 'int' 0
| `-EnumConstantDecl 0x56194e5abdf0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x56194e5abe88 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e5abdd0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x56194e5abdb0 <col:47> 'int' 16
|-CXXMethodDecl 0x56194e5abee8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x56194e5ac058 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x56194e5abf98 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x56194e5ac100 <col:20>
| `-OptimizeNoneAttr 0x56194e5ac158 <col:30>
|-CXXMethodDecl 0x56194e5ac1a8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x56194e5bfb30 <col:18, col:36>
|   `-ReturnStmt 0x56194e5bfb20 <col:20, col:33>
|     `-ImplicitCastExpr 0x56194e5bfb08 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x56194e5bfae8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x56194e5bfab8 <col:27> '<bound member function type>' ->xanno 0x56194e5aa208
|           `-CXXThisExpr 0x56194e5bfaa8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x56194e5ac2a0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x56194e5bfc40 <col:30, col:48>
|   `-ReturnStmt 0x56194e5bfc30 <col:32, col:45>
|     `-ImplicitCastExpr 0x56194e5bfc18 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x56194e5bfbf8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x56194e5bfbc8 <col:39> '<bound member function type>' ->xanno 0x56194e5aa068
|           `-CXXThisExpr 0x56194e5bfbb8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x56194e5ac388 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x56194e5bfdd8 <col:24, col:50>
|   `-ReturnStmt 0x56194e5bfdc8 <col:26, col:47>
|     `-UnaryOperator 0x56194e5bfdb0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56194e5bfd90 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x56194e5bfd78 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56194e5bfd28 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x56194e5b5048
|         |   `-CXXMemberCallExpr 0x56194e5bfd08 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x56194e5bfcd8 <col:34> '<bound member function type>' ->xanno 0x56194e5aa208
|         |       `-CXXThisExpr 0x56194e5bfcc8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x56194e5bfd58 <col:46> 'int' 0
|-CXXMethodDecl 0x56194e5ac490 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x56194e5bffa8 <col:36, col:62>
|   `-ReturnStmt 0x56194e5bff98 <col:38, col:59>
|     `-UnaryOperator 0x56194e5bff80 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56194e5bff60 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56194e5bff48 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56194e5bfec0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x56194e5b5048
|         |   `-CXXMemberCallExpr 0x56194e5bfea0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56194e5bfe70 <col:46> '<bound member function type>' ->xanno 0x56194e5aa068
|         |       `-CXXThisExpr 0x56194e5bfe60 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56194e5bfef0 <col:58> 'int' 0
|-CXXMethodDecl 0x56194e5ac5a8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x56194e5c0140 <col:26, col:53>
|   `-ReturnStmt 0x56194e5c0130 <col:28, col:50>
|     `-UnaryOperator 0x56194e5c0118 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56194e5c00f8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x56194e5c00e0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56194e5c0090 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x56194e5b5348
|         |   `-CXXMemberCallExpr 0x56194e5c0070 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x56194e5c0040 <col:36> '<bound member function type>' ->xanno 0x56194e5aa208
|         |       `-CXXThisExpr 0x56194e5c0030 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x56194e5c00c0 <col:49> 'int' 0
|-CXXMethodDecl 0x56194e5ac6c8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x56194e5c0318 <col:38, col:65>
|   `-ReturnStmt 0x56194e5c0308 <col:40, col:62>
|     `-UnaryOperator 0x56194e5c02f0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56194e5c02d0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x56194e5c02b8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56194e5c0228 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x56194e5b5348
|         |   `-CXXMemberCallExpr 0x56194e5c0208 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56194e5c01d8 <col:48> '<bound member function type>' ->xanno 0x56194e5aa068
|         |       `-CXXThisExpr 0x56194e5c01c8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56194e5c0258 <col:61> 'int' 0
|-CXXMethodDecl 0x56194e5ac878 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x56194e5ac780 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x56194e5c09e8 <col:34, line:463:5>
|   |-ParenExpr 0x56194e5c0830 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x56194e5c0800 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c0468 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c0438 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c0388 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c0370 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c0330 <col:23> 'int' lvalue ParmVar 0x56194e5ac780 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c0350 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c0418 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56194e5c03e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c03a8 <col:33> 'int' lvalue ParmVar 0x56194e5ac780 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56194e5c0400 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56194e5c03c8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56194e5c04c8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c04a8 <col:56> 'int' 0
|   |   `-CallExpr 0x56194e5c0760 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c0748 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c0728 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c07a0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c05b8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56194e5c07b8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c05e8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c07d0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c0620 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x56194e5c07e8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c0710 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c06f8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c06b8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x56194e5c09d8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x56194e5c09c0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x56194e5c09a0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56194e5c0970 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56194e5c0920 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x56194e5b5048
|         |   `-CXXMemberCallExpr 0x56194e5c0900 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56194e5c08d0 <col:9> '<bound member function type>' ->xanno 0x56194e5aa068
|         |       `-CXXThisExpr 0x56194e5c08c0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x56194e5c0988 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x56194e5c0950 <col:21> 'int' lvalue ParmVar 0x56194e5ac780 'i' 'int'
|-CXXMethodDecl 0x56194e5acac8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x56194e5ac938 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x56194e5ac9b0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x56194e5c1078 <col:40, line:472:5>
|   |-ParenExpr 0x56194e5c0e90 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x56194e5c0e60 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c0b40 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c0b10 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c0a60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c0a48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c0a08 <col:23> 'int' lvalue ParmVar 0x56194e5ac938 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c0a28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c0af0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56194e5c0ac0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c0a80 <col:33> 'int' lvalue ParmVar 0x56194e5ac938 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56194e5c0ad8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56194e5c0aa0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56194e5c0ba0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c0b80 <col:56> 'int' 0
|   |   `-CallExpr 0x56194e5c0dc0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c0da8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c0d88 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c0e00 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c0c10 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56194e5c0e18 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c0c40 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c0e30 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c0c78 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x56194e5c0e48 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c0d70 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c0d58 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c0d18 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x56194e5c1058 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x56194e5c1000 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x56194e5c0fd0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x56194e5c0f80 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x56194e5b5048
|     | |   `-CXXMemberCallExpr 0x56194e5c0f60 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x56194e5c0f30 <col:2> '<bound member function type>' ->xanno 0x56194e5aa208
|     | |       `-CXXThisExpr 0x56194e5c0f20 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x56194e5c0fe8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56194e5c0fb0 <col:14> 'int' lvalue ParmVar 0x56194e5ac938 'i' 'int'
|     `-ImplicitCastExpr 0x56194e5c1040 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x56194e5c1020 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x56194e5ac9b0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x56194e5acc88 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x56194e5acb90 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56194e5c17f8 <col:36, line:485:5>
|   |-ParenExpr 0x56194e5c1560 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x56194e5c1530 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c1210 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c11e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c10f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c10d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c1098 <col:23> 'int' lvalue ParmVar 0x56194e5acb90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c10b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c11c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56194e5c11a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c1110 <col:33> 'int' lvalue ParmVar 0x56194e5acb90 'i' 'int'
|   |   |     `-BinaryOperator 0x56194e5c1188 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56194e5c1170 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56194e5c1130 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56194e5c1150 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56194e5c1270 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c1250 <col:60> 'int' 0
|   |   `-CallExpr 0x56194e5c1490 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c1478 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c1458 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c14d0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c12e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56194e5c14e8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c1318 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c1500 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c1350 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x56194e5c1518 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c1440 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c1428 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c13e8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x56194e5c17e8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x56194e5c17d0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x56194e5c17b8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56194e5c1788 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x56194e5c1728 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56194e5c16f8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56194e5c1670 <col:61, col:70> 'char const[48]' lvalue ->c 0x56194e5b4f20
|             |   `-CXXMemberCallExpr 0x56194e5c1650 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56194e5c1620 <col:61> '<bound member function type>' ->xanno 0x56194e5aa068
|             |       `-CXXThisExpr 0x56194e5c1610 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56194e5c1710 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56194e5c16a0 <col:74> 'int' lvalue ParmVar 0x56194e5acb90 'i' 'int'
|-CXXMethodDecl 0x56194e5aced8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x56194e5acd48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56194e5acdc0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56194e5c1f48 <col:42, line:500:5>
|   |-ParenExpr 0x56194e5c1ce0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x56194e5c1cb0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c1990 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c1960 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c1870 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c1858 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c1818 <col:23> 'int' lvalue ParmVar 0x56194e5acd48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c1838 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c1940 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56194e5c1928 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c1890 <col:33> 'int' lvalue ParmVar 0x56194e5acd48 'i' 'int'
|   |   |     `-BinaryOperator 0x56194e5c1908 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56194e5c18f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56194e5c18b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56194e5c18d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56194e5c19f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c19d0 <col:60> 'int' 0
|   |   `-CallExpr 0x56194e5c1c10 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c1bf8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c1bd8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c1c50 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c1a60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56194e5c1c68 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c1a98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c1c80 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c1ad0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x56194e5c1c98 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c1bc0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c1ba8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c1b68 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x56194e5c1f28 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x56194e5c1ed8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56194e5c1ea8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x56194e5c1e50 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56194e5c1e20 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56194e5c1dd0 <col:48, col:57> 'char [48]' lvalue ->c 0x56194e5b4f20
|     |     |   `-CXXMemberCallExpr 0x56194e5c1db0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56194e5c1d80 <col:48> '<bound member function type>' ->xanno 0x56194e5aa208
|     |     |       `-CXXThisExpr 0x56194e5c1d70 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56194e5c1e38 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56194e5c1e00 <col:61> 'int' lvalue ParmVar 0x56194e5acd48 'i' 'int'
|     `-ImplicitCastExpr 0x56194e5c1f10 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56194e5c1ef0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x56194e5acdc0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56194e5ad098 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x56194e5acfa0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56194e5c26a8 <col:35, line:513:5>
|   |-ParenExpr 0x56194e5c23b8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x56194e5c2388 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c20e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c20b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c1fc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c1fa8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c1f68 <col:23> 'int' lvalue ParmVar 0x56194e5acfa0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c1f88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c2090 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56194e5c2078 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c1fe0 <col:33> 'int' lvalue ParmVar 0x56194e5acfa0 'i' 'int'
|   |   |     `-BinaryOperator 0x56194e5c2058 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56194e5c2040 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56194e5c2000 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56194e5c2020 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56194e5c2140 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c2120 <col:60> 'int' 0
|   |   `-CallExpr 0x56194e5c22e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c22d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c22b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c2328 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c21b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56194e5c2340 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c21e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c2358 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c2220 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x56194e5c2370 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c2298 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c2280 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c2240 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x56194e5c2698 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x56194e5c2680 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x56194e5c2668 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56194e5c2638 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x56194e5c25b0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56194e5c2580 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56194e5c2530 <col:60, col:69> 'char const[48]' lvalue ->c 0x56194e5b4f20
|             |   `-CXXMemberCallExpr 0x56194e5c2510 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56194e5c24e0 <col:60> '<bound member function type>' ->xanno 0x56194e5aa068
|             |       `-CXXThisExpr 0x56194e5c24d0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56194e5c2598 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56194e5c2560 <col:73> 'int' lvalue ParmVar 0x56194e5acfa0 'i' 'int'
|-CXXMethodDecl 0x56194e5ad2e8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x56194e5ad158 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56194e5ad1d0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x56194e5c2dc8 <col:41, line:528:5>
|   |-ParenExpr 0x56194e5c2b50 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x56194e5c2b20 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c2840 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c2810 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c2720 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c2708 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c26c8 <col:23> 'int' lvalue ParmVar 0x56194e5ad158 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c26e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c27f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56194e5c27d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c2740 <col:33> 'int' lvalue ParmVar 0x56194e5ad158 'i' 'int'
|   |   |     `-BinaryOperator 0x56194e5c27b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56194e5c27a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56194e5c2760 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56194e5c2780 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56194e5c28a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c2880 <col:60> 'int' 0
|   |   `-CallExpr 0x56194e5c2a80 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c2a68 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c2a48 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c2ac0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c2910 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56194e5c2ad8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c2948 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c2af0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c2980 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x56194e5c2b08 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c2a30 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c2a18 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c29d8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x56194e5c2da8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x56194e5c2d58 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56194e5c2d28 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x56194e5c2cd0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56194e5c2c90 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56194e5c2c40 <col:47, col:56> 'char [48]' lvalue ->c 0x56194e5b4f20
|     |     |   `-CXXMemberCallExpr 0x56194e5c2c20 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56194e5c2bf0 <col:47> '<bound member function type>' ->xanno 0x56194e5aa208
|     |     |       `-CXXThisExpr 0x56194e5c2be0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56194e5c2ca8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56194e5c2c70 <col:60> 'int' lvalue ParmVar 0x56194e5ad158 'i' 'int'
|     `-ImplicitCastExpr 0x56194e5c2d90 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x56194e5c2d70 <col:65> 'int16_t':'short' lvalue ParmVar 0x56194e5ad1d0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x56194e5ad4a8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x56194e5ad3b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56194e5c3498 <col:36, line:541:5>
|   |-ParenExpr 0x56194e5c3238 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x56194e5c3208 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c2f60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c2f30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c2e40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c2e28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c2de8 <col:23> 'int' lvalue ParmVar 0x56194e5ad3b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c2e08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c2f10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56194e5c2ef8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c2e60 <col:33> 'int' lvalue ParmVar 0x56194e5ad3b0 'i' 'int'
|   |   |     `-BinaryOperator 0x56194e5c2ed8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56194e5c2ec0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56194e5c2e80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56194e5c2ea0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56194e5c2fc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c2fa0 <col:60> 'int' 0
|   |   `-CallExpr 0x56194e5c3168 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c3150 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c3130 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c31a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c3030 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56194e5c31c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c3068 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c31d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c30a0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x56194e5c31f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c3118 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c3100 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c30c0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x56194e5c3488 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x56194e5c3470 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56194e5c3458 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56194e5c3428 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x56194e5c33d0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56194e5c33a0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56194e5c3350 <col:61, col:70> 'char const[48]' lvalue ->c 0x56194e5b4f20
|             |   `-CXXMemberCallExpr 0x56194e5c3330 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56194e5c3300 <col:61> '<bound member function type>' ->xanno 0x56194e5aa068
|             |       `-CXXThisExpr 0x56194e5c32f0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56194e5c33b8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56194e5c3380 <col:74> 'int' lvalue ParmVar 0x56194e5ad3b0 'i' 'int'
|-CXXMethodDecl 0x56194e5ad678 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x56194e5ad568 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x56194e5ad5e0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56194e5ad728 <col:20>
| `-OptimizeNoneAttr 0x56194e5ad780 <col:30>
|-CXXMethodDecl 0x56194e5ad8b8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x56194e5ad7c0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56194e5c3b68 <col:35, line:562:5>
|   |-ParenExpr 0x56194e5c3908 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x56194e5c38d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c3630 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c3600 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c3510 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c34f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c34b8 <col:23> 'int' lvalue ParmVar 0x56194e5ad7c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c34d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c35e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56194e5c35c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c3530 <col:33> 'int' lvalue ParmVar 0x56194e5ad7c0 'i' 'int'
|   |   |     `-BinaryOperator 0x56194e5c35a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56194e5c3590 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56194e5c3550 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56194e5c3570 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56194e5c3690 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c3670 <col:60> 'int' 0
|   |   `-CallExpr 0x56194e5c3838 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c3820 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c3800 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c3878 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c3700 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56194e5c3890 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c3738 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c38a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c3770 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x56194e5c38c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c37e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c37d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c3790 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x56194e5c3b58 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x56194e5c3b40 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x56194e5c3b28 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56194e5c3af8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x56194e5c3aa0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56194e5c3a70 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56194e5c3a20 <col:60, col:69> 'char const[48]' lvalue ->c 0x56194e5b4f20
|             |   `-CXXMemberCallExpr 0x56194e5c3a00 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56194e5c39d0 <col:60> '<bound member function type>' ->xanno 0x56194e5aa068
|             |       `-CXXThisExpr 0x56194e5c39c0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56194e5c3a88 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56194e5c3a50 <col:73> 'int' lvalue ParmVar 0x56194e5ad7c0 'i' 'int'
|-CXXMethodDecl 0x56194e5adac8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x56194e5ad978 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56194e5ad9f0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x56194e5c4248 <col:41, line:577:5>
|   |-ParenExpr 0x56194e5c3fd8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x56194e5c3fa8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c3d00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c3cd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c3be0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c3bc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c3b88 <col:23> 'int' lvalue ParmVar 0x56194e5ad978 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c3ba8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c3cb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56194e5c3c98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c3c00 <col:33> 'int' lvalue ParmVar 0x56194e5ad978 'i' 'int'
|   |   |     `-BinaryOperator 0x56194e5c3c78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56194e5c3c60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56194e5c3c20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56194e5c3c40 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56194e5c3d60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c3d40 <col:60> 'int' 0
|   |   `-CallExpr 0x56194e5c3f08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c3ef0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c3ed0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c3f48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c3dd0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56194e5c3f60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c3e08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c3f78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c3e40 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x56194e5c3f90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c3eb8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c3ea0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c3e60 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x56194e5c4228 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x56194e5c41d8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56194e5c41a8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x56194e5c4148 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56194e5c4118 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56194e5c40c8 <col:47, col:56> 'char [48]' lvalue ->c 0x56194e5b4f20
|     |     |   `-CXXMemberCallExpr 0x56194e5c40a8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56194e5c4078 <col:47> '<bound member function type>' ->xanno 0x56194e5aa208
|     |     |       `-CXXThisExpr 0x56194e5c4068 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56194e5c4130 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56194e5c40f8 <col:60> 'int' lvalue ParmVar 0x56194e5ad978 'i' 'int'
|     `-ImplicitCastExpr 0x56194e5c4210 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x56194e5c41f0 <col:65> 'int32_t':'int' lvalue ParmVar 0x56194e5ad9f0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x56194e5adc88 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x56194e5adb90 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56194e5c4978 <col:36, line:591:5>
|   |-ParenExpr 0x56194e5c46b8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x56194e5c4688 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c43e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c43b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c42c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c42a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c4268 <col:23> 'int' lvalue ParmVar 0x56194e5adb90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c4288 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c4390 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56194e5c4378 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c42e0 <col:33> 'int' lvalue ParmVar 0x56194e5adb90 'i' 'int'
|   |   |     `-BinaryOperator 0x56194e5c4358 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56194e5c4340 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56194e5c4300 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56194e5c4320 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56194e5c4440 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c4420 <col:60> 'int' 0
|   |   `-CallExpr 0x56194e5c45e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c45d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c45b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c4628 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c44b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56194e5c4640 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c44e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c4658 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c4520 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x56194e5c4670 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c4598 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c4580 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c4540 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x56194e5c4968 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x56194e5c4950 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x56194e5c4938 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56194e5c4908 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x56194e5c4880 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56194e5c4850 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56194e5c4800 <col:61, col:70> 'char const[48]' lvalue ->c 0x56194e5b4f20
|             |   `-CXXMemberCallExpr 0x56194e5c47e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56194e5c47b0 <col:61> '<bound member function type>' ->xanno 0x56194e5aa068
|             |       `-CXXThisExpr 0x56194e5c47a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56194e5c4868 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56194e5c4830 <col:74> 'int' lvalue ParmVar 0x56194e5adb90 'i' 'int'
|-CXXMethodDecl 0x56194e5aded8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x56194e5add48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56194e5addc0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x56194e5c5058 <col:42, line:606:5>
|   |-ParenExpr 0x56194e5c4de8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x56194e5c4db8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c4b10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c4ae0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c49f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c49d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c4998 <col:23> 'int' lvalue ParmVar 0x56194e5add48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c49b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c4ac0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56194e5c4aa8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c4a10 <col:33> 'int' lvalue ParmVar 0x56194e5add48 'i' 'int'
|   |   |     `-BinaryOperator 0x56194e5c4a88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56194e5c4a70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56194e5c4a30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56194e5c4a50 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56194e5c4b70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c4b50 <col:60> 'int' 0
|   |   `-CallExpr 0x56194e5c4d18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c4d00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c4ce0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c4d58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c4be0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56194e5c4d70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c4c18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c4d88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c4c50 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x56194e5c4da0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c4cc8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c4cb0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c4c70 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x56194e5c5038 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x56194e5c4fe8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56194e5c4fb8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x56194e5c4f58 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56194e5c4f28 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56194e5c4ed8 <col:48, col:57> 'char [48]' lvalue ->c 0x56194e5b4f20
|     |     |   `-CXXMemberCallExpr 0x56194e5c4eb8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56194e5c4e88 <col:48> '<bound member function type>' ->xanno 0x56194e5aa208
|     |     |       `-CXXThisExpr 0x56194e5c4e78 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56194e5c4f40 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56194e5c4f08 <col:61> 'int' lvalue ParmVar 0x56194e5add48 'i' 'int'
|     `-ImplicitCastExpr 0x56194e5c5020 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x56194e5c5000 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x56194e5addc0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x56194e5ae070 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x56194e5adfa0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x56194e5c58c8 <col:33, line:620:5>
|   |-ParenExpr 0x56194e5c5640 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x56194e5c5610 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c5260 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c5230 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c50d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c50b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c5078 <col:23> 'int' lvalue ParmVar 0x56194e5adfa0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c5098 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c5210 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56194e5c51f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c50f0 <col:33> 'int' lvalue ParmVar 0x56194e5adfa0 'i' 'int'
|   |   |     `-BinaryOperator 0x56194e5c51d8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56194e5c51c0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56194e5c5110 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56194e5c5198 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56194e5c5180 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56194e5c5148 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56194e5c52c0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c52a0 <col:79> 'int' 0
|   |   `-CallExpr 0x56194e5c5570 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c5558 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c5538 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c55b0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c53a8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56194e5c55c8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c53f0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c55e0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c5428 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x56194e5c55f8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c5520 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c5508 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c54c8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x56194e5c58b8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x56194e5c58a0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x56194e5c5888 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56194e5c5858 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x56194e5c57d0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x56194e5c57a0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56194e5c5750 <col:67, col:76> 'char const[48]' lvalue ->c 0x56194e5b4f20
|             |   `-CXXMemberCallExpr 0x56194e5c5730 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56194e5c5700 <col:67> '<bound member function type>' ->xanno 0x56194e5aa068
|             |       `-CXXThisExpr 0x56194e5c56f0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56194e5c57b8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56194e5c5780 <col:80> 'int' lvalue ParmVar 0x56194e5adfa0 'i' 'int'
|-CXXMethodDecl 0x56194e5ae288 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x56194e5ae130 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56194e5ae1b0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x56194e5c60f0 <col:45, line:635:5>
|   |-ParenExpr 0x56194e5c5e38 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x56194e5c5e08 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56194e5c5ad0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56194e5c5aa0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56194e5c5940 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56194e5c5928 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56194e5c58e8 <col:23> 'int' lvalue ParmVar 0x56194e5ae130 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56194e5c5908 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56194e5c5a80 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56194e5c5a68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56194e5c5960 <col:33> 'int' lvalue ParmVar 0x56194e5ae130 'i' 'int'
|   |   |     `-BinaryOperator 0x56194e5c5a48 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56194e5c5a30 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56194e5c5980 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56194e5aa450 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56194e5c5a08 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56194e5c59f0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56194e5c59b8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56194e5c5b30 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56194e5c5b10 <col:79> 'int' 0
|   |   `-CallExpr 0x56194e5c5d68 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56194e5c5d50 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e5c5d30 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56194e5c5da8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c5ba0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56194e5c5dc0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56194e5c5be8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56194e5c5dd8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56194e5c5c20 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x56194e5c5df0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56194e5c5d18 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56194e5c5d00 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56194e5c5cb8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x56194e5c60d0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x56194e5c6038 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56194e5c6008 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x56194e5c5fa8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56194e5c5f78 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56194e5c5f28 <col:54, col:63> 'char [48]' lvalue ->c 0x56194e5b4f20
|     |     |   `-CXXMemberCallExpr 0x56194e5c5f08 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56194e5c5ed8 <col:54> '<bound member function type>' ->xanno 0x56194e5aa208
|     |     |       `-CXXThisExpr 0x56194e5c5ec8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56194e5c5f90 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56194e5c5f58 <col:67> 'int' lvalue ParmVar 0x56194e5ae130 'i' 'int'
|     `-CXXConstCastExpr 0x56194e5c60a0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x56194e5c6088 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x56194e5c6050 <col:91> 'const void *' lvalue ParmVar 0x56194e5ae1b0 'x' 'const void *'
|-CXXMethodDecl 0x56194e5ae358 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x56194e5c6178 <col:34, line:640:5>
|   `-ReturnStmt 0x56194e5c6168 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x56194e5c6150 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x56194e5c6120 <col:16> 'Packet *' lvalue ->_data_packet 0x56194e5b5ad8
|         `-CXXThisExpr 0x56194e5c6110 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56194e5ae498 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x56194e5ae408 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56194e5bf238 <col:46> 'bool' true
|-CXXMethodDecl 0x56194e5ae618 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x56194e5ae550 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x56194e5ae6c0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x56194e5aee70 <line:660:22> "" ""
| |-EnumConstantDecl 0x56194e5ae7c0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56194e5aeee0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5ae7a0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x56194e5ae780 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56194e5a3920 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56194e5ae850 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56194e5aeef8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5ae830 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x56194e5ae810 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56194e5a39b0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56194e5ae8e0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56194e5aef10 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5ae8c0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56194e5ae8a0 <col:21> 'int' 0
| |-EnumConstantDecl 0x56194e5ae970 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56194e5aef28 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5ae950 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x56194e5ae930 <col:19> 'int' 16
| |-EnumConstantDecl 0x56194e5aea00 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56194e5aef40 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5ae9e0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x56194e5ae9c0 <col:21> 'int' 16
| |-EnumConstantDecl 0x56194e5aea90 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56194e5aef58 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5aea70 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56194e5aea50 <col:19> 'int' 32
| |-EnumConstantDecl 0x56194e5aeb20 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56194e5aef70 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5aeb00 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x56194e5aeae0 <col:19> 'int' EnumConstant 0x56194e5ae970 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56194e5aebb0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56194e5aef88 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5aeb90 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x56194e5aeb70 <col:19> 'int' EnumConstant 0x56194e5aea90 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56194e5aec80 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56194e5aefa0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5aec60 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x56194e5aec40 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56194e5aec00 <col:23> 'int' EnumConstant 0x56194e5aebb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56194e5aec20 <col:40> 'int' 2
| |-EnumConstantDecl 0x56194e5aed50 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56194e5aefb8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5aed30 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x56194e5aed10 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56194e5aecd0 <col:23> 'int' EnumConstant 0x56194e5aebb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56194e5aecf0 <col:40> 'int' 4
| `-EnumConstantDecl 0x56194e5aee20 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x56194e5aefd0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e5aee00 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x56194e5aede0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x56194e5aeda0 <col:23> 'int' EnumConstant 0x56194e5aebb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x56194e5aedc0 <col:40> 'int' 8
|-CXXMethodDecl 0x56194e5af010 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x56194e5af0b0 <col:68> "" ""
|-CXXMethodDecl 0x56194e5af148 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x56194e5af1e8 <col:45> "" ""
|-CXXMethodDecl 0x56194e5af280 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56194e5af320 <col:57> "" ""
|-CXXMethodDecl 0x56194e5af3b8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x56194e5af458 <col:45> "" ""
|-CXXMethodDecl 0x56194e5af4f0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56194e5af590 <col:57> "" ""
|-CXXMethodDecl 0x56194e5af620 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x56194e5af6c0 <col:51> "" ""
|-CXXMethodDecl 0x56194e5af750 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56194e5af7f0 <col:63> "" ""
|-CXXMethodDecl 0x56194e5af880 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x56194e5af920 <col:53> "" ""
|-CXXMethodDecl 0x56194e5af9b0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56194e5afa50 <col:65> "" ""
|-CXXMethodDecl 0x56194e5afb68 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56194e5afad8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x56194e5afc10 <col:61> "" ""
|-CXXMethodDecl 0x56194e5afda8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56194e5afc98 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x56194e5afd10 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56194e5afe58 <col:67> "" ""
|-CXXMethodDecl 0x56194e5aff70 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56194e5afee0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56194e5b0018 <col:63> "" ""
|-CXXMethodDecl 0x56194e5b01b0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56194e5b00a0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56194e5b0118 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56194e5b0260 <col:69> "" ""
|-CXXMethodDecl 0x56194e5b0378 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56194e5b02e8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56194e5b0420 <col:63> "" ""
|-CXXMethodDecl 0x56194e5b2af8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56194e5b29e8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56194e5b2a60 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56194e5b2ba8 <col:69> "" ""
|-CXXMethodDecl 0x56194e5b2cc0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x56194e5b2c30 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x56194e5b2d68 <col:62> "" ""
|-CXXMethodDecl 0x56194e5b2f00 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56194e5b2df0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56194e5b2e68 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x56194e5b2fb0 <col:68> "" ""
|-CXXMethodDecl 0x56194e5b30c8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x56194e5b3038 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56194e5b3170 <col:63> "" ""
|-CXXMethodDecl 0x56194e5b3308 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x56194e5b31f8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56194e5b3270 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x56194e5b33b8 <col:69> "" ""
|-CXXMethodDecl 0x56194e5b3448 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56194e5b34e8 <col:64> "" ""
|-CXXMethodDecl 0x56194e5b3578 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x56194e5b3618 <col:52> "" ""
|-CXXMethodDecl 0x56194e5b36a8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56194e5b3748 <col:67> "" ""
|-CXXMethodDecl 0x56194e5b37d8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x56194e5b3878 <col:55> "" ""
|-CXXMethodDecl 0x56194e5b3990 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56194e5b3900 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56194e5b3a38 <col:58> "" ""
|-CXXMethodDecl 0x56194e5b3bd0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56194e5b3ac0 <col:33> col:36 'int'
| |-ParmVarDecl 0x56194e5b3b38 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56194e5b3c80 <col:62> "" ""
|-CXXMethodDecl 0x56194e5b3d98 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x56194e5b3d08 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56194e5b3e40 <col:58> "" ""
|-CXXMethodDecl 0x56194e5b3fd8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x56194e5b3ec8 <col:33> col:36 'int'
| |-ParmVarDecl 0x56194e5b3f40 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x56194e5b4088 <col:62> "" ""
|-CXXMethodDecl 0x56194e5b41a0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56194e5b4110 <col:34> col:37 'int'
| `-DeprecatedAttr 0x56194e5b4248 <col:60> "" ""
|-CXXMethodDecl 0x56194e5b43e0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56194e5b42d0 <col:34> col:37 'int'
| |-ParmVarDecl 0x56194e5b4348 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56194e5b4490 <col:64> "" ""
|-CXXMethodDecl 0x56194e5b45a8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x56194e5b4518 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56194e5b4650 <col:58> "" ""
|-CXXMethodDecl 0x56194e5b47e8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56194e5b46d8 <col:33> col:36 'int'
| |-ParmVarDecl 0x56194e5b4750 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x56194e5b4898 <col:62> "" ""
|-CXXMethodDecl 0x56194e5b49b0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56194e5b4920 <col:33> col:36 'int'
| `-DeprecatedAttr 0x56194e5b4a58 <col:59> "" ""
|-CXXMethodDecl 0x56194e5b4bf0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56194e5b4ae0 <col:33> col:36 'int'
| |-ParmVarDecl 0x56194e5b4b58 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56194e5b4ca0 <col:63> "" ""
|-AccessSpecDecl 0x56194e5b4d10 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x56194e5b4d38 prev 0x56194e5a9f40 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56194e5b4e30 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x56194e5b4f20 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x56194e5b5048 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x56194e5b51c8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x56194e5b5348 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x56194e5b54c8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x56194e5c62f8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56194e5c6b68 <col:11>
| |-CXXDestructorDecl 0x56194e5c63d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x56194e5c6508 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56194e5c6508
| | `-ParmVarDecl 0x56194e5c6618 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x56194e5c66b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56194e5c66b8
| | `-ParmVarDecl 0x56194e5c67c8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x56194e5c9588 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56194e5c9698 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x56194e5c9918 <col:11>
| |   `-ReturnStmt 0x56194e5c9908 <col:11>
| |     `-UnaryOperator 0x56194e5c98f0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56194e5c98e0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x56194e5c9708 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56194e5c9708
|   `-ParmVarDecl 0x56194e5c9818 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x56194e5b5530 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56194e5b5648 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x56194e5b56e8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x56194e5b5750 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x56194e5b57b8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x56194e5b5820 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x56194e5b5880 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x56194e5b5940 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x56194e5b59a0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x56194e5b5a00 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x56194e5c6208 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x56194e5b56e8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x56194e5c6b78 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x56194e5c6bd0 <col:12>
| |-CXXConstructorDecl 0x56194e5c6838 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56194e5c6838
| | `-ParmVarDecl 0x56194e5c6948 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x56194e5c69e8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56194e5c69e8
| | `-ParmVarDecl 0x56194e5c6af8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x56194e5c8c70 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x56194e5b5a78 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x56194e5b5ad8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x56194e5b5b40 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x56194e5b5ba8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x56194e5b5c10 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x56194e5b5c78 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x56194e5b5cd8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x56194e5b5d38 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x56194e5b5da0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x56194e5b5e28 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x56194e5b5a78 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x56194e5c61a0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56194e5b5cd8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x56194e5c6be0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x56194e5c6c40 <col:21, line:755:5>
|-CXXConstructorDecl 0x56194e5b5fc8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x56194e5b5f08 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x56194e5b60c0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x56194e5b62a8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x56194e5b61b0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x56194e5b6578 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x56194e5b6360 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56194e5b63d8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56194e5b6450 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e5b6798 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x56194e5b6648 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x56194e5b66c0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x56194e5bed78 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x56194e5b6858 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x56194e5b68d0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x56194e5b6948 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x56194e5beed0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56194e5bee40 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e5bf018 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56194e5bef88 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x56194e5bf110 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e6b9530 <../elements/standard/simplequeue.hh:65:1, line:114:1> line:65:7 referenced class SimpleQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-public 'Storage'
|-CXXRecordDecl 0x56194e6b96c8 <col:1, col:7> col:7 implicit referenced class SimpleQueue
|-AccessSpecDecl 0x56194e6b9758 <col:54, col:60> col:54 public
|-CXXConstructorDecl 0x56194e6b97e0 <line:67:5, col:17> col:5 SimpleQueue 'void ()'
|-CXXMethodDecl 0x56194e6b98e0 <line:69:5, col:40> col:9 drops 'int () const'
| `-CompoundStmt 0x56194e6bd158 <col:23, col:40>
|   `-ReturnStmt 0x56194e6bd148 <col:25, col:32>
|     `-ImplicitCastExpr 0x56194e6bd130 <col:32> 'int' <LValueToRValue>
|       `-MemberExpr 0x56194e6bd100 <col:32> 'const volatile int' lvalue ->_drops 0x56194e6bbd98
|         `-CXXThisExpr 0x56194e6bd0f0 <col:32> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x56194e6b99a8 <line:70:5, col:62> col:9 highwater_length 'int () const'
| `-CompoundStmt 0x56194e6bd1d8 <col:34, col:62>
|   `-ReturnStmt 0x56194e6bd1c8 <col:36, col:43>
|     `-ImplicitCastExpr 0x56194e6bd1b0 <col:43> 'int' <LValueToRValue>
|       `-MemberExpr 0x56194e6bd180 <col:43> 'const int' lvalue ->_highwater_length 0x56194e6bbe00
|         `-CXXThisExpr 0x56194e6bd170 <col:43> 'const SimpleQueue *' implicit this
|-CXXMethodDecl 0x56194e6b9b18 <line:72:5, col:28> col:17 enq 'bool (Packet *)' inline
| `-ParmVarDecl 0x56194e6b9a58 <col:21, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x56194e6b9c60 <line:73:5, col:33> col:17 lifo_enq 'void (Packet *)' inline
| `-ParmVarDecl 0x56194e6b9bd0 <col:26, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x56194e6b9d28 <line:74:5, col:24> col:20 deq 'Packet *()' inline
|-CXXMethodDecl 0x56194e6b9e70 <line:77:5, col:49> col:13 packet 'Packet *(int) const'
| |-ParmVarDecl 0x56194e6b9de0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x56194e6bd2c8 <col:33, col:49>
|   `-ReturnStmt 0x56194e6bd2b8 <col:35, col:46>
|     `-ImplicitCastExpr 0x56194e6bd2a0 <col:42, col:46> 'Packet *' <LValueToRValue>
|       `-ArraySubscriptExpr 0x56194e6bd280 <col:42, col:46> 'Packet *volatile' lvalue
|         |-ImplicitCastExpr 0x56194e6bd250 <col:42> 'Packet *volatile *' <LValueToRValue>
|         | `-MemberExpr 0x56194e6bd200 <col:42> 'Packet *volatile *const' lvalue ->_q 0x56194e6bbd30
|         |   `-CXXThisExpr 0x56194e6bd1f0 <col:42> 'const SimpleQueue *' implicit this
|         `-ImplicitCastExpr 0x56194e6bd268 <col:45> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x56194e6bd230 <col:45> 'int' lvalue ParmVar 0x56194e6b9de0 'i' 'int'
|-CXXMethodDecl 0x56194e6b9f38 <line:78:5, col:16> col:10 reset 'void ()'
|-FunctionTemplateDecl 0x56194e6ba218 <line:80:5, col:52> col:40 yank1
| |-TemplateTypeParmDecl 0x56194e6b9fd8 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x56194e6ba178 <col:32, col:52> col:40 yank1 'Packet *(Filter)'
|   `-ParmVarDecl 0x56194e6ba088 <col:46> col:52 'Filter'
|-FunctionTemplateDecl 0x56194e6ba488 <line:81:5, col:57> col:40 yank1_peek
| |-TemplateTypeParmDecl 0x56194e6ba278 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x56194e6ba3e8 <col:32, col:57> col:40 yank1_peek 'Packet *(Filter)'
|   `-ParmVarDecl 0x56194e6ba328 <col:51> col:57 'Filter'
|-FunctionTemplateDecl 0x56194e6ba9d0 <line:82:5, col:67> col:36 yank
| |-TemplateTypeParmDecl 0x56194e6ba4e8 <col:15, col:24> col:24 referenced typename depth 0 index 0 Filter
| `-CXXMethodDecl 0x56194e6ba930 <col:32, col:67> col:36 yank 'int (Filter, Vector<Packet *> &)'
|   |-ParmVarDecl 0x56194e6ba598 <col:41> col:47 'Filter'
|   `-ParmVarDecl 0x56194e6ba810 <col:49, col:66> col:67 'Vector<Packet *> &'
|-CXXMethodDecl 0x56194e6baa60 <line:84:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x56194e5dddd8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x56194e6bd330 <col:36, col:60>
|   `-ReturnStmt 0x56194e6bd320 <col:38, col:45>
|     `-ImplicitCastExpr 0x56194e6bd308 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56194e6bd2e0 <col:45> 'const char [12]' lvalue "SimpleQueue"
|-CXXMethodDecl 0x56194e6bab28 <line:85:5, col:58> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x56194e5ddea0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x56194e6bd390 <col:36, col:58>
|   `-ReturnStmt 0x56194e6bd380 <col:38, col:45>
|     `-ImplicitCastExpr 0x56194e6bd368 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x56194e6bd348 <col:45> 'const char []' lvalue Var 0x56194e5de1d8 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x56194e6babf0 <line:86:5, col:53> col:17 processing 'const char *() const'
| |-Overrides: [ 0x56194e5de268 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x56194e6bd470 <col:36, col:53>
|   `-ReturnStmt 0x56194e6bd460 <col:38, col:45>
|     `-ImplicitCastExpr 0x56194e6bd448 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56194e6bd428 <col:45> 'const char [5]' lvalue "h/lh"
|-CXXMethodDecl 0x56194e6bad40 <line:87:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x56194e5dea90 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x56194e6baca8 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x56194e6bb020 <line:89:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x56194e5df670 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x56194e6baed0 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x56194e6baf48 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x56194e6bb178 <line:90:5, col:33> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x56194e5df8c0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x56194e6bb0e0 <col:20, col:32> col:33 'ErrorHandler *'
|-CXXMethodDecl 0x56194e6bb2c0 <line:91:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x56194e5e00d8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x56194e6bb230 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x56194e6bb388 <line:92:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x56194e5e20c0 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x56194e6bd4a8 <col:39, col:54>
|   `-ReturnStmt 0x56194e6bd498 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x56194e6bd488 <col:48> 'bool' true
|-CXXMethodDecl 0x56194e6bb660 <line:93:5, col:56> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x56194e5e2390 Element::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x56194e6bb510 <col:26, col:40> col:41 'Vector<String> &'
| `-ParmVarDecl 0x56194e6bb588 <col:43, col:55> col:56 'ErrorHandler *'
|-CXXMethodDecl 0x56194e6bb830 <line:94:5, col:44> col:10 take_state 'void (Element *, ErrorHandler *)'
| |-Overrides: [ 0x56194e5dfac8 Element::take_state 'void (Element *, ErrorHandler *)' ]
| |-ParmVarDecl 0x56194e6bb720 <col:21, col:28> col:29 'Element *'
| `-ParmVarDecl 0x56194e6bb798 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x56194e6bb900 <line:95:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x56194e5df740 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x56194e6bbac8 <line:97:5, col:32> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x56194e5dcc48 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x56194e6bb9b8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x56194e6bba30 <col:25, col:31> col:32 'Packet *'
|-CXXMethodDecl 0x56194e6bbc20 <line:98:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x56194e5dcdd8 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x56194e6bbb90 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x56194e6bbcc8 <line:100:3, col:12> col:3 protected
|-FieldDecl 0x56194e6bbd30 <line:102:5, col:24> col:24 referenced _q 'Packet *volatile *'
|-FieldDecl 0x56194e6bbd98 <line:103:5, col:18> col:18 referenced _drops 'volatile int'
|-FieldDecl 0x56194e6bbe00 <line:104:5, col:9> col:9 referenced _highwater_length 'int'
|-FriendDecl 0x56194e6bbf68 <line:106:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x56194e6bc0c8 <line:107:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-FriendDecl 0x56194e6bc228 <line:108:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x56194e6bc388 <line:109:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-CXXMethodDecl 0x56194e6bc4f0 <line:111:5, col:47> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56194e6bc3d8 <col:32, col:39> col:40 'Element *'
| `-ParmVarDecl 0x56194e6bc458 <col:42, col:46> col:47 'void *'
|-CXXMethodDecl 0x56194e6bc7d0 <line:112:5, col:75> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56194e6bc5b0 <col:30, col:42> col:43 'const String &'
| |-ParmVarDecl 0x56194e6bc628 <col:45, col:52> col:53 'Element *'
| |-ParmVarDecl 0x56194e6bc6a8 <col:55, col:59> col:60 'void *'
| `-ParmVarDecl 0x56194e6bc720 <col:62, col:74> col:75 'ErrorHandler *'
|-CXXConstructorDecl 0x56194e6bc8b8 <line:65:7> col:7 implicit SimpleQueue 'void (const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x56194e6bc8b8
| `-ParmVarDecl 0x56194e6bc9c8 <col:7> col:7 'const SimpleQueue &'
|-CXXConstructorDecl 0x56194e6bca68 <col:7> col:7 implicit SimpleQueue 'void (SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x56194e6bca68
| `-ParmVarDecl 0x56194e6bcb78 <col:7> col:7 'SimpleQueue &&'
|-CXXMethodDecl 0x56194e6bcc18 <col:7> col:7 implicit operator= 'SimpleQueue &(const SimpleQueue &)' inline default_delete noexcept-unevaluated 0x56194e6bcc18
| `-ParmVarDecl 0x56194e6bcd28 <col:7> col:7 'const SimpleQueue &'
|-CXXMethodDecl 0x56194e6bcd98 <col:7> col:7 implicit operator= 'SimpleQueue &(SimpleQueue &&)' inline default_delete noexcept-unevaluated 0x56194e6bcd98
| `-ParmVarDecl 0x56194e6bcea8 <col:7> col:7 'SimpleQueue &&'
`-CXXDestructorDecl 0x56194e6bcf30 <col:7> col:7 implicit used ~SimpleQueue 'void () noexcept' inline default
  |-Overrides: [ 0x56194e5dc978 Element::~Element 'void () noexcept' ]
  `-CompoundStmt 0x56194e6d3f40 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  NonVirtualBaseLLVMType:%class.SimpleQueue = type { %class.Element.base, %class.Storage, %class.Packet**, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class ActiveNotifier
         0 |   class Notifier (primary base)
         0 |     (Notifier vtable pointer)
         8 |     class NotifierSignal _signal
         8 |       union NotifierSignal::vmvalue _v
         8 |         class atomic_uint32_t * v1
         8 |         struct NotifierSignal::vmpair * vm
        16 |       uint32_t _mask
        24 |     enum Notifier::SearchOp _search_op
        32 |   class Task * _listener1
        40 |   ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierQueue
         0 |   class SimpleQueue (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       108 |     class Storage (base)
       108 |       Storage::index_type _capacity
       112 |       volatile Storage::index_type _head
       116 |       volatile Storage::index_type _tail
       120 |     class Packet *volatile * _q
       128 |     volatile int _drops
       132 |     int _highwater_length
       136 |   int _sleepiness
       144 |   class ActiveNotifier _empty_note
       144 |     class Notifier (primary base)
       144 |       (Notifier vtable pointer)
       152 |       class NotifierSignal _signal
       152 |         union NotifierSignal::vmvalue _v
       152 |           class atomic_uint32_t * v1
       152 |           struct NotifierSignal::vmpair * vm
       160 |         uint32_t _mask
       168 |       enum Notifier::SearchOp _search_op
       176 |     class Task * _listener1
       184 |     ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=192, dsize=192, align=8,
           |  nvsize=192, nvalign=8]

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e695d98 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e695eb8 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x56194e695f58 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x56194e695fb8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x56194e69f408 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x56194e69f408

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e696020 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e696138 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x56194e6961d8 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x56194e696268 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x56194e69dfa0 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56194e69e3d8 <col:11>
|-CXXConstructorDecl 0x56194e69e0a8 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x56194e69e0a8
| `-ParmVarDecl 0x56194e69e1b8 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x56194e69e258 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x56194e69e258
| `-ParmVarDecl 0x56194e69e368 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x56194e69f0d0 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e693cd0 prev 0x56194e5dc370 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56194e693dc8 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x56194e693e58 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x56194e693f88 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x56194e693f00 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x56194e5dc400 'NotifierSignal'
|   | `-CXXRecord 0x56194e693cd0 'NotifierSignal'
|   `-ParenType 0x56194e693ea0 'bool () const' sugar
|     `-FunctionProtoType 0x56194e122d00 'bool () const' const cdecl
|       `-BuiltinType 0x56194e079330 'bool'
|-CXXConstructorDecl 0x56194e694018 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x56194e694258 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x56194e6940d0 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x56194e694148 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56194e694408 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x56194e694348 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x56194e694500 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x56194e694628 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x56194e6946e8 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x56194e6947a8 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x56194e694868 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x56194e694958 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x56194e694ac8 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56194e694c48 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x56194e694b88 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x56194e694d10 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x56194e694dd0 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x56194e694e90 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x56194e694f50 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x56194e695208 <line:36:5, col:76> col:17
| `-FunctionDecl 0x56194e695148 parent 0x56194e0792b8 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x56194e695000 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x56194e695078 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x56194e695428 <line:37:5, col:76> col:17
| `-FunctionDecl 0x56194e695368 parent 0x56194e0792b8 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x56194e695258 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x56194e6952d0 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x56194e695568 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x56194e695478 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x56194e6956b0 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x56194e695620 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x56194e695978 <line:41:5, col:78> col:27
| `-FunctionDecl 0x56194e6958b8 parent 0x56194e0792b8 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x56194e695768 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x56194e6957e0 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x56194e695a88 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x56194e6959c8 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x56194e695c08 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x56194e695b40 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x56194e695cd0 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x56194e695d70 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x56194e695d98 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56194e695eb8 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x56194e695f58 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x56194e695fb8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x56194e69f408 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x56194e69f408
|-CXXRecordDecl 0x56194e696020 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56194e696138 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x56194e6961d8 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x56194e696268 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x56194e69dfa0 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56194e69e3d8 <col:11>
| |-CXXConstructorDecl 0x56194e69e0a8 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x56194e69e0a8
| | `-ParmVarDecl 0x56194e69e1b8 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x56194e69e258 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x56194e69e258
| | `-ParmVarDecl 0x56194e69e368 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x56194e69f0d0 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x56194e6962e0 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x56194e696340 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x56194e696390 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x56194e696490 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x56194e696690 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e696470 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56194e696450 <col:14> 'int' 1
| |-EnumConstantDecl 0x56194e696520 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x56194e6966a8 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e696500 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x56194e6964e0 <col:30> 'int' 2
| |-EnumConstantDecl 0x56194e6965b0 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x56194e6966c0 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e696590 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x56194e696570 <col:52> 'int' 4
| `-EnumConstantDecl 0x56194e696640 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x56194e6966d8 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e696620 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x56194e696600 <col:23> 'int' 8
|-VarDecl 0x56194e696700 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x56194e696808 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x56194e696778 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x56194e6969d0 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x56194e6968c0 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x56194e696938 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x56194e696c08 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x56194e696ab8 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x56194e696b30 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e696cb8 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x56194e696dd8 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x56194e696e68 <col:18, col:24> col:18 public
|-EnumDecl 0x56194e696e90 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x56194e696f90 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x56194e697080 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e696f70 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x56194e696f50 <col:35> 'int' 0
| |-EnumConstantDecl 0x56194e696fe0 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x56194e697030 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x56194e6972c8 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x56194e697260 'void (*)(void *, Notifier *)'
|   `-ParenType 0x56194e697200 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x56194e6971c0 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x56194e079310 'void'
|       |-PointerType 0x56194e079b10 'void *'
|       | `-BuiltinType 0x56194e079310 'void'
|       `-PointerType 0x56194e697120 'Notifier *'
|         `-RecordType 0x56194e696d50 'Notifier'
|           `-CXXRecord 0x56194e696cb8 'Notifier'
|-CXXConstructorDecl 0x56194e697408 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x56194e697330 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x56194e69c1a8 <col:35> 'Notifier::SearchOp' EnumConstant 0x56194e696f90 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x56194e697618 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x56194e6974c8 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x56194e697540 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x56194e69c1c8 <col:65> 'Notifier::SearchOp' EnumConstant 0x56194e696f90 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x56194e697718 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x56194e697848 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x56194e69c288 <col:37, line:85:5>
|   `-ReturnStmt 0x56194e69c278 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x56194e69c258 <col:9, col:29> 'bool'
|       `-MemberExpr 0x56194e69c228 <col:9, col:17> '<bound member function type>' .initialized 0x56194e694f50
|         `-MemberExpr 0x56194e69c1f8 <col:9> 'const NotifierSignal' lvalue ->_signal 0x56194e69bbc8
|           `-CXXThisExpr 0x56194e69c1e8 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x56194e697a50 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x56194e697900 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x56194e697978 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x56194e697b48 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x56194e697c38 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x56194e697cf8 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x56194e697e38 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x56194e697da8 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x56194e697f00 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x56194e698dd0 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x56194e699040 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x56194e698ea0 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x56194e698f20 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x56194e699298 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x56194e699100 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x56194e699180 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x56194e699420 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x56194e699358 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x56194e699568 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x56194e6994d8 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x56194e6996f0 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x56194e699620 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x56194e699868 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x56194e6997a8 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x56194e699930 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x56194e6999b8 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x56194e699b88 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x56194e699a30 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x56194e699ab0 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x56194e699e28 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x56194e699c48 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x56194e699cc8 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x56194e699d40 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x56194e69a0c8 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x56194e699ef0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x56194e699f70 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x56194e699fe8 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x56194e69a448 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x56194e69a190 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x56194e69a210 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x56194e69a288 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x56194e69a308 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x56194e69a630 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x56194e69a518 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x56194e69a598 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x56194e69a888 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x56194e69a6f0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x56194e69a770 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x56194e69a7e8 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x56194e69aae8 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x56194e69a950 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x56194e69a9d0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x56194e69aa48 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x56194e69add0 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x56194e69abb0 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x56194e69ac30 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x56194e69aca8 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x56194e69ad28 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x56194e69b088 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x56194e69aea0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x56194e69af20 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x56194e69afa0 <col:78> col:81 'int'
| `-DeprecatedAttr 0x56194e69b140 <col:98> "" ""
|-CXXMethodDecl 0x56194e69b428 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x56194e69b1c0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x56194e69b240 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x56194e69b2c0 <col:78> col:81 'int'
| |-ParmVarDecl 0x56194e69b338 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x56194e69b4e8 <col:110> "" ""
|-CXXMethodDecl 0x56194e69b708 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x56194e69b568 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x56194e69b5e8 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x56194e69b668 <col:79> col:82 'int'
| `-DeprecatedAttr 0x56194e69b7c0 <col:99> "" ""
|-CXXMethodDecl 0x56194e69ba60 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x56194e69b840 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x56194e69b8c0 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x56194e69b940 <col:79> col:82 'int'
| |-ParmVarDecl 0x56194e69b9b8 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x56194e69bb20 <col:111> "" ""
|-AccessSpecDecl 0x56194e69bb90 <line:123:3, col:10> col:3 private
|-FieldDecl 0x56194e69bbc8 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x56194e69bc28 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x56194e69bda0 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x56194e69bc90 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x56194e69bd08 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x56194e69be78 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x56194e69be78
| `-ParmVarDecl 0x56194e69bf88 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x56194e69c028 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x56194e69c028
  `-ParmVarDecl 0x56194e69c138 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e5f9fc0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e5fa0d8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x56194e5fa1a8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x56194e5fa208 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x56194e5fa270 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x56194e5fa2f8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x56194e5fa560 <col:16, line:46:5>
|   |-BinaryOperator 0x56194e5fa4a8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x56194e5fa3c8 <col:9> 'TaskLink *' lvalue ->_prev 0x56194e5fa1a8
|   | | `-CXXThisExpr 0x56194e5fa3b8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x56194e5fa490 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x56194e5fa470 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x56194e5fa408 <col:17> 'TaskLink *' lvalue ->_next 0x56194e5fa208
|   |     | `-CXXThisExpr 0x56194e5fa3f8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x56194e5fa458 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x56194e5fa438 <col:25> 'int' 0
|   `-BinaryOperator 0x56194e5fa540 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x56194e5fa4d8 <col:9> 'unsigned int' lvalue ->_pass 0x56194e5fa270
|     | `-CXXThisExpr 0x56194e5fa4c8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x56194e5fa528 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56194e5fa508 <col:17> 'int' 0
|-CXXConstructorDecl 0x56194e686a98 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x56194e686a98
| `-ParmVarDecl 0x56194e686ba8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x56194e686c48 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x56194e686c48
| `-ParmVarDecl 0x56194e686d58 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x56194e686f48 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x56194e686f48
|-CXXMethodDecl 0x56194e687748 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x56194e687748
| `-ParmVarDecl 0x56194e687858 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x56194e6878c8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x56194e6878c8
  `-ParmVarDecl 0x56194e6879d8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e55d688 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56194e55d7b8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x56194e55d818 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x56194e55d878 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x56194e68dc58 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x56194e68dd30 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56194e68dd30
|-CXXConstructorDecl 0x56194e68dfe8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56194e68dfe8
| `-ParmVarDecl 0x56194e68e0f8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x56194e68e198 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56194e68e198
  `-ParmVarDecl 0x56194e68e2a8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e55d4d8 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56194e55d5f8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x56194e55d688 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56194e55d7b8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x56194e55d818 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x56194e55d878 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x56194e68dc58 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x56194e68dd30 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56194e68dd30
| |-CXXConstructorDecl 0x56194e68dfe8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56194e68dfe8
| | `-ParmVarDecl 0x56194e68e0f8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x56194e68e198 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56194e68e198
|   `-ParmVarDecl 0x56194e68e2a8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x56194e55d938 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x56194e55d998 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x56194e55d938 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56194e55d7b8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x56194e55d9f0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x56194e55d938 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56194e55d818 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x56194e55da48 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x56194e55d938 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56194e55d878 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x56194e55daa0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56194e68db68 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56194e68e4c8 <col:11>
|-CXXConstructorDecl 0x56194e68de38 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x56194e68de38
| `-ParmVarDecl 0x56194e68df48 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x56194e68e348 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x56194e68e348
  `-ParmVarDecl 0x56194e68e458 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e574fd0 prev 0x56194e56be10 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e5750c8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x56194e575168 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x56194e57bf30 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56194e57c318 <col:11>
|-CXXConstructorDecl 0x56194e57c010 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56194e57c0f8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56194e57ca60 <col:11>
|-CXXConstructorDecl 0x56194e57c198 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56194e57c2a8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x56194e57e2b8 <col:11>
|-CXXDestructorDecl 0x56194e57d5c8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56194e284178 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56194e284288 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56194e284b50 <col:11>
|   `-ReturnStmt 0x56194e284b40 <col:11>
|     `-UnaryOperator 0x56194e284b28 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56194e284b18 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x56194e2842f8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56194e284408 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x56194e6169f0 <col:11>
    `-ReturnStmt 0x56194e6169e0 <col:11>
      `-UnaryOperator 0x56194e6169c8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56194e6169b8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e56afc8 prev 0x56194e56acd8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e56b0c0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x56194e56b150 <col:19, col:25> col:19 public
|-TypedefDecl 0x56194e56b188 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x56194e1d0350 'int32_t' sugar
|   |-Typedef 0x56194e0e2238 'int32_t'
|   `-TypedefType 0x56194e0bb3f0 '__int32_t' sugar
|     |-Typedef 0x56194e0bb008 '__int32_t'
|     `-BuiltinType 0x56194e0793b0 'int'
|-TypedefDecl 0x56194e56b1f0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x56194e1d0510 'int64_t' sugar
|   |-Typedef 0x56194e0e22a0 'int64_t'
|   `-TypedefType 0x56194e0bb510 '__int64_t' sugar
|     |-Typedef 0x56194e0bb0e8 '__int64_t'
|     `-BuiltinType 0x56194e0793d0 'long'
|-EnumDecl 0x56194e56b248 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x56194e56b3c0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x56194e56b3a0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x56194e56b378 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x56194e56b360 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x56194e56b330 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x56194e56b4b8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x56194e56b498 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x56194e56b470 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x56194e56b458 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x56194e56b430 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x56194e56b410 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x56194e56b508 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x56194e56b610 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56194e56bb60 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e56b5f0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x56194e56b5d0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x56194e56b6a0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56194e56bb78 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e56b680 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56194e56b660 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x56194e56b730 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56194e56bb90 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e56b710 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56194e56b6f0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56194e56b7c0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56194e56bba8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e56b7a0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56194e56b780 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x56194e56b850 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56194e56bbc0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e56b830 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56194e56b810 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56194e56b8e0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56194e56bbd8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e56b8c0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x56194e56b8a0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x56194e56b970 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56194e56bbf0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e56b950 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x56194e56b930 <col:26> 'int' EnumConstant 0x56194e56b610 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x56194e56ba40 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56194e56bc08 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e56ba20 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x56194e56ba00 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x56194e56b9c0 <col:27> 'int' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x56194e56b9e0 <col:44> 'int' EnumConstant 0x56194e56b8e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x56194e56bb10 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x56194e56bc20 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e56baf0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x56194e56bad0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x56194e56ba90 <col:27> 'int' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x56194e56bab0 <col:44> 'int' EnumConstant 0x56194e56b7c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x56194e56bc38 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x56194e56bd40 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x56194e56bd90 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e56bd20 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x56194e56bd00 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x56194e56bdb8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x56194e1cff80 'uninitialized_type'
|   `-CXXRecord 0x56194e1cfee8 'uninitialized_type'
|-CXXRecordDecl 0x56194e56be10 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x56194e56bf20 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x56194e576118 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56194e57c328 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56194e57c448 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x56194e57c400 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x56194e57c390 <col:9> '<bound member function type>' ->assign 0x56194e570b68
|     | `-CXXThisExpr 0x56194e57c380 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56194e57c3c0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56194e57c430 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56194e57c3e0 <col:19> 'int' 0
|-CXXConstructorDecl 0x56194e56c168 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x56194e56bfe0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x56194e56c058 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56194e577c60 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56194e577c40 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x56194e576118 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56194e57c460 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56194e57c5b0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x56194e57c538 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x56194e57c4c8 <col:9> '<bound member function type>' ->assign 0x56194e570b68
|     | `-CXXThisExpr 0x56194e57c4b8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56194e57c580 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56194e57c568 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56194e57c4f8 <col:16> 'long' lvalue ParmVar 0x56194e56bfe0 'sec' 'long'
|     `-ImplicitCastExpr 0x56194e57c598 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56194e57c518 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e56c058 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56194e56c3c8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56194e56c238 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x56194e56c2b0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56194e577c98 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56194e577c78 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x56194e576118 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56194e57c5c8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56194e57c700 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x56194e57c6a0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x56194e57c630 <col:9> '<bound member function type>' ->assign 0x56194e570b68
|     | `-CXXThisExpr 0x56194e57c620 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56194e57c6d0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56194e57c660 <col:16> 'int' lvalue ParmVar 0x56194e56c238 'sec' 'int'
|     `-ImplicitCastExpr 0x56194e57c6e8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56194e57c680 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e56c2b0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56194e56c628 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x56194e56c498 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x56194e56c510 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56194e577cd0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56194e577cb0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x56194e576118 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56194e57c718 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56194e57c868 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x56194e57c7f0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x56194e57c780 <col:9> '<bound member function type>' ->assign 0x56194e570b68
|     | `-CXXThisExpr 0x56194e57c770 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56194e57c838 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56194e57c820 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56194e57c7b0 <col:16> 'unsigned long' lvalue ParmVar 0x56194e56c498 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x56194e57c850 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56194e57c7d0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e56c510 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56194e56d7c0 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x56194e56c6f8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x56194e56c770 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56194e577d08 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56194e577ce8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x56194e576118 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56194e57c880 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56194e57c9d0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x56194e57c958 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x56194e57c8e8 <col:9> '<bound member function type>' ->assign 0x56194e570b68
|     | `-CXXThisExpr 0x56194e57c8d8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56194e57c9a0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56194e57c988 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56194e57c918 <col:16> 'unsigned int' lvalue ParmVar 0x56194e56c6f8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x56194e57c9b8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56194e57c938 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e56c770 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56194e56d920 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x56194e56d890 <col:31> col:37 'double'
|-CXXConstructorDecl 0x56194e56dab8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x56194e56d9f8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x56194e56dce8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x56194e56dbf0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x56194e56de98 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x56194e56ddd8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x56194e576118 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56194e57ca70 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x56194e57c9e8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x56194e56ddd8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56194e57cad0 <col:19, line:214:5>
|-CXXConstructorDecl 0x56194e56e068 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x56194e56dfa8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x56194e576118 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56194e57cae0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56194e57cb90 <col:53, line:219:5>
|   `-CStyleCastExpr 0x56194e57cb68 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x56194e57cb38 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x56194e56dfa8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x56194e56e258 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x56194e56e1d0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x56194e56ad70 'Timestamp'
|   | `-CXXRecord 0x56194e56afc8 'Timestamp'
|   `-ParenType 0x56194e56e170 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x56194e56e140 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x56194e56b310 'Timestamp::seconds_type' sugar
|         |-Typedef 0x56194e56b188 'seconds_type'
|         `-TypedefType 0x56194e1d0350 'int32_t' sugar
|           |-Typedef 0x56194e0e2238 'int32_t'
|           `-TypedefType 0x56194e0bb3f0 '__int32_t' sugar
|             |-Typedef 0x56194e0bb008 '__int32_t'
|             `-BuiltinType 0x56194e0793b0 'int'
|-CXXConversionDecl 0x56194e56e398 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56194e56e468 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x56194e57cc98 <col:37, line:231:5>
|   `-ReturnStmt 0x56194e57cc88 <line:227:9, col:23>
|     `-BinaryOperator 0x56194e57cc68 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x56194e57cc38 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56194e57cbe8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56194e575168
|       |   `-MemberExpr 0x56194e57cbb8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56194e576118
|       |     `-CXXThisExpr 0x56194e57cba8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56194e57cc50 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x56194e57cc18 <col:23> 'int' 0
|-CXXMethodDecl 0x56194e56e528 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x56194e56e5e8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56194e56e6a8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x56194e56e768 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x56194e56e828 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56194e56e998 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x56194e56e8d8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x56194e56eae0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x56194e56ea50 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e56eba8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56194e56ec48 <col:54> "" ""
|-CXXMethodDecl 0x56194e56ecd8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56194e56ed78 <col:54> "" ""
|-CXXMethodDecl 0x56194e56ee08 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56194e56eea8 <col:54> "" ""
|-CXXMethodDecl 0x56194e56efa8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x56194e56f078 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x56194e56f1a8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x56194e56f2a0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x56194e56f3d8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56194e57ceb0 <col:39, line:271:5>
|   `-ReturnStmt 0x56194e57cea0 <line:267:9, col:61>
|     `-CallExpr 0x56194e57ce40 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56194e57ce28 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56194e57ccb0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56194e576448 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56194e57ce70 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56194e57cd10 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56194e575168
|       |   `-MemberExpr 0x56194e57cce0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56194e576118
|       |     `-CXXThisExpr 0x56194e57ccd0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56194e57ce88 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56194e57cdb0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56194e57cd80 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56194e57cd40 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56194e57cd98 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56194e57cd60 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b8e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56194e56f498 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56194e57d070 <col:39, line:279:5>
|   `-ReturnStmt 0x56194e57d060 <line:275:9, col:61>
|     `-CallExpr 0x56194e57d000 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56194e57cfe8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56194e57cec8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56194e576448 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56194e57d030 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56194e57cf28 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56194e575168
|       |   `-MemberExpr 0x56194e57cef8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56194e576118
|       |     `-CXXThisExpr 0x56194e57cee8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56194e57d048 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56194e57cfc8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56194e57cf98 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56194e57cf58 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56194e57cfb0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56194e57cf78 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b7c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56194e56f558 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56194e57d208 <col:39, line:287:5>
|   `-ReturnStmt 0x56194e57d1f8 <line:283:9, col:53>
|     `-BinaryOperator 0x56194e57d1d8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x56194e57d1a8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56194e57d0c8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56194e575168
|       |   `-MemberExpr 0x56194e57d098 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56194e576118
|       |     `-CXXThisExpr 0x56194e57d088 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56194e57d1c0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x56194e57d188 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56194e57d168 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56194e57d138 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56194e57d0f8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b610 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56194e57d150 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56194e57d118 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56194e56f648 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56194e57e4a0 <col:40, line:293:5>
|   |-DeclStmt 0x56194e57d350 <line:291:9, col:48>
|   | `-VarDecl 0x56194e57d230 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56194e57d330 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56194e57d2d8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56194e57d2a8 <col:22> '<bound member function type>' ->subsec 0x56194e56e5e8
|   |     |   `-CXXThisExpr 0x56194e57d298 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56194e57d318 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56194e57d2f8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56ba40 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56194e57e490 <line:292:9, col:70>
|     `-ExprWithCleanups 0x56194e57e478 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56194e57e448 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56194e57e430 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56194e57e410 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56194e57e3e0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56194e57e178 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56194e57e160 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56194e57d368 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56194e57d230 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56194e57e380 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56194e57e368 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56194e57e338 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56194e57e190 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56194e57e100 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56194e57e0e8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56194e57e098 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56194e56af18 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56194e57e038 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56194e57d398 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56194e57d388 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56194e57e080 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56194e57e068 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56194e57d858 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56194e57d3c0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56194e57d450 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56194e57d420 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56194e57d3e0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56ba40 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56194e57d438 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56194e57d400 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56194e57d230 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56194e57e3b0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56194e57e148 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56194e57e138 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56194e56f708 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56194e57e9f8 <col:40, line:302:5>
|   |-DeclStmt 0x56194e57e5f0 <line:297:9, col:48>
|   | `-VarDecl 0x56194e57e4d0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56194e57e5d0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56194e57e578 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56194e57e548 <col:22> '<bound member function type>' ->subsec 0x56194e56e5e8
|   |     |   `-CXXThisExpr 0x56194e57e538 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56194e57e5b8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56194e57e598 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56bb10 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56194e57e9e8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x56194e57e9d0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56194e57e9a0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56194e57e988 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56194e57e968 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56194e57e938 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56194e57e860 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56194e57e848 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56194e57e608 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56194e57e4d0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56194e57e8d8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56194e57e8c0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56194e57e890 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56194e57e878 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56194e57e7e8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56194e57e7d0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56194e57e7b0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56194e56af18 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56194e57e750 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56194e57e638 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56194e57e628 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56194e57e798 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56194e57e780 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56194e57e710 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56194e57e660 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56194e57e6f0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56194e57e6c0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56194e57e680 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56bb10 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56194e57e6d8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56194e57e6a0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56194e57e4d0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56194e57e908 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56194e57e830 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56194e57e820 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56194e56f7c8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56194e57ea80 <col:40, line:306:5>
|   `-ReturnStmt 0x56194e57ea70 <line:305:9, col:17>
|     `-CXXConstructExpr 0x56194e57ea40 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x56194e57ea28 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56194e57ea18 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x56194e56f968 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x56194e56f878 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x56194e56fb38 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x56194e56fa40 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x56194e56fc28 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x56194e56fd98 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x56194e56fcd8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x56194e57ebc8 <col:56, line:320:5>
|   `-ReturnStmt 0x56194e57ebb8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x56194e57eba0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x56194e57eb70 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56194e57eb58 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56194e57eb18 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56194e57eae8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56194e57eaa8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56194e56fcd8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x56194e57eb00 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56194e57eac8 <col:31> 'int' 0
|-CXXMethodDecl 0x56194e56ffd8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56194e56fe50 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56194e56fec8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e57ed98 <col:72, line:326:5>
|   `-ReturnStmt 0x56194e57ed88 <line:325:9, col:51>
|     `-ExprWithCleanups 0x56194e57ed70 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56194e57ed40 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56194e57ed28 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56194e57ece8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56194e57ecd0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56194e57ebf0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56194e56fe50 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56194e57ec90 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56194e57ec78 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56194e57ec10 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56194e5748c0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56194e57ecb8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56194e57ec30 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e56fec8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e570188 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56194e570098 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56194e57f460 <col:56, line:337:5>
|   |-DeclStmt 0x56194e57f098 <line:329:9, col:51>
|   | `-VarDecl 0x56194e57edc0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56194e57f080 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56194e57f050 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56194e57f038 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56194e57f020 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56194e57eff0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56194e57efd8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56194e57efc0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56194e57eeb0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56194e57f250 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56194e57f100 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56194e575168
|   | | `-MemberExpr 0x56194e57f0d0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56194e576118
|   | |   `-DeclRefExpr 0x56194e57f0b0 <col:9> 'Timestamp' lvalue Var 0x56194e57edc0 't' 'Timestamp'
|   | `-BinaryOperator 0x56194e57f230 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56194e57f200 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56194e57f130 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56194e570098 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56194e57f218 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56194e57f1e0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56194e57f1c0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56194e57f190 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56194e57f150 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56194e57f1a8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56194e57f170 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b8e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56194e57f448 <line:336:9, col:16>
|     `-CXXConstructExpr 0x56194e57f418 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56194e57f400 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56194e57f3e0 <col:16> 'Timestamp' lvalue Var 0x56194e57edc0 't' 'Timestamp'
|-CXXMethodDecl 0x56194e570350 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56194e570240 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56194e5702b8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e57f618 <col:72, line:343:5>
|   `-ReturnStmt 0x56194e57f608 <line:342:9, col:51>
|     `-ExprWithCleanups 0x56194e57f5f0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56194e57f5c0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56194e57f5a8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56194e57f568 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56194e57f550 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56194e57f498 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56194e570240 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56194e57f510 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56194e57f4f8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56194e57f4b8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56194e574a08 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56194e57f538 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56194e57f4d8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e5702b8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e5704a0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56194e570410 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56194e57fa60 <col:56, line:354:5>
|   |-DeclStmt 0x56194e57f808 <line:346:9, col:51>
|   | `-VarDecl 0x56194e57f640 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56194e57f7f0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56194e57f7c0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56194e57f7a8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56194e57f790 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56194e57f760 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56194e57f748 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56194e57f730 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56194e57f700 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56194e57f9c0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56194e57f870 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56194e575168
|   | | `-MemberExpr 0x56194e57f840 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56194e576118
|   | |   `-DeclRefExpr 0x56194e57f820 <col:9> 'Timestamp' lvalue Var 0x56194e57f640 't' 'Timestamp'
|   | `-BinaryOperator 0x56194e57f9a0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56194e57f970 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56194e57f8a0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56194e570410 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56194e57f988 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56194e57f950 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56194e57f930 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56194e57f900 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56194e57f8c0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56194e57f918 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56194e57f8e0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b7c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56194e57fa48 <line:353:9, col:16>
|     `-CXXConstructExpr 0x56194e57fa18 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56194e57fa00 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56194e57f9e0 <col:16> 'Timestamp' lvalue Var 0x56194e57f640 't' 'Timestamp'
|-CXXMethodDecl 0x56194e570668 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56194e570558 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56194e5705d0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e57fc18 <col:72, line:360:5>
|   `-ReturnStmt 0x56194e57fc08 <line:359:9, col:51>
|     `-ExprWithCleanups 0x56194e57fbf0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56194e57fbc0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56194e57fba8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56194e57fb68 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56194e57fb50 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56194e57fa98 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56194e570558 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56194e57fb10 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56194e57faf8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56194e57fab8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56194e574b50 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56194e57fb38 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56194e57fad8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e5705d0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e5707b8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56194e570728 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56194e58c588 <col:56, line:371:5>
|   |-DeclStmt 0x56194e57fe08 <line:363:9, col:51>
|   | `-VarDecl 0x56194e57fc40 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56194e57fdf0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56194e57fdc0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56194e57fda8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56194e57fd90 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56194e57fd60 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56194e57fd48 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56194e57fd30 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56194e57fd00 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56194e58c4e8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56194e57fe70 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56194e575168
|   | | `-MemberExpr 0x56194e57fe40 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56194e576118
|   | |   `-DeclRefExpr 0x56194e57fe20 <col:9> 'Timestamp' lvalue Var 0x56194e57fc40 't' 'Timestamp'
|   | `-CallExpr 0x56194e58c488 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x56194e58c470 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x56194e57fea0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56194e576448 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x56194e58c4b8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56194e57fec0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x56194e570728 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56194e58c4d0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x56194e58c450 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x56194e58c420 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x56194e57fee0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b610 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x56194e58c438 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x56194e57ff00 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56194e58c570 <line:370:9, col:16>
|     `-CXXConstructExpr 0x56194e58c540 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56194e58c528 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56194e58c508 <col:16> 'Timestamp' lvalue Var 0x56194e57fc40 't' 'Timestamp'
|-CXXMethodDecl 0x56194e5708a8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x56194e58c6c8 <col:39, line:377:5>
|   `-ReturnStmt 0x56194e58c6b8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x56194e58c6a0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x56194e58c670 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56194e58c658 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56194e58c618 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x56194e58c5c0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x56194e58c600 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56194e58c5e0 <col:29> 'int' 1
|-CXXMethodDecl 0x56194e570968 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x56194e58c7a8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x56194e58c760 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x56194e58c6f0 <col:9> '<bound member function type>' ->assign 0x56194e570b68
|     | `-CXXThisExpr 0x56194e58c6e0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56194e58c720 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56194e58c790 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56194e58c740 <col:19> 'int' 0
|-CXXMethodDecl 0x56194e570b68 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56194e570a18 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56194e570a90 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56194e577d40 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56194e577d20 <col:60> 'int' 0
| `-CompoundStmt 0x56194e58c9a0 <col:63, line:395:5>
|   `-BinaryOperator 0x56194e58c980 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x56194e58c800 <col:9, col:12> 'int64_t':'long' lvalue .x 0x56194e575168
|     | `-MemberExpr 0x56194e58c7d0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x56194e576118
|     |   `-CXXThisExpr 0x56194e58c7c0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x56194e58c960 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x56194e58c8f0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x56194e58c890 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x56194e58c878 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x56194e58c860 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x56194e58c830 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56194e570a18 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x56194e58c8d8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x56194e58c8b8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x56194e58c948 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x56194e58c930 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x56194e58c910 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e570a90 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e570d38 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56194e570c28 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56194e570ca0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e58caf8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x56194e58cab0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x56194e58c9c8 <col:9> '<bound member function type>' ->assign 0x56194e570b68
|     | `-CXXThisExpr 0x56194e58c9b8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56194e58cae0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56194e58c9f8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56194e570c28 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56194e58ca70 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56194e58ca58 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56194e58ca18 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56194e574a08 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56194e58ca98 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56194e58ca38 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e570ca0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e570f08 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56194e570df8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56194e570e70 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e58cc50 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x56194e58cc08 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x56194e58cb20 <col:9> '<bound member function type>' ->assign 0x56194e570b68
|     | `-CXXThisExpr 0x56194e58cb10 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56194e58cc38 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56194e58cb50 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56194e570df8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56194e58cbc8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56194e58cbb0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56194e58cb70 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56194e574b50 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56194e58cbf0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56194e58cb90 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e570e70 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e5710d8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56194e570fc8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56194e571040 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56194e577d78 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56194e577d58 <col:57> 'int' 0
| `-DeprecatedAttr 0x56194e571188 <col:75> "" ""
|-CXXMethodDecl 0x56194e571318 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56194e571208 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56194e571280 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56194e5713c8 <col:74> "" ""
|-CXXMethodDecl 0x56194e571558 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56194e571448 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56194e5714c0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56194e571608 <col:74> "" ""
|-CXXMethodDecl 0x56194e571698 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x56194e571738 <col:42> "" ""
|-CXXMethodDecl 0x56194e573f70 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x56194e573e50 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56194e573ed0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x56194e574040 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x56194e574100 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x56194e5741a0 <col:20>
| `-OptimizeNoneAttr 0x56194e5741f8 <col:30>
|-CXXMethodDecl 0x56194e574240 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x56194e574300 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x56194e5743c0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56194e574480 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x56194e574540 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56194e574600 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x56194e5746c0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x56194e574780 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x56194e5748c0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56194e574830 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e58cd98 <col:58, line:512:5>
|   `-ReturnStmt 0x56194e58cd88 <line:511:9, col:53>
|     `-BinaryOperator 0x56194e58cd68 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56194e58cd38 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56194e58cc68 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e574830 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56194e58cd50 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56194e58cd18 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56194e58ccf8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56194e58ccc8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56194e58cc88 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56194e58cce0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56194e58cca8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b8e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56194e574a08 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56194e574978 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e58cee0 <col:58, line:516:5>
|   `-ReturnStmt 0x56194e58ced0 <line:515:9, col:53>
|     `-BinaryOperator 0x56194e58ceb0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56194e58ce80 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56194e58cdb0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e574978 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56194e58ce98 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56194e58ce60 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56194e58ce40 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56194e58ce10 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56194e58cdd0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56194e58ce28 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56194e58cdf0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b7c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56194e574b50 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56194e574ac0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e58d028 <col:58, line:520:5>
|   `-ReturnStmt 0x56194e58d018 <line:519:9, col:53>
|     `-BinaryOperator 0x56194e58cff8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56194e58cfc8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56194e58cef8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e574ac0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56194e58cfe0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56194e58cfa8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56194e58cf88 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56194e58cf58 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56194e58cf18 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b610 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56194e58cf70 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56194e58cf38 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56194e574c98 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56194e574c08 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e58d170 <col:60, line:524:5>
|   `-ReturnStmt 0x56194e58d160 <line:523:9, col:55>
|     `-BinaryOperator 0x56194e58d140 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56194e58d110 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56194e58d040 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e574c08 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56194e58d128 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56194e58d0f0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56194e58d0d0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56194e58d0a0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56194e58d060 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56194e58d0b8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56194e58d080 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b8e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56194e574de0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56194e574d50 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e58d2b8 <col:60, line:528:5>
|   `-ReturnStmt 0x56194e58d2a8 <line:527:9, col:55>
|     `-BinaryOperator 0x56194e58d288 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56194e58d258 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56194e58d188 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e574d50 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56194e58d270 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56194e58d238 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56194e58d218 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56194e58d1e8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56194e58d1a8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56194e58d200 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56194e58d1c8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b7c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56194e574f28 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56194e574e98 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e58d400 <col:60, line:532:5>
|   `-ReturnStmt 0x56194e58d3f0 <line:531:9, col:55>
|     `-BinaryOperator 0x56194e58d3d0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56194e58d3a0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56194e58d2d0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e574e98 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56194e58d3b8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56194e58d380 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56194e58d360 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56194e58d330 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56194e58d2f0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b610 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56194e58d348 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56194e58d310 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56194e56b970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x56194e574fd0 prev 0x56194e56be10 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56194e5750c8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x56194e575168 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x56194e57bf30 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56194e57c318 <col:11>
| |-CXXConstructorDecl 0x56194e57c010 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56194e57c0f8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56194e57ca60 <col:11>
| |-CXXConstructorDecl 0x56194e57c198 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x56194e57c2a8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x56194e57e2b8 <col:11>
| |-CXXDestructorDecl 0x56194e57d5c8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56194e284178 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56194e284288 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56194e284b50 <col:11>
| |   `-ReturnStmt 0x56194e284b40 <col:11>
| |     `-UnaryOperator 0x56194e284b28 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56194e284b18 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x56194e2842f8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x56194e284408 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x56194e6169f0 <col:11>
|     `-ReturnStmt 0x56194e6169e0 <col:11>
|       `-UnaryOperator 0x56194e6169c8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56194e6169b8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x56194e5751d0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x56194e5752d0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56194e5754d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5752b0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56194e575290 <col:21> 'int' 0
| |-EnumConstantDecl 0x56194e575360 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56194e5754e8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e575340 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x56194e575320 <col:23> 'int' 1
| |-EnumConstantDecl 0x56194e5753f0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56194e575500 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5753d0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x56194e5753b0 <col:23> 'int' 2
| `-EnumConstantDecl 0x56194e575480 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x56194e575518 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e575460 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x56194e575440 <col:27> 'int' 3
|-CXXMethodDecl 0x56194e575558 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x56194e575620 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x56194e575828 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x56194e5756d0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x56194e575750 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x56194e577d90 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x56194e575a38 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x56194e5758e8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x56194e575960 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x56194e575b08 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x56194e575bc8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x56194e575d38 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x56194e575c78 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x56194e575e00 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56194e575ec0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x56194e575f80 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56194e576040 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x56194e5760e0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x56194e576118 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x56194e576188 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x56194e58d418 <col:27, line:684:5>
|-CXXMethodDecl 0x56194e576248 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x56194e58d428 <col:27, line:696:5>
|-CXXMethodDecl 0x56194e576448 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56194e5762f8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56194e576370 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e58d5b0 <col:66, line:700:5>
|   `-ReturnStmt 0x56194e58d5a0 <line:699:9, col:31>
|     `-CallExpr 0x56194e58d540 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x56194e58d528 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56194e58d4d8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x56194e3f87f8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x56194e58d570 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x56194e58d498 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x56194e5762f8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x56194e58d588 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56194e58d4b8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e576370 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e5767b8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56194e576508 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x56194e576580 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x56194e5765f8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56194e576670 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e58d900 <col:64, line:707:5>
|   |-DeclStmt 0x56194e58d640 <line:704:9, col:24>
|   | `-VarDecl 0x56194e58d5d8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x56194e58d850 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x56194e58d658 <col:9> 'int32_t':'int' lvalue ParmVar 0x56194e576580 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x56194e58d838 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x56194e58d7d0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x56194e58d7b8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56194e58d738 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x56194e3fdac8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x56194e58d808 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56194e58d6d8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x56194e5765f8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x56194e58d820 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56194e58d6f8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e576670 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x56194e58d718 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x56194e58d5d8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x56194e58d8e0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x56194e58d870 <col:9> 'int32_t':'int' lvalue ParmVar 0x56194e576508 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x56194e58d8c8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x56194e58d8b0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x56194e58d890 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x56194e58d5d8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x56194e576a58 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x56194e576888 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x56194e576900 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x56194e576978 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x56194e576cf8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x56194e576b20 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x56194e576b98 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x56194e576c10 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x56194e576e88 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x56194e576dc0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x56194e577088 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x56194e576f40 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x56194e576fb8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x56194e577358 <line:717:5, col:73> col:24
| `-FunctionDecl 0x56194e577298 parent 0x56194e0792b8 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56194e577148 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x56194e5771c0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56194e577578 <line:718:5, col:72> col:24
| `-FunctionDecl 0x56194e5774b8 parent 0x56194e0792b8 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56194e5773a8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x56194e577420 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x56194e577740 <line:719:5, col:57> col:29
| `-FunctionDecl 0x56194e577688 parent 0x56194e0792b8 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x56194e5775c8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x56194e5779c8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x56194e577908 parent 0x56194e0792b8 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56194e5777b8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56194e577830 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56194e577be8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x56194e577b28 parent 0x56194e0792b8 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56194e577a18 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56194e577a90 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x56194e57d470 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56194e57d558 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x56194e576118 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56194e57dfc8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x56194e57df80 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56194e576118
| |     `-DeclRefExpr 0x56194e57df60 <col:7> 'const Timestamp' lvalue ParmVar 0x56194e57d558 '' 'const Timestamp &'
| `-CompoundStmt 0x56194e57e028 <col:7>
|-CXXConstructorDecl 0x56194e57d6d8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56194e57d7e8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x56194e576118 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56194e57e2c8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x56194e57e270 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56194e576118
| |     `-CXXStaticCastExpr 0x56194e57e240 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x56194e57e210 <col:7> 'Timestamp' lvalue ParmVar 0x56194e57d7e8 '' 'Timestamp &&'
| `-CompoundStmt 0x56194e57e328 <col:7>
|-CXXDestructorDecl 0x56194e57d898 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56194e283fc8 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56194e2840d8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x56194e284bc8 <col:7>
|   |-CXXMemberCallExpr 0x56194e284b68 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x56194e284aa8 <col:7> '<bound member function type>' .operator= 0x56194e284178
|   | | `-MemberExpr 0x56194e2849b8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56194e576118
|   | |   `-CXXThisExpr 0x56194e2849a8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x56194e284a78 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56194e576118
|   |   `-DeclRefExpr 0x56194e284a58 <col:7> 'const Timestamp' lvalue ParmVar 0x56194e2840d8 '' 'const Timestamp &'
|   `-ReturnStmt 0x56194e284bb8 <col:7>
|     `-UnaryOperator 0x56194e284ba0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56194e284b90 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x56194e284478 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56194e284588 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x56194e616a68 <col:7>
    |-CXXMemberCallExpr 0x56194e616a08 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x56194e616970 <col:7> '<bound member function type>' .operator= 0x56194e2842f8
    | | `-MemberExpr 0x56194e616840 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56194e576118
    | |   `-CXXThisExpr 0x56194e616830 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x56194e616940 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56194e576118
    |   `-CXXStaticCastExpr 0x56194e616910 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x56194e6168e0 <col:7> 'Timestamp' lvalue ParmVar 0x56194e284588 '' 'Timestamp &&'
    `-ReturnStmt 0x56194e616a58 <col:7>
      `-UnaryOperator 0x56194e616a40 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56194e616a30 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56194e61b760 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x56194e61b938 prev 0x56194e61b760 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56194e61b9c8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56194e61b9f0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56194e0793b0 'int'
|-TypedefDecl 0x56194e6213f0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x56194e6213a0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x56194e61bea0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x56194e61bda0 'type'
|     `-TemplateSpecializationType 0x56194e61bd30 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56194e61bc10 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x56194e61bbf0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56194e61bbd0 <col:24> 'unsigned long' 16
|       `-RecordType 0x56194e61bd10 'char_array<16>'
|         `-ClassTemplateSpecialization 0x56194e61bc30 'char_array'
|-TypedefDecl 0x56194e6214a8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x56194e621470 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x56194e621450 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x56194e6213f0 'type'
|     `-ElaboratedType 0x56194e6213a0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x56194e61bea0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x56194e61bda0 'type'
|         `-TemplateSpecializationType 0x56194e61bd30 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56194e61bc10 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x56194e61bbf0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56194e61bbd0 <col:24> 'unsigned long' 16
|           `-RecordType 0x56194e61bd10 'char_array<16>'
|             `-ClassTemplateSpecialization 0x56194e61bc30 'char_array'
|-CXXMethodDecl 0x56194e621628 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x56194e621538 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x56194e621718 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56194e6217f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56194e6217f8
|-CXXMethodDecl 0x56194e621ac8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x56194e6219d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x56194e621d08 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56194e621b80 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56194e621bf8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56194e621ed8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56194e621dc8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56194e621e40 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56194e622038 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x56194e622108 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x56194e622358 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56194e6221c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x56194e622240 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56194e6225b8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x56194e622428 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x56194e6224a0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56194e622778 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x56194e622688 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56194e622938 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x56194e622840 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56194e6229f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56194e622aa0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56194e622cd8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56194e622b50 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56194e622bc8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56194e622f78 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x56194e622e80 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x56194e623040 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x56194e623090 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56194e6230e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56194e61a078 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x56194e61a288 prev 0x56194e61a078 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56194e61b6d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x56194e61b680 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x56194e61b660 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x56194e61b510 'type'
|     `-SubstTemplateTypeParmType 0x56194e61b330 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x56194e340980 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e340928 'T'
|       `-RecordType 0x56194e61ae80 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x56194e61ad98 'sized_array_memory'
|-FieldDecl 0x56194e623130 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x56194e623180 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56194e6231b8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x56194e61a320 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56194e378618 'T'
|   `-RecordType 0x56194e619280 'TimerSet::heap_element'
|     `-CXXRecord 0x56194e6191f0 'heap_element'
|-TypedefDecl 0x56194e623278 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x56194e623240 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x56194e61a320 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56194e378618 'T'
|     `-RecordType 0x56194e619280 'TimerSet::heap_element'
|       `-CXXRecord 0x56194e6191f0 'heap_element'
|-TypedefDecl 0x56194e623308 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x56194e6232d0 'const TimerSet::heap_element &'
|   `-QualType 0x56194e61a321 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56194e61a320 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-RecordType 0x56194e619280 'TimerSet::heap_element'
|         `-CXXRecord 0x56194e6191f0 'heap_element'
|-TypedefDecl 0x56194e623398 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x56194e623360 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x56194e61a320 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56194e378618 'T'
|     `-RecordType 0x56194e619280 'TimerSet::heap_element'
|       `-CXXRecord 0x56194e6191f0 'heap_element'
|-TypedefDecl 0x56194e623458 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x56194e623420 'const TimerSet::heap_element *'
|   `-QualType 0x56194e61a321 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56194e61a320 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-RecordType 0x56194e619280 'TimerSet::heap_element'
|         `-CXXRecord 0x56194e6191f0 'heap_element'
|-TypedefDecl 0x56194e6242c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x56194e624270 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x56194e624250 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x56194e624188 'type'
|     `-LValueReferenceType 0x56194e624150 'const TimerSet::heap_element &'
|       `-QualType 0x56194e623ef1 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x56194e623ef0 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x56194e34b050 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56194e34aff8 'T'
|           `-RecordType 0x56194e619280 'TimerSet::heap_element'
|             `-CXXRecord 0x56194e6191f0 'heap_element'
|-TypedefDecl 0x56194e624328 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x56194e6232d0 'const TimerSet::heap_element &'
|   `-QualType 0x56194e61a321 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56194e61a320 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-RecordType 0x56194e619280 'TimerSet::heap_element'
|         `-CXXRecord 0x56194e6191f0 'heap_element'
|-TypedefDecl 0x56194e624380 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56194e0793b0 'int'
|-TypedefDecl 0x56194e6243e8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x56194e623360 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x56194e61a320 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56194e378618 'T'
|     `-RecordType 0x56194e619280 'TimerSet::heap_element'
|       `-CXXRecord 0x56194e6191f0 'heap_element'
|-TypedefDecl 0x56194e624450 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x56194e623420 'const TimerSet::heap_element *'
|   `-QualType 0x56194e61a321 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56194e61a320 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-RecordType 0x56194e619280 'TimerSet::heap_element'
|         `-CXXRecord 0x56194e6191f0 'heap_element'
|-EnumDecl 0x56194e6244a8 <line:134:5> col:5
| `-EnumConstantDecl 0x56194e6245a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56194e624580 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56194e379cf8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56194e379cd0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56194e379cb0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56194e624628 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56194e6248b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e6246e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56194e624780 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x56194e624b78 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56194e624a60 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x56194e624e38 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x56194e624d20 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x56194e625180 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56194e625060 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x56194e625490 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x56194e625370 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x56194e625780 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e6255c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56194e625640 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56194e6258d8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x56194e6259b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e625a10 <col:30> Inherited
|-CXXMethodDecl 0x56194e625a58 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x56194e625b08 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e625b60 <col:30> Inherited
|-CXXMethodDecl 0x56194e625c28 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56194e625cd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e625d30 <col:30> Inherited
|-CXXMethodDecl 0x56194e625d78 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56194e625e28 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e625e80 <col:30> Inherited
|-CXXMethodDecl 0x56194e625ec8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56194e625f78 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e625fd0 <col:30> Inherited
|-CXXMethodDecl 0x56194e626018 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56194e6260c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e626120 <col:30> Inherited
|-CXXMethodDecl 0x56194e626148 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56194e6261f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56194e6262a8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56194e626468 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e626358 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56194e6263d0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56194e6265b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56194e626528 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e626768 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x56194e626670 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56194e626820 <col:20>
| `-OptimizeNoneAttr 0x56194e626878 <col:30>
|-CXXMethodDecl 0x56194e626998 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x56194e6268a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56194e626a50 <col:20>
| `-OptimizeNoneAttr 0x56194e626aa8 <col:30>
|-CXXMethodDecl 0x56194e626b60 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56194e626ad0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e626ca8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56194e626c18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e626dd8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56194e626f08 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56194e626fd8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56194e6270a8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56194e6271e8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56194e627158 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e627330 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56194e6272a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e627478 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x56194e6273e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56194e627530 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56194e627630 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56194e6275a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56194e6276e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56194e6277a8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x56194e6278a8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x56194e627a58 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56194e627968 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x56194e628248 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56194e627b10 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x56194e6281a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x56194e6280a8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x56194e628328 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56194e628478 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56194e6283e8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56194e628530 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56194e628778 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e6285f0 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56194e628668 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56194e6289d0 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x56194e628848 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56194e628c28 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x56194e628a98 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56194e628b10 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56194e628ce8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56194e628f48 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56194e628e50 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x56194e629018 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56194e629018

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56194e62a540 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x56194e62a718 prev 0x56194e62a540 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56194e62a7a8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56194e62a7d0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56194e0793b0 'int'
|-TypedefDecl 0x56194e62c3a0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x56194e62c350 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x56194e62ac80 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x56194e62ab80 'type'
|     `-TemplateSpecializationType 0x56194e62ab10 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56194e62a9f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x56194e62a9d0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56194e62a9b0 <col:24> 'unsigned long' 8
|       `-RecordType 0x56194e62aaf0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x56194e62aa10 'char_array'
|-TypedefDecl 0x56194e62c458 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x56194e62c420 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x56194e62c400 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x56194e62c3a0 'type'
|     `-ElaboratedType 0x56194e62c350 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x56194e62ac80 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x56194e62ab80 'type'
|         `-TemplateSpecializationType 0x56194e62ab10 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56194e62a9f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x56194e62a9d0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56194e62a9b0 <col:24> 'unsigned long' 8
|           `-RecordType 0x56194e62aaf0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x56194e62aa10 'char_array'
|-CXXMethodDecl 0x56194e62c5d8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x56194e62c4e8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x56194e62c6c8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56194e62c7a8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56194e62c7a8
|-CXXMethodDecl 0x56194e62ca78 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x56194e62c980 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x56194e62ccb8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56194e62cb30 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56194e62cba8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56194e62ce88 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56194e62cd78 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56194e62cdf0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56194e62cfe8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x56194e62d0b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x56194e62d308 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56194e62d178 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x56194e62d1f0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56194e62d568 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x56194e62d3d8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x56194e62d450 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56194e62d728 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x56194e62d638 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56194e62d8e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x56194e62d7f0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56194e62d9a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56194e62da50 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56194e62dc88 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56194e62db00 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56194e62db78 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56194e62df28 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x56194e62de30 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x56194e62dff0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x56194e62e040 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56194e62e090 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56194e629160 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x56194e629368 prev 0x56194e629160 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56194e62a4b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56194e62a460 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x56194e62a440 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x56194e62a2f0 'type'
|     `-SubstTemplateTypeParmType 0x56194e62a110 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56194e340980 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e340928 'T'
|       `-RecordType 0x56194e629c60 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56194e629b78 'sized_array_memory'
|-FieldDecl 0x56194e62e0e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56194e62e130 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56194e62e168 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x56194e629400 'Timer *' sugar
|   |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56194e378618 'T'
|   `-PointerType 0x56194e5dd200 'Timer *'
|     `-RecordType 0x56194e5dc350 'Timer'
|       `-CXXRecord 0x56194e55ffe8 'Timer'
|-TypedefDecl 0x56194e62e228 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x56194e62e1f0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x56194e629400 'Timer *' sugar
|     |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56194e378618 'T'
|     `-PointerType 0x56194e5dd200 'Timer *'
|       `-RecordType 0x56194e5dc350 'Timer'
|         `-CXXRecord 0x56194e55ffe8 'Timer'
|-TypedefDecl 0x56194e62e2e8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x56194e62e2b0 'Timer *const &'
|   `-QualType 0x56194e629401 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56194e629400 'Timer *' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-PointerType 0x56194e5dd200 'Timer *'
|         `-RecordType 0x56194e5dc350 'Timer'
|           `-CXXRecord 0x56194e55ffe8 'Timer'
|-TypedefDecl 0x56194e62e3a8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x56194e62e370 'Timer **'
|   `-SubstTemplateTypeParmType 0x56194e629400 'Timer *' sugar
|     |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56194e378618 'T'
|     `-PointerType 0x56194e5dd200 'Timer *'
|       `-RecordType 0x56194e5dc350 'Timer'
|         `-CXXRecord 0x56194e55ffe8 'Timer'
|-TypedefDecl 0x56194e62e468 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x56194e62e430 'Timer *const *'
|   `-QualType 0x56194e629401 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56194e629400 'Timer *' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-PointerType 0x56194e5dd200 'Timer *'
|         `-RecordType 0x56194e5dc350 'Timer'
|           `-CXXRecord 0x56194e55ffe8 'Timer'
|-TypedefDecl 0x56194e62f040 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x56194e62eff0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x56194e62efd0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x56194e62ef60 'type'
|     `-SubstTemplateTypeParmType 0x56194e62ed20 'Timer *' sugar
|       |-TemplateTypeParmType 0x56194e34b780 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e34b730 'T'
|       `-PointerType 0x56194e5dd200 'Timer *'
|         `-RecordType 0x56194e5dc350 'Timer'
|           `-CXXRecord 0x56194e55ffe8 'Timer'
|-TypedefDecl 0x56194e62f0a8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x56194e62e2b0 'Timer *const &'
|   `-QualType 0x56194e629401 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56194e629400 'Timer *' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-PointerType 0x56194e5dd200 'Timer *'
|         `-RecordType 0x56194e5dc350 'Timer'
|           `-CXXRecord 0x56194e55ffe8 'Timer'
|-TypedefDecl 0x56194e62f100 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56194e0793b0 'int'
|-TypedefDecl 0x56194e62f168 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x56194e62e370 'Timer **'
|   `-SubstTemplateTypeParmType 0x56194e629400 'Timer *' sugar
|     |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56194e378618 'T'
|     `-PointerType 0x56194e5dd200 'Timer *'
|       `-RecordType 0x56194e5dc350 'Timer'
|         `-CXXRecord 0x56194e55ffe8 'Timer'
|-TypedefDecl 0x56194e62f1d0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x56194e62e430 'Timer *const *'
|   `-QualType 0x56194e629401 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56194e629400 'Timer *' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-PointerType 0x56194e5dd200 'Timer *'
|         `-RecordType 0x56194e5dc350 'Timer'
|           `-CXXRecord 0x56194e55ffe8 'Timer'
|-EnumDecl 0x56194e62f228 <line:134:5> col:5
| `-EnumConstantDecl 0x56194e62f320 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56194e62f300 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56194e379cf8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56194e379cd0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56194e379cb0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56194e62f3a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56194e62f638 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e62f460 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56194e62f500 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x56194e62f8f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56194e62f7e0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x56194e62fbb8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x56194e62faa0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x56194e62ff00 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56194e62fde0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x56194e630210 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x56194e6300f0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x56194e630500 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e630348 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56194e6303c0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56194e630658 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x56194e630738 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e630790 <col:30> Inherited
|-CXXMethodDecl 0x56194e6307d8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x56194e630888 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e6308e0 <col:30> Inherited
|-CXXMethodDecl 0x56194e6349f0 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56194e634aa0 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e634af8 <col:30> Inherited
|-CXXMethodDecl 0x56194e634b40 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56194e634bf0 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e634c48 <col:30> Inherited
|-CXXMethodDecl 0x56194e634c90 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56194e634d40 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e634d98 <col:30> Inherited
|-CXXMethodDecl 0x56194e634de0 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56194e634e90 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e634ee8 <col:30> Inherited
|-CXXMethodDecl 0x56194e634f10 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56194e634fc0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56194e635070 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56194e635230 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e635120 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56194e635198 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56194e635380 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56194e6352f0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e635528 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x56194e635438 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56194e6355e0 <col:20>
| `-OptimizeNoneAttr 0x56194e635638 <col:30>
|-CXXMethodDecl 0x56194e635758 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56194e635660 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56194e635810 <col:20>
| `-OptimizeNoneAttr 0x56194e635868 <col:30>
|-CXXMethodDecl 0x56194e635920 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56194e635890 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e635a68 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56194e6359d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e635b98 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x56194e635cc8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x56194e635d98 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x56194e635e68 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x56194e635fa8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56194e635f18 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e6360f0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56194e636060 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e636238 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56194e6361a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56194e6362f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56194e6363f0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56194e636360 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56194e6364a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56194e636568 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x56194e636668 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x56194e6367e8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x56194e636728 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x56194e636fa8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56194e6368a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x56194e636f08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x56194e636e08 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x56194e637088 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56194e6371d8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x56194e637148 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56194e637290 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56194e6374d8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e637350 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x56194e6373c8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56194e637698 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x56194e6375a8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x56194e6378e8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x56194e637760 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x56194e6377d8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x56194e6379a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56194e637c08 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56194e637b10 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x56194e637cd8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56194e637cd8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e5f68b0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56194e5f69c8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x56194e5f6a58 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x56194e5f6ae0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x56194e5f6bd0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x56194e5f6cd0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x56194e5f6d90 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x56194e5f6e50 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x56194e5f6f78 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x56194e5f6f78
| `-ParmVarDecl 0x56194e5f7088 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x56194e638a88 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x56194e638a88
  `-ParmVarDecl 0x56194e638b98 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e618370 prev 0x56194e564198 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56194e618468 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x56194e6184f8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56194e618580 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x56194e618678 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x56194e638f00 <col:43, col:67>
|   `-ReturnStmt 0x56194e638ef0 <col:45, col:52>
|     `-CXXConstructExpr 0x56194e638ec0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x56194e638e90 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x56194e619e60
|         `-CXXThisExpr 0x56194e638e80 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56194e618738 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x56194e618940 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x56194e6187e8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x56194e618860 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x56194e618a38 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x56194e618b00 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x56194e638f80 <col:39, col:67>
|   `-ReturnStmt 0x56194e638f70 <col:41, col:48>
|     `-ImplicitCastExpr 0x56194e638f58 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56194e638f28 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x56194e619f48
|         `-CXXThisExpr 0x56194e638f18 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56194e618bc8 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x56194e639000 <col:35, col:59>
|   `-ReturnStmt 0x56194e638ff0 <col:37, col:44>
|     `-ImplicitCastExpr 0x56194e638fd8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56194e638fa8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x56194e619fb0
|         `-CXXThisExpr 0x56194e638f98 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56194e618d10 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x56194e618c80 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x56194e618e58 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56194e618dc8 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56194e619058 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x56194e618f10 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x56194e618f88 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x56194e619128 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x56194e6191c8 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x56194e6191f0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56194e619308 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x56194e6193a8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x56194e619408 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x56194e619538 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x56194e619468 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x56194e6193a8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x56194e6390d8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x56194e639080 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x56194e639050 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x56194e561628
|   |       `-ImplicitCastExpr 0x56194e6390a0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x56194e639038 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x56194e639018 <col:17> 'Timer *' lvalue ParmVar 0x56194e619468 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x56194e619408 't' 'Timer *'
|   | `-ImplicitCastExpr 0x56194e639170 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56194e639130 <col:41> 'Timer *' lvalue ParmVar 0x56194e619468 't_' 'Timer *'
|   `-CompoundStmt 0x56194e6391c0 <col:45, line:44:2>
|-CXXRecordDecl 0x56194e619600 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56194e619718 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x56194e619968 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x56194e6197e8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x56194e619860 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x56194e6392f0 <col:71, line:49:2>
|     `-ReturnStmt 0x56194e6392e0 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x56194e6392a8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x56194e639290 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56194e639270 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x56194e59a568 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x56194e6391f0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x56194e6193a8
|         | `-DeclRefExpr 0x56194e6391d0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x56194e6197e8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x56194e639240 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x56194e6193a8
|           `-DeclRefExpr 0x56194e639220 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x56194e619860 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x56194e619a30 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56194e619b48 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x56194e619d68 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x56194e619be8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x56194e619c60 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x56194e6394f8 <col:63, line:54:2>
|     `-BinaryOperator 0x56194e6394d8 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x56194e639388 <col:6, col:12> 'int' lvalue ->_schedpos1 0x56194e563638
|       | `-ImplicitCastExpr 0x56194e639370 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x56194e639340 <col:6, col:9> 'Timer *' lvalue ->t 0x56194e619408
|       |     `-ImplicitCastExpr 0x56194e639328 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x56194e639308 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x56194e619c60 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x56194e6394c0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x56194e6394a0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x56194e639448 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x56194e639428 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x56194e6393f8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x56194e6393b8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x56194e619c60 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x56194e639410 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x56194e6393d8 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x56194e619be8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x56194e639488 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x56194e639468 <col:39> 'int' 1
|-FieldDecl 0x56194e619e60 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x56194e619ed0 <col:44, col:53> aligned
|   `-ConstantExpr 0x56194e619eb0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x56194e619e30 <col:52> 'int' 8
|-FieldDecl 0x56194e619f48 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x56194e619fb0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x56194e61a018 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x56194e629100 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x56194e637dc0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x56194e637e20 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x56194e637e80 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x56194e637ee0 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e637fd0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x56194e637f40 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x56194e638098 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x56194e639950 <col:29, line:81:5>
|   `-IfStmt 0x56194e639928 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x56194e6395e0 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x56194e639580 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x56194e639550 <col:6, col:18> '<bound member function type>' .size 0x56194e626148
|     |     `-ImplicitCastExpr 0x56194e6395c8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x56194e639520 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56194e629100
|     |         `-CXXThisExpr 0x56194e639510 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x56194e6397d0 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x56194e6397b8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x56194e639798 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x56194e283fc8 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x56194e639608 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x56194e619e60
|     | | `-CXXThisExpr 0x56194e6395f8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x56194e639780 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x56194e639750 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x56194e6193a8
|     |     `-CXXMemberCallExpr 0x56194e639728 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x56194e6396f8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x56194e6271e8
|     |       | `-MemberExpr 0x56194e639648 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56194e629100
|     |       |   `-CXXThisExpr 0x56194e639638 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x56194e6396d8 <col:47> 'int' 0
|     `-ExprWithCleanups 0x56194e639910 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x56194e6398d8 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x56194e6398c0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56194e6398a0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x56194e284478 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x56194e639818 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x56194e619e60
|         | `-CXXThisExpr 0x56194e639808 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x56194e639888 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56194e639858 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x56194e6381d8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x56194e638148 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x56194e6382a0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x56194e638360 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x56194e638420 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x56194e638510 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x56194e638578 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x56194e638578
| `-ParmVarDecl 0x56194e638688 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x56194e638728 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x56194e638728
| `-ParmVarDecl 0x56194e638838 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x56194e6388d8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x56194e6388d8
| `-ParmVarDecl 0x56194e6389e8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x56194e638c08 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x56194e638c08
| `-ParmVarDecl 0x56194e638d18 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x56194e638da0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x56194e638da0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56194e66f7e8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x56194e66f9f8 prev 0x56194e66f7e8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56194e670ad0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56194e670a80 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x56194e670a60 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x56194e670910 'type'
|     `-SubstTemplateTypeParmType 0x56194e62a110 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56194e340980 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e340928 'T'
|       `-RecordType 0x56194e629c60 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56194e629b78 'sized_array_memory'
|-FieldDecl 0x56194e670bd0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56194e670c20 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56194e670c58 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x56194e66fa90 'pollfd' sugar
|   |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56194e378618 'T'
|   `-RecordType 0x56194e663860 'pollfd'
|     `-CXXRecord 0x56194e6637d0 'pollfd'
|-TypedefDecl 0x56194e670d18 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x56194e670ce0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x56194e66fa90 'pollfd' sugar
|     |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56194e378618 'T'
|     `-RecordType 0x56194e663860 'pollfd'
|       `-CXXRecord 0x56194e6637d0 'pollfd'
|-TypedefDecl 0x56194e670dd8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x56194e670da0 'const pollfd &'
|   `-QualType 0x56194e66fa91 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56194e66fa90 'pollfd' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-RecordType 0x56194e663860 'pollfd'
|         `-CXXRecord 0x56194e6637d0 'pollfd'
|-TypedefDecl 0x56194e670e68 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x56194e670e30 'pollfd *'
|   `-SubstTemplateTypeParmType 0x56194e66fa90 'pollfd' sugar
|     |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56194e378618 'T'
|     `-RecordType 0x56194e663860 'pollfd'
|       `-CXXRecord 0x56194e6637d0 'pollfd'
|-TypedefDecl 0x56194e670f28 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x56194e670ef0 'const pollfd *'
|   `-QualType 0x56194e66fa91 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56194e66fa90 'pollfd' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-RecordType 0x56194e663860 'pollfd'
|         `-CXXRecord 0x56194e6637d0 'pollfd'
|-TypedefDecl 0x56194e671b00 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x56194e671ab0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x56194e671a90 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x56194e671a20 'type'
|     `-SubstTemplateTypeParmType 0x56194e6717e0 'pollfd' sugar
|       |-TemplateTypeParmType 0x56194e34b780 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e34b730 'T'
|       `-RecordType 0x56194e663860 'pollfd'
|         `-CXXRecord 0x56194e6637d0 'pollfd'
|-TypedefDecl 0x56194e671b68 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x56194e670da0 'const pollfd &'
|   `-QualType 0x56194e66fa91 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56194e66fa90 'pollfd' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-RecordType 0x56194e663860 'pollfd'
|         `-CXXRecord 0x56194e6637d0 'pollfd'
|-TypedefDecl 0x56194e671bc0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56194e0793b0 'int'
|-TypedefDecl 0x56194e671c28 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x56194e670e30 'pollfd *'
|   `-SubstTemplateTypeParmType 0x56194e66fa90 'pollfd' sugar
|     |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56194e378618 'T'
|     `-RecordType 0x56194e663860 'pollfd'
|       `-CXXRecord 0x56194e6637d0 'pollfd'
|-TypedefDecl 0x56194e671c90 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x56194e670ef0 'const pollfd *'
|   `-QualType 0x56194e66fa91 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56194e66fa90 'pollfd' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-RecordType 0x56194e663860 'pollfd'
|         `-CXXRecord 0x56194e6637d0 'pollfd'
|-EnumDecl 0x56194e671ce8 <line:134:5> col:5
| `-EnumConstantDecl 0x56194e671de0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56194e671dc0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56194e379cf8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56194e379cd0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56194e379cb0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56194e671e68 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56194e6720f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e671f20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56194e671fc0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x56194e6723b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56194e6722a0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x56194e672678 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x56194e672560 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x56194e6729c0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56194e6728a0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x56194e672cd0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x56194e672bb0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x56194e672fc0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e672e08 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56194e672e80 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56194e673118 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x56194e6731f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e673250 <col:30> Inherited
|-CXXMethodDecl 0x56194e673298 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x56194e673348 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e6733a0 <col:30> Inherited
|-CXXMethodDecl 0x56194e673468 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56194e673518 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e673570 <col:30> Inherited
|-CXXMethodDecl 0x56194e6735b8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56194e673668 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e6736c0 <col:30> Inherited
|-CXXMethodDecl 0x56194e673708 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56194e6737b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e673810 <col:30> Inherited
|-CXXMethodDecl 0x56194e673858 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56194e673908 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e673960 <col:30> Inherited
|-CXXMethodDecl 0x56194e673988 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56194e673a38 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56194e673ae8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56194e673ca8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e673b98 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56194e673c10 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56194e673df8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56194e673d68 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e673fa8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x56194e673eb0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56194e674060 <col:20>
| `-OptimizeNoneAttr 0x56194e6740b8 <col:30>
|-CXXMethodDecl 0x56194e6741d8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x56194e6740e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56194e674290 <col:20>
| `-OptimizeNoneAttr 0x56194e6742e8 <col:30>
|-CXXMethodDecl 0x56194e6743a0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x56194e674310 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e6744e8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56194e674458 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e674618 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x56194e674748 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x56194e674818 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x56194e6748e8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x56194e674a28 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x56194e674998 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e674b70 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56194e674ae0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e674cb8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x56194e674c28 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56194e674d70 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56194e674e70 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56194e674de0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56194e674f28 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56194e674fe8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x56194e6750e8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x56194e675298 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x56194e6751a8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x56194e675a58 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56194e675350 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x56194e6759b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x56194e6758b8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x56194e675b38 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56194e675c88 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x56194e675bf8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56194e675d40 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56194e675f88 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e675e00 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x56194e675e78 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56194e676148 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x56194e676058 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x56194e676398 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x56194e676210 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x56194e676288 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x56194e676458 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56194e6766d8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56194e6765c0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x56194e6767a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56194e6767a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56194e677d90 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x56194e677f68 prev 0x56194e677d90 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56194e677ff8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56194e678020 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56194e0793b0 'int'
|-TypedefDecl 0x56194e679bf0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x56194e679ba0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x56194e6784d0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x56194e6783d0 'type'
|     `-TemplateSpecializationType 0x56194e678360 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56194e678240 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x56194e678220 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56194e678200 <col:24> 'unsigned long' 24
|       `-RecordType 0x56194e678340 'char_array<24>'
|         `-ClassTemplateSpecialization 0x56194e678260 'char_array'
|-TypedefDecl 0x56194e679ca8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x56194e679c70 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x56194e679c50 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x56194e679bf0 'type'
|     `-ElaboratedType 0x56194e679ba0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x56194e6784d0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x56194e6783d0 'type'
|         `-TemplateSpecializationType 0x56194e678360 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56194e678240 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x56194e678220 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56194e678200 <col:24> 'unsigned long' 24
|           `-RecordType 0x56194e678340 'char_array<24>'
|             `-ClassTemplateSpecialization 0x56194e678260 'char_array'
|-CXXMethodDecl 0x56194e679e28 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x56194e679d38 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x56194e679f18 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56194e679ff8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56194e679ff8
|-CXXMethodDecl 0x56194e67a2c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x56194e67a1d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x56194e67a508 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56194e67a380 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56194e67a3f8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56194e67a6d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56194e67a5c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56194e67a640 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56194e67a838 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x56194e67a908 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x56194e67ab58 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56194e67a9c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x56194e67aa40 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56194e67adb8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x56194e67ac28 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x56194e67aca0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56194e67af78 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x56194e67ae88 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56194e67b138 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x56194e67b040 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56194e67b1f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56194e67b2a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56194e67b4d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56194e67b350 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56194e67b3c8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56194e67b778 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x56194e67b680 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x56194e67b840 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x56194e67b890 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56194e67b8e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56194e6768f0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x56194e676af8 prev 0x56194e6768f0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56194e677d00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x56194e677cb0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x56194e677c90 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x56194e677b40 'type'
|     `-SubstTemplateTypeParmType 0x56194e677960 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x56194e340980 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e340928 'T'
|       `-RecordType 0x56194e6774b0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x56194e6773d0 'sized_array_memory'
|-FieldDecl 0x56194e67b930 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x56194e67b980 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56194e67b9b8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x56194e676b90 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56194e378618 'T'
|   `-RecordType 0x56194e66f350 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x56194e66f2c0 'SelectorInfo'
|-TypedefDecl 0x56194e67ba78 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56194e67ba40 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x56194e676b90 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56194e378618 'T'
|     `-RecordType 0x56194e66f350 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56194e66f2c0 'SelectorInfo'
|-TypedefDecl 0x56194e67bb38 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56194e67bb00 'const SelectSet::SelectorInfo &'
|   `-QualType 0x56194e676b91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56194e676b90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-RecordType 0x56194e66f350 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56194e66f2c0 'SelectorInfo'
|-TypedefDecl 0x56194e67bbc8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x56194e67bb90 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x56194e676b90 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56194e378618 'T'
|     `-RecordType 0x56194e66f350 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56194e66f2c0 'SelectorInfo'
|-TypedefDecl 0x56194e67bc88 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x56194e67bc50 'const SelectSet::SelectorInfo *'
|   `-QualType 0x56194e676b91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56194e676b90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-RecordType 0x56194e66f350 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56194e66f2c0 'SelectorInfo'
|-TypedefDecl 0x56194e67c8e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x56194e67c890 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x56194e67c870 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x56194e67c7a8 'type'
|     `-LValueReferenceType 0x56194e67c770 'const SelectSet::SelectorInfo &'
|       `-QualType 0x56194e67c511 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x56194e67c510 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x56194e34b050 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56194e34aff8 'T'
|           `-RecordType 0x56194e66f350 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x56194e66f2c0 'SelectorInfo'
|-TypedefDecl 0x56194e67c948 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56194e67bb00 'const SelectSet::SelectorInfo &'
|   `-QualType 0x56194e676b91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56194e676b90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-RecordType 0x56194e66f350 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56194e66f2c0 'SelectorInfo'
|-TypedefDecl 0x56194e67c9a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56194e0793b0 'int'
|-TypedefDecl 0x56194e67ca08 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x56194e67bb90 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x56194e676b90 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56194e378618 'T'
|     `-RecordType 0x56194e66f350 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56194e66f2c0 'SelectorInfo'
|-TypedefDecl 0x56194e67ca70 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x56194e67bc50 'const SelectSet::SelectorInfo *'
|   `-QualType 0x56194e676b91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56194e676b90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56194e378670 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56194e378618 'T'
|       `-RecordType 0x56194e66f350 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56194e66f2c0 'SelectorInfo'
|-EnumDecl 0x56194e67cac8 <line:134:5> col:5
| `-EnumConstantDecl 0x56194e67cbc0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56194e67cba0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56194e379cf8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56194e379cd0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56194e379cb0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56194e67cc48 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56194e67ced8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e67cd00 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56194e67cda0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x56194e67d198 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56194e67d080 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x56194e67d458 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x56194e67d340 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x56194e67d7a0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56194e67d680 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x56194e67dab0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x56194e67d990 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x56194e67dda0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e67dbe8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56194e67dc60 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56194e67def8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x56194e67dfd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e67e030 <col:30> Inherited
|-CXXMethodDecl 0x56194e67e078 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x56194e67e128 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e67e180 <col:30> Inherited
|-CXXMethodDecl 0x56194e67e248 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56194e67e2f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e67e350 <col:30> Inherited
|-CXXMethodDecl 0x56194e67e398 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56194e67e448 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e67e4a0 <col:30> Inherited
|-CXXMethodDecl 0x56194e67e4e8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56194e67e598 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e67e5f0 <col:30> Inherited
|-CXXMethodDecl 0x56194e67e690 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56194e67e740 <col:20> Inherited
| `-OptimizeNoneAttr 0x56194e67e798 <col:30> Inherited
|-CXXMethodDecl 0x56194e67e7c0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56194e67e870 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56194e67e920 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56194e67eae0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e67e9d0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56194e67ea48 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56194e67ec30 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56194e67eba0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e67edd8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x56194e67ece8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56194e67ee90 <col:20>
| `-OptimizeNoneAttr 0x56194e67eee8 <col:30>
|-CXXMethodDecl 0x56194e67f008 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x56194e67ef10 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56194e67f0c0 <col:20>
| `-OptimizeNoneAttr 0x56194e67f118 <col:30>
|-CXXMethodDecl 0x56194e67f1d0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x56194e67f140 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e67f318 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56194e67f288 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e67f448 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x56194e67f578 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x56194e67f648 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x56194e67f718 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x56194e67f858 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x56194e67f7c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e67f9a0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56194e67f910 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56194e67fae8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x56194e67fa58 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56194e67fba0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56194e67fca0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56194e67fc10 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56194e67fd58 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56194e67fe18 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x56194e67ff18 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x56194e6800c8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x56194e67ffd8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x56194e680888 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56194e680180 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x56194e6807e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x56194e6806e8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x56194e680968 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56194e680ab8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x56194e680a28 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56194e680b70 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56194e680db8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56194e680c30 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x56194e680ca8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56194e680f78 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x56194e680e88 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x56194e6811c8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x56194e681040 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x56194e6810b8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x56194e681288 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56194e6814e8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56194e6813f0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x56194e6815b8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56194e6815b8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e664460 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56194e664578 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x56194e664608 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x56194e66e6d0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x56194e66e7c0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x56194e66e7c0
|-CXXMethodDecl 0x56194e66e8c0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x56194e66eb60 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x56194e66e978 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x56194e66e9f0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x56194e66ea70 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x56194e66edd0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x56194e66ec30 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x56194e66eca8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x56194e66ed28 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x56194e66ef28 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x56194e66ee98 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x56194e66eff0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x56194e682c68 <col:34, line:50:5>
|   |-BinaryOperator 0x56194e682638 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x56194e6825f8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x56194e66f778
|   | | `-CXXThisExpr 0x56194e6825e8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x56194e682628 <col:23> 'bool' true
|   `-CallExpr 0x56194e682c40 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x56194e682c28 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56194e682ba8 <col:2> 'void (long)' lvalue Function 0x56194e682aa8 'ignore_result' 'void (long)' (FunctionTemplate 0x56194e33b928 'ignore_result')
|     `-CallExpr 0x56194e682850 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x56194e682838 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56194e6827b8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x56194e63ca00 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x56194e682888 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x56194e682760 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x56194e682748 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x56194e6826f8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x56194e66f718
|       |   |   `-CXXThisExpr 0x56194e6826e8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x56194e682728 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x56194e6828b8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x56194e6828a0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x56194e682780 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x56194e6828d0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x56194e682798 <col:41> 'int' 1
|-CXXMethodDecl 0x56194e66f130 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56194e66f0a0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56194e66f1f8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x56194e66f298 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x56194e66f2c0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56194e66f3d8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x56194e66f478 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x56194e66f4d8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x56194e66f540 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x56194e66f5f0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x56194e66f478 'read' 'Element *'
|   | `-ImplicitCastExpr 0x56194e682cc8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56194e682c88 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x56194e66f4d8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x56194e682d48 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56194e682d08 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x56194e66f540 'pollfd' 'int'
|   | `-UnaryOperator 0x56194e682da8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x56194e682d88 <col:35> 'int' 1
|   `-CompoundStmt 0x56194e682e20 <line:64:2, line:65:2>
|-FieldDecl 0x56194e66f718 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x56194e66f778 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x56194e676890 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x56194e6816a0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x56194e6818d8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x56194e681708 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x56194e681780 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x56194e6817f8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x56194e681ac0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x56194e6819a8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x56194e681a28 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x56194e681d08 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x56194e681b88 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x56194e681c08 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x56194e681f18 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x56194e681dc8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x56194e681e40 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x56194e682068 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x56194e681fd8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x56194e682130 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x56194e6821f0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x56194e6822b8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x56194e6822b8
| `-ParmVarDecl 0x56194e6823c8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x56194e682468 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x56194e682468
  `-ParmVarDecl 0x56194e682578 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e5f5818 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56194e5f5938 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x56194e5f59c8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56194e5f5a50 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x56194e5f5b40 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x56194e5f5c40 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x56194e5f5d00 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x56194e5f5dc0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x56194e5f5ea8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x56194e5f5fc8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x56194e5f5fc8
| `-ParmVarDecl 0x56194e5f60d8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x56194e687a78 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x56194e687a78
  `-ParmVarDecl 0x56194e687b88 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e55dd58 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e55de78 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x56194e55df18 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x56194e55df78 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x56194e687078 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56194e687078
| `-ParmVarDecl 0x56194e687188 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x56194e687228 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56194e687228
| `-ParmVarDecl 0x56194e687338 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x56194e6873a8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x56194e6873a8
|-CXXMethodDecl 0x56194e687c28 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56194e687c28
| `-ParmVarDecl 0x56194e687d38 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x56194e687da8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56194e687da8
| `-ParmVarDecl 0x56194e687eb8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x56194e68e528 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x56194e68e600 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e5f7710 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e5f7828 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x56194e5f78b8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x56194e5f7940 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x56194e5f7a00 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x56194e0793b0 'int'
|-CXXMethodDecl 0x56194e5f7ac8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x56194e5f7b68 <col:45> always_inline
|-CXXMethodDecl 0x56194e5f7c98 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x56194e5f7bd0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x56194e5f7d40 <col:49> always_inline
|-CXXConstructorDecl 0x56194e5f7e38 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x56194e5f7e38
| `-ParmVarDecl 0x56194e5f7f48 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x56194e5f7fe8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x56194e5f7fe8
| `-ParmVarDecl 0x56194e5f80f8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x56194e687490 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x56194e687490
|-CXXMethodDecl 0x56194e687f58 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x56194e687f58
| `-ParmVarDecl 0x56194e688068 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x56194e6880d8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x56194e6880d8
  `-ParmVarDecl 0x56194e6881e8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e683290 prev 0x56194e6643d0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x56194e683388 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x56194e683418 <col:22, col:28> col:22 public
|-EnumDecl 0x56194e683440 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x56194e683558 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x56194e683538 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x56194e683520 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x56194e683500 <col:32> 'int' 1
| `-EnumConstantDecl 0x56194e683600 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x56194e6835e0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x56194e6835c8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x56194e6835a8 <col:53> 'int' 1000
|-CXXMethodDecl 0x56194e6836a0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x56194e683760 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56194e683848 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x56194e6882a8 <col:34, col:52>
|   `-ReturnStmt 0x56194e688298 <col:36, col:43>
|     `-MemberExpr 0x56194e688268 <col:43> 'TimerSet' lvalue ->_timers 0x56194e685518
|       `-CXXThisExpr 0x56194e688258 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x56194e683938 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x56194e688310 <col:46, col:64>
|   `-ReturnStmt 0x56194e688300 <col:48, col:55>
|     `-MemberExpr 0x56194e6882d0 <col:55> 'const TimerSet' lvalue ->_timers 0x56194e685518
|       `-CXXThisExpr 0x56194e6882c0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56194e683a28 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x56194e688378 <col:36, col:55>
|   `-ReturnStmt 0x56194e688368 <col:38, col:45>
|     `-MemberExpr 0x56194e688338 <col:45> 'SelectSet' lvalue ->_selects 0x56194e685578
|       `-CXXThisExpr 0x56194e688328 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x56194e683b18 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x56194e6883e0 <col:48, col:67>
|   `-ReturnStmt 0x56194e6883d0 <col:50, col:57>
|     `-MemberExpr 0x56194e6883a0 <col:57> 'const SelectSet' lvalue ->_selects 0x56194e685578
|       `-CXXThisExpr 0x56194e688390 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56194e683bd8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x56194e683cc8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x56194e683e38 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x56194e683d78 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x56194e683f00 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x56194e684348 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x56194e683fb0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x56194e684230 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x56194e684418 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x56194e6844d8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x56194e684598 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x56194e6846d8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x56194e684648 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x56194e6847a0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x56194e684860 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x56194e684920 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x56194e6849e0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x56194e684b20 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56194e684a90 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56194e684be8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x56194e684ca8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x56194e684d48 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x56194e684e10 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56194e684e60 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56194e684eb0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56194e684f00 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56194e684f50 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56194e684fa0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56194e684ff0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56194e685040 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56194e685090 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56194e6850e0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x56194e685130 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x56194e685228 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x56194e685198 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x56194e685378 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x56194e6852e8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x56194e685420 <line:104:3, col:10> col:3 private
|-FieldDecl 0x56194e685458 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x56194e6854b8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x56194e685518 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x56194e685578 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x56194e6855f8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x56194e685668 <col:40, col:50> aligned
|   `-ConstantExpr 0x56194e685648 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x56194e6855c8 <col:48> 'int' 64
|-FieldDecl 0x56194e6856d8 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x56194e685738 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x56194e685830 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x56194e685940 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x56194e6859a0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x56194e685a20 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x56194e685a90 <col:36, col:46> aligned
|   `-ConstantExpr 0x56194e685a70 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x56194e6859f0 <col:44> 'int' 64
|-FieldDecl 0x56194e685b08 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x56194e685b68 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x56194e685bb8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x56194e685bf8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x56194e685c60 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x56194e685cb0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x56194e685e58 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x56194e685ce8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x56194e685d68 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x56194e685f58 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x56194e685f58
|-CXXMethodDecl 0x56194e686060 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x56194e686128 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x56194e6884d8 <col:34, line:217:5>
|   `-ReturnStmt 0x56194e6884c8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x56194e6884b0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56194e688480 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x56194e5fa270
|         `-ImplicitCastExpr 0x56194e688468 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x56194e688438 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x56194e5fa208
|             `-MemberExpr 0x56194e688408 <col:16> 'const TaskLink' lvalue ->_task_link 0x56194e685458
|               `-CXXThisExpr 0x56194e6883f8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56194e6861e8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x56194e6862a8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x56194e688c00 <col:39, line:226:5>
|   |-DeclStmt 0x56194e688728 <line:223:9, col:68>
|   | `-VarDecl 0x56194e688500 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x56194e6886e0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x56194e6886b0 <col:24, col:38> '<bound member function type>' .compare_swap 0x56194e3a1f70
|   |     | `-MemberExpr 0x56194e688578 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x56194e6856d8
|   |     |   `-CXXThisExpr 0x56194e688568 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x56194e688668 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x56194e688650 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x56194e688628 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x56194e688608 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x56194e688710 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x56194e688690 <col:66> 'int' 0
|   |-CStyleCastExpr 0x56194e688770 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x56194e688740 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x56194e688500 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x56194e688be0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x56194e688bb0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x56194e688888 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x56194e688858 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x56194e688840 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x56194e688798 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x56194e688500 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x56194e688818 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x56194e688800 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x56194e6887d8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x56194e6887b8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x56194e6888e8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x56194e6888c8 <col:60> 'int' 0
|       `-CallExpr 0x56194e688b10 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x56194e688af8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56194e688ad8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x56194e688b50 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x56194e6889d8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x56194e688b68 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x56194e688a08 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x56194e688b80 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x56194e688a48 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x56194e688b98 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x56194e688ac0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x56194e688aa8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x56194e688a68 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x56194e6863f0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x56194e686360 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x56194e6864b8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x56194e686578 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x56194e6866a0 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x56194e686760 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x56194e686820 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x56194e686910 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x56194e686970 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x56194e686a00 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x56194e686dc8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x56194e686dc8
| `-ParmVarDecl 0x56194e686ed8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x56194e687598 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x56194e687598
  `-ParmVarDecl 0x56194e6876a8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e5fa580 prev 0x56194e5dc210 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x56194e5fa6b8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x56194e5fa748 <col:33, col:39> col:33 public
|-EnumDecl 0x56194e5fa770 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x56194e5fa8b0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x56194e5fa890 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x56194e5fa870 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56194e5fa830 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x56194e5fa850 <col:26> 'int' 16
| `-EnumConstantDecl 0x56194e5fa980 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x56194e5fa960 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x56194e5fa940 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x56194e5fa900 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x56194e5fa920 <col:47> 'int' 31
|-EnumDecl 0x56194e5fa9d0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x56194e5fab10 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x56194e5fac30 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56194e5faaf0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x56194e5faad0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x56194e5faa90 <col:26> 'int' 1
| |       `-IntegerLiteral 0x56194e5faab0 <col:29> 'int' 15
| `-EnumConstantDecl 0x56194e5fabe0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x56194e5fac48 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e5fabc0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x56194e5faba0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x56194e5fab60 <col:51> 'int' 1
|         `-IntegerLiteral 0x56194e5fab80 <col:54> 'int' 10
|-CXXConstructorDecl 0x56194e5fae18 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x56194e5fac70 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x56194e5facf0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x56194e5fafa8 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x56194e5faee0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x56194e5fb0a0 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x56194e5fb0a0
|-CXXMethodDecl 0x56194e5fb228 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x56194e55eeb8 <col:42, line:100:5>
|   `-ReturnStmt 0x56194e55eea8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x56194e55ee90 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x56194e55ee60 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x56194e55dbe0
|         `-CXXThisExpr 0x56194e55ee50 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56194e5fb2f0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x56194e55ef38 <col:36, line:105:5>
|   `-ReturnStmt 0x56194e55ef28 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x56194e55ef10 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56194e55eee0 <col:16> 'void *const' lvalue ->_thunk 0x56194e55dc48
|         `-CXXThisExpr 0x56194e55eed0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56194e5fb3b0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x56194e55efb8 <col:37, line:110:5>
|   `-ReturnStmt 0x56194e55efa8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x56194e55ef90 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x56194e55ef60 <col:16> 'Element *const' lvalue ->_owner 0x56194e55dd08
|         `-CXXThisExpr 0x56194e55ef50 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56194e5fb470 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x56194e5fb538 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x56194e5fb5f8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x56194e5fb6b8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x56194e55f0a0 <col:35, line:137:5>
|   `-ReturnStmt 0x56194e55f090 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x56194e55f058 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x56194e55f028 <col:16, col:24> '<bound member function type>' ->router 0x56194e5eea20
|         `-ImplicitCastExpr 0x56194e55f078 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x56194e55f010 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56194e55efe0 <col:16> 'Element *const' lvalue ->_owner 0x56194e55dd08
|               `-CXXThisExpr 0x56194e55efd0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56194e5fb778 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x56194e5fb978 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x56194e5fb828 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x56194e5fb8a0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x56194e5fbb88 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x56194e5fba38 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x56194e5fbab0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x56194e5fbc58 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x56194e55f1b0 <col:35, line:181:5>
|   `-ReturnStmt 0x56194e55f1a0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x56194e55f188 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x56194e55f170 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x56194e55f140 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x56194e55d818
|           `-MemberExpr 0x56194e55f0f8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56194e55d938
|             `-MemberExpr 0x56194e55f0c8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x56194e55db68
|               `-CXXThisExpr 0x56194e55f0b8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56194e55c860 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x56194e55f2c8 <col:30, line:192:5>
|   `-BinaryOperator 0x56194e55f2a8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56194e55f250 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56194e55d818
|     | `-MemberExpr 0x56194e55f208 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56194e55d938
|     |   `-MemberExpr 0x56194e55f1d8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56194e55db68
|     |     `-CXXThisExpr 0x56194e55f1c8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56194e55f290 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56194e55f280 <col:32> 'bool' false
|-CXXMethodDecl 0x56194e55c920 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x56194e55f618 <col:30, line:206:5>
|   |-BinaryOperator 0x56194e55f3c0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56194e55f368 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56194e55d818
|   | | `-MemberExpr 0x56194e55f320 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56194e55d938
|   | |   `-MemberExpr 0x56194e55f2f0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56194e55db68
|   | |     `-CXXThisExpr 0x56194e55f2e0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56194e55f3a8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56194e55f398 <col:32> 'bool' true
|   |-CallExpr 0x56194e55f460 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x56194e55f448 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56194e55f428 <col:9> 'void ()' lvalue Function 0x56194e5f53d0 'click_fence' 'void ()'
|   `-IfStmt 0x56194e55f600 <line:204:9, line:205:32>
|     |-BinaryOperator 0x56194e55f540 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x56194e55f510 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x56194e55f4c0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x56194e55df78
|     | |   `-MemberExpr 0x56194e55f490 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x56194e55dff0
|     | |     `-CXXThisExpr 0x56194e55f480 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x56194e55f528 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x56194e55f4f0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x56194e55f5c0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x56194e55f570 <col:13> '<bound member function type>' ->complete_schedule 0x56194e55e9f0
|       | `-CXXThisExpr 0x56194e55f560 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x56194e55f5e8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x56194e55f5a0 <col:31> 'int' 0
|-CXXMethodDecl 0x56194e55c9e0 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x56194e55f740 <col:35, line:240:5>
|   `-BinaryOperator 0x56194e55f720 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56194e55f6c8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56194e55d818
|     | `-MemberExpr 0x56194e55f680 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56194e55d938
|     |   `-MemberExpr 0x56194e55f650 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56194e55db68
|     |     `-CXXThisExpr 0x56194e55f640 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56194e55f708 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56194e55f6f8 <col:32> 'bool' true
|-CXXMethodDecl 0x56194e55caa0 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x56194e55f958 <col:37, line:253:5>
|   |-BinaryOperator 0x56194e55f838 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56194e55f7e0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56194e55d818
|   | | `-MemberExpr 0x56194e55f798 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56194e55d938
|   | |   `-MemberExpr 0x56194e55f768 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56194e55db68
|   | |     `-CXXThisExpr 0x56194e55f758 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56194e55f820 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56194e55f810 <col:32> 'bool' false
|   `-BinaryOperator 0x56194e55f938 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56194e55f8e0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x56194e55d878
|     | `-MemberExpr 0x56194e55f898 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56194e55d938
|     |   `-MemberExpr 0x56194e55f868 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56194e55db68
|     |     `-CXXThisExpr 0x56194e55f858 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56194e55f920 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56194e55f910 <col:41> 'bool' true
|-CXXMethodDecl 0x56194e55cb60 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x56194e55fad8 <col:37, line:264:5>
|   |-BinaryOperator 0x56194e55fa58 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56194e55fa00 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x56194e55d878
|   | | `-MemberExpr 0x56194e55f9b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56194e55d938
|   | |   `-MemberExpr 0x56194e55f988 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56194e55db68
|   | |     `-CXXThisExpr 0x56194e55f978 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56194e55fa40 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56194e55fa30 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x56194e55fab8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x56194e55fa88 <col:9> '<bound member function type>' ->reschedule 0x56194e55c920
|       `-CXXThisExpr 0x56194e55fa78 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x56194e55cca8 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x56194e55cc18 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x56194e55cd78 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x56194e55cec0 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x56194e55ce30 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x56194e55d010 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x56194e55cf80 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x56194e55d0d8 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x56194e55d198 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x56194e55d238 <col:53> "" ""
|-CXXMethodDecl 0x56194e55d2d0 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x56194e55d370 <col:47> "" ""
|-AccessSpecDecl 0x56194e55d3e0 <line:303:3, col:10> col:3 private
|-FieldDecl 0x56194e55d420 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x56194e55d488 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x56194e55d4d8 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56194e55d5f8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x56194e55d688 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x56194e55d7b8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x56194e55d818 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x56194e55d878 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x56194e68dc58 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x56194e68dd30 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56194e68dd30
| | |-CXXConstructorDecl 0x56194e68dfe8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56194e68dfe8
| | | `-ParmVarDecl 0x56194e68e0f8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x56194e68e198 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56194e68e198
| |   `-ParmVarDecl 0x56194e68e2a8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x56194e55d938 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x56194e55d998 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x56194e55d938 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56194e55d7b8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x56194e55d9f0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x56194e55d938 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56194e55d818 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x56194e55da48 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x56194e55d938 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56194e55d878 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x56194e55daa0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x56194e68db68 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56194e68e4c8 <col:11>
| |-CXXConstructorDecl 0x56194e68de38 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x56194e68de38
| | `-ParmVarDecl 0x56194e68df48 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x56194e68e348 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x56194e68e348
|   `-ParmVarDecl 0x56194e68e458 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x56194e55db68 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x56194e55dbe0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x56194e55dc48 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56194e55dca8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x56194e55dd08 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x56194e55dd58 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56194e55de78 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x56194e55df18 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x56194e55df78 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x56194e687078 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56194e687078
| | `-ParmVarDecl 0x56194e687188 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x56194e687228 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56194e687228
| | `-ParmVarDecl 0x56194e687338 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x56194e6873a8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x56194e6873a8
| |-CXXMethodDecl 0x56194e687c28 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56194e687c28
| | `-ParmVarDecl 0x56194e687d38 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x56194e687da8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56194e687da8
| | `-ParmVarDecl 0x56194e687eb8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x56194e68e528 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x56194e68e600 <col:11>
|-FieldDecl 0x56194e55dff0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x56194e55e138 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x56194e55e078 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x56194e55e2e8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x56194e55e1f8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x56194e55e3b0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x56194e55e470 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x56194e55e530 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x56194e55fbe8 <col:41, line:355:5>
|   `-ReturnStmt 0x56194e55fbd8 <line:354:9, col:38>
|     `-BinaryOperator 0x56194e55fbb8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x56194e55fb88 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x56194e55fb38 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x56194e55df78
|       |   `-MemberExpr 0x56194e55fb08 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x56194e55dff0
|       |     `-CXXThisExpr 0x56194e55faf8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x56194e55fba0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x56194e55fb68 <col:38> 'int' 0
|-CXXMethodDecl 0x56194e55e5f0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x56194e55e730 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x56194e55e6a0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x56194e55e8a8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x56194e55e7e8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x56194e55e9f0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x56194e55e960 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x56194e55eab8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x56194e55ec80 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x56194e55eb68 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x56194e55ebe8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x56194e55ed80 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x56194e55ee10 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | ActiveNotifier::task_or_signal_t
         0 |   class Task * t
         0 |   Notifier::callback_type f
         0 |   void * v
         0 |   uintptr_t p
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e69d1c8 <../dummy_inc/click/notifier.hh:151:13, line:156:5> line:151:13 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x56194e69d2f8 <line:152:2, col:8> col:8 referenced t 'Task *'
|-FieldDecl 0x56194e69d358 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
|-FieldDecl 0x56194e69d3c0 <line:154:2, col:8> col:8 referenced v 'void *'
`-FieldDecl 0x56194e69d420 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"union.ActiveNotifier::task_or_signal_t" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e69c2a0 <../dummy_inc/click/notifier.hh:132:1, line:167:1> line:132:7 referenced class ActiveNotifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Notifier'
|-CXXRecordDecl 0x56194e69c3f8 <col:1, col:7> col:7 implicit referenced class ActiveNotifier
|-AccessSpecDecl 0x56194e69c488 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x56194e69c598 <line:134:5, col:45> col:5 ActiveNotifier 'void (Notifier::SearchOp)'
| `-ParmVarDecl 0x56194e69c4c0 <col:20, col:34> col:29 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x56194e69ddb0 <col:34> 'Notifier::SearchOp' EnumConstant 0x56194e696f90 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x56194e69c690 <line:135:5, col:21> col:5 used ~ActiveNotifier 'void () noexcept'
| `-Overrides: [ 0x56194e697718 Notifier::~Notifier 'void () noexcept' ]
|-CXXMethodDecl 0x56194e69c8a0 <line:137:5, col:55> col:9 add_activate_callback 'int (Notifier::callback_type, void *)'
| |-Overrides: [ 0x56194e699040 Notifier::add_activate_callback 'int (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x56194e69c780 <col:31, col:45> col:45 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x56194e69c800 <col:48, col:54> col:54 v 'void *'
|-CXXMethodDecl 0x56194e69ca78 <line:138:5, col:59> col:10 remove_activate_callback 'void (Notifier::callback_type, void *)'
| |-Overrides: [ 0x56194e699298 Notifier::remove_activate_callback 'void (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x56194e69c960 <col:35, col:49> col:49 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x56194e69c9e0 <col:52, col:58> col:58 v 'void *'
|-CXXMethodDecl 0x56194e69cd38 <line:139:5, col:70> col:10 listeners 'void (Vector<Task *> &) const'
| |-ParmVarDecl 0x56194e69cc10 <col:20, col:35> col:35 v 'Vector<Task *> &'
| `-DeprecatedAttr 0x56194e69cde0 <col:59> "" ""
|-CXXMethodDecl 0x56194e69cf70 <line:141:5, col:61> col:17 used set_active 'void (bool, bool)' inline
| |-ParmVarDecl 0x56194e69ce60 <col:28, col:33> col:33 active 'bool'
| `-ParmVarDecl 0x56194e69ced8 <col:41, col:57> col:46 schedule 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56194e69ddd0 <col:57> 'bool' true
|-CXXMethodDecl 0x56194e69d040 <line:142:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x56194e69d100 <line:143:5, col:23> col:17 used sleep 'void ()' inline
|-AccessSpecDecl 0x56194e69d1a0 <line:149:3, col:10> col:3 private
|-CXXRecordDecl 0x56194e69d1c8 <line:151:13, line:156:5> line:151:13 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x56194e69d2f8 <line:152:2, col:8> col:8 referenced t 'Task *'
| |-FieldDecl 0x56194e69d358 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| |-FieldDecl 0x56194e69d3c0 <line:154:2, col:8> col:8 referenced v 'void *'
| `-FieldDecl 0x56194e69d420 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'
|-TypedefDecl 0x56194e69d4e8 <line:151:5, line:156:7> col:7 referenced task_or_signal_t 'union task_or_signal_t':'ActiveNotifier::task_or_signal_t'
| `-ElaboratedType 0x56194e69d490 'union task_or_signal_t' sugar
|   `-RecordType 0x56194e69d260 'ActiveNotifier::task_or_signal_t'
|     `-CXXRecord 0x56194e69d1c8 ''
|-FieldDecl 0x56194e69d568 <line:158:5, col:11> col:11 referenced _listener1 'Task *'
|-FieldDecl 0x56194e69d648 <line:159:5, col:23> col:23 referenced _listeners 'ActiveNotifier::task_or_signal_t *'
|-CXXMethodDecl 0x56194e69d7c8 <line:161:5, col:46> col:9 listener_add 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x56194e69d6a8 <col:22, col:36> col:36 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x56194e69d728 <col:39, col:45> col:45 v 'void *'
|-CXXMethodDecl 0x56194e69d9a8 <line:162:5, col:49> col:9 listener_remove 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x56194e69d888 <col:25, col:39> col:39 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x56194e69d908 <col:42, col:48> col:48 v 'void *'
|-CXXConstructorDecl 0x56194e69db58 <line:164:5, col:41> col:5 ActiveNotifier 'void (const ActiveNotifier &)'
| `-ParmVarDecl 0x56194e69da98 <col:20, col:40> col:41 'const ActiveNotifier &'
`-CXXMethodDecl 0x56194e69dd08 <line:165:5, col:52> col:21 operator= 'ActiveNotifier &(const ActiveNotifier &)'
  `-ParmVarDecl 0x56194e69dc18 <col:31, col:51> col:52 'const ActiveNotifier &'

Layout: <CGRecordLayout
  LLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  NonVirtualBaseLLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e6cd890 <../elements/standard/notifierqueue.hh:71:1, line:101:1> line:71:7 referenced class NotifierQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'SimpleQueue'
|-CXXRecordDecl 0x56194e6cd9e8 <col:1, col:7> col:7 implicit referenced class NotifierQueue
|-AccessSpecDecl 0x56194e6cda78 <col:44, col:50> col:44 public
|-CXXConstructorDecl 0x56194e6cdb00 <line:73:5, col:19> col:5 NotifierQueue 'void ()'
|-CXXMethodDecl 0x56194e6cdc00 <line:75:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x56194e6baa60 SimpleQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x56194e6cf070 <col:36, col:62>
|   `-ReturnStmt 0x56194e6cf060 <col:38, col:45>
|     `-ImplicitCastExpr 0x56194e6cf048 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56194e6cf020 <col:45> 'const char [14]' lvalue "NotifierQueue"
|-CXXMethodDecl 0x56194e6cdd50 <line:76:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x56194e6bad40 SimpleQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x56194e6cdcb8 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x56194e6ce030 <line:78:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x56194e6bb020 SimpleQueue::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x56194e6cdee0 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x56194e6cdf58 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x56194e6ce208 <line:80:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x56194e6bbac8 SimpleQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x56194e6ce0f8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x56194e6ce170 <col:25, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x56194e6ce360 <line:81:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x56194e6bbc20 SimpleQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x56194e6ce2d0 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x56194e6ce408 <line:87:3, col:12> col:3 protected
|-EnumDecl 0x56194e6ce430 <line:89:5, col:35> col:5
| `-EnumConstantDecl 0x56194e6ce530 <col:12, col:33> col:12 referenced SLEEPINESS_TRIGGER 'NotifierQueue::(anonymous enum at ../elements/standard/notifierqueue.hh:89:5)'
|   `-ImplicitCastExpr 0x56194e6ce580 <col:33> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e6ce510 <col:33> 'int' Int: 9
|       `-IntegerLiteral 0x56194e6ce4f0 <col:33> 'int' 9
|-FieldDecl 0x56194e6ce5b0 <line:90:5, col:9> col:9 referenced _sleepiness 'int'
|-FieldDecl 0x56194e6ce610 <line:91:5, col:20> col:20 referenced _empty_note 'ActiveNotifier'
|-FriendDecl 0x56194e6ce6b0 <line:93:5, col:18> col:12 'class MixedQueue':'MixedQueue'
|-FriendDecl 0x56194e6ce740 <line:94:5, col:18> col:12 'class InOrderQueue':'InOrderQueue'
|-FriendDecl 0x56194e6ce7d0 <line:95:5, col:18> col:12 'class ECNQueue':'ECNQueue'
|-FriendDecl 0x56194e6ce860 <line:96:5, col:18> col:12 'class TokenQueue':'TokenQueue'
|-CXXConstructorDecl 0x56194e6ce8c8 <line:71:7> col:7 implicit NotifierQueue 'void (const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x56194e6ce8c8
| `-ParmVarDecl 0x56194e6ce9d8 <col:7> col:7 'const NotifierQueue &'
|-CXXConstructorDecl 0x56194e6cea78 <col:7> col:7 implicit NotifierQueue 'void (NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x56194e6cea78
| `-ParmVarDecl 0x56194e6ceb88 <col:7> col:7 'NotifierQueue &&'
|-CXXMethodDecl 0x56194e6cec28 <col:7> col:7 implicit operator= 'NotifierQueue &(const NotifierQueue &)' inline default_delete noexcept-unevaluated 0x56194e6cec28
| `-ParmVarDecl 0x56194e6ced38 <col:7> col:7 'const NotifierQueue &'
|-CXXMethodDecl 0x56194e6ceda8 <col:7> col:7 implicit operator= 'NotifierQueue &(NotifierQueue &&)' inline default_delete noexcept-unevaluated 0x56194e6ceda8
| `-ParmVarDecl 0x56194e6ceeb8 <col:7> col:7 'NotifierQueue &&'
`-CXXDestructorDecl 0x56194e6cef40 <col:7> col:7 implicit used ~NotifierQueue 'void () noexcept' inline default
  |-Overrides: [ 0x56194e6bcf30 SimpleQueue::~SimpleQueue 'void () noexcept' ]
  `-CompoundStmt 0x56194e6d3f50 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  NonVirtualBaseLLVMType:%class.NotifierQueue = type { %class.SimpleQueue, i32, %class.ActiveNotifier }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class FullNoteQueue
         0 |   class NotifierQueue (primary base)
         0 |     class SimpleQueue (primary base)
         0 |       class Element (primary base)
         0 |         (Element vtable pointer)
         8 |         class Element::Port *[2] _ports
        24 |         class Element::Port [4] _inline_ports
        88 |         int [2] _nports
        96 |         class Router * _router
       104 |         int _eindex
       108 |       class Storage (base)
       108 |         Storage::index_type _capacity
       112 |         volatile Storage::index_type _head
       116 |         volatile Storage::index_type _tail
       120 |       class Packet *volatile * _q
       128 |       volatile int _drops
       132 |       int _highwater_length
       136 |     int _sleepiness
       144 |     class ActiveNotifier _empty_note
       144 |       class Notifier (primary base)
       144 |         (Notifier vtable pointer)
       152 |         class NotifierSignal _signal
       152 |           union NotifierSignal::vmvalue _v
       152 |             class atomic_uint32_t * v1
       152 |             struct NotifierSignal::vmpair * vm
       160 |           uint32_t _mask
       168 |         enum Notifier::SearchOp _search_op
       176 |       class Task * _listener1
       184 |       ActiveNotifier::task_or_signal_t * _listeners
       192 |   class ActiveNotifier _full_note
       192 |     class Notifier (primary base)
       192 |       (Notifier vtable pointer)
       200 |       class NotifierSignal _signal
       200 |         union NotifierSignal::vmvalue _v
       200 |           class atomic_uint32_t * v1
       200 |           struct NotifierSignal::vmpair * vm
       208 |         uint32_t _mask
       216 |       enum Notifier::SearchOp _search_op
       224 |     class Task * _listener1
       232 |     ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=240, dsize=240, align=8,
           |  nvsize=240, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e6cf088 <../elements/standard/fullnotequeue.hh:68:1, line:99:1> line:68:7 referenced class FullNoteQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'NotifierQueue'
|-CXXRecordDecl 0x56194e6cf1e8 <col:1, col:7> col:7 implicit referenced class FullNoteQueue
|-AccessSpecDecl 0x56194e6cf278 <col:46, col:52> col:46 public
|-CXXConstructorDecl 0x56194e6cf300 <line:70:5, col:19> col:5 used FullNoteQueue 'void ()'
|-CXXMethodDecl 0x56194e6cf400 <line:72:5, col:54> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x56194e6cdc00 NotifierQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x56194e6d1098 <col:36, col:54>
|   `-ReturnStmt 0x56194e6d1088 <col:38, col:45>
|     `-ImplicitCastExpr 0x56194e6d1070 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56194e6d1050 <col:45> 'const char [6]' lvalue "Queue"
|-CXXMethodDecl 0x56194e6cf550 <line:73:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x56194e6cdd50 NotifierQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x56194e6cf4b8 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x56194e6cf830 <line:75:5, col:55> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x56194e6ce030 NotifierQueue::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x56194e6cf6e0 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x56194e6cf758 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x56194e6cfb10 <line:76:5, col:66> col:9 live_reconfigure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x56194e6bb660 SimpleQueue::live_reconfigure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x56194e6cf9c0 <col:26, col:42> col:42 conf 'Vector<String> &'
| `-ParmVarDecl 0x56194e6cfa38 <col:48, col:62> col:62 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56194e6cfce8 <line:81:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x56194e6ce208 NotifierQueue::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x56194e6cfbd8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x56194e6cfc50 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x56194e6cfe40 <line:82:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x56194e6ce360 NotifierQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x56194e6cfdb0 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x56194e6cfee8 <line:84:3, col:12> col:3 protected
|-FieldDecl 0x56194e6cff20 <line:86:5, col:20> col:20 referenced _full_note 'ActiveNotifier'
|-CXXMethodDecl 0x56194e6d0318 <line:88:5, line:89:42> line:88:17 push_success 'void (Storage::index_type, Storage::index_type, Storage::index_type, Packet *)' inline
| |-ParmVarDecl 0x56194e6cffd0 <col:30, col:50> col:50 h 'Storage::index_type':'unsigned int'
| |-ParmVarDecl 0x56194e6d0098 <col:53, col:73> col:73 t 'Storage::index_type':'unsigned int'
| |-ParmVarDecl 0x56194e6d0160 <line:89:9, col:29> col:29 nt 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x56194e6d01d8 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x56194e6d0478 <line:90:5, col:39> col:17 push_failure 'void (Packet *)' inline
| `-ParmVarDecl 0x56194e6d03e8 <col:30, col:38> col:38 p 'Packet *'
|-CXXMethodDecl 0x56194e6d0758 <line:91:5, line:92:27> line:91:20 pull_success 'Packet *(Storage::index_type, Storage::index_type)' inline
| |-ParmVarDecl 0x56194e6d0580 <col:33, col:53> col:53 h 'Storage::index_type':'unsigned int'
| `-ParmVarDecl 0x56194e6d0648 <line:92:5, col:25> col:25 nh 'Storage::index_type':'unsigned int'
|-CXXMethodDecl 0x56194e6d0828 <line:93:5, col:33> col:20 pull_failure 'Packet *()' inline
|-CXXConstructorDecl 0x56194e6d08f8 <line:68:7> col:7 implicit FullNoteQueue 'void (const FullNoteQueue &)' inline default_delete noexcept-unevaluated 0x56194e6d08f8
| `-ParmVarDecl 0x56194e6d0a08 <col:7> col:7 'const FullNoteQueue &'
|-CXXConstructorDecl 0x56194e6d0aa8 <col:7> col:7 implicit FullNoteQueue 'void (FullNoteQueue &&)' inline default_delete noexcept-unevaluated 0x56194e6d0aa8
| `-ParmVarDecl 0x56194e6d0bb8 <col:7> col:7 'FullNoteQueue &&'
|-CXXMethodDecl 0x56194e6d0c58 <col:7> col:7 implicit operator= 'FullNoteQueue &(const FullNoteQueue &)' inline default_delete noexcept-unevaluated 0x56194e6d0c58
| `-ParmVarDecl 0x56194e6d0d68 <col:7> col:7 'const FullNoteQueue &'
|-CXXMethodDecl 0x56194e6d0dd8 <col:7> col:7 implicit operator= 'FullNoteQueue &(FullNoteQueue &&)' inline default_delete noexcept-unevaluated 0x56194e6d0dd8
| `-ParmVarDecl 0x56194e6d0ee8 <col:7> col:7 'FullNoteQueue &&'
`-CXXDestructorDecl 0x56194e6d0f70 <col:7> col:7 implicit used ~FullNoteQueue 'void () noexcept' inline default
  |-Overrides: [ 0x56194e6cef40 NotifierQueue::~NotifierQueue 'void () noexcept' ]
  `-CompoundStmt 0x56194e6d3f60 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.FullNoteQueue = type { %class.NotifierQueue, %class.ActiveNotifier }
  NonVirtualBaseLLVMType:%class.FullNoteQueue = type { %class.NotifierQueue, %class.ActiveNotifier }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class QuickNoteQueue
         0 |   class FullNoteQueue (primary base)
         0 |     class NotifierQueue (primary base)
         0 |       class SimpleQueue (primary base)
         0 |         class Element (primary base)
         0 |           (Element vtable pointer)
         8 |           class Element::Port *[2] _ports
        24 |           class Element::Port [4] _inline_ports
        88 |           int [2] _nports
        96 |           class Router * _router
       104 |           int _eindex
       108 |         class Storage (base)
       108 |           Storage::index_type _capacity
       112 |           volatile Storage::index_type _head
       116 |           volatile Storage::index_type _tail
       120 |         class Packet *volatile * _q
       128 |         volatile int _drops
       132 |         int _highwater_length
       136 |       int _sleepiness
       144 |       class ActiveNotifier _empty_note
       144 |         class Notifier (primary base)
       144 |           (Notifier vtable pointer)
       152 |           class NotifierSignal _signal
       152 |             union NotifierSignal::vmvalue _v
       152 |               class atomic_uint32_t * v1
       152 |               struct NotifierSignal::vmpair * vm
       160 |             uint32_t _mask
       168 |           enum Notifier::SearchOp _search_op
       176 |         class Task * _listener1
       184 |         ActiveNotifier::task_or_signal_t * _listeners
       192 |     class ActiveNotifier _full_note
       192 |       class Notifier (primary base)
       192 |         (Notifier vtable pointer)
       200 |         class NotifierSignal _signal
       200 |           union NotifierSignal::vmvalue _v
       200 |             class atomic_uint32_t * v1
       200 |             struct NotifierSignal::vmpair * vm
       208 |           uint32_t _mask
       216 |         enum Notifier::SearchOp _search_op
       224 |       class Task * _listener1
       232 |       ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=240, dsize=240, align=8,
           |  nvsize=240, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e6d2e08 <../elements/standard/quicknotequeue.hh:66:1, line:78:1> line:66:7 class QuickNoteQueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-public 'FullNoteQueue'
|-CXXRecordDecl 0x56194e6d2f68 <col:1, col:7> col:7 implicit referenced class QuickNoteQueue
|-AccessSpecDecl 0x56194e6d2ff8 <col:47, col:53> col:47 public
|-CXXConstructorDecl 0x56194e6d3080 <line:68:5, col:20> col:5 QuickNoteQueue 'void ()'
|-CXXMethodDecl 0x56194e6d3180 <line:70:5, col:63> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x56194e6cf400 FullNoteQueue::class_name 'const char *() const' ]
| `-CompoundStmt 0x56194e6d3ca0 <col:36, col:63>
|   `-ReturnStmt 0x56194e6d3c90 <col:38, col:45>
|     `-ImplicitCastExpr 0x56194e6d3c78 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56194e6d3c50 <col:45> 'const char [15]' lvalue "QuickNoteQueue"
|-CXXMethodDecl 0x56194e6d32d0 <line:71:5, col:32> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x56194e6cf550 FullNoteQueue::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x56194e6d3238 <col:16, col:28> col:28 name 'const char *'
|-CXXMethodDecl 0x56194e6d3420 <line:76:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x56194e6cfe40 FullNoteQueue::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x56194e6d3390 <col:18, col:22> col:22 port 'int'
|-CXXConstructorDecl 0x56194e6d34f8 <line:66:7> col:7 implicit QuickNoteQueue 'void (const QuickNoteQueue &)' inline default_delete noexcept-unevaluated 0x56194e6d34f8
| `-ParmVarDecl 0x56194e6d3608 <col:7> col:7 'const QuickNoteQueue &'
|-CXXConstructorDecl 0x56194e6d36a8 <col:7> col:7 implicit QuickNoteQueue 'void (QuickNoteQueue &&)' inline default_delete noexcept-unevaluated 0x56194e6d36a8
| `-ParmVarDecl 0x56194e6d37b8 <col:7> col:7 'QuickNoteQueue &&'
|-CXXMethodDecl 0x56194e6d3858 <col:7> col:7 implicit operator= 'QuickNoteQueue &(const QuickNoteQueue &)' inline default_delete noexcept-unevaluated 0x56194e6d3858
| `-ParmVarDecl 0x56194e6d3968 <col:7> col:7 'const QuickNoteQueue &'
|-CXXMethodDecl 0x56194e6d39d8 <col:7> col:7 implicit operator= 'QuickNoteQueue &(QuickNoteQueue &&)' inline default_delete noexcept-unevaluated 0x56194e6d39d8
| `-ParmVarDecl 0x56194e6d3ae8 <col:7> col:7 'QuickNoteQueue &&'
`-CXXDestructorDecl 0x56194e6d3b70 <col:7> col:7 implicit ~QuickNoteQueue 'void ()' inline default noexcept-unevaluated 0x56194e6d3b70
  `-Overrides: [ 0x56194e6d0f70 FullNoteQueue::~FullNoteQueue 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.QuickNoteQueue = type { %class.FullNoteQueue }
  NonVirtualBaseLLVMType:%class.QuickNoteQueue = type { %class.FullNoteQueue }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e5636e8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56194e563818 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x56194e564308 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e55ffe8 prev 0x56194e5dc2c0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56194e5600e0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x56194e560170 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x56194e5601d0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x56194e560278 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x56194e560398 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x56194e560538 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x56194e560478 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x56194e560788 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x56194e5605f8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x56194e560678 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x56194e5608e0 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x56194e560850 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x56194e560a68 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x56194e5609a0 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x56194e560c18 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x56194e560b58 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x56194e560d10 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x56194e5644e0 <col:21, line:58:5>
|   `-IfStmt 0x56194e5644c8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x56194e564430 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x56194e564400 <col:6> '<bound member function type>' ->scheduled 0x56194e561568
|     |   `-ImplicitCastExpr 0x56194e564450 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x56194e5643f0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x56194e5644a8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x56194e564478 <col:6> '<bound member function type>' ->unschedule 0x56194e562b90
|         `-CXXThisExpr 0x56194e564468 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x56194e560e10 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x56194e564680 <col:26, line:65:5>
|   |-BinaryOperator 0x56194e5645a0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56194e564538 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56194e563818
|   | | `-MemberExpr 0x56194e564508 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56194e5638d8
|   | |   `-CXXThisExpr 0x56194e5644f8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56194e564588 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56194e564568 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56194e563d38 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56194e564660 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x56194e5645d0 <col:2> 'void *' lvalue ->_thunk 0x56194e563958
|     | `-CXXThisExpr 0x56194e5645c0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x56194e564638 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x56194e564600 <col:20> 'int' 1
|-CXXMethodDecl 0x56194e560f50 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x56194e560ec0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x56194e5647e0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x56194e5646d0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x56194e5646a0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x56194e560ec0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x56194e5647c0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x56194e564790 <col:2> '<bound member function type>' ->assign 0x56194e560e10
|       `-CXXThisExpr 0x56194e564780 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x56194e561120 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x56194e561008 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x56194e561088 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x56194e614cc0 <col:58, line:79:5>
|   |-BinaryOperator 0x56194e614c08 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56194e614ba0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56194e563818
|   | | `-MemberExpr 0x56194e564810 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56194e5638d8
|   | |   `-CXXThisExpr 0x56194e564800 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56194e614bf0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x56194e614bd0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x56194e561008 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x56194e614ca0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56194e614c38 <col:2> 'void *' lvalue ->_thunk 0x56194e563958
|     | `-CXXThisExpr 0x56194e614c28 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56194e614c88 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x56194e614c68 <col:11> 'void *' lvalue ParmVar 0x56194e561088 'user_data' 'void *'
|-CXXMethodDecl 0x56194e561270 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x56194e5611e0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x56194e614e58 <col:35, line:87:5>
|   |-BinaryOperator 0x56194e614d88 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56194e614d20 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56194e563818
|   | | `-MemberExpr 0x56194e614cf0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56194e5638d8
|   | |   `-CXXThisExpr 0x56194e614ce0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56194e614d70 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56194e614d50 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56194e563f10 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56194e614e38 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56194e614db8 <col:2> 'void *' lvalue ->_thunk 0x56194e563958
|     | `-CXXThisExpr 0x56194e614da8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56194e614e20 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x56194e614e08 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x56194e614de8 <col:11> 'Element *' lvalue ParmVar 0x56194e5611e0 'element' 'Element *'
|-CXXMethodDecl 0x56194e5613b8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x56194e561328 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x56194e614ff0 <col:29, line:94:5>
|   |-BinaryOperator 0x56194e614f20 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56194e614eb8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56194e563818
|   | | `-MemberExpr 0x56194e614e88 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56194e5638d8
|   | |   `-CXXThisExpr 0x56194e614e78 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56194e614f08 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56194e614ee8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56194e5640e8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56194e614fd0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56194e614f50 <col:2> 'void *' lvalue ->_thunk 0x56194e563958
|     | `-CXXThisExpr 0x56194e614f40 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56194e614fb8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x56194e614fa0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x56194e614f80 <col:11> 'Task *' lvalue ParmVar 0x56194e561328 'task' 'Task *'
|-CXXMethodDecl 0x56194e5614a8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x56194e6150d0 <col:37, line:100:5>
|   `-ReturnStmt 0x56194e6150c0 <line:99:2, col:19>
|     `-BinaryOperator 0x56194e6150a0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x56194e615070 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x56194e615020 <col:9> 'Element *const' lvalue ->_owner 0x56194e5639b8
|       |   `-CXXThisExpr 0x56194e615010 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x56194e615088 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x56194e615050 <col:19> 'int' 0
|-CXXMethodDecl 0x56194e561568 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x56194e615190 <col:35, line:105:5>
|   `-ReturnStmt 0x56194e615180 <line:104:2, col:23>
|     `-BinaryOperator 0x56194e615160 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x56194e615148 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x56194e6150f8 <col:9> 'const int' lvalue ->_schedpos1 0x56194e563638
|       |   `-CXXThisExpr 0x56194e6150e8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x56194e615128 <col:23> 'int' 0
|-CXXMethodDecl 0x56194e561628 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x56194e6151f8 <col:51, line:118:5>
|   `-ReturnStmt 0x56194e6151e8 <line:117:2, col:9>
|     `-MemberExpr 0x56194e6151b8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x56194e563698
|       `-CXXThisExpr 0x56194e6151a8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56194e5616e8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x56194e615750 <col:37, line:136:5>
|   `-IfStmt 0x56194e615728 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x56194e6152b8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x56194e6152a0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x56194e615280 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x56194e615250 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x56194e56e398
|     |       `-MemberExpr 0x56194e615220 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x56194e563698
|     |         `-CXXThisExpr 0x56194e615210 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x56194e615698 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x56194e615680 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x56194e615650 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x56194e615638 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x56194e615600 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x56194e6155e8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x56194e6155c8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56194e59cb70 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x56194e615568 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x56194e615550 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x56194e615478 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x56194e615460 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x56194e615440 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56194e59c830 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x56194e6153e0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x56194e6152e0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x56194e563698
|     |         |     |   `-CXXThisExpr 0x56194e6152d0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x56194e615428 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x56194e615410 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x56194e6153c0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x56194e6153a8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x56194e615348 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x56194e58fe90 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x56194e6155b0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x56194e615598 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x56194e615530 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x56194e615518 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x56194e6154e8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x56194e3eb3e0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x56194e615718 <line:135:6, col:13>
|       `-CXXConstructExpr 0x56194e6156e8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x56194e6156b8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x56194e563698
|           `-CXXThisExpr 0x56194e6156a8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x56194e5617a8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x56194e615838 <col:35, line:141:5>
|   `-ReturnStmt 0x56194e615828 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x56194e6157f0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x56194e6157c0 <col:9, col:17> '<bound member function type>' ->router 0x56194e5eea20
|         `-ImplicitCastExpr 0x56194e615810 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x56194e6157a8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56194e615778 <col:9> 'Element *const' lvalue ->_owner 0x56194e5639b8
|               `-CXXThisExpr 0x56194e615768 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56194e561868 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x56194e6158b8 <col:37, line:146:5>
|   `-ReturnStmt 0x56194e6158a8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x56194e615890 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x56194e615860 <col:9> 'Element *const' lvalue ->_owner 0x56194e5639b8
|         `-CXXThisExpr 0x56194e615850 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56194e561928 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x56194e615938 <col:41, line:151:5>
|   `-ReturnStmt 0x56194e615928 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x56194e615910 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x56194e6158e0 <col:9> 'RouterThread *const' lvalue ->_thread 0x56194e563a18
|         `-CXXThisExpr 0x56194e6158d0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56194e5619f0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x56194e561bb0 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x56194e561aa0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x56194e561b18 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56194e5642f8 <col:50> 'bool' false
|-CXXMethodDecl 0x56194e561d38 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x56194e561c70 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x56194e561e80 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x56194e561df0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x56194e561fc8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x56194e561f38 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x56194e562110 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56194e562080 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x56194e562258 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56194e5621c8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x56194e562320 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x56194e615aa0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x56194e615a88 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x56194e615a30 <col:2, col:47> 'void'
|       |-MemberExpr 0x56194e615960 <col:2> '<bound member function type>' ->schedule_at_steady 0x56194e561e80
|       | `-CXXThisExpr 0x56194e615950 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56194e615a70 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56194e615a58 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x56194e615a10 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x56194e6159f8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x56194e6159c8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x56194e3eb3e0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x56194e562460 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x56194e5623d0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x56194e5625a8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56194e562518 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e615c28 <col:56, line:241:5>
|   `-ExprWithCleanups 0x56194e615c10 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x56194e615bb8 <col:2, col:40> 'void'
|       |-MemberExpr 0x56194e615ac8 <col:2> '<bound member function type>' ->schedule_after 0x56194e562460
|       | `-CXXThisExpr 0x56194e615ab8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56194e615bf8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56194e615be0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x56194e615b78 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x56194e615b48 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x56194e615b08 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e562518 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x56194e615b60 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56194e615b28 <col:38> 'int' 0
|-CXXMethodDecl 0x56194e5626f0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56194e562660 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e615e98 <col:58, line:249:5>
|   `-ExprWithCleanups 0x56194e615e80 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x56194e615e28 <col:2, col:49> 'void'
|       |-MemberExpr 0x56194e615c50 <col:2> '<bound member function type>' ->schedule_after 0x56194e562460
|       | `-CXXThisExpr 0x56194e615c40 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56194e615e68 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56194e615e50 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x56194e615dd0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x56194e615db8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56194e615d28 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56194e570188 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x56194e615e10 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x56194e615df8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56194e615d08 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e562660 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e562838 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x56194e5627a8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x56194e616078 <col:58, line:261:5>
|   `-ExprWithCleanups 0x56194e616060 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x56194e616008 <col:2, col:38> 'void'
|       |-MemberExpr 0x56194e615ec0 <col:2> '<bound member function type>' ->schedule_at_steady 0x56194e561e80
|       | `-CXXThisExpr 0x56194e615eb0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56194e616048 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56194e616030 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x56194e615fd0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x56194e615fb8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56194e615f98 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56194e59c830 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x56194e615f68 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x56194e615f50 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x56194e615f00 <col:21> 'Timestamp' lvalue ->_expiry_s 0x56194e563698
|             |     `-CXXThisExpr 0x56194e615ef0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x56194e615f30 <col:33> 'const Timestamp' lvalue ParmVar 0x56194e5627a8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x56194e562980 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56194e5628f0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e616350 <col:58, line:270:5>
|   `-ExprWithCleanups 0x56194e616338 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x56194e6162e0 <col:2, col:79> 'void'
|       |-MemberExpr 0x56194e6160a0 <col:2> '<bound member function type>' ->schedule_at_steady 0x56194e561e80
|       | `-CXXThisExpr 0x56194e616090 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56194e616320 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56194e616308 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x56194e6162a0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x56194e6161d8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x56194e6161c0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x56194e616150 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x56194e616120 <col:31, col:41> '<bound member function type>' .sec 0x56194e3eced8
|             | |     `-ImplicitCastExpr 0x56194e616170 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x56194e6160f0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x56194e563698
|             | |         `-CXXThisExpr 0x56194e6160e0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x56194e6161a8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x56194e616188 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e5628f0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x56194e616268 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x56194e616238 <col:60, col:70> '<bound member function type>' .subsec 0x56194e3ed5d0
|                 `-ImplicitCastExpr 0x56194e616288 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x56194e616208 <col:60> 'Timestamp' lvalue ->_expiry_s 0x56194e563698
|                     `-CXXThisExpr 0x56194e6161f8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x56194e562ac8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56194e562a38 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56194e616688 <col:60, line:279:5>
|   `-ExprWithCleanups 0x56194e616670 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x56194e616618 <col:2, col:65> 'void'
|       |-MemberExpr 0x56194e616378 <col:2> '<bound member function type>' ->schedule_at_steady 0x56194e561e80
|       | `-CXXThisExpr 0x56194e616368 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56194e616658 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56194e616640 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x56194e6165e0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x56194e6165c8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56194e6165a8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56194e59c830 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x56194e616548 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x56194e616530 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x56194e6163b8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x56194e563698
|             |     `-CXXThisExpr 0x56194e6163a8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x56194e616590 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x56194e616578 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x56194e6164d8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x56194e6164c0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x56194e616490 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56194e570188 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x56194e616518 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x56194e616500 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x56194e616470 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x56194e562a38 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56194e562b90 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x56194e562c50 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x56194e616b50 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x56194e6166e0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x56194e6166b0 <col:2> '<bound member function type>' ->unschedule 0x56194e562b90
|   |   `-CXXThisExpr 0x56194e6166a0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x56194e616b38 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x56194e616b00 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x56194e616ae8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56194e616798 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x56194e284478 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x56194e616710 <col:2> 'Timestamp' lvalue ->_expiry_s 0x56194e563698
|       | `-CXXThisExpr 0x56194e616700 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56194e616780 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x56194e616750 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x56194e562d10 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x56194e616ea8 <col:42, line:310:5>
|   |-IfStmt 0x56194e616cf0 <line:306:2, line:307:23>
|   | |-CallExpr 0x56194e616c20 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x56194e616c08 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x56194e616ba8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x56194e58e300 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x56194e616ce0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x56194e616cc8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x56194e616c98 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56194e616c80 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x56194e616c50 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x56194e616e98 <line:309:2, col:33>
|     `-ExprWithCleanups 0x56194e616e80 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x56194e616e50 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56194e616e38 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x56194e616df8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x56194e616de0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56194e616db0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56194e5704a0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x56194e616e20 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x56194e616d90 <col:30> 'int' 500
|-CXXMethodDecl 0x56194e562e50 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x56194e562dc0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56194e562ef8 <col:69> "" ""
|-CXXMethodDecl 0x56194e563008 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x56194e562f78 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56194e5630b0 <col:70> "" ""
|-CXXMethodDecl 0x56194e5631c0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x56194e563130 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56194e563268 <col:71> "" ""
|-CXXMethodDecl 0x56194e563378 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x56194e5632e8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56194e563420 <col:72> "" ""
|-EnumDecl 0x56194e563490 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x56194e563590 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x56194e5635e0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e563570 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x56194e563550 <col:25> 'int' 1
|-AccessSpecDecl 0x56194e5635f8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x56194e563638 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x56194e563698 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x56194e5636e8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56194e563818 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x56194e564308 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x56194e5638d8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x56194e563958 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56194e5639b8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x56194e563a18 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x56194e563b68 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x56194e563a78 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x56194e563d38 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56194e563c20 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x56194e563ca0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x56194e563f10 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56194e563df8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x56194e563e78 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x56194e5640e8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56194e563fd0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x56194e564050 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x56194e5642b8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e3b0540 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56194e3b0658 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x56194e3b06f8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x56194e3b0758 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56194e3b07b8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x56194e3b0868 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e3b0b70 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56194e3b0c88 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x56194e3b0d30 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x56194e3b0d98 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x56194e3b0e28 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x56194e3b6ec0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56194e3b72f8 <col:12>
|-CXXConstructorDecl 0x56194e3b6fc8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56194e3b70d8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56194e3b0d30 'data' 'const char *'
| | `-ImplicitCastExpr 0x56194e3b9880 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x56194e3b9850 <col:12> 'const char *const' lvalue .data 0x56194e3b0d30
| |     `-DeclRefExpr 0x56194e3b9830 <col:12> 'const String::rep_t' lvalue ParmVar 0x56194e3b70d8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56194e3b0d98 'length' 'int'
| | `-ImplicitCastExpr 0x56194e3b9910 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56194e3b98e0 <col:12> 'const int' lvalue .length 0x56194e3b0d98
| |     `-DeclRefExpr 0x56194e3b98c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56194e3b70d8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56194e3b0e28 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x56194e3b99a0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x56194e3b9970 <col:12> 'String::memo_t *const' lvalue .memo 0x56194e3b0e28
| |     `-DeclRefExpr 0x56194e3b9950 <col:12> 'const String::rep_t' lvalue ParmVar 0x56194e3b70d8 '' 'const String::rep_t &'
| `-CompoundStmt 0x56194e3b99f8 <col:12>
|-CXXConstructorDecl 0x56194e3b7178 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56194e3b7178
| `-ParmVarDecl 0x56194e3b7288 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x56194e3bc7e0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56194e3c81f8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56194e3c8308 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x56194e3c8820 <col:12>
|   |-BinaryOperator 0x56194e3c8638 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56194e3c85f0 <col:12> 'const char *' lvalue ->data 0x56194e3b0d30
|   | | `-CXXThisExpr 0x56194e3c85e0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56194e3c8620 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x56194e3c85b0 <col:12> 'const char *const' lvalue .data 0x56194e3b0d30
|   |     `-DeclRefExpr 0x56194e3c8590 <col:12> 'const String::rep_t' lvalue ParmVar 0x56194e3c8308 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56194e3c8700 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x56194e3c86b8 <col:12> 'int' lvalue ->length 0x56194e3b0d98
|   | | `-CXXThisExpr 0x56194e3c86a8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56194e3c86e8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x56194e3c8678 <col:12> 'const int' lvalue .length 0x56194e3b0d98
|   |     `-DeclRefExpr 0x56194e3c8658 <col:12> 'const String::rep_t' lvalue ParmVar 0x56194e3c8308 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56194e3c87c8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x56194e3c8780 <col:12> 'String::memo_t *' lvalue ->memo 0x56194e3b0e28
|   | | `-CXXThisExpr 0x56194e3c8770 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56194e3c87b0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x56194e3c8740 <col:12> 'String::memo_t *const' lvalue .memo 0x56194e3b0e28
|   |     `-DeclRefExpr 0x56194e3c8720 <col:12> 'const String::rep_t' lvalue ParmVar 0x56194e3c8308 '' 'const String::rep_t &'
|   `-ReturnStmt 0x56194e3c8810 <col:12>
|     `-UnaryOperator 0x56194e3c87f8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56194e3c87e8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x56194e3c8378 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56194e3c8378
  `-ParmVarDecl 0x56194e3c8488 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56194e3a7ab0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56194e3a7bc8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x56194e3a7c58 <col:16, col:22> col:16 public
|-TypedefDecl 0x56194e3a7c98 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x56194e079e00 'const char *'
|   `-QualType 0x56194e079351 'const char' const
|     `-BuiltinType 0x56194e079350 'char'
|-TypedefDecl 0x56194e3a7d20 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x56194e3a7cf0 'String::const_iterator' sugar
|   |-Typedef 0x56194e3a7c98 'const_iterator'
|   `-PointerType 0x56194e079e00 'const char *'
|     `-QualType 0x56194e079351 'const char' const
|       `-BuiltinType 0x56194e079350 'char'
|-TypedefDecl 0x56194e3a7e90 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x56194e3a7e00 'int (String::*)() const'
|   |-RecordType 0x56194e3a7b40 'String'
|   | `-CXXRecord 0x56194e3a7ab0 'String'
|   `-ParenType 0x56194e3a7da0 'int () const' sugar
|     `-FunctionProtoType 0x56194e37b930 'int () const' const cdecl
|       `-BuiltinType 0x56194e0793b0 'int'
|-TypedefDecl 0x56194e3a7ef8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x56194e1d0510 'int64_t' sugar
|   |-Typedef 0x56194e0e22a0 'int64_t'
|   `-TypedefType 0x56194e0bb510 '__int64_t' sugar
|     |-Typedef 0x56194e0bb0e8 '__int64_t'
|     `-BuiltinType 0x56194e0793d0 'long'
|-TypedefDecl 0x56194e3a7f60 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x56194e1d0430 'uint64_t' sugar
|   |-Typedef 0x56194e0e2440 'uint64_t'
|   `-TypedefType 0x56194e0bb5a0 '__uint64_t' sugar
|     |-Typedef 0x56194e0bb158 '__uint64_t'
|     `-BuiltinType 0x56194e079470 'unsigned long'
|-TypedefDecl 0x56194e3a7ff0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x56194e3a7fc0 'String::intmax_t' sugar
|   |-Typedef 0x56194e3a7ef8 'intmax_t'
|   `-TypedefType 0x56194e1d0510 'int64_t' sugar
|     |-Typedef 0x56194e0e22a0 'int64_t'
|     `-TypedefType 0x56194e0bb510 '__int64_t' sugar
|       |-Typedef 0x56194e0bb0e8 '__int64_t'
|       `-BuiltinType 0x56194e0793d0 'long'
|-TypedefDecl 0x56194e3a8080 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x56194e3a8050 'String::uintmax_t' sugar
|   |-Typedef 0x56194e3a7f60 'uintmax_t'
|   `-TypedefType 0x56194e1d0430 'uint64_t' sugar
|     |-Typedef 0x56194e0e2440 'uint64_t'
|     `-TypedefType 0x56194e0bb5a0 '__uint64_t' sugar
|       |-Typedef 0x56194e0bb158 '__uint64_t'
|       `-BuiltinType 0x56194e079470 'unsigned long'
|-CXXConstructorDecl 0x56194e3a8140 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x56194e3a82e8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x56194e3a8228 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x56194e3a8498 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x56194e3a83d8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x56194e3a85f0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x56194e3a8560 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x56194e3a8808 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x56194e3a86b8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x56194e3a8738 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x56194e3a8a28 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x56194e3a88d8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x56194e3a8958 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x56194e3a8c48 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56194e3a8af8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x56194e3a8b78 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x56194e3a8e68 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56194e3a8d18 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x56194e3a8d98 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x56194e3a8ff8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x56194e3a8f30 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x56194e3a9178 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x56194e3a90b8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x56194e3a9308 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x56194e3a9240 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x56194e3a9460 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x56194e3a93d0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x56194e3a95b8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x56194e3a9528 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x56194e3a9710 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x56194e3a9680 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x56194e3a9898 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x56194e3a97d8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x56194e3a9a28 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x56194e3a9960 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x56194e3a9bb8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x56194e3a9af0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x56194e3a9d48 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x56194e3a9c80 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x56194e3a9e40 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x56194e3a9f68 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x56194e3aa0e8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x56194e3aa020 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x56194e3aa238 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x56194e3aa1a8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x56194e3aa2f0 <col:63> "" ""
|-CXXMethodDecl 0x56194e3aa438 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x56194e3aa378 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x56194e3aa648 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x56194e3aa4f8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x56194e3aa578 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x56194e3aa868 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x56194e3aa710 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x56194e3aa790 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x56194e3aab48 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x56194e3aa928 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x56194e3aa9a8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x56194e3b6990 <col:55> 'int' 10
| `-ParmVarDecl 0x56194e3aaa20 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56194e3b69b0 <col:76> 'bool' true
|-CXXMethodDecl 0x56194e3aae28 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x56194e3aac10 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x56194e3aac90 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56194e3b69c0 <col:56> 'int' 10
| `-ParmVarDecl 0x56194e3aad08 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56194e3b69e0 <col:77> 'bool' true
|-CXXMethodDecl 0x56194e3aaf30 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x56194e3aaff8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x56194e3ab0c0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x56194e3ab160 <col:20>
| `-OptimizeNoneAttr 0x56194e3ab1b8 <col:30>
|-CXXConversionDecl 0x56194e3ab2a8 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56194e3ab378 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56194e3ab438 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x56194e3ab528 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56194e3ab5e8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56194e3ab768 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x56194e3ab6a0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x56194e3ab8b8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x56194e3ab828 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x56194e3ab9a8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x56194e3aba68 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x56194e3abcb8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x56194e3abb20 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x56194e3abba0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x56194e3abf18 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x56194e3abd80 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x56194e3abe00 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x56194e3abfe8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56194e3ac1f8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x56194e3ac0a0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x56194e3ac120 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x56194e3ac418 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x56194e3ac2c0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x56194e3ac340 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x56194e3ac5a8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x56194e3ac4e0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x56194e3ac698 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x56194e3ac808 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x56194e3ac748 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56194e3aca18 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x56194e3ac8c8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56194e3ac948 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56194e3acc30 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x56194e3acad8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x56194e3acb50 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x56194e3acdc0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x56194e3accf0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56194e3acfe0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x56194e3ace80 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x56194e3acf00 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56194e3ad130 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x56194e3ad0a0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x56194e3ad308 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x56194e3ad1f0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56194e3ad270 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x56194e3ad458 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x56194e3ad3c8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x56194e3ad670 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x56194e3ad510 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x56194e3ad590 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x56194e3b69f0 <col:39> 'int' 0
|-CXXMethodDecl 0x56194e3ad890 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x56194e3ad730 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x56194e3ad7b0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x56194e3b6a10 <col:48> 'int' 0
|-CXXMethodDecl 0x56194e3ada70 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x56194e3ad950 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x56194e3ad9d0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x56194e3b6a30 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x56194e3adb40 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x56194e3adc00 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x56194e3adcc0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x56194e3add80 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x56194e3ade40 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x56194e3adfe8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x56194e3adef0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x56194e3ae168 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x56194e3ae0a0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x56194e3ae340 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x56194e3ae228 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x56194e3ae4b8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x56194e3ae3f8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x56194e3ae600 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x56194e3ae570 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56194e3ae750 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x56194e3ae6c0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x56194e3ae928 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x56194e3ae810 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56194e3ae890 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56194e3aeb08 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56194e3ae9f0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x56194e3aea70 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x56194e3aec58 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x56194e3aebc8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x56194e3aee68 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x56194e3aed18 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x56194e3aed98 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x56194e3aefc8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x56194e3aef30 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56194e3af120 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x56194e3af088 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x56194e3af1c8 <col:57> "" ""
|-CXXMethodDecl 0x56194e3af2d8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x56194e3af248 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x56194e3af428 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x56194e3af398 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x56194e3af5a8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x56194e3af4e0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x56194e3af670 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x56194e3af730 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x56194e3af7f0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x56194e3af890 <col:49> "" ""
|-CXXMethodDecl 0x56194e3af920 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x56194e3af9e0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x56194e3afad0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x56194e3afb98 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x56194e3afc58 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x56194e3afd18 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x56194e3afe10 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x56194e3afed8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x56194e3affa0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x56194e3b0178 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x56194e3b0058 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x56194e3b00d8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x56194e3b03a0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x56194e3b0240 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x56194e3b02c0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x56194e3b04b0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x56194e3b0518 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x56194e3b0540 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56194e3b0658 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x56194e3b06f8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x56194e3b0758 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x56194e3b07b8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x56194e3b0868 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x56194e3b08d0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x56194e3b0b08 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x56194e3b0b58 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e3b0ae8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x56194e3b09f8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x56194e3b09a0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x56194e3b09e0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x56194e3b09c0 <col:32> 'int' 8
|-CXXRecordDecl 0x56194e3b0b70 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56194e3b0c88 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x56194e3b0d30 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x56194e3b0d98 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x56194e3b0e28 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x56194e3b6ec0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56194e3b72f8 <col:12>
| |-CXXConstructorDecl 0x56194e3b6fc8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56194e3b70d8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56194e3b0d30 'data' 'const char *'
| | | `-ImplicitCastExpr 0x56194e3b9880 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x56194e3b9850 <col:12> 'const char *const' lvalue .data 0x56194e3b0d30
| | |     `-DeclRefExpr 0x56194e3b9830 <col:12> 'const String::rep_t' lvalue ParmVar 0x56194e3b70d8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56194e3b0d98 'length' 'int'
| | | `-ImplicitCastExpr 0x56194e3b9910 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56194e3b98e0 <col:12> 'const int' lvalue .length 0x56194e3b0d98
| | |     `-DeclRefExpr 0x56194e3b98c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56194e3b70d8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56194e3b0e28 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x56194e3b99a0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x56194e3b9970 <col:12> 'String::memo_t *const' lvalue .memo 0x56194e3b0e28
| | |     `-DeclRefExpr 0x56194e3b9950 <col:12> 'const String::rep_t' lvalue ParmVar 0x56194e3b70d8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x56194e3b99f8 <col:12>
| |-CXXConstructorDecl 0x56194e3b7178 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56194e3b7178
| | `-ParmVarDecl 0x56194e3b7288 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x56194e3bc7e0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56194e3c81f8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56194e3c8308 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x56194e3c8820 <col:12>
| |   |-BinaryOperator 0x56194e3c8638 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x56194e3c85f0 <col:12> 'const char *' lvalue ->data 0x56194e3b0d30
| |   | | `-CXXThisExpr 0x56194e3c85e0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56194e3c8620 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x56194e3c85b0 <col:12> 'const char *const' lvalue .data 0x56194e3b0d30
| |   |     `-DeclRefExpr 0x56194e3c8590 <col:12> 'const String::rep_t' lvalue ParmVar 0x56194e3c8308 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56194e3c8700 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x56194e3c86b8 <col:12> 'int' lvalue ->length 0x56194e3b0d98
| |   | | `-CXXThisExpr 0x56194e3c86a8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56194e3c86e8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x56194e3c8678 <col:12> 'const int' lvalue .length 0x56194e3b0d98
| |   |     `-DeclRefExpr 0x56194e3c8658 <col:12> 'const String::rep_t' lvalue ParmVar 0x56194e3c8308 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56194e3c87c8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x56194e3c8780 <col:12> 'String::memo_t *' lvalue ->memo 0x56194e3b0e28
| |   | | `-CXXThisExpr 0x56194e3c8770 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56194e3c87b0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x56194e3c8740 <col:12> 'String::memo_t *const' lvalue .memo 0x56194e3b0e28
| |   |     `-DeclRefExpr 0x56194e3c8720 <col:12> 'const String::rep_t' lvalue ParmVar 0x56194e3c8308 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x56194e3c8810 <col:12>
| |     `-UnaryOperator 0x56194e3c87f8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56194e3c87e8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x56194e3c8378 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56194e3c8378
|   `-ParmVarDecl 0x56194e3c8488 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x56194e3b0ea0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x56194e3b10e8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x56194e3b0f08 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x56194e3b0f88 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x56194e3b1000 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x56194e3b6e80 <col:79, line:261:5>
|   |-BinaryOperator 0x56194e3b6af8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56194e3b6a90 <col:2, col:5> 'const char *' lvalue .data 0x56194e3b0d30
|   | | `-MemberExpr 0x56194e3b6a60 <col:2> 'String::rep_t' lvalue ->_r 0x56194e3b0ea0
|   | |   `-CXXThisExpr 0x56194e3b6a50 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56194e3b6ae0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56194e3b6ac0 <col:12> 'const char *' lvalue ParmVar 0x56194e3b0f08 'data' 'const char *'
|   |-BinaryOperator 0x56194e3b6bc0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x56194e3b6b58 <col:2, col:5> 'int' lvalue .length 0x56194e3b0d98
|   | | `-MemberExpr 0x56194e3b6b28 <col:2> 'String::rep_t' lvalue ->_r 0x56194e3b0ea0
|   | |   `-CXXThisExpr 0x56194e3b6b18 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56194e3b6ba8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56194e3b6b88 <col:14> 'int' lvalue ParmVar 0x56194e3b0f88 'length' 'int'
|   `-IfStmt 0x56194e3b6e68 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x56194e3b6ce0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56194e3b6cc8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x56194e3b6ca8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x56194e3b6c88 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x56194e3b6c20 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x56194e3b0e28
|     |       | `-MemberExpr 0x56194e3b6bf0 <col:7> 'String::rep_t' lvalue ->_r 0x56194e3b0ea0
|     |       |   `-CXXThisExpr 0x56194e3b6be0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x56194e3b6c70 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x56194e3b6c50 <col:17> 'String::memo_t *' lvalue ParmVar 0x56194e3b1000 'memo' 'String::memo_t *'
|     `-CallExpr 0x56194e3b6e40 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x56194e3b6e28 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56194e3b6d30 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x56194e39fb18 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x56194e3b6d98 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56194e3b06f8
|         `-ImplicitCastExpr 0x56194e3b6d80 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x56194e3b6d60 <col:27> 'String::memo_t *' lvalue ParmVar 0x56194e3b1000 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x56194e3b1398 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x56194e3b11b8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x56194e3b1238 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x56194e3b12b0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x56194e3b0ea0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x56194e3b7308 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56194e3b7498 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x56194e3b7400 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x56194e3b7370 <col:2> '<bound member function type>' ->assign_memo 0x56194e3b10e8
|     | `-ImplicitCastExpr 0x56194e3b7438 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x56194e3b7360 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x56194e3b7450 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x56194e3b73a0 <col:14> 'const char *' lvalue ParmVar 0x56194e3b11b8 'data' 'const char *'
|     |-ImplicitCastExpr 0x56194e3b7468 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56194e3b73c0 <col:20> 'int' lvalue ParmVar 0x56194e3b1238 'length' 'int'
|     `-ImplicitCastExpr 0x56194e3b7480 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x56194e3b73e0 <col:28> 'String::memo_t *' lvalue ParmVar 0x56194e3b12b0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x56194e3b1528 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x56194e3b1468 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x56194e3b76f0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x56194e3b7670 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x56194e3b74c0 <col:2> '<bound member function type>' ->assign_memo 0x56194e3b10e8
|     | `-CXXThisExpr 0x56194e3b74b0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x56194e3b76a8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x56194e3b7540 <col:14, col:19> 'const char *' lvalue .data 0x56194e3b0d30
|     |   `-MemberExpr 0x56194e3b7510 <col:14, col:16> 'String::rep_t' lvalue ._r 0x56194e3b0ea0
|     |     `-DeclRefExpr 0x56194e3b74f0 <col:14> 'const String' lvalue ParmVar 0x56194e3b1468 'x' 'const String &'
|     |-ImplicitCastExpr 0x56194e3b76c0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x56194e3b75c0 <col:25, col:30> 'int' lvalue .length 0x56194e3b0d98
|     |   `-MemberExpr 0x56194e3b7590 <col:25, col:27> 'String::rep_t' lvalue ._r 0x56194e3b0ea0
|     |     `-DeclRefExpr 0x56194e3b7570 <col:25> 'const String' lvalue ParmVar 0x56194e3b1468 'x' 'const String &'
|     `-ImplicitCastExpr 0x56194e3b76d8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x56194e3b7640 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x56194e3b0e28
|         `-MemberExpr 0x56194e3b7610 <col:38, col:40> 'String::rep_t' lvalue ._r 0x56194e3b0ea0
|           `-DeclRefExpr 0x56194e3b75f0 <col:38> 'const String' lvalue ParmVar 0x56194e3b1468 'x' 'const String &'
|-CXXMethodDecl 0x56194e3b15f0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x56194e3b80b0 <col:31, line:278:5>
|   `-IfStmt 0x56194e3b8098 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x56194e3b7790 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56194e3b7778 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x56194e3b7748 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56194e3b0e28
|     |     `-MemberExpr 0x56194e3b7718 <col:6> 'String::rep_t' lvalue ->_r 0x56194e3b0ea0
|     |       `-CXXThisExpr 0x56194e3b7708 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x56194e3b8070 <col:15, line:277:2>
|       |-ParenExpr 0x56194e3b7c40 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x56194e3b7c10 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x56194e3b78a0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x56194e3b7888 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x56194e3b7870 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x56194e3b7830 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56194e3b06f8
|       |   |       `-ImplicitCastExpr 0x56194e3b7818 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x56194e3b77e8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x56194e3b0e28
|       |   |           `-MemberExpr 0x56194e3b77b8 <col:27> 'String::rep_t' lvalue ->_r 0x56194e3b0ea0
|       |   |             `-CXXThisExpr 0x56194e3b77a8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x56194e3b7900 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x56194e3b78e0 <col:54> 'int' 0
|       |   `-CallExpr 0x56194e3b7b70 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x56194e3b7b58 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56194e3b7ad8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56194e116d80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x56194e3b7bb0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56194e3b79e8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x56194e3b7bc8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56194e3b7a18 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x56194e3b7be0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x56194e3b7a50 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x56194e3b7bf8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x56194e3b7ac0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x56194e3b7aa8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x56194e3b7a70 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x56194e3b7f90 <line:274:6, line:275:22>
|       | |-CallExpr 0x56194e3b7e50 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x56194e3b7e38 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x56194e3b7db0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x56194e3a0f60 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x56194e3b7d80 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56194e3b06f8
|       | |   `-ImplicitCastExpr 0x56194e3b7d68 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x56194e3b7d38 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x56194e3b0e28
|       | |       `-MemberExpr 0x56194e3b7d08 <col:40> 'String::rep_t' lvalue ->_r 0x56194e3b0ea0
|       | |         `-CXXThisExpr 0x56194e3b7cf8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x56194e3b7f50 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x56194e3b7f38 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x56194e3b7e78 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x56194e3b5dd0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x56194e3b7f78 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x56194e3b7ed8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x56194e3b0e28
|       |       `-MemberExpr 0x56194e3b7ea8 <col:15> 'String::rep_t' lvalue ->_r 0x56194e3b0ea0
|       |         `-CXXThisExpr 0x56194e3b7e98 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x56194e3b8050 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x56194e3b7fe8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56194e3b0e28
|         | `-MemberExpr 0x56194e3b7fb8 <col:6> 'String::rep_t' lvalue ->_r 0x56194e3b0ea0
|         |   `-CXXThisExpr 0x56194e3b7fa8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x56194e3b8038 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x56194e3b8018 <col:16> 'int' 0
|-CXXMethodDecl 0x56194e3b1888 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x56194e3b16a8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56194e3b1728 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56194e3b17a0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x56194e3b1960 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x56194e3b1bb0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x56194e3b1a18 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56194e3b1a98 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56194e3b1b10 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x56194e3b1d98 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x56194e3b1c80 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x56194e3b1d00 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x56194e3b1e98 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x56194e3b8188 <col:41, line:286:5>
|   `-ReturnStmt 0x56194e3b8178 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x56194e3b8148 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x56194e3b8110 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x56194e3b80f8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x56194e3b80d8 <col:46> 'int' 1
|-CXXMethodDecl 0x56194e3b2138 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x56194e3b1f50 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x56194e3b1fd0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x56194e3b2050 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x56194e3b5dd0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x56194e3b2200 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x56194e3b5ea0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x56194e3b6070 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x56194e3b5f58 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56194e3b5fd8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x56194e3b6130 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x56194e3b61f8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x56194e3b62f8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x56194e3b6370 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x56194e3b63e8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x56194e3b6450 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x56194e3b6550 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x56194e3b65a0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56194e3b6530 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x56194e3b6510 <col:22> 'int' 14
|-CXXMethodDecl 0x56194e3b67b8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x56194e3b65d0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x56194e3b6650 <col:38> col:41 'int'
| `-ParmVarDecl 0x56194e3b66d0 <col:43> col:46 'int'
|-FriendDecl 0x56194e3b68c0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x56194e3b6950 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56194e61bc30 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x56194e6dd398 <line:167:18>
|-CXXRecordDecl 0x56194e6dd458 prev 0x56194e61bc30 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x56194e6dd568 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
