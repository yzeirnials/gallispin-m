
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e2220f8 prev 0x55866e219898 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55866e2221f0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55866e222280 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55866e2222f8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55866e2223b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55866e222480 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55866e2225f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55866e222530 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55866e2226a0 <col:24>
| `-OptimizeNoneAttr 0x55866e2226f8 <col:34>
|-CXXMethodDecl 0x55866e222740 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55866e2229f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55866e2227f0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55866e222868 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55866e2228e8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55866e222ab0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55866e222ae8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55866e222b50 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55866e222bd8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55866e222ef8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55866e222c90 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55866e222d08 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55866e222d80 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55866e222e00 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55866e223010 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55866e22a988 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55866e22a988
| `-ParmVarDecl 0x55866e22aa98 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55866e22ab38 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55866e22ab38
| `-ParmVarDecl 0x55866e22ac48 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55866e33ec00 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e215110 prev 0x55866e214e90 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55866e215208 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55866e215298 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55866e2152f8 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x55866e2153e8 <line:32:5, col:22> col:13 ~Element 'void () noexcept' virtual
|-VarDecl 0x55866e2154e8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55866e2156b8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55866e215568 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55866e2155e0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55866e215848 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55866e215780 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55866e2158f0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55866e215a28 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55866e215960 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55866e215bc8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55866e215b08 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55866e215d68 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55866e215ca8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55866e215e10 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55866e215f10 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55866e215ff0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e215ef0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55866e215ed0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55866e215fa0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55866e216008 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e215f80 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55866e215f60 <col:44> 'int' 2
|-CXXMethodDecl 0x55866e216150 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55866e216038 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55866e2160b8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55866e2162a8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55866e216218 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55866e2164e8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55866e216368 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55866e2163e0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55866e216598 <col:20>
| `-OptimizeNoneAttr 0x55866e2165f0 <col:30>
|-CXXMethodDecl 0x55866e2166f8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55866e216630 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55866e2167a0 <col:20>
| `-OptimizeNoneAttr 0x55866e2167f8 <col:30>
|-CXXMethodDecl 0x55866e216848 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55866e216910 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55866e216a28 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55866e216ab0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55866e216b38 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55866e216bc0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55866e216c48 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55866e216cd8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55866e216d98 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55866e216e20 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55866e216ea8 <line:64:5, col:28> col:23 used PULL 'const char []' static
|-VarDecl 0x55866e216f30 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55866e216fb8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55866e217040 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55866e2170d0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55866e217190 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55866e217220 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55866e217370 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55866e2172d8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55866e217500 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55866e217430 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55866e2177b0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55866e2175b8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55866e217638 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55866e2176b8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55866e217868 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55866e217970 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55866e217c00 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e217950 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55866e217930 <col:33> 'int' 0
| |-EnumConstantDecl 0x55866e217a00 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55866e217c18 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e2179e0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55866e2179c0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55866e217a90 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55866e217c30 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e217a70 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55866e217a50 <col:38> 'int' 90
| |-EnumConstantDecl 0x55866e217b20 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55866e217c48 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e217b00 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55866e217ae0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55866e217bb0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55866e217c60 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e217b90 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55866e217b70 <col:32> 'int' 2000
|-CXXMethodDecl 0x55866e217ca0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55866e2180e0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55866e217f50 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55866e217fc8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55866e2181b0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55866e218330 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55866e218260 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55866e218538 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55866e2183e8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55866e218460 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55866e218638 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55866e2186d8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55866e2187a0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55866e218830 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55866e218a60 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e218810 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55866e2187f0 <col:36> 'int' EnumConstant 0x55866e2187a0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55866e218880 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55866e2188d0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55866e218920 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55866e218970 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55866e2189c0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55866e218a10 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55866e218b48 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55866e218a88 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55866e218c10 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55866e218cd0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55866e218d90 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55866e218e50 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55866e218f68 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55866e219030 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55866e2191b0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55866e2190e0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55866e2192d8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55866e2194d8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55866e219388 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55866e219408 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55866e226e28 <col:54, line:127:5>
|   |-ParenExpr 0x55866e226cd8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55866e226ca8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55866e226998 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55866e226970 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55866e226958 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55866e226940 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55866e226910 <col:31> 'Router *' lvalue ->_router 0x55866e2247f0
|   |   |         `-CXXThisExpr 0x55866e226900 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55866e2269f8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e2269d8 <col:48> 'int' 0
|   |   `-CallExpr 0x55866e226c08 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55866e226bf0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e226bd0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e226c48 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e226a68 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55866e226c60 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e226a88 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55866e226c78 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e226ac0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55866e226c90 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e226bb8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e226ba0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e226b58 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55866e226d70 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55866e226d08 <col:9> 'Router *' lvalue ->_router 0x55866e2247f0
|   | | `-CXXThisExpr 0x55866e226cf8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55866e226d58 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55866e226d38 <col:19> 'Router *' lvalue ParmVar 0x55866e219388 'r' 'Router *'
|   `-BinaryOperator 0x55866e226e08 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55866e226da0 <col:9> 'int' lvalue ->_eindex 0x55866e224858
|     | `-CXXThisExpr 0x55866e226d90 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55866e226df0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55866e226dd0 <col:19> 'int' lvalue ParmVar 0x55866e219408 'eindex' 'int'
|-CXXMethodDecl 0x55866e219660 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55866e219598 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55866e219730 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55866e2197f8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55866e219898 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55866e219ae8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55866e219960 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55866e2199e0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55866e219b98 <col:20>
| `-OptimizeNoneAttr 0x55866e219bf0 <col:30>
|-CXXMethodDecl 0x55866e219cf8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55866e219c30 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55866e219da0 <col:20>
| `-OptimizeNoneAttr 0x55866e219df8 <col:30>
|-CXXMethodDecl 0x55866e219ec8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55866e219e38 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55866e219f70 <col:20>
| `-OptimizeNoneAttr 0x55866e219fc8 <col:30>
|-CXXMethodDecl 0x55866e21a158 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55866e21a000 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55866e21a080 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55866e21a2e8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55866e21a220 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55866e21a438 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55866e21a3a8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55866e21a588 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55866e21a4f8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55866e21a6d8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55866e21a648 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55866e21a998 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55866e21a790 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55866e21a810 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55866e21a8b8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55866e21aa70 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55866e21ab30 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55866e21ae00 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55866e21acb0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55866e21ad28 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55866e21af28 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55866e21b100 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55866e21afe0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55866e21b060 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55866e21b2e8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55866e21b1c8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55866e21b248 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55866e21b658 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55866e21b3a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55866e21b420 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55866e21b4a0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55866e226410 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55866e2263f0 <col:106> 'int' 0
| `-ParmVarDecl 0x55866e21b518 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55866e226448 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55866e226428 <col:126> 'int' 0
|-CXXMethodDecl 0x55866e21b9f8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55866e21b728 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55866e21b7c0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55866e21b840 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55866e21b8b8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55866e226480 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55866e226460 <col:114> 'int' 0
|-CXXMethodDecl 0x55866e21bd88 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55866e21bad0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55866e21bb48 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55866e21bbc8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55866e226498 <col:96> 'int' 0
| `-ParmVarDecl 0x55866e21bc40 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55866e2264d8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55866e2264b8 <col:116> 'int' 0
|-CXXMethodDecl 0x55866e21c108 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55866e21be58 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55866e21bed0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55866e21bf50 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55866e226510 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55866e2264f0 <col:109> 'int' 0
| `-ParmVarDecl 0x55866e21bfc8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55866e226548 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55866e226528 <col:129> 'int' 0
|-CXXMethodDecl 0x55866e21c488 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55866e21c1d8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55866e21c250 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55866e21c2d0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55866e21c348 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55866e226580 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55866e226560 <col:117> 'int' 0
|-CXXMethodDecl 0x55866e21c818 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55866e21c560 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e21c5d8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55866e21c658 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55866e226598 <col:99> 'int' 0
| `-ParmVarDecl 0x55866e21c6d0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55866e2265d8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55866e2265b8 <col:119> 'int' 0
|-CXXMethodDecl 0x55866e21cc38 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55866e21c8e8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55866e21c968 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55866e21c9e0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55866e21ca60 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55866e226610 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55866e2265f0 <col:108> 'int' 0
| `-ParmVarDecl 0x55866e21cae0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55866e226648 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55866e226628 <col:141> 'int' 0
|-CXXMethodDecl 0x55866e21d058 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55866e21cd10 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55866e21cd90 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55866e21ce08 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55866e21ce88 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55866e21cf08 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55866e226660 <col:121> 'int' 0
|-CXXMethodDecl 0x55866e21d488 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55866e21d138 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55866e21d1b8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55866e21d230 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55866e21d2b0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55866e226680 <col:98> 'int' 0
| `-ParmVarDecl 0x55866e21d330 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55866e2266a0 <col:123> 'int' 0
|-CXXMethodDecl 0x55866e21d750 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55866e21d560 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55866e21d5e0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55866e21d660 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55866e2266c0 <col:80> 'int' 0
|-EnumDecl 0x55866e21d808 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55866e21d910 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55866e21dba0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e21d8f0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55866e21d8d0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55866e21d9a0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55866e21dbb8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e21d980 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55866e21d960 <col:40> 'int' 2
| |-EnumConstantDecl 0x55866e21da30 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55866e21dbd0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e21da10 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55866e21d9f0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55866e21dac0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55866e21dbe8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e21daa0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55866e21da80 <col:36> 'int' 7
| `-EnumConstantDecl 0x55866e21db50 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55866e21dc00 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e21db30 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55866e21db10 <col:34> 'int' 6
|-CXXMethodDecl 0x55866e21deb8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55866e21dc28 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55866e21dcc8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55866e21dd48 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55866e21ddc0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55866e226778 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55866e226760 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55866e226748 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55866e226728 <col:98, col:105> 'String' (CXXTemporary 0x55866e226728)
|           `-CXXTemporaryObjectExpr 0x55866e2266f0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55866e21e158 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55866e21df88 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55866e21e000 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55866e21e078 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55866e226828 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55866e226810 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55866e2267f8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55866e2267d8 <col:94, col:101> 'String' (CXXTemporary 0x55866e2267d8)
| |         `-CXXTemporaryObjectExpr 0x55866e2267a0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55866e227010 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55866e226f88 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55866e226f58 <col:9> '<bound member function type>' ->add_task_handlers 0x55866e21deb8
|     | `-CXXThisExpr 0x55866e226f48 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55866e226fc8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55866e226ec8 <col:27> 'Task *' lvalue ParmVar 0x55866e21df88 'task' 'Task *'
|     |-ImplicitCastExpr 0x55866e226fe0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55866e226ee8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55866e21e000 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55866e226ff8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55866e226f08 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55866e21db50 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55866e226f28 <col:62> 'const String' lvalue ParmVar 0x55866e21e078 'prefix' 'const String &'
|-CXXMethodDecl 0x55866e21e368 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55866e21e220 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55866e21e298 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55866e2268d8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55866e2268c0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55866e2268a8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55866e226888 <col:70, col:77> 'String' (CXXTemporary 0x55866e226888)
| |         `-CXXTemporaryObjectExpr 0x55866e226850 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55866e2271e8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55866e227160 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55866e227130 <col:9> '<bound member function type>' ->add_task_handlers 0x55866e21deb8
|     | `-CXXThisExpr 0x55866e227120 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55866e2271a0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55866e2270a0 <col:27> 'Task *' lvalue ParmVar 0x55866e21e220 'task' 'Task *'
|     |-ImplicitCastExpr 0x55866e2271b8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55866e2270c0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55866e2271d0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55866e2270e0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55866e21db50 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55866e227100 <col:57> 'const String' lvalue ParmVar 0x55866e21e298 'prefix' 'const String &'
|-CXXMethodDecl 0x55866e21e648 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55866e21e430 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e21e4b0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e21e528 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55866e21e8f8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55866e21e718 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e21e798 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e21e818 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55866e21ebe8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55866e21e9c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e21ea48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e21eac0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55866e21ee98 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55866e21ecb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e21ed38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e21edb8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55866e21f148 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55866e21ef68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e21efe8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e21f068 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55866e21f3f8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55866e21f218 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e21f298 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e21f310 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55866e21f6a8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55866e21f4c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e21f548 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e21f5c8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55866e21f9b8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55866e21f7d0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e21f850 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e21f8d0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55866e21fc98 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55866e21fa88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e21fb08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e21fbb0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55866e21ff78 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55866e21fd68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e21fde8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e21fe90 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55866e2201e0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55866e220048 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55866e2200c8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55866e220140 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55866e220488 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55866e2202b0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55866e220330 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55866e2203a8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55866e220738 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55866e220558 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e2205d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e220658 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55866e2209e8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55866e220808 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e220888 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e220900 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55866e220c98 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55866e220ab8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e220b38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e220bb0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55866e220f68 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55866e220d68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e220de8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55866e220e88 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55866e221298 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55866e221038 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55866e2210b8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55866e221130 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55866e2211a8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55866e2268f0 <col:93> 'bool' false
|-CXXMethodDecl 0x55866e221480 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55866e221368 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55866e2213e8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55866e221658 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55866e221540 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55866e2215c0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55866e221938 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55866e221718 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55866e221790 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55866e221810 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55866e221888 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55866e221c28 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55866e221a08 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55866e221a80 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55866e221b00 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55866e221b78 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55866e221e60 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55866e221d00 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55866e221d80 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55866e222048 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55866e221f28 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55866e221fa8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55866e2220f8 prev 0x55866e219898 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55866e2221f0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55866e222280 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55866e2222f8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55866e2223b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55866e222480 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55866e2225f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55866e222530 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55866e2226a0 <col:24>
| | `-OptimizeNoneAttr 0x55866e2226f8 <col:34>
| |-CXXMethodDecl 0x55866e222740 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55866e2229f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55866e2227f0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55866e222868 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55866e2228e8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55866e222ab0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55866e222ae8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55866e222b50 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55866e222bd8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55866e222ef8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55866e222c90 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55866e222d08 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55866e222d80 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55866e222e00 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55866e223010 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55866e22a988 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55866e22a988
| | `-ParmVarDecl 0x55866e22aa98 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55866e22ab38 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55866e22ab38
| | `-ParmVarDecl 0x55866e22ac48 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55866e33ec00 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55866e223088 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55866e223128 <col:38> "" ""
|-CXXMethodDecl 0x55866e2231b8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55866e223258 <col:44> "" ""
|-AccessSpecDecl 0x55866e2232c8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55866e2232f0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55866e2233f0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55866e223440 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e2233d0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55866e2233b0 <col:27> 'int' 4
|-FieldDecl 0x55866e2234f8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55866e2236a8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55866e223760 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55866e2247f0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55866e224858 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55866e2249a8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55866e2248e8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55866e224b58 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55866e224a68 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55866e224d38 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55866e224c18 <col:20> col:23 'int'
| `-ParmVarDecl 0x55866e224c98 <col:25> col:28 'int'
|-CXXMethodDecl 0x55866e224fe0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55866e224e00 <col:23> col:26 'int'
| |-ParmVarDecl 0x55866e224e80 <col:28> col:31 'int'
| `-ParmVarDecl 0x55866e224ef8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55866e225098 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55866e225160 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55866e2251b0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55866e225200 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55866e2253e0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55866e225290 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55866e225308 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55866e225688 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55866e2254a8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55866e225528 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55866e2255a0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55866e2258a8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55866e225758 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55866e2257d8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55866e225be0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55866e225968 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55866e2259e8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55866e225a60 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55866e225ae0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55866e225dc8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55866e225cb0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55866e225d30 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55866e225f18 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55866e225e88 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55866e226298 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55866e225fd8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55866e226058 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55866e2260d0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55866e226150 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55866e2263b0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SimplePullSwitch
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   int _input
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e22daf8 <../elements/simple/simplepullswitch.hh:38:1, line:64:1> line:38:7 referenced class SimplePullSwitch definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55866e22dc58 <col:1, col:7> col:7 implicit referenced class SimplePullSwitch
|-AccessSpecDecl 0x55866e22dce8 <col:43, col:49> col:43 public
|-CXXConstructorDecl 0x55866e22dd70 <line:40:5, col:22> col:5 used SimplePullSwitch 'void ()'
|-CXXDestructorDecl 0x55866e22de60 <line:41:5, col:23> col:5 used ~SimplePullSwitch 'void () noexcept'
| `-Overrides: [ 0x55866e2153e8 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55866e22df90 <line:43:5, col:65> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55866e216848 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55866e22f3a8 <col:36, col:65>
|   `-ReturnStmt 0x55866e22f398 <col:38, col:45>
|     `-ImplicitCastExpr 0x55866e22f380 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55866e22f358 <col:45> 'const char [17]' lvalue "SimplePullSwitch"
|-CXXMethodDecl 0x55866e22e058 <line:44:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55866e216910 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55866e22f408 <col:36, col:52>
|   `-ReturnStmt 0x55866e22f3f8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55866e22f3e0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55866e22f3c0 <col:45> 'const char [4]' lvalue "-/1"
|-CXXMethodDecl 0x55866e22e120 <line:45:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55866e216cd8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55866e22f468 <col:36, col:51>
|   `-ReturnStmt 0x55866e22f458 <col:38, col:45>
|     `-ImplicitCastExpr 0x55866e22f440 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55866e22f420 <col:45> 'const char []' lvalue Var 0x55866e216ea8 'PULL' 'const char []'
|-CXXMethodDecl 0x55866e22e3f0 <line:47:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55866e2180e0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55866e22e2a0 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x55866e22e318 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55866e22e4c0 <line:48:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x55866e21ab30 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x55866e22f4a0 <col:39, col:54>
|   `-ReturnStmt 0x55866e22f490 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x55866e22f480 <col:48> 'bool' true
|-CXXMethodDecl 0x55866e22e580 <line:49:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55866e2181b0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55866e22e6c8 <line:51:5, col:37> col:18 set_input 'void (int)' virtual
| `-ParmVarDecl 0x55866e22e638 <col:28, col:32> col:32 input 'int'
|-CXXMethodDecl 0x55866e22e818 <line:53:5, col:21> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x55866e215848 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55866e22e788 <col:18> col:21 'int'
|-CXXMethodDecl 0x55866e22e9f8 <line:55:5, col:43> col:9 llrpc 'int (unsigned int, void *)'
| |-Overrides: [ 0x55866e221e60 Element::llrpc 'int (unsigned int, void *)' ]
| |-ParmVarDecl 0x55866e22e8d8 <col:15, col:24> col:24 command 'unsigned int'
| `-ParmVarDecl 0x55866e22e958 <col:33, col:39> col:39 data 'void *'
|-AccessSpecDecl 0x55866e22eaa8 <line:57:3, col:12> col:3 protected
|-FieldDecl 0x55866e22eae8 <line:59:5, col:9> col:9 _input 'int'
|-CXXMethodDecl 0x55866e22ec60 <line:61:5, col:47> col:19 read_param 'String (Element *, void *)' static
| |-ParmVarDecl 0x55866e22eb48 <col:30, col:38> col:39 'Element *'
| `-ParmVarDecl 0x55866e22ebc8 <col:41, col:46> col:47 'void *'
|-CXXMethodDecl 0x55866e22ef40 <line:62:5, col:77> col:16 write_param 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55866e22ed20 <col:28, col:41> col:42 'const String &'
| |-ParmVarDecl 0x55866e22ed98 <col:44, col:52> col:53 'Element *'
| |-ParmVarDecl 0x55866e22ee18 <col:55, col:60> col:61 'void *'
| `-ParmVarDecl 0x55866e22ee90 <col:63, col:76> col:77 'ErrorHandler *'
|-CXXConstructorDecl 0x55866e22f028 <line:38:7> col:7 implicit SimplePullSwitch 'void (const SimplePullSwitch &)' inline default_delete noexcept-unevaluated 0x55866e22f028
| `-ParmVarDecl 0x55866e22f138 <col:7> col:7 'const SimplePullSwitch &'
`-CXXMethodDecl 0x55866e22f1d8 <col:7> col:7 implicit operator= 'SimplePullSwitch &(const SimplePullSwitch &)' inline default_delete noexcept-unevaluated 0x55866e22f1d8
  `-ParmVarDecl 0x55866e22f2e8 <col:7> col:7 'const SimplePullSwitch &'

Layout: <CGRecordLayout
  LLVMType:%class.SimplePullSwitch = type { %class.Element.base, i32 }
  NonVirtualBaseLLVMType:%class.SimplePullSwitch = type { %class.Element.base, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class ActiveNotifier
         0 |   class Notifier (primary base)
         0 |     (Notifier vtable pointer)
         8 |     class NotifierSignal _signal
         8 |       union NotifierSignal::vmvalue _v
         8 |         class atomic_uint32_t * v1
         8 |         struct NotifierSignal::vmpair * vm
        16 |       uint32_t _mask
        24 |     enum Notifier::SearchOp _search_op
        32 |   class Task * _listener1
        40 |   ActiveNotifier::task_or_signal_t * _listeners
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class PullSwitch
         0 |   class SimplePullSwitch (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       108 |     int _input
       112 |   class ActiveNotifier _notifier
       112 |     class Notifier (primary base)
       112 |       (Notifier vtable pointer)
       120 |       class NotifierSignal _signal
       120 |         union NotifierSignal::vmvalue _v
       120 |           class atomic_uint32_t * v1
       120 |           struct NotifierSignal::vmpair * vm
       128 |         uint32_t _mask
       136 |       enum Notifier::SearchOp _search_op
       144 |     class Task * _listener1
       152 |     ActiveNotifier::task_or_signal_t * _listeners
       160 |   class NotifierSignal * _signals
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866dfd3bc0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55866dfd3cd8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55866dfd3d68 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55866dfd3e38 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55866dfd3f20 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55866dfd4138 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55866dfd3fe0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866dfd42e8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55866dfd41f0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55866dfd4430 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55866dfd43a0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55866dfd4578 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55866dfd44e8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866dfd46c0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55866dfd4630 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866dfd4788 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55866dfd48d0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55866dfd4840 <col:28> col:31 'int'
|-CXXMethodDecl 0x55866dfd4998 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55866dfd4ae0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55866dfd4a50 <col:28> col:31 'int'
|-CXXMethodDecl 0x55866dfd4c58 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55866dfd4b98 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866dfd4da0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55866dfd4d10 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866dfd4e68 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55866dfd5028 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55866dfd4f18 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55866dfd4f90 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866dfd5278 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55866dfd50e8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55866dfd5160 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55866dfd5328 <col:86> "" ""
|-CXXMethodDecl 0x55866dfd5598 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55866dfd5408 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55866dfd5480 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866dfd5748 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55866dfd5658 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55866dfd58f8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55866dfd5800 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55866dfd5bc8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55866dfd59b0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55866dfd5a28 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55866dfd5aa0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866dfd5ea8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55866dfd5c90 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55866dfd5d08 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55866dfd5d80 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55866dfd5f60 <col:115> "" ""
|-AccessSpecDecl 0x55866dfd5fd0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55866dfd6008 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866dfd7520 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55866dfd7520
| `-ParmVarDecl 0x55866dfd7628 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55866dfd76c8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55866dfd76c8
| `-ParmVarDecl 0x55866dfd77d8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55866e00ce08 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55866e1fec00 <col:7>
|-CXXConstructorDecl 0x55866e00cee0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55866e00cee0
| `-ParmVarDecl 0x55866e00cff8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55866e00d068 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55866e00d068
| `-ParmVarDecl 0x55866e00d178 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55866e201600 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e2cfed8 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55866e2cfff8 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x55866e2d0098 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x55866e2d00f8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x55866e2dd2e0 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x55866e2dd2e0

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e2d0160 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55866e2d0278 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x55866e2d0318 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x55866e2d03a8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x55866e2d8120 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55866e2d8558 <col:11>
|-CXXConstructorDecl 0x55866e2d8228 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x55866e2d8228
| `-ParmVarDecl 0x55866e2d8338 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x55866e2d83d8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x55866e2d83d8
| `-ParmVarDecl 0x55866e2d84e8 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x55866e2d9250 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e2cde10 prev 0x55866e214de0 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55866e2cdf08 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x55866e2cdf98 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x55866e2ce0c8 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x55866e2ce040 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x55866e214e70 'NotifierSignal'
|   | `-CXXRecord 0x55866e2cde10 'NotifierSignal'
|   `-ParenType 0x55866e2cdfe0 'bool () const' sugar
|     `-FunctionProtoType 0x55866dd5b710 'bool () const' const cdecl
|       `-BuiltinType 0x55866dcb12f0 'bool'
|-CXXConstructorDecl 0x55866e2ce158 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x55866e2ce398 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x55866e2ce210 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x55866e2ce288 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55866e2ce548 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x55866e2ce488 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x55866e2ce640 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x55866e2ce768 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55866e2ce828 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55866e2ce8e8 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55866e2ce9a8 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55866e2cea98 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x55866e2cec08 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55866e2ced88 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x55866e2cecc8 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x55866e2cee50 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x55866e2cef10 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x55866e2cefd0 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x55866e2cf090 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x55866e2cf348 <line:36:5, col:76> col:17
| `-FunctionDecl 0x55866e2cf288 parent 0x55866dcb1278 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x55866e2cf140 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x55866e2cf1b8 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x55866e2cf568 <line:37:5, col:76> col:17
| `-FunctionDecl 0x55866e2cf4a8 parent 0x55866dcb1278 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x55866e2cf398 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x55866e2cf410 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x55866e2cf6a8 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x55866e2cf5b8 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x55866e2cf7f0 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x55866e2cf760 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x55866e2cfab8 <line:41:5, col:78> col:27
| `-FunctionDecl 0x55866e2cf9f8 parent 0x55866dcb1278 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x55866e2cf8a8 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x55866e2cf920 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x55866e2cfbc8 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x55866e2cfb08 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x55866e2cfd48 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x55866e2cfc80 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x55866e2cfe10 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x55866e2cfeb0 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x55866e2cfed8 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55866e2cfff8 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x55866e2d0098 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x55866e2d00f8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x55866e2dd2e0 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x55866e2dd2e0
|-CXXRecordDecl 0x55866e2d0160 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55866e2d0278 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x55866e2d0318 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x55866e2d03a8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x55866e2d8120 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55866e2d8558 <col:11>
| |-CXXConstructorDecl 0x55866e2d8228 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x55866e2d8228
| | `-ParmVarDecl 0x55866e2d8338 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x55866e2d83d8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x55866e2d83d8
| | `-ParmVarDecl 0x55866e2d84e8 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x55866e2d9250 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x55866e2d0420 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x55866e2d0480 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x55866e2d04d0 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x55866e2d05d0 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55866e2d1620 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e2d05b0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55866e2d0590 <col:14> 'int' 1
| |-EnumConstantDecl 0x55866e2d0660 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55866e2d1638 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e2d0640 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x55866e2d0620 <col:30> 'int' 2
| |-EnumConstantDecl 0x55866e2d06f0 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55866e2d1650 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e2d06d0 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x55866e2d06b0 <col:52> 'int' 4
| `-EnumConstantDecl 0x55866e2d15d0 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x55866e2d1668 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e2d15b0 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x55866e2d0740 <col:23> 'int' 8
|-VarDecl 0x55866e2d1690 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x55866e2d1798 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x55866e2d1708 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x55866e2d1960 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x55866e2d1850 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x55866e2d18c8 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x55866e2d1b98 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x55866e2d1a48 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x55866e2d1ac0 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e2d1c48 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55866e2d1d68 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x55866e2d1df8 <col:18, col:24> col:18 public
|-EnumDecl 0x55866e2d1e20 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x55866e2d1f20 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x55866e2d2010 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e2d1f00 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x55866e2d1ee0 <col:35> 'int' 0
| |-EnumConstantDecl 0x55866e2d1f70 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x55866e2d1fc0 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x55866e2d2258 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x55866e2d21f0 'void (*)(void *, Notifier *)'
|   `-ParenType 0x55866e2d2190 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x55866e2d2150 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x55866dcb12d0 'void'
|       |-PointerType 0x55866dcb1ad0 'void *'
|       | `-BuiltinType 0x55866dcb12d0 'void'
|       `-PointerType 0x55866e2d20b0 'Notifier *'
|         `-RecordType 0x55866e2d1ce0 'Notifier'
|           `-CXXRecord 0x55866e2d1c48 'Notifier'
|-CXXConstructorDecl 0x55866e2d2398 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x55866e2d22c0 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55866e2d6328 <col:35> 'Notifier::SearchOp' EnumConstant 0x55866e2d1f20 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x55866e2d25a8 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x55866e2d2458 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x55866e2d24d0 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55866e2d6348 <col:65> 'Notifier::SearchOp' EnumConstant 0x55866e2d1f20 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x55866e2d26a8 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x55866e2d27d8 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55866e2d6408 <col:37, line:85:5>
|   `-ReturnStmt 0x55866e2d63f8 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x55866e2d63d8 <col:9, col:29> 'bool'
|       `-MemberExpr 0x55866e2d63a8 <col:9, col:17> '<bound member function type>' .initialized 0x55866e2cf090
|         `-MemberExpr 0x55866e2d6378 <col:9> 'const NotifierSignal' lvalue ->_signal 0x55866e2d5d48
|           `-CXXThisExpr 0x55866e2d6368 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x55866e2d29e0 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x55866e2d2890 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x55866e2d2908 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x55866e2d2ad8 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x55866e2d2bc8 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x55866e2d2c88 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55866e2d2dc8 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x55866e2d2d38 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x55866e2d2e90 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x55866e2d2f50 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x55866e2d31c0 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x55866e2d3020 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55866e2d30a0 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x55866e2d3418 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x55866e2d3280 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55866e2d3300 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x55866e2d35a0 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x55866e2d34d8 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x55866e2d36e8 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x55866e2d3658 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x55866e2d3870 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x55866e2d37a0 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x55866e2d39e8 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x55866e2d3928 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x55866e2d3ab0 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x55866e2d3b38 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x55866e2d3d08 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x55866e2d3bb0 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x55866e2d3c30 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x55866e2d3fa8 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x55866e2d3dc8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55866e2d3e48 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x55866e2d3ec0 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x55866e2d4248 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x55866e2d4070 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55866e2d40f0 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x55866e2d4168 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x55866e2d45c8 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x55866e2d4310 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55866e2d4390 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x55866e2d4408 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55866e2d4488 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x55866e2d47b0 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x55866e2d4698 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x55866e2d4718 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x55866e2d4a08 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x55866e2d4870 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55866e2d48f0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x55866e2d4968 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x55866e2d4c68 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x55866e2d4ad0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55866e2d4b50 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x55866e2d4bc8 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x55866e2d4f50 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x55866e2d4d30 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x55866e2d4db0 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x55866e2d4e28 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55866e2d4ea8 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x55866e2d5208 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x55866e2d5020 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55866e2d50a0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x55866e2d5120 <col:78> col:81 'int'
| `-DeprecatedAttr 0x55866e2d52c0 <col:98> "" ""
|-CXXMethodDecl 0x55866e2d55a8 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x55866e2d5340 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55866e2d53c0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x55866e2d5440 <col:78> col:81 'int'
| |-ParmVarDecl 0x55866e2d54b8 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x55866e2d5668 <col:110> "" ""
|-CXXMethodDecl 0x55866e2d5888 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x55866e2d56e8 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55866e2d5768 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x55866e2d57e8 <col:79> col:82 'int'
| `-DeprecatedAttr 0x55866e2d5940 <col:99> "" ""
|-CXXMethodDecl 0x55866e2d5be0 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x55866e2d59c0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55866e2d5a40 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x55866e2d5ac0 <col:79> col:82 'int'
| |-ParmVarDecl 0x55866e2d5b38 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x55866e2d5ca0 <col:111> "" ""
|-AccessSpecDecl 0x55866e2d5d10 <line:123:3, col:10> col:3 private
|-FieldDecl 0x55866e2d5d48 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x55866e2d5da8 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x55866e2d5f20 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x55866e2d5e10 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x55866e2d5e88 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x55866e2d5ff8 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x55866e2d5ff8
| `-ParmVarDecl 0x55866e2d6108 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x55866e2d61a8 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x55866e2d61a8
  `-ParmVarDecl 0x55866e2d62b8 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e2343f0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55866e234508 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55866e2345d8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55866e234638 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55866e2346a0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55866e234728 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55866e194458 <col:16, line:46:5>
|   |-BinaryOperator 0x55866e1943a0 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55866e1942c0 <col:9> 'TaskLink *' lvalue ->_prev 0x55866e2345d8
|   | | `-CXXThisExpr 0x55866e2347e8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55866e194388 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55866e194368 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55866e194300 <col:17> 'TaskLink *' lvalue ->_next 0x55866e234638
|   |     | `-CXXThisExpr 0x55866e1942f0 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55866e194350 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55866e194330 <col:25> 'int' 0
|   `-BinaryOperator 0x55866e194438 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55866e1943d0 <col:9> 'unsigned int' lvalue ->_pass 0x55866e2346a0
|     | `-CXXThisExpr 0x55866e1943c0 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55866e194420 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55866e194400 <col:17> 'int' 0
|-CXXConstructorDecl 0x55866e2c14e8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55866e2c14e8
| `-ParmVarDecl 0x55866e2c15f8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55866e2c1698 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55866e2c1698
| `-ParmVarDecl 0x55866e2c17a8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55866e2c1998 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55866e2c1998
|-CXXMethodDecl 0x55866e2c2198 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55866e2c2198
| `-ParmVarDecl 0x55866e2c22a8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55866e2c2318 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55866e2c2318
  `-ParmVarDecl 0x55866e2c2428 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e196a38 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55866e196b68 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55866e196bc8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55866e196c28 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55866e2c9768 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55866e2c9840 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55866e2c9840
|-CXXConstructorDecl 0x55866e2c9af8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55866e2c9af8
| `-ParmVarDecl 0x55866e2c9c08 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55866e2c9ca8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55866e2c9ca8
  `-ParmVarDecl 0x55866e2c9db8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e196890 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55866e1969a8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55866e196a38 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55866e196b68 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55866e196bc8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55866e196c28 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55866e2c9768 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55866e2c9840 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55866e2c9840
| |-CXXConstructorDecl 0x55866e2c9af8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55866e2c9af8
| | `-ParmVarDecl 0x55866e2c9c08 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55866e2c9ca8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55866e2c9ca8
|   `-ParmVarDecl 0x55866e2c9db8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55866e196ce8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55866e196d48 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55866e196ce8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55866e196b68 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55866e196da0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55866e196ce8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55866e196bc8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55866e196df8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55866e196ce8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55866e196c28 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55866e196e50 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55866e2c9670 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55866e2c9fd8 <col:11>
|-CXXConstructorDecl 0x55866e2c9948 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55866e2c9948
| `-ParmVarDecl 0x55866e2c9a58 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55866e2c9e58 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55866e2c9e58
  `-ParmVarDecl 0x55866e2c9f68 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e1ada40 prev 0x55866e1a4880 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55866e1adb38 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55866e1adbd8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55866e1b49a0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55866e1b4d88 <col:11>
|-CXXConstructorDecl 0x55866e1b4a80 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55866e1b4b68 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55866e1b54d0 <col:11>
|-CXXConstructorDecl 0x55866e1b4c08 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55866e1b4d18 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55866e1b6d28 <col:11>
|-CXXDestructorDecl 0x55866e1b6038 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55866debcbe8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55866debccf8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55866debd5c0 <col:11>
|   `-ReturnStmt 0x55866debd5b0 <col:11>
|     `-UnaryOperator 0x55866debd598 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55866debd588 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55866debcd68 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55866debce78 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55866e250e30 <col:11>
    `-ReturnStmt 0x55866e250e20 <col:11>
      `-UnaryOperator 0x55866e250e08 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55866e250df8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e1a3a38 prev 0x55866e1a3748 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55866e1a3b30 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55866e1a3bc0 <col:19, col:25> col:19 public
|-TypedefDecl 0x55866e1a3bf8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55866de08dc0 'int32_t' sugar
|   |-Typedef 0x55866dd1a268 'int32_t'
|   `-TypedefType 0x55866dcf33b0 '__int32_t' sugar
|     |-Typedef 0x55866dcf2fc8 '__int32_t'
|     `-BuiltinType 0x55866dcb1370 'int'
|-TypedefDecl 0x55866e1a3c60 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55866de08f80 'int64_t' sugar
|   |-Typedef 0x55866dd1a2d0 'int64_t'
|   `-TypedefType 0x55866dcf34d0 '__int64_t' sugar
|     |-Typedef 0x55866dcf30a8 '__int64_t'
|     `-BuiltinType 0x55866dcb1390 'long'
|-EnumDecl 0x55866e1a3cb8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55866e1a3e30 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55866e1a3e10 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55866e1a3de8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55866e1a3dd0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55866e1a3da0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55866e1a3f28 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55866e1a3f08 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55866e1a3ee0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55866e1a3ec8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55866e1a3ea0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55866e1a3e80 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55866e1a3f78 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55866e1a4080 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55866e1a45d0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1a4060 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55866e1a4040 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55866e1a4110 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55866e1a45e8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1a40f0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55866e1a40d0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55866e1a41a0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55866e1a4600 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1a4180 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55866e1a4160 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55866e1a4230 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55866e1a4618 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1a4210 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55866e1a41f0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55866e1a42c0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55866e1a4630 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1a42a0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55866e1a4280 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55866e1a4350 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55866e1a4648 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1a4330 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55866e1a4310 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55866e1a43e0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55866e1a4660 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1a43c0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55866e1a43a0 <col:26> 'int' EnumConstant 0x55866e1a4080 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55866e1a44b0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55866e1a4678 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1a4490 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55866e1a4470 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55866e1a4430 <col:27> 'int' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55866e1a4450 <col:44> 'int' EnumConstant 0x55866e1a4350 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55866e1a4580 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55866e1a4690 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e1a4560 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55866e1a4540 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55866e1a4500 <col:27> 'int' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55866e1a4520 <col:44> 'int' EnumConstant 0x55866e1a4230 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55866e1a46a8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55866e1a47b0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55866e1a4800 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e1a4790 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55866e1a4770 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55866e1a4828 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55866de089f0 'uninitialized_type'
|   `-CXXRecord 0x55866de08958 'uninitialized_type'
|-CXXRecordDecl 0x55866e1a4880 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55866e1a4990 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55866e1aeb88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55866e1b4d98 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55866e1b4eb8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55866e1b4e70 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55866e1b4e00 <col:9> '<bound member function type>' ->assign 0x55866e1a95d8
|     | `-CXXThisExpr 0x55866e1b4df0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55866e1b4e30 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55866e1b4ea0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55866e1b4e50 <col:19> 'int' 0
|-CXXConstructorDecl 0x55866e1a4bd8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55866e1a4a50 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55866e1a4ac8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55866e1b06d0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55866e1b06b0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55866e1aeb88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55866e1b4ed0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55866e1b5020 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55866e1b4fa8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55866e1b4f38 <col:9> '<bound member function type>' ->assign 0x55866e1a95d8
|     | `-CXXThisExpr 0x55866e1b4f28 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55866e1b4ff0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55866e1b4fd8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55866e1b4f68 <col:16> 'long' lvalue ParmVar 0x55866e1a4a50 'sec' 'long'
|     `-ImplicitCastExpr 0x55866e1b5008 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55866e1b4f88 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1a4ac8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55866e1a4e38 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55866e1a4ca8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55866e1a4d20 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55866e1b0708 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55866e1b06e8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55866e1aeb88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55866e1b5038 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55866e1b5170 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55866e1b5110 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55866e1b50a0 <col:9> '<bound member function type>' ->assign 0x55866e1a95d8
|     | `-CXXThisExpr 0x55866e1b5090 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55866e1b5140 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55866e1b50d0 <col:16> 'int' lvalue ParmVar 0x55866e1a4ca8 'sec' 'int'
|     `-ImplicitCastExpr 0x55866e1b5158 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55866e1b50f0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1a4d20 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55866e1a5098 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55866e1a4f08 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55866e1a4f80 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55866e1b0740 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55866e1b0720 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55866e1aeb88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55866e1b5188 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55866e1b52d8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55866e1b5260 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55866e1b51f0 <col:9> '<bound member function type>' ->assign 0x55866e1a95d8
|     | `-CXXThisExpr 0x55866e1b51e0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55866e1b52a8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55866e1b5290 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55866e1b5220 <col:16> 'unsigned long' lvalue ParmVar 0x55866e1a4f08 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55866e1b52c0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55866e1b5240 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1a4f80 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55866e1a6230 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55866e1a5168 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55866e1a51e0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55866e1b0778 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55866e1b0758 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55866e1aeb88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55866e1b52f0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55866e1b5440 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55866e1b53c8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55866e1b5358 <col:9> '<bound member function type>' ->assign 0x55866e1a95d8
|     | `-CXXThisExpr 0x55866e1b5348 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55866e1b5410 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55866e1b53f8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55866e1b5388 <col:16> 'unsigned int' lvalue ParmVar 0x55866e1a5168 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55866e1b5428 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55866e1b53a8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1a51e0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55866e1a6390 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55866e1a6300 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55866e1a6528 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55866e1a6468 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55866e1a6758 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55866e1a6660 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55866e1a6908 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55866e1a6848 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55866e1aeb88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55866e1b54e0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55866e1b5458 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55866e1a6848 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55866e1b5540 <col:19, line:214:5>
|-CXXConstructorDecl 0x55866e1a6ad8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55866e1a6a18 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55866e1aeb88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55866e1b5550 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55866e1b5600 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55866e1b55d8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55866e1b55a8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55866e1a6a18 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55866e1a6cc8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55866e1a6c40 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55866e1a37e0 'Timestamp'
|   | `-CXXRecord 0x55866e1a3a38 'Timestamp'
|   `-ParenType 0x55866e1a6be0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55866e1a6bb0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55866e1a3d80 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55866e1a3bf8 'seconds_type'
|         `-TypedefType 0x55866de08dc0 'int32_t' sugar
|           |-Typedef 0x55866dd1a268 'int32_t'
|           `-TypedefType 0x55866dcf33b0 '__int32_t' sugar
|             |-Typedef 0x55866dcf2fc8 '__int32_t'
|             `-BuiltinType 0x55866dcb1370 'int'
|-CXXConversionDecl 0x55866e1a6e08 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55866e1a6ed8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55866e1b5708 <col:37, line:231:5>
|   `-ReturnStmt 0x55866e1b56f8 <line:227:9, col:23>
|     `-BinaryOperator 0x55866e1b56d8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55866e1b56a8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55866e1b5658 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55866e1adbd8
|       |   `-MemberExpr 0x55866e1b5628 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55866e1aeb88
|       |     `-CXXThisExpr 0x55866e1b5618 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55866e1b56c0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55866e1b5688 <col:23> 'int' 0
|-CXXMethodDecl 0x55866e1a6f98 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55866e1a7058 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55866e1a7118 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55866e1a71d8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55866e1a7298 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55866e1a7408 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55866e1a7348 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55866e1a7550 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55866e1a74c0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1a7618 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55866e1a76b8 <col:54> "" ""
|-CXXMethodDecl 0x55866e1a7748 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55866e1a77e8 <col:54> "" ""
|-CXXMethodDecl 0x55866e1a7878 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55866e1a7918 <col:54> "" ""
|-CXXMethodDecl 0x55866e1a7a18 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55866e1a7ae8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55866e1a7c18 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55866e1a7d10 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55866e1a7e48 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55866e1b5920 <col:39, line:271:5>
|   `-ReturnStmt 0x55866e1b5910 <line:267:9, col:61>
|     `-CallExpr 0x55866e1b58b0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55866e1b5898 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55866e1b5720 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55866e1aeeb8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55866e1b58e0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55866e1b5780 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55866e1adbd8
|       |   `-MemberExpr 0x55866e1b5750 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55866e1aeb88
|       |     `-CXXThisExpr 0x55866e1b5740 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55866e1b58f8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55866e1b5820 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55866e1b57f0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55866e1b57b0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55866e1b5808 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55866e1b57d0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4350 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55866e1a7f08 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55866e1b5ae0 <col:39, line:279:5>
|   `-ReturnStmt 0x55866e1b5ad0 <line:275:9, col:61>
|     `-CallExpr 0x55866e1b5a70 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55866e1b5a58 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55866e1b5938 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55866e1aeeb8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55866e1b5aa0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55866e1b5998 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55866e1adbd8
|       |   `-MemberExpr 0x55866e1b5968 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55866e1aeb88
|       |     `-CXXThisExpr 0x55866e1b5958 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55866e1b5ab8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55866e1b5a38 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55866e1b5a08 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55866e1b59c8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55866e1b5a20 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55866e1b59e8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4230 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55866e1a7fc8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55866e1b5c78 <col:39, line:287:5>
|   `-ReturnStmt 0x55866e1b5c68 <line:283:9, col:53>
|     `-BinaryOperator 0x55866e1b5c48 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55866e1b5c18 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55866e1b5b38 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55866e1adbd8
|       |   `-MemberExpr 0x55866e1b5b08 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55866e1aeb88
|       |     `-CXXThisExpr 0x55866e1b5af8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55866e1b5c30 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55866e1b5bf8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55866e1b5bd8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55866e1b5ba8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55866e1b5b68 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4080 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55866e1b5bc0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55866e1b5b88 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55866e1a80b8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55866e1b6f10 <col:40, line:293:5>
|   |-DeclStmt 0x55866e1b5dc0 <line:291:9, col:48>
|   | `-VarDecl 0x55866e1b5ca0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55866e1b5da0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55866e1b5d48 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55866e1b5d18 <col:22> '<bound member function type>' ->subsec 0x55866e1a7058
|   |     |   `-CXXThisExpr 0x55866e1b5d08 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55866e1b5d88 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55866e1b5d68 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a44b0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55866e1b6f00 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55866e1b6ee8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55866e1b6eb8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55866e1b6ea0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55866e1b6e80 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55866e1b6e50 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55866e1b6be8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55866e1b6bd0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55866e1b5dd8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55866e1b5ca0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55866e1b6df0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55866e1b6dd8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55866e1b6da8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55866e1b6c00 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55866e1b6b70 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55866e1b6b58 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55866e1b6b08 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55866e1a3988 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55866e1b6aa8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55866e1b5e08 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55866e1b5df8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55866e1b6af0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55866e1b6ad8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55866e1b62c8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55866e1b5e30 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55866e1b5ec0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55866e1b5e90 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55866e1b5e50 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a44b0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55866e1b5ea8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55866e1b5e70 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55866e1b5ca0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55866e1b6e20 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55866e1b6bb8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55866e1b6ba8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55866e1a8178 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55866e1b7468 <col:40, line:302:5>
|   |-DeclStmt 0x55866e1b7060 <line:297:9, col:48>
|   | `-VarDecl 0x55866e1b6f40 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55866e1b7040 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55866e1b6fe8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55866e1b6fb8 <col:22> '<bound member function type>' ->subsec 0x55866e1a7058
|   |     |   `-CXXThisExpr 0x55866e1b6fa8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55866e1b7028 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55866e1b7008 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4580 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55866e1b7458 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55866e1b7440 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55866e1b7410 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55866e1b73f8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55866e1b73d8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55866e1b73a8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55866e1b72d0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55866e1b72b8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55866e1b7078 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55866e1b6f40 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55866e1b7348 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55866e1b7330 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55866e1b7300 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55866e1b72e8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55866e1b7258 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55866e1b7240 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55866e1b7220 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55866e1a3988 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55866e1b71c0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55866e1b70a8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55866e1b7098 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55866e1b7208 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55866e1b71f0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55866e1b7180 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55866e1b70d0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55866e1b7160 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55866e1b7130 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55866e1b70f0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4580 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55866e1b7148 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55866e1b7110 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55866e1b6f40 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55866e1b7378 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55866e1b72a0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55866e1b7290 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55866e1a8238 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55866e1b74f0 <col:40, line:306:5>
|   `-ReturnStmt 0x55866e1b74e0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55866e1b74b0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55866e1b7498 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55866e1b7488 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55866e1a83d8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55866e1a82e8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55866e1a85a8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55866e1a84b0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55866e1a8698 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55866e1a8808 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55866e1a8748 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55866e1b7638 <col:56, line:320:5>
|   `-ReturnStmt 0x55866e1b7628 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55866e1b7610 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55866e1b75e0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55866e1b75c8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55866e1b7588 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55866e1b7558 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55866e1b7518 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55866e1a8748 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55866e1b7570 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55866e1b7538 <col:31> 'int' 0
|-CXXMethodDecl 0x55866e1a8a48 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55866e1a88c0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55866e1a8938 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1b7808 <col:72, line:326:5>
|   `-ReturnStmt 0x55866e1b77f8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55866e1b77e0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55866e1b77b0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55866e1b7798 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55866e1b7758 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55866e1b7740 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55866e1b7660 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55866e1a88c0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55866e1b7700 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55866e1b76e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55866e1b7680 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55866e1ad330 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55866e1b7728 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55866e1b76a0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1a8938 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1a8bf8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55866e1a8b08 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55866e1b7ed0 <col:56, line:337:5>
|   |-DeclStmt 0x55866e1b7b08 <line:329:9, col:51>
|   | `-VarDecl 0x55866e1b7830 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55866e1b7af0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55866e1b7ac0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55866e1b7aa8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55866e1b7a90 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55866e1b7a60 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55866e1b7a48 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55866e1b7a30 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55866e1b7920 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55866e1b7cc0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55866e1b7b70 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55866e1adbd8
|   | | `-MemberExpr 0x55866e1b7b40 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55866e1aeb88
|   | |   `-DeclRefExpr 0x55866e1b7b20 <col:9> 'Timestamp' lvalue Var 0x55866e1b7830 't' 'Timestamp'
|   | `-BinaryOperator 0x55866e1b7ca0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55866e1b7c70 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55866e1b7ba0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55866e1a8b08 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55866e1b7c88 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55866e1b7c50 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55866e1b7c30 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55866e1b7c00 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55866e1b7bc0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55866e1b7c18 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55866e1b7be0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4350 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55866e1b7eb8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55866e1b7e88 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55866e1b7e70 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55866e1b7e50 <col:16> 'Timestamp' lvalue Var 0x55866e1b7830 't' 'Timestamp'
|-CXXMethodDecl 0x55866e1a8dc0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55866e1a8cb0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55866e1a8d28 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1b8088 <col:72, line:343:5>
|   `-ReturnStmt 0x55866e1b8078 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55866e1b8060 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55866e1b8030 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55866e1b8018 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55866e1b7fd8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55866e1b7fc0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55866e1b7f08 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55866e1a8cb0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55866e1b7f80 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55866e1b7f68 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55866e1b7f28 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55866e1ad478 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55866e1b7fa8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55866e1b7f48 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1a8d28 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1a8f10 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55866e1a8e80 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55866e1b84d0 <col:56, line:354:5>
|   |-DeclStmt 0x55866e1b8278 <line:346:9, col:51>
|   | `-VarDecl 0x55866e1b80b0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55866e1b8260 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55866e1b8230 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55866e1b8218 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55866e1b8200 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55866e1b81d0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55866e1b81b8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55866e1b81a0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55866e1b8170 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55866e1b8430 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55866e1b82e0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55866e1adbd8
|   | | `-MemberExpr 0x55866e1b82b0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55866e1aeb88
|   | |   `-DeclRefExpr 0x55866e1b8290 <col:9> 'Timestamp' lvalue Var 0x55866e1b80b0 't' 'Timestamp'
|   | `-BinaryOperator 0x55866e1b8410 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55866e1b83e0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55866e1b8310 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55866e1a8e80 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55866e1b83f8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55866e1b83c0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55866e1b83a0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55866e1b8370 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55866e1b8330 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55866e1b8388 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55866e1b8350 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4230 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55866e1b84b8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55866e1b8488 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55866e1b8470 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55866e1b8450 <col:16> 'Timestamp' lvalue Var 0x55866e1b80b0 't' 'Timestamp'
|-CXXMethodDecl 0x55866e1a90d8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55866e1a8fc8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55866e1a9040 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1b8688 <col:72, line:360:5>
|   `-ReturnStmt 0x55866e1b8678 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55866e1b8660 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55866e1b8630 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55866e1b8618 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55866e1b85d8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55866e1b85c0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55866e1b8508 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55866e1a8fc8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55866e1b8580 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55866e1b8568 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55866e1b8528 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55866e1ad5c0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55866e1b85a8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55866e1b8548 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1a9040 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1a9228 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55866e1a9198 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55866e1c4ff8 <col:56, line:371:5>
|   |-DeclStmt 0x55866e1b8878 <line:363:9, col:51>
|   | `-VarDecl 0x55866e1b86b0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55866e1b8860 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55866e1b8830 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55866e1b8818 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55866e1b8800 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55866e1b87d0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55866e1b87b8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55866e1b87a0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55866e1b8770 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55866e1c4f58 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55866e1b88e0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55866e1adbd8
|   | | `-MemberExpr 0x55866e1b88b0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55866e1aeb88
|   | |   `-DeclRefExpr 0x55866e1b8890 <col:9> 'Timestamp' lvalue Var 0x55866e1b86b0 't' 'Timestamp'
|   | `-CallExpr 0x55866e1c4ef8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55866e1c4ee0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55866e1b8910 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55866e1aeeb8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55866e1c4f28 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55866e1b8930 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55866e1a9198 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55866e1c4f40 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55866e1c4ec0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55866e1c4e90 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55866e1b8950 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4080 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55866e1c4ea8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55866e1b8970 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55866e1c4fe0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55866e1c4fb0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55866e1c4f98 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55866e1c4f78 <col:16> 'Timestamp' lvalue Var 0x55866e1b86b0 't' 'Timestamp'
|-CXXMethodDecl 0x55866e1a9318 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55866e1c5138 <col:39, line:377:5>
|   `-ReturnStmt 0x55866e1c5128 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55866e1c5110 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55866e1c50e0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55866e1c50c8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55866e1c5088 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55866e1c5030 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55866e1c5070 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55866e1c5050 <col:29> 'int' 1
|-CXXMethodDecl 0x55866e1a93d8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55866e1c5218 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55866e1c51d0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55866e1c5160 <col:9> '<bound member function type>' ->assign 0x55866e1a95d8
|     | `-CXXThisExpr 0x55866e1c5150 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55866e1c5190 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55866e1c5200 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55866e1c51b0 <col:19> 'int' 0
|-CXXMethodDecl 0x55866e1a95d8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55866e1a9488 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55866e1a9500 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55866e1b07b0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55866e1b0790 <col:60> 'int' 0
| `-CompoundStmt 0x55866e1c5410 <col:63, line:395:5>
|   `-BinaryOperator 0x55866e1c53f0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55866e1c5270 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55866e1adbd8
|     | `-MemberExpr 0x55866e1c5240 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55866e1aeb88
|     |   `-CXXThisExpr 0x55866e1c5230 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55866e1c53d0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55866e1c5360 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55866e1c5300 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55866e1c52e8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55866e1c52d0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55866e1c52a0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55866e1a9488 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55866e1c5348 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55866e1c5328 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55866e1c53b8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55866e1c53a0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55866e1c5380 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1a9500 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1a97a8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55866e1a9698 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55866e1a9710 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1c5568 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55866e1c5520 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55866e1c5438 <col:9> '<bound member function type>' ->assign 0x55866e1a95d8
|     | `-CXXThisExpr 0x55866e1c5428 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55866e1c5550 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55866e1c5468 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55866e1a9698 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55866e1c54e0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55866e1c54c8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55866e1c5488 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55866e1ad478 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55866e1c5508 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55866e1c54a8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1a9710 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1a9978 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55866e1a9868 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55866e1a98e0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1c56c0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55866e1c5678 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55866e1c5590 <col:9> '<bound member function type>' ->assign 0x55866e1a95d8
|     | `-CXXThisExpr 0x55866e1c5580 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55866e1c56a8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55866e1c55c0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55866e1a9868 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55866e1c5638 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55866e1c5620 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55866e1c55e0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55866e1ad5c0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55866e1c5660 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55866e1c5600 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1a98e0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1a9b48 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55866e1a9a38 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55866e1a9ab0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55866e1b07e8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55866e1b07c8 <col:57> 'int' 0
| `-DeprecatedAttr 0x55866e1a9bf8 <col:75> "" ""
|-CXXMethodDecl 0x55866e1a9d88 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55866e1a9c78 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55866e1a9cf0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55866e1a9e38 <col:74> "" ""
|-CXXMethodDecl 0x55866e1a9fc8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55866e1a9eb8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55866e1a9f30 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55866e1aa078 <col:74> "" ""
|-CXXMethodDecl 0x55866e1aa108 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55866e1aa1a8 <col:42> "" ""
|-CXXMethodDecl 0x55866e1ac9e0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55866e1ac8c0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55866e1ac940 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55866e1acab0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55866e1acb70 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55866e1acc10 <col:20>
| `-OptimizeNoneAttr 0x55866e1acc68 <col:30>
|-CXXMethodDecl 0x55866e1accb0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55866e1acd70 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55866e1ace30 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55866e1acef0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55866e1acfb0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55866e1ad070 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55866e1ad130 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55866e1ad1f0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55866e1ad330 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55866e1ad2a0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1c5808 <col:58, line:512:5>
|   `-ReturnStmt 0x55866e1c57f8 <line:511:9, col:53>
|     `-BinaryOperator 0x55866e1c57d8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55866e1c57a8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55866e1c56d8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1ad2a0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55866e1c57c0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55866e1c5788 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55866e1c5768 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55866e1c5738 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55866e1c56f8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55866e1c5750 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55866e1c5718 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4350 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55866e1ad478 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55866e1ad3e8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1c5950 <col:58, line:516:5>
|   `-ReturnStmt 0x55866e1c5940 <line:515:9, col:53>
|     `-BinaryOperator 0x55866e1c5920 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55866e1c58f0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55866e1c5820 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1ad3e8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55866e1c5908 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55866e1c58d0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55866e1c58b0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55866e1c5880 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55866e1c5840 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55866e1c5898 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55866e1c5860 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4230 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55866e1ad5c0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55866e1ad530 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1c5a98 <col:58, line:520:5>
|   `-ReturnStmt 0x55866e1c5a88 <line:519:9, col:53>
|     `-BinaryOperator 0x55866e1c5a68 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55866e1c5a38 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55866e1c5968 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1ad530 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55866e1c5a50 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55866e1c5a18 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55866e1c59f8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55866e1c59c8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55866e1c5988 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4080 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55866e1c59e0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55866e1c59a8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55866e1ad708 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55866e1ad678 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1c5be0 <col:60, line:524:5>
|   `-ReturnStmt 0x55866e1c5bd0 <line:523:9, col:55>
|     `-BinaryOperator 0x55866e1c5bb0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55866e1c5b80 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55866e1c5ab0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1ad678 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55866e1c5b98 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55866e1c5b60 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55866e1c5b40 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55866e1c5b10 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55866e1c5ad0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55866e1c5b28 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55866e1c5af0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4350 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55866e1ad850 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55866e1ad7c0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1c5d28 <col:60, line:528:5>
|   `-ReturnStmt 0x55866e1c5d18 <line:527:9, col:55>
|     `-BinaryOperator 0x55866e1c5cf8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55866e1c5cc8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55866e1c5bf8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1ad7c0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55866e1c5ce0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55866e1c5ca8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55866e1c5c88 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55866e1c5c58 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55866e1c5c18 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55866e1c5c70 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55866e1c5c38 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4230 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55866e1ad998 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55866e1ad908 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1c5e70 <col:60, line:532:5>
|   `-ReturnStmt 0x55866e1c5e60 <line:531:9, col:55>
|     `-BinaryOperator 0x55866e1c5e40 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55866e1c5e10 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55866e1c5d40 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1ad908 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55866e1c5e28 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55866e1c5df0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55866e1c5dd0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55866e1c5da0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55866e1c5d60 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a4080 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55866e1c5db8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55866e1c5d80 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55866e1a43e0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55866e1ada40 prev 0x55866e1a4880 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55866e1adb38 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55866e1adbd8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55866e1b49a0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55866e1b4d88 <col:11>
| |-CXXConstructorDecl 0x55866e1b4a80 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55866e1b4b68 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55866e1b54d0 <col:11>
| |-CXXConstructorDecl 0x55866e1b4c08 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55866e1b4d18 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55866e1b6d28 <col:11>
| |-CXXDestructorDecl 0x55866e1b6038 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55866debcbe8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55866debccf8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55866debd5c0 <col:11>
| |   `-ReturnStmt 0x55866debd5b0 <col:11>
| |     `-UnaryOperator 0x55866debd598 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55866debd588 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55866debcd68 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55866debce78 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55866e250e30 <col:11>
|     `-ReturnStmt 0x55866e250e20 <col:11>
|       `-UnaryOperator 0x55866e250e08 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55866e250df8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55866e1adc40 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55866e1add40 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55866e1adf40 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1add20 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55866e1add00 <col:21> 'int' 0
| |-EnumConstantDecl 0x55866e1addd0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55866e1adf58 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1addb0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55866e1add90 <col:23> 'int' 1
| |-EnumConstantDecl 0x55866e1ade60 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55866e1adf70 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1ade40 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55866e1ade20 <col:23> 'int' 2
| `-EnumConstantDecl 0x55866e1adef0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55866e1adf88 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e1aded0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55866e1adeb0 <col:27> 'int' 3
|-CXXMethodDecl 0x55866e1adfc8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55866e1ae090 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55866e1ae298 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55866e1ae140 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55866e1ae1c0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55866e1b0800 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55866e1ae4a8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55866e1ae358 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55866e1ae3d0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55866e1ae578 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55866e1ae638 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55866e1ae7a8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55866e1ae6e8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55866e1ae870 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55866e1ae930 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55866e1ae9f0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55866e1aeab0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55866e1aeb50 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55866e1aeb88 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55866e1aebf8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55866e1c5e88 <col:27, line:684:5>
|-CXXMethodDecl 0x55866e1aecb8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55866e1c5e98 <col:27, line:696:5>
|-CXXMethodDecl 0x55866e1aeeb8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55866e1aed68 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55866e1aede0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1c6020 <col:66, line:700:5>
|   `-ReturnStmt 0x55866e1c6010 <line:699:9, col:31>
|     `-CallExpr 0x55866e1c5fb0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55866e1c5f98 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55866e1c5f48 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55866e031268 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55866e1c5fe0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55866e1c5f08 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55866e1aed68 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55866e1c5ff8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55866e1c5f28 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1aede0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1af228 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55866e1aef78 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55866e1aeff0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55866e1af068 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55866e1af0e0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e1c6370 <col:64, line:707:5>
|   |-DeclStmt 0x55866e1c60b0 <line:704:9, col:24>
|   | `-VarDecl 0x55866e1c6048 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55866e1c62c0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55866e1c60c8 <col:9> 'int32_t':'int' lvalue ParmVar 0x55866e1aeff0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55866e1c62a8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55866e1c6240 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55866e1c6228 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1c61a8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55866e036538 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55866e1c6278 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55866e1c6148 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55866e1af068 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55866e1c6290 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55866e1c6168 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e1af0e0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55866e1c6188 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55866e1c6048 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55866e1c6350 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55866e1c62e0 <col:9> 'int32_t':'int' lvalue ParmVar 0x55866e1aef78 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55866e1c6338 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55866e1c6320 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55866e1c6300 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55866e1c6048 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55866e1af4c8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55866e1af2f8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55866e1af370 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55866e1af3e8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55866e1af768 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55866e1af590 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55866e1af608 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55866e1af680 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55866e1af8f8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55866e1af830 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55866e1afaf8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55866e1af9b0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55866e1afa28 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55866e1afdc8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55866e1afd08 parent 0x55866dcb1278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55866e1afbb8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55866e1afc30 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55866e1affe8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55866e1aff28 parent 0x55866dcb1278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55866e1afe18 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55866e1afe90 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55866e1b01b0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55866e1b00f8 parent 0x55866dcb1278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55866e1b0038 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55866e1b0438 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55866e1b0378 parent 0x55866dcb1278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55866e1b0228 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55866e1b02a0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55866e1b0658 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55866e1b0598 parent 0x55866dcb1278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55866e1b0488 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55866e1b0500 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55866e1b5ee0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55866e1b5fc8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55866e1aeb88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55866e1b6a38 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55866e1b69f0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55866e1aeb88
| |     `-DeclRefExpr 0x55866e1b69d0 <col:7> 'const Timestamp' lvalue ParmVar 0x55866e1b5fc8 '' 'const Timestamp &'
| `-CompoundStmt 0x55866e1b6a98 <col:7>
|-CXXConstructorDecl 0x55866e1b6148 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55866e1b6258 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55866e1aeb88 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55866e1b6d38 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55866e1b6ce0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55866e1aeb88
| |     `-CXXStaticCastExpr 0x55866e1b6cb0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55866e1b6c80 <col:7> 'Timestamp' lvalue ParmVar 0x55866e1b6258 '' 'Timestamp &&'
| `-CompoundStmt 0x55866e1b6d98 <col:7>
|-CXXDestructorDecl 0x55866e1b6308 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55866debca38 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55866debcb48 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55866debd638 <col:7>
|   |-CXXMemberCallExpr 0x55866debd5d8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55866debd518 <col:7> '<bound member function type>' .operator= 0x55866debcbe8
|   | | `-MemberExpr 0x55866debd428 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55866e1aeb88
|   | |   `-CXXThisExpr 0x55866debd418 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55866debd4e8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55866e1aeb88
|   |   `-DeclRefExpr 0x55866debd4c8 <col:7> 'const Timestamp' lvalue ParmVar 0x55866debcb48 '' 'const Timestamp &'
|   `-ReturnStmt 0x55866debd628 <col:7>
|     `-UnaryOperator 0x55866debd610 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55866debd600 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55866debcee8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55866debcff8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55866e250ea8 <col:7>
    |-CXXMemberCallExpr 0x55866e250e48 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55866e250db0 <col:7> '<bound member function type>' .operator= 0x55866debcd68
    | | `-MemberExpr 0x55866e250c80 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55866e1aeb88
    | |   `-CXXThisExpr 0x55866e250c70 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55866e250d80 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55866e1aeb88
    |   `-CXXStaticCastExpr 0x55866e250d50 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55866e250d20 <col:7> 'Timestamp' lvalue ParmVar 0x55866debcff8 '' 'Timestamp &&'
    `-ReturnStmt 0x55866e250e98 <col:7>
      `-UnaryOperator 0x55866e250e80 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55866e250e70 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55866e259fc0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55866e25a198 prev 0x55866e259fc0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55866e25a228 <col:46, col:52> col:46 public
|-TypedefDecl 0x55866e25a250 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55866dcb1370 'int'
|-TypedefDecl 0x55866e25be20 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55866e25bdd0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55866e25a700 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55866e25a600 'type'
|     `-TemplateSpecializationType 0x55866e25a590 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55866e25a470 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55866e25a450 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55866e25a430 <col:24> 'unsigned long' 16
|       `-RecordType 0x55866e25a570 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55866e25a490 'char_array'
|-TypedefDecl 0x55866e25bed8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55866e25bea0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55866e25be80 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55866e25be20 'type'
|     `-ElaboratedType 0x55866e25bdd0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55866e25a700 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55866e25a600 'type'
|         `-TemplateSpecializationType 0x55866e25a590 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55866e25a470 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55866e25a450 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55866e25a430 <col:24> 'unsigned long' 16
|           `-RecordType 0x55866e25a570 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55866e25a490 'char_array'
|-CXXMethodDecl 0x55866e25c058 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55866e25bf68 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55866e25c148 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55866e25c228 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55866e25c228
|-CXXMethodDecl 0x55866e25c4f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55866e25c400 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55866e25c738 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55866e25c5b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55866e25c628 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55866e25c908 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55866e25c7f8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55866e25c870 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55866e25ca68 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55866e25cb38 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55866e25cd88 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55866e25cbf8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55866e25cc70 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55866e25cfe8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55866e25ce58 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55866e25ced0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55866e25d1a8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55866e25d0b8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55866e25d368 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55866e25d270 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55866e25d420 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55866e25d4d0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55866e25d708 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55866e25d580 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55866e25d5f8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55866e25d9a8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55866e25d8b0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55866e25da70 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55866e25dac0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55866e25db10 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55866e2544b8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55866e2546c8 prev 0x55866e2544b8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55866e259f30 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55866e259ee0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55866e259ec0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55866e259d70 'type'
|     `-SubstTemplateTypeParmType 0x55866e259b90 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55866df793f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866df79398 'T'
|       `-RecordType 0x55866e2552c0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55866e2551d8 'sized_array_memory'
|-FieldDecl 0x55866e25db60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55866e25dbb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55866e25dbe8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55866e254760 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55866dfb1088 'T'
|   `-RecordType 0x55866e2536c0 'TimerSet::heap_element'
|     `-CXXRecord 0x55866e253630 'heap_element'
|-TypedefDecl 0x55866e25dca8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55866e25dc70 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55866e254760 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-RecordType 0x55866e2536c0 'TimerSet::heap_element'
|       `-CXXRecord 0x55866e253630 'heap_element'
|-TypedefDecl 0x55866e25dd38 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55866e25dd00 'const TimerSet::heap_element &'
|   `-QualType 0x55866e254761 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55866e254760 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866e2536c0 'TimerSet::heap_element'
|         `-CXXRecord 0x55866e253630 'heap_element'
|-TypedefDecl 0x55866e25ddc8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55866e25dd90 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55866e254760 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-RecordType 0x55866e2536c0 'TimerSet::heap_element'
|       `-CXXRecord 0x55866e253630 'heap_element'
|-TypedefDecl 0x55866e25de88 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55866e25de50 'const TimerSet::heap_element *'
|   `-QualType 0x55866e254761 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55866e254760 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866e2536c0 'TimerSet::heap_element'
|         `-CXXRecord 0x55866e253630 'heap_element'
|-TypedefDecl 0x55866e25ecf0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55866e25eca0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55866e25ec80 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55866e25ebb8 'type'
|     `-LValueReferenceType 0x55866e25eb80 'const TimerSet::heap_element &'
|       `-QualType 0x55866e25e921 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55866e25e920 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55866df83ac0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55866df83a68 'T'
|           `-RecordType 0x55866e2536c0 'TimerSet::heap_element'
|             `-CXXRecord 0x55866e253630 'heap_element'
|-TypedefDecl 0x55866e25ed58 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55866e25dd00 'const TimerSet::heap_element &'
|   `-QualType 0x55866e254761 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55866e254760 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866e2536c0 'TimerSet::heap_element'
|         `-CXXRecord 0x55866e253630 'heap_element'
|-TypedefDecl 0x55866e25edb0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55866dcb1370 'int'
|-TypedefDecl 0x55866e25ee18 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55866e25dd90 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55866e254760 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-RecordType 0x55866e2536c0 'TimerSet::heap_element'
|       `-CXXRecord 0x55866e253630 'heap_element'
|-TypedefDecl 0x55866e25ee80 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55866e25de50 'const TimerSet::heap_element *'
|   `-QualType 0x55866e254761 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55866e254760 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866e2536c0 'TimerSet::heap_element'
|         `-CXXRecord 0x55866e253630 'heap_element'
|-EnumDecl 0x55866e25eed8 <line:134:5> col:5
| `-EnumConstantDecl 0x55866e25efd0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55866e25efb0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55866dfb2768 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55866dfb2740 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55866dfb2720 <col:40> 'int' 1
|-CXXConstructorDecl 0x55866e25f058 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55866e25f2e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e25f110 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e25f1b0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55866e25f5a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55866e25f490 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55866e25f868 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55866e25f750 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55866e25fbb0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55866e25fa90 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55866e25fec0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55866e25fda0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55866e2601b0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e25fff8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e260070 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55866e260308 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55866e2603e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e260440 <col:30> Inherited
|-CXXMethodDecl 0x55866e260488 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55866e260538 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e260590 <col:30> Inherited
|-CXXMethodDecl 0x55866e260658 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55866e260708 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e260760 <col:30> Inherited
|-CXXMethodDecl 0x55866e2607a8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55866e260858 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2608b0 <col:30> Inherited
|-CXXMethodDecl 0x55866e2608f8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55866e2609a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e260a00 <col:30> Inherited
|-CXXMethodDecl 0x55866e260a48 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55866e260af8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e260b50 <col:30> Inherited
|-CXXMethodDecl 0x55866e260b78 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55866e260c28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55866e260cd8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55866e260e98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e260d88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e260e00 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55866e260fe8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55866e260f58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e261198 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55866e2610a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55866e261250 <col:20>
| `-OptimizeNoneAttr 0x55866e2612a8 <col:30>
|-CXXMethodDecl 0x55866e2613c8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55866e2612d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55866e261480 <col:20>
| `-OptimizeNoneAttr 0x55866e2614d8 <col:30>
|-CXXMethodDecl 0x55866e261590 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55866e261500 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e2616d8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55866e261648 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e261808 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55866e261938 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55866e261a70 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55866e261b40 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55866e261c80 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55866e261bf0 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e261dc8 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55866e261d38 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e261f10 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55866e261e80 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55866e261fc8 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55866e2620c8 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55866e262038 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55866e262180 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55866e262238 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55866e262338 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55866e2624e8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55866e2623f8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55866e262cd8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55866e2625a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55866e262c38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55866e262b38 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55866e262db8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55866e262f08 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55866e262e78 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55866e262fc0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55866e263208 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e263080 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55866e2630f8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55866e2633c8 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55866e2632d8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55866e263618 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55866e263490 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55866e263508 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55866e2636d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55866e263938 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55866e263840 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55866e263a08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55866e263a08

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55866e264f30 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55866e265108 prev 0x55866e264f30 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55866e265198 <col:46, col:52> col:46 public
|-TypedefDecl 0x55866e2651c0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55866dcb1370 'int'
|-TypedefDecl 0x55866e266d90 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55866e266d40 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55866e265670 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55866e265570 'type'
|     `-TemplateSpecializationType 0x55866e265500 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55866e2653e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55866e2653c0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55866e2653a0 <col:24> 'unsigned long' 8
|       `-RecordType 0x55866e2654e0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55866e265400 'char_array'
|-TypedefDecl 0x55866e266e48 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55866e266e10 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55866e266df0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55866e266d90 'type'
|     `-ElaboratedType 0x55866e266d40 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55866e265670 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55866e265570 'type'
|         `-TemplateSpecializationType 0x55866e265500 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55866e2653e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55866e2653c0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55866e2653a0 <col:24> 'unsigned long' 8
|           `-RecordType 0x55866e2654e0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55866e265400 'char_array'
|-CXXMethodDecl 0x55866e266fc8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55866e266ed8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55866e2670b8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55866e267198 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55866e267198
|-CXXMethodDecl 0x55866e267468 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55866e267370 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55866e2676a8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55866e267520 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55866e267598 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55866e267878 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55866e267768 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55866e2677e0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55866e2679d8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55866e267aa8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55866e267cf8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55866e267b68 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55866e267be0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55866e267f58 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55866e267dc8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55866e267e40 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55866e268118 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55866e268028 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55866e2682d8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55866e2681e0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55866e268390 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55866e268440 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55866e268678 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55866e2684f0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55866e268568 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55866e268918 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55866e268820 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55866e2689e0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55866e268a30 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55866e268a80 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55866e263b50 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55866e263d58 prev 0x55866e263b50 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55866e264ea0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55866e264e50 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55866e264e30 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55866e264ce0 'type'
|     `-SubstTemplateTypeParmType 0x55866e264b00 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55866df793f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866df79398 'T'
|       `-RecordType 0x55866e264650 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55866e264568 'sized_array_memory'
|-FieldDecl 0x55866e268ad0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55866e268b20 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55866e268b58 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55866e263df0 'Timer *' sugar
|   |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55866dfb1088 'T'
|   `-PointerType 0x55866e215c70 'Timer *'
|     `-RecordType 0x55866e214dc0 'Timer'
|       `-CXXRecord 0x55866e199398 'Timer'
|-TypedefDecl 0x55866e268c18 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55866e268be0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55866e263df0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-PointerType 0x55866e215c70 'Timer *'
|       `-RecordType 0x55866e214dc0 'Timer'
|         `-CXXRecord 0x55866e199398 'Timer'
|-TypedefDecl 0x55866e268cd8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55866e268ca0 'Timer *const &'
|   `-QualType 0x55866e263df1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55866e263df0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-PointerType 0x55866e215c70 'Timer *'
|         `-RecordType 0x55866e214dc0 'Timer'
|           `-CXXRecord 0x55866e199398 'Timer'
|-TypedefDecl 0x55866e268d98 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55866e268d60 'Timer **'
|   `-SubstTemplateTypeParmType 0x55866e263df0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-PointerType 0x55866e215c70 'Timer *'
|       `-RecordType 0x55866e214dc0 'Timer'
|         `-CXXRecord 0x55866e199398 'Timer'
|-TypedefDecl 0x55866e268e58 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55866e268e20 'Timer *const *'
|   `-QualType 0x55866e263df1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55866e263df0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-PointerType 0x55866e215c70 'Timer *'
|         `-RecordType 0x55866e214dc0 'Timer'
|           `-CXXRecord 0x55866e199398 'Timer'
|-TypedefDecl 0x55866e26da90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55866e2699e0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55866e2699c0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55866e269950 'type'
|     `-SubstTemplateTypeParmType 0x55866e269710 'Timer *' sugar
|       |-TemplateTypeParmType 0x55866df841f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866df841a0 'T'
|       `-PointerType 0x55866e215c70 'Timer *'
|         `-RecordType 0x55866e214dc0 'Timer'
|           `-CXXRecord 0x55866e199398 'Timer'
|-TypedefDecl 0x55866e26daf8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55866e268ca0 'Timer *const &'
|   `-QualType 0x55866e263df1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55866e263df0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-PointerType 0x55866e215c70 'Timer *'
|         `-RecordType 0x55866e214dc0 'Timer'
|           `-CXXRecord 0x55866e199398 'Timer'
|-TypedefDecl 0x55866e26db50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55866dcb1370 'int'
|-TypedefDecl 0x55866e26dbb8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55866e268d60 'Timer **'
|   `-SubstTemplateTypeParmType 0x55866e263df0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-PointerType 0x55866e215c70 'Timer *'
|       `-RecordType 0x55866e214dc0 'Timer'
|         `-CXXRecord 0x55866e199398 'Timer'
|-TypedefDecl 0x55866e26dc20 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55866e268e20 'Timer *const *'
|   `-QualType 0x55866e263df1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55866e263df0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-PointerType 0x55866e215c70 'Timer *'
|         `-RecordType 0x55866e214dc0 'Timer'
|           `-CXXRecord 0x55866e199398 'Timer'
|-EnumDecl 0x55866e26dc78 <line:134:5> col:5
| `-EnumConstantDecl 0x55866e26dd70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55866e26dd50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55866dfb2768 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55866dfb2740 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55866dfb2720 <col:40> 'int' 1
|-CXXConstructorDecl 0x55866e26ddf8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55866e26e088 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e26deb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e26df50 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55866e26e348 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55866e26e230 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55866e26e608 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55866e26e4f0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55866e26e950 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55866e26e830 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55866e26ec60 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55866e26eb40 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55866e26ef50 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e26ed98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e26ee10 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55866e26f0a8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55866e26f188 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e26f1e0 <col:30> Inherited
|-CXXMethodDecl 0x55866e26f228 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55866e26f2d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e26f330 <col:30> Inherited
|-CXXMethodDecl 0x55866e26f3f8 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55866e26f4a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e26f500 <col:30> Inherited
|-CXXMethodDecl 0x55866e26f548 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55866e26f5f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e26f650 <col:30> Inherited
|-CXXMethodDecl 0x55866e26f698 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55866e26f748 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e26f7a0 <col:30> Inherited
|-CXXMethodDecl 0x55866e26f7e8 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55866e26f898 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e26f8f0 <col:30> Inherited
|-CXXMethodDecl 0x55866e26f918 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55866e26f9c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55866e26fa78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55866e26fc38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e26fb28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e26fba0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55866e26fd88 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55866e26fcf8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e26ff38 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55866e26fe40 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55866e26fff0 <col:20>
| `-OptimizeNoneAttr 0x55866e270048 <col:30>
|-CXXMethodDecl 0x55866e270168 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55866e270070 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55866e270220 <col:20>
| `-OptimizeNoneAttr 0x55866e270278 <col:30>
|-CXXMethodDecl 0x55866e270330 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55866e2702a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e270478 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55866e2703e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e2705a8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55866e2706d8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55866e2707a8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55866e270878 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55866e2709b8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55866e270928 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e270b00 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55866e270a70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e270c48 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55866e270bb8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55866e270d00 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55866e270e00 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55866e270d70 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55866e270eb8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55866e270f78 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55866e271078 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55866e2711f8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55866e271138 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55866e2719b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55866e2712b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55866e271918 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55866e271818 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55866e271a98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55866e271be8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55866e271b58 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55866e271ca0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55866e271ee8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e271d60 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55866e271dd8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55866e2720a8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55866e271fb8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55866e2722f8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55866e272170 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55866e2721e8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55866e2723b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55866e272618 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55866e272520 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55866e2726e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55866e2726e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e230ce0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55866e230df8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55866e230e88 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55866e230f10 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55866e231000 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55866e231100 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55866e2311c0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55866e231280 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55866e2313a8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55866e2313a8
| `-ParmVarDecl 0x55866e2314b8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55866e273498 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55866e273498
  `-ParmVarDecl 0x55866e2735a8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e2527b0 prev 0x55866e24e938 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55866e2528a8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55866e252938 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55866e2529c0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55866e252ab8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55866e273910 <col:43, col:67>
|   `-ReturnStmt 0x55866e273900 <col:45, col:52>
|     `-CXXConstructExpr 0x55866e2738d0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55866e2738a0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55866e2542a0
|         `-CXXThisExpr 0x55866e273890 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55866e252b78 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55866e252d80 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55866e252c28 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55866e252ca0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55866e252e78 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55866e252f40 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55866e273990 <col:39, col:67>
|   `-ReturnStmt 0x55866e273980 <col:41, col:48>
|     `-ImplicitCastExpr 0x55866e273968 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55866e273938 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55866e254388
|         `-CXXThisExpr 0x55866e273928 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55866e253008 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55866e273a10 <col:35, col:59>
|   `-ReturnStmt 0x55866e273a00 <col:37, col:44>
|     `-ImplicitCastExpr 0x55866e2739e8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55866e2739b8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55866e2543f0
|         `-CXXThisExpr 0x55866e2739a8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55866e253150 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55866e2530c0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55866e253298 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55866e253208 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55866e253498 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55866e253350 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55866e2533c8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55866e253568 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55866e253608 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55866e253630 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55866e253748 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55866e2537e8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55866e253848 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55866e253978 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55866e2538a8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55866e2537e8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55866e273ae8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55866e273a90 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55866e273a60 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55866e19a9d8
|   |       `-ImplicitCastExpr 0x55866e273ab0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55866e273a48 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55866e273a28 <col:17> 'Timer *' lvalue ParmVar 0x55866e2538a8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55866e253848 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55866e273b80 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55866e273b40 <col:41> 'Timer *' lvalue ParmVar 0x55866e2538a8 't_' 'Timer *'
|   `-CompoundStmt 0x55866e273bd0 <col:45, line:44:2>
|-CXXRecordDecl 0x55866e253a40 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55866e253b58 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55866e253da8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55866e253c28 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55866e253ca0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55866e273d00 <col:71, line:49:2>
|     `-ReturnStmt 0x55866e273cf0 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55866e273cb8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55866e273ca0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55866e273c80 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55866e1d2fd8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55866e273c00 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55866e2537e8
|         | `-DeclRefExpr 0x55866e273be0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55866e253c28 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55866e273c50 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55866e2537e8
|           `-DeclRefExpr 0x55866e273c30 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55866e253ca0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55866e253e70 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55866e253f88 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55866e2541a8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55866e254028 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55866e2540a0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55866e273f08 <col:63, line:54:2>
|     `-BinaryOperator 0x55866e273ee8 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55866e273d98 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55866e24ddd8
|       | `-ImplicitCastExpr 0x55866e273d80 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55866e273d50 <col:6, col:9> 'Timer *' lvalue ->t 0x55866e253848
|       |     `-ImplicitCastExpr 0x55866e273d38 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55866e273d18 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55866e2540a0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55866e273ed0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55866e273eb0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55866e273e58 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55866e273e38 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55866e273e08 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55866e273dc8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55866e2540a0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55866e273e20 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55866e273de8 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55866e254028 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55866e273e98 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55866e273e78 <col:39> 'int' 1
|-FieldDecl 0x55866e2542a0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55866e254310 <col:44, col:53> aligned
|   `-ConstantExpr 0x55866e2542f0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55866e254270 <col:52> 'int' 8
|-FieldDecl 0x55866e254388 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55866e2543f0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55866e254458 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55866e263af0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55866e2727d0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55866e272830 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55866e272890 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55866e2728f0 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e2729e0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55866e272950 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55866e272aa8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55866e274360 <col:29, line:81:5>
|   `-IfStmt 0x55866e274338 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55866e273ff0 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55866e273f90 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55866e273f60 <col:6, col:18> '<bound member function type>' .size 0x55866e260b78
|     |     `-ImplicitCastExpr 0x55866e273fd8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55866e273f30 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55866e263af0
|     |         `-CXXThisExpr 0x55866e273f20 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55866e2741e0 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55866e2741c8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55866e2741a8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55866debca38 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55866e274018 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55866e2542a0
|     | | `-CXXThisExpr 0x55866e274008 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55866e274190 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55866e274160 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55866e2537e8
|     |     `-CXXMemberCallExpr 0x55866e274138 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55866e274108 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55866e261c80
|     |       | `-MemberExpr 0x55866e274058 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55866e263af0
|     |       |   `-CXXThisExpr 0x55866e274048 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55866e2740e8 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55866e274320 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55866e2742e8 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55866e2742d0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55866e2742b0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55866debcee8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55866e274228 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55866e2542a0
|         | `-CXXThisExpr 0x55866e274218 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55866e274298 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55866e274268 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55866e272be8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55866e272b58 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55866e272cb0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55866e272d70 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55866e272e30 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55866e272f20 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55866e272f88 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55866e272f88
| `-ParmVarDecl 0x55866e273098 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55866e273138 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55866e273138
| `-ParmVarDecl 0x55866e273248 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55866e2732e8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55866e2732e8
| `-ParmVarDecl 0x55866e2733f8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55866e273618 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55866e273618
| `-ParmVarDecl 0x55866e273728 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55866e2737b0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55866e2737b0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55866e2aa1d8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55866e2aa3e8 prev 0x55866e2aa1d8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55866e2ab4c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55866e2ab470 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55866e2ab450 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55866e2ab300 'type'
|     `-SubstTemplateTypeParmType 0x55866e264b00 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55866df793f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866df79398 'T'
|       `-RecordType 0x55866e264650 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55866e264568 'sized_array_memory'
|-FieldDecl 0x55866e2ab5c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55866e2ab610 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55866e2ab648 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55866e2aa480 'pollfd' sugar
|   |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55866dfb1088 'T'
|   `-RecordType 0x55866e2a8290 'pollfd'
|     `-CXXRecord 0x55866e2a8200 'pollfd'
|-TypedefDecl 0x55866e2ab708 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55866e2ab6d0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55866e2aa480 'pollfd' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-RecordType 0x55866e2a8290 'pollfd'
|       `-CXXRecord 0x55866e2a8200 'pollfd'
|-TypedefDecl 0x55866e2ab7c8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55866e2ab790 'const pollfd &'
|   `-QualType 0x55866e2aa481 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55866e2aa480 'pollfd' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866e2a8290 'pollfd'
|         `-CXXRecord 0x55866e2a8200 'pollfd'
|-TypedefDecl 0x55866e2ab858 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55866e2ab820 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55866e2aa480 'pollfd' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-RecordType 0x55866e2a8290 'pollfd'
|       `-CXXRecord 0x55866e2a8200 'pollfd'
|-TypedefDecl 0x55866e2ab918 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55866e2ab8e0 'const pollfd *'
|   `-QualType 0x55866e2aa481 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55866e2aa480 'pollfd' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866e2a8290 'pollfd'
|         `-CXXRecord 0x55866e2a8200 'pollfd'
|-TypedefDecl 0x55866e2ac4f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55866e2ac4a0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55866e2ac480 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55866e2ac410 'type'
|     `-SubstTemplateTypeParmType 0x55866e2ac1d0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55866df841f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866df841a0 'T'
|       `-RecordType 0x55866e2a8290 'pollfd'
|         `-CXXRecord 0x55866e2a8200 'pollfd'
|-TypedefDecl 0x55866e2ac558 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55866e2ab790 'const pollfd &'
|   `-QualType 0x55866e2aa481 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55866e2aa480 'pollfd' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866e2a8290 'pollfd'
|         `-CXXRecord 0x55866e2a8200 'pollfd'
|-TypedefDecl 0x55866e2ac5b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55866dcb1370 'int'
|-TypedefDecl 0x55866e2ac618 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55866e2ab820 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55866e2aa480 'pollfd' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-RecordType 0x55866e2a8290 'pollfd'
|       `-CXXRecord 0x55866e2a8200 'pollfd'
|-TypedefDecl 0x55866e2ac680 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55866e2ab8e0 'const pollfd *'
|   `-QualType 0x55866e2aa481 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55866e2aa480 'pollfd' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866e2a8290 'pollfd'
|         `-CXXRecord 0x55866e2a8200 'pollfd'
|-EnumDecl 0x55866e2ac6d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55866e2ac7d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55866e2ac7b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55866dfb2768 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55866dfb2740 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55866dfb2720 <col:40> 'int' 1
|-CXXConstructorDecl 0x55866e2ac858 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55866e2acae8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e2ac910 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e2ac9b0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55866e2acda8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55866e2acc90 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55866e2ad068 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55866e2acf50 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55866e2ad3b0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55866e2ad290 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55866e2ad6c0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55866e2ad5a0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55866e2ad9b0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e2ad7f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e2ad870 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55866e2adb08 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55866e2adbe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2adc40 <col:30> Inherited
|-CXXMethodDecl 0x55866e2adc88 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55866e2add38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2add90 <col:30> Inherited
|-CXXMethodDecl 0x55866e2ade58 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55866e2adf08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2adf60 <col:30> Inherited
|-CXXMethodDecl 0x55866e2adfa8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55866e2ae058 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2ae0b0 <col:30> Inherited
|-CXXMethodDecl 0x55866e2ae0f8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55866e2ae1a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2ae200 <col:30> Inherited
|-CXXMethodDecl 0x55866e2ae248 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55866e2ae2f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2ae350 <col:30> Inherited
|-CXXMethodDecl 0x55866e2ae378 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55866e2ae428 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55866e2ae4d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55866e2ae698 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e2ae588 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e2ae600 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55866e2ae7e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55866e2ae758 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e2ae998 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55866e2ae8a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55866e2aea50 <col:20>
| `-OptimizeNoneAttr 0x55866e2aeaa8 <col:30>
|-CXXMethodDecl 0x55866e2aebc8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55866e2aead0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55866e2aec80 <col:20>
| `-OptimizeNoneAttr 0x55866e2aecd8 <col:30>
|-CXXMethodDecl 0x55866e2aed90 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55866e2aed00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e2aeed8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55866e2aee48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e2af008 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55866e2af138 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55866e2af208 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55866e2af2d8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55866e2af418 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55866e2af388 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e2af560 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55866e2af4d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e2af720 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55866e2af618 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55866e2af7d8 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55866e2af8d8 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55866e2af848 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55866e2af990 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55866e2afa48 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55866e2afb48 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55866e2afcf8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55866e2afc08 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55866e2b04b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55866e2afdb0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55866e2b0418 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55866e2b0318 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55866e2b0598 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55866e2b06e8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55866e2b0658 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55866e2b07a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55866e2b09e8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e2b0860 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55866e2b08d8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55866e2b0ba8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55866e2b0ab8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55866e2b0df8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55866e2b0c70 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55866e2b0ce8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55866e2b0eb8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55866e2b1118 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55866e2b1020 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55866e2b11e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55866e2b11e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55866e2b27d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55866e2b29a8 prev 0x55866e2b27d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55866e2b2a38 <col:46, col:52> col:46 public
|-TypedefDecl 0x55866e2b2a60 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55866dcb1370 'int'
|-TypedefDecl 0x55866e2b4630 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55866e2b45e0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55866e2b2f10 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55866e2b2e10 'type'
|     `-TemplateSpecializationType 0x55866e2b2da0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55866e2b2c80 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55866e2b2c60 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55866e2b2c40 <col:24> 'unsigned long' 24
|       `-RecordType 0x55866e2b2d80 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55866e2b2ca0 'char_array'
|-TypedefDecl 0x55866e2b46e8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55866e2b46b0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55866e2b4690 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55866e2b4630 'type'
|     `-ElaboratedType 0x55866e2b45e0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55866e2b2f10 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55866e2b2e10 'type'
|         `-TemplateSpecializationType 0x55866e2b2da0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55866e2b2c80 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55866e2b2c60 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55866e2b2c40 <col:24> 'unsigned long' 24
|           `-RecordType 0x55866e2b2d80 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55866e2b2ca0 'char_array'
|-CXXMethodDecl 0x55866e2b4868 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55866e2b4778 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55866e2b4958 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55866e2b4a38 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55866e2b4a38
|-CXXMethodDecl 0x55866e2b4d08 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55866e2b4c10 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55866e2b4f48 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55866e2b4dc0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55866e2b4e38 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55866e2b5118 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55866e2b5008 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55866e2b5080 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55866e2b5278 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55866e2b5348 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55866e2b5598 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55866e2b5408 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55866e2b5480 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55866e2b57f8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55866e2b5668 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55866e2b56e0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55866e2b59b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55866e2b58c8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55866e2b5b78 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55866e2b5a80 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55866e2b5c30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55866e2b5ce0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55866e2b5f18 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55866e2b5d90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55866e2b5e08 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55866e2b61b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55866e2b60c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55866e2b6280 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55866e2b62d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55866e2b6320 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55866e2b1330 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55866e2b1538 prev 0x55866e2b1330 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55866e2b2740 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55866e2b26f0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55866e2b26d0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55866e2b2580 'type'
|     `-SubstTemplateTypeParmType 0x55866e2b23a0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55866df793f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866df79398 'T'
|       `-RecordType 0x55866e2b1ef0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55866e2b1e10 'sized_array_memory'
|-FieldDecl 0x55866e2b6370 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55866e2b63c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55866e2b63f8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55866e2b15d0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55866dfb1088 'T'
|   `-RecordType 0x55866e2a9d40 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55866e2a9cb0 'SelectorInfo'
|-TypedefDecl 0x55866e2b64b8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55866e2b6480 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55866e2b15d0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-RecordType 0x55866e2a9d40 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55866e2a9cb0 'SelectorInfo'
|-TypedefDecl 0x55866e2b6578 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55866e2b6540 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55866e2b15d1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55866e2b15d0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866e2a9d40 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55866e2a9cb0 'SelectorInfo'
|-TypedefDecl 0x55866e2b6608 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55866e2b65d0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55866e2b15d0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-RecordType 0x55866e2a9d40 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55866e2a9cb0 'SelectorInfo'
|-TypedefDecl 0x55866e2b66c8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55866e2b6690 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55866e2b15d1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55866e2b15d0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866e2a9d40 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55866e2a9cb0 'SelectorInfo'
|-TypedefDecl 0x55866e2b7320 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55866e2b72d0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55866e2b72b0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55866e2b71e8 'type'
|     `-LValueReferenceType 0x55866e2b71b0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55866e2b6f51 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55866e2b6f50 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55866df83ac0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55866df83a68 'T'
|           `-RecordType 0x55866e2a9d40 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55866e2a9cb0 'SelectorInfo'
|-TypedefDecl 0x55866e2b7388 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55866e2b6540 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55866e2b15d1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55866e2b15d0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866e2a9d40 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55866e2a9cb0 'SelectorInfo'
|-TypedefDecl 0x55866e2b73e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55866dcb1370 'int'
|-TypedefDecl 0x55866e2b7448 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55866e2b65d0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55866e2b15d0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-RecordType 0x55866e2a9d40 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55866e2a9cb0 'SelectorInfo'
|-TypedefDecl 0x55866e2b74b0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55866e2b6690 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55866e2b15d1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55866e2b15d0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866e2a9d40 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55866e2a9cb0 'SelectorInfo'
|-EnumDecl 0x55866e2b7508 <line:134:5> col:5
| `-EnumConstantDecl 0x55866e2b7600 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55866e2b75e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55866dfb2768 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55866dfb2740 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55866dfb2720 <col:40> 'int' 1
|-CXXConstructorDecl 0x55866e2b7730 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55866e2b79b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e2b77e8 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e2b7880 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55866e2b7c78 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55866e2b7b60 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55866e2b7f38 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55866e2b7e20 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55866e2b8280 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55866e2b8160 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55866e2b8590 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55866e2b8470 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55866e2b8880 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e2b86c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e2b8740 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55866e2b89d8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55866e2b8ab8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2b8b10 <col:30> Inherited
|-CXXMethodDecl 0x55866e2b8b58 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55866e2b8c08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2b8c60 <col:30> Inherited
|-CXXMethodDecl 0x55866e2b8d28 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55866e2b8dd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2b8e30 <col:30> Inherited
|-CXXMethodDecl 0x55866e2b8e78 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55866e2b8f28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2b8f80 <col:30> Inherited
|-CXXMethodDecl 0x55866e2b8fc8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55866e2b9078 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2b90d0 <col:30> Inherited
|-CXXMethodDecl 0x55866e2b9118 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55866e2b91c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e2b9220 <col:30> Inherited
|-CXXMethodDecl 0x55866e2b9248 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55866e2b92f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55866e2b93a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55866e2b9568 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e2b9458 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e2b94d0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55866e2b96b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55866e2b9628 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e2b9868 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55866e2b9770 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55866e2b9920 <col:20>
| `-OptimizeNoneAttr 0x55866e2b9978 <col:30>
|-CXXMethodDecl 0x55866e2b9a98 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55866e2b99a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55866e2b9b50 <col:20>
| `-OptimizeNoneAttr 0x55866e2b9ba8 <col:30>
|-CXXMethodDecl 0x55866e2b9c60 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55866e2b9bd0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e2b9da8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55866e2b9d18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e2b9ed8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55866e2ba008 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55866e2ba0d8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55866e2ba1a8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55866e2ba2e8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55866e2ba258 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e2ba430 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55866e2ba3a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e2ba578 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55866e2ba4e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55866e2ba630 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55866e2ba730 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55866e2ba6a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55866e2ba7e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55866e2ba8a8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55866e2ba9a8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55866e2bab58 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55866e2baa68 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55866e2bb318 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55866e2bac10 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55866e2bb278 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55866e2bb178 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55866e2bb3f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55866e2bb548 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55866e2bb4b8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55866e2bb600 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55866e2bb848 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e2bb6c0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55866e2bb738 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55866e2bba08 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55866e2bb918 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55866e2bbc58 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55866e2bbad0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55866e2bbb48 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55866e2bbd18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55866e2bbf78 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55866e2bbe80 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55866e2bc048 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55866e2bc048

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e2a8e90 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55866e2a8fa8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55866e2a9038 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55866e2a90c0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55866e2a91b0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55866e2a91b0
|-CXXMethodDecl 0x55866e2a92b0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55866e2a9550 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55866e2a9368 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55866e2a93e0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55866e2a9460 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55866e2a97c0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55866e2a9620 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55866e2a9698 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55866e2a9718 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55866e2a9918 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55866e2a9888 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55866e2a99e0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55866e2bd6f8 <col:34, line:50:5>
|   |-BinaryOperator 0x55866e2bd0c8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55866e2bd088 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55866e2aa168
|   | | `-CXXThisExpr 0x55866e2bd078 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55866e2bd0b8 <col:23> 'bool' true
|   `-CallExpr 0x55866e2bd6d0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55866e2bd6b8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55866e2bd638 <col:2> 'void (long)' lvalue Function 0x55866e2bd538 'ignore_result' 'void (long)' (FunctionTemplate 0x55866df74398 'ignore_result')
|     `-CallExpr 0x55866e2bd2e0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55866e2bd2c8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55866e2bd248 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55866e2773a8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55866e2bd318 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55866e2bd1f0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55866e2bd1d8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55866e2bd188 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55866e2aa108
|       |   |   `-CXXThisExpr 0x55866e2bd178 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55866e2bd1b8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55866e2bd348 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55866e2bd330 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55866e2bd210 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55866e2bd360 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55866e2bd228 <col:41> 'int' 1
|-CXXMethodDecl 0x55866e2a9b20 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55866e2a9a90 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55866e2a9be8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55866e2a9c88 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55866e2a9cb0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55866e2a9dc8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55866e2a9e68 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55866e2a9ec8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55866e2a9f30 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55866e2a9fe0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55866e2a9e68 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55866e2bd758 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55866e2bd718 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55866e2a9ec8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55866e2bd7d8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55866e2bd798 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55866e2a9f30 'pollfd' 'int'
|   | `-UnaryOperator 0x55866e2bd838 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55866e2bd818 <col:35> 'int' 1
|   `-CompoundStmt 0x55866e2bd8b0 <line:64:2, line:65:2>
|-FieldDecl 0x55866e2aa108 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55866e2aa168 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55866e2b12d0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55866e2bc130 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55866e2bc368 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55866e2bc198 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55866e2bc210 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55866e2bc288 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55866e2bc550 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55866e2bc438 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55866e2bc4b8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55866e2bc798 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55866e2bc618 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55866e2bc698 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55866e2bc9a8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55866e2bc858 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55866e2bc8d0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55866e2bcaf8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55866e2bca68 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55866e2bcbc0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55866e2bcc80 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55866e2bcd48 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55866e2bcd48
| `-ParmVarDecl 0x55866e2bce58 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55866e2bcef8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55866e2bcef8
  `-ParmVarDecl 0x55866e2bd008 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e22fc48 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55866e22fd68 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55866e22fdf8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55866e22fe80 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55866e22ff70 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55866e230070 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55866e230130 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55866e2301f0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55866e2302d8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55866e2303f8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55866e2303f8
| `-ParmVarDecl 0x55866e230508 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55866e2c24c8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55866e2c24c8
  `-ParmVarDecl 0x55866e2c25d8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e197108 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55866e197228 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55866e1972c8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55866e197328 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55866e2c1ac8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55866e2c1ac8
| `-ParmVarDecl 0x55866e2c1bd8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55866e2c1c78 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55866e2c1c78
| `-ParmVarDecl 0x55866e2c1d88 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55866e2c1df8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55866e2c1df8
|-CXXMethodDecl 0x55866e2c2678 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55866e2c2678
| `-ParmVarDecl 0x55866e2c2788 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55866e2c27f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55866e2c27f8
| `-ParmVarDecl 0x55866e2c2908 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55866e2ca038 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55866e2ca110 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e231b40 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55866e231c58 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55866e231ce8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55866e231d70 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55866e231e30 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55866dcb1370 'int'
|-CXXMethodDecl 0x55866e231ef8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55866e231f98 <col:45> always_inline
|-CXXMethodDecl 0x55866e2320c8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55866e232000 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55866e232170 <col:49> always_inline
|-CXXConstructorDecl 0x55866e232268 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55866e232268
| `-ParmVarDecl 0x55866e232378 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55866e232418 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55866e232418
| `-ParmVarDecl 0x55866e232528 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55866e2c1ee0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55866e2c1ee0
|-CXXMethodDecl 0x55866e2c29a8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55866e2c29a8
| `-ParmVarDecl 0x55866e2c2ab8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55866e2c2b28 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55866e2c2b28
  `-ParmVarDecl 0x55866e2c2c38 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e2bdd20 prev 0x55866e2a8e00 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55866e2bde18 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55866e2bdea8 <col:22, col:28> col:22 public
|-EnumDecl 0x55866e2bded0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55866e2bdfe8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55866e2bdfc8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55866e2bdfb0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55866e2bdf90 <col:32> 'int' 1
| `-EnumConstantDecl 0x55866e2be090 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55866e2be070 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55866e2be058 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55866e2be038 <col:53> 'int' 1000
|-CXXMethodDecl 0x55866e2be130 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55866e2be1f0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55866e2be2d8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55866e2c2cf8 <col:34, col:52>
|   `-ReturnStmt 0x55866e2c2ce8 <col:36, col:43>
|     `-MemberExpr 0x55866e2c2cb8 <col:43> 'TimerSet' lvalue ->_timers 0x55866e2bffc8
|       `-CXXThisExpr 0x55866e2c2ca8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55866e2be3c8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55866e2c2d60 <col:46, col:64>
|   `-ReturnStmt 0x55866e2c2d50 <col:48, col:55>
|     `-MemberExpr 0x55866e2c2d20 <col:55> 'const TimerSet' lvalue ->_timers 0x55866e2bffc8
|       `-CXXThisExpr 0x55866e2c2d10 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55866e2be4b8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55866e2c2dc8 <col:36, col:55>
|   `-ReturnStmt 0x55866e2c2db8 <col:38, col:45>
|     `-MemberExpr 0x55866e2c2d88 <col:45> 'SelectSet' lvalue ->_selects 0x55866e2c0028
|       `-CXXThisExpr 0x55866e2c2d78 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55866e2be5a8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55866e2c2e30 <col:48, col:67>
|   `-ReturnStmt 0x55866e2c2e20 <col:50, col:57>
|     `-MemberExpr 0x55866e2c2df0 <col:57> 'const SelectSet' lvalue ->_selects 0x55866e2c0028
|       `-CXXThisExpr 0x55866e2c2de0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55866e2be668 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55866e2be758 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55866e2be8c8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55866e2be808 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55866e2be990 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55866e2bedd8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55866e2bea40 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55866e2becc0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55866e2beea8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55866e2bef68 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55866e2bf028 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55866e2bf168 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55866e2bf0d8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55866e2bf230 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55866e2bf2f0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55866e2bf3b0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55866e2bf470 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55866e2bf5b0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55866e2bf520 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55866e2bf678 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55866e2bf760 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55866e2bf800 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55866e2bf8c0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55866e2bf910 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55866e2bf960 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55866e2bf9b0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55866e2bfa00 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55866e2bfa50 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55866e2bfaa0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55866e2bfaf0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55866e2bfb40 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55866e2bfb90 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55866e2bfbe0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55866e2bfcd8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55866e2bfc48 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55866e2bfe28 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55866e2bfd98 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55866e2bfed0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55866e2bff08 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55866e2bff68 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55866e2bffc8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55866e2c0028 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55866e2c00a8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55866e2c0118 <col:40, col:50> aligned
|   `-ConstantExpr 0x55866e2c00f8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55866e2c0078 <col:48> 'int' 64
|-FieldDecl 0x55866e2c0188 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55866e2c01e8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55866e2c02e0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55866e2c03f0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55866e2c0450 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55866e2c04d0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55866e2c0540 <col:36, col:46> aligned
|   `-ConstantExpr 0x55866e2c0520 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55866e2c04a0 <col:44> 'int' 64
|-FieldDecl 0x55866e2c05b8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55866e2c0618 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55866e2c0668 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55866e2c06a8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55866e2c0710 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55866e2c0760 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55866e2c0908 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55866e2c0798 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55866e2c0818 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55866e2c0a08 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55866e2c0a08
|-CXXMethodDecl 0x55866e2c0b10 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55866e2c0bd8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55866e2c2f28 <col:34, line:217:5>
|   `-ReturnStmt 0x55866e2c2f18 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55866e2c2f00 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55866e2c2ed0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55866e2346a0
|         `-ImplicitCastExpr 0x55866e2c2eb8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55866e2c2e88 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55866e234638
|             `-MemberExpr 0x55866e2c2e58 <col:16> 'const TaskLink' lvalue ->_task_link 0x55866e2bff08
|               `-CXXThisExpr 0x55866e2c2e48 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55866e2c0c98 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55866e2c0d58 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55866e2c3650 <col:39, line:226:5>
|   |-DeclStmt 0x55866e2c3178 <line:223:9, col:68>
|   | `-VarDecl 0x55866e2c2f50 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55866e2c3130 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55866e2c3100 <col:24, col:38> '<bound member function type>' .compare_swap 0x55866dfda9e0
|   |     | `-MemberExpr 0x55866e2c2fc8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55866e2c0188
|   |     |   `-CXXThisExpr 0x55866e2c2fb8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55866e2c30b8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55866e2c30a0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55866e2c3078 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55866e2c3058 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55866e2c3160 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55866e2c30e0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55866e2c31c0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55866e2c3190 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55866e2c2f50 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55866e2c3630 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55866e2c3600 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55866e2c32d8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55866e2c32a8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55866e2c3290 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55866e2c31e8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55866e2c2f50 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55866e2c3268 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55866e2c3250 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55866e2c3228 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55866e2c3208 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55866e2c3338 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55866e2c3318 <col:60> 'int' 0
|       `-CallExpr 0x55866e2c3560 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55866e2c3548 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55866e2c3528 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55866e2c35a0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55866e2c3428 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55866e2c35b8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55866e2c3458 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55866e2c35d0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55866e2c3498 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55866e2c35e8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55866e2c3510 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55866e2c34f8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55866e2c34b8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55866e2c0ea0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55866e2c0e10 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55866e2c0f68 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55866e2c1028 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55866e2c10e8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55866e2c11a8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55866e2c1268 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55866e2c1360 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55866e2c13c0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55866e2c1450 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55866e2c1818 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55866e2c1818
| `-ParmVarDecl 0x55866e2c1928 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55866e2c1fe8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55866e2c1fe8
  `-ParmVarDecl 0x55866e2c20f8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e194478 prev 0x55866e214c80 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55866e1945b0 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55866e194640 <col:33, col:39> col:33 public
|-EnumDecl 0x55866e194668 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55866e1947b0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55866e194790 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55866e194770 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55866e194730 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55866e194750 <col:26> 'int' 16
| `-EnumConstantDecl 0x55866e194880 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55866e194860 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55866e194840 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55866e194800 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55866e194820 <col:47> 'int' 31
|-EnumDecl 0x55866e1948d0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55866e194a10 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55866e194b30 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1949f0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55866e1949d0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55866e194990 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55866e1949b0 <col:29> 'int' 15
| `-EnumConstantDecl 0x55866e194ae0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55866e194b48 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e194ac0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55866e194aa0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55866e194a60 <col:51> 'int' 1
|         `-IntegerLiteral 0x55866e194a80 <col:54> 'int' 10
|-CXXConstructorDecl 0x55866e194d18 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55866e194b70 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55866e194bf0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55866e194ea8 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55866e194de0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55866e194fa0 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55866e194fa0
|-CXXMethodDecl 0x55866e195128 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55866e198268 <col:42, line:100:5>
|   `-ReturnStmt 0x55866e198258 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55866e198240 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55866e198210 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55866e196f90
|         `-CXXThisExpr 0x55866e198200 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55866e1951f0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55866e1982e8 <col:36, line:105:5>
|   `-ReturnStmt 0x55866e1982d8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55866e1982c0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55866e198290 <col:16> 'void *const' lvalue ->_thunk 0x55866e196ff8
|         `-CXXThisExpr 0x55866e198280 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55866e1952b0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55866e198368 <col:37, line:110:5>
|   `-ReturnStmt 0x55866e198358 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55866e198340 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55866e198310 <col:16> 'Element *const' lvalue ->_owner 0x55866e1970b8
|         `-CXXThisExpr 0x55866e198300 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55866e195370 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55866e195438 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55866e1954f8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55866e1955b8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55866e198450 <col:35, line:137:5>
|   `-ReturnStmt 0x55866e198440 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55866e198408 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55866e1983d8 <col:16, col:24> '<bound member function type>' ->router 0x55866e227490
|         `-ImplicitCastExpr 0x55866e198428 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55866e1983c0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55866e198390 <col:16> 'Element *const' lvalue ->_owner 0x55866e1970b8
|               `-CXXThisExpr 0x55866e198380 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55866e195678 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55866e195878 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55866e195728 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55866e1957a0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55866e195a88 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55866e195938 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55866e1959b0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55866e195b58 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55866e198560 <col:35, line:181:5>
|   `-ReturnStmt 0x55866e198550 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55866e198538 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55866e198520 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55866e1984f0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55866e196bc8
|           `-MemberExpr 0x55866e1984a8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55866e196ce8
|             `-MemberExpr 0x55866e198478 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55866e196f18
|               `-CXXThisExpr 0x55866e198468 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55866e195c18 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55866e198678 <col:30, line:192:5>
|   `-BinaryOperator 0x55866e198658 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55866e198600 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55866e196bc8
|     | `-MemberExpr 0x55866e1985b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55866e196ce8
|     |   `-MemberExpr 0x55866e198588 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55866e196f18
|     |     `-CXXThisExpr 0x55866e198578 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55866e198640 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55866e198630 <col:32> 'bool' false
|-CXXMethodDecl 0x55866e195cd8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55866e1989c8 <col:30, line:206:5>
|   |-BinaryOperator 0x55866e198770 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55866e198718 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55866e196bc8
|   | | `-MemberExpr 0x55866e1986d0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55866e196ce8
|   | |   `-MemberExpr 0x55866e1986a0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55866e196f18
|   | |     `-CXXThisExpr 0x55866e198690 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55866e198758 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55866e198748 <col:32> 'bool' true
|   |-CallExpr 0x55866e198810 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55866e1987f8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55866e1987d8 <col:9> 'void ()' lvalue Function 0x55866e22f800 'click_fence' 'void ()'
|   `-IfStmt 0x55866e1989b0 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55866e1988f0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55866e1988c0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55866e198870 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55866e197328
|     | |   `-MemberExpr 0x55866e198840 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55866e1973a0
|     | |     `-CXXThisExpr 0x55866e198830 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55866e1988d8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55866e1988a0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55866e198970 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55866e198920 <col:13> '<bound member function type>' ->complete_schedule 0x55866e197da0
|       | `-CXXThisExpr 0x55866e198910 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55866e198998 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55866e198950 <col:31> 'int' 0
|-CXXMethodDecl 0x55866e195d98 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55866e198af0 <col:35, line:240:5>
|   `-BinaryOperator 0x55866e198ad0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55866e198a78 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55866e196bc8
|     | `-MemberExpr 0x55866e198a30 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55866e196ce8
|     |   `-MemberExpr 0x55866e198a00 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55866e196f18
|     |     `-CXXThisExpr 0x55866e1989f0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55866e198ab8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55866e198aa8 <col:32> 'bool' true
|-CXXMethodDecl 0x55866e195e58 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55866e198d08 <col:37, line:253:5>
|   |-BinaryOperator 0x55866e198be8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55866e198b90 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55866e196bc8
|   | | `-MemberExpr 0x55866e198b48 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55866e196ce8
|   | |   `-MemberExpr 0x55866e198b18 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55866e196f18
|   | |     `-CXXThisExpr 0x55866e198b08 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55866e198bd0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55866e198bc0 <col:32> 'bool' false
|   `-BinaryOperator 0x55866e198ce8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55866e198c90 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55866e196c28
|     | `-MemberExpr 0x55866e198c48 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55866e196ce8
|     |   `-MemberExpr 0x55866e198c18 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55866e196f18
|     |     `-CXXThisExpr 0x55866e198c08 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55866e198cd0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55866e198cc0 <col:41> 'bool' true
|-CXXMethodDecl 0x55866e195f18 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55866e198e88 <col:37, line:264:5>
|   |-BinaryOperator 0x55866e198e08 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55866e198db0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55866e196c28
|   | | `-MemberExpr 0x55866e198d68 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55866e196ce8
|   | |   `-MemberExpr 0x55866e198d38 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55866e196f18
|   | |     `-CXXThisExpr 0x55866e198d28 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55866e198df0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55866e198de0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55866e198e68 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55866e198e38 <col:9> '<bound member function type>' ->reschedule 0x55866e195cd8
|       `-CXXThisExpr 0x55866e198e28 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55866e196060 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55866e195fd0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55866e196130 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55866e196278 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55866e1961e8 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55866e1963c8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55866e196338 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55866e196490 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55866e196550 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55866e1965f0 <col:53> "" ""
|-CXXMethodDecl 0x55866e196688 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55866e196728 <col:47> "" ""
|-AccessSpecDecl 0x55866e196798 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55866e1967d8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55866e196840 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55866e196890 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55866e1969a8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55866e196a38 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55866e196b68 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55866e196bc8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55866e196c28 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55866e2c9768 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55866e2c9840 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55866e2c9840
| | |-CXXConstructorDecl 0x55866e2c9af8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55866e2c9af8
| | | `-ParmVarDecl 0x55866e2c9c08 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55866e2c9ca8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55866e2c9ca8
| |   `-ParmVarDecl 0x55866e2c9db8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55866e196ce8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55866e196d48 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55866e196ce8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55866e196b68 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55866e196da0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55866e196ce8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55866e196bc8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55866e196df8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55866e196ce8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55866e196c28 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55866e196e50 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55866e2c9670 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55866e2c9fd8 <col:11>
| |-CXXConstructorDecl 0x55866e2c9948 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55866e2c9948
| | `-ParmVarDecl 0x55866e2c9a58 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55866e2c9e58 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55866e2c9e58
|   `-ParmVarDecl 0x55866e2c9f68 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55866e196f18 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55866e196f90 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55866e196ff8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55866e197058 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55866e1970b8 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55866e197108 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55866e197228 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55866e1972c8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55866e197328 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55866e2c1ac8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55866e2c1ac8
| | `-ParmVarDecl 0x55866e2c1bd8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55866e2c1c78 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55866e2c1c78
| | `-ParmVarDecl 0x55866e2c1d88 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55866e2c1df8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55866e2c1df8
| |-CXXMethodDecl 0x55866e2c2678 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55866e2c2678
| | `-ParmVarDecl 0x55866e2c2788 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55866e2c27f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55866e2c27f8
| | `-ParmVarDecl 0x55866e2c2908 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55866e2ca038 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55866e2ca110 <col:11>
|-FieldDecl 0x55866e1973a0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55866e1974e8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55866e197428 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55866e197698 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55866e1975a8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55866e197760 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55866e197820 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55866e1978e0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55866e198f98 <col:41, line:355:5>
|   `-ReturnStmt 0x55866e198f88 <line:354:9, col:38>
|     `-BinaryOperator 0x55866e198f68 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55866e198f38 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55866e198ee8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55866e197328
|       |   `-MemberExpr 0x55866e198eb8 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55866e1973a0
|       |     `-CXXThisExpr 0x55866e198ea8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55866e198f50 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55866e198f18 <col:38> 'int' 0
|-CXXMethodDecl 0x55866e1979a0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55866e197ae0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55866e197a50 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55866e197c58 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55866e197b98 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55866e197da0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55866e197d10 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55866e197e68 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55866e198030 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55866e197f18 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55866e197f98 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55866e198130 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55866e1981c0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | ActiveNotifier::task_or_signal_t
         0 |   class Task * t
         0 |   Notifier::callback_type f
         0 |   void * v
         0 |   uintptr_t p
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e2d7348 <../dummy_inc/click/notifier.hh:151:13, line:156:5> line:151:13 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x55866e2d7478 <line:152:2, col:8> col:8 referenced t 'Task *'
|-FieldDecl 0x55866e2d74d8 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
|-FieldDecl 0x55866e2d7540 <line:154:2, col:8> col:8 referenced v 'void *'
`-FieldDecl 0x55866e2d75a0 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"union.ActiveNotifier::task_or_signal_t" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e2d6420 <../dummy_inc/click/notifier.hh:132:1, line:167:1> line:132:7 referenced class ActiveNotifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Notifier'
|-CXXRecordDecl 0x55866e2d6578 <col:1, col:7> col:7 implicit referenced class ActiveNotifier
|-AccessSpecDecl 0x55866e2d6608 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x55866e2d6718 <line:134:5, col:45> col:5 used ActiveNotifier 'void (Notifier::SearchOp)'
| `-ParmVarDecl 0x55866e2d6640 <col:20, col:34> col:29 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55866e2d7f30 <col:34> 'Notifier::SearchOp' EnumConstant 0x55866e2d1f20 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x55866e2d6810 <line:135:5, col:21> col:5 used ~ActiveNotifier 'void () noexcept'
| `-Overrides: [ 0x55866e2d26a8 Notifier::~Notifier 'void () noexcept' ]
|-CXXMethodDecl 0x55866e2d6a20 <line:137:5, col:55> col:9 add_activate_callback 'int (Notifier::callback_type, void *)'
| |-Overrides: [ 0x55866e2d31c0 Notifier::add_activate_callback 'int (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x55866e2d6900 <col:31, col:45> col:45 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55866e2d6980 <col:48, col:54> col:54 v 'void *'
|-CXXMethodDecl 0x55866e2d6bf8 <line:138:5, col:59> col:10 remove_activate_callback 'void (Notifier::callback_type, void *)'
| |-Overrides: [ 0x55866e2d3418 Notifier::remove_activate_callback 'void (Notifier::callback_type, void *)' ]
| |-ParmVarDecl 0x55866e2d6ae0 <col:35, col:49> col:49 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55866e2d6b60 <col:52, col:58> col:58 v 'void *'
|-CXXMethodDecl 0x55866e2d6eb8 <line:139:5, col:70> col:10 listeners 'void (Vector<Task *> &) const'
| |-ParmVarDecl 0x55866e2d6d90 <col:20, col:35> col:35 v 'Vector<Task *> &'
| `-DeprecatedAttr 0x55866e2d6f60 <col:59> "" ""
|-CXXMethodDecl 0x55866e2d70f0 <line:141:5, col:61> col:17 used set_active 'void (bool, bool)' inline
| |-ParmVarDecl 0x55866e2d6fe0 <col:28, col:33> col:33 active 'bool'
| `-ParmVarDecl 0x55866e2d7058 <col:41, col:57> col:46 schedule 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55866e2d7f50 <col:57> 'bool' true
|-CXXMethodDecl 0x55866e2d71c0 <line:142:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x55866e2d7280 <line:143:5, col:23> col:17 sleep 'void ()' inline
|-AccessSpecDecl 0x55866e2d7320 <line:149:3, col:10> col:3 private
|-CXXRecordDecl 0x55866e2d7348 <line:151:13, line:156:5> line:151:13 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x55866e2d7478 <line:152:2, col:8> col:8 referenced t 'Task *'
| |-FieldDecl 0x55866e2d74d8 <line:153:2, col:16> col:16 referenced f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| |-FieldDecl 0x55866e2d7540 <line:154:2, col:8> col:8 referenced v 'void *'
| `-FieldDecl 0x55866e2d75a0 <line:155:2, col:12> col:12 referenced p 'uintptr_t':'unsigned long'
|-TypedefDecl 0x55866e2d7668 <line:151:5, line:156:7> col:7 referenced task_or_signal_t 'union task_or_signal_t':'ActiveNotifier::task_or_signal_t'
| `-ElaboratedType 0x55866e2d7610 'union task_or_signal_t' sugar
|   `-RecordType 0x55866e2d73e0 'ActiveNotifier::task_or_signal_t'
|     `-CXXRecord 0x55866e2d7348 ''
|-FieldDecl 0x55866e2d76e8 <line:158:5, col:11> col:11 referenced _listener1 'Task *'
|-FieldDecl 0x55866e2d77c8 <line:159:5, col:23> col:23 referenced _listeners 'ActiveNotifier::task_or_signal_t *'
|-CXXMethodDecl 0x55866e2d7948 <line:161:5, col:46> col:9 listener_add 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x55866e2d7828 <col:22, col:36> col:36 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55866e2d78a8 <col:39, col:45> col:45 v 'void *'
|-CXXMethodDecl 0x55866e2d7b28 <line:162:5, col:49> col:9 listener_remove 'int (Notifier::callback_type, void *)'
| |-ParmVarDecl 0x55866e2d7a08 <col:25, col:39> col:39 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55866e2d7a88 <col:42, col:48> col:48 v 'void *'
|-CXXConstructorDecl 0x55866e2d7cd8 <line:164:5, col:41> col:5 ActiveNotifier 'void (const ActiveNotifier &)'
| `-ParmVarDecl 0x55866e2d7c18 <col:20, col:40> col:41 'const ActiveNotifier &'
`-CXXMethodDecl 0x55866e2d7e88 <line:165:5, col:52> col:21 operator= 'ActiveNotifier &(const ActiveNotifier &)'
  `-ParmVarDecl 0x55866e2d7d98 <col:31, col:51> col:52 'const ActiveNotifier &'

Layout: <CGRecordLayout
  LLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  NonVirtualBaseLLVMType:%class.ActiveNotifier = type { %class.Notifier.base, %class.Task*, %"union.ActiveNotifier::task_or_signal_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e2ed0f8 <../elements/standard/pullswitch.hh:44:1, line:65:1> line:44:7 class PullSwitch definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'SimplePullSwitch'
|-CXXRecordDecl 0x55866e2ed258 <col:1, col:7> col:7 implicit referenced class PullSwitch
|-AccessSpecDecl 0x55866e2ed2e8 <col:46, col:52> col:46 public
|-CXXConstructorDecl 0x55866e2ed370 <line:46:5, col:16> col:5 PullSwitch 'void ()'
|-CXXMethodDecl 0x55866e2ed470 <line:48:5, col:59> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55866e22df90 SimplePullSwitch::class_name 'const char *() const' ]
| `-CompoundStmt 0x55866e2ee630 <col:36, col:59>
|   `-ReturnStmt 0x55866e2ee620 <col:38, col:45>
|     `-ImplicitCastExpr 0x55866e2ee608 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55866e2ee5e0 <col:45> 'const char [11]' lvalue "PullSwitch"
|-CXXMethodDecl 0x55866e2ed5c0 <line:49:5, col:32> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55866e217500 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55866e2ed528 <col:16, col:28> col:28 name 'const char *'
|-CXXMethodDecl 0x55866e2ed710 <line:51:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55866e218330 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55866e2ed678 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55866e2ed858 <line:52:5, col:36> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55866e218b48 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55866e2ed7c8 <col:18, col:31> col:31 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55866e2ed9a8 <line:54:5, col:29> col:10 set_input 'void (int)'
| |-Overrides: [ 0x55866e22e6c8 SimplePullSwitch::set_input 'void (int)' ]
| `-ParmVarDecl 0x55866e2ed918 <col:20, col:24> col:24 input 'int'
|-CXXMethodDecl 0x55866e2edaf8 <line:56:5, col:21> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x55866e22e818 SimplePullSwitch::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55866e2eda68 <col:18> col:21 'int'
|-AccessSpecDecl 0x55866e2edba0 <line:58:3, col:12> col:3 protected
|-FieldDecl 0x55866e2edbd8 <line:60:5, col:20> col:20 _notifier 'ActiveNotifier'
|-FieldDecl 0x55866e2edc38 <line:61:5, col:21> col:21 _signals 'NotifierSignal *'
|-CXXMethodDecl 0x55866e2eddb0 <line:63:5, col:49> col:17 wake_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x55866e2edca0 <col:31, col:36> col:37 'void *'
| `-ParmVarDecl 0x55866e2edd18 <col:39, col:48> col:49 'Notifier *'
|-CXXConstructorDecl 0x55866e2ede88 <line:44:7> col:7 implicit PullSwitch 'void (const PullSwitch &)' inline default_delete noexcept-unevaluated 0x55866e2ede88
| `-ParmVarDecl 0x55866e2edf98 <col:7> col:7 'const PullSwitch &'
|-CXXConstructorDecl 0x55866e2ee038 <col:7> col:7 implicit PullSwitch 'void (PullSwitch &&)' inline default_delete noexcept-unevaluated 0x55866e2ee038
| `-ParmVarDecl 0x55866e2ee148 <col:7> col:7 'PullSwitch &&'
|-CXXMethodDecl 0x55866e2ee1e8 <col:7> col:7 implicit operator= 'PullSwitch &(const PullSwitch &)' inline default_delete noexcept-unevaluated 0x55866e2ee1e8
| `-ParmVarDecl 0x55866e2ee2f8 <col:7> col:7 'const PullSwitch &'
|-CXXMethodDecl 0x55866e2ee368 <col:7> col:7 implicit operator= 'PullSwitch &(PullSwitch &&)' inline default_delete noexcept-unevaluated 0x55866e2ee368
| `-ParmVarDecl 0x55866e2ee478 <col:7> col:7 'PullSwitch &&'
`-CXXDestructorDecl 0x55866e2ee500 <col:7> col:7 implicit ~PullSwitch 'void ()' inline default noexcept-unevaluated 0x55866e2ee500
  `-Overrides: [ 0x55866e22de60 SimplePullSwitch::~SimplePullSwitch 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.PullSwitch = type { %class.SimplePullSwitch, %class.ActiveNotifier, %class.NotifierSignal* }
  NonVirtualBaseLLVMType:%class.PullSwitch = type { %class.SimplePullSwitch, %class.ActiveNotifier, %class.NotifierSignal* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e3260d8 prev 0x55866e2ee768 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55866e3261d0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55866e326260 <col:22, col:28> col:22 public
|-EnumDecl 0x55866e326288 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55866e3263a8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55866e326388 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55866e326370 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55866e326350 <col:14> 'int' 999
| |-EnumConstantDecl 0x55866e326450 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55866e326430 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55866e326418 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55866e3263f8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55866e3264e0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55866e3264c0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55866e3264a0 <col:17> 'int' 0
| |-EnumConstantDecl 0x55866e326570 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55866e326550 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55866e326530 <col:13> 'int' 1
| |-EnumConstantDecl 0x55866e326600 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55866e3265e0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55866e3265c0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55866e326690 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55866e326670 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55866e326650 <col:13> 'int' 3
| |-EnumConstantDecl 0x55866e326720 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55866e326700 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55866e3266e0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55866e3267b0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55866e326790 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55866e326770 <col:14> 'int' 5
| |-EnumConstantDecl 0x55866e326840 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55866e326820 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55866e326800 <col:12> 'int' 6
| `-EnumConstantDecl 0x55866e3268d0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55866e3268b0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55866e326890 <col:13> 'int' 7
|-VarDecl 0x55866e326940 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55866e3269c8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55866e326a50 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55866e326ad8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55866e326b60 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55866e326be8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55866e326c70 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55866e326cf8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55866e326d80 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55866e326e08 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55866e326e90 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55866e326f90 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55866e32ccd8 '_nerrors' 'int'
| | `-IntegerLiteral 0x55866e32d468 <line:128:13> 'int' 0
| `-CompoundStmt 0x55866e32d4d8 <col:16, line:129:5>
|-CXXDestructorDecl 0x55866e327080 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55866e32d4e8 <col:29, line:132:5>
|-CXXMethodDecl 0x55866e327238 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55866e327170 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55866e327300 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55866e3273e8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55866e32d540 <col:44, line:161:5>
|   `-ReturnStmt 0x55866e32d530 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55866e32d518 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55866e32d4f8 <col:9> 'ErrorHandler *' lvalue Var 0x55866e32cd38 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55866e327558 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55866e327498 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55866e327620 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55866e32d5a0 <col:43, line:173:5>
|   `-ReturnStmt 0x55866e32d590 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55866e32d578 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55866e32d558 <col:9> 'ErrorHandler *' lvalue Var 0x55866e32cdb0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55866e3276d8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55866e327758 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55866e327868 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55866e3277d8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55866e3279b8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55866e327928 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55866e327b10 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55866e327a78 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55866e327c68 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x55866e327bd0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55866e327dc0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55866e327d28 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55866e327fd0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55866e327e78 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55866e327ef8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55866e3281a8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55866e328090 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55866e328110 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55866e3283c8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55866e328268 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55866e3282e8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55866e3285a8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55866e328488 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55866e328508 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55866e329150 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55866e328668 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55866e3286e8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55866e3292e0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55866e329210 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55866e3294b0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55866e329398 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55866e329410 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55866e32d7f8 <col:57, line:234:5>
|   `-ReturnStmt 0x55866e32d7e8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55866e32d7d0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55866e32d778 <col:9, col:41> 'int'
|         |-MemberExpr 0x55866e32d748 <col:9> '<bound member function type>' ->xmessage 0x55866e3292e0
|         | `-CXXThisExpr 0x55866e32d738 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55866e32d7b8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55866e32d7a0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55866e32d718 <col:18, col:40> 'String' (CXXTemporary 0x55866e32d718)
|               `-CallExpr 0x55866e32d6e0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55866e32d6c8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55866e32d640 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55866e32b508 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55866e32d660 <col:31> 'const String' lvalue ParmVar 0x55866e329410 'str' 'const String &'
|                 `-DeclRefExpr 0x55866e32d680 <col:36> 'const String' lvalue ParmVar 0x55866e329398 'anno' 'const String &'
|-CXXMethodDecl 0x55866e3297f0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55866e329570 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55866e3295f0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55866e3296c0 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55866e32da88 <col:68, line:243:5>
|   `-ReturnStmt 0x55866e32da78 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55866e32da60 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55866e32da00 <col:9, col:41> 'int'
|         |-MemberExpr 0x55866e32d9d0 <col:9> '<bound member function type>' ->xmessage 0x55866e3294b0
|         | `-CXXThisExpr 0x55866e32d9c0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55866e32d898 <col:18> 'const String' lvalue ParmVar 0x55866e329570 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55866e32da48 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55866e32da30 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55866e32d9a0 <col:24, col:40> 'String' (CXXTemporary 0x55866e32d9a0)
|               `-CXXMemberCallExpr 0x55866e32d938 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55866e32d8c8 <col:24> '<bound member function type>' ->vformat 0x55866e32a9d0
|                 | `-CXXThisExpr 0x55866e32d8b8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55866e32d968 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55866e32d8f8 <col:32> 'const char *' lvalue ParmVar 0x55866e3295f0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55866e32d980 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55866e32d918 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55866e3296c0 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55866e329a90 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55866e3298b8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55866e329930 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55866e3299a8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55866e32ddc8 <col:23, line:254:5>
|   `-ReturnStmt 0x55866e32ddb8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55866e32dda0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55866e32dd40 <col:9, col:71> 'int'
|         |-MemberExpr 0x55866e32dd10 <col:9> '<bound member function type>' ->xmessage 0x55866e3294b0
|         | `-CXXThisExpr 0x55866e32dd00 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55866e32dd88 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55866e32dd70 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55866e32dcc0 <col:18, col:65> 'String' (CXXTemporary 0x55866e32dcc0)
|         |     `-CallExpr 0x55866e32dc58 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55866e32dc40 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55866e32db28 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55866e32b508 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55866e32db48 <col:31> 'const String' lvalue ParmVar 0x55866e329930 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55866e32dca0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55866e32dc88 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55866e32dc20 <col:37, col:64> 'String' (CXXTemporary 0x55866e32dc20)
|         |             `-CallExpr 0x55866e32dbf0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55866e32dbd8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55866e32db68 <col:37> 'String (const String &)' lvalue CXXMethod 0x55866e32bb58 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55866e32db88 <col:56> 'const String' lvalue ParmVar 0x55866e3298b8 'landmark' 'const String &'
|         `-DeclRefExpr 0x55866e32dce0 <col:68> 'const String' lvalue ParmVar 0x55866e3299a8 'str' 'const String &'
|-CXXMethodDecl 0x55866e329e10 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55866e329b58 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55866e329bd0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55866e329c50 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55866e329cc8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55866e32e080 <col:34, line:267:5>
|   `-ReturnStmt 0x55866e32e070 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55866e32e058 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55866e32dff0 <col:9, col:51> 'int'
|         |-MemberExpr 0x55866e32dfc0 <col:9> '<bound member function type>' ->xmessage 0x55866e329a90
|         | `-CXXThisExpr 0x55866e32dfb0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55866e32de68 <col:18> 'const String' lvalue ParmVar 0x55866e329b58 'landmark' 'const String &'
|         |-DeclRefExpr 0x55866e32de88 <col:28> 'const String' lvalue ParmVar 0x55866e329bd0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55866e32e040 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55866e32e028 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55866e32df90 <col:34, col:50> 'String' (CXXTemporary 0x55866e32df90)
|               `-CXXMemberCallExpr 0x55866e32df28 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55866e32deb8 <col:34> '<bound member function type>' ->vformat 0x55866e32a9d0
|                 | `-CXXThisExpr 0x55866e32dea8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55866e32df58 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55866e32dee8 <col:42> 'const char *' lvalue ParmVar 0x55866e329c50 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55866e32df70 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55866e32df08 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55866e329cc8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55866e329f20 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55866e32e100 <col:25, line:288:5>
|   `-ReturnStmt 0x55866e32e0f0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55866e32e0d8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55866e32e0a8 <col:9> 'const int' lvalue ->_nerrors 0x55866e32ccd8
|         `-CXXThisExpr 0x55866e32e098 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55866e32a130 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55866e329fd8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55866e32a058 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55866e32a418 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55866e32a1f8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55866e32a278 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55866e32a2f0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55866e32a5b0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55866e32a4e8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55866e32a7f8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55866e32a670 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55866e32a6e8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55866e32e360 <col:58, line:357:5>
|   `-ReturnStmt 0x55866e32e350 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55866e32e338 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55866e32e308 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55866e32e2f0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55866e32e2d0 <col:9, col:29> 'String' (CXXTemporary 0x55866e32e2d0)
|             `-CallExpr 0x55866e32e260 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55866e32e248 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55866e32e1c8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55866e32a418 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55866e32e168 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55866e32e298 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55866e32e188 <col:21> 'const char *' lvalue ParmVar 0x55866e32a670 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55866e32e2b0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55866e32e1a8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55866e32a6e8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55866e32a9d0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55866e32a8c0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55866e32a938 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55866e32ab28 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55866e32aa98 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55866e32ac70 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55866e32abe0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55866e32af10 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55866e32ad28 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55866e32ada8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55866e32ae20 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55866e32b070 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55866e32afe0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55866e32e478 <col:37, line:441:5>
|   `-IfStmt 0x55866e32e460 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55866e32e3e8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55866e32e3b8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55866e32e378 <col:6> 'int' lvalue ParmVar 0x55866e32afe0 'level' 'int'
|     | `-ImplicitCastExpr 0x55866e32e3d0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55866e32e398 <col:15> 'ErrorHandler::Level' EnumConstant 0x55866e326690 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55866e32e448 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55866e32e418 <col:8> 'int' lvalue ->_nerrors 0x55866e32ccd8
|         `-CXXThisExpr 0x55866e32e408 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55866e32b138 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55866e32e510 <col:26, line:448:5>
|   `-BinaryOperator 0x55866e32e4f0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55866e32e4a0 <col:2> 'int' lvalue ->_nerrors 0x55866e32ccd8
|     | `-CXXThisExpr 0x55866e32e490 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55866e32e4d0 <col:13> 'int' 0
|-CXXMethodDecl 0x55866e32b300 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55866e32b1f0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55866e32b268 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55866e32b508 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55866e32b3c0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55866e32b438 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55866e32b7b8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55866e32b5c8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55866e32b648 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55866e32b6c8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55866e32b870 <col:59> 0 0
|-CXXMethodDecl 0x55866e32ba08 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55866e32b8e8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55866e32b968 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55866e32eb80 <col:70, line:534:5>
|   |-DeclStmt 0x55866e32e680 <line:528:2, col:20>
|   | |-VarDecl 0x55866e32e538 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55866e32e5a0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55866e32e5d8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55866e32e640 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55866e32e750 <line:529:2, col:23>
|   | `-VarDecl 0x55866e32e6b0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55866e32e738 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55866e32e718 <col:18> 'const char *' lvalue ParmVar 0x55866e32b8e8 'begin' 'const char *'
|   |-DoStmt 0x55866e32eb18 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55866e32ea48 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55866e32ea30 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55866e32ea10 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55866e32e768 <col:6> 'const char *' lvalue Var 0x55866e32e6b0 'x' 'const char *'
|   | |     `-CallExpr 0x55866e32e960 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55866e32e948 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55866e32e900 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55866e32d1b0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55866e32e9c8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55866e32e9b0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55866e32e820 <col:20, col:27> 'String' (CXXTemporary 0x55866e32e820)
|   | |       |     `-CXXTemporaryObjectExpr 0x55866e32e7e8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55866e32e9e0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55866e32e840 <col:30> 'const char *' lvalue Var 0x55866e32e6b0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55866e32e9f8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55866e32e860 <col:33> 'const char *' lvalue ParmVar 0x55866e32b968 'end' 'const char *'
|   | |       |-UnaryOperator 0x55866e32e8a0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55866e32e880 <col:39> 'String' lvalue Var 0x55866e32e538 'name' 'String'
|   | |       |-UnaryOperator 0x55866e32e8d8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55866e32e8b8 <col:46> 'String' lvalue Var 0x55866e32e5d8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55866e32e8f0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55866e32eb00 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55866e32eae8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55866e32eac8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55866e32ea98 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55866dfe3d18
|   |         `-ImplicitCastExpr 0x55866e32ea80 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55866e32ea60 <col:11> 'String' lvalue Var 0x55866e32e538 'name' 'String'
|   `-ReturnStmt 0x55866e32eb70 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55866e32eb58 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55866e32eb38 <col:9> 'const char *' lvalue Var 0x55866e32e6b0 'x' 'const char *'
|-CXXMethodDecl 0x55866e32bb58 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55866e32bac8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55866e32f188 <col:55, line:550:5>
|   `-IfStmt 0x55866e32f160 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55866e32edc0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55866e32eda8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55866e32ed90 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55866e32ed70 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55866e32ed40 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55866dfe3d18
|     | |       `-DeclRefExpr 0x55866e32ebe0 <col:6> 'const String' lvalue ParmVar 0x55866e32bac8 'x' 'const String &'
|     | `-BinaryOperator 0x55866e32ed20 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55866e32ecf0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55866e32eca0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55866e32ec88 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55866e32ec40 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55866dffd550 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55866e32ec00 <col:11> 'const String' lvalue ParmVar 0x55866e32bac8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55866e32ec20 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55866e32ed08 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55866e32ecd8 <col:19> 'char' 123
|     |-ReturnStmt 0x55866e32ee30 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55866e32ee00 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55866e32ede0 <col:13> 'const String' lvalue ParmVar 0x55866e32bac8 'x' 'const String &'
|     `-IfStmt 0x55866e32f138 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55866e32eec8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55866e32eeb0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55866e32ee90 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55866e32ee60 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55866dfe3d18
|       |       `-DeclRefExpr 0x55866e32ee40 <col:11> 'const String' lvalue ParmVar 0x55866e32bac8 'x' 'const String &'
|       |-ReturnStmt 0x55866e32f050 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55866e32f038 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55866e32f008 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55866e32eff0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55866e32efd0 <col:13, col:29> 'String' (CXXTemporary 0x55866e32efd0)
|       |         `-CallExpr 0x55866e32ef80 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55866e32ef68 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55866e32eee0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55866e32b300 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55866e32efb0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55866e32ef00 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55866e32ef20 <col:28> 'const String' lvalue ParmVar 0x55866e32bac8 'x' 'const String &'
|       `-ReturnStmt 0x55866e32f128 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55866e32f110 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55866e32f0e0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55866e32f0c8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55866e32f0a8 <col:13, col:20> 'String' (CXXTemporary 0x55866e32f0a8)
|                 `-CXXTemporaryObjectExpr 0x55866e32f070 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55866e32bd20 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55866e32bc10 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55866e32bc88 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55866e32d458 <col:71> 'bool' false
|-CXXRecordDecl 0x55866e32bdd0 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55866e32c0c8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55866e32c060 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55866e32c000 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55866e32bfc0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55866dfe05b0 'String'
|       | `-CXXRecord 0x55866dfe0520 'String'
|       |-BuiltinType 0x55866dcb1370 'int'
|       `-DecayedType 0x55866e329690 '__va_list_tag *' sugar
|         |-TypedefType 0x55866e329660 'va_list' sugar
|         | |-Typedef 0x55866ded1660 'va_list'
|         | `-TypedefType 0x55866ded1610 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55866de09238 '__gnuc_va_list'
|         |   `-TypedefType 0x55866de091a0 '__builtin_va_list' sugar
|         |     |-Typedef 0x55866dcf2bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55866dcf2b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55866dcb20c0 '__va_list_tag'
|         |         `-CXXRecord 0x55866dcb2028 '__va_list_tag'
|         `-PointerType 0x55866ded6f00 '__va_list_tag *'
|           `-RecordType 0x55866dcb20c0 '__va_list_tag'
|             `-CXXRecord 0x55866dcb2028 '__va_list_tag'
|-EnumDecl 0x55866e32c120 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55866e32c220 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55866e32c780 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e32c200 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55866e32c1e0 <col:16> 'int' 1
| |-EnumConstantDecl 0x55866e32c2b0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55866e32c798 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e32c290 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55866e32c270 <col:21> 'int' 2
| |-EnumConstantDecl 0x55866e32c340 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55866e32c7b0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e32c320 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55866e32c300 <col:22> 'int' 4
| |-EnumConstantDecl 0x55866e32c3d0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55866e32c7c8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e32c3b0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55866e32c390 <col:17> 'int' 8
| |-EnumConstantDecl 0x55866e32c460 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55866e32c7e0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e32c440 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55866e32c420 <col:22> 'int' 16
| |-EnumConstantDecl 0x55866e32c4f0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55866e32c7f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e32c4d0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55866e32c4b0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55866e32c580 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55866e32c810 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e32c560 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55866e32c540 <col:17> 'int' 64
| |-EnumConstantDecl 0x55866e32c610 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55866e32c828 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e32c5f0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55866e32c5d0 <col:14> 'int' 128
| |-EnumConstantDecl 0x55866e32c6a0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55866e32c840 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e32c680 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55866e32c660 <col:16> 'int' 256
| `-EnumConstantDecl 0x55866e32c730 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55866e32c858 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e32c710 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55866e32c6f0 <col:12> 'int' 1024
|-CXXMethodDecl 0x55866e32ca68 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55866e32c880 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55866e32c920 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55866e32cbf0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55866e32cb28 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55866e32cc98 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55866e32ccd8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55866e32cd38 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55866e32cdb0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55866e32d1b0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55866e32ce28 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55866e32cea8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55866e32cf28 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55866e32cfa0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55866e32d018 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55866e32d090 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55866e32d2d8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55866e32d2d8
| `-ParmVarDecl 0x55866e32d3e8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55866e32f4e8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55866e32f4e8
  `-ParmVarDecl 0x55866e32f5f8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e1ed7a8 prev 0x55866e1e29b0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55866e1ed8a0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55866e1ed990 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55866e1edab8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55866e1edc38 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55866e1eddb8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55866e1edf38 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55866e1fed68 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55866e1ff5d8 <col:11>
|-CXXDestructorDecl 0x55866e1fee40 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55866e1fef78 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55866e1fef78
| `-ParmVarDecl 0x55866e1ff088 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55866e1ff128 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55866e1ff128
| `-ParmVarDecl 0x55866e1ff238 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55866e201ff8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55866e202108 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55866e202388 <col:11>
|   `-ReturnStmt 0x55866e202378 <col:11>
|     `-UnaryOperator 0x55866e202360 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55866e202350 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55866e202178 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55866e202178
  `-ParmVarDecl 0x55866e202288 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e1edfa0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55866e1ee0b8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55866e1ee158 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55866e1ee1c0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55866e1ee228 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55866e1ee290 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55866e1ee2f0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55866e1ee3b0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55866e1ee410 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55866e1ee470 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55866e1fec78 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55866e1ee158 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55866e1ff5e8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55866e1ff640 <col:12>
|-CXXConstructorDecl 0x55866e1ff2a8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55866e1ff2a8
| `-ParmVarDecl 0x55866e1ff3b8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55866e1ff458 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55866e1ff458
| `-ParmVarDecl 0x55866e1ff568 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55866e2016e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e1dc0c0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55866e1dc1d8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55866e1dc268 <col:16, col:22> col:16 public
|-EnumDecl 0x55866e1dc290 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55866e1dc390 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55866e1dc470 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1dc370 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55866e1dc350 <col:21> 'int' 28
| `-EnumConstantDecl 0x55866e1dc420 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55866e1dc488 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e1dc400 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55866e1dc3e0 <col:22> 'int' 64
|-CXXMethodDecl 0x55866e1dc7c8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55866e1dc4b0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55866e1dc530 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55866e1dc5a8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55866e1dc620 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55866e1dc888 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55866e1dca88 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55866e1dc900 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55866e1dc978 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55866e1dcb38 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55866e1dcc98 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55866e1dcba8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55866e1dcd40 <col:72> warn_unused_result ""
|-TypedefDecl 0x55866e1dd0a0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55866e1dd030 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55866e1dcfd0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55866e1dcf90 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55866dcb12d0 'void'
|       |-PointerType 0x55866df5c460 'unsigned char *'
|       | `-BuiltinType 0x55866dcb13d0 'unsigned char'
|       |-TypedefType 0x55866dd589d0 'size_t' sugar
|       | |-Typedef 0x55866dd21b20 'size_t'
|       | `-BuiltinType 0x55866dcb1430 'unsigned long'
|       `-PointerType 0x55866dcb1ad0 'void *'
|         `-BuiltinType 0x55866dcb12d0 'void'
|-CXXMethodDecl 0x55866e1dd518 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55866e1dd110 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55866e1dd188 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55866e1dd220 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55866e1dd2a0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55866e1f7c10 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55866e1f7bf8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55866e1f7bc0 <col:58> 'int' 0
| |-ParmVarDecl 0x55866e1dd320 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55866e1f7c38 <col:76> 'int' 0
| |-ParmVarDecl 0x55866e1dd3a0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55866e1f7c58 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55866e1dd5e8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55866e1dd668 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55866e1dd728 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55866e1dd7c8 <col:20>
| `-OptimizeNoneAttr 0x55866e1dd820 <col:30>
|-CXXMethodDecl 0x55866e1dd898 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55866e1dd938 <col:20>
| `-OptimizeNoneAttr 0x55866e1dd990 <col:30>
|-CXXMethodDecl 0x55866e1dda08 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55866e1ddaa8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55866e1ddb58 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55866e1ddbf8 <col:20>
| |-OptimizeNoneAttr 0x55866e1ddc50 <col:30>
| `-WarnUnusedResultAttr 0x55866e1ddc78 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55866e1ddcd0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55866e1ddd70 <col:20>
| `-OptimizeNoneAttr 0x55866e1dddc8 <col:30>
|-CXXMethodDecl 0x55866e1dde18 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55866e1ddeb8 <col:20>
| `-OptimizeNoneAttr 0x55866e1ddf10 <col:30>
|-CXXMethodDecl 0x55866e1ddf58 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55866e1ddff8 <col:20>
| `-OptimizeNoneAttr 0x55866e1de050 <col:30>
|-CXXMethodDecl 0x55866e1de098 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55866e1de158 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55866e1de220 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55866e1de2e8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55866e1de3a8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55866e1de4c8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55866e1f7d20 <col:54, line:99:5>
|   `-ReturnStmt 0x55866e1f7d10 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55866e1f7cf8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55866e1f7cc8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55866e1ee7a8
|         `-CXXThisExpr 0x55866e1f7cb8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55866e1de668 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55866e1de578 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55866e1f7dd0 <col:67, line:103:5>
|   `-BinaryOperator 0x55866e1f7db0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55866e1f7d48 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55866e1ee7a8
|     | `-CXXThisExpr 0x55866e1f7d38 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55866e1f7d98 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55866e1f7d78 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55866e1de578 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55866e1de760 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55866e1f7e50 <col:33, line:107:5>
|   `-ReturnStmt 0x55866e1f7e40 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55866e1f7e28 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55866e1f7df8 <col:16> 'void *' lvalue ->_destructor_argument 0x55866e1ee810
|         `-CXXThisExpr 0x55866e1f7de8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55866e1de820 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55866e1f8480 <col:25, line:113:5>
|   |-ParenExpr 0x55866e1f81c8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55866e1f8198 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1f7f08 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55866e1f7ee0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55866e1f7ea8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55866e1f7e78 <col:24> '<bound member function type>' ->shared 0x55866e1dd898
|   |   |       `-ImplicitCastExpr 0x55866e1f7ec8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55866e1f7e68 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55866e1f7f68 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1f7f48 <col:42> 'int' 0
|   |   `-CallExpr 0x55866e1f80f8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55866e1f80e0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1f80c0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1f8138 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1f7fd8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55866e1f8150 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1f8000 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1f8168 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1f8038 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55866e1f8180 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1f80a8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1f8090 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1f8058 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55866e1f83c8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55866e1f81f8 <col:2> 'unsigned char *' lvalue ->_head 0x55866e1ee5b0
|   | | `-CXXThisExpr 0x55866e1f81e8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55866e1f83b0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55866e1f8390 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55866e1f8238 <col:10> 'unsigned char *' lvalue ->_data 0x55866e1ee618
|   |     | `-CXXThisExpr 0x55866e1f8228 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55866e1f8378 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55866e1f8358 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55866e1f8278 <col:18> 'unsigned char *' lvalue ->_tail 0x55866e1ee680
|   |         | `-CXXThisExpr 0x55866e1f8268 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55866e1f8340 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55866e1f8320 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55866e1f82b8 <col:26> 'unsigned char *' lvalue ->_end 0x55866e1ee6e8
|   |             | `-CXXThisExpr 0x55866e1f82a8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55866e1f8308 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55866e1f82e8 <col:33> 'int' 0
|   `-BinaryOperator 0x55866e1f8460 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55866e1f83f8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55866e1ee7a8
|     | `-CXXThisExpr 0x55866e1f83e8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55866e1f8448 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55866e1f8428 <col:16> 'int' 0
|-CXXMethodDecl 0x55866e1de960 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55866e1de8d0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55866e1dea08 <col:20>
| |-OptimizeNoneAttr 0x55866e1dea60 <col:30>
| `-WarnUnusedResultAttr 0x55866e1dea88 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55866e1deb58 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55866e1deac8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55866e1dec00 <col:20>
| |-OptimizeNoneAttr 0x55866e1dec58 <col:30>
| `-WarnUnusedResultAttr 0x55866e1dec80 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55866e1dedb8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55866e1decc0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55866e1dee60 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55866e1def60 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55866e1deed0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55866e1df008 <col:20>
| `-OptimizeNoneAttr 0x55866e1df060 <col:30>
|-CXXMethodDecl 0x55866e1df128 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55866e1df098 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55866e1df1d0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55866e1df2d0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55866e1df240 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55866e1df378 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55866e1df478 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55866e1df3e8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55866e1df520 <col:20>
| `-OptimizeNoneAttr 0x55866e1df578 <col:30>
|-CXXMethodDecl 0x55866e1df708 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55866e1df5b8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55866e1df630 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55866e1f7c78 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55866e1df7b8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55866e1df9b8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55866e1df830 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55866e1df8a8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1dfbc8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55866e1dfa78 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55866e1dfaf0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1dfdd8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55866e1dfc88 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55866e1dfd08 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55866e1f7c88 <col:39> 'int' 0
|-CXXMethodDecl 0x55866e1dfea8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55866e1dff70 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55866e1e0038 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55866e1e00f8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55866e1e01c0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55866e1e0308 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55866e1e0278 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55866e1e04d8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55866e1e03c8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55866e1e0440 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1e05a8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55866e1e0668 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55866e1e0708 <col:20>
| `-OptimizeNoneAttr 0x55866e1e0760 <col:30>
|-CXXMethodDecl 0x55866e1e07b0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55866e1e0850 <col:20>
| `-OptimizeNoneAttr 0x55866e1e08a8 <col:30>
|-CXXMethodDecl 0x55866e1e08f8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55866e1e09b8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55866e1e0a80 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55866e1e0b20 <col:20>
| `-OptimizeNoneAttr 0x55866e1e0b78 <col:30>
|-CXXMethodDecl 0x55866e1e0cc8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55866e1e0bb8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55866e1e0c30 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1e0e18 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55866e1e0d88 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1e0ef0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55866e1e0fb0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55866e1e1050 <col:20>
| `-OptimizeNoneAttr 0x55866e1e10a8 <col:30>
|-CXXMethodDecl 0x55866e1e10f8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55866e1e1198 <col:20>
| `-OptimizeNoneAttr 0x55866e1e11f0 <col:30>
|-CXXMethodDecl 0x55866e1e1240 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55866e1e1308 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55866e1e13a8 <col:20>
| `-OptimizeNoneAttr 0x55866e1e1400 <col:30>
|-CXXMethodDecl 0x55866e1e1448 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55866e1e1568 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55866e1e16d8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55866e1e1618 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55866e1e17c8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55866e1e1868 <col:20>
| `-OptimizeNoneAttr 0x55866e1e18c0 <col:30>
|-CXXMethodDecl 0x55866e1e1910 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55866e1e19d0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55866e1e1c08 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55866e1e1a80 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55866e1e1af8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55866e1e1cb8 <col:20>
| `-OptimizeNoneAttr 0x55866e1e1d10 <col:30>
|-CXXMethodDecl 0x55866e1e1db8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55866e1e1e58 <col:20>
| `-OptimizeNoneAttr 0x55866e1e1eb0 <col:30>
|-CXXMethodDecl 0x55866e1e1f00 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55866e1e1fa0 <col:20>
| `-OptimizeNoneAttr 0x55866e1e1ff8 <col:30>
|-CXXMethodDecl 0x55866e1e2040 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55866e1e20e0 <col:20>
| `-OptimizeNoneAttr 0x55866e1e2138 <col:30>
|-CXXMethodDecl 0x55866e1e2238 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55866e1e2170 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55866e1e22e0 <col:20>
| `-OptimizeNoneAttr 0x55866e1e2338 <col:30>
|-CXXMethodDecl 0x55866e1e24f8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55866e1e2370 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55866e1e23e8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55866e1e25a8 <col:20>
| `-OptimizeNoneAttr 0x55866e1e2600 <col:30>
|-CXXMethodDecl 0x55866e1e26a8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55866e1e27c8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55866e1e28e8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55866e1e2988 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55866e1e29b0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55866e1e2ad8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55866e1e2b78 <col:20>
| `-OptimizeNoneAttr 0x55866e1e2bd0 <col:30>
|-CXXMethodDecl 0x55866e1e2c78 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55866e1e2d18 <col:20>
| `-OptimizeNoneAttr 0x55866e1e2d70 <col:30>
|-AccessSpecDecl 0x55866e1e2d98 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55866e1e2dc0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55866e1e2ec0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55866e1e2f10 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e1e2ea0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55866e1e2e80 <col:14> 'int' 48
|-CXXMethodDecl 0x55866e1e2f78 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55866e1e3018 <col:20>
| `-OptimizeNoneAttr 0x55866e1e3070 <col:30>
|-CXXMethodDecl 0x55866e1e30e8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55866e1e3188 <col:20>
| `-OptimizeNoneAttr 0x55866e1e31e0 <col:30>
|-CXXMethodDecl 0x55866e1e32a8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55866e1e3218 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55866e1e3448 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55866e1e35e8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55866e1e34f8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55866e1e3690 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55866e1e3790 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55866e1e3b40 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e3770 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55866e1e3750 <col:9> 'int' 0
| |-EnumConstantDecl 0x55866e1e3820 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55866e1e3b58 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e3800 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55866e1e37e0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55866e1e38b0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55866e1e3b70 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e3890 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55866e1e3870 <col:14> 'int' 2
| |-EnumConstantDecl 0x55866e1e3940 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55866e1e3b88 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e3920 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55866e1e3900 <col:14> 'int' 3
| |-EnumConstantDecl 0x55866e1e39d0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55866e1e3ba0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e39b0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55866e1e3990 <col:13> 'int' 4
| |-EnumConstantDecl 0x55866e1e3a60 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55866e1e3bb8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e3a40 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55866e1e3a20 <col:13> 'int' 5
| `-EnumConstantDecl 0x55866e1e3af0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55866e1e3bd0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e1e3ad0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55866e1e3ab0 <col:14> 'int' 6
|-CXXMethodDecl 0x55866e1e3c38 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55866e1e3cd8 <col:20>
| `-OptimizeNoneAttr 0x55866e1e3d30 <col:30>
|-CXXMethodDecl 0x55866e1e3e28 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55866e1e3d68 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55866e1e3ed0 <col:20>
| `-OptimizeNoneAttr 0x55866e1e3f28 <col:30>
|-CXXMethodDecl 0x55866e1e3f98 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55866e1e40c0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55866e1e4238 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55866e1e4170 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55866e1e4300 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55866e1e43c8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55866e1e4508 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55866e1e4478 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55866e1e45b0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55866e1e46b0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55866e1e48b0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e4690 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55866e1e4670 <col:23> 'int' 0
| |-EnumConstantDecl 0x55866e1e4740 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55866e1e48c8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e4720 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55866e1e4700 <col:45> 'int' 4
| |-EnumConstantDecl 0x55866e1e47d0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55866e1e48e0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e47b0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55866e1e4790 <col:24> 'int' 0
| `-EnumConstantDecl 0x55866e1e4860 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55866e1e48f8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e1e4840 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55866e1e4820 <col:47> 'int' 16
|-CXXMethodDecl 0x55866e1e4958 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55866e1e4ac8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55866e1e4a08 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55866e1e4b70 <col:20>
| `-OptimizeNoneAttr 0x55866e1e4bc8 <col:30>
|-CXXMethodDecl 0x55866e1e4c18 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55866e1f85a0 <col:18, col:36>
|   `-ReturnStmt 0x55866e1f8590 <col:20, col:33>
|     `-ImplicitCastExpr 0x55866e1f8578 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55866e1f8558 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55866e1f8528 <col:27> '<bound member function type>' ->xanno 0x55866e1e2c78
|           `-CXXThisExpr 0x55866e1f8518 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55866e1e4d10 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55866e1f86b0 <col:30, col:48>
|   `-ReturnStmt 0x55866e1f86a0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55866e1f8688 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55866e1f8668 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55866e1f8638 <col:39> '<bound member function type>' ->xanno 0x55866e1e2ad8
|           `-CXXThisExpr 0x55866e1f8628 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55866e1e4df8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55866e1f8848 <col:24, col:50>
|   `-ReturnStmt 0x55866e1f8838 <col:26, col:47>
|     `-UnaryOperator 0x55866e1f8820 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55866e1f8800 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55866e1f87e8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55866e1f8798 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55866e1edab8
|         |   `-CXXMemberCallExpr 0x55866e1f8778 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55866e1f8748 <col:34> '<bound member function type>' ->xanno 0x55866e1e2c78
|         |       `-CXXThisExpr 0x55866e1f8738 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55866e1f87c8 <col:46> 'int' 0
|-CXXMethodDecl 0x55866e1e4f00 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55866e1f8a18 <col:36, col:62>
|   `-ReturnStmt 0x55866e1f8a08 <col:38, col:59>
|     `-UnaryOperator 0x55866e1f89f0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55866e1f89d0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55866e1f89b8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55866e1f8930 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55866e1edab8
|         |   `-CXXMemberCallExpr 0x55866e1f8910 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55866e1f88e0 <col:46> '<bound member function type>' ->xanno 0x55866e1e2ad8
|         |       `-CXXThisExpr 0x55866e1f88d0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55866e1f8960 <col:58> 'int' 0
|-CXXMethodDecl 0x55866e1e5018 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55866e1f8bb0 <col:26, col:53>
|   `-ReturnStmt 0x55866e1f8ba0 <col:28, col:50>
|     `-UnaryOperator 0x55866e1f8b88 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55866e1f8b68 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55866e1f8b50 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55866e1f8b00 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55866e1eddb8
|         |   `-CXXMemberCallExpr 0x55866e1f8ae0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55866e1f8ab0 <col:36> '<bound member function type>' ->xanno 0x55866e1e2c78
|         |       `-CXXThisExpr 0x55866e1f8aa0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55866e1f8b30 <col:49> 'int' 0
|-CXXMethodDecl 0x55866e1e5138 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55866e1f8d88 <col:38, col:65>
|   `-ReturnStmt 0x55866e1f8d78 <col:40, col:62>
|     `-UnaryOperator 0x55866e1f8d60 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55866e1f8d40 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55866e1f8d28 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55866e1f8c98 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55866e1eddb8
|         |   `-CXXMemberCallExpr 0x55866e1f8c78 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55866e1f8c48 <col:48> '<bound member function type>' ->xanno 0x55866e1e2ad8
|         |       `-CXXThisExpr 0x55866e1f8c38 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55866e1f8cc8 <col:61> 'int' 0
|-CXXMethodDecl 0x55866e1e52e8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55866e1e51f0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55866e1f9458 <col:34, line:463:5>
|   |-ParenExpr 0x55866e1f92a0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55866e1f9270 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1f8ed8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1f8ea8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1f8df8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1f8de0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1f8da0 <col:23> 'int' lvalue ParmVar 0x55866e1e51f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1f8dc0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1f8e88 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55866e1f8e58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1f8e18 <col:33> 'int' lvalue ParmVar 0x55866e1e51f0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55866e1f8e70 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55866e1f8e38 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55866e1f8f38 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1f8f18 <col:56> 'int' 0
|   |   `-CallExpr 0x55866e1f91d0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55866e1f91b8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1f9198 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1f9210 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1f9028 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55866e1f9228 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1f9058 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1f9240 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1f9090 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55866e1f9258 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1f9180 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1f9168 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1f9128 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55866e1f9448 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55866e1f9430 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55866e1f9410 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55866e1f93e0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55866e1f9390 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55866e1edab8
|         |   `-CXXMemberCallExpr 0x55866e1f9370 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55866e1f9340 <col:9> '<bound member function type>' ->xanno 0x55866e1e2ad8
|         |       `-CXXThisExpr 0x55866e1f9330 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55866e1f93f8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55866e1f93c0 <col:21> 'int' lvalue ParmVar 0x55866e1e51f0 'i' 'int'
|-CXXMethodDecl 0x55866e1e5538 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55866e1e53a8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55866e1e5420 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55866e1f9ae8 <col:40, line:472:5>
|   |-ParenExpr 0x55866e1f9900 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55866e1f98d0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1f95b0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1f9580 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1f94d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1f94b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1f9478 <col:23> 'int' lvalue ParmVar 0x55866e1e53a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1f9498 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1f9560 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55866e1f9530 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1f94f0 <col:33> 'int' lvalue ParmVar 0x55866e1e53a8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55866e1f9548 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55866e1f9510 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55866e1f9610 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1f95f0 <col:56> 'int' 0
|   |   `-CallExpr 0x55866e1f9830 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55866e1f9818 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1f97f8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1f9870 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1f9680 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55866e1f9888 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1f96b0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1f98a0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1f96e8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55866e1f98b8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1f97e0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1f97c8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1f9788 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55866e1f9ac8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55866e1f9a70 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55866e1f9a40 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55866e1f99f0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55866e1edab8
|     | |   `-CXXMemberCallExpr 0x55866e1f99d0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55866e1f99a0 <col:2> '<bound member function type>' ->xanno 0x55866e1e2c78
|     | |       `-CXXThisExpr 0x55866e1f9990 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55866e1f9a58 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55866e1f9a20 <col:14> 'int' lvalue ParmVar 0x55866e1e53a8 'i' 'int'
|     `-ImplicitCastExpr 0x55866e1f9ab0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55866e1f9a90 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55866e1e5420 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55866e1e56f8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55866e1e5600 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55866e1fa268 <col:36, line:485:5>
|   |-ParenExpr 0x55866e1f9fd0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55866e1f9fa0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1f9c80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1f9c50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1f9b60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1f9b48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1f9b08 <col:23> 'int' lvalue ParmVar 0x55866e1e5600 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1f9b28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1f9c30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55866e1f9c18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1f9b80 <col:33> 'int' lvalue ParmVar 0x55866e1e5600 'i' 'int'
|   |   |     `-BinaryOperator 0x55866e1f9bf8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55866e1f9be0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55866e1f9ba0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55866e1f9bc0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55866e1f9ce0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1f9cc0 <col:60> 'int' 0
|   |   `-CallExpr 0x55866e1f9f00 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55866e1f9ee8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1f9ec8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1f9f40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1f9d50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55866e1f9f58 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1f9d88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1f9f70 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1f9dc0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55866e1f9f88 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1f9eb0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1f9e98 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1f9e58 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55866e1fa258 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55866e1fa240 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55866e1fa228 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55866e1fa1f8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55866e1fa198 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55866e1fa168 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55866e1fa0e0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55866e1ed990
|             |   `-CXXMemberCallExpr 0x55866e1fa0c0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55866e1fa090 <col:61> '<bound member function type>' ->xanno 0x55866e1e2ad8
|             |       `-CXXThisExpr 0x55866e1fa080 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55866e1fa180 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55866e1fa110 <col:74> 'int' lvalue ParmVar 0x55866e1e5600 'i' 'int'
|-CXXMethodDecl 0x55866e1e5948 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55866e1e57b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55866e1e5830 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55866e1fa9b8 <col:42, line:500:5>
|   |-ParenExpr 0x55866e1fa750 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55866e1fa720 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1fa400 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1fa3d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1fa2e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1fa2c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1fa288 <col:23> 'int' lvalue ParmVar 0x55866e1e57b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1fa2a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1fa3b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55866e1fa398 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1fa300 <col:33> 'int' lvalue ParmVar 0x55866e1e57b8 'i' 'int'
|   |   |     `-BinaryOperator 0x55866e1fa378 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55866e1fa360 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55866e1fa320 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55866e1fa340 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55866e1fa460 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1fa440 <col:60> 'int' 0
|   |   `-CallExpr 0x55866e1fa680 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55866e1fa668 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1fa648 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1fa6c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fa4d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55866e1fa6d8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fa508 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1fa6f0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1fa540 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55866e1fa708 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1fa630 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1fa618 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1fa5d8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55866e1fa998 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55866e1fa948 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55866e1fa918 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55866e1fa8c0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55866e1fa890 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55866e1fa840 <col:48, col:57> 'char [48]' lvalue ->c 0x55866e1ed990
|     |     |   `-CXXMemberCallExpr 0x55866e1fa820 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55866e1fa7f0 <col:48> '<bound member function type>' ->xanno 0x55866e1e2c78
|     |     |       `-CXXThisExpr 0x55866e1fa7e0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55866e1fa8a8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55866e1fa870 <col:61> 'int' lvalue ParmVar 0x55866e1e57b8 'i' 'int'
|     `-ImplicitCastExpr 0x55866e1fa980 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55866e1fa960 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55866e1e5830 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55866e1e5b08 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55866e1e5a10 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55866e1fb118 <col:35, line:513:5>
|   |-ParenExpr 0x55866e1fae28 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55866e1fadf8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1fab50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1fab20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1faa30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1faa18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1fa9d8 <col:23> 'int' lvalue ParmVar 0x55866e1e5a10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1fa9f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1fab00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55866e1faae8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1faa50 <col:33> 'int' lvalue ParmVar 0x55866e1e5a10 'i' 'int'
|   |   |     `-BinaryOperator 0x55866e1faac8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55866e1faab0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55866e1faa70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55866e1faa90 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55866e1fabb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1fab90 <col:60> 'int' 0
|   |   `-CallExpr 0x55866e1fad58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55866e1fad40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1fad20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1fad98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fac20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55866e1fadb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fac58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1fadc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1fac90 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55866e1fade0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1fad08 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1facf0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1facb0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55866e1fb108 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55866e1fb0f0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55866e1fb0d8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55866e1fb0a8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55866e1fb020 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55866e1faff0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55866e1fafa0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55866e1ed990
|             |   `-CXXMemberCallExpr 0x55866e1faf80 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55866e1faf50 <col:60> '<bound member function type>' ->xanno 0x55866e1e2ad8
|             |       `-CXXThisExpr 0x55866e1faf40 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55866e1fb008 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55866e1fafd0 <col:73> 'int' lvalue ParmVar 0x55866e1e5a10 'i' 'int'
|-CXXMethodDecl 0x55866e1e5d58 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55866e1e5bc8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55866e1e5c40 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55866e1fb838 <col:41, line:528:5>
|   |-ParenExpr 0x55866e1fb5c0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55866e1fb590 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1fb2b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1fb280 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1fb190 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1fb178 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1fb138 <col:23> 'int' lvalue ParmVar 0x55866e1e5bc8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1fb158 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1fb260 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55866e1fb248 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1fb1b0 <col:33> 'int' lvalue ParmVar 0x55866e1e5bc8 'i' 'int'
|   |   |     `-BinaryOperator 0x55866e1fb228 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55866e1fb210 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55866e1fb1d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55866e1fb1f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55866e1fb310 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1fb2f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55866e1fb4f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55866e1fb4d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1fb4b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1fb530 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fb380 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55866e1fb548 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fb3b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1fb560 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1fb3f0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55866e1fb578 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1fb4a0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1fb488 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1fb448 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55866e1fb818 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55866e1fb7c8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55866e1fb798 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55866e1fb740 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55866e1fb700 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55866e1fb6b0 <col:47, col:56> 'char [48]' lvalue ->c 0x55866e1ed990
|     |     |   `-CXXMemberCallExpr 0x55866e1fb690 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55866e1fb660 <col:47> '<bound member function type>' ->xanno 0x55866e1e2c78
|     |     |       `-CXXThisExpr 0x55866e1fb650 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55866e1fb718 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55866e1fb6e0 <col:60> 'int' lvalue ParmVar 0x55866e1e5bc8 'i' 'int'
|     `-ImplicitCastExpr 0x55866e1fb800 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55866e1fb7e0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55866e1e5c40 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55866e1e5f18 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55866e1e5e20 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55866e1fbf08 <col:36, line:541:5>
|   |-ParenExpr 0x55866e1fbca8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55866e1fbc78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1fb9d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1fb9a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1fb8b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1fb898 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1fb858 <col:23> 'int' lvalue ParmVar 0x55866e1e5e20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1fb878 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1fb980 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55866e1fb968 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1fb8d0 <col:33> 'int' lvalue ParmVar 0x55866e1e5e20 'i' 'int'
|   |   |     `-BinaryOperator 0x55866e1fb948 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55866e1fb930 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55866e1fb8f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55866e1fb910 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55866e1fba30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1fba10 <col:60> 'int' 0
|   |   `-CallExpr 0x55866e1fbbd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55866e1fbbc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1fbba0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1fbc18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fbaa0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55866e1fbc30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fbad8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1fbc48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1fbb10 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55866e1fbc60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1fbb88 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1fbb70 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1fbb30 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55866e1fbef8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55866e1fbee0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55866e1fbec8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55866e1fbe98 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55866e1fbe40 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55866e1fbe10 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55866e1fbdc0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55866e1ed990
|             |   `-CXXMemberCallExpr 0x55866e1fbda0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55866e1fbd70 <col:61> '<bound member function type>' ->xanno 0x55866e1e2ad8
|             |       `-CXXThisExpr 0x55866e1fbd60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55866e1fbe28 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55866e1fbdf0 <col:74> 'int' lvalue ParmVar 0x55866e1e5e20 'i' 'int'
|-CXXMethodDecl 0x55866e1e60e8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55866e1e5fd8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55866e1e6050 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55866e1e6198 <col:20>
| `-OptimizeNoneAttr 0x55866e1e61f0 <col:30>
|-CXXMethodDecl 0x55866e1e6328 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55866e1e6230 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55866e1fc5d8 <col:35, line:562:5>
|   |-ParenExpr 0x55866e1fc378 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55866e1fc348 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1fc0a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1fc070 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1fbf80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1fbf68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1fbf28 <col:23> 'int' lvalue ParmVar 0x55866e1e6230 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1fbf48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1fc050 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55866e1fc038 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1fbfa0 <col:33> 'int' lvalue ParmVar 0x55866e1e6230 'i' 'int'
|   |   |     `-BinaryOperator 0x55866e1fc018 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55866e1fc000 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55866e1fbfc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55866e1fbfe0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55866e1fc100 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1fc0e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55866e1fc2a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55866e1fc290 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1fc270 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1fc2e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fc170 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55866e1fc300 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fc1a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1fc318 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1fc1e0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55866e1fc330 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1fc258 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1fc240 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1fc200 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55866e1fc5c8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55866e1fc5b0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55866e1fc598 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55866e1fc568 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55866e1fc510 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55866e1fc4e0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55866e1fc490 <col:60, col:69> 'char const[48]' lvalue ->c 0x55866e1ed990
|             |   `-CXXMemberCallExpr 0x55866e1fc470 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55866e1fc440 <col:60> '<bound member function type>' ->xanno 0x55866e1e2ad8
|             |       `-CXXThisExpr 0x55866e1fc430 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55866e1fc4f8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55866e1fc4c0 <col:73> 'int' lvalue ParmVar 0x55866e1e6230 'i' 'int'
|-CXXMethodDecl 0x55866e1e6538 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55866e1e63e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55866e1e6460 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55866e1fccb8 <col:41, line:577:5>
|   |-ParenExpr 0x55866e1fca48 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55866e1fca18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1fc770 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1fc740 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1fc650 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1fc638 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1fc5f8 <col:23> 'int' lvalue ParmVar 0x55866e1e63e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1fc618 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1fc720 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55866e1fc708 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1fc670 <col:33> 'int' lvalue ParmVar 0x55866e1e63e8 'i' 'int'
|   |   |     `-BinaryOperator 0x55866e1fc6e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55866e1fc6d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55866e1fc690 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55866e1fc6b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55866e1fc7d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1fc7b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55866e1fc978 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55866e1fc960 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1fc940 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1fc9b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fc840 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55866e1fc9d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fc878 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1fc9e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1fc8b0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55866e1fca00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1fc928 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1fc910 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1fc8d0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55866e1fcc98 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55866e1fcc48 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55866e1fcc18 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55866e1fcbb8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55866e1fcb88 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55866e1fcb38 <col:47, col:56> 'char [48]' lvalue ->c 0x55866e1ed990
|     |     |   `-CXXMemberCallExpr 0x55866e1fcb18 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55866e1fcae8 <col:47> '<bound member function type>' ->xanno 0x55866e1e2c78
|     |     |       `-CXXThisExpr 0x55866e1fcad8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55866e1fcba0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55866e1fcb68 <col:60> 'int' lvalue ParmVar 0x55866e1e63e8 'i' 'int'
|     `-ImplicitCastExpr 0x55866e1fcc80 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55866e1fcc60 <col:65> 'int32_t':'int' lvalue ParmVar 0x55866e1e6460 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55866e1e66f8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55866e1e6600 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55866e1fd3e8 <col:36, line:591:5>
|   |-ParenExpr 0x55866e1fd128 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55866e1fd0f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1fce50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1fce20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1fcd30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1fcd18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1fccd8 <col:23> 'int' lvalue ParmVar 0x55866e1e6600 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1fccf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1fce00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55866e1fcde8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1fcd50 <col:33> 'int' lvalue ParmVar 0x55866e1e6600 'i' 'int'
|   |   |     `-BinaryOperator 0x55866e1fcdc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55866e1fcdb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55866e1fcd70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55866e1fcd90 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55866e1fceb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1fce90 <col:60> 'int' 0
|   |   `-CallExpr 0x55866e1fd058 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55866e1fd040 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1fd020 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1fd098 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fcf20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55866e1fd0b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fcf58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1fd0c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1fcf90 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55866e1fd0e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1fd008 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1fcff0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1fcfb0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55866e1fd3d8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55866e1fd3c0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55866e1fd3a8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55866e1fd378 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55866e1fd2f0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55866e1fd2c0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55866e1fd270 <col:61, col:70> 'char const[48]' lvalue ->c 0x55866e1ed990
|             |   `-CXXMemberCallExpr 0x55866e1fd250 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55866e1fd220 <col:61> '<bound member function type>' ->xanno 0x55866e1e2ad8
|             |       `-CXXThisExpr 0x55866e1fd210 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55866e1fd2d8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55866e1fd2a0 <col:74> 'int' lvalue ParmVar 0x55866e1e6600 'i' 'int'
|-CXXMethodDecl 0x55866e1e6948 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55866e1e67b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55866e1e6830 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55866e1fdac8 <col:42, line:606:5>
|   |-ParenExpr 0x55866e1fd858 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55866e1fd828 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1fd580 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1fd550 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1fd460 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1fd448 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1fd408 <col:23> 'int' lvalue ParmVar 0x55866e1e67b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1fd428 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1fd530 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55866e1fd518 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1fd480 <col:33> 'int' lvalue ParmVar 0x55866e1e67b8 'i' 'int'
|   |   |     `-BinaryOperator 0x55866e1fd4f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55866e1fd4e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55866e1fd4a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55866e1fd4c0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55866e1fd5e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1fd5c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55866e1fd788 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55866e1fd770 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1fd750 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1fd7c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fd650 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55866e1fd7e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fd688 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1fd7f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1fd6c0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55866e1fd810 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1fd738 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1fd720 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1fd6e0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55866e1fdaa8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55866e1fda58 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55866e1fda28 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55866e1fd9c8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55866e1fd998 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55866e1fd948 <col:48, col:57> 'char [48]' lvalue ->c 0x55866e1ed990
|     |     |   `-CXXMemberCallExpr 0x55866e1fd928 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55866e1fd8f8 <col:48> '<bound member function type>' ->xanno 0x55866e1e2c78
|     |     |       `-CXXThisExpr 0x55866e1fd8e8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55866e1fd9b0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55866e1fd978 <col:61> 'int' lvalue ParmVar 0x55866e1e67b8 'i' 'int'
|     `-ImplicitCastExpr 0x55866e1fda90 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55866e1fda70 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55866e1e6830 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55866e1e6ae0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55866e1e6a10 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55866e1fe338 <col:33, line:620:5>
|   |-ParenExpr 0x55866e1fe0b0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55866e1fe080 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1fdcd0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1fdca0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1fdb40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1fdb28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1fdae8 <col:23> 'int' lvalue ParmVar 0x55866e1e6a10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1fdb08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1fdc80 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55866e1fdc68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1fdb60 <col:33> 'int' lvalue ParmVar 0x55866e1e6a10 'i' 'int'
|   |   |     `-BinaryOperator 0x55866e1fdc48 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55866e1fdc30 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55866e1fdb80 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55866e1fdc08 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55866e1fdbf0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55866e1fdbb8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55866e1fdd30 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1fdd10 <col:79> 'int' 0
|   |   `-CallExpr 0x55866e1fdfe0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55866e1fdfc8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1fdfa8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1fe020 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fde18 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55866e1fe038 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fde60 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1fe050 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1fde98 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55866e1fe068 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1fdf90 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1fdf78 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1fdf38 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55866e1fe328 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55866e1fe310 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55866e1fe2f8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55866e1fe2c8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55866e1fe240 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55866e1fe210 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55866e1fe1c0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55866e1ed990
|             |   `-CXXMemberCallExpr 0x55866e1fe1a0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55866e1fe170 <col:67> '<bound member function type>' ->xanno 0x55866e1e2ad8
|             |       `-CXXThisExpr 0x55866e1fe160 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55866e1fe228 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55866e1fe1f0 <col:80> 'int' lvalue ParmVar 0x55866e1e6a10 'i' 'int'
|-CXXMethodDecl 0x55866e1e6cf8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55866e1e6ba0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55866e1e6c20 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55866e1feb60 <col:45, line:635:5>
|   |-ParenExpr 0x55866e1fe8a8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55866e1fe878 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55866e1fe540 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55866e1fe510 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55866e1fe3b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55866e1fe398 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55866e1fe358 <col:23> 'int' lvalue ParmVar 0x55866e1e6ba0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55866e1fe378 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55866e1fe4f0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55866e1fe4d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55866e1fe3d0 <col:33> 'int' lvalue ParmVar 0x55866e1e6ba0 'i' 'int'
|   |   |     `-BinaryOperator 0x55866e1fe4b8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55866e1fe4a0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55866e1fe3f0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55866e1e2ec0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55866e1fe478 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55866e1fe460 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55866e1fe428 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55866e1fe5a0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55866e1fe580 <col:79> 'int' 0
|   |   `-CallExpr 0x55866e1fe7d8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55866e1fe7c0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55866e1fe7a0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55866e1fe818 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fe610 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55866e1fe830 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55866e1fe658 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55866e1fe848 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55866e1fe690 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55866e1fe860 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55866e1fe788 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55866e1fe770 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55866e1fe728 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55866e1feb40 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55866e1feaa8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55866e1fea78 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55866e1fea18 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55866e1fe9e8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55866e1fe998 <col:54, col:63> 'char [48]' lvalue ->c 0x55866e1ed990
|     |     |   `-CXXMemberCallExpr 0x55866e1fe978 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55866e1fe948 <col:54> '<bound member function type>' ->xanno 0x55866e1e2c78
|     |     |       `-CXXThisExpr 0x55866e1fe938 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55866e1fea00 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55866e1fe9c8 <col:67> 'int' lvalue ParmVar 0x55866e1e6ba0 'i' 'int'
|     `-CXXConstCastExpr 0x55866e1feb10 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55866e1feaf8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55866e1feac0 <col:91> 'const void *' lvalue ParmVar 0x55866e1e6c20 'x' 'const void *'
|-CXXMethodDecl 0x55866e1e6dc8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55866e1febe8 <col:34, line:640:5>
|   `-ReturnStmt 0x55866e1febd8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55866e1febc0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55866e1feb90 <col:16> 'Packet *' lvalue ->_data_packet 0x55866e1ee548
|         `-CXXThisExpr 0x55866e1feb80 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55866e1e6f08 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55866e1e6e78 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55866e1f7ca8 <col:46> 'bool' true
|-CXXMethodDecl 0x55866e1e7088 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55866e1e6fc0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55866e1e7130 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55866e1e78e0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55866e1e7230 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55866e1e7950 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e7210 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55866e1e71f0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55866e1dc390 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55866e1e72c0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55866e1e7968 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e72a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55866e1e7280 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55866e1dc420 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55866e1e7350 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55866e1e7980 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e7330 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55866e1e7310 <col:21> 'int' 0
| |-EnumConstantDecl 0x55866e1e73e0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55866e1e7998 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e73c0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55866e1e73a0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55866e1e7470 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55866e1e79b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e7450 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55866e1e7430 <col:21> 'int' 16
| |-EnumConstantDecl 0x55866e1e7500 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55866e1e79c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e74e0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55866e1e74c0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55866e1e7590 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55866e1e79e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e7570 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55866e1e7550 <col:19> 'int' EnumConstant 0x55866e1e73e0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55866e1e7620 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55866e1e79f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e7600 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55866e1e75e0 <col:19> 'int' EnumConstant 0x55866e1e7500 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55866e1e76f0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55866e1e7a10 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e76d0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55866e1e76b0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55866e1e7670 <col:23> 'int' EnumConstant 0x55866e1e7620 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55866e1e7690 <col:40> 'int' 2
| |-EnumConstantDecl 0x55866e1e77c0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55866e1e7a28 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55866e1e77a0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55866e1e7780 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55866e1e7740 <col:23> 'int' EnumConstant 0x55866e1e7620 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55866e1e7760 <col:40> 'int' 4
| `-EnumConstantDecl 0x55866e1e7890 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55866e1e7a40 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e1e7870 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55866e1e7850 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55866e1e7810 <col:23> 'int' EnumConstant 0x55866e1e7620 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55866e1e7830 <col:40> 'int' 8
|-CXXMethodDecl 0x55866e1e7a80 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55866e1e7b20 <col:68> "" ""
|-CXXMethodDecl 0x55866e1e7bb8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55866e1e7c58 <col:45> "" ""
|-CXXMethodDecl 0x55866e1e7cf0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55866e1e7d90 <col:57> "" ""
|-CXXMethodDecl 0x55866e1e7e28 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55866e1e7ec8 <col:45> "" ""
|-CXXMethodDecl 0x55866e1e7f60 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55866e1e8000 <col:57> "" ""
|-CXXMethodDecl 0x55866e1e8090 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55866e1e8130 <col:51> "" ""
|-CXXMethodDecl 0x55866e1e81c0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55866e1e8260 <col:63> "" ""
|-CXXMethodDecl 0x55866e1e82f0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55866e1e8390 <col:53> "" ""
|-CXXMethodDecl 0x55866e1e8420 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55866e1e84c0 <col:65> "" ""
|-CXXMethodDecl 0x55866e1e85d8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55866e1e8548 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55866e1e8680 <col:61> "" ""
|-CXXMethodDecl 0x55866e1e8818 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55866e1e8708 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55866e1e8780 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55866e1e88c8 <col:67> "" ""
|-CXXMethodDecl 0x55866e1e89e0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55866e1e8950 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55866e1e8a88 <col:63> "" ""
|-CXXMethodDecl 0x55866e1e8c20 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55866e1e8b10 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55866e1e8b88 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55866e1e8cd0 <col:69> "" ""
|-CXXMethodDecl 0x55866e1e8de8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55866e1e8d58 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55866e1e8e90 <col:63> "" ""
|-CXXMethodDecl 0x55866e1eb568 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55866e1eb458 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55866e1eb4d0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55866e1eb618 <col:69> "" ""
|-CXXMethodDecl 0x55866e1eb730 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55866e1eb6a0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55866e1eb7d8 <col:62> "" ""
|-CXXMethodDecl 0x55866e1eb970 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55866e1eb860 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55866e1eb8d8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55866e1eba20 <col:68> "" ""
|-CXXMethodDecl 0x55866e1ebb38 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55866e1ebaa8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55866e1ebbe0 <col:63> "" ""
|-CXXMethodDecl 0x55866e1ebd78 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55866e1ebc68 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55866e1ebce0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55866e1ebe28 <col:69> "" ""
|-CXXMethodDecl 0x55866e1ebeb8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55866e1ebf58 <col:64> "" ""
|-CXXMethodDecl 0x55866e1ebfe8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55866e1ec088 <col:52> "" ""
|-CXXMethodDecl 0x55866e1ec118 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55866e1ec1b8 <col:67> "" ""
|-CXXMethodDecl 0x55866e1ec248 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55866e1ec2e8 <col:55> "" ""
|-CXXMethodDecl 0x55866e1ec400 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55866e1ec370 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55866e1ec4a8 <col:58> "" ""
|-CXXMethodDecl 0x55866e1ec640 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55866e1ec530 <col:33> col:36 'int'
| |-ParmVarDecl 0x55866e1ec5a8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55866e1ec6f0 <col:62> "" ""
|-CXXMethodDecl 0x55866e1ec808 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55866e1ec778 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55866e1ec8b0 <col:58> "" ""
|-CXXMethodDecl 0x55866e1eca48 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55866e1ec938 <col:33> col:36 'int'
| |-ParmVarDecl 0x55866e1ec9b0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55866e1ecaf8 <col:62> "" ""
|-CXXMethodDecl 0x55866e1ecc10 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55866e1ecb80 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55866e1eccb8 <col:60> "" ""
|-CXXMethodDecl 0x55866e1ece50 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55866e1ecd40 <col:34> col:37 'int'
| |-ParmVarDecl 0x55866e1ecdb8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55866e1ecf00 <col:64> "" ""
|-CXXMethodDecl 0x55866e1ed018 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55866e1ecf88 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55866e1ed0c0 <col:58> "" ""
|-CXXMethodDecl 0x55866e1ed258 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55866e1ed148 <col:33> col:36 'int'
| |-ParmVarDecl 0x55866e1ed1c0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55866e1ed308 <col:62> "" ""
|-CXXMethodDecl 0x55866e1ed420 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55866e1ed390 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55866e1ed4c8 <col:59> "" ""
|-CXXMethodDecl 0x55866e1ed660 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55866e1ed550 <col:33> col:36 'int'
| |-ParmVarDecl 0x55866e1ed5c8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55866e1ed710 <col:63> "" ""
|-AccessSpecDecl 0x55866e1ed780 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55866e1ed7a8 prev 0x55866e1e29b0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55866e1ed8a0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55866e1ed990 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55866e1edab8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55866e1edc38 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55866e1eddb8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55866e1edf38 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55866e1fed68 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55866e1ff5d8 <col:11>
| |-CXXDestructorDecl 0x55866e1fee40 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55866e1fef78 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55866e1fef78
| | `-ParmVarDecl 0x55866e1ff088 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55866e1ff128 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55866e1ff128
| | `-ParmVarDecl 0x55866e1ff238 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55866e201ff8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55866e202108 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55866e202388 <col:11>
| |   `-ReturnStmt 0x55866e202378 <col:11>
| |     `-UnaryOperator 0x55866e202360 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55866e202350 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55866e202178 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55866e202178
|   `-ParmVarDecl 0x55866e202288 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55866e1edfa0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55866e1ee0b8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55866e1ee158 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55866e1ee1c0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55866e1ee228 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55866e1ee290 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55866e1ee2f0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55866e1ee3b0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55866e1ee410 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55866e1ee470 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55866e1fec78 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55866e1ee158 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55866e1ff5e8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55866e1ff640 <col:12>
| |-CXXConstructorDecl 0x55866e1ff2a8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55866e1ff2a8
| | `-ParmVarDecl 0x55866e1ff3b8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55866e1ff458 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55866e1ff458
| | `-ParmVarDecl 0x55866e1ff568 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55866e2016e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55866e1ee4e8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55866e1ee548 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55866e1ee5b0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55866e1ee618 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55866e1ee680 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55866e1ee6e8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55866e1ee748 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55866e1ee7a8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55866e1ee810 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55866e1ee898 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55866e1ee4e8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55866e1fec10 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55866e1ee748 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55866e1ff650 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55866e1ff6b0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55866e1eea38 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55866e1ee978 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55866e1eeb30 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55866e1eed18 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55866e1eec20 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55866e1eefe8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55866e1eedd0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55866e1eee48 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55866e1eeec0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1ef208 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55866e1ef0b8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55866e1ef130 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55866e1f77e8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55866e1ef2c8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55866e1ef340 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55866e1ef3b8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55866e1f7940 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55866e1f78b0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e1f7a88 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55866e1f79f8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55866e1f7b80 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e24de88 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55866e24dfb8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55866e24eaa8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866e199398 prev 0x55866e214d30 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55866e199490 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55866e199520 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55866e199580 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55866e199628 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55866e199748 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55866e1998e8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55866e199828 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55866e199b38 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55866e1999a8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55866e199a28 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55866e199c90 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55866e199c00 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55866e199e18 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55866e199d50 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55866e199fc8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55866e199f08 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55866e19a0c0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55866e24ec80 <col:21, line:58:5>
|   `-IfStmt 0x55866e24ec68 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55866e24ebd0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55866e24eba0 <col:6> '<bound member function type>' ->scheduled 0x55866e19a918
|     |   `-ImplicitCastExpr 0x55866e24ebf0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55866e24eb90 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55866e24ec48 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55866e24ec18 <col:6> '<bound member function type>' ->unschedule 0x55866e19bf40
|         `-CXXThisExpr 0x55866e24ec08 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55866e19a1c0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55866e24ee20 <col:26, line:65:5>
|   |-BinaryOperator 0x55866e24ed40 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55866e24ecd8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55866e24dfb8
|   | | `-MemberExpr 0x55866e24eca8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55866e24e078
|   | |   `-CXXThisExpr 0x55866e24ec98 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55866e24ed28 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55866e24ed08 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55866e24e4d8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55866e24ee00 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55866e24ed70 <col:2> 'void *' lvalue ->_thunk 0x55866e24e0f8
|     | `-CXXThisExpr 0x55866e24ed60 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55866e24edd8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55866e24eda0 <col:20> 'int' 1
|-CXXMethodDecl 0x55866e19a300 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55866e19a270 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55866e24ef80 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55866e24ee70 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55866e24ee40 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55866e19a270 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55866e24ef60 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55866e24ef30 <col:2> '<bound member function type>' ->assign 0x55866e19a1c0
|       `-CXXThisExpr 0x55866e24ef20 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55866e19a4d0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55866e19a3b8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55866e19a438 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55866e24f100 <col:58, line:79:5>
|   |-BinaryOperator 0x55866e24f048 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55866e24efe0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55866e24dfb8
|   | | `-MemberExpr 0x55866e24efb0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55866e24e078
|   | |   `-CXXThisExpr 0x55866e24efa0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55866e24f030 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55866e24f010 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55866e19a3b8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55866e24f0e0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55866e24f078 <col:2> 'void *' lvalue ->_thunk 0x55866e24e0f8
|     | `-CXXThisExpr 0x55866e24f068 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55866e24f0c8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55866e24f0a8 <col:11> 'void *' lvalue ParmVar 0x55866e19a438 'user_data' 'void *'
|-CXXMethodDecl 0x55866e19a620 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55866e19a590 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55866e24f298 <col:35, line:87:5>
|   |-BinaryOperator 0x55866e24f1c8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55866e24f160 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55866e24dfb8
|   | | `-MemberExpr 0x55866e24f130 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55866e24e078
|   | |   `-CXXThisExpr 0x55866e24f120 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55866e24f1b0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55866e24f190 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55866e24e6b0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55866e24f278 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55866e24f1f8 <col:2> 'void *' lvalue ->_thunk 0x55866e24e0f8
|     | `-CXXThisExpr 0x55866e24f1e8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55866e24f260 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55866e24f248 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55866e24f228 <col:11> 'Element *' lvalue ParmVar 0x55866e19a590 'element' 'Element *'
|-CXXMethodDecl 0x55866e19a768 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55866e19a6d8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55866e24f430 <col:29, line:94:5>
|   |-BinaryOperator 0x55866e24f360 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55866e24f2f8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55866e24dfb8
|   | | `-MemberExpr 0x55866e24f2c8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55866e24e078
|   | |   `-CXXThisExpr 0x55866e24f2b8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55866e24f348 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55866e24f328 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55866e24e888 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55866e24f410 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55866e24f390 <col:2> 'void *' lvalue ->_thunk 0x55866e24e0f8
|     | `-CXXThisExpr 0x55866e24f380 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55866e24f3f8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55866e24f3e0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55866e24f3c0 <col:11> 'Task *' lvalue ParmVar 0x55866e19a6d8 'task' 'Task *'
|-CXXMethodDecl 0x55866e19a858 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55866e24f510 <col:37, line:100:5>
|   `-ReturnStmt 0x55866e24f500 <line:99:2, col:19>
|     `-BinaryOperator 0x55866e24f4e0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55866e24f4b0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55866e24f460 <col:9> 'Element *const' lvalue ->_owner 0x55866e24e158
|       |   `-CXXThisExpr 0x55866e24f450 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55866e24f4c8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55866e24f490 <col:19> 'int' 0
|-CXXMethodDecl 0x55866e19a918 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55866e24f5d0 <col:35, line:105:5>
|   `-ReturnStmt 0x55866e24f5c0 <line:104:2, col:23>
|     `-BinaryOperator 0x55866e24f5a0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55866e24f588 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55866e24f538 <col:9> 'const int' lvalue ->_schedpos1 0x55866e24ddd8
|       |   `-CXXThisExpr 0x55866e24f528 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55866e24f568 <col:23> 'int' 0
|-CXXMethodDecl 0x55866e19a9d8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55866e24f638 <col:51, line:118:5>
|   `-ReturnStmt 0x55866e24f628 <line:117:2, col:9>
|     `-MemberExpr 0x55866e24f5f8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55866e24de38
|       `-CXXThisExpr 0x55866e24f5e8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55866e19aa98 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55866e24fb90 <col:37, line:136:5>
|   `-IfStmt 0x55866e24fb68 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55866e24f6f8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55866e24f6e0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55866e24f6c0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55866e24f690 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55866e1a6e08
|     |       `-MemberExpr 0x55866e24f660 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55866e24de38
|     |         `-CXXThisExpr 0x55866e24f650 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55866e24fad8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55866e24fac0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55866e24fa90 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55866e24fa78 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55866e24fa40 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55866e24fa28 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55866e24fa08 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55866e1d55e0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55866e24f9a8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55866e24f990 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55866e24f8b8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55866e24f8a0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55866e24f880 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55866e1d52a0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55866e24f820 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55866e24f720 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55866e24de38
|     |         |     |   `-CXXThisExpr 0x55866e24f710 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55866e24f868 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55866e24f850 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55866e24f800 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55866e24f7e8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55866e24f788 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55866e1c8900 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55866e24f9f0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55866e24f9d8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55866e24f970 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55866e24f958 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55866e24f928 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55866e023e50 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55866e24fb58 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55866e24fb28 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55866e24faf8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55866e24de38
|           `-CXXThisExpr 0x55866e24fae8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55866e19ab58 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55866e24fc78 <col:35, line:141:5>
|   `-ReturnStmt 0x55866e24fc68 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55866e24fc30 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55866e24fc00 <col:9, col:17> '<bound member function type>' ->router 0x55866e227490
|         `-ImplicitCastExpr 0x55866e24fc50 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55866e24fbe8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55866e24fbb8 <col:9> 'Element *const' lvalue ->_owner 0x55866e24e158
|               `-CXXThisExpr 0x55866e24fba8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55866e19ac18 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55866e24fcf8 <col:37, line:146:5>
|   `-ReturnStmt 0x55866e24fce8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55866e24fcd0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55866e24fca0 <col:9> 'Element *const' lvalue ->_owner 0x55866e24e158
|         `-CXXThisExpr 0x55866e24fc90 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55866e19acd8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55866e24fd78 <col:41, line:151:5>
|   `-ReturnStmt 0x55866e24fd68 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55866e24fd50 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55866e24fd20 <col:9> 'RouterThread *const' lvalue ->_thread 0x55866e24e1b8
|         `-CXXThisExpr 0x55866e24fd10 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55866e19ada0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55866e19af60 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55866e19ae50 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55866e19aec8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55866e24ea98 <col:50> 'bool' false
|-CXXMethodDecl 0x55866e19b0e8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55866e19b020 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55866e19b230 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55866e19b1a0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55866e19b378 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55866e19b2e8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55866e19b4c0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55866e19b430 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55866e19b608 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55866e19b578 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55866e19b6d0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55866e24fee0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55866e24fec8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55866e24fe70 <col:2, col:47> 'void'
|       |-MemberExpr 0x55866e24fda0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55866e19b230
|       | `-CXXThisExpr 0x55866e24fd90 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55866e24feb0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55866e24fe98 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55866e24fe50 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55866e24fe38 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55866e24fe08 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55866e023e50 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55866e19b810 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55866e19b780 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55866e19b958 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55866e19b8c8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e250068 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55866e250050 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55866e24fff8 <col:2, col:40> 'void'
|       |-MemberExpr 0x55866e24ff08 <col:2> '<bound member function type>' ->schedule_after 0x55866e19b810
|       | `-CXXThisExpr 0x55866e24fef8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55866e250038 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55866e250020 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55866e24ffb8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55866e24ff88 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55866e24ff48 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e19b8c8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55866e24ffa0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55866e24ff68 <col:38> 'int' 0
|-CXXMethodDecl 0x55866e19baa0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55866e19ba10 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e2502d8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55866e2502c0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55866e250268 <col:2, col:49> 'void'
|       |-MemberExpr 0x55866e250090 <col:2> '<bound member function type>' ->schedule_after 0x55866e19b810
|       | `-CXXThisExpr 0x55866e250080 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55866e2502a8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55866e250290 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55866e250210 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55866e2501f8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55866e250168 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55866e1a8bf8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55866e250250 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55866e250238 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55866e250148 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e19ba10 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e19bbe8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55866e19bb58 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55866e2504b8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55866e2504a0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55866e250448 <col:2, col:38> 'void'
|       |-MemberExpr 0x55866e250300 <col:2> '<bound member function type>' ->schedule_at_steady 0x55866e19b230
|       | `-CXXThisExpr 0x55866e2502f0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55866e250488 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55866e250470 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55866e250410 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55866e2503f8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55866e2503d8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55866e1d52a0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55866e2503a8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55866e250390 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55866e250340 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55866e24de38
|             |     `-CXXThisExpr 0x55866e250330 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55866e250370 <col:33> 'const Timestamp' lvalue ParmVar 0x55866e19bb58 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55866e19bd30 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55866e19bca0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e250790 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55866e250778 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55866e250720 <col:2, col:79> 'void'
|       |-MemberExpr 0x55866e2504e0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55866e19b230
|       | `-CXXThisExpr 0x55866e2504d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55866e250760 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55866e250748 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55866e2506e0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55866e250618 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55866e250600 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55866e250590 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55866e250560 <col:31, col:41> '<bound member function type>' .sec 0x55866e025948
|             | |     `-ImplicitCastExpr 0x55866e2505b0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55866e250530 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55866e24de38
|             | |         `-CXXThisExpr 0x55866e250520 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55866e2505e8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55866e2505c8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e19bca0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55866e2506a8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55866e250678 <col:60, col:70> '<bound member function type>' .subsec 0x55866e026040
|                 `-ImplicitCastExpr 0x55866e2506c8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55866e250648 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55866e24de38
|                     `-CXXThisExpr 0x55866e250638 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55866e19be78 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55866e19bde8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55866e250ac8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55866e250ab0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55866e250a58 <col:2, col:65> 'void'
|       |-MemberExpr 0x55866e2507b8 <col:2> '<bound member function type>' ->schedule_at_steady 0x55866e19b230
|       | `-CXXThisExpr 0x55866e2507a8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55866e250a98 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55866e250a80 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55866e250a20 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55866e250a08 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55866e2509e8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55866e1d52a0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55866e250988 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55866e250970 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55866e2507f8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55866e24de38
|             |     `-CXXThisExpr 0x55866e2507e8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55866e2509d0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55866e2509b8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55866e250918 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55866e250900 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55866e2508d0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55866e1a8bf8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55866e250958 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55866e250940 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55866e2508b0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55866e19bde8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55866e19bf40 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55866e19c000 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55866e250f90 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55866e250b20 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55866e250af0 <col:2> '<bound member function type>' ->unschedule 0x55866e19bf40
|   |   `-CXXThisExpr 0x55866e250ae0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55866e250f78 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55866e250f40 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55866e250f28 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55866e250bd8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55866debcee8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55866e250b50 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55866e24de38
|       | `-CXXThisExpr 0x55866e250b40 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55866e250bc0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55866e250b90 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55866e19c0c0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55866e2512e8 <col:42, line:310:5>
|   |-IfStmt 0x55866e251130 <line:306:2, line:307:23>
|   | |-CallExpr 0x55866e251060 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55866e251048 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55866e250fe8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55866e1c6d70 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55866e251120 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55866e251108 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55866e2510d8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55866e2510c0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55866e251090 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55866e2512d8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55866e2512c0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55866e251290 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55866e251278 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55866e251238 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55866e251220 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55866e2511f0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55866e1a8f10 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55866e251260 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55866e2511d0 <col:30> 'int' 500
|-CXXMethodDecl 0x55866e19c200 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55866e19c170 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55866e24d690 <col:69> "" ""
|-CXXMethodDecl 0x55866e24d7a0 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55866e24d710 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55866e24d848 <col:70> "" ""
|-CXXMethodDecl 0x55866e24d958 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55866e24d8c8 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55866e24da00 <col:71> "" ""
|-CXXMethodDecl 0x55866e24db10 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55866e24da80 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55866e24dbb8 <col:72> "" ""
|-EnumDecl 0x55866e24dc28 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55866e24dd30 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55866e24dd80 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866e24dd10 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55866e24dcf0 <col:25> 'int' 1
|-AccessSpecDecl 0x55866e24dd98 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55866e24ddd8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55866e24de38 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55866e24de88 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55866e24dfb8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55866e24eaa8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55866e24e078 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55866e24e0f8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55866e24e158 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55866e24e1b8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55866e24e308 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55866e24e218 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55866e24e4d8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55866e24e3c0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55866e24e440 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55866e24e6b0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55866e24e598 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55866e24e618 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55866e24e888 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55866e24e770 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55866e24e7f0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55866e24ea58 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866dfe8fb0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55866dfe90c8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55866dfe9168 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55866dfe91c8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55866dfe9228 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55866dfe92d8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866dfe95e0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55866dfe96f8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55866dfe97a0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55866dfe9808 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55866dfe9898 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55866dfef930 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55866dfefd68 <col:12>
|-CXXConstructorDecl 0x55866dfefa38 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55866dfefb48 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55866dfe97a0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55866dff22f0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55866dff22c0 <col:12> 'const char *const' lvalue .data 0x55866dfe97a0
| |     `-DeclRefExpr 0x55866dff22a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55866dfefb48 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55866dfe9808 'length' 'int'
| | `-ImplicitCastExpr 0x55866dff2380 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55866dff2350 <col:12> 'const int' lvalue .length 0x55866dfe9808
| |     `-DeclRefExpr 0x55866dff2330 <col:12> 'const String::rep_t' lvalue ParmVar 0x55866dfefb48 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55866dfe9898 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55866dff2410 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55866dff23e0 <col:12> 'String::memo_t *const' lvalue .memo 0x55866dfe9898
| |     `-DeclRefExpr 0x55866dff23c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55866dfefb48 '' 'const String::rep_t &'
| `-CompoundStmt 0x55866dff2468 <col:12>
|-CXXConstructorDecl 0x55866dfefbe8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55866dfefbe8
| `-ParmVarDecl 0x55866dfefcf8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55866dff5250 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55866e000c68 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55866e000d78 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55866e001290 <col:12>
|   |-BinaryOperator 0x55866e0010a8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55866e001060 <col:12> 'const char *' lvalue ->data 0x55866dfe97a0
|   | | `-CXXThisExpr 0x55866e001050 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55866e001090 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55866e001020 <col:12> 'const char *const' lvalue .data 0x55866dfe97a0
|   |     `-DeclRefExpr 0x55866e001000 <col:12> 'const String::rep_t' lvalue ParmVar 0x55866e000d78 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55866e001170 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55866e001128 <col:12> 'int' lvalue ->length 0x55866dfe9808
|   | | `-CXXThisExpr 0x55866e001118 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55866e001158 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55866e0010e8 <col:12> 'const int' lvalue .length 0x55866dfe9808
|   |     `-DeclRefExpr 0x55866e0010c8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55866e000d78 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55866e001238 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55866e0011f0 <col:12> 'String::memo_t *' lvalue ->memo 0x55866dfe9898
|   | | `-CXXThisExpr 0x55866e0011e0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55866e001220 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55866e0011b0 <col:12> 'String::memo_t *const' lvalue .memo 0x55866dfe9898
|   |     `-DeclRefExpr 0x55866e001190 <col:12> 'const String::rep_t' lvalue ParmVar 0x55866e000d78 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55866e001280 <col:12>
|     `-UnaryOperator 0x55866e001268 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55866e001258 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55866e000de8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55866e000de8
  `-ParmVarDecl 0x55866e000ef8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55866dfe0520 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55866dfe0638 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55866dfe06c8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55866dfe0708 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55866dcb1dc0 'const char *'
|   `-QualType 0x55866dcb1311 'const char' const
|     `-BuiltinType 0x55866dcb1310 'char'
|-TypedefDecl 0x55866dfe0790 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55866dfe0760 'String::const_iterator' sugar
|   |-Typedef 0x55866dfe0708 'const_iterator'
|   `-PointerType 0x55866dcb1dc0 'const char *'
|     `-QualType 0x55866dcb1311 'const char' const
|       `-BuiltinType 0x55866dcb1310 'char'
|-TypedefDecl 0x55866dfe0900 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55866dfe0870 'int (String::*)() const'
|   |-RecordType 0x55866dfe05b0 'String'
|   | `-CXXRecord 0x55866dfe0520 'String'
|   `-ParenType 0x55866dfe0810 'int () const' sugar
|     `-FunctionProtoType 0x55866dfb43a0 'int () const' const cdecl
|       `-BuiltinType 0x55866dcb1370 'int'
|-TypedefDecl 0x55866dfe0968 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55866de08f80 'int64_t' sugar
|   |-Typedef 0x55866dd1a2d0 'int64_t'
|   `-TypedefType 0x55866dcf34d0 '__int64_t' sugar
|     |-Typedef 0x55866dcf30a8 '__int64_t'
|     `-BuiltinType 0x55866dcb1390 'long'
|-TypedefDecl 0x55866dfe09d0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55866de08ea0 'uint64_t' sugar
|   |-Typedef 0x55866dd1a470 'uint64_t'
|   `-TypedefType 0x55866dcf3560 '__uint64_t' sugar
|     |-Typedef 0x55866dcf3118 '__uint64_t'
|     `-BuiltinType 0x55866dcb1430 'unsigned long'
|-TypedefDecl 0x55866dfe0a60 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55866dfe0a30 'String::intmax_t' sugar
|   |-Typedef 0x55866dfe0968 'intmax_t'
|   `-TypedefType 0x55866de08f80 'int64_t' sugar
|     |-Typedef 0x55866dd1a2d0 'int64_t'
|     `-TypedefType 0x55866dcf34d0 '__int64_t' sugar
|       |-Typedef 0x55866dcf30a8 '__int64_t'
|       `-BuiltinType 0x55866dcb1390 'long'
|-TypedefDecl 0x55866dfe0af0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55866dfe0ac0 'String::uintmax_t' sugar
|   |-Typedef 0x55866dfe09d0 'uintmax_t'
|   `-TypedefType 0x55866de08ea0 'uint64_t' sugar
|     |-Typedef 0x55866dd1a470 'uint64_t'
|     `-TypedefType 0x55866dcf3560 '__uint64_t' sugar
|       |-Typedef 0x55866dcf3118 '__uint64_t'
|       `-BuiltinType 0x55866dcb1430 'unsigned long'
|-CXXConstructorDecl 0x55866dfe0bb0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55866dfe0d58 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55866dfe0c98 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55866dfe0f08 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55866dfe0e48 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55866dfe1060 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55866dfe0fd0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55866dfe1278 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55866dfe1128 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55866dfe11a8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55866dfe1498 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55866dfe1348 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55866dfe13c8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55866dfe16b8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55866dfe1568 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55866dfe15e8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55866dfe18d8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55866dfe1788 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55866dfe1808 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55866dfe1a68 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55866dfe19a0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55866dfe1be8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55866dfe1b28 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55866dfe1d78 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55866dfe1cb0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55866dfe1ed0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55866dfe1e40 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55866dfe2028 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55866dfe1f98 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55866dfe2180 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55866dfe20f0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55866dfe2308 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55866dfe2248 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55866dfe2498 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55866dfe23d0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55866dfe2628 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55866dfe2560 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55866dfe27b8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55866dfe26f0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55866dfe28b0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55866dfe29d8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55866dfe2b58 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55866dfe2a90 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55866dfe2ca8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55866dfe2c18 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55866dfe2d60 <col:63> "" ""
|-CXXMethodDecl 0x55866dfe2ea8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55866dfe2de8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55866dfe30b8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55866dfe2f68 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55866dfe2fe8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55866dfe32d8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55866dfe3180 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55866dfe3200 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55866dfe35b8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55866dfe3398 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55866dfe3418 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55866dfef400 <col:55> 'int' 10
| `-ParmVarDecl 0x55866dfe3490 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55866dfef420 <col:76> 'bool' true
|-CXXMethodDecl 0x55866dfe3898 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55866dfe3680 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55866dfe3700 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55866dfef430 <col:56> 'int' 10
| `-ParmVarDecl 0x55866dfe3778 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55866dfef450 <col:77> 'bool' true
|-CXXMethodDecl 0x55866dfe39a0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55866dfe3a68 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55866dfe3b30 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55866dfe3bd0 <col:20>
| `-OptimizeNoneAttr 0x55866dfe3c28 <col:30>
|-CXXConversionDecl 0x55866dfe3d18 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55866dfe3de8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55866dfe3ea8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55866dfe3f98 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55866dfe4058 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55866dfe41d8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55866dfe4110 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55866dfe4328 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55866dfe4298 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55866dfe4418 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55866dfe44d8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55866dfe4728 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55866dfe4590 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55866dfe4610 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55866dfe4988 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55866dfe47f0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55866dfe4870 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55866dfe4a58 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55866dfe4c68 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55866dfe4b10 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55866dfe4b90 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55866dfe4e88 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55866dfe4d30 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55866dfe4db0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55866dfe5018 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55866dfe4f50 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55866dfe5108 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55866dfe5278 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55866dfe51b8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55866dfe5488 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55866dfe5338 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55866dfe53b8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55866dfe56a0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55866dfe5548 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55866dfe55c0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55866dfe5830 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55866dfe5760 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55866dfe5a50 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55866dfe58f0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55866dfe5970 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55866dfe5ba0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55866dfe5b10 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55866dfe5d78 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55866dfe5c60 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55866dfe5ce0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55866dfe5ec8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55866dfe5e38 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55866dfe60e0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55866dfe5f80 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55866dfe6000 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55866dfef460 <col:39> 'int' 0
|-CXXMethodDecl 0x55866dfe6300 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55866dfe61a0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55866dfe6220 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55866dfef480 <col:48> 'int' 0
|-CXXMethodDecl 0x55866dfe64e0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55866dfe63c0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55866dfe6440 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55866dfef4a0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55866dfe65b0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55866dfe6670 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55866dfe6730 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55866dfe67f0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55866dfe68b0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55866dfe6a58 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55866dfe6960 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55866dfe6bd8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55866dfe6b10 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55866dfe6db0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55866dfe6c98 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55866dfe6f28 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55866dfe6e68 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55866dfe7070 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55866dfe6fe0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55866dfe71c0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55866dfe7130 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55866dfe7398 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55866dfe7280 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55866dfe7300 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55866dfe7578 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55866dfe7460 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55866dfe74e0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55866dfe76c8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55866dfe7638 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55866dfe78d8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55866dfe7788 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55866dfe7808 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55866dfe7a38 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55866dfe79a0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55866dfe7b90 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55866dfe7af8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55866dfe7c38 <col:57> "" ""
|-CXXMethodDecl 0x55866dfe7d48 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55866dfe7cb8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55866dfe7e98 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55866dfe7e08 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55866dfe8018 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55866dfe7f50 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55866dfe80e0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55866dfe81a0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55866dfe8260 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55866dfe8300 <col:49> "" ""
|-CXXMethodDecl 0x55866dfe8390 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55866dfe8450 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55866dfe8540 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55866dfe8608 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55866dfe86c8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55866dfe8788 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55866dfe8880 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55866dfe8948 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55866dfe8a10 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55866dfe8be8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55866dfe8ac8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55866dfe8b48 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55866dfe8e10 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55866dfe8cb0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55866dfe8d30 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55866dfe8f20 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55866dfe8f88 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55866dfe8fb0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55866dfe90c8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55866dfe9168 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55866dfe91c8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55866dfe9228 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55866dfe92d8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55866dfe9340 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55866dfe9578 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55866dfe95c8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866dfe9558 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55866dfe9468 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55866dfe9410 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55866dfe9450 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55866dfe9430 <col:32> 'int' 8
|-CXXRecordDecl 0x55866dfe95e0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55866dfe96f8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55866dfe97a0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55866dfe9808 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55866dfe9898 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55866dfef930 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55866dfefd68 <col:12>
| |-CXXConstructorDecl 0x55866dfefa38 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55866dfefb48 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55866dfe97a0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55866dff22f0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55866dff22c0 <col:12> 'const char *const' lvalue .data 0x55866dfe97a0
| | |     `-DeclRefExpr 0x55866dff22a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55866dfefb48 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55866dfe9808 'length' 'int'
| | | `-ImplicitCastExpr 0x55866dff2380 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55866dff2350 <col:12> 'const int' lvalue .length 0x55866dfe9808
| | |     `-DeclRefExpr 0x55866dff2330 <col:12> 'const String::rep_t' lvalue ParmVar 0x55866dfefb48 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55866dfe9898 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55866dff2410 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55866dff23e0 <col:12> 'String::memo_t *const' lvalue .memo 0x55866dfe9898
| | |     `-DeclRefExpr 0x55866dff23c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55866dfefb48 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55866dff2468 <col:12>
| |-CXXConstructorDecl 0x55866dfefbe8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55866dfefbe8
| | `-ParmVarDecl 0x55866dfefcf8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55866dff5250 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55866e000c68 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55866e000d78 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55866e001290 <col:12>
| |   |-BinaryOperator 0x55866e0010a8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55866e001060 <col:12> 'const char *' lvalue ->data 0x55866dfe97a0
| |   | | `-CXXThisExpr 0x55866e001050 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55866e001090 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55866e001020 <col:12> 'const char *const' lvalue .data 0x55866dfe97a0
| |   |     `-DeclRefExpr 0x55866e001000 <col:12> 'const String::rep_t' lvalue ParmVar 0x55866e000d78 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55866e001170 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55866e001128 <col:12> 'int' lvalue ->length 0x55866dfe9808
| |   | | `-CXXThisExpr 0x55866e001118 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55866e001158 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55866e0010e8 <col:12> 'const int' lvalue .length 0x55866dfe9808
| |   |     `-DeclRefExpr 0x55866e0010c8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55866e000d78 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55866e001238 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55866e0011f0 <col:12> 'String::memo_t *' lvalue ->memo 0x55866dfe9898
| |   | | `-CXXThisExpr 0x55866e0011e0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55866e001220 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55866e0011b0 <col:12> 'String::memo_t *const' lvalue .memo 0x55866dfe9898
| |   |     `-DeclRefExpr 0x55866e001190 <col:12> 'const String::rep_t' lvalue ParmVar 0x55866e000d78 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55866e001280 <col:12>
| |     `-UnaryOperator 0x55866e001268 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55866e001258 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55866e000de8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55866e000de8
|   `-ParmVarDecl 0x55866e000ef8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55866dfe9910 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55866dfe9b58 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55866dfe9978 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55866dfe99f8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55866dfe9a70 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55866dfef8f0 <col:79, line:261:5>
|   |-BinaryOperator 0x55866dfef568 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55866dfef500 <col:2, col:5> 'const char *' lvalue .data 0x55866dfe97a0
|   | | `-MemberExpr 0x55866dfef4d0 <col:2> 'String::rep_t' lvalue ->_r 0x55866dfe9910
|   | |   `-CXXThisExpr 0x55866dfef4c0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55866dfef550 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55866dfef530 <col:12> 'const char *' lvalue ParmVar 0x55866dfe9978 'data' 'const char *'
|   |-BinaryOperator 0x55866dfef630 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55866dfef5c8 <col:2, col:5> 'int' lvalue .length 0x55866dfe9808
|   | | `-MemberExpr 0x55866dfef598 <col:2> 'String::rep_t' lvalue ->_r 0x55866dfe9910
|   | |   `-CXXThisExpr 0x55866dfef588 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55866dfef618 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55866dfef5f8 <col:14> 'int' lvalue ParmVar 0x55866dfe99f8 'length' 'int'
|   `-IfStmt 0x55866dfef8d8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55866dfef750 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55866dfef738 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55866dfef718 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55866dfef6f8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55866dfef690 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55866dfe9898
|     |       | `-MemberExpr 0x55866dfef660 <col:7> 'String::rep_t' lvalue ->_r 0x55866dfe9910
|     |       |   `-CXXThisExpr 0x55866dfef650 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55866dfef6e0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55866dfef6c0 <col:17> 'String::memo_t *' lvalue ParmVar 0x55866dfe9a70 'memo' 'String::memo_t *'
|     `-CallExpr 0x55866dfef8b0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55866dfef898 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55866dfef7a0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55866dfd8588 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55866dfef808 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55866dfe9168
|         `-ImplicitCastExpr 0x55866dfef7f0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55866dfef7d0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55866dfe9a70 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55866dfe9e08 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55866dfe9c28 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55866dfe9ca8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55866dfe9d20 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55866dfe9910 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55866dfefd78 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55866dfeff08 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55866dfefe70 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55866dfefde0 <col:2> '<bound member function type>' ->assign_memo 0x55866dfe9b58
|     | `-ImplicitCastExpr 0x55866dfefea8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55866dfefdd0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55866dfefec0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55866dfefe10 <col:14> 'const char *' lvalue ParmVar 0x55866dfe9c28 'data' 'const char *'
|     |-ImplicitCastExpr 0x55866dfefed8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55866dfefe30 <col:20> 'int' lvalue ParmVar 0x55866dfe9ca8 'length' 'int'
|     `-ImplicitCastExpr 0x55866dfefef0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55866dfefe50 <col:28> 'String::memo_t *' lvalue ParmVar 0x55866dfe9d20 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55866dfe9f98 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55866dfe9ed8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55866dff0160 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55866dff00e0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55866dfeff30 <col:2> '<bound member function type>' ->assign_memo 0x55866dfe9b58
|     | `-CXXThisExpr 0x55866dfeff20 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55866dff0118 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55866dfeffb0 <col:14, col:19> 'const char *' lvalue .data 0x55866dfe97a0
|     |   `-MemberExpr 0x55866dfeff80 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55866dfe9910
|     |     `-DeclRefExpr 0x55866dfeff60 <col:14> 'const String' lvalue ParmVar 0x55866dfe9ed8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55866dff0130 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55866dff0030 <col:25, col:30> 'int' lvalue .length 0x55866dfe9808
|     |   `-MemberExpr 0x55866dff0000 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55866dfe9910
|     |     `-DeclRefExpr 0x55866dfeffe0 <col:25> 'const String' lvalue ParmVar 0x55866dfe9ed8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55866dff0148 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55866dff00b0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55866dfe9898
|         `-MemberExpr 0x55866dff0080 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55866dfe9910
|           `-DeclRefExpr 0x55866dff0060 <col:38> 'const String' lvalue ParmVar 0x55866dfe9ed8 'x' 'const String &'
|-CXXMethodDecl 0x55866dfea060 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55866dff0b20 <col:31, line:278:5>
|   `-IfStmt 0x55866dff0b08 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55866dff0200 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55866dff01e8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55866dff01b8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55866dfe9898
|     |     `-MemberExpr 0x55866dff0188 <col:6> 'String::rep_t' lvalue ->_r 0x55866dfe9910
|     |       `-CXXThisExpr 0x55866dff0178 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55866dff0ae0 <col:15, line:277:2>
|       |-ParenExpr 0x55866dff06b0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55866dff0680 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55866dff0310 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55866dff02f8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55866dff02e0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55866dff02a0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55866dfe9168
|       |   |       `-ImplicitCastExpr 0x55866dff0288 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55866dff0258 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55866dfe9898
|       |   |           `-MemberExpr 0x55866dff0228 <col:27> 'String::rep_t' lvalue ->_r 0x55866dfe9910
|       |   |             `-CXXThisExpr 0x55866dff0218 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55866dff0370 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55866dff0350 <col:54> 'int' 0
|       |   `-CallExpr 0x55866dff05e0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55866dff05c8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55866dff0548 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55866dd4f7e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55866dff0620 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55866dff0458 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55866dff0638 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55866dff0488 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55866dff0650 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55866dff04c0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55866dff0668 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55866dff0530 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55866dff0518 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55866dff04e0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55866dff0a00 <line:274:6, line:275:22>
|       | |-CallExpr 0x55866dff08c0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55866dff08a8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55866dff0820 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55866dfd99d0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55866dff07f0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55866dfe9168
|       | |   `-ImplicitCastExpr 0x55866dff07d8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55866dff07a8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55866dfe9898
|       | |       `-MemberExpr 0x55866dff0778 <col:40> 'String::rep_t' lvalue ->_r 0x55866dfe9910
|       | |         `-CXXThisExpr 0x55866dff0768 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55866dff09c0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55866dff09a8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55866dff08e8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55866dfee840 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55866dff09e8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55866dff0948 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55866dfe9898
|       |       `-MemberExpr 0x55866dff0918 <col:15> 'String::rep_t' lvalue ->_r 0x55866dfe9910
|       |         `-CXXThisExpr 0x55866dff0908 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55866dff0ac0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55866dff0a58 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55866dfe9898
|         | `-MemberExpr 0x55866dff0a28 <col:6> 'String::rep_t' lvalue ->_r 0x55866dfe9910
|         |   `-CXXThisExpr 0x55866dff0a18 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55866dff0aa8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55866dff0a88 <col:16> 'int' 0
|-CXXMethodDecl 0x55866dfea2f8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55866dfea118 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55866dfea198 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55866dfea210 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55866dfea3d0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55866dfea620 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55866dfea488 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55866dfea508 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55866dfea580 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55866dfea808 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55866dfea6f0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55866dfea770 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55866dfea908 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55866dff0bf8 <col:41, line:286:5>
|   `-ReturnStmt 0x55866dff0be8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55866dff0bb8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55866dff0b80 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55866dff0b68 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55866dff0b48 <col:46> 'int' 1
|-CXXMethodDecl 0x55866dfeaba8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55866dfea9c0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55866dfeaa40 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55866dfeaac0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55866dfee840 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55866dfeac70 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55866dfee910 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55866dfeeae0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55866dfee9c8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55866dfeea48 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55866dfeeba0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55866dfeec68 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55866dfeed68 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55866dfeede0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55866dfeee58 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55866dfeeec0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55866dfeefc0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55866dfef010 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55866dfeefa0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55866dfeef80 <col:22> 'int' 14
|-CXXMethodDecl 0x55866dfef228 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55866dfef040 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55866dfef0c0 <col:38> col:41 'int'
| `-ParmVarDecl 0x55866dfef140 <col:43> col:46 'int'
|-FriendDecl 0x55866dfef330 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55866dfef3c0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55866e30ee50 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55866e30f028 prev 0x55866e30ee50 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55866e30f0b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55866e30f0e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55866dcb1370 'int'
|-TypedefDecl 0x55866e310a40 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55866e3109f0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55866e3109d0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55866e30f2f8 'type'
|     `-SubstTemplateTypeParmType 0x55866e30f2c0 'String' sugar
|       |-TemplateTypeParmType 0x55866dfa3dc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfa3d70 'T'
|       `-RecordType 0x55866dfe05b0 'String'
|         `-CXXRecord 0x55866dfe0520 'String'
|-TypedefDecl 0x55866e310af8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55866e310ac0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55866e310aa0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55866e310a40 'type'
|     `-ElaboratedType 0x55866e3109f0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55866e3109d0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55866e30f2f8 'type'
|         `-SubstTemplateTypeParmType 0x55866e30f2c0 'String' sugar
|           |-TemplateTypeParmType 0x55866dfa3dc0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55866dfa3d70 'T'
|           `-RecordType 0x55866dfe05b0 'String'
|             `-CXXRecord 0x55866dfe0520 'String'
|-CXXMethodDecl 0x55866e310c78 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55866e310b88 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55866e310d68 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55866e310e48 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55866e310e48
|-CXXMethodDecl 0x55866e311118 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55866e311020 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55866e311358 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55866e3111d0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55866e311248 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55866e311528 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55866e311418 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55866e311490 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55866e311688 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55866e311758 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55866e3119a8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55866e311818 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55866e311890 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55866e311c08 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55866e311a78 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55866e311af0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55866e311dc8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55866e311cd8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55866e311f88 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55866e311e90 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55866e312040 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55866e3120f0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55866e312328 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55866e3121a0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55866e312218 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55866e3125c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55866e3124d0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55866e312690 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55866e3126e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55866e312730 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.8 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.8 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55866e217d50 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55866e30dbf8 prev 0x55866e217d50 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55866e30edc0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55866e30ed70 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55866e30ed50 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55866e30ec00 'type'
|     `-SubstTemplateTypeParmType 0x55866e30ea90 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55866df79b70 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55866df79b18 'F'
|       `-RecordType 0x55866e30e6f0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55866e30e610 'typed_array_memory'
|-FieldDecl 0x55866e312780 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55866e3127d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55866e312808 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55866e30dc90 'String' sugar
|   |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55866dfb1088 'T'
|   `-RecordType 0x55866dfe05b0 'String'
|     `-CXXRecord 0x55866dfe0520 'String'
|-TypedefDecl 0x55866e312898 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55866e312860 'String &'
|   `-SubstTemplateTypeParmType 0x55866e30dc90 'String' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-RecordType 0x55866dfe05b0 'String'
|       `-CXXRecord 0x55866dfe0520 'String'
|-TypedefDecl 0x55866e312928 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55866e3128f0 'const String &'
|   `-QualType 0x55866e30dc91 'const String' const
|     `-SubstTemplateTypeParmType 0x55866e30dc90 'String' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866dfe05b0 'String'
|         `-CXXRecord 0x55866dfe0520 'String'
|-TypedefDecl 0x55866e3129b8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55866e312980 'String *'
|   `-SubstTemplateTypeParmType 0x55866e30dc90 'String' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-RecordType 0x55866dfe05b0 'String'
|       `-CXXRecord 0x55866dfe0520 'String'
|-TypedefDecl 0x55866e312a48 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55866e312a10 'const String *'
|   `-QualType 0x55866e30dc91 'const String' const
|     `-SubstTemplateTypeParmType 0x55866e30dc90 'String' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866dfe05b0 'String'
|         `-CXXRecord 0x55866dfe0520 'String'
|-TypedefDecl 0x55866e3136a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55866e313650 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55866e313630 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55866e313568 'type'
|     `-LValueReferenceType 0x55866e313530 'const String &'
|       `-QualType 0x55866e3132d1 'const String' const
|         `-SubstTemplateTypeParmType 0x55866e3132d0 'String' sugar
|           |-TemplateTypeParmType 0x55866df83ac0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55866df83a68 'T'
|           `-RecordType 0x55866dfe05b0 'String'
|             `-CXXRecord 0x55866dfe0520 'String'
|-TypedefDecl 0x55866e313708 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55866e3128f0 'const String &'
|   `-QualType 0x55866e30dc91 'const String' const
|     `-SubstTemplateTypeParmType 0x55866e30dc90 'String' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866dfe05b0 'String'
|         `-CXXRecord 0x55866dfe0520 'String'
|-TypedefDecl 0x55866e313760 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55866dcb1370 'int'
|-TypedefDecl 0x55866e3137c8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55866e312980 'String *'
|   `-SubstTemplateTypeParmType 0x55866e30dc90 'String' sugar
|     |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55866dfb1088 'T'
|     `-RecordType 0x55866dfe05b0 'String'
|       `-CXXRecord 0x55866dfe0520 'String'
|-TypedefDecl 0x55866e313830 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55866e312a10 'const String *'
|   `-QualType 0x55866e30dc91 'const String' const
|     `-SubstTemplateTypeParmType 0x55866e30dc90 'String' sugar
|       |-TemplateTypeParmType 0x55866dfb10e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55866dfb1088 'T'
|       `-RecordType 0x55866dfe05b0 'String'
|         `-CXXRecord 0x55866dfe0520 'String'
|-EnumDecl 0x55866e313888 <line:134:5> col:5
| `-EnumConstantDecl 0x55866e313980 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55866e313960 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55866dfb2768 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55866dfb2740 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55866dfb2720 <col:40> 'int' 1
|-CXXConstructorDecl 0x55866e313a08 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55866e313c98 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e313ac0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e313b60 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55866e313f28 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55866e313e10 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55866e3141e8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55866e3140d0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55866e314500 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55866e3143e0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55866e314810 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55866e3146f0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55866e314b00 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e314948 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e3149c0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55866e314c28 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55866e314cd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e314d30 <col:30> Inherited
|-CXXMethodDecl 0x55866e314d78 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55866e314e28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e314e80 <col:30> Inherited
|-CXXMethodDecl 0x55866e314f48 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55866e314ff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e315050 <col:30> Inherited
|-CXXMethodDecl 0x55866e315098 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55866e315148 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e3151a0 <col:30> Inherited
|-CXXMethodDecl 0x55866e3151e8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55866e315298 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e3152f0 <col:30> Inherited
|-CXXMethodDecl 0x55866e317890 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55866e317940 <col:20> Inherited
| `-OptimizeNoneAttr 0x55866e317998 <col:30> Inherited
|-CXXMethodDecl 0x55866e3179c0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55866e317a70 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55866e317b20 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55866e317ce0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e317bd0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55866e317c48 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55866e317e30 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55866e317da0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e317fd8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55866e317ee8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55866e318090 <col:20>
| `-OptimizeNoneAttr 0x55866e3180e8 <col:30>
|-CXXMethodDecl 0x55866e318208 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55866e318110 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55866e3182c0 <col:20>
| `-OptimizeNoneAttr 0x55866e318318 <col:30>
|-CXXMethodDecl 0x55866e3183d0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55866e318340 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e318518 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55866e318488 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e318648 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55866e318748 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55866e318818 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55866e3188e8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55866e318a28 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55866e318998 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e318b70 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55866e318ae0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55866e318cb8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55866e318c28 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55866e318d70 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55866e318e70 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55866e318de0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55866e318f28 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55866e318fe8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55866e3190e8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55866e319268 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55866e3191a8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55866e3199f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55866e319320 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55866e319958 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55866e319858 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55866e319ad8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55866e319c28 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55866e319b98 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55866e319ce0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55866e319f28 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55866e319da0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55866e319e18 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55866e31a0b8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55866e319ff8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55866e31a2c8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55866e31a180 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55866e31a1f8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55866e31a388 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55866e31a5e8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55866e31a4f0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55866e31a6b8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55866e31a6b8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.7 = type { %class.vector_memory.8 }
  NonVirtualBaseLLVMType:%class.Vector.7 = type { %class.vector_memory.8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55866e25a490 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55866e349db8 <line:167:18>
|-CXXRecordDecl 0x55866e349e78 prev 0x55866e25a490 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55866e349f88 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
