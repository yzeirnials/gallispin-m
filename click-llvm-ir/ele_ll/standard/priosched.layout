
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee9c3fe8 prev 0x55c9ee9bb778 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9ee9c40e0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55c9ee9c4170 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55c9ee9c41e8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55c9ee9c42a8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55c9ee9c4370 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55c9ee9c44e8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55c9ee9c4420 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55c9ee9c4590 <col:24>
| `-OptimizeNoneAttr 0x55c9ee9c45e8 <col:34>
|-CXXMethodDecl 0x55c9ee9c4660 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55c9ee9c4918 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55c9ee9c4710 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55c9ee9c4788 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55c9ee9c4808 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55c9ee9c49d0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55c9ee9c4a08 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55c9ee9c4a70 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55c9ee9c4af8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55c9ee9c4e18 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55c9ee9c4bb0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55c9ee9c4c28 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55c9ee9c4ca0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55c9ee9c4d20 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55c9ee9c4f30 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55c9ee9cb848 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55c9ee9cb848
| `-ParmVarDecl 0x55c9ee9cb958 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55c9ee9cb9f8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55c9ee9cb9f8
| `-ParmVarDecl 0x55c9ee9cbb08 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55c9eea8e8b8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee9b2020 prev 0x55c9ee9b1da0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c9ee9b2118 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55c9ee9b21a8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55c9ee9b2208 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55c9ee9b22f8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55c9ee9b23f8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55c9ee9b25c8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55c9ee9b2478 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55c9ee9b24f0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55c9ee9b2758 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55c9ee9b2690 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55c9ee9b2800 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55c9ee9b2938 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55c9ee9b2870 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55c9ee9b2ad8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55c9ee9b2a18 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55c9ee9b2c78 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55c9ee9b2bb8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55c9ee9b2d20 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55c9ee9b2e20 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55c9ee9b2f00 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9b2e00 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55c9ee9b2de0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55c9ee9b2eb0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55c9ee9b2f18 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee9b2e90 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55c9ee9b2e70 <col:44> 'int' 2
|-CXXMethodDecl 0x55c9ee9b3060 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55c9ee9b2f48 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55c9ee9b2fc8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55c9ee9b31b8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55c9ee9b3128 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55c9ee9b33f8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55c9ee9b3278 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55c9ee9b32f0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55c9ee9b34a8 <col:20>
| `-OptimizeNoneAttr 0x55c9ee9b3500 <col:30>
|-CXXMethodDecl 0x55c9ee9b8640 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55c9ee9b3540 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55c9ee9b86e8 <col:20>
| `-OptimizeNoneAttr 0x55c9ee9b8740 <col:30>
|-CXXMethodDecl 0x55c9ee9b8790 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55c9ee9b8858 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55c9ee9b8918 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55c9ee9b89a0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55c9ee9b8a28 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55c9ee9b8ab0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55c9ee9b8b38 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55c9ee9b8bc8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55c9ee9b8c88 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55c9ee9b8d10 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55c9ee9b8d98 <line:64:5, col:28> col:23 used PULL 'const char []' static
|-VarDecl 0x55c9ee9b8e20 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55c9ee9b8ea8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55c9ee9b8f30 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55c9ee9b8fc0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55c9ee9b9080 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55c9ee9b9110 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55c9ee9b9260 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55c9ee9b91c8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55c9ee9b93f0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55c9ee9b9320 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55c9ee9b9690 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55c9ee9b94a8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55c9ee9b9528 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55c9ee9b95a8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55c9ee9b9748 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55c9ee9b9850 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c9ee9b9ae0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9b9830 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55c9ee9b9810 <col:33> 'int' 0
| |-EnumConstantDecl 0x55c9ee9b98e0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c9ee9b9af8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9b98c0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55c9ee9b98a0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55c9ee9b9970 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c9ee9b9b10 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9b9950 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55c9ee9b9930 <col:38> 'int' 90
| |-EnumConstantDecl 0x55c9ee9b9a00 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c9ee9b9b28 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9b99e0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55c9ee9b99c0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55c9ee9b9a90 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55c9ee9b9b40 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee9b9a70 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55c9ee9b9a50 <col:32> 'int' 2000
|-CXXMethodDecl 0x55c9ee9b9b80 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55c9ee9b9fc0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c9ee9b9e30 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55c9ee9b9ea8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c9ee9ba090 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55c9ee9ba210 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55c9ee9ba140 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c9ee9ba418 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c9ee9ba2c8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55c9ee9ba340 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c9ee9ba518 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55c9ee9ba5b8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55c9ee9ba680 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c9ee9ba710 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55c9ee9ba940 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9ba6f0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55c9ee9ba6d0 <col:36> 'int' EnumConstant 0x55c9ee9ba680 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c9ee9ba760 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c9ee9ba7b0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c9ee9ba800 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c9ee9ba850 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c9ee9ba8a0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55c9ee9ba8f0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55c9ee9baa28 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55c9ee9ba968 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55c9ee9baaf0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55c9ee9babb0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55c9ee9bac70 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55c9ee9bad30 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55c9ee9bae48 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55c9ee9baf10 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55c9ee9bb090 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55c9ee9bafc0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55c9ee9bb1b8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55c9ee9bb3b8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55c9ee9bb268 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55c9ee9bb2e8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55c9ee9c7d18 <col:54, line:127:5>
|   |-ParenExpr 0x55c9ee9c7bc8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55c9ee9c7b98 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee9c7888 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55c9ee9c7860 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55c9ee9c7848 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55c9ee9c7830 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55c9ee9c7800 <col:31> 'Router *' lvalue ->_router 0x55c9ee9c56e0
|   |   |         `-CXXThisExpr 0x55c9ee9c77f0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55c9ee9c78e8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee9c78c8 <col:48> 'int' 0
|   |   `-CallExpr 0x55c9ee9c7af8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee9c7ae0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee9c7ac0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee9c7b38 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee9c7958 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55c9ee9c7b50 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee9c7978 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55c9ee9c7b68 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee9c79b0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55c9ee9c7b80 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee9c7aa8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee9c7a90 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee9c7a48 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55c9ee9c7c60 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55c9ee9c7bf8 <col:9> 'Router *' lvalue ->_router 0x55c9ee9c56e0
|   | | `-CXXThisExpr 0x55c9ee9c7be8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55c9ee9c7c48 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9ee9c7c28 <col:19> 'Router *' lvalue ParmVar 0x55c9ee9bb268 'r' 'Router *'
|   `-BinaryOperator 0x55c9ee9c7cf8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55c9ee9c7c90 <col:9> 'int' lvalue ->_eindex 0x55c9ee9c5748
|     | `-CXXThisExpr 0x55c9ee9c7c80 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55c9ee9c7ce0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee9c7cc0 <col:19> 'int' lvalue ParmVar 0x55c9ee9bb2e8 'eindex' 'int'
|-CXXMethodDecl 0x55c9ee9bb540 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55c9ee9bb478 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55c9ee9bb610 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55c9ee9bb6d8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55c9ee9bb778 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55c9ee9bb9c8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55c9ee9bb840 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55c9ee9bb8c0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55c9ee9bba78 <col:20>
| `-OptimizeNoneAttr 0x55c9ee9bbad0 <col:30>
|-CXXMethodDecl 0x55c9ee9bbbd8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55c9ee9bbb10 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55c9ee9bbc80 <col:20>
| `-OptimizeNoneAttr 0x55c9ee9bbcd8 <col:30>
|-CXXMethodDecl 0x55c9ee9bbda8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55c9ee9bbd18 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55c9ee9bbe50 <col:20>
| `-OptimizeNoneAttr 0x55c9ee9bbea8 <col:30>
|-CXXMethodDecl 0x55c9ee9bc038 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55c9ee9bbee0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55c9ee9bbf60 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55c9ee9bc1c8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55c9ee9bc100 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55c9ee9bc318 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55c9ee9bc288 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55c9ee9bc468 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55c9ee9bc3d8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55c9ee9bc650 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55c9ee9bc528 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55c9ee9bc908 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55c9ee9bc708 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55c9ee9bc788 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55c9ee9bc828 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55c9ee9bc9e0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55c9ee9bcaa0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55c9ee9bcd70 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c9ee9bcc20 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55c9ee9bcc98 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55c9ee9bce98 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55c9ee9bd070 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55c9ee9bcf50 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55c9ee9bcfd0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55c9ee9bd258 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55c9ee9bd138 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55c9ee9bd1b8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55c9ee9bd5c8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55c9ee9bd318 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55c9ee9bd390 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c9ee9bd410 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55c9ee9c7300 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c9ee9c72e0 <col:106> 'int' 0
| `-ParmVarDecl 0x55c9ee9bd488 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c9ee9c7338 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c9ee9c7318 <col:126> 'int' 0
|-CXXMethodDecl 0x55c9ee9bd948 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c9ee9bd698 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55c9ee9bd710 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c9ee9bd790 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55c9ee9bd808 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c9ee9c7370 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c9ee9c7350 <col:114> 'int' 0
|-CXXMethodDecl 0x55c9ee9bdcd8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c9ee9bda20 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55c9ee9bda98 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c9ee9bdb18 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55c9ee9c7388 <col:96> 'int' 0
| `-ParmVarDecl 0x55c9ee9bdb90 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c9ee9c73c8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c9ee9c73a8 <col:116> 'int' 0
|-CXXMethodDecl 0x55c9ee9be058 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55c9ee9bdda8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55c9ee9bde20 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c9ee9bdea0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55c9ee9c7400 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c9ee9c73e0 <col:109> 'int' 0
| `-ParmVarDecl 0x55c9ee9bdf18 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c9ee9c7438 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c9ee9c7418 <col:129> 'int' 0
|-CXXMethodDecl 0x55c9ee9be3d8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c9ee9be128 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55c9ee9be1a0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c9ee9be220 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55c9ee9be298 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c9ee9c7470 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c9ee9c7450 <col:117> 'int' 0
|-CXXMethodDecl 0x55c9ee9be768 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c9ee9be4b0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9be528 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c9ee9be5a8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55c9ee9c7488 <col:99> 'int' 0
| `-ParmVarDecl 0x55c9ee9be620 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c9ee9c74c8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c9ee9c74a8 <col:119> 'int' 0
|-CXXMethodDecl 0x55c9ee9beb88 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55c9ee9be838 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55c9ee9be8b8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55c9ee9be930 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c9ee9be9b0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55c9ee9c7500 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c9ee9c74e0 <col:108> 'int' 0
| `-ParmVarDecl 0x55c9ee9bea30 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55c9ee9c7538 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55c9ee9c7518 <col:141> 'int' 0
|-CXXMethodDecl 0x55c9ee9befa8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55c9ee9bec60 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55c9ee9bece0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55c9ee9bed58 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c9ee9bedd8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55c9ee9bee58 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55c9ee9c7550 <col:121> 'int' 0
|-CXXMethodDecl 0x55c9ee9bf3d8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55c9ee9bf088 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55c9ee9bf108 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55c9ee9bf180 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c9ee9bf200 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55c9ee9c7570 <col:98> 'int' 0
| `-ParmVarDecl 0x55c9ee9bf280 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55c9ee9c7590 <col:123> 'int' 0
|-CXXMethodDecl 0x55c9ee9bf6a0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55c9ee9bf4b0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55c9ee9bf530 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55c9ee9bf5b0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55c9ee9c75b0 <col:80> 'int' 0
|-EnumDecl 0x55c9ee9bf758 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55c9ee9bf860 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c9ee9bfaf0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9bf840 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55c9ee9bf820 <col:42> 'int' 1
| |-EnumConstantDecl 0x55c9ee9bf8f0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c9ee9bfb08 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9bf8d0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55c9ee9bf8b0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55c9ee9bf980 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c9ee9bfb20 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9bf960 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55c9ee9bf940 <col:44> 'int' 4
| |-EnumConstantDecl 0x55c9ee9bfa10 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c9ee9bfb38 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9bf9f0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55c9ee9bf9d0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55c9ee9bfaa0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55c9ee9bfb50 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee9bfa80 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55c9ee9bfa60 <col:34> 'int' 6
|-CXXMethodDecl 0x55c9ee9bfe08 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55c9ee9bfb78 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55c9ee9bfc18 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55c9ee9bfc98 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55c9ee9bfd10 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55c9ee9c7668 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55c9ee9c7650 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55c9ee9c7638 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55c9ee9c7618 <col:98, col:105> 'String' (CXXTemporary 0x55c9ee9c7618)
|           `-CXXTemporaryObjectExpr 0x55c9ee9c75e0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55c9ee9c00a8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55c9ee9bfed8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55c9ee9bff50 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55c9ee9bffc8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55c9ee9c7718 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55c9ee9c7700 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55c9ee9c76e8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55c9ee9c76c8 <col:94, col:101> 'String' (CXXTemporary 0x55c9ee9c76c8)
| |         `-CXXTemporaryObjectExpr 0x55c9ee9c7690 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55c9ee9c7f00 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55c9ee9c7e78 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55c9ee9c7e48 <col:9> '<bound member function type>' ->add_task_handlers 0x55c9ee9bfe08
|     | `-CXXThisExpr 0x55c9ee9c7e38 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55c9ee9c7eb8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9ee9c7db8 <col:27> 'Task *' lvalue ParmVar 0x55c9ee9bfed8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55c9ee9c7ed0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9ee9c7dd8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55c9ee9bff50 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55c9ee9c7ee8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55c9ee9c7df8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55c9ee9bfaa0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55c9ee9c7e18 <col:62> 'const String' lvalue ParmVar 0x55c9ee9bffc8 'prefix' 'const String &'
|-CXXMethodDecl 0x55c9ee9c02b8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55c9ee9c0170 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55c9ee9c01e8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55c9ee9c77c8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55c9ee9c77b0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55c9ee9c7798 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55c9ee9c7778 <col:70, col:77> 'String' (CXXTemporary 0x55c9ee9c7778)
| |         `-CXXTemporaryObjectExpr 0x55c9ee9c7740 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55c9ee9c80d8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55c9ee9c8050 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55c9ee9c8020 <col:9> '<bound member function type>' ->add_task_handlers 0x55c9ee9bfe08
|     | `-CXXThisExpr 0x55c9ee9c8010 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55c9ee9c8090 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9ee9c7f90 <col:27> 'Task *' lvalue ParmVar 0x55c9ee9c0170 'task' 'Task *'
|     |-ImplicitCastExpr 0x55c9ee9c80a8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55c9ee9c7fb0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55c9ee9c80c0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55c9ee9c7fd0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55c9ee9bfaa0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55c9ee9c7ff0 <col:57> 'const String' lvalue ParmVar 0x55c9ee9c01e8 'prefix' 'const String &'
|-CXXMethodDecl 0x55c9ee9c0598 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55c9ee9c0380 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c0400 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c0478 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55c9ee9c0848 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55c9ee9c0668 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c06e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c0768 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55c9ee9c0b38 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55c9ee9c0918 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c0998 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c0a10 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55c9ee9c0de8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55c9ee9c0c08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c0c88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c0d08 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55c9ee9c1098 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55c9ee9c0eb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c0f38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c0fb8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55c9ee9c1348 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55c9ee9c1168 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c11e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c1260 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55c9ee9c15f8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55c9ee9c1418 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c1498 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c1518 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55c9ee9c18a8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55c9ee9c16c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c1748 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c17c8 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55c9ee9c1b88 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55c9ee9c1978 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c19f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c1aa0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55c9ee9c1e68 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55c9ee9c1c58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c1cd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c1d80 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55c9ee9c20d0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55c9ee9c1f38 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c1fb8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55c9ee9c2030 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55c9ee9c2378 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55c9ee9c21a0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c2220 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55c9ee9c2298 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55c9ee9c2628 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55c9ee9c2448 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c24c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c2548 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55c9ee9c28d8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55c9ee9c26f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c2778 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c27f0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55c9ee9c2b88 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55c9ee9c29a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c2a28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c2aa0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55c9ee9c2e58 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55c9ee9c2c58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c2cd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9ee9c2d78 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55c9ee9c3188 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55c9ee9c2f28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c2fa8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55c9ee9c3020 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55c9ee9c3098 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c9ee9c77e0 <col:93> 'bool' false
|-CXXMethodDecl 0x55c9ee9c3370 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c9ee9c3258 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55c9ee9c32d8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55c9ee9c3548 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c9ee9c3430 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55c9ee9c34b0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55c9ee9c3828 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c9ee9c3608 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55c9ee9c3680 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55c9ee9c3700 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55c9ee9c3778 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55c9ee9c3b18 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c9ee9c38f8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55c9ee9c3970 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55c9ee9c39f0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55c9ee9c3a68 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55c9ee9c3d50 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55c9ee9c3bf0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55c9ee9c3c70 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55c9ee9c3f38 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55c9ee9c3e18 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55c9ee9c3e98 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55c9ee9c3fe8 prev 0x55c9ee9bb778 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c9ee9c40e0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55c9ee9c4170 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55c9ee9c41e8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55c9ee9c42a8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55c9ee9c4370 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55c9ee9c44e8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55c9ee9c4420 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55c9ee9c4590 <col:24>
| | `-OptimizeNoneAttr 0x55c9ee9c45e8 <col:34>
| |-CXXMethodDecl 0x55c9ee9c4660 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55c9ee9c4918 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55c9ee9c4710 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55c9ee9c4788 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55c9ee9c4808 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55c9ee9c49d0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55c9ee9c4a08 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55c9ee9c4a70 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55c9ee9c4af8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55c9ee9c4e18 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55c9ee9c4bb0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55c9ee9c4c28 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55c9ee9c4ca0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55c9ee9c4d20 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55c9ee9c4f30 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55c9ee9cb848 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55c9ee9cb848
| | `-ParmVarDecl 0x55c9ee9cb958 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55c9ee9cb9f8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55c9ee9cb9f8
| | `-ParmVarDecl 0x55c9ee9cbb08 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55c9eea8e8b8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c9ee9c4fa8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55c9ee9c5048 <col:38> "" ""
|-CXXMethodDecl 0x55c9ee9c50d8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55c9ee9c5178 <col:44> "" ""
|-AccessSpecDecl 0x55c9ee9c51e8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55c9ee9c5210 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55c9ee9c5310 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55c9ee9c5360 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee9c52f0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55c9ee9c52d0 <col:27> 'int' 4
|-FieldDecl 0x55c9ee9c5418 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55c9ee9c55c8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55c9ee9c5680 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55c9ee9c56e0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55c9ee9c5748 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55c9ee9c5898 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55c9ee9c57d8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55c9ee9c5a48 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55c9ee9c5958 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55c9ee9c5c28 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55c9ee9c5b08 <col:20> col:23 'int'
| `-ParmVarDecl 0x55c9ee9c5b88 <col:25> col:28 'int'
|-CXXMethodDecl 0x55c9ee9c5ed0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55c9ee9c5cf0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55c9ee9c5d70 <col:28> col:31 'int'
| `-ParmVarDecl 0x55c9ee9c5de8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55c9ee9c5f88 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55c9ee9c6050 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55c9ee9c60a0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55c9ee9c60f0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55c9ee9c62d0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55c9ee9c6180 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55c9ee9c61f8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c9ee9c6578 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55c9ee9c6398 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55c9ee9c6418 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55c9ee9c6490 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55c9ee9c6798 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55c9ee9c6648 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55c9ee9c66c8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55c9ee9c6ad0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55c9ee9c6858 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55c9ee9c68d8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55c9ee9c6950 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55c9ee9c69d0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55c9ee9c6cb8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c9ee9c6ba0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55c9ee9c6c20 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55c9ee9c6e08 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55c9ee9c6d78 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55c9ee9c7188 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55c9ee9c6ec8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55c9ee9c6f48 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55c9ee9c6fc0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55c9ee9c7040 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55c9ee9c72a0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class PrioSched
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class NotifierSignal * _signals
           | [sizeof=120, dsize=120, align=8,
           |  nvsize=120, nvalign=8]

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee65c818 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9ee65c938 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55c9ee65c9c8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55c9ee65ca98 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55c9ee65cb80 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9ee65da38 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55c9ee65d8e0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee65dbe8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55c9ee65daf0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55c9ee65dd30 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55c9ee65dca0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55c9ee65de78 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55c9ee65dde8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee65dfc0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55c9ee65df30 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee65e088 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55c9ee65e208 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55c9ee65e140 <col:28> col:31 'int'
|-CXXMethodDecl 0x55c9ee65e2d0 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55c9ee65e418 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55c9ee65e388 <col:28> col:31 'int'
|-CXXMethodDecl 0x55c9ee65e598 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55c9ee65e4d0 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee65e6e0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55c9ee65e650 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee65e7a8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55c9ee65e9e8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee65e858 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c9ee65e8d0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee65ec38 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee65eaa8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c9ee65eb20 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9ee65ece8 <col:86> "" ""
|-CXXMethodDecl 0x55c9ee65ef58 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee65edc8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55c9ee65ee40 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee65f108 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55c9ee65f018 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55c9ee65f2b8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55c9ee65f1c0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55c9ee65f588 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee65f370 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55c9ee65f3e8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c9ee65f460 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee65f8f0 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee65f650 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55c9ee65f6c8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c9ee65f740 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9ee65f9a8 <col:115> "" ""
|-AccessSpecDecl 0x55c9ee65fa18 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55c9ee65fa50 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee65fef8 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55c9ee65fef8
| `-ParmVarDecl 0x55c9ee660008 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55c9ee6600a8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55c9ee6600a8
| `-ParmVarDecl 0x55c9ee6601b8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55c9ee6a78c8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c9ee98e300 <col:7>
|-CXXConstructorDecl 0x55c9ee6a79a0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55c9ee6a79a0
| `-ParmVarDecl 0x55c9ee6a7ab8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55c9ee6a7b28 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55c9ee6a7b28
| `-ParmVarDecl 0x55c9ee6a7c38 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55c9ee990c70 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9eea70038 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9eea70158 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x55c9eea701f8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x55c9eea70258 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x55c9eea7ab88 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x55c9eea7ab88

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9eea702c0 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9eea703d8 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x55c9eea70478 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x55c9eea70508 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x55c9eea79720 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c9eea79b58 <col:11>
|-CXXConstructorDecl 0x55c9eea79828 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x55c9eea79828
| `-ParmVarDecl 0x55c9eea79938 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x55c9eea799d8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x55c9eea799d8
| `-ParmVarDecl 0x55c9eea79ae8 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x55c9eea7a850 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9eea6df70 prev 0x55c9ee9b1cf0 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c9eea6e068 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x55c9eea6e0f8 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x55c9eea6e228 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x55c9eea6e1a0 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x55c9ee9b1d80 'NotifierSignal'
|   | `-CXXRecord 0x55c9eea6df70 'NotifierSignal'
|   `-ParenType 0x55c9eea6e140 'bool () const' sugar
|     `-FunctionProtoType 0x55c9ee4e7c10 'bool () const' const cdecl
|       `-BuiltinType 0x55c9ee43e2f0 'bool'
|-CXXConstructorDecl 0x55c9eea6e2b8 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x55c9eea6e4f8 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x55c9eea6e370 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x55c9eea6e3e8 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55c9eea6e6a8 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x55c9eea6e5e8 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x55c9eea6e7a0 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x55c9eea6e8c8 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55c9eea6e988 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55c9eea6ea48 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55c9eea6eb08 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x55c9eea6ebf8 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x55c9eea6ed68 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55c9eea6eee8 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x55c9eea6ee28 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x55c9eea6efb0 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x55c9eea6f070 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x55c9eea6f130 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x55c9eea6f1f0 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x55c9eea6f4a8 <line:36:5, col:76> col:17
| `-FunctionDecl 0x55c9eea6f3e8 parent 0x55c9ee43e278 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x55c9eea6f2a0 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x55c9eea6f318 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x55c9eea6f6c8 <line:37:5, col:76> col:17
| `-FunctionDecl 0x55c9eea6f608 parent 0x55c9ee43e278 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x55c9eea6f4f8 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x55c9eea6f570 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x55c9eea6f808 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x55c9eea6f718 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x55c9eea6f950 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x55c9eea6f8c0 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x55c9eea6fc18 <line:41:5, col:78> col:27
| `-FunctionDecl 0x55c9eea6fb58 parent 0x55c9ee43e278 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x55c9eea6fa08 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x55c9eea6fa80 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x55c9eea6fd28 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x55c9eea6fc68 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x55c9eea6fea8 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x55c9eea6fde0 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x55c9eea6ff70 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x55c9eea70010 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x55c9eea70038 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c9eea70158 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x55c9eea701f8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x55c9eea70258 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x55c9eea7ab88 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x55c9eea7ab88
|-CXXRecordDecl 0x55c9eea702c0 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c9eea703d8 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x55c9eea70478 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x55c9eea70508 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x55c9eea79720 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c9eea79b58 <col:11>
| |-CXXConstructorDecl 0x55c9eea79828 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x55c9eea79828
| | `-ParmVarDecl 0x55c9eea79938 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x55c9eea799d8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x55c9eea799d8
| | `-ParmVarDecl 0x55c9eea79ae8 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x55c9eea7a850 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x55c9eea70580 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x55c9eea705e0 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x55c9eea70630 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x55c9eea70730 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55c9eea70930 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9eea70710 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55c9eea706f0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55c9eea707c0 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55c9eea70948 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9eea707a0 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x55c9eea70780 <col:30> 'int' 2
| |-EnumConstantDecl 0x55c9eea70850 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x55c9eea70960 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9eea70830 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x55c9eea70810 <col:52> 'int' 4
| `-EnumConstantDecl 0x55c9eea708e0 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x55c9eea70978 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9eea708c0 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x55c9eea708a0 <col:23> 'int' 8
|-VarDecl 0x55c9eea709a0 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x55c9eea70aa8 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x55c9eea70a18 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x55c9eea70c70 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x55c9eea70b60 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x55c9eea70bd8 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x55c9eea70ea8 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x55c9eea70d58 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x55c9eea70dd0 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9eea8d298 <../elements/standard/priosched.hh:25:1, line:43:1> line:25:7 class PrioSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55c9eea8d3f8 <col:1, col:7> col:7 implicit referenced class PrioSched
|-AccessSpecDecl 0x55c9eea8d488 <col:36, col:42> col:36 public
|-CXXConstructorDecl 0x55c9eea8d510 <line:27:5, col:15> col:5 PrioSched 'void ()'
|-CXXMethodDecl 0x55c9eea8d610 <line:29:5, col:58> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55c9ee9b8790 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55c9eea8e550 <col:36, col:58>
|   `-ReturnStmt 0x55c9eea8e540 <col:38, col:45>
|     `-ImplicitCastExpr 0x55c9eea8e528 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55c9eea8e500 <col:45> 'const char [10]' lvalue "PrioSched"
|-CXXMethodDecl 0x55c9eea8d6d8 <line:30:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55c9ee9b8858 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55c9eea8e5b0 <col:36, col:52>
|   `-ReturnStmt 0x55c9eea8e5a0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55c9eea8e588 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55c9eea8e568 <col:45> 'const char [4]' lvalue "-/1"
|-CXXMethodDecl 0x55c9eea8d7a0 <line:31:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55c9ee9b8bc8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55c9eea8e610 <col:36, col:51>
|   `-ReturnStmt 0x55c9eea8e600 <col:38, col:45>
|     `-ImplicitCastExpr 0x55c9eea8e5e8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55c9eea8e5c8 <col:45> 'const char []' lvalue Var 0x55c9ee9b8d98 'PULL' 'const char []'
|-CXXMethodDecl 0x55c9eea8d868 <line:32:5, col:46> col:17 flags 'const char *() const'
| |-Overrides: [ 0x55c9ee9b9110 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x55c9eea8e670 <col:31, col:46>
|   `-ReturnStmt 0x55c9eea8e660 <col:33, col:40>
|     `-ImplicitCastExpr 0x55c9eea8e648 <col:40> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55c9eea8e628 <col:40> 'const char [3]' lvalue "S0"
|-CXXMethodDecl 0x55c9eea8d9b0 <line:34:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55c9ee9ba210 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55c9eea8d918 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x55c9eea8daf8 <line:35:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55c9ee9baa28 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55c9eea8da68 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55c9eea8dc48 <line:37:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x55c9ee9b2758 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55c9eea8dbb8 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x55c9eea8dcf0 <line:39:3, col:10> col:3 private
|-FieldDecl 0x55c9eea8dd28 <line:41:5, col:21> col:21 _signals 'NotifierSignal *'
|-CXXConstructorDecl 0x55c9eea8dda8 <line:25:7> col:7 implicit PrioSched 'void (const PrioSched &)' inline default_delete noexcept-unevaluated 0x55c9eea8dda8
| `-ParmVarDecl 0x55c9eea8deb8 <col:7> col:7 'const PrioSched &'
|-CXXConstructorDecl 0x55c9eea8df58 <col:7> col:7 implicit PrioSched 'void (PrioSched &&)' inline default_delete noexcept-unevaluated 0x55c9eea8df58
| `-ParmVarDecl 0x55c9eea8e068 <col:7> col:7 'PrioSched &&'
|-CXXMethodDecl 0x55c9eea8e108 <col:7> col:7 implicit operator= 'PrioSched &(const PrioSched &)' inline default_delete noexcept-unevaluated 0x55c9eea8e108
| `-ParmVarDecl 0x55c9eea8e218 <col:7> col:7 'const PrioSched &'
|-CXXMethodDecl 0x55c9eea8e288 <col:7> col:7 implicit operator= 'PrioSched &(PrioSched &&)' inline default_delete noexcept-unevaluated 0x55c9eea8e288
| `-ParmVarDecl 0x55c9eea8e398 <col:7> col:7 'PrioSched &&'
`-CXXDestructorDecl 0x55c9eea8e420 <col:7> col:7 implicit ~PrioSched 'void ()' inline default noexcept-unevaluated 0x55c9eea8e420
  `-Overrides: [ 0x55c9ee9b22f8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.PrioSched = type { %class.Element.base, %class.NotifierSignal* }
  NonVirtualBaseLLVMType:%class.PrioSched = type { %class.Element.base, %class.NotifierSignal* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee6cab60 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c9ee6cac78 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55c9ee6cad08 <col:22, col:28> col:22 public
|-EnumDecl 0x55c9ee6cad30 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55c9ee6cae48 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c9ee6cae28 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55c9ee6cae10 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c9ee6cadf0 <col:14> 'int' 999
| |-EnumConstantDecl 0x55c9ee6caef0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c9ee6caed0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55c9ee6caeb8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c9ee6cae98 <col:14> 'int' 1
| |-EnumConstantDecl 0x55c9ee6caf80 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c9ee6caf60 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55c9ee6caf40 <col:17> 'int' 0
| |-EnumConstantDecl 0x55c9ee6cb010 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c9ee6caff0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55c9ee6cafd0 <col:13> 'int' 1
| |-EnumConstantDecl 0x55c9ee6cb0a0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c9ee6cb080 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55c9ee6cb060 <col:16> 'int' 2
| |-EnumConstantDecl 0x55c9ee6cb130 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c9ee6cb110 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55c9ee6cb0f0 <col:13> 'int' 3
| |-EnumConstantDecl 0x55c9ee6cb1c0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c9ee6cb1a0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55c9ee6cb180 <col:15> 'int' 4
| |-EnumConstantDecl 0x55c9ee6cb250 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c9ee6cb230 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55c9ee6cb210 <col:14> 'int' 5
| |-EnumConstantDecl 0x55c9ee6cb2e0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c9ee6cb2c0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55c9ee6cb2a0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55c9ee6cb370 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55c9ee6cb350 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55c9ee6cb330 <col:13> 'int' 7
|-VarDecl 0x55c9ee6cb438 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55c9ee6cb4c0 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55c9ee6cb548 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55c9ee6cb5d0 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55c9ee6cb658 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55c9ee6cb6e0 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55c9ee6cb790 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55c9ee6cb818 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55c9ee6cb8a0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55c9ee6cb928 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55c9ee6cb9b0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55c9ee6cbae0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55c9ee6d1128 '_nerrors' 'int'
| | `-IntegerLiteral 0x55c9ee6d18b8 <line:128:13> 'int' 0
| `-CompoundStmt 0x55c9ee6d3660 <col:16, line:129:5>
|-CXXDestructorDecl 0x55c9ee6cbbd0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55c9ee6d3670 <col:29, line:132:5>
|-CXXMethodDecl 0x55c9ee6cbd88 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55c9ee6cbcc0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c9ee6cbe50 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55c9ee6cbf38 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55c9ee6d36c8 <col:44, line:161:5>
|   `-ReturnStmt 0x55c9ee6d36b8 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55c9ee6d36a0 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee6d3680 <col:9> 'ErrorHandler *' lvalue Var 0x55c9ee6d1188 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55c9ee6cc0a8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55c9ee6cbfe8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c9ee6cc170 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55c9ee6d3728 <col:43, line:173:5>
|   `-ReturnStmt 0x55c9ee6d3718 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55c9ee6d3700 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee6d36e0 <col:9> 'ErrorHandler *' lvalue Var 0x55c9ee6d1200 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55c9ee6cc228 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55c9ee6cc2a8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55c9ee6cc3f0 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55c9ee6cc328 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6cc540 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55c9ee6cc4b0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6cc698 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55c9ee6cc600 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6cc7f0 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x55c9ee6cc758 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6cc948 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55c9ee6cc8b0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6ccb60 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55c9ee6cca00 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55c9ee6cca80 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6ccd38 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55c9ee6ccc20 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55c9ee6ccca0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6ccf58 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55c9ee6ccdf8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55c9ee6cce78 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6cd138 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55c9ee6cd018 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55c9ee6cd098 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6cd318 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55c9ee6cd1f8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55c9ee6cd278 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6cd4a0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55c9ee6cd3d8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55c9ee6cd670 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55c9ee6cd558 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55c9ee6cd5d0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55c9ee6d3988 <col:57, line:234:5>
|   `-ReturnStmt 0x55c9ee6d3978 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55c9ee6d3960 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55c9ee6d3908 <col:9, col:41> 'int'
|         |-MemberExpr 0x55c9ee6d38d8 <col:9> '<bound member function type>' ->xmessage 0x55c9ee6cd4a0
|         | `-CXXThisExpr 0x55c9ee6d38c8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55c9ee6d3948 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55c9ee6d3930 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55c9ee6d38a8 <col:18, col:40> 'String' (CXXTemporary 0x55c9ee6d38a8)
|               `-CallExpr 0x55c9ee6d3870 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55c9ee6d3858 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55c9ee6d37c8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55c9ee6cf910 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55c9ee6d37e8 <col:31> 'const String' lvalue ParmVar 0x55c9ee6cd5d0 'str' 'const String &'
|                 `-DeclRefExpr 0x55c9ee6d3808 <col:36> 'const String' lvalue ParmVar 0x55c9ee6cd558 'anno' 'const String &'
|-CXXMethodDecl 0x55c9ee6cda20 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55c9ee6cd7a0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55c9ee6cd820 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55c9ee6cd8f0 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55c9ee6d3c18 <col:68, line:243:5>
|   `-ReturnStmt 0x55c9ee6d3c08 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55c9ee6d3bf0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55c9ee6d3b90 <col:9, col:41> 'int'
|         |-MemberExpr 0x55c9ee6d3b60 <col:9> '<bound member function type>' ->xmessage 0x55c9ee6cd670
|         | `-CXXThisExpr 0x55c9ee6d3b50 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55c9ee6d3a28 <col:18> 'const String' lvalue ParmVar 0x55c9ee6cd7a0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55c9ee6d3bd8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55c9ee6d3bc0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55c9ee6d3b30 <col:24, col:40> 'String' (CXXTemporary 0x55c9ee6d3b30)
|               `-CXXMemberCallExpr 0x55c9ee6d3ac8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55c9ee6d3a58 <col:24> '<bound member function type>' ->vformat 0x55c9ee6cec00
|                 | `-CXXThisExpr 0x55c9ee6d3a48 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55c9ee6d3af8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55c9ee6d3a88 <col:32> 'const char *' lvalue ParmVar 0x55c9ee6cd820 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55c9ee6d3b10 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55c9ee6d3aa8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55c9ee6cd8f0 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55c9ee6cdcc0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55c9ee6cdae8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55c9ee6cdb60 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55c9ee6cdbd8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55c9ee6d3f58 <col:23, line:254:5>
|   `-ReturnStmt 0x55c9ee6d3f48 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55c9ee6d3f30 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55c9ee6d3ed0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55c9ee6d3ea0 <col:9> '<bound member function type>' ->xmessage 0x55c9ee6cd670
|         | `-CXXThisExpr 0x55c9ee6d3e90 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55c9ee6d3f18 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55c9ee6d3f00 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55c9ee6d3e50 <col:18, col:65> 'String' (CXXTemporary 0x55c9ee6d3e50)
|         |     `-CallExpr 0x55c9ee6d3de8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55c9ee6d3dd0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55c9ee6d3cb8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55c9ee6cf910 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55c9ee6d3cd8 <col:31> 'const String' lvalue ParmVar 0x55c9ee6cdb60 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55c9ee6d3e30 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55c9ee6d3e18 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55c9ee6d3db0 <col:37, col:64> 'String' (CXXTemporary 0x55c9ee6d3db0)
|         |             `-CallExpr 0x55c9ee6d3d80 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55c9ee6d3d68 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55c9ee6d3cf8 <col:37> 'String (const String &)' lvalue CXXMethod 0x55c9ee6cff68 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55c9ee6d3d18 <col:56> 'const String' lvalue ParmVar 0x55c9ee6cdae8 'landmark' 'const String &'
|         `-DeclRefExpr 0x55c9ee6d3e70 <col:68> 'const String' lvalue ParmVar 0x55c9ee6cdbd8 'str' 'const String &'
|-CXXMethodDecl 0x55c9ee6ce040 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55c9ee6cdd88 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55c9ee6cde00 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55c9ee6cde80 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55c9ee6cdef8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55c9ee6d4210 <col:34, line:267:5>
|   `-ReturnStmt 0x55c9ee6d4200 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55c9ee6d41e8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55c9ee6d4180 <col:9, col:51> 'int'
|         |-MemberExpr 0x55c9ee6d4150 <col:9> '<bound member function type>' ->xmessage 0x55c9ee6cdcc0
|         | `-CXXThisExpr 0x55c9ee6d4140 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55c9ee6d3ff8 <col:18> 'const String' lvalue ParmVar 0x55c9ee6cdd88 'landmark' 'const String &'
|         |-DeclRefExpr 0x55c9ee6d4018 <col:28> 'const String' lvalue ParmVar 0x55c9ee6cde00 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55c9ee6d41d0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55c9ee6d41b8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55c9ee6d4120 <col:34, col:50> 'String' (CXXTemporary 0x55c9ee6d4120)
|               `-CXXMemberCallExpr 0x55c9ee6d40b8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55c9ee6d4048 <col:34> '<bound member function type>' ->vformat 0x55c9ee6cec00
|                 | `-CXXThisExpr 0x55c9ee6d4038 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55c9ee6d40e8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55c9ee6d4078 <col:42> 'const char *' lvalue ParmVar 0x55c9ee6cde80 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55c9ee6d4100 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55c9ee6d4098 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55c9ee6cdef8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55c9ee6ce150 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55c9ee6d4290 <col:25, line:288:5>
|   `-ReturnStmt 0x55c9ee6d4280 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55c9ee6d4268 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55c9ee6d4238 <col:9> 'const int' lvalue ->_nerrors 0x55c9ee6d1128
|         `-CXXThisExpr 0x55c9ee6d4228 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55c9ee6ce360 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55c9ee6ce208 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55c9ee6ce288 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6ce648 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55c9ee6ce428 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55c9ee6ce4a8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55c9ee6ce520 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55c9ee6ce7e0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55c9ee6ce718 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6cea28 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55c9ee6ce8a0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55c9ee6ce918 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55c9ee6d44f0 <col:58, line:357:5>
|   `-ReturnStmt 0x55c9ee6d44e0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55c9ee6d44c8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55c9ee6d4498 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55c9ee6d4480 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55c9ee6d4460 <col:9, col:29> 'String' (CXXTemporary 0x55c9ee6d4460)
|             `-CallExpr 0x55c9ee6d43f0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55c9ee6d43d8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55c9ee6d4358 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55c9ee6ce648 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55c9ee6d42f8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55c9ee6d4428 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55c9ee6d4318 <col:21> 'const char *' lvalue ParmVar 0x55c9ee6ce8a0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55c9ee6d4440 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55c9ee6d4338 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55c9ee6ce918 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55c9ee6cec00 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55c9ee6ceaf0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55c9ee6ceb68 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55c9ee6ced58 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55c9ee6cecc8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55c9ee6ceed8 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55c9ee6cee10 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55c9ee6cf170 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55c9ee6cef90 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55c9ee6cf010 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55c9ee6cf088 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55c9ee6cf2d0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55c9ee6cf240 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55c9ee6d4608 <col:37, line:441:5>
|   `-IfStmt 0x55c9ee6d45f0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55c9ee6d4578 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55c9ee6d4548 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55c9ee6d4508 <col:6> 'int' lvalue ParmVar 0x55c9ee6cf240 'level' 'int'
|     | `-ImplicitCastExpr 0x55c9ee6d4560 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55c9ee6d4528 <col:15> 'ErrorHandler::Level' EnumConstant 0x55c9ee6cb130 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55c9ee6d45d8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55c9ee6d45a8 <col:8> 'int' lvalue ->_nerrors 0x55c9ee6d1128
|         `-CXXThisExpr 0x55c9ee6d4598 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55c9ee6cf398 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55c9ee6d46a0 <col:26, line:448:5>
|   `-BinaryOperator 0x55c9ee6d4680 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55c9ee6d4630 <col:2> 'int' lvalue ->_nerrors 0x55c9ee6d1128
|     | `-CXXThisExpr 0x55c9ee6d4620 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55c9ee6d4660 <col:13> 'int' 0
|-CXXMethodDecl 0x55c9ee6cf560 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55c9ee6cf450 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55c9ee6cf4c8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55c9ee6cf910 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55c9ee6cf620 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55c9ee6cf698 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55c9ee6cfbc8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55c9ee6cf9d0 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55c9ee6cfa50 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55c9ee6cfad0 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55c9ee6cfc80 <col:59> 0 0
|-CXXMethodDecl 0x55c9ee6cfe18 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55c9ee6cfcf8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55c9ee6cfd78 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55c9ee6d4d10 <col:70, line:534:5>
|   |-DeclStmt 0x55c9ee6d4810 <line:528:2, col:20>
|   | |-VarDecl 0x55c9ee6d46c8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55c9ee6d4730 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55c9ee6d4768 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55c9ee6d47d0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55c9ee6d48e0 <line:529:2, col:23>
|   | `-VarDecl 0x55c9ee6d4840 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55c9ee6d48c8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55c9ee6d48a8 <col:18> 'const char *' lvalue ParmVar 0x55c9ee6cfcf8 'begin' 'const char *'
|   |-DoStmt 0x55c9ee6d4ca8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55c9ee6d4bd8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55c9ee6d4bc0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55c9ee6d4ba0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55c9ee6d48f8 <col:6> 'const char *' lvalue Var 0x55c9ee6d4840 'x' 'const char *'
|   | |     `-CallExpr 0x55c9ee6d4af0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55c9ee6d4ad8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55c9ee6d4a90 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55c9ee6d1600 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55c9ee6d4b58 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55c9ee6d4b40 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55c9ee6d49b0 <col:20, col:27> 'String' (CXXTemporary 0x55c9ee6d49b0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55c9ee6d4978 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55c9ee6d4b70 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55c9ee6d49d0 <col:30> 'const char *' lvalue Var 0x55c9ee6d4840 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55c9ee6d4b88 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55c9ee6d49f0 <col:33> 'const char *' lvalue ParmVar 0x55c9ee6cfd78 'end' 'const char *'
|   | |       |-UnaryOperator 0x55c9ee6d4a30 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55c9ee6d4a10 <col:39> 'String' lvalue Var 0x55c9ee6d46c8 'name' 'String'
|   | |       |-UnaryOperator 0x55c9ee6d4a68 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55c9ee6d4a48 <col:46> 'String' lvalue Var 0x55c9ee6d4768 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55c9ee6d4a80 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55c9ee6d4c90 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55c9ee6d4c78 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55c9ee6d4c58 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55c9ee6d4c28 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55c9ee67e0b8
|   |         `-ImplicitCastExpr 0x55c9ee6d4c10 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55c9ee6d4bf0 <col:11> 'String' lvalue Var 0x55c9ee6d46c8 'name' 'String'
|   `-ReturnStmt 0x55c9ee6d4d00 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55c9ee6d4ce8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee6d4cc8 <col:9> 'const char *' lvalue Var 0x55c9ee6d4840 'x' 'const char *'
|-CXXMethodDecl 0x55c9ee6cff68 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55c9ee6cfed8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55c9ee6d5318 <col:55, line:550:5>
|   `-IfStmt 0x55c9ee6d52f0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55c9ee6d4f50 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55c9ee6d4f38 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55c9ee6d4f20 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55c9ee6d4f00 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55c9ee6d4ed0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55c9ee67e0b8
|     | |       `-DeclRefExpr 0x55c9ee6d4d70 <col:6> 'const String' lvalue ParmVar 0x55c9ee6cfed8 'x' 'const String &'
|     | `-BinaryOperator 0x55c9ee6d4eb0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55c9ee6d4e80 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55c9ee6d4e30 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55c9ee6d4e18 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55c9ee6d4dd0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55c9ee699000 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55c9ee6d4d90 <col:11> 'const String' lvalue ParmVar 0x55c9ee6cfed8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55c9ee6d4db0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55c9ee6d4e98 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55c9ee6d4e68 <col:19> 'char' 123
|     |-ReturnStmt 0x55c9ee6d4fc0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55c9ee6d4f90 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55c9ee6d4f70 <col:13> 'const String' lvalue ParmVar 0x55c9ee6cfed8 'x' 'const String &'
|     `-IfStmt 0x55c9ee6d52c8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55c9ee6d5058 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55c9ee6d5040 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55c9ee6d5020 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55c9ee6d4ff0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55c9ee67e0b8
|       |       `-DeclRefExpr 0x55c9ee6d4fd0 <col:11> 'const String' lvalue ParmVar 0x55c9ee6cfed8 'x' 'const String &'
|       |-ReturnStmt 0x55c9ee6d51e0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55c9ee6d51c8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55c9ee6d5198 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55c9ee6d5180 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55c9ee6d5160 <col:13, col:29> 'String' (CXXTemporary 0x55c9ee6d5160)
|       |         `-CallExpr 0x55c9ee6d5110 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55c9ee6d50f8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55c9ee6d5070 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55c9ee6cf560 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55c9ee6d5140 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55c9ee6d5090 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55c9ee6d50b0 <col:28> 'const String' lvalue ParmVar 0x55c9ee6cfed8 'x' 'const String &'
|       `-ReturnStmt 0x55c9ee6d52b8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55c9ee6d52a0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55c9ee6d5270 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55c9ee6d5258 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55c9ee6d5238 <col:13, col:20> 'String' (CXXTemporary 0x55c9ee6d5238)
|                 `-CXXTemporaryObjectExpr 0x55c9ee6d5200 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55c9ee6d0168 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55c9ee6d0020 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55c9ee6d0098 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c9ee6d18a8 <col:71> 'bool' false
|-CXXRecordDecl 0x55c9ee6d0218 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55c9ee6d0518 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55c9ee6d04b0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55c9ee6d0450 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55c9ee6d0410 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55c9ee67a3a0 'String'
|       | `-CXXRecord 0x55c9ee67a310 'String'
|       |-BuiltinType 0x55c9ee43e370 'int'
|       `-DecayedType 0x55c9ee6cd8c0 '__va_list_tag *' sugar
|         |-TypedefType 0x55c9ee6cd890 'va_list' sugar
|         | |-Typedef 0x55c9ee6b1010 'va_list'
|         | `-TypedefType 0x55c9ee6b0fc0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55c9ee6ac398 '__gnuc_va_list'
|         |   `-TypedefType 0x55c9ee6ac300 '__builtin_va_list' sugar
|         |     |-Typedef 0x55c9ee47fbd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55c9ee47fb80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55c9ee43f0c0 '__va_list_tag'
|         |         `-CXXRecord 0x55c9ee43f028 '__va_list_tag'
|         `-PointerType 0x55c9ee6b6b90 '__va_list_tag *'
|           `-RecordType 0x55c9ee43f0c0 '__va_list_tag'
|             `-CXXRecord 0x55c9ee43f028 '__va_list_tag'
|-EnumDecl 0x55c9ee6d0570 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55c9ee6d0670 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c9ee6d0bd0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee6d0650 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55c9ee6d0630 <col:16> 'int' 1
| |-EnumConstantDecl 0x55c9ee6d0700 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c9ee6d0be8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee6d06e0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55c9ee6d06c0 <col:21> 'int' 2
| |-EnumConstantDecl 0x55c9ee6d0790 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c9ee6d0c00 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee6d0770 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55c9ee6d0750 <col:22> 'int' 4
| |-EnumConstantDecl 0x55c9ee6d0820 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c9ee6d0c18 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee6d0800 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55c9ee6d07e0 <col:17> 'int' 8
| |-EnumConstantDecl 0x55c9ee6d08b0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c9ee6d0c30 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee6d0890 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55c9ee6d0870 <col:22> 'int' 16
| |-EnumConstantDecl 0x55c9ee6d0940 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c9ee6d0c48 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee6d0920 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55c9ee6d0900 <col:19> 'int' 32
| |-EnumConstantDecl 0x55c9ee6d09d0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c9ee6d0c60 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee6d09b0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55c9ee6d0990 <col:17> 'int' 64
| |-EnumConstantDecl 0x55c9ee6d0a60 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c9ee6d0c78 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee6d0a40 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55c9ee6d0a20 <col:14> 'int' 128
| |-EnumConstantDecl 0x55c9ee6d0af0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c9ee6d0c90 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee6d0ad0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55c9ee6d0ab0 <col:16> 'int' 256
| `-EnumConstantDecl 0x55c9ee6d0b80 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55c9ee6d0ca8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee6d0b60 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55c9ee6d0b40 <col:12> 'int' 1024
|-CXXMethodDecl 0x55c9ee6d0eb8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55c9ee6d0cd0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55c9ee6d0d70 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55c9ee6d1040 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55c9ee6d0f78 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55c9ee6d10e8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55c9ee6d1128 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55c9ee6d1188 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55c9ee6d1200 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55c9ee6d1600 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55c9ee6d1278 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55c9ee6d12f8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55c9ee6d1378 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55c9ee6d13f0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55c9ee6d1468 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55c9ee6d14e0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55c9ee6d1728 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55c9ee6d1728
| `-ParmVarDecl 0x55c9ee6d1838 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55c9ee6dafa8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55c9ee6dafa8
  `-ParmVarDecl 0x55c9ee6db0b8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee655168 prev 0x55c9ee982330 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9ee655260 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55c9ee655350 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55c9ee655478 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55c9ee6555f8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55c9ee655778 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55c9ee6558f8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55c9ee98e468 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c9ee98ecd8 <col:11>
|-CXXDestructorDecl 0x55c9ee98e540 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55c9ee98e678 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55c9ee98e678
| `-ParmVarDecl 0x55c9ee98e788 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55c9ee98e828 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c9ee98e828
| `-ParmVarDecl 0x55c9ee98e938 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55c9ee991668 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c9ee991778 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55c9ee9919f8 <col:11>
|   `-ReturnStmt 0x55c9ee9919e8 <col:11>
|     `-UnaryOperator 0x55c9ee9919d0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c9ee9919c0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55c9ee9917e8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c9ee9917e8
  `-ParmVarDecl 0x55c9ee9918f8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee655960 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9ee655a78 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55c9ee655b18 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55c9ee655b80 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55c9ee655be8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55c9ee655c50 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55c9ee985ca0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55c9ee985d60 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55c9ee985dc0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55c9ee985e20 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55c9ee98e378 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55c9ee655b18 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55c9ee98ece8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55c9ee98ed40 <col:12>
|-CXXConstructorDecl 0x55c9ee98e9a8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55c9ee98e9a8
| `-ParmVarDecl 0x55c9ee98eab8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55c9ee98eb58 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55c9ee98eb58
| `-ParmVarDecl 0x55c9ee98ec68 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55c9ee990d50 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee97ba20 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c9ee97bb38 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55c9ee97bbc8 <col:16, col:22> col:16 public
|-EnumDecl 0x55c9ee97bbf0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55c9ee97bcf0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55c9ee97bdd0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee97bcd0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55c9ee97bcb0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55c9ee97bd80 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55c9ee97bde8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee97bd60 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55c9ee97bd40 <col:22> 'int' 64
|-CXXMethodDecl 0x55c9ee97c128 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55c9ee97be10 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c9ee97be90 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55c9ee97bf08 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c9ee97bf80 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c9ee97c1e8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55c9ee97c3e8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee97c260 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55c9ee97c2d8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c9ee97c498 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55c9ee97c5f8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee97c508 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c9ee97c6a0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55c9ee97c9d0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55c9ee97c960 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55c9ee97c900 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55c9ee97c8c0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55c9ee43e2d0 'void'
|       |-PointerType 0x55c9ee692de0 'unsigned char *'
|       | `-BuiltinType 0x55c9ee43e3d0 'unsigned char'
|       |-TypedefType 0x55c9ee4e4ed0 'size_t' sugar
|       | |-Typedef 0x55c9ee4aeb20 'size_t'
|       | `-BuiltinType 0x55c9ee43e430 'unsigned long'
|       `-PointerType 0x55c9ee43ead0 'void *'
|         `-BuiltinType 0x55c9ee43e2d0 'void'
|-CXXMethodDecl 0x55c9ee97ce48 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55c9ee97ca40 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55c9ee97cab8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c9ee97cb50 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55c9ee97cbd0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55c9ee9872b0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55c9ee987298 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55c9ee987260 <col:58> 'int' 0
| |-ParmVarDecl 0x55c9ee97cc50 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55c9ee9872d8 <col:76> 'int' 0
| |-ParmVarDecl 0x55c9ee97ccd0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55c9ee9872f8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55c9ee97cf18 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55c9ee97cf98 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55c9ee97d058 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55c9ee97d0f8 <col:20>
| `-OptimizeNoneAttr 0x55c9ee97d150 <col:30>
|-CXXMethodDecl 0x55c9ee97d1c8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55c9ee97d268 <col:20>
| `-OptimizeNoneAttr 0x55c9ee97d2c0 <col:30>
|-CXXMethodDecl 0x55c9ee97d338 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55c9ee97d3d8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55c9ee97d488 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55c9ee97d528 <col:20>
| |-OptimizeNoneAttr 0x55c9ee97d580 <col:30>
| `-WarnUnusedResultAttr 0x55c9ee97d5a8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55c9ee97d600 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55c9ee97d6a0 <col:20>
| `-OptimizeNoneAttr 0x55c9ee97d6f8 <col:30>
|-CXXMethodDecl 0x55c9ee97d748 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55c9ee97d7e8 <col:20>
| `-OptimizeNoneAttr 0x55c9ee97d840 <col:30>
|-CXXMethodDecl 0x55c9ee97d888 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55c9ee97d928 <col:20>
| `-OptimizeNoneAttr 0x55c9ee97d980 <col:30>
|-CXXMethodDecl 0x55c9ee97d9c8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9ee97da88 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9ee97db50 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c9ee97dc18 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c9ee97dcd8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9ee97ddf8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55c9ee9873c0 <col:54, line:99:5>
|   `-ReturnStmt 0x55c9ee9873b0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55c9ee987398 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55c9ee987368 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55c9ee986158
|         `-CXXThisExpr 0x55c9ee987358 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55c9ee97df98 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55c9ee97dea8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55c9ee987470 <col:67, line:103:5>
|   `-BinaryOperator 0x55c9ee987450 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55c9ee9873e8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55c9ee986158
|     | `-CXXThisExpr 0x55c9ee9873d8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55c9ee987438 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee987418 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55c9ee97dea8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55c9ee97e090 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55c9ee9874f0 <col:33, line:107:5>
|   `-ReturnStmt 0x55c9ee9874e0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55c9ee9874c8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55c9ee987498 <col:16> 'void *' lvalue ->_destructor_argument 0x55c9ee9861c0
|         `-CXXThisExpr 0x55c9ee987488 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55c9ee97e150 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55c9ee987b20 <col:25, line:113:5>
|   |-ParenExpr 0x55c9ee987868 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55c9ee987838 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee9875a8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55c9ee987580 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55c9ee987548 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55c9ee987518 <col:24> '<bound member function type>' ->shared 0x55c9ee97d1c8
|   |   |       `-ImplicitCastExpr 0x55c9ee987568 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55c9ee987508 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55c9ee987608 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee9875e8 <col:42> 'int' 0
|   |   `-CallExpr 0x55c9ee987798 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee987780 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee987760 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee9877d8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee987678 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55c9ee9877f0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee9876a0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee987808 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee9876d8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55c9ee987820 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee987748 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee987730 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee9876f8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55c9ee987a68 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55c9ee987898 <col:2> 'unsigned char *' lvalue ->_head 0x55c9ee985f60
|   | | `-CXXThisExpr 0x55c9ee987888 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55c9ee987a50 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55c9ee987a30 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55c9ee9878d8 <col:10> 'unsigned char *' lvalue ->_data 0x55c9ee985fc8
|   |     | `-CXXThisExpr 0x55c9ee9878c8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55c9ee987a18 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55c9ee9879f8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55c9ee987918 <col:18> 'unsigned char *' lvalue ->_tail 0x55c9ee986030
|   |         | `-CXXThisExpr 0x55c9ee987908 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55c9ee9879e0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55c9ee9879c0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55c9ee987958 <col:26> 'unsigned char *' lvalue ->_end 0x55c9ee986098
|   |             | `-CXXThisExpr 0x55c9ee987948 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55c9ee9879a8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55c9ee987988 <col:33> 'int' 0
|   `-BinaryOperator 0x55c9ee987b00 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55c9ee987a98 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55c9ee986158
|     | `-CXXThisExpr 0x55c9ee987a88 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55c9ee987ae8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55c9ee987ac8 <col:16> 'int' 0
|-CXXMethodDecl 0x55c9ee97e290 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55c9ee97e200 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9ee97e338 <col:20>
| |-OptimizeNoneAttr 0x55c9ee97e390 <col:30>
| `-WarnUnusedResultAttr 0x55c9ee97e3b8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55c9ee97e488 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55c9ee97e3f8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9ee97e530 <col:20>
| |-OptimizeNoneAttr 0x55c9ee97e588 <col:30>
| `-WarnUnusedResultAttr 0x55c9ee97e5b0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55c9ee97e6e8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55c9ee97e5f0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c9ee97e790 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55c9ee97e890 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55c9ee97e800 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9ee97e938 <col:20>
| `-OptimizeNoneAttr 0x55c9ee97e990 <col:30>
|-CXXMethodDecl 0x55c9ee97ea58 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55c9ee97e9c8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c9ee97eb00 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55c9ee97ec00 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55c9ee97eb70 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c9ee97eca8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55c9ee97eda8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55c9ee97ed18 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9ee97ee50 <col:20>
| `-OptimizeNoneAttr 0x55c9ee97eea8 <col:30>
|-CXXMethodDecl 0x55c9ee97f038 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55c9ee97eee8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55c9ee97ef60 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55c9ee987318 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55c9ee97f0e8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55c9ee97f2e8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee97f160 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55c9ee97f1d8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee97f4f8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee97f3a8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c9ee97f420 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee97f770 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55c9ee97f5b8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55c9ee97f638 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55c9ee987328 <col:39> 'int' 0
|-CXXMethodDecl 0x55c9ee97f840 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55c9ee97f908 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c9ee97f9d0 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c9ee97fa90 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9ee97fb58 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55c9ee97fca0 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55c9ee97fc10 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55c9ee97fe70 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee97fd60 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55c9ee97fdd8 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee97ff40 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55c9ee980000 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55c9ee9800a0 <col:20>
| `-OptimizeNoneAttr 0x55c9ee9800f8 <col:30>
|-CXXMethodDecl 0x55c9ee980148 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55c9ee9801e8 <col:20>
| `-OptimizeNoneAttr 0x55c9ee980240 <col:30>
|-CXXMethodDecl 0x55c9ee980290 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c9ee980350 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9ee980418 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55c9ee9804b8 <col:20>
| `-OptimizeNoneAttr 0x55c9ee980510 <col:30>
|-CXXMethodDecl 0x55c9ee980660 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee980550 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55c9ee9805c8 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee9807b0 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55c9ee980720 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee980878 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55c9ee980938 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55c9ee9809d8 <col:20>
| `-OptimizeNoneAttr 0x55c9ee980a30 <col:30>
|-CXXMethodDecl 0x55c9ee980a80 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55c9ee980b20 <col:20>
| `-OptimizeNoneAttr 0x55c9ee980b78 <col:30>
|-CXXMethodDecl 0x55c9ee980bc8 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c9ee980c90 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55c9ee980d30 <col:20>
| `-OptimizeNoneAttr 0x55c9ee980d88 <col:30>
|-CXXMethodDecl 0x55c9ee980dd0 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55c9ee980ee8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55c9ee981058 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55c9ee980f98 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55c9ee981148 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55c9ee9811e8 <col:20>
| `-OptimizeNoneAttr 0x55c9ee981240 <col:30>
|-CXXMethodDecl 0x55c9ee981290 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c9ee981350 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9ee981588 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55c9ee981400 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55c9ee981478 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9ee981638 <col:20>
| `-OptimizeNoneAttr 0x55c9ee981690 <col:30>
|-CXXMethodDecl 0x55c9ee981738 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55c9ee9817d8 <col:20>
| `-OptimizeNoneAttr 0x55c9ee981830 <col:30>
|-CXXMethodDecl 0x55c9ee981880 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55c9ee981920 <col:20>
| `-OptimizeNoneAttr 0x55c9ee981978 <col:30>
|-CXXMethodDecl 0x55c9ee9819c0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55c9ee981a60 <col:20>
| `-OptimizeNoneAttr 0x55c9ee981ab8 <col:30>
|-CXXMethodDecl 0x55c9ee981bb8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55c9ee981af0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55c9ee981c60 <col:20>
| `-OptimizeNoneAttr 0x55c9ee981cb8 <col:30>
|-CXXMethodDecl 0x55c9ee981e78 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55c9ee981cf0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55c9ee981d68 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9ee981f28 <col:20>
| `-OptimizeNoneAttr 0x55c9ee981f80 <col:30>
|-CXXMethodDecl 0x55c9ee982028 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55c9ee982148 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55c9ee982268 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55c9ee982308 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55c9ee982330 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55c9ee982458 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55c9ee9824f8 <col:20>
| `-OptimizeNoneAttr 0x55c9ee982550 <col:30>
|-CXXMethodDecl 0x55c9ee9825f8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55c9ee982698 <col:20>
| `-OptimizeNoneAttr 0x55c9ee9826f0 <col:30>
|-AccessSpecDecl 0x55c9ee982718 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55c9ee982740 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55c9ee982840 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55c9ee982890 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee982820 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55c9ee982800 <col:14> 'int' 48
|-CXXMethodDecl 0x55c9ee9828f8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55c9ee982998 <col:20>
| `-OptimizeNoneAttr 0x55c9ee9829f0 <col:30>
|-CXXMethodDecl 0x55c9ee982a68 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55c9ee982b08 <col:20>
| `-OptimizeNoneAttr 0x55c9ee982b60 <col:30>
|-CXXMethodDecl 0x55c9ee982c28 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55c9ee982b98 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55c9ee982dc8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55c9ee982f68 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55c9ee982e78 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55c9ee983010 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55c9ee983110 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c9ee9834c0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9830f0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55c9ee9830d0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55c9ee9831a0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c9ee9834d8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee983180 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55c9ee983160 <col:14> 'int' 1
| |-EnumConstantDecl 0x55c9ee983230 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c9ee9834f0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee983210 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55c9ee9831f0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55c9ee9832c0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c9ee983508 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9832a0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55c9ee983280 <col:14> 'int' 3
| |-EnumConstantDecl 0x55c9ee983350 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c9ee983520 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee983330 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55c9ee983310 <col:13> 'int' 4
| |-EnumConstantDecl 0x55c9ee9833e0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c9ee983538 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9833c0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55c9ee9833a0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55c9ee983470 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55c9ee983550 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee983450 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55c9ee983430 <col:14> 'int' 6
|-CXXMethodDecl 0x55c9ee9835b8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55c9ee983658 <col:20>
| `-OptimizeNoneAttr 0x55c9ee9836b0 <col:30>
|-CXXMethodDecl 0x55c9ee646cb8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55c9ee9836e8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55c9ee646d60 <col:20>
| `-OptimizeNoneAttr 0x55c9ee646db8 <col:30>
|-CXXMethodDecl 0x55c9ee646e28 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55c9ee646f50 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55c9ee6470c8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55c9ee647000 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55c9ee647190 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55c9ee647258 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55c9ee647398 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55c9ee647308 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55c9ee647440 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55c9ee647540 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55c9ee647740 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee647520 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55c9ee647500 <col:23> 'int' 0
| |-EnumConstantDecl 0x55c9ee6475d0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55c9ee647758 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee6475b0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55c9ee647590 <col:45> 'int' 4
| |-EnumConstantDecl 0x55c9ee647660 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55c9ee647770 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee647640 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55c9ee647620 <col:24> 'int' 0
| `-EnumConstantDecl 0x55c9ee6476f0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55c9ee647788 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee6476d0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55c9ee6476b0 <col:47> 'int' 16
|-CXXMethodDecl 0x55c9ee6477e8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55c9ee647958 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55c9ee647898 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55c9ee647a00 <col:20>
| `-OptimizeNoneAttr 0x55c9ee647a58 <col:30>
|-CXXMethodDecl 0x55c9ee647aa8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55c9ee987c40 <col:18, col:36>
|   `-ReturnStmt 0x55c9ee987c30 <col:20, col:33>
|     `-ImplicitCastExpr 0x55c9ee987c18 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55c9ee987bf8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55c9ee987bc8 <col:27> '<bound member function type>' ->xanno 0x55c9ee9825f8
|           `-CXXThisExpr 0x55c9ee987bb8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55c9ee647ba0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55c9ee987d50 <col:30, col:48>
|   `-ReturnStmt 0x55c9ee987d40 <col:32, col:45>
|     `-ImplicitCastExpr 0x55c9ee987d28 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55c9ee987d08 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55c9ee987cd8 <col:39> '<bound member function type>' ->xanno 0x55c9ee982458
|           `-CXXThisExpr 0x55c9ee987cc8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55c9ee647c88 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55c9ee987ee8 <col:24, col:50>
|   `-ReturnStmt 0x55c9ee987ed8 <col:26, col:47>
|     `-UnaryOperator 0x55c9ee987ec0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c9ee987ea0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55c9ee987e88 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c9ee987e38 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55c9ee655478
|         |   `-CXXMemberCallExpr 0x55c9ee987e18 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55c9ee987de8 <col:34> '<bound member function type>' ->xanno 0x55c9ee9825f8
|         |       `-CXXThisExpr 0x55c9ee987dd8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55c9ee987e68 <col:46> 'int' 0
|-CXXMethodDecl 0x55c9ee647d78 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55c9ee9880b8 <col:36, col:62>
|   `-ReturnStmt 0x55c9ee9880a8 <col:38, col:59>
|     `-UnaryOperator 0x55c9ee988090 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c9ee988070 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55c9ee988058 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c9ee987fd0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55c9ee655478
|         |   `-CXXMemberCallExpr 0x55c9ee987fb0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55c9ee987f80 <col:46> '<bound member function type>' ->xanno 0x55c9ee982458
|         |       `-CXXThisExpr 0x55c9ee987f70 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55c9ee988000 <col:58> 'int' 0
|-CXXMethodDecl 0x55c9ee647e98 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55c9ee988250 <col:26, col:53>
|   `-ReturnStmt 0x55c9ee988240 <col:28, col:50>
|     `-UnaryOperator 0x55c9ee988228 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c9ee988208 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55c9ee9881f0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c9ee9881a0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55c9ee655778
|         |   `-CXXMemberCallExpr 0x55c9ee988180 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55c9ee988150 <col:36> '<bound member function type>' ->xanno 0x55c9ee9825f8
|         |       `-CXXThisExpr 0x55c9ee988140 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55c9ee9881d0 <col:49> 'int' 0
|-CXXMethodDecl 0x55c9ee647fb8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55c9ee988428 <col:38, col:65>
|   `-ReturnStmt 0x55c9ee988418 <col:40, col:62>
|     `-UnaryOperator 0x55c9ee988400 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c9ee9883e0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55c9ee9883c8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c9ee988338 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55c9ee655778
|         |   `-CXXMemberCallExpr 0x55c9ee988318 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55c9ee9882e8 <col:48> '<bound member function type>' ->xanno 0x55c9ee982458
|         |       `-CXXThisExpr 0x55c9ee9882d8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55c9ee988368 <col:61> 'int' 0
|-CXXMethodDecl 0x55c9ee648168 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55c9ee648070 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55c9ee988af8 <col:34, line:463:5>
|   |-ParenExpr 0x55c9ee988940 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55c9ee988910 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee988578 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee988548 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee988498 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee988480 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee988440 <col:23> 'int' lvalue ParmVar 0x55c9ee648070 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee988460 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee988528 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9ee9884f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee9884b8 <col:33> 'int' lvalue ParmVar 0x55c9ee648070 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55c9ee988510 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55c9ee9884d8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55c9ee9885d8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee9885b8 <col:56> 'int' 0
|   |   `-CallExpr 0x55c9ee988870 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee988858 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee988838 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee9888b0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee9886c8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55c9ee9888c8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee9886f8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee9888e0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee988730 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55c9ee9888f8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee988820 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee988808 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee9887c8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55c9ee988ae8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55c9ee988ad0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55c9ee988ab0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55c9ee988a80 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c9ee988a30 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55c9ee655478
|         |   `-CXXMemberCallExpr 0x55c9ee988a10 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55c9ee9889e0 <col:9> '<bound member function type>' ->xanno 0x55c9ee982458
|         |       `-CXXThisExpr 0x55c9ee9889d0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55c9ee988a98 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55c9ee988a60 <col:21> 'int' lvalue ParmVar 0x55c9ee648070 'i' 'int'
|-CXXMethodDecl 0x55c9ee6483b8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55c9ee648228 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55c9ee6482a0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55c9ee989188 <col:40, line:472:5>
|   |-ParenExpr 0x55c9ee988fa0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55c9ee988f70 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee988c50 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee988c20 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee988b70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee988b58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee988b18 <col:23> 'int' lvalue ParmVar 0x55c9ee648228 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee988b38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee988c00 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9ee988bd0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee988b90 <col:33> 'int' lvalue ParmVar 0x55c9ee648228 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55c9ee988be8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55c9ee988bb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55c9ee988cb0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee988c90 <col:56> 'int' 0
|   |   `-CallExpr 0x55c9ee988ed0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee988eb8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee988e98 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee988f10 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee988d20 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55c9ee988f28 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee988d50 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee988f40 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee988d88 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55c9ee988f58 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee988e80 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee988e68 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee988e28 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55c9ee989168 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55c9ee989110 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55c9ee9890e0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55c9ee989090 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55c9ee655478
|     | |   `-CXXMemberCallExpr 0x55c9ee989070 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55c9ee989040 <col:2> '<bound member function type>' ->xanno 0x55c9ee9825f8
|     | |       `-CXXThisExpr 0x55c9ee989030 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55c9ee9890f8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55c9ee9890c0 <col:14> 'int' lvalue ParmVar 0x55c9ee648228 'i' 'int'
|     `-ImplicitCastExpr 0x55c9ee989150 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee989130 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55c9ee6482a0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55c9ee648578 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55c9ee648480 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55c9ee989908 <col:36, line:485:5>
|   |-ParenExpr 0x55c9ee989670 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9ee989640 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee989320 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee9892f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee989200 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee9891e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee9891a8 <col:23> 'int' lvalue ParmVar 0x55c9ee648480 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee9891c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee9892d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9ee9892b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee989220 <col:33> 'int' lvalue ParmVar 0x55c9ee648480 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9ee989298 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9ee989280 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9ee989240 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9ee989260 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c9ee989380 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee989360 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9ee9895a0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee989588 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee989568 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee9895e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee9893f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c9ee9895f8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee989428 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee989610 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee989460 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55c9ee989628 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee989550 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee989538 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee9894f8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55c9ee9898f8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55c9ee9898e0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55c9ee9898c8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c9ee989898 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55c9ee989838 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c9ee989808 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c9ee989780 <col:61, col:70> 'char const[48]' lvalue ->c 0x55c9ee655350
|             |   `-CXXMemberCallExpr 0x55c9ee989760 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c9ee989730 <col:61> '<bound member function type>' ->xanno 0x55c9ee982458
|             |       `-CXXThisExpr 0x55c9ee989720 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c9ee989820 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c9ee9897b0 <col:74> 'int' lvalue ParmVar 0x55c9ee648480 'i' 'int'
|-CXXMethodDecl 0x55c9ee6487c8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55c9ee648638 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c9ee6486b0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55c9ee98a098 <col:42, line:500:5>
|   |-ParenExpr 0x55c9ee989e28 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9ee989df8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee989aa0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee989a70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee989980 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee989968 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee989928 <col:23> 'int' lvalue ParmVar 0x55c9ee648638 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee989948 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee989a50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9ee989a38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee9899a0 <col:33> 'int' lvalue ParmVar 0x55c9ee648638 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9ee989a18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9ee989a00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9ee9899c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9ee9899e0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c9ee989b00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee989ae0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9ee989d58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee989d40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee989d20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee989d98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee989b70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c9ee989db0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee989ba8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee989dc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee989be0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55c9ee989de0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee989d08 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee989cf0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee989cb0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55c9ee98a078 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55c9ee98a028 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c9ee989ff8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55c9ee989f98 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c9ee989f68 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c9ee989f18 <col:48, col:57> 'char [48]' lvalue ->c 0x55c9ee655350
|     |     |   `-CXXMemberCallExpr 0x55c9ee989ef8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c9ee989ec8 <col:48> '<bound member function type>' ->xanno 0x55c9ee9825f8
|     |     |       `-CXXThisExpr 0x55c9ee989eb8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c9ee989f80 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c9ee989f48 <col:61> 'int' lvalue ParmVar 0x55c9ee648638 'i' 'int'
|     `-ImplicitCastExpr 0x55c9ee98a060 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee98a040 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55c9ee6486b0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55c9ee648988 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55c9ee648890 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55c9ee98a7f8 <col:35, line:513:5>
|   |-ParenExpr 0x55c9ee98a508 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9ee98a4d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee98a230 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee98a200 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee98a110 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee98a0f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee98a0b8 <col:23> 'int' lvalue ParmVar 0x55c9ee648890 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee98a0d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee98a1e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9ee98a1c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee98a130 <col:33> 'int' lvalue ParmVar 0x55c9ee648890 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9ee98a1a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9ee98a190 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9ee98a150 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9ee98a170 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c9ee98a290 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee98a270 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9ee98a438 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee98a420 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee98a400 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee98a478 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98a300 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c9ee98a490 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98a338 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee98a4a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee98a370 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55c9ee98a4c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee98a3e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee98a3d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee98a390 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55c9ee98a7e8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55c9ee98a7d0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55c9ee98a7b8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c9ee98a788 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55c9ee98a700 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c9ee98a6d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c9ee98a680 <col:60, col:69> 'char const[48]' lvalue ->c 0x55c9ee655350
|             |   `-CXXMemberCallExpr 0x55c9ee98a660 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c9ee98a630 <col:60> '<bound member function type>' ->xanno 0x55c9ee982458
|             |       `-CXXThisExpr 0x55c9ee98a620 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c9ee98a6e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c9ee98a6b0 <col:73> 'int' lvalue ParmVar 0x55c9ee648890 'i' 'int'
|-CXXMethodDecl 0x55c9ee648bd8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55c9ee648a48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c9ee648ac0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55c9ee98af08 <col:41, line:528:5>
|   |-ParenExpr 0x55c9ee98aca0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9ee98ac70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee98a990 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee98a960 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee98a870 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee98a858 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee98a818 <col:23> 'int' lvalue ParmVar 0x55c9ee648a48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee98a838 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee98a940 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9ee98a928 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee98a890 <col:33> 'int' lvalue ParmVar 0x55c9ee648a48 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9ee98a908 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9ee98a8f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9ee98a8b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9ee98a8d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c9ee98a9f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee98a9d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9ee98abd0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee98abb8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee98ab98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee98ac10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98aa60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c9ee98ac28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98aa98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee98ac40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee98aad0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55c9ee98ac58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee98ab80 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee98ab68 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee98ab28 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55c9ee98aee8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55c9ee98ae98 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c9ee98ae68 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55c9ee98ae10 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c9ee98ade0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c9ee98ad90 <col:47, col:56> 'char [48]' lvalue ->c 0x55c9ee655350
|     |     |   `-CXXMemberCallExpr 0x55c9ee98ad70 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c9ee98ad40 <col:47> '<bound member function type>' ->xanno 0x55c9ee9825f8
|     |     |       `-CXXThisExpr 0x55c9ee98ad30 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c9ee98adf8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c9ee98adc0 <col:60> 'int' lvalue ParmVar 0x55c9ee648a48 'i' 'int'
|     `-ImplicitCastExpr 0x55c9ee98aed0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee98aeb0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55c9ee648ac0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55c9ee648d98 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55c9ee648ca0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55c9ee98b5d8 <col:36, line:541:5>
|   |-ParenExpr 0x55c9ee98b378 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9ee98b348 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee98b0a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee98b070 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee98af80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee98af68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee98af28 <col:23> 'int' lvalue ParmVar 0x55c9ee648ca0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee98af48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee98b050 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9ee98b038 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee98afa0 <col:33> 'int' lvalue ParmVar 0x55c9ee648ca0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9ee98b018 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9ee98b000 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9ee98afc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9ee98afe0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55c9ee98b100 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee98b0e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9ee98b2a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee98b290 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee98b270 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee98b2e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98b170 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55c9ee98b300 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98b1a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee98b318 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee98b1e0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55c9ee98b330 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee98b258 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee98b240 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee98b200 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55c9ee98b5c8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55c9ee98b5b0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55c9ee98b598 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c9ee98b568 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55c9ee98b510 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c9ee98b4e0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c9ee98b490 <col:61, col:70> 'char const[48]' lvalue ->c 0x55c9ee655350
|             |   `-CXXMemberCallExpr 0x55c9ee98b470 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c9ee98b440 <col:61> '<bound member function type>' ->xanno 0x55c9ee982458
|             |       `-CXXThisExpr 0x55c9ee98b430 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c9ee98b4f8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c9ee98b4c0 <col:74> 'int' lvalue ParmVar 0x55c9ee648ca0 'i' 'int'
|-CXXMethodDecl 0x55c9ee648f68 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55c9ee648e58 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55c9ee648ed0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9ee649018 <col:20>
| `-OptimizeNoneAttr 0x55c9ee649070 <col:30>
|-CXXMethodDecl 0x55c9ee6491a8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55c9ee6490b0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55c9ee98bca8 <col:35, line:562:5>
|   |-ParenExpr 0x55c9ee98ba48 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9ee98ba18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee98b770 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee98b740 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee98b650 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee98b638 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee98b5f8 <col:23> 'int' lvalue ParmVar 0x55c9ee6490b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee98b618 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee98b720 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9ee98b708 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee98b670 <col:33> 'int' lvalue ParmVar 0x55c9ee6490b0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9ee98b6e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9ee98b6d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9ee98b690 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9ee98b6b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55c9ee98b7d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee98b7b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9ee98b978 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee98b960 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee98b940 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee98b9b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98b840 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55c9ee98b9d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98b878 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee98b9e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee98b8b0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55c9ee98ba00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee98b928 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee98b910 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee98b8d0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55c9ee98bc98 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55c9ee98bc80 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55c9ee98bc68 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c9ee98bc38 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55c9ee98bbe0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c9ee98bbb0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c9ee98bb60 <col:60, col:69> 'char const[48]' lvalue ->c 0x55c9ee655350
|             |   `-CXXMemberCallExpr 0x55c9ee98bb40 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c9ee98bb10 <col:60> '<bound member function type>' ->xanno 0x55c9ee982458
|             |       `-CXXThisExpr 0x55c9ee98bb00 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c9ee98bbc8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c9ee98bb90 <col:73> 'int' lvalue ParmVar 0x55c9ee6490b0 'i' 'int'
|-CXXMethodDecl 0x55c9ee6493b8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55c9ee649268 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c9ee6492e0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55c9ee98c388 <col:41, line:577:5>
|   |-ParenExpr 0x55c9ee98c118 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9ee98c0e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee98be40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee98be10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee98bd20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee98bd08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee98bcc8 <col:23> 'int' lvalue ParmVar 0x55c9ee649268 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee98bce8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee98bdf0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9ee98bdd8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee98bd40 <col:33> 'int' lvalue ParmVar 0x55c9ee649268 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9ee98bdb8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9ee98bda0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9ee98bd60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9ee98bd80 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55c9ee98bea0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee98be80 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9ee98c048 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee98c030 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee98c010 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee98c088 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98bf10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55c9ee98c0a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98bf48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee98c0b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee98bf80 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55c9ee98c0d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee98bff8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee98bfe0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee98bfa0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55c9ee98c368 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55c9ee98c318 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c9ee98c2e8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55c9ee98c288 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c9ee98c258 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c9ee98c208 <col:47, col:56> 'char [48]' lvalue ->c 0x55c9ee655350
|     |     |   `-CXXMemberCallExpr 0x55c9ee98c1e8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c9ee98c1b8 <col:47> '<bound member function type>' ->xanno 0x55c9ee9825f8
|     |     |       `-CXXThisExpr 0x55c9ee98c1a8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c9ee98c270 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c9ee98c238 <col:60> 'int' lvalue ParmVar 0x55c9ee649268 'i' 'int'
|     `-ImplicitCastExpr 0x55c9ee98c350 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee98c330 <col:65> 'int32_t':'int' lvalue ParmVar 0x55c9ee6492e0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55c9ee649578 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55c9ee649480 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55c9ee98cab8 <col:36, line:591:5>
|   |-ParenExpr 0x55c9ee98c7f8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9ee98c7c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee98c520 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee98c4f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee98c400 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee98c3e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee98c3a8 <col:23> 'int' lvalue ParmVar 0x55c9ee649480 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee98c3c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee98c4d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9ee98c4b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee98c420 <col:33> 'int' lvalue ParmVar 0x55c9ee649480 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9ee98c498 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9ee98c480 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9ee98c440 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9ee98c460 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55c9ee98c580 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee98c560 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9ee98c728 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee98c710 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee98c6f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee98c768 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98c5f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55c9ee98c780 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98c628 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee98c798 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee98c660 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55c9ee98c7b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee98c6d8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee98c6c0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee98c680 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55c9ee98caa8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55c9ee98ca90 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55c9ee98ca78 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c9ee98ca48 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55c9ee98c9c0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c9ee98c990 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c9ee98c940 <col:61, col:70> 'char const[48]' lvalue ->c 0x55c9ee655350
|             |   `-CXXMemberCallExpr 0x55c9ee98c920 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c9ee98c8f0 <col:61> '<bound member function type>' ->xanno 0x55c9ee982458
|             |       `-CXXThisExpr 0x55c9ee98c8e0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c9ee98c9a8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c9ee98c970 <col:74> 'int' lvalue ParmVar 0x55c9ee649480 'i' 'int'
|-CXXMethodDecl 0x55c9ee6497c8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55c9ee649638 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c9ee6496b0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55c9ee98d198 <col:42, line:606:5>
|   |-ParenExpr 0x55c9ee98cf28 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9ee98cef8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee98cc50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee98cc20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee98cb30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee98cb18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee98cad8 <col:23> 'int' lvalue ParmVar 0x55c9ee649638 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee98caf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee98cc00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9ee98cbe8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee98cb50 <col:33> 'int' lvalue ParmVar 0x55c9ee649638 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9ee98cbc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9ee98cbb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9ee98cb70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9ee98cb90 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55c9ee98ccb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee98cc90 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9ee98ce58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee98ce40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee98ce20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee98ce98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98cd20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55c9ee98ceb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98cd58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee98cec8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee98cd90 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55c9ee98cee0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee98ce08 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee98cdf0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee98cdb0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55c9ee98d178 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55c9ee98d128 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c9ee98d0f8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55c9ee98d098 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c9ee98d068 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c9ee98d018 <col:48, col:57> 'char [48]' lvalue ->c 0x55c9ee655350
|     |     |   `-CXXMemberCallExpr 0x55c9ee98cff8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c9ee98cfc8 <col:48> '<bound member function type>' ->xanno 0x55c9ee9825f8
|     |     |       `-CXXThisExpr 0x55c9ee98cfb8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c9ee98d080 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c9ee98d048 <col:61> 'int' lvalue ParmVar 0x55c9ee649638 'i' 'int'
|     `-ImplicitCastExpr 0x55c9ee98d160 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee98d140 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55c9ee6496b0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55c9ee649960 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55c9ee649890 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55c9ee98da08 <col:33, line:620:5>
|   |-ParenExpr 0x55c9ee98d780 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55c9ee98d750 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee98d3a0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee98d370 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee98d210 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee98d1f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee98d1b8 <col:23> 'int' lvalue ParmVar 0x55c9ee649890 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee98d1d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee98d350 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55c9ee98d338 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee98d230 <col:33> 'int' lvalue ParmVar 0x55c9ee649890 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9ee98d318 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9ee98d300 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9ee98d250 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55c9ee98d2d8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55c9ee98d2c0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55c9ee98d288 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55c9ee98d400 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee98d3e0 <col:79> 'int' 0
|   |   `-CallExpr 0x55c9ee98d6b0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee98d698 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee98d678 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee98d6f0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98d4e8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55c9ee98d708 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98d530 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee98d720 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee98d568 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55c9ee98d738 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee98d660 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee98d648 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee98d608 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55c9ee98d9f8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55c9ee98d9e0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55c9ee98d9c8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c9ee98d998 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55c9ee98d910 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c9ee98d8e0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c9ee98d890 <col:67, col:76> 'char const[48]' lvalue ->c 0x55c9ee655350
|             |   `-CXXMemberCallExpr 0x55c9ee98d870 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c9ee98d840 <col:67> '<bound member function type>' ->xanno 0x55c9ee982458
|             |       `-CXXThisExpr 0x55c9ee98d830 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c9ee98d8f8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c9ee98d8c0 <col:80> 'int' lvalue ParmVar 0x55c9ee649890 'i' 'int'
|-CXXMethodDecl 0x55c9ee649b78 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55c9ee649a20 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c9ee649aa0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55c9ee98e260 <col:45, line:635:5>
|   |-ParenExpr 0x55c9ee98dfa8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55c9ee98df78 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55c9ee98dc10 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9ee98dbe0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9ee98da80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9ee98da68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9ee98da28 <col:23> 'int' lvalue ParmVar 0x55c9ee649a20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9ee98da48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9ee98dbc0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55c9ee98dba8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9ee98daa0 <col:33> 'int' lvalue ParmVar 0x55c9ee649a20 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9ee98db88 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9ee98db70 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9ee98dac0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9ee982840 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55c9ee98db48 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55c9ee98db30 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55c9ee98daf8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55c9ee98dc70 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9ee98dc50 <col:79> 'int' 0
|   |   `-CallExpr 0x55c9ee98ded8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55c9ee98dec0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee98dea0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9ee98df18 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98dd08 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55c9ee98df30 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9ee98dd50 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9ee98df48 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9ee98dd88 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55c9ee98df60 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9ee98de88 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9ee98de70 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9ee98de28 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55c9ee98e240 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55c9ee98e1a8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c9ee98e178 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55c9ee98e118 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c9ee98e0e8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c9ee98e098 <col:54, col:63> 'char [48]' lvalue ->c 0x55c9ee655350
|     |     |   `-CXXMemberCallExpr 0x55c9ee98e078 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c9ee98e048 <col:54> '<bound member function type>' ->xanno 0x55c9ee9825f8
|     |     |       `-CXXThisExpr 0x55c9ee98e038 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c9ee98e100 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c9ee98e0c8 <col:67> 'int' lvalue ParmVar 0x55c9ee649a20 'i' 'int'
|     `-CXXConstCastExpr 0x55c9ee98e210 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55c9ee98e1f8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55c9ee98e1c0 <col:91> 'const void *' lvalue ParmVar 0x55c9ee649aa0 'x' 'const void *'
|-CXXMethodDecl 0x55c9ee649c48 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55c9ee98e2e8 <col:34, line:640:5>
|   `-ReturnStmt 0x55c9ee98e2d8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55c9ee98e2c0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55c9ee98e290 <col:16> 'Packet *' lvalue ->_data_packet 0x55c9ee985ef8
|         `-CXXThisExpr 0x55c9ee98e280 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55c9ee649d88 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55c9ee649cf8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c9ee987348 <col:46> 'bool' true
|-CXXMethodDecl 0x55c9ee649f08 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55c9ee649e40 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55c9ee649fb0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55c9ee64a760 <line:660:22> "" ""
| |-EnumConstantDecl 0x55c9ee64a0b0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9ee64a7d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee64a090 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55c9ee64a070 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55c9ee97bcf0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55c9ee64a140 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9ee64a7e8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee64a120 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55c9ee64a100 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55c9ee97bd80 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55c9ee64a1d0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9ee64a800 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee64a1b0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55c9ee64a190 <col:21> 'int' 0
| |-EnumConstantDecl 0x55c9ee64a260 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9ee64a818 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee64a240 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55c9ee64a220 <col:19> 'int' 16
| |-EnumConstantDecl 0x55c9ee64a2f0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9ee64a830 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee64a2d0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55c9ee64a2b0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55c9ee64a380 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9ee64a848 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee64a360 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55c9ee64a340 <col:19> 'int' 32
| |-EnumConstantDecl 0x55c9ee64a410 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9ee64a860 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee64a3f0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55c9ee64a3d0 <col:19> 'int' EnumConstant 0x55c9ee64a260 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55c9ee64a4a0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9ee64a878 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee64a480 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55c9ee64a460 <col:19> 'int' EnumConstant 0x55c9ee64a380 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55c9ee64a570 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9ee64a890 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee64a550 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55c9ee64a530 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55c9ee64a4f0 <col:23> 'int' EnumConstant 0x55c9ee64a4a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55c9ee64a510 <col:40> 'int' 2
| |-EnumConstantDecl 0x55c9ee64a640 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9ee64a8a8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee64a620 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55c9ee64a600 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55c9ee64a5c0 <col:23> 'int' EnumConstant 0x55c9ee64a4a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55c9ee64a5e0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55c9ee64a710 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55c9ee64a8c0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee64a6f0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55c9ee64a6d0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55c9ee64a690 <col:23> 'int' EnumConstant 0x55c9ee64a4a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55c9ee64a6b0 <col:40> 'int' 8
|-CXXMethodDecl 0x55c9ee64a900 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55c9ee64a9a0 <col:68> "" ""
|-CXXMethodDecl 0x55c9ee64aa38 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55c9ee64aad8 <col:45> "" ""
|-CXXMethodDecl 0x55c9ee64ab70 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55c9ee64ac10 <col:57> "" ""
|-CXXMethodDecl 0x55c9ee651d28 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55c9ee651dc8 <col:45> "" ""
|-CXXMethodDecl 0x55c9ee651e60 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55c9ee651f00 <col:57> "" ""
|-CXXMethodDecl 0x55c9ee651f90 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55c9ee652030 <col:51> "" ""
|-CXXMethodDecl 0x55c9ee6520c0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55c9ee652160 <col:63> "" ""
|-CXXMethodDecl 0x55c9ee6521f0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55c9ee652290 <col:53> "" ""
|-CXXMethodDecl 0x55c9ee652320 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55c9ee6523c0 <col:65> "" ""
|-CXXMethodDecl 0x55c9ee6524d8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55c9ee652448 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55c9ee652580 <col:61> "" ""
|-CXXMethodDecl 0x55c9ee652718 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55c9ee652608 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55c9ee652680 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55c9ee6527c8 <col:67> "" ""
|-CXXMethodDecl 0x55c9ee6528e0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55c9ee652850 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55c9ee652988 <col:63> "" ""
|-CXXMethodDecl 0x55c9ee652b20 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55c9ee652a10 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c9ee652a88 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55c9ee652bd0 <col:69> "" ""
|-CXXMethodDecl 0x55c9ee652ce8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55c9ee652c58 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55c9ee652d90 <col:63> "" ""
|-CXXMethodDecl 0x55c9ee652f28 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee652e18 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c9ee652e90 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9ee652fd8 <col:69> "" ""
|-CXXMethodDecl 0x55c9ee6530f0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55c9ee653060 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55c9ee653198 <col:62> "" ""
|-CXXMethodDecl 0x55c9ee653330 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55c9ee653220 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c9ee653298 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55c9ee6533e0 <col:68> "" ""
|-CXXMethodDecl 0x55c9ee6534f8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55c9ee653468 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55c9ee6535a0 <col:63> "" ""
|-CXXMethodDecl 0x55c9ee653738 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55c9ee653628 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c9ee6536a0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55c9ee6537e8 <col:69> "" ""
|-CXXMethodDecl 0x55c9ee653878 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55c9ee653918 <col:64> "" ""
|-CXXMethodDecl 0x55c9ee6539a8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55c9ee653a48 <col:52> "" ""
|-CXXMethodDecl 0x55c9ee653ad8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55c9ee653b78 <col:67> "" ""
|-CXXMethodDecl 0x55c9ee653c08 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55c9ee653ca8 <col:55> "" ""
|-CXXMethodDecl 0x55c9ee653dc0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55c9ee653d30 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55c9ee653e68 <col:58> "" ""
|-CXXMethodDecl 0x55c9ee654000 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55c9ee653ef0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c9ee653f68 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55c9ee6540b0 <col:62> "" ""
|-CXXMethodDecl 0x55c9ee6541c8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55c9ee654138 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55c9ee654270 <col:58> "" ""
|-CXXMethodDecl 0x55c9ee654408 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55c9ee6542f8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c9ee654370 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55c9ee6544b8 <col:62> "" ""
|-CXXMethodDecl 0x55c9ee6545d0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55c9ee654540 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55c9ee654678 <col:60> "" ""
|-CXXMethodDecl 0x55c9ee654810 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55c9ee654700 <col:34> col:37 'int'
| |-ParmVarDecl 0x55c9ee654778 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55c9ee6548c0 <col:64> "" ""
|-CXXMethodDecl 0x55c9ee6549d8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55c9ee654948 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55c9ee654a80 <col:58> "" ""
|-CXXMethodDecl 0x55c9ee654c18 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55c9ee654b08 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c9ee654b80 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55c9ee654cc8 <col:62> "" ""
|-CXXMethodDecl 0x55c9ee654de0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55c9ee654d50 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55c9ee654e88 <col:59> "" ""
|-CXXMethodDecl 0x55c9ee655020 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee654f10 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c9ee654f88 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9ee6550d0 <col:63> "" ""
|-AccessSpecDecl 0x55c9ee655140 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55c9ee655168 prev 0x55c9ee982330 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c9ee655260 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55c9ee655350 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55c9ee655478 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55c9ee6555f8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55c9ee655778 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55c9ee6558f8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55c9ee98e468 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c9ee98ecd8 <col:11>
| |-CXXDestructorDecl 0x55c9ee98e540 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55c9ee98e678 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55c9ee98e678
| | `-ParmVarDecl 0x55c9ee98e788 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55c9ee98e828 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c9ee98e828
| | `-ParmVarDecl 0x55c9ee98e938 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55c9ee991668 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c9ee991778 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55c9ee9919f8 <col:11>
| |   `-ReturnStmt 0x55c9ee9919e8 <col:11>
| |     `-UnaryOperator 0x55c9ee9919d0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55c9ee9919c0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55c9ee9917e8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c9ee9917e8
|   `-ParmVarDecl 0x55c9ee9918f8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55c9ee655960 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c9ee655a78 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55c9ee655b18 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55c9ee655b80 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55c9ee655be8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55c9ee655c50 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55c9ee985ca0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55c9ee985d60 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55c9ee985dc0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55c9ee985e20 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55c9ee98e378 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55c9ee655b18 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55c9ee98ece8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55c9ee98ed40 <col:12>
| |-CXXConstructorDecl 0x55c9ee98e9a8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55c9ee98e9a8
| | `-ParmVarDecl 0x55c9ee98eab8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55c9ee98eb58 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55c9ee98eb58
| | `-ParmVarDecl 0x55c9ee98ec68 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55c9ee990d50 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55c9ee985e98 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55c9ee985ef8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55c9ee985f60 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55c9ee985fc8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55c9ee986030 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55c9ee986098 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55c9ee9860f8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55c9ee986158 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55c9ee9861c0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55c9ee986248 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55c9ee985e98 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55c9ee98e310 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55c9ee9860f8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55c9ee98ed50 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55c9ee98edb0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55c9ee9863e8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55c9ee986328 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55c9ee9864e0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55c9ee9866c8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55c9ee9865d0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55c9ee986998 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55c9ee986780 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c9ee9867f8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c9ee986870 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee986bb8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55c9ee986a68 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55c9ee986ae0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55c9ee986e88 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55c9ee986c78 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55c9ee986cf0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55c9ee986d68 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55c9ee986fe0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55c9ee986f50 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee987128 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55c9ee987098 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55c9ee987220 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee93f710 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9ee93f828 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55c9ee93f8f8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55c9ee93f958 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55c9ee93f9c0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55c9ee93fa48 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55c9ee93fcb0 <col:16, line:46:5>
|   |-BinaryOperator 0x55c9ee93fbf8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55c9ee93fb18 <col:9> 'TaskLink *' lvalue ->_prev 0x55c9ee93f8f8
|   | | `-CXXThisExpr 0x55c9ee93fb08 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55c9ee93fbe0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55c9ee93fbc0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55c9ee93fb58 <col:17> 'TaskLink *' lvalue ->_next 0x55c9ee93f958
|   |     | `-CXXThisExpr 0x55c9ee93fb48 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55c9ee93fba8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55c9ee93fb88 <col:25> 'int' 0
|   `-BinaryOperator 0x55c9ee93fc90 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55c9ee93fc28 <col:9> 'unsigned int' lvalue ->_pass 0x55c9ee93f9c0
|     | `-CXXThisExpr 0x55c9ee93fc18 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55c9ee93fc78 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55c9ee93fc58 <col:17> 'int' 0
|-CXXConstructorDecl 0x55c9eea60708 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55c9eea60708
| `-ParmVarDecl 0x55c9eea60818 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55c9eea608b8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55c9eea608b8
| `-ParmVarDecl 0x55c9eea609c8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55c9eea60bb8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55c9eea60bb8
|-CXXMethodDecl 0x55c9eea613b8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55c9eea613b8
| `-ParmVarDecl 0x55c9eea614c8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55c9eea61538 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55c9eea61538
  `-ParmVarDecl 0x55c9eea61648 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee9e1908 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55c9ee9e1a38 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55c9ee9e1a98 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55c9ee9e1af8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55c9eea698c8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55c9eea699a0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55c9eea699a0
|-CXXConstructorDecl 0x55c9eea69c58 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55c9eea69c58
| `-ParmVarDecl 0x55c9eea69d68 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55c9eea69e08 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55c9eea69e08
  `-ParmVarDecl 0x55c9eea69f18 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee9e1760 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55c9ee9e1878 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55c9ee9e1908 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55c9ee9e1a38 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55c9ee9e1a98 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55c9ee9e1af8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55c9eea698c8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55c9eea699a0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55c9eea699a0
| |-CXXConstructorDecl 0x55c9eea69c58 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55c9eea69c58
| | `-ParmVarDecl 0x55c9eea69d68 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55c9eea69e08 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55c9eea69e08
|   `-ParmVarDecl 0x55c9eea69f18 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55c9ee9e1bb8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55c9ee9e1c18 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55c9ee9e1bb8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55c9ee9e1a38 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55c9ee9e1c70 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55c9ee9e1bb8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55c9ee9e1a98 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55c9ee9e1cc8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55c9ee9e1bb8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55c9ee9e1af8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55c9ee9e1d20 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55c9eea697d8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c9eea6a138 <col:11>
|-CXXConstructorDecl 0x55c9eea69aa8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55c9eea69aa8
| `-ParmVarDecl 0x55c9eea69bb8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55c9eea69fb8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55c9eea69fb8
  `-ParmVarDecl 0x55c9eea6a0c8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee94fca0 prev 0x55c9ee947f00 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9ee94fd98 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55c9ee94fe38 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55c9ee956258 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c9ee956638 <col:11>
|-CXXConstructorDecl 0x55c9ee956330 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c9ee956418 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55c9ee956d80 <col:11>
|-CXXConstructorDecl 0x55c9ee9564b8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55c9ee9565c8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55c9ee9585d8 <col:11>
|-CXXDestructorDecl 0x55c9ee9578e8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c9ee995208 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c9ee995318 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55c9ee995be0 <col:11>
|   `-ReturnStmt 0x55c9ee995bd0 <col:11>
|     `-UnaryOperator 0x55c9ee995bb8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c9ee995ba8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55c9ee995388 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55c9ee995498 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55c9ee9f2880 <col:11>
    `-ReturnStmt 0x55c9ee9f2870 <col:11>
      `-UnaryOperator 0x55c9ee9f2858 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55c9ee9f2848 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee9459f8 prev 0x55c9ee945708 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9ee945af0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55c9ee945b80 <col:19, col:25> col:19 public
|-TypedefDecl 0x55c9ee945bb8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55c9ee5952c0 'int32_t' sugar
|   |-Typedef 0x55c9ee4a7268 'int32_t'
|   `-TypedefType 0x55c9ee4803b0 '__int32_t' sugar
|     |-Typedef 0x55c9ee47ffc8 '__int32_t'
|     `-BuiltinType 0x55c9ee43e370 'int'
|-TypedefDecl 0x55c9ee945c20 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55c9ee595480 'int64_t' sugar
|   |-Typedef 0x55c9ee4a72d0 'int64_t'
|   `-TypedefType 0x55c9ee4804d0 '__int64_t' sugar
|     |-Typedef 0x55c9ee4800a8 '__int64_t'
|     `-BuiltinType 0x55c9ee43e390 'long'
|-EnumDecl 0x55c9ee945c78 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55c9ee945df0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55c9ee945dd0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55c9ee945da8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55c9ee945d90 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55c9ee945d60 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55c9ee945ee8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55c9ee945ec8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55c9ee945ea0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55c9ee945e88 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55c9ee945e60 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55c9ee945e40 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55c9ee945f38 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55c9ee946040 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c9ee947c50 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee946020 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55c9ee946000 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55c9ee9460d0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c9ee947c68 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9460b0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55c9ee946090 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55c9ee946160 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c9ee947c80 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee946140 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55c9ee946120 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55c9ee9461f0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c9ee947c98 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9461d0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55c9ee9461b0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55c9ee947940 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c9ee947cb0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee946260 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55c9ee946240 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55c9ee9479d0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c9ee947cc8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9479b0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55c9ee947990 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55c9ee947a60 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c9ee947ce0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee947a40 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55c9ee947a20 <col:26> 'int' EnumConstant 0x55c9ee946040 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55c9ee947b30 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c9ee947cf8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee947b10 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55c9ee947af0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55c9ee947ab0 <col:27> 'int' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55c9ee947ad0 <col:44> 'int' EnumConstant 0x55c9ee9479d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55c9ee947c00 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55c9ee947d10 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee947be0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55c9ee947bc0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55c9ee947b80 <col:27> 'int' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55c9ee947ba0 <col:44> 'int' EnumConstant 0x55c9ee9461f0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55c9ee947d28 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55c9ee947e30 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55c9ee947e80 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee947e10 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55c9ee947df0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55c9ee947ea8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55c9ee594ef0 'uninitialized_type'
|   `-CXXRecord 0x55c9ee594e58 'uninitialized_type'
|-CXXRecordDecl 0x55c9ee947f00 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55c9ee948010 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55c9ee950de8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c9ee956648 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c9ee956768 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55c9ee956720 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55c9ee9566b0 <col:9> '<bound member function type>' ->assign 0x55c9ee94dec8
|     | `-CXXThisExpr 0x55c9ee9566a0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55c9ee9566e0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55c9ee956750 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55c9ee956700 <col:19> 'int' 0
|-CXXConstructorDecl 0x55c9ee948258 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee9480d0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55c9ee948148 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55c9ee9560f0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c9ee9560d0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55c9ee950de8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c9ee956780 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c9ee9568d0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55c9ee956858 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55c9ee9567e8 <col:9> '<bound member function type>' ->assign 0x55c9ee94dec8
|     | `-CXXThisExpr 0x55c9ee9567d8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55c9ee9568a0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55c9ee956888 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55c9ee956818 <col:16> 'long' lvalue ParmVar 0x55c9ee9480d0 'sec' 'long'
|     `-ImplicitCastExpr 0x55c9ee9568b8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee956838 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee948148 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55c9ee9484b8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee948328 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55c9ee9483a0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55c9ee956128 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c9ee956108 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55c9ee950de8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c9ee9568e8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c9ee956a20 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55c9ee9569c0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55c9ee956950 <col:9> '<bound member function type>' ->assign 0x55c9ee94dec8
|     | `-CXXThisExpr 0x55c9ee956940 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55c9ee9569f0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9ee956980 <col:16> 'int' lvalue ParmVar 0x55c9ee948328 'sec' 'int'
|     `-ImplicitCastExpr 0x55c9ee956a08 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee9569a0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee9483a0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55c9ee948718 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee948588 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55c9ee948600 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55c9ee956160 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c9ee956140 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55c9ee950de8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c9ee956a38 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c9ee956b88 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55c9ee956b10 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55c9ee956aa0 <col:9> '<bound member function type>' ->assign 0x55c9ee94dec8
|     | `-CXXThisExpr 0x55c9ee956a90 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55c9ee956b58 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55c9ee956b40 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55c9ee956ad0 <col:16> 'unsigned long' lvalue ParmVar 0x55c9ee948588 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55c9ee956b70 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee956af0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee948600 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55c9ee948978 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee9487e8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55c9ee948860 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55c9ee956198 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c9ee956178 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55c9ee950de8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c9ee956ba0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c9ee956cf0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55c9ee956c78 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55c9ee956c08 <col:9> '<bound member function type>' ->assign 0x55c9ee94dec8
|     | `-CXXThisExpr 0x55c9ee956bf8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55c9ee956cc0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55c9ee956ca8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55c9ee956c38 <col:16> 'unsigned int' lvalue ParmVar 0x55c9ee9487e8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55c9ee956cd8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee956c58 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee948860 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55c9ee948ad8 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55c9ee948a48 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55c9ee948c78 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55c9ee948bb0 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55c9ee948ea8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55c9ee948db0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55c9ee949058 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55c9ee948f98 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55c9ee950de8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c9ee956d90 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55c9ee956d08 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55c9ee948f98 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55c9ee956df0 <col:19, line:214:5>
|-CXXConstructorDecl 0x55c9ee949228 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55c9ee949168 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55c9ee950de8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c9ee956e00 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c9ee956eb0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55c9ee956e88 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55c9ee956e58 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55c9ee949168 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55c9ee949418 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55c9ee949390 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55c9ee9457a0 'Timestamp'
|   | `-CXXRecord 0x55c9ee9459f8 'Timestamp'
|   `-ParenType 0x55c9ee949330 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55c9ee949300 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55c9ee945d40 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55c9ee945bb8 'seconds_type'
|         `-TypedefType 0x55c9ee5952c0 'int32_t' sugar
|           |-Typedef 0x55c9ee4a7268 'int32_t'
|           `-TypedefType 0x55c9ee4803b0 '__int32_t' sugar
|             |-Typedef 0x55c9ee47ffc8 '__int32_t'
|             `-BuiltinType 0x55c9ee43e370 'int'
|-CXXConversionDecl 0x55c9ee949558 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55c9ee949628 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55c9ee956fb8 <col:37, line:231:5>
|   `-ReturnStmt 0x55c9ee956fa8 <line:227:9, col:23>
|     `-BinaryOperator 0x55c9ee956f88 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55c9ee956f58 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55c9ee956f08 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55c9ee94fe38
|       |   `-MemberExpr 0x55c9ee956ed8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55c9ee950de8
|       |     `-CXXThisExpr 0x55c9ee956ec8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55c9ee956f70 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55c9ee956f38 <col:23> 'int' 0
|-CXXMethodDecl 0x55c9ee9496e8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55c9ee9497a8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9ee949868 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9ee949928 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9ee9499e8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9ee949b58 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55c9ee949a98 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55c9ee949ca0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55c9ee949c10 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee949d68 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55c9ee949e08 <col:54> "" ""
|-CXXMethodDecl 0x55c9ee949e98 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55c9ee949f38 <col:54> "" ""
|-CXXMethodDecl 0x55c9ee949fc8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55c9ee94a068 <col:54> "" ""
|-CXXMethodDecl 0x55c9ee94a168 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55c9ee94a238 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55c9ee94a368 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55c9ee94a460 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55c9ee94a598 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55c9ee9571d0 <col:39, line:271:5>
|   `-ReturnStmt 0x55c9ee9571c0 <line:267:9, col:61>
|     `-CallExpr 0x55c9ee957160 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55c9ee957148 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c9ee956fd0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55c9ee951118 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55c9ee957190 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55c9ee957030 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55c9ee94fe38
|       |   `-MemberExpr 0x55c9ee957000 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55c9ee950de8
|       |     `-CXXThisExpr 0x55c9ee956ff0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55c9ee9571a8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55c9ee9570d0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55c9ee9570a0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55c9ee957060 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55c9ee9570b8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55c9ee957080 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee9479d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c9ee94a658 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55c9ee957390 <col:39, line:279:5>
|   `-ReturnStmt 0x55c9ee957380 <line:275:9, col:61>
|     `-CallExpr 0x55c9ee957320 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55c9ee957308 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c9ee9571e8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55c9ee951118 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55c9ee957350 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55c9ee957248 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55c9ee94fe38
|       |   `-MemberExpr 0x55c9ee957218 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55c9ee950de8
|       |     `-CXXThisExpr 0x55c9ee957208 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55c9ee957368 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55c9ee9572e8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55c9ee9572b8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55c9ee957278 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55c9ee9572d0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55c9ee957298 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee9461f0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c9ee94a718 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55c9ee957528 <col:39, line:287:5>
|   `-ReturnStmt 0x55c9ee957518 <line:283:9, col:53>
|     `-BinaryOperator 0x55c9ee9574f8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55c9ee9574c8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55c9ee9573e8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55c9ee94fe38
|       |   `-MemberExpr 0x55c9ee9573b8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55c9ee950de8
|       |     `-CXXThisExpr 0x55c9ee9573a8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55c9ee9574e0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55c9ee9574a8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55c9ee957488 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55c9ee957458 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c9ee957418 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee946040 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c9ee957470 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c9ee957438 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c9ee94a808 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55c9ee9587c0 <col:40, line:293:5>
|   |-DeclStmt 0x55c9ee957670 <line:291:9, col:48>
|   | `-VarDecl 0x55c9ee957550 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55c9ee957650 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55c9ee9575f8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55c9ee9575c8 <col:22> '<bound member function type>' ->subsec 0x55c9ee9497a8
|   |     |   `-CXXThisExpr 0x55c9ee9575b8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55c9ee957638 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55c9ee957618 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947b30 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55c9ee9587b0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55c9ee958798 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55c9ee958768 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c9ee958750 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55c9ee958730 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55c9ee958700 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55c9ee958498 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55c9ee958480 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55c9ee957688 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55c9ee957550 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55c9ee9586a0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55c9ee958688 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55c9ee958658 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55c9ee9584b0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55c9ee958420 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55c9ee958408 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55c9ee9583b8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55c9ee945948 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55c9ee958358 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55c9ee9576b8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55c9ee9576a8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55c9ee9583a0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55c9ee958388 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55c9ee957b78 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55c9ee9576e0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55c9ee957770 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55c9ee957740 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55c9ee957700 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947b30 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55c9ee957758 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55c9ee957720 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55c9ee957550 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55c9ee9586d0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55c9ee958468 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55c9ee958458 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55c9ee94a8c8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55c9ee958d18 <col:40, line:302:5>
|   |-DeclStmt 0x55c9ee958910 <line:297:9, col:48>
|   | `-VarDecl 0x55c9ee9587f0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55c9ee9588f0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55c9ee958898 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55c9ee958868 <col:22> '<bound member function type>' ->subsec 0x55c9ee9497a8
|   |     |   `-CXXThisExpr 0x55c9ee958858 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55c9ee9588d8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55c9ee9588b8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947c00 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55c9ee958d08 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55c9ee958cf0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55c9ee958cc0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c9ee958ca8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55c9ee958c88 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55c9ee958c58 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55c9ee958b80 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55c9ee958b68 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55c9ee958928 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55c9ee9587f0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55c9ee958bf8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55c9ee958be0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55c9ee958bb0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55c9ee958b98 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55c9ee958b08 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55c9ee958af0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55c9ee958ad0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55c9ee945948 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55c9ee958a70 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55c9ee958958 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55c9ee958948 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55c9ee958ab8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55c9ee958aa0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55c9ee958a30 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55c9ee958980 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55c9ee958a10 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55c9ee9589e0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55c9ee9589a0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947c00 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55c9ee9589f8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55c9ee9589c0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55c9ee9587f0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55c9ee958c28 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55c9ee958b50 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55c9ee958b40 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55c9ee94a988 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55c9ee958da0 <col:40, line:306:5>
|   `-ReturnStmt 0x55c9ee958d90 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55c9ee958d60 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55c9ee958d48 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c9ee958d38 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55c9ee94ab28 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55c9ee94aa38 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee94acf8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55c9ee94ac00 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55c9ee94ade8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55c9ee94af58 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55c9ee94ae98 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55c9ee958ee8 <col:56, line:320:5>
|   `-ReturnStmt 0x55c9ee958ed8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55c9ee958ec0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55c9ee958e90 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c9ee958e78 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55c9ee958e38 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55c9ee958e08 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55c9ee958dc8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c9ee94ae98 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55c9ee958e20 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55c9ee958de8 <col:31> 'int' 0
|-CXXMethodDecl 0x55c9ee94b198 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee94b010 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c9ee94b088 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee9590b8 <col:72, line:326:5>
|   `-ReturnStmt 0x55c9ee9590a8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55c9ee959090 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55c9ee959060 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c9ee959048 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55c9ee959008 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55c9ee958ff0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55c9ee958f10 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c9ee94b010 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55c9ee958fb0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55c9ee958f98 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55c9ee958f30 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55c9ee94f590 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55c9ee958fd8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55c9ee958f50 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee94b088 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee94b348 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55c9ee94b258 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55c9ee963c90 <col:56, line:337:5>
|   |-DeclStmt 0x55c9ee9638c8 <line:329:9, col:51>
|   | `-VarDecl 0x55c9ee9590e0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55c9ee9638b0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55c9ee963880 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55c9ee963868 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55c9ee963850 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55c9ee963820 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55c9ee963808 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55c9ee9637f0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55c9ee9591d0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55c9ee963a80 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55c9ee963930 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55c9ee94fe38
|   | | `-MemberExpr 0x55c9ee963900 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55c9ee950de8
|   | |   `-DeclRefExpr 0x55c9ee9638e0 <col:9> 'Timestamp' lvalue Var 0x55c9ee9590e0 't' 'Timestamp'
|   | `-BinaryOperator 0x55c9ee963a60 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55c9ee963a30 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9ee963960 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55c9ee94b258 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55c9ee963a48 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55c9ee963a10 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55c9ee9639f0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55c9ee9639c0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55c9ee963980 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55c9ee9639d8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55c9ee9639a0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee9479d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55c9ee963c78 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55c9ee963c48 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55c9ee963c30 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55c9ee963c10 <col:16> 'Timestamp' lvalue Var 0x55c9ee9590e0 't' 'Timestamp'
|-CXXMethodDecl 0x55c9ee94b510 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee94b400 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c9ee94b478 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee963e48 <col:72, line:343:5>
|   `-ReturnStmt 0x55c9ee963e38 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55c9ee963e20 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55c9ee963df0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c9ee963dd8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55c9ee963d98 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55c9ee963d80 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55c9ee963cc8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c9ee94b400 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55c9ee963d40 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55c9ee963d28 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55c9ee963ce8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55c9ee94f6d8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55c9ee963d68 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55c9ee963d08 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee94b478 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee94b660 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55c9ee94b5d0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55c9ee964290 <col:56, line:354:5>
|   |-DeclStmt 0x55c9ee964038 <line:346:9, col:51>
|   | `-VarDecl 0x55c9ee963e70 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55c9ee964020 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55c9ee963ff0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55c9ee963fd8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55c9ee963fc0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55c9ee963f90 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55c9ee963f78 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55c9ee963f60 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55c9ee963f30 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55c9ee9641f0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55c9ee9640a0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55c9ee94fe38
|   | | `-MemberExpr 0x55c9ee964070 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55c9ee950de8
|   | |   `-DeclRefExpr 0x55c9ee964050 <col:9> 'Timestamp' lvalue Var 0x55c9ee963e70 't' 'Timestamp'
|   | `-BinaryOperator 0x55c9ee9641d0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55c9ee9641a0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9ee9640d0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55c9ee94b5d0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55c9ee9641b8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55c9ee964180 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55c9ee964160 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55c9ee964130 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55c9ee9640f0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55c9ee964148 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55c9ee964110 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee9461f0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55c9ee964278 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55c9ee964248 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55c9ee964230 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55c9ee964210 <col:16> 'Timestamp' lvalue Var 0x55c9ee963e70 't' 'Timestamp'
|-CXXMethodDecl 0x55c9ee94b828 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee94b718 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c9ee94b790 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee964448 <col:72, line:360:5>
|   `-ReturnStmt 0x55c9ee964438 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55c9ee964420 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55c9ee9643f0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c9ee9643d8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55c9ee964398 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55c9ee964380 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55c9ee9642c8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c9ee94b718 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55c9ee964340 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55c9ee964328 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55c9ee9642e8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55c9ee94f820 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55c9ee964368 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55c9ee964308 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee94b790 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee94db10 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55c9ee94da80 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55c9ee9648b8 <col:56, line:371:5>
|   |-DeclStmt 0x55c9ee964638 <line:363:9, col:51>
|   | `-VarDecl 0x55c9ee964470 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55c9ee964620 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55c9ee9645f0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55c9ee9645d8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55c9ee9645c0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55c9ee964590 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55c9ee964578 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55c9ee964560 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55c9ee964530 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55c9ee964818 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55c9ee9646a0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55c9ee94fe38
|   | | `-MemberExpr 0x55c9ee964670 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55c9ee950de8
|   | |   `-DeclRefExpr 0x55c9ee964650 <col:9> 'Timestamp' lvalue Var 0x55c9ee964470 't' 'Timestamp'
|   | `-CallExpr 0x55c9ee9647b8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55c9ee9647a0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55c9ee9646d0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55c9ee951118 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55c9ee9647e8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c9ee9646f0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55c9ee94da80 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55c9ee964800 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55c9ee964780 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55c9ee964750 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55c9ee964710 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee946040 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55c9ee964768 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55c9ee964730 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55c9ee9648a0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55c9ee964870 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55c9ee964858 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55c9ee964838 <col:16> 'Timestamp' lvalue Var 0x55c9ee964470 't' 'Timestamp'
|-CXXMethodDecl 0x55c9ee94dc08 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55c9ee9649f8 <col:39, line:377:5>
|   `-ReturnStmt 0x55c9ee9649e8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55c9ee9649d0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55c9ee9649a0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c9ee964988 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55c9ee964948 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55c9ee9648f0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55c9ee964930 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55c9ee964910 <col:29> 'int' 1
|-CXXMethodDecl 0x55c9ee94dcc8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55c9ee964ad8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55c9ee964a90 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55c9ee964a20 <col:9> '<bound member function type>' ->assign 0x55c9ee94dec8
|     | `-CXXThisExpr 0x55c9ee964a10 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55c9ee964a50 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55c9ee964ac0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55c9ee964a70 <col:19> 'int' 0
|-CXXMethodDecl 0x55c9ee94dec8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee94dd78 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c9ee94ddf0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55c9ee9561d0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c9ee9561b0 <col:60> 'int' 0
| `-CompoundStmt 0x55c9ee964cd0 <col:63, line:395:5>
|   `-BinaryOperator 0x55c9ee964cb0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55c9ee964b30 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55c9ee94fe38
|     | `-MemberExpr 0x55c9ee964b00 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55c9ee950de8
|     |   `-CXXThisExpr 0x55c9ee964af0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55c9ee964c90 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55c9ee964c20 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55c9ee964bc0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55c9ee964ba8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55c9ee964b90 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55c9ee964b60 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c9ee94dd78 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55c9ee964c08 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55c9ee964be8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55c9ee964c78 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55c9ee964c60 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55c9ee964c40 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee94ddf0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee94e098 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee94df88 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c9ee94e000 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee964e28 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55c9ee964de0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55c9ee964cf8 <col:9> '<bound member function type>' ->assign 0x55c9ee94dec8
|     | `-CXXThisExpr 0x55c9ee964ce8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55c9ee964e10 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9ee964d28 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c9ee94df88 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55c9ee964da0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55c9ee964d88 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c9ee964d48 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55c9ee94f6d8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55c9ee964dc8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55c9ee964d68 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee94e000 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee94e268 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee94e158 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c9ee94e1d0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee964f80 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55c9ee964f38 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55c9ee964e50 <col:9> '<bound member function type>' ->assign 0x55c9ee94dec8
|     | `-CXXThisExpr 0x55c9ee964e40 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55c9ee964f68 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9ee964e80 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c9ee94e158 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55c9ee964ef8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55c9ee964ee0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c9ee964ea0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55c9ee94f820 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55c9ee964f20 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55c9ee964ec0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee94e1d0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee94e438 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee94e328 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c9ee94e3a0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55c9ee956208 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c9ee9561e8 <col:57> 'int' 0
| `-DeprecatedAttr 0x55c9ee94e4e8 <col:75> "" ""
|-CXXMethodDecl 0x55c9ee94e678 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee94e568 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c9ee94e5e0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9ee94e728 <col:74> "" ""
|-CXXMethodDecl 0x55c9ee94e8b8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55c9ee94e7a8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c9ee94e820 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9ee94e968 <col:74> "" ""
|-CXXMethodDecl 0x55c9ee94e9f8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55c9ee94ea98 <col:42> "" ""
|-CXXMethodDecl 0x55c9ee94ec40 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55c9ee94eb20 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55c9ee94eba0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55c9ee94ed10 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55c9ee94edd0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55c9ee94ee70 <col:20>
| `-OptimizeNoneAttr 0x55c9ee94eec8 <col:30>
|-CXXMethodDecl 0x55c9ee94ef10 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55c9ee94efd0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55c9ee94f090 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55c9ee94f150 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55c9ee94f210 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55c9ee94f2d0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55c9ee94f390 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55c9ee94f450 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55c9ee94f590 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee94f500 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee9650c8 <col:58, line:512:5>
|   `-ReturnStmt 0x55c9ee9650b8 <line:511:9, col:53>
|     `-BinaryOperator 0x55c9ee965098 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55c9ee965068 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c9ee964f98 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee94f500 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c9ee965080 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55c9ee965048 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55c9ee965028 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55c9ee964ff8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c9ee964fb8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c9ee965010 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c9ee964fd8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee9479d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c9ee94f6d8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee94f648 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee965210 <col:58, line:516:5>
|   `-ReturnStmt 0x55c9ee965200 <line:515:9, col:53>
|     `-BinaryOperator 0x55c9ee9651e0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55c9ee9651b0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c9ee9650e0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee94f648 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c9ee9651c8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55c9ee965190 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55c9ee965170 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55c9ee965140 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c9ee965100 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c9ee965158 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c9ee965120 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee9461f0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c9ee94f820 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee94f790 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee965358 <col:58, line:520:5>
|   `-ReturnStmt 0x55c9ee965348 <line:519:9, col:53>
|     `-BinaryOperator 0x55c9ee965328 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55c9ee9652f8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c9ee965228 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee94f790 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c9ee965310 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55c9ee9652d8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55c9ee9652b8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55c9ee965288 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c9ee965248 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee946040 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c9ee9652a0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c9ee965268 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c9ee94f968 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee94f8d8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee9654a0 <col:60, line:524:5>
|   `-ReturnStmt 0x55c9ee965490 <line:523:9, col:55>
|     `-BinaryOperator 0x55c9ee965470 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55c9ee965440 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c9ee965370 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee94f8d8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c9ee965458 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55c9ee965420 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55c9ee965400 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55c9ee9653d0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c9ee965390 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c9ee9653e8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c9ee9653b0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee9479d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c9ee94fab0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee94fa20 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee9655e8 <col:60, line:528:5>
|   `-ReturnStmt 0x55c9ee9655d8 <line:527:9, col:55>
|     `-BinaryOperator 0x55c9ee9655b8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55c9ee965588 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c9ee9654b8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee94fa20 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c9ee9655a0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55c9ee965568 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55c9ee965548 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55c9ee965518 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c9ee9654d8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c9ee965530 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c9ee9654f8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee9461f0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c9ee94fbf8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee94fb68 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee965730 <col:60, line:532:5>
|   `-ReturnStmt 0x55c9ee965720 <line:531:9, col:55>
|     `-BinaryOperator 0x55c9ee965700 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55c9ee9656d0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c9ee965600 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee94fb68 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c9ee9656e8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55c9ee9656b0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55c9ee965690 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55c9ee965660 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c9ee965620 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee946040 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c9ee965678 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c9ee965640 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c9ee947a60 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55c9ee94fca0 prev 0x55c9ee947f00 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c9ee94fd98 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55c9ee94fe38 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55c9ee956258 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c9ee956638 <col:11>
| |-CXXConstructorDecl 0x55c9ee956330 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c9ee956418 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55c9ee956d80 <col:11>
| |-CXXConstructorDecl 0x55c9ee9564b8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c9ee9565c8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55c9ee9585d8 <col:11>
| |-CXXDestructorDecl 0x55c9ee9578e8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55c9ee995208 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c9ee995318 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55c9ee995be0 <col:11>
| |   `-ReturnStmt 0x55c9ee995bd0 <col:11>
| |     `-UnaryOperator 0x55c9ee995bb8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55c9ee995ba8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55c9ee995388 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55c9ee995498 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55c9ee9f2880 <col:11>
|     `-ReturnStmt 0x55c9ee9f2870 <col:11>
|       `-UnaryOperator 0x55c9ee9f2858 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c9ee9f2848 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55c9ee94fea0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55c9ee94ffa0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55c9ee9501a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee94ff80 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55c9ee94ff60 <col:21> 'int' 0
| |-EnumConstantDecl 0x55c9ee950030 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55c9ee9501b8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee950010 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55c9ee94fff0 <col:23> 'int' 1
| |-EnumConstantDecl 0x55c9ee9500c0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55c9ee9501d0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee9500a0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55c9ee950080 <col:23> 'int' 2
| `-EnumConstantDecl 0x55c9ee950150 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55c9ee9501e8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee950130 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55c9ee950110 <col:27> 'int' 3
|-CXXMethodDecl 0x55c9ee950228 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55c9ee9502f0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55c9ee9504f8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55c9ee9503a0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55c9ee950420 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55c9ee956220 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55c9ee950708 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55c9ee9505b8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55c9ee950630 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55c9ee9507d8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55c9ee950898 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55c9ee950a08 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55c9ee950948 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55c9ee950ad0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55c9ee950b90 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55c9ee950c50 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55c9ee950d10 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55c9ee950db0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55c9ee950de8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55c9ee950e58 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55c9ee965748 <col:27, line:684:5>
|-CXXMethodDecl 0x55c9ee950f18 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55c9ee965758 <col:27, line:696:5>
|-CXXMethodDecl 0x55c9ee951118 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee950fc8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55c9ee951040 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee9658e0 <col:66, line:700:5>
|   `-ReturnStmt 0x55c9ee9658d0 <line:699:9, col:31>
|     `-CallExpr 0x55c9ee965870 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55c9ee965858 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c9ee965808 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55c9ee7d4008 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55c9ee9658a0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55c9ee9657c8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55c9ee950fc8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55c9ee9658b8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55c9ee9657e8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee951040 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee951488 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55c9ee9511d8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55c9ee951250 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55c9ee9512c8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55c9ee951340 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee965c30 <col:64, line:707:5>
|   |-DeclStmt 0x55c9ee965970 <line:704:9, col:24>
|   | `-VarDecl 0x55c9ee965908 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55c9ee965b80 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55c9ee965988 <col:9> 'int32_t':'int' lvalue ParmVar 0x55c9ee951250 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55c9ee965b68 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55c9ee965b00 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55c9ee965ae8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9ee965a68 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55c9ee7da638 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55c9ee965b38 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55c9ee965a08 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55c9ee9512c8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55c9ee965b50 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55c9ee965a28 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee951340 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55c9ee965a48 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55c9ee965908 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55c9ee965c10 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55c9ee965ba0 <col:9> 'int32_t':'int' lvalue ParmVar 0x55c9ee9511d8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55c9ee965bf8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55c9ee965be0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55c9ee965bc0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55c9ee965908 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55c9ee951728 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55c9ee951558 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55c9ee9515d0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55c9ee951648 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55c9ee9519c8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55c9ee9517f0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55c9ee951868 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55c9ee9518e0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55c9ee955318 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55c9ee955250 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55c9ee955518 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55c9ee9553d0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55c9ee955448 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55c9ee9557e8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55c9ee955728 parent 0x55c9ee43e278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55c9ee9555d8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55c9ee955650 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55c9ee955a08 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55c9ee955948 parent 0x55c9ee43e278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55c9ee955838 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55c9ee9558b0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55c9ee955bd0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55c9ee955b18 parent 0x55c9ee43e278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55c9ee955a58 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55c9ee955e58 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55c9ee955d98 parent 0x55c9ee43e278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55c9ee955c48 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55c9ee955cc0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55c9ee956078 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55c9ee955fb8 parent 0x55c9ee43e278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55c9ee955ea8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55c9ee955f20 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55c9ee957790 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c9ee957878 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55c9ee950de8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c9ee9582e8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55c9ee9582a0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55c9ee950de8
| |     `-DeclRefExpr 0x55c9ee958280 <col:7> 'const Timestamp' lvalue ParmVar 0x55c9ee957878 '' 'const Timestamp &'
| `-CompoundStmt 0x55c9ee958348 <col:7>
|-CXXConstructorDecl 0x55c9ee9579f8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55c9ee957b08 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55c9ee950de8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c9ee9585e8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55c9ee958590 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55c9ee950de8
| |     `-CXXStaticCastExpr 0x55c9ee958560 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55c9ee958530 <col:7> 'Timestamp' lvalue ParmVar 0x55c9ee957b08 '' 'Timestamp &&'
| `-CompoundStmt 0x55c9ee958648 <col:7>
|-CXXDestructorDecl 0x55c9ee957bb8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c9ee995060 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c9ee995168 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55c9ee995c58 <col:7>
|   |-CXXMemberCallExpr 0x55c9ee995bf8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55c9ee995b38 <col:7> '<bound member function type>' .operator= 0x55c9ee995208
|   | | `-MemberExpr 0x55c9ee995a48 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55c9ee950de8
|   | |   `-CXXThisExpr 0x55c9ee995a38 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55c9ee995b08 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55c9ee950de8
|   |   `-DeclRefExpr 0x55c9ee995ae8 <col:7> 'const Timestamp' lvalue ParmVar 0x55c9ee995168 '' 'const Timestamp &'
|   `-ReturnStmt 0x55c9ee995c48 <col:7>
|     `-UnaryOperator 0x55c9ee995c30 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c9ee995c20 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55c9ee995508 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55c9ee995618 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55c9ee9f28f8 <col:7>
    |-CXXMemberCallExpr 0x55c9ee9f2898 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55c9ee9f2800 <col:7> '<bound member function type>' .operator= 0x55c9ee995388
    | | `-MemberExpr 0x55c9ee9f26d0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55c9ee950de8
    | |   `-CXXThisExpr 0x55c9ee9f26c0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55c9ee9f27d0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55c9ee950de8
    |   `-CXXStaticCastExpr 0x55c9ee9f27a0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55c9ee9f2770 <col:7> 'Timestamp' lvalue ParmVar 0x55c9ee995618 '' 'Timestamp &&'
    `-ReturnStmt 0x55c9ee9f28e8 <col:7>
      `-UnaryOperator 0x55c9ee9f28d0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55c9ee9f28c0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c9ee9f75f0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55c9ee9f77c8 prev 0x55c9ee9f75f0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55c9ee9f7858 <col:46, col:52> col:46 public
|-TypedefDecl 0x55c9ee9f7880 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c9ee43e370 'int'
|-TypedefDecl 0x55c9ee9fd2d0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55c9ee9fd280 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55c9ee9fbbb0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55c9ee9fbab0 'type'
|     `-TemplateSpecializationType 0x55c9ee9fba40 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55c9ee9fb918 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55c9ee9fb8f8 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55c9ee9fb8d8 <col:24> 'unsigned long' 16
|       `-RecordType 0x55c9ee9fba20 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55c9ee9fb938 'char_array'
|-TypedefDecl 0x55c9ee9fd388 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55c9ee9fd350 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55c9ee9fd330 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55c9ee9fd2d0 'type'
|     `-ElaboratedType 0x55c9ee9fd280 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55c9ee9fbbb0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55c9ee9fbab0 'type'
|         `-TemplateSpecializationType 0x55c9ee9fba40 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55c9ee9fb918 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55c9ee9fb8f8 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55c9ee9fb8d8 <col:24> 'unsigned long' 16
|           `-RecordType 0x55c9ee9fba20 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55c9ee9fb938 'char_array'
|-CXXMethodDecl 0x55c9ee9fd508 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55c9ee9fd418 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55c9ee9fd5f8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55c9ee9fd6d8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55c9ee9fd6d8
|-CXXMethodDecl 0x55c9ee9fd9a8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55c9ee9fd8b0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55c9ee9fdbe8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55c9ee9fda60 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c9ee9fdad8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c9ee9fddb8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55c9ee9fdca8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c9ee9fdd20 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c9ee9fdf18 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55c9ee9fdfe8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55c9ee9fe238 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55c9ee9fe0a8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55c9ee9fe120 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c9ee9fe498 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55c9ee9fe308 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55c9ee9fe380 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c9ee9fe658 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55c9ee9fe568 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c9ee9fe818 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55c9ee9fe720 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c9ee9fe8d0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c9ee9fe980 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c9ee9febb8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55c9ee9fea30 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c9ee9feaa8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c9ee9fee58 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55c9ee9fed60 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55c9ee9fef20 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55c9ee9fef70 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55c9ee9fefc0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c9ee9f5f08 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55c9ee9f6118 prev 0x55c9ee9f5f08 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c9ee9f7560 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55c9ee9f7510 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55c9ee9f74f0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55c9ee9f73a0 'type'
|     `-SubstTemplateTypeParmType 0x55c9ee9f71c0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55c9ee760c40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee760be8 'T'
|       `-RecordType 0x55c9ee9f6d10 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55c9ee9f6c28 'sized_array_memory'
|-FieldDecl 0x55c9ee9ff010 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55c9ee9ff060 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c9ee9ff098 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55c9ee9f61b0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c9ee796680 'T'
|   `-RecordType 0x55c9ee9f5110 'TimerSet::heap_element'
|     `-CXXRecord 0x55c9ee9f5080 'heap_element'
|-TypedefDecl 0x55c9ee9ff158 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55c9ee9ff120 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55c9ee9f61b0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c9ee796680 'T'
|     `-RecordType 0x55c9ee9f5110 'TimerSet::heap_element'
|       `-CXXRecord 0x55c9ee9f5080 'heap_element'
|-TypedefDecl 0x55c9ee9ff1e8 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55c9ee9ff1b0 'const TimerSet::heap_element &'
|   `-QualType 0x55c9ee9f61b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55c9ee9f61b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-RecordType 0x55c9ee9f5110 'TimerSet::heap_element'
|         `-CXXRecord 0x55c9ee9f5080 'heap_element'
|-TypedefDecl 0x55c9ee9ff278 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55c9ee9ff240 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55c9ee9f61b0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c9ee796680 'T'
|     `-RecordType 0x55c9ee9f5110 'TimerSet::heap_element'
|       `-CXXRecord 0x55c9ee9f5080 'heap_element'
|-TypedefDecl 0x55c9ee9ff338 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55c9ee9ff300 'const TimerSet::heap_element *'
|   `-QualType 0x55c9ee9f61b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55c9ee9f61b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-RecordType 0x55c9ee9f5110 'TimerSet::heap_element'
|         `-CXXRecord 0x55c9ee9f5080 'heap_element'
|-TypedefDecl 0x55c9eea001a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55c9eea00150 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55c9eea00130 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55c9eea00068 'type'
|     `-LValueReferenceType 0x55c9eea00030 'const TimerSet::heap_element &'
|       `-QualType 0x55c9ee9ffdd1 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55c9ee9ffdd0 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55c9ee76a460 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55c9ee76a408 'T'
|           `-RecordType 0x55c9ee9f5110 'TimerSet::heap_element'
|             `-CXXRecord 0x55c9ee9f5080 'heap_element'
|-TypedefDecl 0x55c9eea00208 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55c9ee9ff1b0 'const TimerSet::heap_element &'
|   `-QualType 0x55c9ee9f61b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55c9ee9f61b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-RecordType 0x55c9ee9f5110 'TimerSet::heap_element'
|         `-CXXRecord 0x55c9ee9f5080 'heap_element'
|-TypedefDecl 0x55c9eea00260 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c9ee43e370 'int'
|-TypedefDecl 0x55c9eea002c8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55c9ee9ff240 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55c9ee9f61b0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c9ee796680 'T'
|     `-RecordType 0x55c9ee9f5110 'TimerSet::heap_element'
|       `-CXXRecord 0x55c9ee9f5080 'heap_element'
|-TypedefDecl 0x55c9eea00330 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55c9ee9ff300 'const TimerSet::heap_element *'
|   `-QualType 0x55c9ee9f61b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55c9ee9f61b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-RecordType 0x55c9ee9f5110 'TimerSet::heap_element'
|         `-CXXRecord 0x55c9ee9f5080 'heap_element'
|-EnumDecl 0x55c9eea00388 <line:134:5> col:5
| `-EnumConstantDecl 0x55c9eea00480 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c9eea00460 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c9ee797898 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c9ee797870 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c9ee797850 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c9eea00508 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c9eea00798 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea005c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c9eea00660 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55c9eea00a58 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55c9eea00940 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55c9eea00d18 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55c9eea00c00 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55c9eea01060 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55c9eea00f40 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55c9eea01370 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55c9eea01250 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55c9eea01660 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea014a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c9eea01520 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55c9eea017b8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55c9eea01898 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea018f0 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea01938 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55c9eea019e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea01a40 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea01b08 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea01bb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea01c10 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea01c58 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea01d08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea01d60 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea01da8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea01e58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea01eb0 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea01ef8 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea01fa8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea02000 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea02028 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c9eea020d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c9eea02188 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55c9eea02348 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea02238 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c9eea022b0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55c9eea02498 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c9eea02408 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea02648 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55c9eea02550 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c9eea02700 <col:20>
| `-OptimizeNoneAttr 0x55c9eea02758 <col:30>
|-CXXMethodDecl 0x55c9eea02878 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55c9eea02780 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c9eea02930 <col:20>
| `-OptimizeNoneAttr 0x55c9eea02988 <col:30>
|-CXXMethodDecl 0x55c9eea02a40 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c9eea029b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea02b88 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c9eea02af8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea02cb8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55c9eea02de8 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55c9eea02eb8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55c9eea02f88 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55c9eea030c8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c9eea03038 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea03210 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c9eea03180 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea03358 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55c9eea032c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c9eea03410 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c9eea03510 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c9eea03480 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c9eea035c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c9eea03688 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55c9eea03830 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55c9eea039e8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55c9eea038f0 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55c9eea041d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c9eea03aa0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55c9eea04138 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55c9eea04038 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55c9eea042b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c9eea04408 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55c9eea04378 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55c9eea044c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c9eea04708 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea04580 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55c9eea045f8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55c9eea048c8 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55c9eea047d8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55c9eea04b18 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55c9eea04990 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55c9eea04a08 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55c9eea04bd8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c9eea04e38 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55c9eea04d40 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55c9eea04f08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c9eea04f08

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c9eea06430 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55c9eea06608 prev 0x55c9eea06430 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55c9eea06698 <col:46, col:52> col:46 public
|-TypedefDecl 0x55c9eea066c0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c9ee43e370 'int'
|-TypedefDecl 0x55c9eea08290 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55c9eea08240 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55c9eea06b70 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55c9eea06a70 'type'
|     `-TemplateSpecializationType 0x55c9eea06a00 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55c9eea068e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55c9eea068c0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55c9eea068a0 <col:24> 'unsigned long' 8
|       `-RecordType 0x55c9eea069e0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55c9eea06900 'char_array'
|-TypedefDecl 0x55c9eea08348 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55c9eea08310 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55c9eea082f0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55c9eea08290 'type'
|     `-ElaboratedType 0x55c9eea08240 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55c9eea06b70 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55c9eea06a70 'type'
|         `-TemplateSpecializationType 0x55c9eea06a00 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55c9eea068e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55c9eea068c0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55c9eea068a0 <col:24> 'unsigned long' 8
|           `-RecordType 0x55c9eea069e0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55c9eea06900 'char_array'
|-CXXMethodDecl 0x55c9eea084c8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55c9eea083d8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55c9eea085b8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55c9eea08698 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55c9eea08698
|-CXXMethodDecl 0x55c9eea08968 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55c9eea08870 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55c9eea08ba8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55c9eea08a20 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c9eea08a98 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c9eea08d78 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55c9eea08c68 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c9eea08ce0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c9eea08ed8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55c9eea08fa8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55c9eea091f8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55c9eea09068 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55c9eea090e0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c9eea09458 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55c9eea092c8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55c9eea09340 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c9eea09618 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55c9eea09528 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c9eea097d8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55c9eea096e0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c9eea09890 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c9eea09940 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c9eea09b78 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55c9eea099f0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c9eea09a68 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c9eea09e18 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55c9eea09d20 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55c9eea09ee0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55c9eea09f30 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55c9eea09f80 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c9eea05050 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55c9eea05258 prev 0x55c9eea05050 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c9eea063a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55c9eea06350 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55c9eea06330 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55c9eea061e0 'type'
|     `-SubstTemplateTypeParmType 0x55c9eea06000 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55c9ee760c40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee760be8 'T'
|       `-RecordType 0x55c9eea05b50 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55c9eea05a68 'sized_array_memory'
|-FieldDecl 0x55c9eea09fd0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55c9eea0a020 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c9eea0a058 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55c9eea052f0 'Timer *' sugar
|   |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c9ee796680 'T'
|   `-PointerType 0x55c9ee9b2b80 'Timer *'
|     `-RecordType 0x55c9ee9b1cd0 'Timer'
|       `-CXXRecord 0x55c9ee9e4268 'Timer'
|-TypedefDecl 0x55c9eea0a118 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55c9eea0a0e0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55c9eea052f0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c9ee796680 'T'
|     `-PointerType 0x55c9ee9b2b80 'Timer *'
|       `-RecordType 0x55c9ee9b1cd0 'Timer'
|         `-CXXRecord 0x55c9ee9e4268 'Timer'
|-TypedefDecl 0x55c9eea0a1d8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55c9eea0a1a0 'Timer *const &'
|   `-QualType 0x55c9eea052f1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55c9eea052f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-PointerType 0x55c9ee9b2b80 'Timer *'
|         `-RecordType 0x55c9ee9b1cd0 'Timer'
|           `-CXXRecord 0x55c9ee9e4268 'Timer'
|-TypedefDecl 0x55c9eea0a298 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55c9eea0a260 'Timer **'
|   `-SubstTemplateTypeParmType 0x55c9eea052f0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c9ee796680 'T'
|     `-PointerType 0x55c9ee9b2b80 'Timer *'
|       `-RecordType 0x55c9ee9b1cd0 'Timer'
|         `-CXXRecord 0x55c9ee9e4268 'Timer'
|-TypedefDecl 0x55c9eea0a358 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55c9eea0a320 'Timer *const *'
|   `-QualType 0x55c9eea052f1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55c9eea052f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-PointerType 0x55c9ee9b2b80 'Timer *'
|         `-RecordType 0x55c9ee9b1cd0 'Timer'
|           `-CXXRecord 0x55c9ee9e4268 'Timer'
|-TypedefDecl 0x55c9eea0af30 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55c9eea0aee0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55c9eea0aec0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55c9eea0ae50 'type'
|     `-SubstTemplateTypeParmType 0x55c9eea0ac10 'Timer *' sugar
|       |-TemplateTypeParmType 0x55c9ee76ab90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee76ab40 'T'
|       `-PointerType 0x55c9ee9b2b80 'Timer *'
|         `-RecordType 0x55c9ee9b1cd0 'Timer'
|           `-CXXRecord 0x55c9ee9e4268 'Timer'
|-TypedefDecl 0x55c9eea0af98 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55c9eea0a1a0 'Timer *const &'
|   `-QualType 0x55c9eea052f1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55c9eea052f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-PointerType 0x55c9ee9b2b80 'Timer *'
|         `-RecordType 0x55c9ee9b1cd0 'Timer'
|           `-CXXRecord 0x55c9ee9e4268 'Timer'
|-TypedefDecl 0x55c9eea0aff0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c9ee43e370 'int'
|-TypedefDecl 0x55c9eea0b058 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55c9eea0a260 'Timer **'
|   `-SubstTemplateTypeParmType 0x55c9eea052f0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c9ee796680 'T'
|     `-PointerType 0x55c9ee9b2b80 'Timer *'
|       `-RecordType 0x55c9ee9b1cd0 'Timer'
|         `-CXXRecord 0x55c9ee9e4268 'Timer'
|-TypedefDecl 0x55c9eea0b0c0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55c9eea0a320 'Timer *const *'
|   `-QualType 0x55c9eea052f1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55c9eea052f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-PointerType 0x55c9ee9b2b80 'Timer *'
|         `-RecordType 0x55c9ee9b1cd0 'Timer'
|           `-CXXRecord 0x55c9ee9e4268 'Timer'
|-EnumDecl 0x55c9eea0b118 <line:134:5> col:5
| `-EnumConstantDecl 0x55c9eea0b210 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c9eea0b1f0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c9ee797898 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c9ee797870 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c9ee797850 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c9eea0b298 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c9eea0b528 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea0b350 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c9eea0b3f0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55c9eea0b840 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55c9eea0b6d0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55c9eea0baf8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55c9eea0b9e0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55c9eea0be40 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55c9eea0bd20 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55c9eea0c150 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55c9eea0c030 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55c9eea0c440 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea0c288 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c9eea0c300 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55c9eea0c598 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55c9eea0c678 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea0c6d0 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea0c718 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55c9eea0c7c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea0c820 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea0c8e8 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea0c998 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea0c9f0 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea0ca38 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea0cae8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea0cb40 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea0cb88 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea0cc38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea0cc90 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea0ccd8 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea0cd88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea0cde0 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea0ce08 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c9eea0ceb8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c9eea0cf68 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c9eea0d128 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea0d018 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c9eea0d090 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55c9eea0d278 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c9eea0d1e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea0d428 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55c9eea0d330 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c9eea0d4e0 <col:20>
| `-OptimizeNoneAttr 0x55c9eea0d538 <col:30>
|-CXXMethodDecl 0x55c9eea0d658 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55c9eea0d560 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c9eea0d710 <col:20>
| `-OptimizeNoneAttr 0x55c9eea0d768 <col:30>
|-CXXMethodDecl 0x55c9eea0d820 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55c9eea0d790 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea0d968 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c9eea0d8d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea0da98 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55c9eea0dbc8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55c9eea0dc98 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55c9eea0dd68 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55c9eea0dea8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55c9eea0de18 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea0dff0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c9eea0df60 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea0e138 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55c9eea0e0a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c9eea0e1f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c9eea0e2f0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c9eea0e260 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c9eea0e3a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c9eea0e468 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55c9eea0e568 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55c9eea0e6e8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55c9eea0e628 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55c9eea0eea8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c9eea0e7a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55c9eea0ee08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55c9eea0ed08 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55c9eea0ef88 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c9eea0f0d8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55c9eea0f048 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55c9eea0f190 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c9eea0f3d8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea0f250 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55c9eea0f2c8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55c9eea0f598 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55c9eea0f4a8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55c9eea0f7e8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55c9eea0f660 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55c9eea0f6d8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55c9eea0f8a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c9eea0fb08 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55c9eea0fa10 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55c9eea0fbd8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c9eea0fbd8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee93c000 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c9ee93c118 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55c9ee93c1a8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55c9ee93c230 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55c9ee93c320 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55c9ee93c420 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55c9ee93c4e0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55c9ee93c5a0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55c9ee93c6c8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55c9ee93c6c8
| `-ParmVarDecl 0x55c9ee93c7d8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55c9eea10988 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55c9eea10988
  `-ParmVarDecl 0x55c9eea10a98 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee9f4200 prev 0x55c9ee9f0388 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55c9ee9f42f8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55c9ee9f4388 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55c9ee9f4410 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55c9ee9f4508 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55c9eea10e00 <col:43, col:67>
|   `-ReturnStmt 0x55c9eea10df0 <col:45, col:52>
|     `-CXXConstructExpr 0x55c9eea10dc0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55c9eea10d90 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55c9ee9f5cf0
|         `-CXXThisExpr 0x55c9eea10d80 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55c9ee9f45c8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55c9ee9f47d0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55c9ee9f4678 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55c9ee9f46f0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55c9ee9f48c8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55c9ee9f4990 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55c9eea10e80 <col:39, col:67>
|   `-ReturnStmt 0x55c9eea10e70 <col:41, col:48>
|     `-ImplicitCastExpr 0x55c9eea10e58 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55c9eea10e28 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55c9ee9f5dd8
|         `-CXXThisExpr 0x55c9eea10e18 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55c9ee9f4a58 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55c9eea10f00 <col:35, col:59>
|   `-ReturnStmt 0x55c9eea10ef0 <col:37, col:44>
|     `-ImplicitCastExpr 0x55c9eea10ed8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55c9eea10ea8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55c9ee9f5e40
|         `-CXXThisExpr 0x55c9eea10e98 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55c9ee9f4ba0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55c9ee9f4b10 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55c9ee9f4ce8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55c9ee9f4c58 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55c9ee9f4ee8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55c9ee9f4da0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55c9ee9f4e18 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55c9ee9f4fb8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55c9ee9f5058 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55c9ee9f5080 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c9ee9f5198 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55c9ee9f5238 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55c9ee9f5298 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55c9ee9f53c8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55c9ee9f52f8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55c9ee9f5238 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55c9eea10fd8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55c9eea10f80 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55c9eea10f50 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55c9ee9e58a8
|   |       `-ImplicitCastExpr 0x55c9eea10fa0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55c9eea10f38 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55c9eea10f18 <col:17> 'Timer *' lvalue ParmVar 0x55c9ee9f52f8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55c9ee9f5298 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55c9eea11070 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9eea11030 <col:41> 'Timer *' lvalue ParmVar 0x55c9ee9f52f8 't_' 'Timer *'
|   `-CompoundStmt 0x55c9eea110c0 <col:45, line:44:2>
|-CXXRecordDecl 0x55c9ee9f5490 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c9ee9f55a8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55c9ee9f57f8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55c9ee9f5678 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55c9ee9f56f0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55c9eea111f0 <col:71, line:49:2>
|     `-ReturnStmt 0x55c9eea111e0 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55c9eea111a8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55c9eea11190 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55c9eea11170 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55c9ee9728b8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55c9eea110f0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55c9ee9f5238
|         | `-DeclRefExpr 0x55c9eea110d0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55c9ee9f5678 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55c9eea11140 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55c9ee9f5238
|           `-DeclRefExpr 0x55c9eea11120 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55c9ee9f56f0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55c9ee9f58c0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c9ee9f59d8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55c9ee9f5bf8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55c9ee9f5a78 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55c9ee9f5af0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55c9eea113f8 <col:63, line:54:2>
|     `-BinaryOperator 0x55c9eea113d8 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55c9eea11288 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55c9ee9e78b8
|       | `-ImplicitCastExpr 0x55c9eea11270 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55c9eea11240 <col:6, col:9> 'Timer *' lvalue ->t 0x55c9ee9f5298
|       |     `-ImplicitCastExpr 0x55c9eea11228 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55c9eea11208 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55c9ee9f5af0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55c9eea113c0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55c9eea113a0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55c9eea11348 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55c9eea11328 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55c9eea112f8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55c9eea112b8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55c9ee9f5af0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55c9eea11310 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55c9eea112d8 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55c9ee9f5a78 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55c9eea11388 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55c9eea11368 <col:39> 'int' 1
|-FieldDecl 0x55c9ee9f5cf0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55c9ee9f5d60 <col:44, col:53> aligned
|   `-ConstantExpr 0x55c9ee9f5d40 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55c9ee9f5cc0 <col:52> 'int' 8
|-FieldDecl 0x55c9ee9f5dd8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55c9ee9f5e40 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55c9ee9f5ea8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55c9eea04ff0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55c9eea0fcc0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55c9eea0fd20 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55c9eea0fd80 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55c9eea0fde0 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9eea0fed0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55c9eea0fe40 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55c9eea0ff98 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55c9eea11850 <col:29, line:81:5>
|   `-IfStmt 0x55c9eea11828 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55c9eea114e0 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55c9eea11480 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55c9eea11450 <col:6, col:18> '<bound member function type>' .size 0x55c9eea02028
|     |     `-ImplicitCastExpr 0x55c9eea114c8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55c9eea11420 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55c9eea04ff0
|     |         `-CXXThisExpr 0x55c9eea11410 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55c9eea116d0 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55c9eea116b8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55c9eea11698 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55c9ee995060 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55c9eea11508 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55c9ee9f5cf0
|     | | `-CXXThisExpr 0x55c9eea114f8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55c9eea11680 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55c9eea11650 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55c9ee9f5238
|     |     `-CXXMemberCallExpr 0x55c9eea11628 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55c9eea115f8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55c9eea030c8
|     |       | `-MemberExpr 0x55c9eea11548 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55c9eea04ff0
|     |       |   `-CXXThisExpr 0x55c9eea11538 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55c9eea115d8 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55c9eea11810 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55c9eea117d8 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55c9eea117c0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55c9eea117a0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55c9ee995508 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55c9eea11718 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55c9ee9f5cf0
|         | `-CXXThisExpr 0x55c9eea11708 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55c9eea11788 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55c9eea11758 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55c9eea100d8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55c9eea10048 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55c9eea101a0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55c9eea10260 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55c9eea10320 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55c9eea10410 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55c9eea10478 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55c9eea10478
| `-ParmVarDecl 0x55c9eea10588 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55c9eea10628 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55c9eea10628
| `-ParmVarDecl 0x55c9eea10738 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55c9eea107d8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55c9eea107d8
| `-ParmVarDecl 0x55c9eea108e8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55c9eea10b08 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55c9eea10b08
| `-ParmVarDecl 0x55c9eea10c18 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55c9eea10ca0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55c9eea10ca0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c9eea472b8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55c9eea474c8 prev 0x55c9eea472b8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c9eea485a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55c9eea48550 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55c9eea48530 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55c9eea483e0 'type'
|     `-SubstTemplateTypeParmType 0x55c9eea06000 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55c9ee760c40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee760be8 'T'
|       `-RecordType 0x55c9eea05b50 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55c9eea05a68 'sized_array_memory'
|-FieldDecl 0x55c9eea486a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55c9eea486f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c9eea48728 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55c9eea47560 'pollfd' sugar
|   |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c9ee796680 'T'
|   `-RecordType 0x55c9eea45370 'pollfd'
|     `-CXXRecord 0x55c9eea452e0 'pollfd'
|-TypedefDecl 0x55c9eea487e8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55c9eea487b0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55c9eea47560 'pollfd' sugar
|     |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c9ee796680 'T'
|     `-RecordType 0x55c9eea45370 'pollfd'
|       `-CXXRecord 0x55c9eea452e0 'pollfd'
|-TypedefDecl 0x55c9eea488a8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55c9eea48870 'const pollfd &'
|   `-QualType 0x55c9eea47561 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55c9eea47560 'pollfd' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-RecordType 0x55c9eea45370 'pollfd'
|         `-CXXRecord 0x55c9eea452e0 'pollfd'
|-TypedefDecl 0x55c9eea48938 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55c9eea48900 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55c9eea47560 'pollfd' sugar
|     |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c9ee796680 'T'
|     `-RecordType 0x55c9eea45370 'pollfd'
|       `-CXXRecord 0x55c9eea452e0 'pollfd'
|-TypedefDecl 0x55c9eea489f8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55c9eea489c0 'const pollfd *'
|   `-QualType 0x55c9eea47561 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55c9eea47560 'pollfd' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-RecordType 0x55c9eea45370 'pollfd'
|         `-CXXRecord 0x55c9eea452e0 'pollfd'
|-TypedefDecl 0x55c9eea495d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55c9eea49580 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55c9eea49560 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55c9eea494f0 'type'
|     `-SubstTemplateTypeParmType 0x55c9eea492b0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55c9ee76ab90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee76ab40 'T'
|       `-RecordType 0x55c9eea45370 'pollfd'
|         `-CXXRecord 0x55c9eea452e0 'pollfd'
|-TypedefDecl 0x55c9eea49638 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55c9eea48870 'const pollfd &'
|   `-QualType 0x55c9eea47561 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55c9eea47560 'pollfd' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-RecordType 0x55c9eea45370 'pollfd'
|         `-CXXRecord 0x55c9eea452e0 'pollfd'
|-TypedefDecl 0x55c9eea49690 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c9ee43e370 'int'
|-TypedefDecl 0x55c9eea496f8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55c9eea48900 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55c9eea47560 'pollfd' sugar
|     |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c9ee796680 'T'
|     `-RecordType 0x55c9eea45370 'pollfd'
|       `-CXXRecord 0x55c9eea452e0 'pollfd'
|-TypedefDecl 0x55c9eea49760 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55c9eea489c0 'const pollfd *'
|   `-QualType 0x55c9eea47561 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55c9eea47560 'pollfd' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-RecordType 0x55c9eea45370 'pollfd'
|         `-CXXRecord 0x55c9eea452e0 'pollfd'
|-EnumDecl 0x55c9eea497b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55c9eea498b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c9eea49890 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c9ee797898 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c9ee797870 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c9ee797850 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c9eea49938 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c9eea49bc8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea499f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c9eea49a90 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55c9eea49e88 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55c9eea49d70 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55c9eea4a148 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55c9eea4a030 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55c9eea4a490 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55c9eea4a370 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55c9eea4a7a0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55c9eea4a680 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55c9eea4aa90 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea4a8d8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c9eea4a950 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55c9eea4abe8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55c9eea4acc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea4ad20 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea4ad68 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55c9eea4ae18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea4ae70 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea4af38 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea4afe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea4b040 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea4b088 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea4b138 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea4b190 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea4b1d8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea4b288 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea4b2e0 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea4b328 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea4b3d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea4b430 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea4b458 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c9eea4b508 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c9eea4b5b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c9eea4b778 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea4b668 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c9eea4b6e0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55c9eea4b8c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c9eea4b838 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea4ba78 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55c9eea4b980 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c9eea4bb30 <col:20>
| `-OptimizeNoneAttr 0x55c9eea4bb88 <col:30>
|-CXXMethodDecl 0x55c9eea4bca8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55c9eea4bbb0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c9eea4bd60 <col:20>
| `-OptimizeNoneAttr 0x55c9eea4bdb8 <col:30>
|-CXXMethodDecl 0x55c9eea4be70 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c9eea4bde0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea4bfb8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c9eea4bf28 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea4c0e8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55c9eea4c218 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55c9eea4c2e8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55c9eea4c3b8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55c9eea4c4f8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c9eea4c468 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea4c640 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c9eea4c5b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea4c788 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55c9eea4c6f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c9eea4c840 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c9eea4c940 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c9eea4c8b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c9eea4c9f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c9eea4cab8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55c9eea4cbb8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55c9eea4cd68 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55c9eea4cc78 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55c9eea4d548 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c9eea4ce20 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55c9eea4d4a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55c9eea4d3a8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55c9eea4d628 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c9eea4d778 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55c9eea4d6e8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55c9eea4d830 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c9eea4da78 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea4d8f0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55c9eea4d968 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55c9eea4dc38 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55c9eea4db48 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55c9eea4de88 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55c9eea4dd00 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55c9eea4dd78 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55c9eea4df48 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c9eea4e1a8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55c9eea4e0b0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55c9eea4e278 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c9eea4e278

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c9eea4f860 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55c9eea4fa38 prev 0x55c9eea4f860 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55c9eea4fac8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55c9eea4faf0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c9ee43e370 'int'
|-TypedefDecl 0x55c9eea516c0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55c9eea51670 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55c9eea4ffa0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55c9eea4fea0 'type'
|     `-TemplateSpecializationType 0x55c9eea4fe30 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55c9eea4fd10 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55c9eea4fcf0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55c9eea4fcd0 <col:24> 'unsigned long' 24
|       `-RecordType 0x55c9eea4fe10 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55c9eea4fd30 'char_array'
|-TypedefDecl 0x55c9eea51778 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55c9eea51740 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55c9eea51720 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55c9eea516c0 'type'
|     `-ElaboratedType 0x55c9eea51670 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55c9eea4ffa0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55c9eea4fea0 'type'
|         `-TemplateSpecializationType 0x55c9eea4fe30 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55c9eea4fd10 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55c9eea4fcf0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55c9eea4fcd0 <col:24> 'unsigned long' 24
|           `-RecordType 0x55c9eea4fe10 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55c9eea4fd30 'char_array'
|-CXXMethodDecl 0x55c9eea518f8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55c9eea51808 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55c9eea519e8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55c9eea51ac8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55c9eea51ac8
|-CXXMethodDecl 0x55c9eea51d98 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55c9eea51ca0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55c9eea51fd8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55c9eea51e50 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c9eea51ec8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c9eea521a8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55c9eea52098 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c9eea52110 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c9eea52308 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55c9eea523d8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55c9eea52628 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55c9eea52498 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55c9eea52510 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c9eea52888 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55c9eea526f8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55c9eea52770 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c9eea52a48 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55c9eea52958 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c9eea52c08 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55c9eea52b10 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c9eea52cc0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c9eea52d70 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c9eea52fa8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55c9eea52e20 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c9eea52e98 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c9eea53248 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55c9eea53150 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55c9eea53310 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55c9eea53360 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55c9eea533b0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c9eea4e3c0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55c9eea4e5c8 prev 0x55c9eea4e3c0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c9eea4f7d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55c9eea4f780 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55c9eea4f760 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55c9eea4f610 'type'
|     `-SubstTemplateTypeParmType 0x55c9eea4f430 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55c9ee760c40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee760be8 'T'
|       `-RecordType 0x55c9eea4ef80 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55c9eea4eea0 'sized_array_memory'
|-FieldDecl 0x55c9eea53400 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55c9eea53450 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c9eea53488 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55c9eea4e660 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c9ee796680 'T'
|   `-RecordType 0x55c9eea46e20 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55c9eea46d90 'SelectorInfo'
|-TypedefDecl 0x55c9eea53548 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55c9eea53510 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55c9eea4e660 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c9ee796680 'T'
|     `-RecordType 0x55c9eea46e20 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55c9eea46d90 'SelectorInfo'
|-TypedefDecl 0x55c9eea53608 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55c9eea535d0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55c9eea4e661 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55c9eea4e660 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-RecordType 0x55c9eea46e20 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55c9eea46d90 'SelectorInfo'
|-TypedefDecl 0x55c9eea53698 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55c9eea53660 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55c9eea4e660 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c9ee796680 'T'
|     `-RecordType 0x55c9eea46e20 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55c9eea46d90 'SelectorInfo'
|-TypedefDecl 0x55c9eea53758 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55c9eea53720 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55c9eea4e661 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55c9eea4e660 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-RecordType 0x55c9eea46e20 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55c9eea46d90 'SelectorInfo'
|-TypedefDecl 0x55c9eea543b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55c9eea54360 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55c9eea54340 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55c9eea54278 'type'
|     `-LValueReferenceType 0x55c9eea54240 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55c9eea53fe1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55c9eea53fe0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55c9ee76a460 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55c9ee76a408 'T'
|           `-RecordType 0x55c9eea46e20 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55c9eea46d90 'SelectorInfo'
|-TypedefDecl 0x55c9eea54418 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55c9eea535d0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55c9eea4e661 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55c9eea4e660 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-RecordType 0x55c9eea46e20 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55c9eea46d90 'SelectorInfo'
|-TypedefDecl 0x55c9eea54470 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c9ee43e370 'int'
|-TypedefDecl 0x55c9eea544d8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55c9eea53660 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55c9eea4e660 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c9ee796680 'T'
|     `-RecordType 0x55c9eea46e20 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55c9eea46d90 'SelectorInfo'
|-TypedefDecl 0x55c9eea54540 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55c9eea53720 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55c9eea4e661 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55c9eea4e660 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55c9ee7966d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c9ee796680 'T'
|       `-RecordType 0x55c9eea46e20 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55c9eea46d90 'SelectorInfo'
|-EnumDecl 0x55c9eea54598 <line:134:5> col:5
| `-EnumConstantDecl 0x55c9eea54690 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c9eea54670 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c9ee797898 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c9ee797870 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c9ee797850 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c9eea54718 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c9eea549a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea547d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c9eea54870 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55c9eea54c68 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55c9eea54b50 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55c9eea54f28 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55c9eea54e10 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55c9eea552a0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55c9eea55180 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55c9eea555b0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55c9eea55490 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55c9eea558a0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea556e8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c9eea55760 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55c9eea559f8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55c9eea55ad8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea55b30 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea55b78 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55c9eea55c28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea55c80 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea55d48 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea55df8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea55e50 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea55e98 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea55f48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea55fa0 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea55fe8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea56098 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea560f0 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea56138 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55c9eea561e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c9eea56240 <col:30> Inherited
|-CXXMethodDecl 0x55c9eea56268 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c9eea56318 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c9eea563c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c9eea56588 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea56478 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c9eea564f0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55c9eea566d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c9eea56648 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea56888 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55c9eea56790 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c9eea56940 <col:20>
| `-OptimizeNoneAttr 0x55c9eea56998 <col:30>
|-CXXMethodDecl 0x55c9eea56ab8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55c9eea569c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c9eea56b70 <col:20>
| `-OptimizeNoneAttr 0x55c9eea56bc8 <col:30>
|-CXXMethodDecl 0x55c9eea56c80 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c9eea56bf0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea56dc8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c9eea56d38 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea56ef8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55c9eea57028 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55c9eea570f8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55c9eea571c8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55c9eea57308 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c9eea57278 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea57450 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c9eea573c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c9eea57598 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55c9eea57508 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c9eea57650 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c9eea57750 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c9eea576c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c9eea57808 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c9eea578c8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55c9eea579c8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55c9eea57b78 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55c9eea57a88 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55c9eea58338 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c9eea57c30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55c9eea58298 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55c9eea58198 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55c9eea58418 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c9eea58568 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55c9eea584d8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55c9eea58620 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c9eea58868 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55c9eea586e0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55c9eea58758 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55c9eea58a28 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55c9eea58938 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55c9eea58c78 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55c9eea58af0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55c9eea58b68 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55c9eea58d38 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c9eea58f98 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55c9eea58ea0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55c9eea59068 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c9eea59068

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9eea45f70 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c9eea46088 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55c9eea46118 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55c9eea461a0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55c9eea46290 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55c9eea46290
|-CXXMethodDecl 0x55c9eea46390 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55c9eea46630 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55c9eea46448 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55c9eea464c0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55c9eea46540 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55c9eea468a0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55c9eea46700 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55c9eea46778 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55c9eea467f8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55c9eea469f8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55c9eea46968 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55c9eea46ac0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55c9eea5a718 <col:34, line:50:5>
|   |-BinaryOperator 0x55c9eea5a0e8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55c9eea5a0a8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55c9eea47248
|   | | `-CXXThisExpr 0x55c9eea5a098 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55c9eea5a0d8 <col:23> 'bool' true
|   `-CallExpr 0x55c9eea5a6f0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55c9eea5a6d8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55c9eea5a658 <col:2> 'void (long)' lvalue Function 0x55c9eea5a558 'ignore_result' 'void (long)' (FunctionTemplate 0x55c9ee659d28 'ignore_result')
|     `-CallExpr 0x55c9eea5a300 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55c9eea5a2e8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c9eea5a268 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55c9eea20478 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55c9eea5a338 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55c9eea5a210 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55c9eea5a1f8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55c9eea5a1a8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55c9eea471e8
|       |   |   `-CXXThisExpr 0x55c9eea5a198 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55c9eea5a1d8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55c9eea5a368 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55c9eea5a350 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55c9eea5a230 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55c9eea5a380 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55c9eea5a248 <col:41> 'int' 1
|-CXXMethodDecl 0x55c9eea46c00 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55c9eea46b70 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55c9eea46cc8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55c9eea46d68 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55c9eea46d90 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c9eea46ea8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55c9eea46f48 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55c9eea46fa8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55c9eea47010 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55c9eea470c0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55c9eea46f48 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55c9eea5a778 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55c9eea5a738 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55c9eea46fa8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55c9eea5a7f8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55c9eea5a7b8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55c9eea47010 'pollfd' 'int'
|   | `-UnaryOperator 0x55c9eea5a858 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55c9eea5a838 <col:35> 'int' 1
|   `-CompoundStmt 0x55c9eea5a8d0 <line:64:2, line:65:2>
|-FieldDecl 0x55c9eea471e8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55c9eea47248 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55c9eea4e360 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55c9eea59150 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55c9eea59388 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55c9eea591b8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55c9eea59230 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55c9eea592a8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55c9eea59570 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55c9eea59458 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55c9eea594d8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55c9eea597b8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55c9eea59638 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55c9eea596b8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55c9eea599c8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55c9eea59878 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55c9eea598f0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55c9eea59b18 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55c9eea59a88 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55c9eea59be0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55c9eea59ca0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55c9eea59d68 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55c9eea59d68
| `-ParmVarDecl 0x55c9eea59e78 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55c9eea59f18 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55c9eea59f18
  `-ParmVarDecl 0x55c9eea5a028 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee93af68 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c9ee93b088 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55c9ee93b118 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55c9ee93b1a0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55c9ee93b290 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55c9ee93b390 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55c9ee93b450 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55c9ee93b510 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55c9ee93b5f8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55c9ee93b718 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55c9ee93b718
| `-ParmVarDecl 0x55c9ee93b828 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55c9eea616e8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55c9eea616e8
  `-ParmVarDecl 0x55c9eea617f8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee9e1fd8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9ee9e20f8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55c9ee9e2198 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55c9ee9e21f8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55c9eea60ce8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55c9eea60ce8
| `-ParmVarDecl 0x55c9eea60df8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55c9eea60e98 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55c9eea60e98
| `-ParmVarDecl 0x55c9eea60fa8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55c9eea61018 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55c9eea61018
|-CXXMethodDecl 0x55c9eea61898 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55c9eea61898
| `-ParmVarDecl 0x55c9eea619a8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55c9eea61a18 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55c9eea61a18
| `-ParmVarDecl 0x55c9eea61b28 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55c9eea6a198 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55c9eea6a270 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee93ce60 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9ee93cf78 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55c9ee93d008 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55c9ee93d090 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55c9ee93d150 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55c9ee43e370 'int'
|-CXXMethodDecl 0x55c9ee93d218 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55c9ee93d2b8 <col:45> always_inline
|-CXXMethodDecl 0x55c9ee93d3e8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55c9ee93d320 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55c9ee93d490 <col:49> always_inline
|-CXXConstructorDecl 0x55c9ee93d588 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55c9ee93d588
| `-ParmVarDecl 0x55c9ee93d698 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55c9ee93d738 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55c9ee93d738
| `-ParmVarDecl 0x55c9ee93d848 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55c9eea61100 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55c9eea61100
|-CXXMethodDecl 0x55c9eea61bc8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55c9eea61bc8
| `-ParmVarDecl 0x55c9eea61cd8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55c9eea61d48 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55c9eea61d48
  `-ParmVarDecl 0x55c9eea61e58 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9eea5ad40 prev 0x55c9eea45ee0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55c9eea5ae38 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55c9eea5aec8 <col:22, col:28> col:22 public
|-EnumDecl 0x55c9eea5aef0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55c9eea5b008 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55c9eea5afe8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55c9eea5afd0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c9eea5afb0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55c9eea5b0b0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55c9eea5b090 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55c9eea5b078 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55c9eea5b058 <col:53> 'int' 1000
|-CXXMethodDecl 0x55c9eea5b150 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55c9eea5b210 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55c9eea5b2f8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55c9eea61f18 <col:34, col:52>
|   `-ReturnStmt 0x55c9eea61f08 <col:36, col:43>
|     `-MemberExpr 0x55c9eea61ed8 <col:43> 'TimerSet' lvalue ->_timers 0x55c9eea5cfc8
|       `-CXXThisExpr 0x55c9eea61ec8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55c9eea5b3e8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55c9eea61f80 <col:46, col:64>
|   `-ReturnStmt 0x55c9eea61f70 <col:48, col:55>
|     `-MemberExpr 0x55c9eea61f40 <col:55> 'const TimerSet' lvalue ->_timers 0x55c9eea5cfc8
|       `-CXXThisExpr 0x55c9eea61f30 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55c9eea5b4d8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55c9eea61fe8 <col:36, col:55>
|   `-ReturnStmt 0x55c9eea61fd8 <col:38, col:45>
|     `-MemberExpr 0x55c9eea61fa8 <col:45> 'SelectSet' lvalue ->_selects 0x55c9eea5d028
|       `-CXXThisExpr 0x55c9eea61f98 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55c9eea5b5c8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55c9eea62050 <col:48, col:67>
|   `-ReturnStmt 0x55c9eea62040 <col:50, col:57>
|     `-MemberExpr 0x55c9eea62010 <col:57> 'const SelectSet' lvalue ->_selects 0x55c9eea5d028
|       `-CXXThisExpr 0x55c9eea62000 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55c9eea5b688 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55c9eea5b778 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55c9eea5b8e8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55c9eea5b828 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55c9eea5b9b0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55c9eea5bdf8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55c9eea5ba60 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55c9eea5bce0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55c9eea5bec8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55c9eea5bf88 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55c9eea5c048 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55c9eea5c188 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55c9eea5c0f8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55c9eea5c250 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55c9eea5c310 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55c9eea5c3d0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55c9eea5c490 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55c9eea5c5d0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55c9eea5c540 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55c9eea5c698 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55c9eea5c758 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55c9eea5c7f8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55c9eea5c8c0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c9eea5c910 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c9eea5c960 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c9eea5c9b0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c9eea5ca00 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c9eea5ca50 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c9eea5caa0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c9eea5caf0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c9eea5cb40 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c9eea5cb90 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55c9eea5cbe0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55c9eea5ccd8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55c9eea5cc48 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55c9eea5ce28 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55c9eea5cd98 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55c9eea5ced0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55c9eea5cf08 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55c9eea5cf68 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55c9eea5cfc8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55c9eea5d028 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55c9eea5f2c0 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55c9eea5f330 <col:40, col:50> aligned
|   `-ConstantExpr 0x55c9eea5f310 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55c9eea5d078 <col:48> 'int' 64
|-FieldDecl 0x55c9eea5f3a0 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55c9eea5f400 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55c9eea5f500 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55c9eea5f610 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55c9eea5f670 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55c9eea5f6f0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55c9eea5f760 <col:36, col:46> aligned
|   `-ConstantExpr 0x55c9eea5f740 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55c9eea5f6c0 <col:44> 'int' 64
|-FieldDecl 0x55c9eea5f7d8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55c9eea5f838 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55c9eea5f888 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55c9eea5f8c8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55c9eea5f930 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55c9eea5f980 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55c9eea5fb28 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55c9eea5f9b8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55c9eea5fa38 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55c9eea5fc28 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55c9eea5fc28
|-CXXMethodDecl 0x55c9eea5fd30 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55c9eea5fdf8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55c9eea62148 <col:34, line:217:5>
|   `-ReturnStmt 0x55c9eea62138 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55c9eea62120 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55c9eea620f0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55c9ee93f9c0
|         `-ImplicitCastExpr 0x55c9eea620d8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55c9eea620a8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55c9ee93f958
|             `-MemberExpr 0x55c9eea62078 <col:16> 'const TaskLink' lvalue ->_task_link 0x55c9eea5cf08
|               `-CXXThisExpr 0x55c9eea62068 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55c9eea5feb8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55c9eea5ff78 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55c9eea62870 <col:39, line:226:5>
|   |-DeclStmt 0x55c9eea62398 <line:223:9, col:68>
|   | `-VarDecl 0x55c9eea62170 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55c9eea62350 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55c9eea62320 <col:24, col:38> '<bound member function type>' .compare_swap 0x55c9ee667310
|   |     | `-MemberExpr 0x55c9eea621e8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55c9eea5f3a0
|   |     |   `-CXXThisExpr 0x55c9eea621d8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55c9eea622d8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55c9eea622c0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55c9eea62298 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55c9eea62278 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55c9eea62380 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55c9eea62300 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55c9eea623e0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55c9eea623b0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55c9eea62170 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55c9eea62850 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55c9eea62820 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55c9eea624f8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55c9eea624c8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55c9eea624b0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55c9eea62408 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55c9eea62170 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55c9eea62488 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55c9eea62470 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55c9eea62448 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55c9eea62428 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55c9eea62558 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55c9eea62538 <col:60> 'int' 0
|       `-CallExpr 0x55c9eea62780 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55c9eea62768 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55c9eea62748 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55c9eea627c0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55c9eea62648 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55c9eea627d8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55c9eea62678 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55c9eea627f0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55c9eea626b8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55c9eea62808 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55c9eea62730 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55c9eea62718 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55c9eea626d8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55c9eea600c0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55c9eea60030 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55c9eea60188 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55c9eea60248 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55c9eea60308 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55c9eea603c8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55c9eea60488 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55c9eea60580 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55c9eea605e0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55c9eea60670 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55c9eea60a38 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55c9eea60a38
| `-ParmVarDecl 0x55c9eea60b48 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55c9eea61208 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55c9eea61208
  `-ParmVarDecl 0x55c9eea61318 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee93fcd0 prev 0x55c9ee9b1b90 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55c9ee93fe08 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55c9ee93fe98 <col:33, col:39> col:33 public
|-EnumDecl 0x55c9ee93fec0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55c9ee940000 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55c9ee93ffe0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55c9ee93ffc0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55c9ee93ff80 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55c9ee93ffa0 <col:26> 'int' 16
| `-EnumConstantDecl 0x55c9ee9400d0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55c9ee9400b0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55c9ee940090 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55c9ee940050 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55c9ee940070 <col:47> 'int' 31
|-EnumDecl 0x55c9ee940120 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55c9ee940260 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55c9ee940380 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9ee940240 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55c9ee940220 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55c9ee9401e0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55c9ee940200 <col:29> 'int' 15
| `-EnumConstantDecl 0x55c9ee940330 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55c9ee940398 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee940310 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55c9ee9402f0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55c9ee9402b0 <col:51> 'int' 1
|         `-IntegerLiteral 0x55c9ee9402d0 <col:54> 'int' 10
|-CXXConstructorDecl 0x55c9ee9dfbe8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55c9ee9403c0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55c9ee9dfac0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55c9ee9dfd78 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55c9ee9dfcb0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55c9ee9dfe70 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55c9ee9dfe70
|-CXXMethodDecl 0x55c9ee9dfff8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55c9ee9e3138 <col:42, line:100:5>
|   `-ReturnStmt 0x55c9ee9e3128 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55c9ee9e3110 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55c9ee9e30e0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55c9ee9e1e60
|         `-CXXThisExpr 0x55c9ee9e30d0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55c9ee9e00c0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55c9ee9e31b8 <col:36, line:105:5>
|   `-ReturnStmt 0x55c9ee9e31a8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55c9ee9e3190 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55c9ee9e3160 <col:16> 'void *const' lvalue ->_thunk 0x55c9ee9e1ec8
|         `-CXXThisExpr 0x55c9ee9e3150 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55c9ee9e0180 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55c9ee9e3238 <col:37, line:110:5>
|   `-ReturnStmt 0x55c9ee9e3228 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55c9ee9e3210 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55c9ee9e31e0 <col:16> 'Element *const' lvalue ->_owner 0x55c9ee9e1f88
|         `-CXXThisExpr 0x55c9ee9e31d0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55c9ee9e0240 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55c9ee9e0308 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55c9ee9e03c8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55c9ee9e0488 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55c9ee9e3320 <col:35, line:137:5>
|   `-ReturnStmt 0x55c9ee9e3310 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55c9ee9e32d8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55c9ee9e32a8 <col:16, col:24> '<bound member function type>' ->router 0x55c9ee9c8380
|         `-ImplicitCastExpr 0x55c9ee9e32f8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55c9ee9e3290 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55c9ee9e3260 <col:16> 'Element *const' lvalue ->_owner 0x55c9ee9e1f88
|               `-CXXThisExpr 0x55c9ee9e3250 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55c9ee9e0548 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55c9ee9e0748 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55c9ee9e05f8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55c9ee9e0670 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55c9ee9e0958 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55c9ee9e0808 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55c9ee9e0880 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55c9ee9e0a28 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55c9ee9e3430 <col:35, line:181:5>
|   `-ReturnStmt 0x55c9ee9e3420 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55c9ee9e3408 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55c9ee9e33f0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55c9ee9e33c0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55c9ee9e1a98
|           `-MemberExpr 0x55c9ee9e3378 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c9ee9e1bb8
|             `-MemberExpr 0x55c9ee9e3348 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55c9ee9e1de8
|               `-CXXThisExpr 0x55c9ee9e3338 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55c9ee9e0ae8 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55c9ee9e3548 <col:30, line:192:5>
|   `-BinaryOperator 0x55c9ee9e3528 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55c9ee9e34d0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55c9ee9e1a98
|     | `-MemberExpr 0x55c9ee9e3488 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c9ee9e1bb8
|     |   `-MemberExpr 0x55c9ee9e3458 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55c9ee9e1de8
|     |     `-CXXThisExpr 0x55c9ee9e3448 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55c9ee9e3510 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55c9ee9e3500 <col:32> 'bool' false
|-CXXMethodDecl 0x55c9ee9e0ba8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55c9ee9e3898 <col:30, line:206:5>
|   |-BinaryOperator 0x55c9ee9e3640 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55c9ee9e35e8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55c9ee9e1a98
|   | | `-MemberExpr 0x55c9ee9e35a0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c9ee9e1bb8
|   | |   `-MemberExpr 0x55c9ee9e3570 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55c9ee9e1de8
|   | |     `-CXXThisExpr 0x55c9ee9e3560 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55c9ee9e3628 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55c9ee9e3618 <col:32> 'bool' true
|   |-CallExpr 0x55c9ee9e36e0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55c9ee9e36c8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9ee9e36a8 <col:9> 'void ()' lvalue Function 0x55c9ee93ab20 'click_fence' 'void ()'
|   `-IfStmt 0x55c9ee9e3880 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55c9ee9e37c0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55c9ee9e3790 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55c9ee9e3740 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55c9ee9e21f8
|     | |   `-MemberExpr 0x55c9ee9e3710 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55c9ee9e2270
|     | |     `-CXXThisExpr 0x55c9ee9e3700 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55c9ee9e37a8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55c9ee9e3770 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55c9ee9e3840 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55c9ee9e37f0 <col:13> '<bound member function type>' ->complete_schedule 0x55c9ee9e2c70
|       | `-CXXThisExpr 0x55c9ee9e37e0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55c9ee9e3868 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55c9ee9e3820 <col:31> 'int' 0
|-CXXMethodDecl 0x55c9ee9e0c68 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55c9ee9e39c0 <col:35, line:240:5>
|   `-BinaryOperator 0x55c9ee9e39a0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55c9ee9e3948 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55c9ee9e1a98
|     | `-MemberExpr 0x55c9ee9e3900 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c9ee9e1bb8
|     |   `-MemberExpr 0x55c9ee9e38d0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55c9ee9e1de8
|     |     `-CXXThisExpr 0x55c9ee9e38c0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55c9ee9e3988 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55c9ee9e3978 <col:32> 'bool' true
|-CXXMethodDecl 0x55c9ee9e0d28 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55c9ee9e3bd8 <col:37, line:253:5>
|   |-BinaryOperator 0x55c9ee9e3ab8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55c9ee9e3a60 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55c9ee9e1a98
|   | | `-MemberExpr 0x55c9ee9e3a18 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c9ee9e1bb8
|   | |   `-MemberExpr 0x55c9ee9e39e8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55c9ee9e1de8
|   | |     `-CXXThisExpr 0x55c9ee9e39d8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55c9ee9e3aa0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55c9ee9e3a90 <col:32> 'bool' false
|   `-BinaryOperator 0x55c9ee9e3bb8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55c9ee9e3b60 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55c9ee9e1af8
|     | `-MemberExpr 0x55c9ee9e3b18 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c9ee9e1bb8
|     |   `-MemberExpr 0x55c9ee9e3ae8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55c9ee9e1de8
|     |     `-CXXThisExpr 0x55c9ee9e3ad8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55c9ee9e3ba0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55c9ee9e3b90 <col:41> 'bool' true
|-CXXMethodDecl 0x55c9ee9e0de8 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55c9ee9e3d58 <col:37, line:264:5>
|   |-BinaryOperator 0x55c9ee9e3cd8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55c9ee9e3c80 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55c9ee9e1af8
|   | | `-MemberExpr 0x55c9ee9e3c38 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c9ee9e1bb8
|   | |   `-MemberExpr 0x55c9ee9e3c08 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55c9ee9e1de8
|   | |     `-CXXThisExpr 0x55c9ee9e3bf8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55c9ee9e3cc0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55c9ee9e3cb0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55c9ee9e3d38 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55c9ee9e3d08 <col:9> '<bound member function type>' ->reschedule 0x55c9ee9e0ba8
|       `-CXXThisExpr 0x55c9ee9e3cf8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55c9ee9e0f30 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55c9ee9e0ea0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55c9ee9e1000 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55c9ee9e1148 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55c9ee9e10b8 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55c9ee9e1298 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55c9ee9e1208 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55c9ee9e1360 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55c9ee9e1420 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55c9ee9e14c0 <col:53> "" ""
|-CXXMethodDecl 0x55c9ee9e1558 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55c9ee9e15f8 <col:47> "" ""
|-AccessSpecDecl 0x55c9ee9e1668 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55c9ee9e16a8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55c9ee9e1710 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55c9ee9e1760 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c9ee9e1878 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55c9ee9e1908 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55c9ee9e1a38 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55c9ee9e1a98 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55c9ee9e1af8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55c9eea698c8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55c9eea699a0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55c9eea699a0
| | |-CXXConstructorDecl 0x55c9eea69c58 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55c9eea69c58
| | | `-ParmVarDecl 0x55c9eea69d68 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55c9eea69e08 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55c9eea69e08
| |   `-ParmVarDecl 0x55c9eea69f18 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55c9ee9e1bb8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55c9ee9e1c18 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55c9ee9e1bb8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55c9ee9e1a38 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55c9ee9e1c70 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55c9ee9e1bb8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55c9ee9e1a98 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55c9ee9e1cc8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55c9ee9e1bb8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55c9ee9e1af8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55c9ee9e1d20 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55c9eea697d8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c9eea6a138 <col:11>
| |-CXXConstructorDecl 0x55c9eea69aa8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55c9eea69aa8
| | `-ParmVarDecl 0x55c9eea69bb8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55c9eea69fb8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55c9eea69fb8
|   `-ParmVarDecl 0x55c9eea6a0c8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55c9ee9e1de8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55c9ee9e1e60 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55c9ee9e1ec8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55c9ee9e1f28 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55c9ee9e1f88 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55c9ee9e1fd8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c9ee9e20f8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55c9ee9e2198 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55c9ee9e21f8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55c9eea60ce8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55c9eea60ce8
| | `-ParmVarDecl 0x55c9eea60df8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55c9eea60e98 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55c9eea60e98
| | `-ParmVarDecl 0x55c9eea60fa8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55c9eea61018 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55c9eea61018
| |-CXXMethodDecl 0x55c9eea61898 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55c9eea61898
| | `-ParmVarDecl 0x55c9eea619a8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55c9eea61a18 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55c9eea61a18
| | `-ParmVarDecl 0x55c9eea61b28 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55c9eea6a198 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55c9eea6a270 <col:11>
|-FieldDecl 0x55c9ee9e2270 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55c9ee9e23b8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55c9ee9e22f8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55c9ee9e2568 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55c9ee9e2478 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55c9ee9e2630 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55c9ee9e26f0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55c9ee9e27b0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55c9ee9e3e68 <col:41, line:355:5>
|   `-ReturnStmt 0x55c9ee9e3e58 <line:354:9, col:38>
|     `-BinaryOperator 0x55c9ee9e3e38 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55c9ee9e3e08 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55c9ee9e3db8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55c9ee9e21f8
|       |   `-MemberExpr 0x55c9ee9e3d88 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55c9ee9e2270
|       |     `-CXXThisExpr 0x55c9ee9e3d78 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55c9ee9e3e20 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55c9ee9e3de8 <col:38> 'int' 0
|-CXXMethodDecl 0x55c9ee9e2870 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55c9ee9e29b0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55c9ee9e2920 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55c9ee9e2b28 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55c9ee9e2a68 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55c9ee9e2c70 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55c9ee9e2be0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55c9ee9e2d38 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55c9ee9e2f00 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55c9ee9e2de8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55c9ee9e2e68 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55c9ee9e3000 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55c9ee9e3090 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee9e7968 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55c9ee9efa00 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55c9ee9f04f8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee9e4268 prev 0x55c9ee9b1c40 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c9ee9e4360 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55c9ee9e43f0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55c9ee9e4450 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55c9ee9e44f8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55c9ee9e4618 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55c9ee9e47b8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55c9ee9e46f8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55c9ee9e4a08 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55c9ee9e4878 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55c9ee9e48f8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55c9ee9e4b60 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55c9ee9e4ad0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55c9ee9e4ce8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55c9ee9e4c20 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55c9ee9e4e98 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55c9ee9e4dd8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55c9ee9e4f90 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55c9ee9f06d0 <col:21, line:58:5>
|   `-IfStmt 0x55c9ee9f06b8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55c9ee9f0620 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55c9ee9f05f0 <col:6> '<bound member function type>' ->scheduled 0x55c9ee9e57e8
|     |   `-ImplicitCastExpr 0x55c9ee9f0640 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55c9ee9f05e0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55c9ee9f0698 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55c9ee9f0668 <col:6> '<bound member function type>' ->unschedule 0x55c9ee9e6e10
|         `-CXXThisExpr 0x55c9ee9f0658 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55c9ee9e5090 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55c9ee9f0870 <col:26, line:65:5>
|   |-BinaryOperator 0x55c9ee9f0790 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55c9ee9f0728 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55c9ee9efa00
|   | | `-MemberExpr 0x55c9ee9f06f8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55c9ee9efac8
|   | |   `-CXXThisExpr 0x55c9ee9f06e8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55c9ee9f0778 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9ee9f0758 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55c9ee9eff28 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55c9ee9f0850 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55c9ee9f07c0 <col:2> 'void *' lvalue ->_thunk 0x55c9ee9efb48
|     | `-CXXThisExpr 0x55c9ee9f07b0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55c9ee9f0828 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55c9ee9f07f0 <col:20> 'int' 1
|-CXXMethodDecl 0x55c9ee9e51d0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55c9ee9e5140 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55c9ee9f09d0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55c9ee9f08c0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55c9ee9f0890 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55c9ee9e5140 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55c9ee9f09b0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55c9ee9f0980 <col:2> '<bound member function type>' ->assign 0x55c9ee9e5090
|       `-CXXThisExpr 0x55c9ee9f0970 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55c9ee9e53a0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55c9ee9e5288 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55c9ee9e5308 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55c9ee9f0b50 <col:58, line:79:5>
|   |-BinaryOperator 0x55c9ee9f0a98 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55c9ee9f0a30 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55c9ee9efa00
|   | | `-MemberExpr 0x55c9ee9f0a00 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55c9ee9efac8
|   | |   `-CXXThisExpr 0x55c9ee9f09f0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55c9ee9f0a80 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9ee9f0a60 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55c9ee9e5288 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55c9ee9f0b30 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55c9ee9f0ac8 <col:2> 'void *' lvalue ->_thunk 0x55c9ee9efb48
|     | `-CXXThisExpr 0x55c9ee9f0ab8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55c9ee9f0b18 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee9f0af8 <col:11> 'void *' lvalue ParmVar 0x55c9ee9e5308 'user_data' 'void *'
|-CXXMethodDecl 0x55c9ee9e54f0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55c9ee9e5460 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55c9ee9f0ce8 <col:35, line:87:5>
|   |-BinaryOperator 0x55c9ee9f0c18 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55c9ee9f0bb0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55c9ee9efa00
|   | | `-MemberExpr 0x55c9ee9f0b80 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55c9ee9efac8
|   | |   `-CXXThisExpr 0x55c9ee9f0b70 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55c9ee9f0c00 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9ee9f0be0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55c9ee9f0100 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55c9ee9f0cc8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55c9ee9f0c48 <col:2> 'void *' lvalue ->_thunk 0x55c9ee9efb48
|     | `-CXXThisExpr 0x55c9ee9f0c38 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55c9ee9f0cb0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55c9ee9f0c98 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55c9ee9f0c78 <col:11> 'Element *' lvalue ParmVar 0x55c9ee9e5460 'element' 'Element *'
|-CXXMethodDecl 0x55c9ee9e5638 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55c9ee9e55a8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55c9ee9f0e80 <col:29, line:94:5>
|   |-BinaryOperator 0x55c9ee9f0db0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55c9ee9f0d48 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55c9ee9efa00
|   | | `-MemberExpr 0x55c9ee9f0d18 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55c9ee9efac8
|   | |   `-CXXThisExpr 0x55c9ee9f0d08 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55c9ee9f0d98 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c9ee9f0d78 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55c9ee9f02d8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55c9ee9f0e60 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55c9ee9f0de0 <col:2> 'void *' lvalue ->_thunk 0x55c9ee9efb48
|     | `-CXXThisExpr 0x55c9ee9f0dd0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55c9ee9f0e48 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55c9ee9f0e30 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55c9ee9f0e10 <col:11> 'Task *' lvalue ParmVar 0x55c9ee9e55a8 'task' 'Task *'
|-CXXMethodDecl 0x55c9ee9e5728 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55c9ee9f0f60 <col:37, line:100:5>
|   `-ReturnStmt 0x55c9ee9f0f50 <line:99:2, col:19>
|     `-BinaryOperator 0x55c9ee9f0f30 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55c9ee9f0f00 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55c9ee9f0eb0 <col:9> 'Element *const' lvalue ->_owner 0x55c9ee9efba8
|       |   `-CXXThisExpr 0x55c9ee9f0ea0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55c9ee9f0f18 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55c9ee9f0ee0 <col:19> 'int' 0
|-CXXMethodDecl 0x55c9ee9e57e8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55c9ee9f1020 <col:35, line:105:5>
|   `-ReturnStmt 0x55c9ee9f1010 <line:104:2, col:23>
|     `-BinaryOperator 0x55c9ee9f0ff0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55c9ee9f0fd8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55c9ee9f0f88 <col:9> 'const int' lvalue ->_schedpos1 0x55c9ee9e78b8
|       |   `-CXXThisExpr 0x55c9ee9f0f78 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55c9ee9f0fb8 <col:23> 'int' 0
|-CXXMethodDecl 0x55c9ee9e58a8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55c9ee9f1088 <col:51, line:118:5>
|   `-ReturnStmt 0x55c9ee9f1078 <line:117:2, col:9>
|     `-MemberExpr 0x55c9ee9f1048 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55c9ee9e7918
|       `-CXXThisExpr 0x55c9ee9f1038 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55c9ee9e5968 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55c9ee9f15e0 <col:37, line:136:5>
|   `-IfStmt 0x55c9ee9f15b8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55c9ee9f1148 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55c9ee9f1130 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55c9ee9f1110 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55c9ee9f10e0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55c9ee949558
|     |       `-MemberExpr 0x55c9ee9f10b0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55c9ee9e7918
|     |         `-CXXThisExpr 0x55c9ee9f10a0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55c9ee9f1528 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55c9ee9f1510 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55c9ee9f14e0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55c9ee9f14c8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55c9ee9f1490 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55c9ee9f1478 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55c9ee9f1458 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55c9ee974e40 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55c9ee9f13f8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55c9ee9f13e0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55c9ee9f1308 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55c9ee9f12f0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55c9ee9f12d0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55c9ee974af8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55c9ee9f1270 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55c9ee9f1170 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55c9ee9e7918
|     |         |     |   `-CXXThisExpr 0x55c9ee9f1160 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55c9ee9f12b8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55c9ee9f12a0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55c9ee9f1250 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55c9ee9f1238 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55c9ee9f11d8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55c9ee7c0660 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55c9ee9f1440 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55c9ee9f1428 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55c9ee9f13c0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55c9ee9f13a8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55c9ee9f1378 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55c9ee7c1330 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55c9ee9f15a8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55c9ee9f1578 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55c9ee9f1548 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55c9ee9e7918
|           `-CXXThisExpr 0x55c9ee9f1538 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55c9ee9e5a28 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55c9ee9f16c8 <col:35, line:141:5>
|   `-ReturnStmt 0x55c9ee9f16b8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55c9ee9f1680 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55c9ee9f1650 <col:9, col:17> '<bound member function type>' ->router 0x55c9ee9c8380
|         `-ImplicitCastExpr 0x55c9ee9f16a0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55c9ee9f1638 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55c9ee9f1608 <col:9> 'Element *const' lvalue ->_owner 0x55c9ee9efba8
|               `-CXXThisExpr 0x55c9ee9f15f8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55c9ee9e5ae8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55c9ee9f1748 <col:37, line:146:5>
|   `-ReturnStmt 0x55c9ee9f1738 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55c9ee9f1720 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55c9ee9f16f0 <col:9> 'Element *const' lvalue ->_owner 0x55c9ee9efba8
|         `-CXXThisExpr 0x55c9ee9f16e0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55c9ee9e5ba8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55c9ee9f17c8 <col:41, line:151:5>
|   `-ReturnStmt 0x55c9ee9f17b8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55c9ee9f17a0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55c9ee9f1770 <col:9> 'RouterThread *const' lvalue ->_thread 0x55c9ee9efc08
|         `-CXXThisExpr 0x55c9ee9f1760 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55c9ee9e5c70 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55c9ee9e5e30 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55c9ee9e5d20 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55c9ee9e5d98 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c9ee9f04e8 <col:50> 'bool' false
|-CXXMethodDecl 0x55c9ee9e5fb8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55c9ee9e5ef0 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55c9ee9e6100 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55c9ee9e6070 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55c9ee9e6248 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55c9ee9e61b8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55c9ee9e6390 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55c9ee9e6300 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55c9ee9e64d8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55c9ee9e6448 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55c9ee9e65a0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55c9ee9f1930 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55c9ee9f1918 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55c9ee9f18c0 <col:2, col:47> 'void'
|       |-MemberExpr 0x55c9ee9f17f0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55c9ee9e6100
|       | `-CXXThisExpr 0x55c9ee9f17e0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c9ee9f1900 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55c9ee9f18e8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55c9ee9f18a0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55c9ee9f1888 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55c9ee9f1858 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55c9ee7c1330 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55c9ee9e66e0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55c9ee9e6650 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55c9ee9e6828 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c9ee9e6798 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee9f1ab8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55c9ee9f1aa0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55c9ee9f1a48 <col:2, col:40> 'void'
|       |-MemberExpr 0x55c9ee9f1958 <col:2> '<bound member function type>' ->schedule_after 0x55c9ee9e66e0
|       | `-CXXThisExpr 0x55c9ee9f1948 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c9ee9f1a88 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55c9ee9f1a70 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55c9ee9f1a08 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55c9ee9f19d8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55c9ee9f1998 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee9e6798 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55c9ee9f19f0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55c9ee9f19b8 <col:38> 'int' 0
|-CXXMethodDecl 0x55c9ee9e6970 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c9ee9e68e0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee9f1d28 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55c9ee9f1d10 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55c9ee9f1cb8 <col:2, col:49> 'void'
|       |-MemberExpr 0x55c9ee9f1ae0 <col:2> '<bound member function type>' ->schedule_after 0x55c9ee9e66e0
|       | `-CXXThisExpr 0x55c9ee9f1ad0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c9ee9f1cf8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55c9ee9f1ce0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55c9ee9f1c60 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55c9ee9f1c48 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55c9ee9f1bb8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55c9ee94b348 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55c9ee9f1ca0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55c9ee9f1c88 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55c9ee9f1b98 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee9e68e0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee9e6ab8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55c9ee9e6a28 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55c9ee9f1f08 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55c9ee9f1ef0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55c9ee9f1e98 <col:2, col:38> 'void'
|       |-MemberExpr 0x55c9ee9f1d50 <col:2> '<bound member function type>' ->schedule_at_steady 0x55c9ee9e6100
|       | `-CXXThisExpr 0x55c9ee9f1d40 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c9ee9f1ed8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55c9ee9f1ec0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55c9ee9f1e60 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55c9ee9f1e48 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55c9ee9f1e28 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55c9ee974af8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55c9ee9f1df8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55c9ee9f1de0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55c9ee9f1d90 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55c9ee9e7918
|             |     `-CXXThisExpr 0x55c9ee9f1d80 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55c9ee9f1dc0 <col:33> 'const Timestamp' lvalue ParmVar 0x55c9ee9e6a28 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55c9ee9e6c00 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c9ee9e6b70 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee9f21e0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55c9ee9f21c8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55c9ee9f2170 <col:2, col:79> 'void'
|       |-MemberExpr 0x55c9ee9f1f30 <col:2> '<bound member function type>' ->schedule_at_steady 0x55c9ee9e6100
|       | `-CXXThisExpr 0x55c9ee9f1f20 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c9ee9f21b0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55c9ee9f2198 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55c9ee9f2130 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55c9ee9f2068 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55c9ee9f2050 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55c9ee9f1fe0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55c9ee9f1fb0 <col:31, col:41> '<bound member function type>' .sec 0x55c9ee7c2e28
|             | |     `-ImplicitCastExpr 0x55c9ee9f2000 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55c9ee9f1f80 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55c9ee9e7918
|             | |         `-CXXThisExpr 0x55c9ee9f1f70 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55c9ee9f2038 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55c9ee9f2018 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee9e6b70 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55c9ee9f20f8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55c9ee9f20c8 <col:60, col:70> '<bound member function type>' .subsec 0x55c9ee7c3520
|                 `-ImplicitCastExpr 0x55c9ee9f2118 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55c9ee9f2098 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55c9ee9e7918
|                     `-CXXThisExpr 0x55c9ee9f2088 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55c9ee9e6d48 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c9ee9e6cb8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c9ee9f2518 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55c9ee9f2500 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55c9ee9f24a8 <col:2, col:65> 'void'
|       |-MemberExpr 0x55c9ee9f2208 <col:2> '<bound member function type>' ->schedule_at_steady 0x55c9ee9e6100
|       | `-CXXThisExpr 0x55c9ee9f21f8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c9ee9f24e8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55c9ee9f24d0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55c9ee9f2470 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55c9ee9f2458 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55c9ee9f2438 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55c9ee974af8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55c9ee9f23d8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55c9ee9f23c0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55c9ee9f2248 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55c9ee9e7918
|             |     `-CXXThisExpr 0x55c9ee9f2238 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55c9ee9f2420 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55c9ee9f2408 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55c9ee9f2368 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55c9ee9f2350 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55c9ee9f2320 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55c9ee94b348 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55c9ee9f23a8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55c9ee9f2390 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55c9ee9f2300 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c9ee9e6cb8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9ee9e6e10 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55c9ee9e6ed0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55c9ee9f29e0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55c9ee9f2570 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55c9ee9f2540 <col:2> '<bound member function type>' ->unschedule 0x55c9ee9e6e10
|   |   `-CXXThisExpr 0x55c9ee9f2530 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55c9ee9f29c8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55c9ee9f2990 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55c9ee9f2978 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c9ee9f2628 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55c9ee995508 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55c9ee9f25a0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55c9ee9e7918
|       | `-CXXThisExpr 0x55c9ee9f2590 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c9ee9f2610 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55c9ee9f25e0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55c9ee9e6f90 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55c9ee9f2d38 <col:42, line:310:5>
|   |-IfStmt 0x55c9ee9f2b80 <line:306:2, line:307:23>
|   | |-CallExpr 0x55c9ee9f2ab0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55c9ee9f2a98 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55c9ee9f2a38 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55c9ee966630 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55c9ee9f2b70 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55c9ee9f2b58 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55c9ee9f2b28 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55c9ee9f2b10 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55c9ee9f2ae0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55c9ee9f2d28 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55c9ee9f2d10 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55c9ee9f2ce0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c9ee9f2cc8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55c9ee9f2c88 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55c9ee9f2c70 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55c9ee9f2c40 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55c9ee94b660 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55c9ee9f2cb0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55c9ee9f2c20 <col:30> 'int' 500
|-CXXMethodDecl 0x55c9ee9e70d0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c9ee9e7040 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9ee9e7178 <col:69> "" ""
|-CXXMethodDecl 0x55c9ee9e7288 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c9ee9e71f8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9ee9e7330 <col:70> "" ""
|-CXXMethodDecl 0x55c9ee9e7440 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c9ee9e73b0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9ee9e74e8 <col:71> "" ""
|-CXXMethodDecl 0x55c9ee9e75f8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c9ee9e7568 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9ee9e76a0 <col:72> "" ""
|-EnumDecl 0x55c9ee9e7710 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55c9ee9e7810 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55c9ee9e7860 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee9e77f0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55c9ee9e77d0 <col:25> 'int' 1
|-AccessSpecDecl 0x55c9ee9e7878 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55c9ee9e78b8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55c9ee9e7918 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55c9ee9e7968 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55c9ee9efa00 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55c9ee9f04f8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55c9ee9efac8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55c9ee9efb48 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55c9ee9efba8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55c9ee9efc08 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55c9ee9efd58 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55c9ee9efc68 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55c9ee9eff28 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55c9ee9efe10 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55c9ee9efe90 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55c9ee9f0100 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55c9ee9effe8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55c9ee9f0068 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55c9ee9f02d8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55c9ee9f01c0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55c9ee9f0240 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55c9ee9f04a8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee683bc0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55c9ee685e60 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55c9ee685f00 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55c9ee685f60 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55c9ee685fc0 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55c9ee686070 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee686380 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9ee686498 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55c9ee686540 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55c9ee6865a8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55c9ee686638 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55c9ee68a870 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c9ee68aca8 <col:12>
|-CXXConstructorDecl 0x55c9ee68a978 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c9ee68aa88 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55c9ee686540 'data' 'const char *'
| | `-ImplicitCastExpr 0x55c9ee68d960 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55c9ee68d930 <col:12> 'const char *const' lvalue .data 0x55c9ee686540
| |     `-DeclRefExpr 0x55c9ee68d910 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9ee68aa88 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55c9ee6865a8 'length' 'int'
| | `-ImplicitCastExpr 0x55c9ee68d9f0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55c9ee68d9c0 <col:12> 'const int' lvalue .length 0x55c9ee6865a8
| |     `-DeclRefExpr 0x55c9ee68d9a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9ee68aa88 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55c9ee686638 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55c9ee68da80 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55c9ee68da50 <col:12> 'String::memo_t *const' lvalue .memo 0x55c9ee686638
| |     `-DeclRefExpr 0x55c9ee68da30 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9ee68aa88 '' 'const String::rep_t &'
| `-CompoundStmt 0x55c9ee68dad8 <col:12>
|-CXXConstructorDecl 0x55c9ee68ab28 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c9ee68ab28
| `-ParmVarDecl 0x55c9ee68ac38 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55c9ee6930b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c9ee69ea18 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c9ee69eb28 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55c9ee69f040 <col:12>
|   |-BinaryOperator 0x55c9ee69ee58 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55c9ee69ee10 <col:12> 'const char *' lvalue ->data 0x55c9ee686540
|   | | `-CXXThisExpr 0x55c9ee69ee00 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55c9ee69ee40 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55c9ee69edd0 <col:12> 'const char *const' lvalue .data 0x55c9ee686540
|   |     `-DeclRefExpr 0x55c9ee69edb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9ee69eb28 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55c9ee69ef20 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55c9ee69eed8 <col:12> 'int' lvalue ->length 0x55c9ee6865a8
|   | | `-CXXThisExpr 0x55c9ee69eec8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55c9ee69ef08 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55c9ee69ee98 <col:12> 'const int' lvalue .length 0x55c9ee6865a8
|   |     `-DeclRefExpr 0x55c9ee69ee78 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9ee69eb28 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55c9ee69efe8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55c9ee69efa0 <col:12> 'String::memo_t *' lvalue ->memo 0x55c9ee686638
|   | | `-CXXThisExpr 0x55c9ee69ef90 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55c9ee69efd0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55c9ee69ef60 <col:12> 'String::memo_t *const' lvalue .memo 0x55c9ee686638
|   |     `-DeclRefExpr 0x55c9ee69ef40 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9ee69eb28 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55c9ee69f030 <col:12>
|     `-UnaryOperator 0x55c9ee69f018 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c9ee69f008 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55c9ee69eb98 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c9ee69eb98
  `-ParmVarDecl 0x55c9ee69eca8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9ee67a310 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c9ee67a428 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55c9ee67a4b8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55c9ee67a4f8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55c9ee43edc0 'const char *'
|   `-QualType 0x55c9ee43e311 'const char' const
|     `-BuiltinType 0x55c9ee43e310 'char'
|-TypedefDecl 0x55c9ee67a580 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55c9ee67a550 'String::const_iterator' sugar
|   |-Typedef 0x55c9ee67a4f8 'const_iterator'
|   `-PointerType 0x55c9ee43edc0 'const char *'
|     `-QualType 0x55c9ee43e311 'const char' const
|       `-BuiltinType 0x55c9ee43e310 'char'
|-TypedefDecl 0x55c9ee67a720 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55c9ee67a690 'int (String::*)() const'
|   |-RecordType 0x55c9ee67a3a0 'String'
|   | `-CXXRecord 0x55c9ee67a310 'String'
|   `-ParenType 0x55c9ee67a630 'int () const' sugar
|     `-FunctionProtoType 0x55c9ee67a600 'int () const' const cdecl
|       `-BuiltinType 0x55c9ee43e370 'int'
|-TypedefDecl 0x55c9ee67a788 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55c9ee595480 'int64_t' sugar
|   |-Typedef 0x55c9ee4a72d0 'int64_t'
|   `-TypedefType 0x55c9ee4804d0 '__int64_t' sugar
|     |-Typedef 0x55c9ee4800a8 '__int64_t'
|     `-BuiltinType 0x55c9ee43e390 'long'
|-TypedefDecl 0x55c9ee67a7f0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55c9ee5953a0 'uint64_t' sugar
|   |-Typedef 0x55c9ee4a7470 'uint64_t'
|   `-TypedefType 0x55c9ee480560 '__uint64_t' sugar
|     |-Typedef 0x55c9ee480118 '__uint64_t'
|     `-BuiltinType 0x55c9ee43e430 'unsigned long'
|-TypedefDecl 0x55c9ee67a880 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55c9ee67a850 'String::intmax_t' sugar
|   |-Typedef 0x55c9ee67a788 'intmax_t'
|   `-TypedefType 0x55c9ee595480 'int64_t' sugar
|     |-Typedef 0x55c9ee4a72d0 'int64_t'
|     `-TypedefType 0x55c9ee4804d0 '__int64_t' sugar
|       |-Typedef 0x55c9ee4800a8 '__int64_t'
|       `-BuiltinType 0x55c9ee43e390 'long'
|-TypedefDecl 0x55c9ee67a910 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55c9ee67a8e0 'String::uintmax_t' sugar
|   |-Typedef 0x55c9ee67a7f0 'uintmax_t'
|   `-TypedefType 0x55c9ee5953a0 'uint64_t' sugar
|     |-Typedef 0x55c9ee4a7470 'uint64_t'
|     `-TypedefType 0x55c9ee480560 '__uint64_t' sugar
|       |-Typedef 0x55c9ee480118 '__uint64_t'
|       `-BuiltinType 0x55c9ee43e430 'unsigned long'
|-CXXConstructorDecl 0x55c9ee67a9d0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55c9ee67ab78 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55c9ee67aab8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55c9ee67ad28 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55c9ee67ac68 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55c9ee67ae80 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55c9ee67adf0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55c9ee67b100 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55c9ee67af48 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55c9ee67afc8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55c9ee67b358 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55c9ee67b200 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55c9ee67b280 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55c9ee67b578 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55c9ee67b428 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55c9ee67b4a8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55c9ee67b798 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55c9ee67b648 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55c9ee67b6c8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55c9ee67b928 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55c9ee67b860 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55c9ee67baa8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55c9ee67b9e8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55c9ee67bc38 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55c9ee67bb70 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55c9ee67bd90 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55c9ee67bd00 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55c9ee67bf18 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55c9ee67be58 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55c9ee67c0a8 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55c9ee67bfe0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55c9ee67c238 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55c9ee67c170 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55c9ee67c3c8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55c9ee67c300 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55c9ee67c558 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55c9ee67c490 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55c9ee67c6e8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55c9ee67c620 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55c9ee67c7e0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55c9ee67c908 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55c9ee67ca88 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55c9ee67c9c0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55c9ee67cbd8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55c9ee67cb48 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55c9ee67cc80 <col:63> "" ""
|-CXXMethodDecl 0x55c9ee67cdc8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55c9ee67cd08 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55c9ee67cfd8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55c9ee67ce88 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55c9ee67cf08 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55c9ee67d678 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55c9ee67d520 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55c9ee67d5a0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55c9ee67d958 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55c9ee67d738 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55c9ee67d7b8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55c9ee68a340 <col:55> 'int' 10
| `-ParmVarDecl 0x55c9ee67d830 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c9ee68a360 <col:76> 'bool' true
|-CXXMethodDecl 0x55c9ee67dc38 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55c9ee67da20 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55c9ee67daa0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55c9ee68a370 <col:56> 'int' 10
| `-ParmVarDecl 0x55c9ee67db18 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c9ee68a390 <col:77> 'bool' true
|-CXXMethodDecl 0x55c9ee67dd40 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55c9ee67de08 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55c9ee67ded0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55c9ee67df70 <col:20>
| `-OptimizeNoneAttr 0x55c9ee67dfc8 <col:30>
|-CXXConversionDecl 0x55c9ee67e0b8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55c9ee67e188 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55c9ee67e248 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55c9ee67e338 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55c9ee67e3f8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55c9ee67e578 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55c9ee67e4b0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55c9ee67e6c8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55c9ee67e638 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55c9ee67e7b8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55c9ee67e878 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55c9ee67eac8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55c9ee67e930 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55c9ee67e9b0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55c9ee67ed28 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55c9ee67eb90 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55c9ee67ec10 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55c9ee67edf8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9ee67f008 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55c9ee67eeb0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55c9ee67ef30 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55c9ee67f228 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55c9ee67f0d0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55c9ee67f150 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55c9ee67f3b8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55c9ee67f2f0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55c9ee67fa00 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55c9ee67fb78 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55c9ee67fab0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55c9ee67fd88 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55c9ee67fc38 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55c9ee67fcb8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55c9ee67ffa0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55c9ee67fe48 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55c9ee67fec0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55c9ee680130 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55c9ee680060 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55c9ee680350 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55c9ee6801f0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55c9ee680270 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55c9ee6804a0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55c9ee680410 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55c9ee680678 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55c9ee680560 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55c9ee6805e0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55c9ee6807c8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55c9ee680738 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55c9ee6809e0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55c9ee680880 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55c9ee680900 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55c9ee68a3a0 <col:39> 'int' 0
|-CXXMethodDecl 0x55c9ee680c00 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55c9ee680aa0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55c9ee680b20 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55c9ee68a3c0 <col:48> 'int' 0
|-CXXMethodDecl 0x55c9ee680de0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55c9ee680cc0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55c9ee680d40 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55c9ee68a3e0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55c9ee680eb0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55c9ee680f70 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55c9ee681030 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55c9ee6810f0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55c9ee6811b0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55c9ee681358 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55c9ee681260 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55c9ee6814d8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55c9ee681410 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55c9ee681658 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55c9ee681598 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55c9ee6817d8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55c9ee681710 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55c9ee681920 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55c9ee681890 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55c9ee681dd0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55c9ee681d40 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55c9ee681fa8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55c9ee681e90 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55c9ee681f10 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55c9ee682188 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55c9ee682070 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55c9ee6820f0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55c9ee6822d8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55c9ee682248 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55c9ee6824e8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55c9ee682398 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55c9ee682418 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55c9ee682648 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55c9ee6825b0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55c9ee6827a0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55c9ee682708 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55c9ee682848 <col:57> "" ""
|-CXXMethodDecl 0x55c9ee682958 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55c9ee6828c8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55c9ee682aa8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55c9ee682a18 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55c9ee682c28 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55c9ee682b60 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55c9ee682cf0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55c9ee682db0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55c9ee682e70 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55c9ee682f10 <col:49> "" ""
|-CXXMethodDecl 0x55c9ee682fa0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55c9ee683060 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55c9ee683150 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55c9ee683218 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55c9ee6832d8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55c9ee683398 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55c9ee683490 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55c9ee683558 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55c9ee683620 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55c9ee6837f8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55c9ee6836d8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55c9ee683758 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55c9ee683a20 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55c9ee6838c0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55c9ee683940 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55c9ee683b30 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55c9ee683b98 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55c9ee683bc0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c9ee685e60 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55c9ee685f00 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55c9ee685f60 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55c9ee685fc0 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55c9ee686070 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55c9ee6860d8 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55c9ee686318 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55c9ee686368 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee6862f8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55c9ee686208 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55c9ee6861b0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55c9ee6861f0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55c9ee6861d0 <col:32> 'int' 8
|-CXXRecordDecl 0x55c9ee686380 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c9ee686498 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55c9ee686540 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55c9ee6865a8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55c9ee686638 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55c9ee68a870 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c9ee68aca8 <col:12>
| |-CXXConstructorDecl 0x55c9ee68a978 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c9ee68aa88 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55c9ee686540 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55c9ee68d960 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55c9ee68d930 <col:12> 'const char *const' lvalue .data 0x55c9ee686540
| | |     `-DeclRefExpr 0x55c9ee68d910 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9ee68aa88 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55c9ee6865a8 'length' 'int'
| | | `-ImplicitCastExpr 0x55c9ee68d9f0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55c9ee68d9c0 <col:12> 'const int' lvalue .length 0x55c9ee6865a8
| | |     `-DeclRefExpr 0x55c9ee68d9a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9ee68aa88 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55c9ee686638 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55c9ee68da80 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55c9ee68da50 <col:12> 'String::memo_t *const' lvalue .memo 0x55c9ee686638
| | |     `-DeclRefExpr 0x55c9ee68da30 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9ee68aa88 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55c9ee68dad8 <col:12>
| |-CXXConstructorDecl 0x55c9ee68ab28 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c9ee68ab28
| | `-ParmVarDecl 0x55c9ee68ac38 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55c9ee6930b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55c9ee69ea18 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c9ee69eb28 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55c9ee69f040 <col:12>
| |   |-BinaryOperator 0x55c9ee69ee58 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55c9ee69ee10 <col:12> 'const char *' lvalue ->data 0x55c9ee686540
| |   | | `-CXXThisExpr 0x55c9ee69ee00 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55c9ee69ee40 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55c9ee69edd0 <col:12> 'const char *const' lvalue .data 0x55c9ee686540
| |   |     `-DeclRefExpr 0x55c9ee69edb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9ee69eb28 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55c9ee69ef20 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55c9ee69eed8 <col:12> 'int' lvalue ->length 0x55c9ee6865a8
| |   | | `-CXXThisExpr 0x55c9ee69eec8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55c9ee69ef08 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55c9ee69ee98 <col:12> 'const int' lvalue .length 0x55c9ee6865a8
| |   |     `-DeclRefExpr 0x55c9ee69ee78 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9ee69eb28 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55c9ee69efe8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55c9ee69efa0 <col:12> 'String::memo_t *' lvalue ->memo 0x55c9ee686638
| |   | | `-CXXThisExpr 0x55c9ee69ef90 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55c9ee69efd0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55c9ee69ef60 <col:12> 'String::memo_t *const' lvalue .memo 0x55c9ee686638
| |   |     `-DeclRefExpr 0x55c9ee69ef40 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9ee69eb28 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55c9ee69f030 <col:12>
| |     `-UnaryOperator 0x55c9ee69f018 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55c9ee69f008 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55c9ee69eb98 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c9ee69eb98
|   `-ParmVarDecl 0x55c9ee69eca8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55c9ee6866b0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55c9ee6868f8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55c9ee686718 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55c9ee686798 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55c9ee686810 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55c9ee68a830 <col:79, line:261:5>
|   |-BinaryOperator 0x55c9ee68a4a8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55c9ee68a440 <col:2, col:5> 'const char *' lvalue .data 0x55c9ee686540
|   | | `-MemberExpr 0x55c9ee68a410 <col:2> 'String::rep_t' lvalue ->_r 0x55c9ee6866b0
|   | |   `-CXXThisExpr 0x55c9ee68a400 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55c9ee68a490 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9ee68a470 <col:12> 'const char *' lvalue ParmVar 0x55c9ee686718 'data' 'const char *'
|   |-BinaryOperator 0x55c9ee68a570 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55c9ee68a508 <col:2, col:5> 'int' lvalue .length 0x55c9ee6865a8
|   | | `-MemberExpr 0x55c9ee68a4d8 <col:2> 'String::rep_t' lvalue ->_r 0x55c9ee6866b0
|   | |   `-CXXThisExpr 0x55c9ee68a4c8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55c9ee68a558 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9ee68a538 <col:14> 'int' lvalue ParmVar 0x55c9ee686798 'length' 'int'
|   `-IfStmt 0x55c9ee68a818 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55c9ee68a690 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55c9ee68a678 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55c9ee68a658 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55c9ee68a638 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55c9ee68a5d0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55c9ee686638
|     |       | `-MemberExpr 0x55c9ee68a5a0 <col:7> 'String::rep_t' lvalue ->_r 0x55c9ee6866b0
|     |       |   `-CXXThisExpr 0x55c9ee68a590 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55c9ee68a620 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55c9ee68a600 <col:17> 'String::memo_t *' lvalue ParmVar 0x55c9ee686810 'memo' 'String::memo_t *'
|     `-CallExpr 0x55c9ee68a7f0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55c9ee68a7d8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c9ee68a6e0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55c9ee660f68 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55c9ee68a748 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55c9ee685f00
|         `-ImplicitCastExpr 0x55c9ee68a730 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55c9ee68a710 <col:27> 'String::memo_t *' lvalue ParmVar 0x55c9ee686810 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55c9ee686ba8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55c9ee6869c8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55c9ee686a48 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55c9ee686ac0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55c9ee6866b0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55c9ee68acb8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c9ee68ae48 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55c9ee68adb0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55c9ee68ad20 <col:2> '<bound member function type>' ->assign_memo 0x55c9ee6868f8
|     | `-ImplicitCastExpr 0x55c9ee68ade8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55c9ee68ad10 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55c9ee68ae00 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9ee68ad50 <col:14> 'const char *' lvalue ParmVar 0x55c9ee6869c8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55c9ee68ae18 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9ee68ad70 <col:20> 'int' lvalue ParmVar 0x55c9ee686a48 'length' 'int'
|     `-ImplicitCastExpr 0x55c9ee68ae30 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55c9ee68ad90 <col:28> 'String::memo_t *' lvalue ParmVar 0x55c9ee686ac0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55c9ee686d38 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55c9ee686c78 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55c9ee68b0a0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55c9ee68b020 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55c9ee68ae70 <col:2> '<bound member function type>' ->assign_memo 0x55c9ee6868f8
|     | `-CXXThisExpr 0x55c9ee68ae60 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55c9ee68b058 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55c9ee68aef0 <col:14, col:19> 'const char *' lvalue .data 0x55c9ee686540
|     |   `-MemberExpr 0x55c9ee68aec0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55c9ee6866b0
|     |     `-DeclRefExpr 0x55c9ee68aea0 <col:14> 'const String' lvalue ParmVar 0x55c9ee686c78 'x' 'const String &'
|     |-ImplicitCastExpr 0x55c9ee68b070 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55c9ee68af70 <col:25, col:30> 'int' lvalue .length 0x55c9ee6865a8
|     |   `-MemberExpr 0x55c9ee68af40 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55c9ee6866b0
|     |     `-DeclRefExpr 0x55c9ee68af20 <col:25> 'const String' lvalue ParmVar 0x55c9ee686c78 'x' 'const String &'
|     `-ImplicitCastExpr 0x55c9ee68b088 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55c9ee68aff0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55c9ee686638
|         `-MemberExpr 0x55c9ee68afc0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55c9ee6866b0
|           `-DeclRefExpr 0x55c9ee68afa0 <col:38> 'const String' lvalue ParmVar 0x55c9ee686c78 'x' 'const String &'
|-CXXMethodDecl 0x55c9ee686e00 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55c9ee68c168 <col:31, line:278:5>
|   `-IfStmt 0x55c9ee68c150 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55c9ee68b140 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55c9ee68b128 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55c9ee68b0f8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55c9ee686638
|     |     `-MemberExpr 0x55c9ee68b0c8 <col:6> 'String::rep_t' lvalue ->_r 0x55c9ee6866b0
|     |       `-CXXThisExpr 0x55c9ee68b0b8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55c9ee68c128 <col:15, line:277:2>
|       |-ParenExpr 0x55c9ee68b6e0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55c9ee68b6b0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55c9ee68b250 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55c9ee68b238 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55c9ee68b220 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55c9ee68b1e0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55c9ee685f00
|       |   |       `-ImplicitCastExpr 0x55c9ee68b1c8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55c9ee68b198 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55c9ee686638
|       |   |           `-MemberExpr 0x55c9ee68b168 <col:27> 'String::rep_t' lvalue ->_r 0x55c9ee6866b0
|       |   |             `-CXXThisExpr 0x55c9ee68b158 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55c9ee68b2b0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55c9ee68b290 <col:54> 'int' 0
|       |   `-CallExpr 0x55c9ee68b610 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55c9ee68b5f8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55c9ee68b580 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9ee4dbce0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55c9ee68b650 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55c9ee68b398 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55c9ee68b668 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55c9ee68b448 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55c9ee68b680 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55c9ee68b480 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55c9ee68b698 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55c9ee68b568 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55c9ee68b550 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55c9ee68b518 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55c9ee68c048 <line:274:6, line:275:22>
|       | |-CallExpr 0x55c9ee68b8f0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55c9ee68b8d8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55c9ee68b850 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55c9ee666300 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55c9ee68b820 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55c9ee685f00
|       | |   `-ImplicitCastExpr 0x55c9ee68b808 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55c9ee68b7d8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55c9ee686638
|       | |       `-MemberExpr 0x55c9ee68b7a8 <col:40> 'String::rep_t' lvalue ->_r 0x55c9ee6866b0
|       | |         `-CXXThisExpr 0x55c9ee68b798 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55c9ee68b9f0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55c9ee68b9d8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55c9ee68b918 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55c9ee687ad8 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55c9ee68c030 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55c9ee68b978 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55c9ee686638
|       |       `-MemberExpr 0x55c9ee68b948 <col:15> 'String::rep_t' lvalue ->_r 0x55c9ee6866b0
|       |         `-CXXThisExpr 0x55c9ee68b938 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55c9ee68c108 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55c9ee68c0a0 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55c9ee686638
|         | `-MemberExpr 0x55c9ee68c070 <col:6> 'String::rep_t' lvalue ->_r 0x55c9ee6866b0
|         |   `-CXXThisExpr 0x55c9ee68c060 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55c9ee68c0f0 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55c9ee68c0d0 <col:16> 'int' 0
|-CXXMethodDecl 0x55c9ee687098 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55c9ee686eb8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55c9ee686f38 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55c9ee686fb0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55c9ee687170 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55c9ee6873c0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55c9ee687228 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55c9ee6872a8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55c9ee687320 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55c9ee6875a8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55c9ee687490 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55c9ee687510 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55c9ee6876a8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55c9ee68c260 <col:41, line:286:5>
|   `-ReturnStmt 0x55c9ee68c250 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55c9ee68c220 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55c9ee68c1e8 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55c9ee68c1d0 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55c9ee68c1b0 <col:46> 'int' 1
|-CXXMethodDecl 0x55c9ee687948 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55c9ee687760 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55c9ee6877e0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55c9ee687860 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55c9ee687ad8 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55c9ee687a10 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55c9ee687ba8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55c9ee687d78 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55c9ee687c60 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55c9ee687ce0 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55c9ee689a20 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55c9ee689b68 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55c9ee689ca8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55c9ee689d20 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55c9ee689d98 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55c9ee689e00 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55c9ee689f00 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55c9ee689f50 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9ee689ee0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55c9ee689ec0 <col:22> 'int' 14
|-CXXMethodDecl 0x55c9ee68a168 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55c9ee689f80 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55c9ee68a000 <col:38> col:41 'int'
| `-ParmVarDecl 0x55c9ee68a080 <col:43> col:46 'int'
|-FriendDecl 0x55c9ee68a270 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55c9ee68a300 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c9ee9fb938 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55c9eeaa5578 <line:167:18>
|-CXXRecordDecl 0x55c9eeaa5638 prev 0x55c9ee9fb938 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55c9eeaa5748 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9eea70f58 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55c9eea71078 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x55c9eea71108 <col:18, col:24> col:18 public
|-EnumDecl 0x55c9eea71130 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x55c9eea73520 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x55c9eea73610 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9eea71210 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x55c9eea711f0 <col:35> 'int' 0
| |-EnumConstantDecl 0x55c9eea73570 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x55c9eea735c0 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x55c9eea73858 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x55c9eea737f0 'void (*)(void *, Notifier *)'
|   `-ParenType 0x55c9eea73790 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x55c9eea73750 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x55c9ee43e2d0 'void'
|       |-PointerType 0x55c9ee43ead0 'void *'
|       | `-BuiltinType 0x55c9ee43e2d0 'void'
|       `-PointerType 0x55c9eea736b0 'Notifier *'
|         `-RecordType 0x55c9eea70ff0 'Notifier'
|           `-CXXRecord 0x55c9eea70f58 'Notifier'
|-CXXConstructorDecl 0x55c9eea73998 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x55c9eea738c0 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55c9eea77928 <col:35> 'Notifier::SearchOp' EnumConstant 0x55c9eea73520 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x55c9eea73ba8 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x55c9eea73a58 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x55c9eea73ad0 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x55c9eea77948 <col:65> 'Notifier::SearchOp' EnumConstant 0x55c9eea73520 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x55c9eea73ca8 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x55c9eea73dd8 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55c9eea77a08 <col:37, line:85:5>
|   `-ReturnStmt 0x55c9eea779f8 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x55c9eea779d8 <col:9, col:29> 'bool'
|       `-MemberExpr 0x55c9eea779a8 <col:9, col:17> '<bound member function type>' .initialized 0x55c9eea6f1f0
|         `-MemberExpr 0x55c9eea77978 <col:9> 'const NotifierSignal' lvalue ->_signal 0x55c9eea77348
|           `-CXXThisExpr 0x55c9eea77968 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x55c9eea73fe0 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x55c9eea73e90 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x55c9eea73f08 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x55c9eea740d8 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x55c9eea741c8 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x55c9eea74288 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55c9eea743c8 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x55c9eea74338 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x55c9eea74490 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x55c9eea74550 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x55c9eea747c0 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x55c9eea74620 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55c9eea746a0 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x55c9eea74a18 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x55c9eea74880 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55c9eea74900 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x55c9eea74ba0 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x55c9eea74ad8 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x55c9eea74ce8 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x55c9eea74c58 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x55c9eea74e70 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x55c9eea74da0 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x55c9eea74fe8 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x55c9eea74f28 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x55c9eea750b0 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x55c9eea75138 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x55c9eea75308 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x55c9eea751b0 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x55c9eea75230 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x55c9eea755a8 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x55c9eea753c8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55c9eea75448 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x55c9eea754c0 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x55c9eea75848 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x55c9eea75670 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55c9eea756f0 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x55c9eea75768 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x55c9eea75bc8 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x55c9eea75910 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55c9eea75990 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x55c9eea75a08 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55c9eea75a88 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x55c9eea75db0 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x55c9eea75c98 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x55c9eea75d18 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x55c9eea76008 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x55c9eea75e70 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55c9eea75ef0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x55c9eea75f68 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x55c9eea76268 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x55c9eea760d0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55c9eea76150 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x55c9eea761c8 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x55c9eea76550 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x55c9eea76330 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x55c9eea763b0 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x55c9eea76428 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x55c9eea764a8 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x55c9eea76808 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x55c9eea76620 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55c9eea766a0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x55c9eea76720 <col:78> col:81 'int'
| `-DeprecatedAttr 0x55c9eea768c0 <col:98> "" ""
|-CXXMethodDecl 0x55c9eea76ba8 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x55c9eea76940 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55c9eea769c0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x55c9eea76a40 <col:78> col:81 'int'
| |-ParmVarDecl 0x55c9eea76ab8 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x55c9eea76c68 <col:110> "" ""
|-CXXMethodDecl 0x55c9eea76e88 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x55c9eea76ce8 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55c9eea76d68 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x55c9eea76de8 <col:79> col:82 'int'
| `-DeprecatedAttr 0x55c9eea76f40 <col:99> "" ""
|-CXXMethodDecl 0x55c9eea771e0 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x55c9eea76fc0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55c9eea77040 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x55c9eea770c0 <col:79> col:82 'int'
| |-ParmVarDecl 0x55c9eea77138 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x55c9eea772a0 <col:111> "" ""
|-AccessSpecDecl 0x55c9eea77310 <line:123:3, col:10> col:3 private
|-FieldDecl 0x55c9eea77348 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x55c9eea773a8 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x55c9eea77520 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x55c9eea77410 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x55c9eea77488 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x55c9eea775f8 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x55c9eea775f8
| `-ParmVarDecl 0x55c9eea77708 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x55c9eea777a8 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x55c9eea777a8
  `-ParmVarDecl 0x55c9eea778b8 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>
