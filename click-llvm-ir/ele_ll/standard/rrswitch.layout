
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555d86f56b28 prev 0x555d86f4e2c8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x555d86f56c20 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x555d86f56cb0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x555d86f56d28 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x555d86f56de8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x555d86f56eb0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x555d86f57028 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x555d86f56f60 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x555d86f570d0 <col:24>
| `-OptimizeNoneAttr 0x555d86f57128 <col:34>
|-CXXMethodDecl 0x555d86f57170 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x555d86f57428 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x555d86f57220 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x555d86f57298 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x555d86f57318 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x555d86f574e0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x555d86f57518 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x555d86f57580 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x555d86f57608 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x555d86f57928 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x555d86f576c0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x555d86f57738 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x555d86f577b0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x555d86f57830 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x555d86f57a40 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x555d86f5f3b8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x555d86f5f3b8
| `-ParmVarDecl 0x555d86f5f4c8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x555d86f5f568 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x555d86f5f568
| `-ParmVarDecl 0x555d86f5f678 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x555d86f63838 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555d86f49b40 prev 0x555d86f498c0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x555d86f49c38 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x555d86f49cc8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x555d86f49d28 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x555d86f49e18 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x555d86f49f18 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x555d86f4a0e8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x555d86f49f98 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x555d86f4a010 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x555d86f4a278 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x555d86f4a1b0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x555d86f4a320 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x555d86f4a458 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x555d86f4a390 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x555d86f4a5f8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x555d86f4a538 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x555d86f4a798 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x555d86f4a6d8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x555d86f4a840 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x555d86f4a940 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x555d86f4aa20 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f4a920 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x555d86f4a900 <col:26> 'int' 1
| `-EnumConstantDecl 0x555d86f4a9d0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x555d86f4aa38 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555d86f4a9b0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x555d86f4a990 <col:44> 'int' 2
|-CXXMethodDecl 0x555d86f4ab80 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x555d86f4aa68 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x555d86f4aae8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x555d86f4acd8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x555d86f4ac48 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x555d86f4af18 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x555d86f4ad98 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x555d86f4ae10 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x555d86f4afc8 <col:20>
| `-OptimizeNoneAttr 0x555d86f4b020 <col:30>
|-CXXMethodDecl 0x555d86f4b128 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x555d86f4b060 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x555d86f4b1d0 <col:20>
| `-OptimizeNoneAttr 0x555d86f4b228 <col:30>
|-CXXMethodDecl 0x555d86f4b278 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x555d86f4b340 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x555d86f4b458 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x555d86f4b4e0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x555d86f4b568 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x555d86f4b5f0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x555d86f4b678 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x555d86f4b708 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x555d86f4b7c8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x555d86f4b850 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x555d86f4b8d8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x555d86f4b960 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x555d86f4b9e8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x555d86f4ba70 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x555d86f4bb00 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x555d86f4bbc0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x555d86f4bc50 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x555d86f4bda0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x555d86f4bd08 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x555d86f4bf30 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x555d86f4be60 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x555d86f4c1e0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x555d86f4bfe8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x555d86f4c068 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x555d86f4c0e8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x555d86f4c298 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x555d86f4c3a0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x555d86f4c630 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f4c380 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x555d86f4c360 <col:33> 'int' 0
| |-EnumConstantDecl 0x555d86f4c430 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x555d86f4c648 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f4c410 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x555d86f4c3f0 <col:32> 'int' 20
| |-EnumConstantDecl 0x555d86f4c4c0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x555d86f4c660 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f4c4a0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x555d86f4c480 <col:38> 'int' 90
| |-EnumConstantDecl 0x555d86f4c550 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x555d86f4c678 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f4c530 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x555d86f4c510 <col:35> 'int' 100
| `-EnumConstantDecl 0x555d86f4c5e0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x555d86f4c690 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555d86f4c5c0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x555d86f4c5a0 <col:32> 'int' 2000
|-CXXMethodDecl 0x555d86f4c6d0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x555d86f4cb10 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x555d86f4c980 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x555d86f4c9f8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x555d86f4cbe0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x555d86f4cd60 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x555d86f4cc90 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x555d86f4cf68 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x555d86f4ce18 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x555d86f4ce90 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x555d86f4d068 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x555d86f4d108 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x555d86f4d1d0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x555d86f4d260 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x555d86f4d490 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f4d240 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x555d86f4d220 <col:36> 'int' EnumConstant 0x555d86f4d1d0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x555d86f4d2b0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x555d86f4d300 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x555d86f4d350 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x555d86f4d3a0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x555d86f4d3f0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x555d86f4d440 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x555d86f4d578 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x555d86f4d4b8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x555d86f4d640 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x555d86f4d700 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x555d86f4d7c0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x555d86f4d880 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x555d86f4d998 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x555d86f4da60 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x555d86f4dbe0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x555d86f4db10 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x555d86f4dd08 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x555d86f4df08 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x555d86f4ddb8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x555d86f4de38 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x555d86f5b858 <col:54, line:127:5>
|   |-ParenExpr 0x555d86f5b708 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x555d86f5b6d8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f5b3c8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x555d86f5b3a0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x555d86f5b388 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x555d86f5b370 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x555d86f5b340 <col:31> 'Router *' lvalue ->_router 0x555d86f59220
|   |   |         `-CXXThisExpr 0x555d86f5b330 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x555d86f5b428 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f5b408 <col:48> 'int' 0
|   |   `-CallExpr 0x555d86f5b638 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x555d86f5b620 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f5b600 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f5b678 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f5b498 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x555d86f5b690 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f5b4b8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x555d86f5b6a8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f5b4f0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x555d86f5b6c0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f5b5e8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f5b5d0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f5b588 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x555d86f5b7a0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x555d86f5b738 <col:9> 'Router *' lvalue ->_router 0x555d86f59220
|   | | `-CXXThisExpr 0x555d86f5b728 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x555d86f5b788 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x555d86f5b768 <col:19> 'Router *' lvalue ParmVar 0x555d86f4ddb8 'r' 'Router *'
|   `-BinaryOperator 0x555d86f5b838 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x555d86f5b7d0 <col:9> 'int' lvalue ->_eindex 0x555d86f59288
|     | `-CXXThisExpr 0x555d86f5b7c0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x555d86f5b820 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x555d86f5b800 <col:19> 'int' lvalue ParmVar 0x555d86f4de38 'eindex' 'int'
|-CXXMethodDecl 0x555d86f4e090 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x555d86f4dfc8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x555d86f4e160 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x555d86f4e228 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x555d86f4e2c8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x555d86f4e518 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x555d86f4e390 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x555d86f4e410 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x555d86f4e5c8 <col:20>
| `-OptimizeNoneAttr 0x555d86f4e620 <col:30>
|-CXXMethodDecl 0x555d86f4e728 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x555d86f4e660 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x555d86f4e7d0 <col:20>
| `-OptimizeNoneAttr 0x555d86f4e828 <col:30>
|-CXXMethodDecl 0x555d86f4e8f8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x555d86f4e868 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x555d86f4e9a0 <col:20>
| `-OptimizeNoneAttr 0x555d86f4e9f8 <col:30>
|-CXXMethodDecl 0x555d86f4eb88 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x555d86f4ea30 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x555d86f4eab0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x555d86f4ed18 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x555d86f4ec50 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x555d86f4ee68 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x555d86f4edd8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x555d86f4efb8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x555d86f4ef28 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x555d86f4f108 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x555d86f4f078 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x555d86f4f3c8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x555d86f4f1c0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x555d86f4f240 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x555d86f4f2e8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x555d86f4f4a0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x555d86f4f560 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x555d86f4f830 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x555d86f4f6e0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x555d86f4f758 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x555d86f4f958 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x555d86f4fb30 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x555d86f4fa10 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x555d86f4fa90 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x555d86f4fd18 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x555d86f4fbf8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x555d86f4fc78 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x555d86f50088 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x555d86f4fdd8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x555d86f4fe50 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x555d86f4fed0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x555d86f5ae40 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x555d86f5ae20 <col:106> 'int' 0
| `-ParmVarDecl 0x555d86f4ff48 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555d86f5ae78 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555d86f5ae58 <col:126> 'int' 0
|-CXXMethodDecl 0x555d86f50428 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x555d86f50158 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x555d86f501f0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x555d86f50270 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x555d86f502e8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555d86f5aeb0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555d86f5ae90 <col:114> 'int' 0
|-CXXMethodDecl 0x555d86f507b8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x555d86f50500 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x555d86f50578 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x555d86f505f8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x555d86f5aec8 <col:96> 'int' 0
| `-ParmVarDecl 0x555d86f50670 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555d86f5af08 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555d86f5aee8 <col:116> 'int' 0
|-CXXMethodDecl 0x555d86f50b38 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x555d86f50888 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x555d86f50900 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x555d86f50980 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x555d86f5af40 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x555d86f5af20 <col:109> 'int' 0
| `-ParmVarDecl 0x555d86f509f8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555d86f5af78 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555d86f5af58 <col:129> 'int' 0
|-CXXMethodDecl 0x555d86f50eb8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x555d86f50c08 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x555d86f50c80 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x555d86f50d00 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x555d86f50d78 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555d86f5afb0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555d86f5af90 <col:117> 'int' 0
|-CXXMethodDecl 0x555d86f51248 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x555d86f50f90 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f51008 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x555d86f51088 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x555d86f5afc8 <col:99> 'int' 0
| `-ParmVarDecl 0x555d86f51100 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x555d86f5b008 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x555d86f5afe8 <col:119> 'int' 0
|-CXXMethodDecl 0x555d86f51668 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x555d86f51318 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x555d86f51398 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x555d86f51410 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x555d86f51490 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x555d86f5b040 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x555d86f5b020 <col:108> 'int' 0
| `-ParmVarDecl 0x555d86f51510 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x555d86f5b078 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x555d86f5b058 <col:141> 'int' 0
|-CXXMethodDecl 0x555d86f51a88 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x555d86f51740 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x555d86f517c0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x555d86f51838 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x555d86f518b8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x555d86f51938 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x555d86f5b090 <col:121> 'int' 0
|-CXXMethodDecl 0x555d86f51eb8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x555d86f51b68 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x555d86f51be8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x555d86f51c60 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x555d86f51ce0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x555d86f5b0b0 <col:98> 'int' 0
| `-ParmVarDecl 0x555d86f51d60 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x555d86f5b0d0 <col:123> 'int' 0
|-CXXMethodDecl 0x555d86f52180 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x555d86f51f90 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x555d86f52010 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x555d86f52090 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x555d86f5b0f0 <col:80> 'int' 0
|-EnumDecl 0x555d86f52238 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x555d86f52340 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x555d86f525d0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f52320 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x555d86f52300 <col:42> 'int' 1
| |-EnumConstantDecl 0x555d86f523d0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x555d86f525e8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f523b0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x555d86f52390 <col:40> 'int' 2
| |-EnumConstantDecl 0x555d86f52460 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x555d86f52600 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f52440 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x555d86f52420 <col:44> 'int' 4
| |-EnumConstantDecl 0x555d86f524f0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x555d86f52618 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f524d0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x555d86f524b0 <col:36> 'int' 7
| `-EnumConstantDecl 0x555d86f52580 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x555d86f52630 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555d86f52560 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x555d86f52540 <col:34> 'int' 6
|-CXXMethodDecl 0x555d86f528e8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x555d86f52658 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x555d86f526f8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x555d86f52778 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x555d86f527f0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x555d86f5b1a8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x555d86f5b190 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x555d86f5b178 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x555d86f5b158 <col:98, col:105> 'String' (CXXTemporary 0x555d86f5b158)
|           `-CXXTemporaryObjectExpr 0x555d86f5b120 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x555d86f52b88 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x555d86f529b8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x555d86f52a30 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x555d86f52aa8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x555d86f5b258 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x555d86f5b240 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x555d86f5b228 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x555d86f5b208 <col:94, col:101> 'String' (CXXTemporary 0x555d86f5b208)
| |         `-CXXTemporaryObjectExpr 0x555d86f5b1d0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x555d86f5ba40 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x555d86f5b9b8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x555d86f5b988 <col:9> '<bound member function type>' ->add_task_handlers 0x555d86f528e8
|     | `-CXXThisExpr 0x555d86f5b978 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x555d86f5b9f8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x555d86f5b8f8 <col:27> 'Task *' lvalue ParmVar 0x555d86f529b8 'task' 'Task *'
|     |-ImplicitCastExpr 0x555d86f5ba10 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x555d86f5b918 <col:33> 'NotifierSignal *' lvalue ParmVar 0x555d86f52a30 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x555d86f5ba28 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x555d86f5b938 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x555d86f52580 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x555d86f5b958 <col:62> 'const String' lvalue ParmVar 0x555d86f52aa8 'prefix' 'const String &'
|-CXXMethodDecl 0x555d86f52d98 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x555d86f52c50 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x555d86f52cc8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x555d86f5b308 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x555d86f5b2f0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x555d86f5b2d8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x555d86f5b2b8 <col:70, col:77> 'String' (CXXTemporary 0x555d86f5b2b8)
| |         `-CXXTemporaryObjectExpr 0x555d86f5b280 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x555d86f5bc18 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x555d86f5bb90 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x555d86f5bb60 <col:9> '<bound member function type>' ->add_task_handlers 0x555d86f528e8
|     | `-CXXThisExpr 0x555d86f5bb50 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x555d86f5bbd0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x555d86f5bad0 <col:27> 'Task *' lvalue ParmVar 0x555d86f52c50 'task' 'Task *'
|     |-ImplicitCastExpr 0x555d86f5bbe8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x555d86f5baf0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x555d86f5bc00 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x555d86f5bb10 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x555d86f52580 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x555d86f5bb30 <col:57> 'const String' lvalue ParmVar 0x555d86f52cc8 'prefix' 'const String &'
|-CXXMethodDecl 0x555d86f53078 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x555d86f52e60 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f52ee0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f52f58 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x555d86f53328 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x555d86f53148 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f531c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f53248 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x555d86f53618 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x555d86f533f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f53478 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f534f0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x555d86f538c8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x555d86f536e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f53768 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f537e8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x555d86f53b78 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x555d86f53998 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f53a18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f53a98 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x555d86f53e28 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x555d86f53c48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f53cc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f53d40 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x555d86f540d8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x555d86f53ef8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f53f78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f53ff8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x555d86f543e8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x555d86f54200 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f54280 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f54300 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x555d86f546c8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x555d86f544b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f54538 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f545e0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x555d86f549a8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x555d86f54798 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f54818 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f548c0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x555d86f54c10 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x555d86f54a78 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x555d86f54af8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x555d86f54b70 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x555d86f54eb8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x555d86f54ce0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x555d86f54d60 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x555d86f54dd8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x555d86f55168 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x555d86f54f88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f55008 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f55088 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x555d86f55418 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x555d86f55238 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f552b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f55330 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x555d86f556c8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x555d86f554e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f55568 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f555e0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x555d86f55998 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x555d86f55798 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f55818 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x555d86f558b8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x555d86f55cc8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x555d86f55a68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x555d86f55ae8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x555d86f55b60 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x555d86f55bd8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x555d86f5b320 <col:93> 'bool' false
|-CXXMethodDecl 0x555d86f55eb0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x555d86f55d98 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x555d86f55e18 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x555d86f56088 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x555d86f55f70 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x555d86f55ff0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x555d86f56368 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x555d86f56148 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x555d86f561c0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x555d86f56240 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x555d86f562b8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x555d86f56658 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x555d86f56438 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x555d86f564b0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x555d86f56530 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x555d86f565a8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x555d86f56890 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x555d86f56730 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x555d86f567b0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x555d86f56a78 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x555d86f56958 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x555d86f569d8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x555d86f56b28 prev 0x555d86f4e2c8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x555d86f56c20 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x555d86f56cb0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x555d86f56d28 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x555d86f56de8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x555d86f56eb0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x555d86f57028 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x555d86f56f60 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x555d86f570d0 <col:24>
| | `-OptimizeNoneAttr 0x555d86f57128 <col:34>
| |-CXXMethodDecl 0x555d86f57170 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x555d86f57428 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x555d86f57220 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x555d86f57298 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x555d86f57318 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x555d86f574e0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x555d86f57518 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x555d86f57580 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x555d86f57608 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x555d86f57928 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x555d86f576c0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x555d86f57738 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x555d86f577b0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x555d86f57830 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x555d86f57a40 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x555d86f5f3b8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x555d86f5f3b8
| | `-ParmVarDecl 0x555d86f5f4c8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x555d86f5f568 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x555d86f5f568
| | `-ParmVarDecl 0x555d86f5f678 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x555d86f63838 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x555d86f57ab8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x555d86f57b58 <col:38> "" ""
|-CXXMethodDecl 0x555d86f57be8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x555d86f57c88 <col:44> "" ""
|-AccessSpecDecl 0x555d86f57cf8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x555d86f57d20 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x555d86f57e20 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x555d86f57e70 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555d86f57e00 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x555d86f57de0 <col:27> 'int' 4
|-FieldDecl 0x555d86f57f28 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x555d86f580d8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x555d86f58190 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x555d86f59220 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x555d86f59288 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x555d86f593d8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x555d86f59318 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x555d86f59588 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x555d86f59498 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x555d86f59768 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x555d86f59648 <col:20> col:23 'int'
| `-ParmVarDecl 0x555d86f596c8 <col:25> col:28 'int'
|-CXXMethodDecl 0x555d86f59a10 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x555d86f59830 <col:23> col:26 'int'
| |-ParmVarDecl 0x555d86f598b0 <col:28> col:31 'int'
| `-ParmVarDecl 0x555d86f59928 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x555d86f59ac8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x555d86f59b90 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x555d86f59be0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x555d86f59c30 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x555d86f59e10 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x555d86f59cc0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x555d86f59d38 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x555d86f5a0b8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x555d86f59ed8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x555d86f59f58 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x555d86f59fd0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x555d86f5a2d8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x555d86f5a188 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x555d86f5a208 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x555d86f5a610 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x555d86f5a398 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x555d86f5a418 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x555d86f5a490 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x555d86f5a510 <col:57> col:60 'int'
|-CXXMethodDecl 0x555d86f5a7f8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x555d86f5a6e0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x555d86f5a760 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x555d86f5a948 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x555d86f5a8b8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x555d86f5acc8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x555d86f5aa08 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x555d86f5aa88 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x555d86f5ab00 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x555d86f5ab80 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x555d86f5ade0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class RoundRobinSwitch
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class atomic_uint32_t _next
       108 |     uint32_t _val
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555d86d083b0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x555d86d084c8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x555d86d08558 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x555d86d08628 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x555d86d08710 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x555d86d08928 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x555d86d087d0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86d08ad8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x555d86d089e0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x555d86d08c20 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x555d86d08b90 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x555d86d08d68 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x555d86d08cd8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86d08eb0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x555d86d08e20 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86d08f78 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x555d86d090c0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x555d86d09030 <col:28> col:31 'int'
|-CXXMethodDecl 0x555d86d09188 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x555d86d092d0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x555d86d09240 <col:28> col:31 'int'
|-CXXMethodDecl 0x555d86d09448 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x555d86d09388 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86d09590 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x555d86d09500 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86d09658 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x555d86d09818 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x555d86d09708 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x555d86d09780 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86d09a68 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x555d86d098d8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x555d86d09950 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x555d86d09b18 <col:86> "" ""
|-CXXMethodDecl 0x555d86d09d88 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x555d86d09bf8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x555d86d09c70 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86d09f38 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x555d86d09e48 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x555d86d0a0e8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x555d86d09ff0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x555d86d0a3b8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x555d86d0a1a0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x555d86d0a218 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x555d86d0a290 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86d0a698 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x555d86d0a480 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x555d86d0a4f8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x555d86d0a570 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x555d86d0a750 <col:115> "" ""
|-AccessSpecDecl 0x555d86d0a7c0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x555d86d0a7f8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86d0bd10 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x555d86d0bd10
| `-ParmVarDecl 0x555d86d0be18 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x555d86d0beb8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x555d86d0beb8
| `-ParmVarDecl 0x555d86d0bfc8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x555d86d415f8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x555d86f33630 <col:7>
|-CXXConstructorDecl 0x555d86d416d0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x555d86d416d0
| `-ParmVarDecl 0x555d86d417e8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x555d86d41858 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x555d86d41858
| `-ParmVarDecl 0x555d86d41968 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x555d86f36030 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555d86f62528 <../elements/standard/rrswitch.hh:21:1, line:35:1> line:21:7 class RoundRobinSwitch definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x555d86f62688 <col:1, col:7> col:7 implicit referenced class RoundRobinSwitch
|-FieldDecl 0x555d86f62728 <line:23:3, col:19> col:19 referenced _next 'atomic_uint32_t'
|-AccessSpecDecl 0x555d86f62778 <line:25:2, col:8> col:2 public
|-CXXConstructorDecl 0x555d86f62800 <line:27:3, col:20> col:3 RoundRobinSwitch 'void ()'
|-CXXMethodDecl 0x555d86f62900 <line:29:3, col:63> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x555d86f4b278 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x555d86f634e0 <col:34, col:63>
|   `-ReturnStmt 0x555d86f634d0 <col:36, col:43>
|     `-ImplicitCastExpr 0x555d86f634b8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x555d86f63490 <col:43> 'const char [17]' lvalue "RoundRobinSwitch"
|-CXXMethodDecl 0x555d86f629c8 <line:30:3, col:51> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x555d86f4b340 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x555d86f635c0 <col:34, col:51>
|   `-ReturnStmt 0x555d86f635b0 <col:36, col:43>
|     `-ImplicitCastExpr 0x555d86f63598 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x555d86f63578 <col:43> 'const char [5]' lvalue "1/1-"
|-CXXMethodDecl 0x555d86f62a90 <line:31:3, col:49> col:15 processing 'const char *() const'
| |-Overrides: [ 0x555d86f4b708 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x555d86f63620 <col:34, col:49>
|   `-ReturnStmt 0x555d86f63610 <col:36, col:43>
|     `-ImplicitCastExpr 0x555d86f635f8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x555d86f635d8 <col:43> 'const char []' lvalue Var 0x555d86f4b850 'PUSH' 'const char []'
|-CXXMethodDecl 0x555d86f62c58 <line:33:3, col:26> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x555d86f4a0e8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x555d86f62b48 <col:13> col:16 'int'
| `-ParmVarDecl 0x555d86f62bc0 <col:18, col:25> col:26 'Packet *'
|-CXXConstructorDecl 0x555d86f62d38 <line:21:7> col:7 implicit RoundRobinSwitch 'void (const RoundRobinSwitch &)' inline default_delete noexcept-unevaluated 0x555d86f62d38
| `-ParmVarDecl 0x555d86f62e48 <col:7> col:7 'const RoundRobinSwitch &'
|-CXXConstructorDecl 0x555d86f62ee8 <col:7> col:7 implicit RoundRobinSwitch 'void (RoundRobinSwitch &&)' inline default_delete noexcept-unevaluated 0x555d86f62ee8
| `-ParmVarDecl 0x555d86f62ff8 <col:7> col:7 'RoundRobinSwitch &&'
|-CXXMethodDecl 0x555d86f63098 <col:7> col:7 implicit operator= 'RoundRobinSwitch &(const RoundRobinSwitch &)' inline default_delete noexcept-unevaluated 0x555d86f63098
| `-ParmVarDecl 0x555d86f631a8 <col:7> col:7 'const RoundRobinSwitch &'
|-CXXMethodDecl 0x555d86f63218 <col:7> col:7 implicit operator= 'RoundRobinSwitch &(RoundRobinSwitch &&)' inline default_delete noexcept-unevaluated 0x555d86f63218
| `-ParmVarDecl 0x555d86f63328 <col:7> col:7 'RoundRobinSwitch &&'
`-CXXDestructorDecl 0x555d86f633b0 <col:7> col:7 implicit ~RoundRobinSwitch 'void ()' inline default noexcept-unevaluated 0x555d86f633b0
  `-Overrides: [ 0x555d86f49e18 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.RoundRobinSwitch = type { %class.Element.base, %class.atomic_uint32_t }
  NonVirtualBaseLLVMType:%class.RoundRobinSwitch = type { %class.Element.base, %class.atomic_uint32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555d86f221d8 prev 0x555d86f173e0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x555d86f222d0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x555d86f223c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x555d86f224e8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x555d86f22668 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x555d86f227e8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x555d86f22968 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x555d86f33798 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x555d86f34008 <col:11>
|-CXXDestructorDecl 0x555d86f33870 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x555d86f339a8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x555d86f339a8
| `-ParmVarDecl 0x555d86f33ab8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x555d86f33b58 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x555d86f33b58
| `-ParmVarDecl 0x555d86f33c68 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x555d86f36a28 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x555d86f36b38 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x555d86f36db8 <col:11>
|   `-ReturnStmt 0x555d86f36da8 <col:11>
|     `-UnaryOperator 0x555d86f36d90 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x555d86f36d80 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x555d86f36ba8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x555d86f36ba8
  `-ParmVarDecl 0x555d86f36cb8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555d86f229d0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x555d86f22ae8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x555d86f22b88 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x555d86f22bf0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x555d86f22c58 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x555d86f22cc0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x555d86f22d20 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x555d86f22de0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x555d86f22e40 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x555d86f22ea0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x555d86f336a8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x555d86f22b88 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x555d86f34018 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x555d86f34070 <col:12>
|-CXXConstructorDecl 0x555d86f33cd8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x555d86f33cd8
| `-ParmVarDecl 0x555d86f33de8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x555d86f33e88 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x555d86f33e88
| `-ParmVarDecl 0x555d86f33f98 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x555d86f36110 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555d86f10af0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x555d86f10c08 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x555d86f10c98 <col:16, col:22> col:16 public
|-EnumDecl 0x555d86f10cc0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x555d86f10dc0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x555d86f10ea0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f10da0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x555d86f10d80 <col:21> 'int' 28
| `-EnumConstantDecl 0x555d86f10e50 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x555d86f10eb8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555d86f10e30 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x555d86f10e10 <col:22> 'int' 64
|-CXXMethodDecl 0x555d86f111f8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x555d86f10ee0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x555d86f10f60 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x555d86f10fd8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x555d86f11050 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x555d86f112b8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x555d86f114b8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x555d86f11330 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x555d86f113a8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x555d86f11568 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x555d86f116c8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x555d86f115d8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x555d86f11770 <col:72> warn_unused_result ""
|-TypedefDecl 0x555d86f11ad0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x555d86f11a60 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x555d86f11a00 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x555d86f119c0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x555d869ea4e0 'void'
|       |-PointerType 0x555d86c90c50 'unsigned char *'
|       | `-BuiltinType 0x555d869ea5e0 'unsigned char'
|       |-TypedefType 0x555d86a8d220 'size_t' sugar
|       | |-Typedef 0x555d86a5abe0 'size_t'
|       | `-BuiltinType 0x555d869ea640 'unsigned long'
|       `-PointerType 0x555d869eace0 'void *'
|         `-BuiltinType 0x555d869ea4e0 'void'
|-CXXMethodDecl 0x555d86f11f48 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x555d86f11b40 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x555d86f11bb8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x555d86f11c50 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x555d86f11cd0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x555d86f2c640 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x555d86f2c628 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x555d86f2c5f0 <col:58> 'int' 0
| |-ParmVarDecl 0x555d86f11d50 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x555d86f2c668 <col:76> 'int' 0
| |-ParmVarDecl 0x555d86f11dd0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x555d86f2c688 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x555d86f12018 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x555d86f12098 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x555d86f12158 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x555d86f121f8 <col:20>
| `-OptimizeNoneAttr 0x555d86f12250 <col:30>
|-CXXMethodDecl 0x555d86f122c8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x555d86f12368 <col:20>
| `-OptimizeNoneAttr 0x555d86f123c0 <col:30>
|-CXXMethodDecl 0x555d86f12438 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x555d86f124d8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x555d86f12588 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x555d86f12628 <col:20>
| |-OptimizeNoneAttr 0x555d86f12680 <col:30>
| `-WarnUnusedResultAttr 0x555d86f126a8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x555d86f12700 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x555d86f127a0 <col:20>
| `-OptimizeNoneAttr 0x555d86f127f8 <col:30>
|-CXXMethodDecl 0x555d86f12848 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x555d86f128e8 <col:20>
| `-OptimizeNoneAttr 0x555d86f12940 <col:30>
|-CXXMethodDecl 0x555d86f12988 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x555d86f12a28 <col:20>
| `-OptimizeNoneAttr 0x555d86f12a80 <col:30>
|-CXXMethodDecl 0x555d86f12ac8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x555d86f12b88 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x555d86f12c50 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x555d86f12d18 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x555d86f12dd8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x555d86f12ef8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x555d86f2c750 <col:54, line:99:5>
|   `-ReturnStmt 0x555d86f2c740 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x555d86f2c728 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x555d86f2c6f8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x555d86f231d8
|         `-CXXThisExpr 0x555d86f2c6e8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x555d86f13098 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x555d86f12fa8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x555d86f2c800 <col:67, line:103:5>
|   `-BinaryOperator 0x555d86f2c7e0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x555d86f2c778 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x555d86f231d8
|     | `-CXXThisExpr 0x555d86f2c768 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x555d86f2c7c8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x555d86f2c7a8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x555d86f12fa8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x555d86f13190 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x555d86f2c880 <col:33, line:107:5>
|   `-ReturnStmt 0x555d86f2c870 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x555d86f2c858 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x555d86f2c828 <col:16> 'void *' lvalue ->_destructor_argument 0x555d86f23240
|         `-CXXThisExpr 0x555d86f2c818 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x555d86f13250 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x555d86f2ceb0 <col:25, line:113:5>
|   |-ParenExpr 0x555d86f2cbf8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x555d86f2cbc8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f2c938 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x555d86f2c910 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x555d86f2c8d8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x555d86f2c8a8 <col:24> '<bound member function type>' ->shared 0x555d86f122c8
|   |   |       `-ImplicitCastExpr 0x555d86f2c8f8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x555d86f2c898 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x555d86f2c998 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f2c978 <col:42> 'int' 0
|   |   `-CallExpr 0x555d86f2cb28 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x555d86f2cb10 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f2caf0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f2cb68 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2ca08 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x555d86f2cb80 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2ca30 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f2cb98 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f2ca68 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x555d86f2cbb0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f2cad8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f2cac0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f2ca88 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x555d86f2cdf8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x555d86f2cc28 <col:2> 'unsigned char *' lvalue ->_head 0x555d86f22fe0
|   | | `-CXXThisExpr 0x555d86f2cc18 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x555d86f2cde0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x555d86f2cdc0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x555d86f2cc68 <col:10> 'unsigned char *' lvalue ->_data 0x555d86f23048
|   |     | `-CXXThisExpr 0x555d86f2cc58 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x555d86f2cda8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x555d86f2cd88 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x555d86f2cca8 <col:18> 'unsigned char *' lvalue ->_tail 0x555d86f230b0
|   |         | `-CXXThisExpr 0x555d86f2cc98 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x555d86f2cd70 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x555d86f2cd50 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x555d86f2cce8 <col:26> 'unsigned char *' lvalue ->_end 0x555d86f23118
|   |             | `-CXXThisExpr 0x555d86f2ccd8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x555d86f2cd38 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x555d86f2cd18 <col:33> 'int' 0
|   `-BinaryOperator 0x555d86f2ce90 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x555d86f2ce28 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x555d86f231d8
|     | `-CXXThisExpr 0x555d86f2ce18 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x555d86f2ce78 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x555d86f2ce58 <col:16> 'int' 0
|-CXXMethodDecl 0x555d86f13390 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x555d86f13300 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x555d86f13438 <col:20>
| |-OptimizeNoneAttr 0x555d86f13490 <col:30>
| `-WarnUnusedResultAttr 0x555d86f134b8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x555d86f13588 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x555d86f134f8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x555d86f13630 <col:20>
| |-OptimizeNoneAttr 0x555d86f13688 <col:30>
| `-WarnUnusedResultAttr 0x555d86f136b0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x555d86f137e8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x555d86f136f0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x555d86f13890 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x555d86f13990 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x555d86f13900 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x555d86f13a38 <col:20>
| `-OptimizeNoneAttr 0x555d86f13a90 <col:30>
|-CXXMethodDecl 0x555d86f13b58 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x555d86f13ac8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x555d86f13c00 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x555d86f13d00 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x555d86f13c70 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x555d86f13da8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x555d86f13ea8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x555d86f13e18 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x555d86f13f50 <col:20>
| `-OptimizeNoneAttr 0x555d86f13fa8 <col:30>
|-CXXMethodDecl 0x555d86f14138 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x555d86f13fe8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x555d86f14060 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x555d86f2c6a8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x555d86f141e8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x555d86f143e8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x555d86f14260 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x555d86f142d8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86f145f8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x555d86f144a8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x555d86f14520 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86f14808 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x555d86f146b8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x555d86f14738 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x555d86f2c6b8 <col:39> 'int' 0
|-CXXMethodDecl 0x555d86f148d8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x555d86f149a0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x555d86f14a68 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x555d86f14b28 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x555d86f14bf0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x555d86f14d38 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x555d86f14ca8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x555d86f14f08 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x555d86f14df8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x555d86f14e70 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86f14fd8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x555d86f15098 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x555d86f15138 <col:20>
| `-OptimizeNoneAttr 0x555d86f15190 <col:30>
|-CXXMethodDecl 0x555d86f151e0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x555d86f15280 <col:20>
| `-OptimizeNoneAttr 0x555d86f152d8 <col:30>
|-CXXMethodDecl 0x555d86f15328 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x555d86f153e8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x555d86f154b0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x555d86f15550 <col:20>
| `-OptimizeNoneAttr 0x555d86f155a8 <col:30>
|-CXXMethodDecl 0x555d86f156f8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x555d86f155e8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x555d86f15660 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86f15848 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x555d86f157b8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86f15920 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x555d86f159e0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x555d86f15a80 <col:20>
| `-OptimizeNoneAttr 0x555d86f15ad8 <col:30>
|-CXXMethodDecl 0x555d86f15b28 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x555d86f15bc8 <col:20>
| `-OptimizeNoneAttr 0x555d86f15c20 <col:30>
|-CXXMethodDecl 0x555d86f15c70 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x555d86f15d38 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x555d86f15dd8 <col:20>
| `-OptimizeNoneAttr 0x555d86f15e30 <col:30>
|-CXXMethodDecl 0x555d86f15e78 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x555d86f15f98 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x555d86f16108 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x555d86f16048 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x555d86f161f8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x555d86f16298 <col:20>
| `-OptimizeNoneAttr 0x555d86f162f0 <col:30>
|-CXXMethodDecl 0x555d86f16340 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x555d86f16400 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x555d86f16638 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x555d86f164b0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x555d86f16528 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x555d86f166e8 <col:20>
| `-OptimizeNoneAttr 0x555d86f16740 <col:30>
|-CXXMethodDecl 0x555d86f167e8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x555d86f16888 <col:20>
| `-OptimizeNoneAttr 0x555d86f168e0 <col:30>
|-CXXMethodDecl 0x555d86f16930 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x555d86f169d0 <col:20>
| `-OptimizeNoneAttr 0x555d86f16a28 <col:30>
|-CXXMethodDecl 0x555d86f16a70 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x555d86f16b10 <col:20>
| `-OptimizeNoneAttr 0x555d86f16b68 <col:30>
|-CXXMethodDecl 0x555d86f16c68 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x555d86f16ba0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x555d86f16d10 <col:20>
| `-OptimizeNoneAttr 0x555d86f16d68 <col:30>
|-CXXMethodDecl 0x555d86f16f28 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x555d86f16da0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x555d86f16e18 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x555d86f16fd8 <col:20>
| `-OptimizeNoneAttr 0x555d86f17030 <col:30>
|-CXXMethodDecl 0x555d86f170d8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x555d86f171f8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x555d86f17318 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x555d86f173b8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x555d86f173e0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x555d86f17508 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x555d86f175a8 <col:20>
| `-OptimizeNoneAttr 0x555d86f17600 <col:30>
|-CXXMethodDecl 0x555d86f176a8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x555d86f17748 <col:20>
| `-OptimizeNoneAttr 0x555d86f177a0 <col:30>
|-AccessSpecDecl 0x555d86f177c8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x555d86f177f0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x555d86f178f0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x555d86f17940 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555d86f178d0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x555d86f178b0 <col:14> 'int' 48
|-CXXMethodDecl 0x555d86f179a8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x555d86f17a48 <col:20>
| `-OptimizeNoneAttr 0x555d86f17aa0 <col:30>
|-CXXMethodDecl 0x555d86f17b18 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x555d86f17bb8 <col:20>
| `-OptimizeNoneAttr 0x555d86f17c10 <col:30>
|-CXXMethodDecl 0x555d86f17cd8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x555d86f17c48 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x555d86f17e78 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x555d86f18018 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x555d86f17f28 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x555d86f180c0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x555d86f181c0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x555d86f18570 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f181a0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x555d86f18180 <col:9> 'int' 0
| |-EnumConstantDecl 0x555d86f18250 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x555d86f18588 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f18230 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x555d86f18210 <col:14> 'int' 1
| |-EnumConstantDecl 0x555d86f182e0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x555d86f185a0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f182c0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x555d86f182a0 <col:14> 'int' 2
| |-EnumConstantDecl 0x555d86f18370 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x555d86f185b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f18350 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x555d86f18330 <col:14> 'int' 3
| |-EnumConstantDecl 0x555d86f18400 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x555d86f185d0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f183e0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x555d86f183c0 <col:13> 'int' 4
| |-EnumConstantDecl 0x555d86f18490 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x555d86f185e8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f18470 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x555d86f18450 <col:13> 'int' 5
| `-EnumConstantDecl 0x555d86f18520 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x555d86f18600 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555d86f18500 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x555d86f184e0 <col:14> 'int' 6
|-CXXMethodDecl 0x555d86f18668 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x555d86f18708 <col:20>
| `-OptimizeNoneAttr 0x555d86f18760 <col:30>
|-CXXMethodDecl 0x555d86f18858 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x555d86f18798 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x555d86f18900 <col:20>
| `-OptimizeNoneAttr 0x555d86f18958 <col:30>
|-CXXMethodDecl 0x555d86f189c8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x555d86f18af0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x555d86f18c68 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x555d86f18ba0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x555d86f18d30 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x555d86f18df8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x555d86f18f38 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x555d86f18ea8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x555d86f18fe0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x555d86f190e0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x555d86f192e0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f190c0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x555d86f190a0 <col:23> 'int' 0
| |-EnumConstantDecl 0x555d86f19170 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x555d86f192f8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f19150 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x555d86f19130 <col:45> 'int' 4
| |-EnumConstantDecl 0x555d86f19200 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x555d86f19310 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f191e0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x555d86f191c0 <col:24> 'int' 0
| `-EnumConstantDecl 0x555d86f19290 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x555d86f19328 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555d86f19270 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x555d86f19250 <col:47> 'int' 16
|-CXXMethodDecl 0x555d86f19388 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x555d86f194f8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x555d86f19438 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x555d86f195a0 <col:20>
| `-OptimizeNoneAttr 0x555d86f195f8 <col:30>
|-CXXMethodDecl 0x555d86f19648 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x555d86f2cfd0 <col:18, col:36>
|   `-ReturnStmt 0x555d86f2cfc0 <col:20, col:33>
|     `-ImplicitCastExpr 0x555d86f2cfa8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x555d86f2cf88 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x555d86f2cf58 <col:27> '<bound member function type>' ->xanno 0x555d86f176a8
|           `-CXXThisExpr 0x555d86f2cf48 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x555d86f19740 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x555d86f2d0e0 <col:30, col:48>
|   `-ReturnStmt 0x555d86f2d0d0 <col:32, col:45>
|     `-ImplicitCastExpr 0x555d86f2d0b8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x555d86f2d098 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x555d86f2d068 <col:39> '<bound member function type>' ->xanno 0x555d86f17508
|           `-CXXThisExpr 0x555d86f2d058 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x555d86f19828 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x555d86f2d278 <col:24, col:50>
|   `-ReturnStmt 0x555d86f2d268 <col:26, col:47>
|     `-UnaryOperator 0x555d86f2d250 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x555d86f2d230 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x555d86f2d218 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x555d86f2d1c8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x555d86f224e8
|         |   `-CXXMemberCallExpr 0x555d86f2d1a8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x555d86f2d178 <col:34> '<bound member function type>' ->xanno 0x555d86f176a8
|         |       `-CXXThisExpr 0x555d86f2d168 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x555d86f2d1f8 <col:46> 'int' 0
|-CXXMethodDecl 0x555d86f19930 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x555d86f2d448 <col:36, col:62>
|   `-ReturnStmt 0x555d86f2d438 <col:38, col:59>
|     `-UnaryOperator 0x555d86f2d420 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x555d86f2d400 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x555d86f2d3e8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x555d86f2d360 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x555d86f224e8
|         |   `-CXXMemberCallExpr 0x555d86f2d340 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x555d86f2d310 <col:46> '<bound member function type>' ->xanno 0x555d86f17508
|         |       `-CXXThisExpr 0x555d86f2d300 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x555d86f2d390 <col:58> 'int' 0
|-CXXMethodDecl 0x555d86f19a48 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x555d86f2d5e0 <col:26, col:53>
|   `-ReturnStmt 0x555d86f2d5d0 <col:28, col:50>
|     `-UnaryOperator 0x555d86f2d5b8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x555d86f2d598 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x555d86f2d580 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x555d86f2d530 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x555d86f227e8
|         |   `-CXXMemberCallExpr 0x555d86f2d510 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x555d86f2d4e0 <col:36> '<bound member function type>' ->xanno 0x555d86f176a8
|         |       `-CXXThisExpr 0x555d86f2d4d0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x555d86f2d560 <col:49> 'int' 0
|-CXXMethodDecl 0x555d86f19b68 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x555d86f2d7b8 <col:38, col:65>
|   `-ReturnStmt 0x555d86f2d7a8 <col:40, col:62>
|     `-UnaryOperator 0x555d86f2d790 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x555d86f2d770 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x555d86f2d758 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x555d86f2d6c8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x555d86f227e8
|         |   `-CXXMemberCallExpr 0x555d86f2d6a8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x555d86f2d678 <col:48> '<bound member function type>' ->xanno 0x555d86f17508
|         |       `-CXXThisExpr 0x555d86f2d668 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x555d86f2d6f8 <col:61> 'int' 0
|-CXXMethodDecl 0x555d86f19d18 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x555d86f19c20 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x555d86f2de88 <col:34, line:463:5>
|   |-ParenExpr 0x555d86f2dcd0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x555d86f2dca0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f2d908 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f2d8d8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f2d828 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f2d810 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f2d7d0 <col:23> 'int' lvalue ParmVar 0x555d86f19c20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f2d7f0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f2d8b8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x555d86f2d888 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f2d848 <col:33> 'int' lvalue ParmVar 0x555d86f19c20 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x555d86f2d8a0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x555d86f2d868 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x555d86f2d968 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f2d948 <col:56> 'int' 0
|   |   `-CallExpr 0x555d86f2dc00 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x555d86f2dbe8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f2dbc8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f2dc40 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2da58 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x555d86f2dc58 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2da88 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f2dc70 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f2dac0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x555d86f2dc88 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f2dbb0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f2db98 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f2db58 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x555d86f2de78 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x555d86f2de60 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x555d86f2de40 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x555d86f2de10 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x555d86f2ddc0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x555d86f224e8
|         |   `-CXXMemberCallExpr 0x555d86f2dda0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x555d86f2dd70 <col:9> '<bound member function type>' ->xanno 0x555d86f17508
|         |       `-CXXThisExpr 0x555d86f2dd60 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x555d86f2de28 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x555d86f2ddf0 <col:21> 'int' lvalue ParmVar 0x555d86f19c20 'i' 'int'
|-CXXMethodDecl 0x555d86f19f68 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x555d86f19dd8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x555d86f19e50 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x555d86f2e518 <col:40, line:472:5>
|   |-ParenExpr 0x555d86f2e330 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x555d86f2e300 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f2dfe0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f2dfb0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f2df00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f2dee8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f2dea8 <col:23> 'int' lvalue ParmVar 0x555d86f19dd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f2dec8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f2df90 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x555d86f2df60 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f2df20 <col:33> 'int' lvalue ParmVar 0x555d86f19dd8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x555d86f2df78 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x555d86f2df40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x555d86f2e040 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f2e020 <col:56> 'int' 0
|   |   `-CallExpr 0x555d86f2e260 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x555d86f2e248 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f2e228 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f2e2a0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2e0b0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x555d86f2e2b8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2e0e0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f2e2d0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f2e118 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x555d86f2e2e8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f2e210 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f2e1f8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f2e1b8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x555d86f2e4f8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x555d86f2e4a0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x555d86f2e470 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x555d86f2e420 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x555d86f224e8
|     | |   `-CXXMemberCallExpr 0x555d86f2e400 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x555d86f2e3d0 <col:2> '<bound member function type>' ->xanno 0x555d86f176a8
|     | |       `-CXXThisExpr 0x555d86f2e3c0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x555d86f2e488 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x555d86f2e450 <col:14> 'int' lvalue ParmVar 0x555d86f19dd8 'i' 'int'
|     `-ImplicitCastExpr 0x555d86f2e4e0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x555d86f2e4c0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x555d86f19e50 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x555d86f1a128 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x555d86f1a030 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x555d86f2ec98 <col:36, line:485:5>
|   |-ParenExpr 0x555d86f2ea00 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x555d86f2e9d0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f2e6b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f2e680 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f2e590 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f2e578 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f2e538 <col:23> 'int' lvalue ParmVar 0x555d86f1a030 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f2e558 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f2e660 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x555d86f2e648 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f2e5b0 <col:33> 'int' lvalue ParmVar 0x555d86f1a030 'i' 'int'
|   |   |     `-BinaryOperator 0x555d86f2e628 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555d86f2e610 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x555d86f2e5d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x555d86f2e5f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x555d86f2e710 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f2e6f0 <col:60> 'int' 0
|   |   `-CallExpr 0x555d86f2e930 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x555d86f2e918 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f2e8f8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f2e970 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2e780 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x555d86f2e988 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2e7b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f2e9a0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f2e7f0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x555d86f2e9b8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f2e8e0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f2e8c8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f2e888 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x555d86f2ec88 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x555d86f2ec70 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x555d86f2ec58 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x555d86f2ec28 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x555d86f2ebc8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x555d86f2eb98 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x555d86f2eb10 <col:61, col:70> 'char const[48]' lvalue ->c 0x555d86f223c0
|             |   `-CXXMemberCallExpr 0x555d86f2eaf0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x555d86f2eac0 <col:61> '<bound member function type>' ->xanno 0x555d86f17508
|             |       `-CXXThisExpr 0x555d86f2eab0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x555d86f2ebb0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x555d86f2eb40 <col:74> 'int' lvalue ParmVar 0x555d86f1a030 'i' 'int'
|-CXXMethodDecl 0x555d86f1a378 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x555d86f1a1e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x555d86f1a260 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x555d86f2f3e8 <col:42, line:500:5>
|   |-ParenExpr 0x555d86f2f180 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x555d86f2f150 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f2ee30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f2ee00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f2ed10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f2ecf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f2ecb8 <col:23> 'int' lvalue ParmVar 0x555d86f1a1e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f2ecd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f2ede0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x555d86f2edc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f2ed30 <col:33> 'int' lvalue ParmVar 0x555d86f1a1e8 'i' 'int'
|   |   |     `-BinaryOperator 0x555d86f2eda8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555d86f2ed90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x555d86f2ed50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x555d86f2ed70 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x555d86f2ee90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f2ee70 <col:60> 'int' 0
|   |   `-CallExpr 0x555d86f2f0b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x555d86f2f098 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f2f078 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f2f0f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2ef00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x555d86f2f108 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2ef38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f2f120 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f2ef70 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x555d86f2f138 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f2f060 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f2f048 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f2f008 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x555d86f2f3c8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x555d86f2f378 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x555d86f2f348 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x555d86f2f2f0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x555d86f2f2c0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x555d86f2f270 <col:48, col:57> 'char [48]' lvalue ->c 0x555d86f223c0
|     |     |   `-CXXMemberCallExpr 0x555d86f2f250 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x555d86f2f220 <col:48> '<bound member function type>' ->xanno 0x555d86f176a8
|     |     |       `-CXXThisExpr 0x555d86f2f210 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x555d86f2f2d8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x555d86f2f2a0 <col:61> 'int' lvalue ParmVar 0x555d86f1a1e8 'i' 'int'
|     `-ImplicitCastExpr 0x555d86f2f3b0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x555d86f2f390 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x555d86f1a260 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x555d86f1a538 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x555d86f1a440 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x555d86f2fb48 <col:35, line:513:5>
|   |-ParenExpr 0x555d86f2f858 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x555d86f2f828 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f2f580 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f2f550 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f2f460 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f2f448 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f2f408 <col:23> 'int' lvalue ParmVar 0x555d86f1a440 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f2f428 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f2f530 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x555d86f2f518 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f2f480 <col:33> 'int' lvalue ParmVar 0x555d86f1a440 'i' 'int'
|   |   |     `-BinaryOperator 0x555d86f2f4f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555d86f2f4e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x555d86f2f4a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x555d86f2f4c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x555d86f2f5e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f2f5c0 <col:60> 'int' 0
|   |   `-CallExpr 0x555d86f2f788 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x555d86f2f770 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f2f750 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f2f7c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2f650 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x555d86f2f7e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2f688 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f2f7f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f2f6c0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x555d86f2f810 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f2f738 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f2f720 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f2f6e0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x555d86f2fb38 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x555d86f2fb20 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x555d86f2fb08 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x555d86f2fad8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x555d86f2fa50 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x555d86f2fa20 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x555d86f2f9d0 <col:60, col:69> 'char const[48]' lvalue ->c 0x555d86f223c0
|             |   `-CXXMemberCallExpr 0x555d86f2f9b0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x555d86f2f980 <col:60> '<bound member function type>' ->xanno 0x555d86f17508
|             |       `-CXXThisExpr 0x555d86f2f970 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x555d86f2fa38 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x555d86f2fa00 <col:73> 'int' lvalue ParmVar 0x555d86f1a440 'i' 'int'
|-CXXMethodDecl 0x555d86f1a788 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x555d86f1a5f8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x555d86f1a670 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x555d86f30268 <col:41, line:528:5>
|   |-ParenExpr 0x555d86f2fff0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x555d86f2ffc0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f2fce0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f2fcb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f2fbc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f2fba8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f2fb68 <col:23> 'int' lvalue ParmVar 0x555d86f1a5f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f2fb88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f2fc90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x555d86f2fc78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f2fbe0 <col:33> 'int' lvalue ParmVar 0x555d86f1a5f8 'i' 'int'
|   |   |     `-BinaryOperator 0x555d86f2fc58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555d86f2fc40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x555d86f2fc00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x555d86f2fc20 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x555d86f2fd40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f2fd20 <col:60> 'int' 0
|   |   `-CallExpr 0x555d86f2ff20 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x555d86f2ff08 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f2fee8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f2ff60 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2fdb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x555d86f2ff78 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f2fde8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f2ff90 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f2fe20 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x555d86f2ffa8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f2fed0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f2feb8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f2fe78 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x555d86f30248 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x555d86f301f8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x555d86f301c8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x555d86f30170 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x555d86f30130 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x555d86f300e0 <col:47, col:56> 'char [48]' lvalue ->c 0x555d86f223c0
|     |     |   `-CXXMemberCallExpr 0x555d86f300c0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x555d86f30090 <col:47> '<bound member function type>' ->xanno 0x555d86f176a8
|     |     |       `-CXXThisExpr 0x555d86f30080 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x555d86f30148 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x555d86f30110 <col:60> 'int' lvalue ParmVar 0x555d86f1a5f8 'i' 'int'
|     `-ImplicitCastExpr 0x555d86f30230 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x555d86f30210 <col:65> 'int16_t':'short' lvalue ParmVar 0x555d86f1a670 'x' 'int16_t':'short'
|-CXXMethodDecl 0x555d86f1a948 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x555d86f1a850 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x555d86f30938 <col:36, line:541:5>
|   |-ParenExpr 0x555d86f306d8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x555d86f306a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f30400 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f303d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f302e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f302c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f30288 <col:23> 'int' lvalue ParmVar 0x555d86f1a850 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f302a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f303b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x555d86f30398 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f30300 <col:33> 'int' lvalue ParmVar 0x555d86f1a850 'i' 'int'
|   |   |     `-BinaryOperator 0x555d86f30378 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555d86f30360 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x555d86f30320 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x555d86f30340 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x555d86f30460 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f30440 <col:60> 'int' 0
|   |   `-CallExpr 0x555d86f30608 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x555d86f305f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f305d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f30648 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f304d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x555d86f30660 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f30508 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f30678 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f30540 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x555d86f30690 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f305b8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f305a0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f30560 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x555d86f30928 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x555d86f30910 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x555d86f308f8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x555d86f308c8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x555d86f30870 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x555d86f30840 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x555d86f307f0 <col:61, col:70> 'char const[48]' lvalue ->c 0x555d86f223c0
|             |   `-CXXMemberCallExpr 0x555d86f307d0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x555d86f307a0 <col:61> '<bound member function type>' ->xanno 0x555d86f17508
|             |       `-CXXThisExpr 0x555d86f30790 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x555d86f30858 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x555d86f30820 <col:74> 'int' lvalue ParmVar 0x555d86f1a850 'i' 'int'
|-CXXMethodDecl 0x555d86f1ab18 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x555d86f1aa08 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x555d86f1aa80 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x555d86f1abc8 <col:20>
| `-OptimizeNoneAttr 0x555d86f1ac20 <col:30>
|-CXXMethodDecl 0x555d86f1ad58 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x555d86f1ac60 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x555d86f31008 <col:35, line:562:5>
|   |-ParenExpr 0x555d86f30da8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x555d86f30d78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f30ad0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f30aa0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f309b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f30998 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f30958 <col:23> 'int' lvalue ParmVar 0x555d86f1ac60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f30978 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f30a80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x555d86f30a68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f309d0 <col:33> 'int' lvalue ParmVar 0x555d86f1ac60 'i' 'int'
|   |   |     `-BinaryOperator 0x555d86f30a48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555d86f30a30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x555d86f309f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x555d86f30a10 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x555d86f30b30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f30b10 <col:60> 'int' 0
|   |   `-CallExpr 0x555d86f30cd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x555d86f30cc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f30ca0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f30d18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f30ba0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x555d86f30d30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f30bd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f30d48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f30c10 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x555d86f30d60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f30c88 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f30c70 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f30c30 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x555d86f30ff8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x555d86f30fe0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x555d86f30fc8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x555d86f30f98 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x555d86f30f40 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x555d86f30f10 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x555d86f30ec0 <col:60, col:69> 'char const[48]' lvalue ->c 0x555d86f223c0
|             |   `-CXXMemberCallExpr 0x555d86f30ea0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x555d86f30e70 <col:60> '<bound member function type>' ->xanno 0x555d86f17508
|             |       `-CXXThisExpr 0x555d86f30e60 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x555d86f30f28 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x555d86f30ef0 <col:73> 'int' lvalue ParmVar 0x555d86f1ac60 'i' 'int'
|-CXXMethodDecl 0x555d86f1af68 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x555d86f1ae18 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x555d86f1ae90 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x555d86f316e8 <col:41, line:577:5>
|   |-ParenExpr 0x555d86f31478 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x555d86f31448 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f311a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f31170 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f31080 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f31068 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f31028 <col:23> 'int' lvalue ParmVar 0x555d86f1ae18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f31048 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f31150 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x555d86f31138 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f310a0 <col:33> 'int' lvalue ParmVar 0x555d86f1ae18 'i' 'int'
|   |   |     `-BinaryOperator 0x555d86f31118 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555d86f31100 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x555d86f310c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x555d86f310e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x555d86f31200 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f311e0 <col:60> 'int' 0
|   |   `-CallExpr 0x555d86f313a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x555d86f31390 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f31370 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f313e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f31270 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x555d86f31400 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f312a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f31418 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f312e0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x555d86f31430 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f31358 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f31340 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f31300 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x555d86f316c8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x555d86f31678 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x555d86f31648 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x555d86f315e8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x555d86f315b8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x555d86f31568 <col:47, col:56> 'char [48]' lvalue ->c 0x555d86f223c0
|     |     |   `-CXXMemberCallExpr 0x555d86f31548 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x555d86f31518 <col:47> '<bound member function type>' ->xanno 0x555d86f176a8
|     |     |       `-CXXThisExpr 0x555d86f31508 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x555d86f315d0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x555d86f31598 <col:60> 'int' lvalue ParmVar 0x555d86f1ae18 'i' 'int'
|     `-ImplicitCastExpr 0x555d86f316b0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x555d86f31690 <col:65> 'int32_t':'int' lvalue ParmVar 0x555d86f1ae90 'x' 'int32_t':'int'
|-CXXMethodDecl 0x555d86f1b128 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x555d86f1b030 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x555d86f31e18 <col:36, line:591:5>
|   |-ParenExpr 0x555d86f31b58 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x555d86f31b28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f31880 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f31850 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f31760 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f31748 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f31708 <col:23> 'int' lvalue ParmVar 0x555d86f1b030 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f31728 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f31830 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x555d86f31818 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f31780 <col:33> 'int' lvalue ParmVar 0x555d86f1b030 'i' 'int'
|   |   |     `-BinaryOperator 0x555d86f317f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555d86f317e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x555d86f317a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x555d86f317c0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x555d86f318e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f318c0 <col:60> 'int' 0
|   |   `-CallExpr 0x555d86f31a88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x555d86f31a70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f31a50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f31ac8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f31950 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x555d86f31ae0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f31988 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f31af8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f319c0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x555d86f31b10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f31a38 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f31a20 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f319e0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x555d86f31e08 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x555d86f31df0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x555d86f31dd8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x555d86f31da8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x555d86f31d20 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x555d86f31cf0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x555d86f31ca0 <col:61, col:70> 'char const[48]' lvalue ->c 0x555d86f223c0
|             |   `-CXXMemberCallExpr 0x555d86f31c80 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x555d86f31c50 <col:61> '<bound member function type>' ->xanno 0x555d86f17508
|             |       `-CXXThisExpr 0x555d86f31c40 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x555d86f31d08 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x555d86f31cd0 <col:74> 'int' lvalue ParmVar 0x555d86f1b030 'i' 'int'
|-CXXMethodDecl 0x555d86f1b378 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x555d86f1b1e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x555d86f1b260 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x555d86f324f8 <col:42, line:606:5>
|   |-ParenExpr 0x555d86f32288 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x555d86f32258 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f31fb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f31f80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f31e90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f31e78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f31e38 <col:23> 'int' lvalue ParmVar 0x555d86f1b1e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f31e58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f31f60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x555d86f31f48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f31eb0 <col:33> 'int' lvalue ParmVar 0x555d86f1b1e8 'i' 'int'
|   |   |     `-BinaryOperator 0x555d86f31f28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555d86f31f10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x555d86f31ed0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x555d86f31ef0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x555d86f32010 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f31ff0 <col:60> 'int' 0
|   |   `-CallExpr 0x555d86f321b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x555d86f321a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f32180 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f321f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f32080 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x555d86f32210 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f320b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f32228 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f320f0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x555d86f32240 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f32168 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f32150 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f32110 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x555d86f324d8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x555d86f32488 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x555d86f32458 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x555d86f323f8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x555d86f323c8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x555d86f32378 <col:48, col:57> 'char [48]' lvalue ->c 0x555d86f223c0
|     |     |   `-CXXMemberCallExpr 0x555d86f32358 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x555d86f32328 <col:48> '<bound member function type>' ->xanno 0x555d86f176a8
|     |     |       `-CXXThisExpr 0x555d86f32318 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x555d86f323e0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x555d86f323a8 <col:61> 'int' lvalue ParmVar 0x555d86f1b1e8 'i' 'int'
|     `-ImplicitCastExpr 0x555d86f324c0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x555d86f324a0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x555d86f1b260 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x555d86f1b510 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x555d86f1b440 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x555d86f32d68 <col:33, line:620:5>
|   |-ParenExpr 0x555d86f32ae0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x555d86f32ab0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f32700 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f326d0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f32570 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f32558 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f32518 <col:23> 'int' lvalue ParmVar 0x555d86f1b440 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f32538 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f326b0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x555d86f32698 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f32590 <col:33> 'int' lvalue ParmVar 0x555d86f1b440 'i' 'int'
|   |   |     `-BinaryOperator 0x555d86f32678 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555d86f32660 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x555d86f325b0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x555d86f32638 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x555d86f32620 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x555d86f325e8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x555d86f32760 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f32740 <col:79> 'int' 0
|   |   `-CallExpr 0x555d86f32a10 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x555d86f329f8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f329d8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f32a50 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f32848 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x555d86f32a68 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f32890 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f32a80 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f328c8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x555d86f32a98 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f329c0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f329a8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f32968 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x555d86f32d58 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x555d86f32d40 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x555d86f32d28 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x555d86f32cf8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x555d86f32c70 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x555d86f32c40 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x555d86f32bf0 <col:67, col:76> 'char const[48]' lvalue ->c 0x555d86f223c0
|             |   `-CXXMemberCallExpr 0x555d86f32bd0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x555d86f32ba0 <col:67> '<bound member function type>' ->xanno 0x555d86f17508
|             |       `-CXXThisExpr 0x555d86f32b90 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x555d86f32c58 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x555d86f32c20 <col:80> 'int' lvalue ParmVar 0x555d86f1b440 'i' 'int'
|-CXXMethodDecl 0x555d86f1b728 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x555d86f1b5d0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x555d86f1b650 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x555d86f33590 <col:45, line:635:5>
|   |-ParenExpr 0x555d86f332d8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x555d86f332a8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x555d86f32f70 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x555d86f32f40 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x555d86f32de0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x555d86f32dc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x555d86f32d88 <col:23> 'int' lvalue ParmVar 0x555d86f1b5d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x555d86f32da8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x555d86f32f20 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x555d86f32f08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x555d86f32e00 <col:33> 'int' lvalue ParmVar 0x555d86f1b5d0 'i' 'int'
|   |   |     `-BinaryOperator 0x555d86f32ee8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x555d86f32ed0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x555d86f32e20 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x555d86f178f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x555d86f32ea8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x555d86f32e90 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x555d86f32e58 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x555d86f32fd0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x555d86f32fb0 <col:79> 'int' 0
|   |   `-CallExpr 0x555d86f33208 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x555d86f331f0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x555d86f331d0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x555d86f33248 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f33040 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x555d86f33260 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x555d86f33088 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x555d86f33278 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x555d86f330c0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x555d86f33290 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x555d86f331b8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x555d86f331a0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x555d86f33158 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x555d86f33570 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x555d86f334d8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x555d86f334a8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x555d86f33448 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x555d86f33418 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x555d86f333c8 <col:54, col:63> 'char [48]' lvalue ->c 0x555d86f223c0
|     |     |   `-CXXMemberCallExpr 0x555d86f333a8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x555d86f33378 <col:54> '<bound member function type>' ->xanno 0x555d86f176a8
|     |     |       `-CXXThisExpr 0x555d86f33368 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x555d86f33430 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x555d86f333f8 <col:67> 'int' lvalue ParmVar 0x555d86f1b5d0 'i' 'int'
|     `-CXXConstCastExpr 0x555d86f33540 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x555d86f33528 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x555d86f334f0 <col:91> 'const void *' lvalue ParmVar 0x555d86f1b650 'x' 'const void *'
|-CXXMethodDecl 0x555d86f1b7f8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x555d86f33618 <col:34, line:640:5>
|   `-ReturnStmt 0x555d86f33608 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x555d86f335f0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x555d86f335c0 <col:16> 'Packet *' lvalue ->_data_packet 0x555d86f22f78
|         `-CXXThisExpr 0x555d86f335b0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x555d86f1b938 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x555d86f1b8a8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x555d86f2c6d8 <col:46> 'bool' true
|-CXXMethodDecl 0x555d86f1bab8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x555d86f1b9f0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x555d86f1bb60 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x555d86f1c310 <line:660:22> "" ""
| |-EnumConstantDecl 0x555d86f1bc60 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x555d86f1c380 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f1bc40 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x555d86f1bc20 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x555d86f10dc0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x555d86f1bcf0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x555d86f1c398 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f1bcd0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x555d86f1bcb0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x555d86f10e50 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x555d86f1bd80 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x555d86f1c3b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f1bd60 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x555d86f1bd40 <col:21> 'int' 0
| |-EnumConstantDecl 0x555d86f1be10 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x555d86f1c3c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f1bdf0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x555d86f1bdd0 <col:19> 'int' 16
| |-EnumConstantDecl 0x555d86f1bea0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x555d86f1c3e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f1be80 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x555d86f1be60 <col:21> 'int' 16
| |-EnumConstantDecl 0x555d86f1bf30 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x555d86f1c3f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f1bf10 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x555d86f1bef0 <col:19> 'int' 32
| |-EnumConstantDecl 0x555d86f1bfc0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x555d86f1c410 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f1bfa0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x555d86f1bf80 <col:19> 'int' EnumConstant 0x555d86f1be10 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x555d86f1c050 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x555d86f1c428 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f1c030 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x555d86f1c010 <col:19> 'int' EnumConstant 0x555d86f1bf30 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x555d86f1c120 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x555d86f1c440 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f1c100 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x555d86f1c0e0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x555d86f1c0a0 <col:23> 'int' EnumConstant 0x555d86f1c050 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x555d86f1c0c0 <col:40> 'int' 2
| |-EnumConstantDecl 0x555d86f1c1f0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x555d86f1c458 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x555d86f1c1d0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x555d86f1c1b0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x555d86f1c170 <col:23> 'int' EnumConstant 0x555d86f1c050 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x555d86f1c190 <col:40> 'int' 4
| `-EnumConstantDecl 0x555d86f1c2c0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x555d86f1c470 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555d86f1c2a0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x555d86f1c280 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x555d86f1c240 <col:23> 'int' EnumConstant 0x555d86f1c050 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x555d86f1c260 <col:40> 'int' 8
|-CXXMethodDecl 0x555d86f1c4b0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x555d86f1c550 <col:68> "" ""
|-CXXMethodDecl 0x555d86f1c5e8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x555d86f1c688 <col:45> "" ""
|-CXXMethodDecl 0x555d86f1c720 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x555d86f1c7c0 <col:57> "" ""
|-CXXMethodDecl 0x555d86f1c858 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x555d86f1c8f8 <col:45> "" ""
|-CXXMethodDecl 0x555d86f1c990 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x555d86f1ca30 <col:57> "" ""
|-CXXMethodDecl 0x555d86f1cac0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x555d86f1cb60 <col:51> "" ""
|-CXXMethodDecl 0x555d86f1cbf0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x555d86f1cc90 <col:63> "" ""
|-CXXMethodDecl 0x555d86f1cd20 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x555d86f1cdc0 <col:53> "" ""
|-CXXMethodDecl 0x555d86f1ce50 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x555d86f1cef0 <col:65> "" ""
|-CXXMethodDecl 0x555d86f1d008 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x555d86f1cf78 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x555d86f1d0b0 <col:61> "" ""
|-CXXMethodDecl 0x555d86f1d248 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x555d86f1d138 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x555d86f1d1b0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x555d86f1d2f8 <col:67> "" ""
|-CXXMethodDecl 0x555d86f1d410 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x555d86f1d380 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x555d86f1d4b8 <col:63> "" ""
|-CXXMethodDecl 0x555d86f1d650 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x555d86f1d540 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x555d86f1d5b8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x555d86f1d700 <col:69> "" ""
|-CXXMethodDecl 0x555d86f1d818 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x555d86f1d788 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x555d86f1d8c0 <col:63> "" ""
|-CXXMethodDecl 0x555d86f1ff98 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x555d86f1fe88 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x555d86f1ff00 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x555d86f20048 <col:69> "" ""
|-CXXMethodDecl 0x555d86f20160 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x555d86f200d0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x555d86f20208 <col:62> "" ""
|-CXXMethodDecl 0x555d86f203a0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x555d86f20290 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x555d86f20308 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x555d86f20450 <col:68> "" ""
|-CXXMethodDecl 0x555d86f20568 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x555d86f204d8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x555d86f20610 <col:63> "" ""
|-CXXMethodDecl 0x555d86f207a8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x555d86f20698 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x555d86f20710 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x555d86f20858 <col:69> "" ""
|-CXXMethodDecl 0x555d86f208e8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x555d86f20988 <col:64> "" ""
|-CXXMethodDecl 0x555d86f20a18 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x555d86f20ab8 <col:52> "" ""
|-CXXMethodDecl 0x555d86f20b48 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x555d86f20be8 <col:67> "" ""
|-CXXMethodDecl 0x555d86f20c78 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x555d86f20d18 <col:55> "" ""
|-CXXMethodDecl 0x555d86f20e30 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x555d86f20da0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x555d86f20ed8 <col:58> "" ""
|-CXXMethodDecl 0x555d86f21070 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x555d86f20f60 <col:33> col:36 'int'
| |-ParmVarDecl 0x555d86f20fd8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x555d86f21120 <col:62> "" ""
|-CXXMethodDecl 0x555d86f21238 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x555d86f211a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x555d86f212e0 <col:58> "" ""
|-CXXMethodDecl 0x555d86f21478 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x555d86f21368 <col:33> col:36 'int'
| |-ParmVarDecl 0x555d86f213e0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x555d86f21528 <col:62> "" ""
|-CXXMethodDecl 0x555d86f21640 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x555d86f215b0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x555d86f216e8 <col:60> "" ""
|-CXXMethodDecl 0x555d86f21880 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x555d86f21770 <col:34> col:37 'int'
| |-ParmVarDecl 0x555d86f217e8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x555d86f21930 <col:64> "" ""
|-CXXMethodDecl 0x555d86f21a48 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x555d86f219b8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x555d86f21af0 <col:58> "" ""
|-CXXMethodDecl 0x555d86f21c88 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x555d86f21b78 <col:33> col:36 'int'
| |-ParmVarDecl 0x555d86f21bf0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x555d86f21d38 <col:62> "" ""
|-CXXMethodDecl 0x555d86f21e50 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x555d86f21dc0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x555d86f21ef8 <col:59> "" ""
|-CXXMethodDecl 0x555d86f22090 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x555d86f21f80 <col:33> col:36 'int'
| |-ParmVarDecl 0x555d86f21ff8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x555d86f22140 <col:63> "" ""
|-AccessSpecDecl 0x555d86f221b0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x555d86f221d8 prev 0x555d86f173e0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x555d86f222d0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x555d86f223c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x555d86f224e8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x555d86f22668 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x555d86f227e8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x555d86f22968 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x555d86f33798 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x555d86f34008 <col:11>
| |-CXXDestructorDecl 0x555d86f33870 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x555d86f339a8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x555d86f339a8
| | `-ParmVarDecl 0x555d86f33ab8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x555d86f33b58 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x555d86f33b58
| | `-ParmVarDecl 0x555d86f33c68 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x555d86f36a28 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x555d86f36b38 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x555d86f36db8 <col:11>
| |   `-ReturnStmt 0x555d86f36da8 <col:11>
| |     `-UnaryOperator 0x555d86f36d90 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x555d86f36d80 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x555d86f36ba8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x555d86f36ba8
|   `-ParmVarDecl 0x555d86f36cb8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x555d86f229d0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x555d86f22ae8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x555d86f22b88 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x555d86f22bf0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x555d86f22c58 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x555d86f22cc0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x555d86f22d20 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x555d86f22de0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x555d86f22e40 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x555d86f22ea0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x555d86f336a8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x555d86f22b88 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x555d86f34018 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x555d86f34070 <col:12>
| |-CXXConstructorDecl 0x555d86f33cd8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x555d86f33cd8
| | `-ParmVarDecl 0x555d86f33de8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x555d86f33e88 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x555d86f33e88
| | `-ParmVarDecl 0x555d86f33f98 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x555d86f36110 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x555d86f22f18 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x555d86f22f78 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x555d86f22fe0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x555d86f23048 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x555d86f230b0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x555d86f23118 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x555d86f23178 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x555d86f231d8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x555d86f23240 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x555d86f232c8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x555d86f22f18 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x555d86f33640 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x555d86f23178 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x555d86f34080 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x555d86f340e0 <col:21, line:755:5>
|-CXXConstructorDecl 0x555d86f23468 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x555d86f233a8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x555d86f23560 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x555d86f23748 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x555d86f23650 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x555d86f23a18 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x555d86f23800 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x555d86f23878 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x555d86f238f0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86f23c38 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x555d86f23ae8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x555d86f23b60 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x555d86f2c218 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x555d86f23cf8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x555d86f23d70 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x555d86f23de8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x555d86f2c370 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x555d86f2c2e0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x555d86f2c4b8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x555d86f2c428 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x555d86f2c5b0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555d86d1d7a0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x555d86d1d8b8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x555d86d1d958 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x555d86d1d9b8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x555d86d1da18 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x555d86d1dac8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555d86d1ddd0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x555d86d1dee8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x555d86d1df90 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x555d86d1dff8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x555d86d1e088 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x555d86d24120 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x555d86d24558 <col:12>
|-CXXConstructorDecl 0x555d86d24228 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x555d86d24338 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x555d86d1df90 'data' 'const char *'
| | `-ImplicitCastExpr 0x555d86d26ae0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x555d86d26ab0 <col:12> 'const char *const' lvalue .data 0x555d86d1df90
| |     `-DeclRefExpr 0x555d86d26a90 <col:12> 'const String::rep_t' lvalue ParmVar 0x555d86d24338 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x555d86d1dff8 'length' 'int'
| | `-ImplicitCastExpr 0x555d86d26b70 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x555d86d26b40 <col:12> 'const int' lvalue .length 0x555d86d1dff8
| |     `-DeclRefExpr 0x555d86d26b20 <col:12> 'const String::rep_t' lvalue ParmVar 0x555d86d24338 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x555d86d1e088 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x555d86d26c00 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x555d86d26bd0 <col:12> 'String::memo_t *const' lvalue .memo 0x555d86d1e088
| |     `-DeclRefExpr 0x555d86d26bb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x555d86d24338 '' 'const String::rep_t &'
| `-CompoundStmt 0x555d86d26c58 <col:12>
|-CXXConstructorDecl 0x555d86d243d8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x555d86d243d8
| `-ParmVarDecl 0x555d86d244e8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x555d86d29a40 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x555d86d35458 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x555d86d35568 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x555d86d35a80 <col:12>
|   |-BinaryOperator 0x555d86d35898 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x555d86d35850 <col:12> 'const char *' lvalue ->data 0x555d86d1df90
|   | | `-CXXThisExpr 0x555d86d35840 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x555d86d35880 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x555d86d35810 <col:12> 'const char *const' lvalue .data 0x555d86d1df90
|   |     `-DeclRefExpr 0x555d86d357f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x555d86d35568 '' 'const String::rep_t &'
|   |-BinaryOperator 0x555d86d35960 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x555d86d35918 <col:12> 'int' lvalue ->length 0x555d86d1dff8
|   | | `-CXXThisExpr 0x555d86d35908 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x555d86d35948 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x555d86d358d8 <col:12> 'const int' lvalue .length 0x555d86d1dff8
|   |     `-DeclRefExpr 0x555d86d358b8 <col:12> 'const String::rep_t' lvalue ParmVar 0x555d86d35568 '' 'const String::rep_t &'
|   |-BinaryOperator 0x555d86d35a28 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x555d86d359e0 <col:12> 'String::memo_t *' lvalue ->memo 0x555d86d1e088
|   | | `-CXXThisExpr 0x555d86d359d0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x555d86d35a10 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x555d86d359a0 <col:12> 'String::memo_t *const' lvalue .memo 0x555d86d1e088
|   |     `-DeclRefExpr 0x555d86d35980 <col:12> 'const String::rep_t' lvalue ParmVar 0x555d86d35568 '' 'const String::rep_t &'
|   `-ReturnStmt 0x555d86d35a70 <col:12>
|     `-UnaryOperator 0x555d86d35a58 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x555d86d35a48 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x555d86d355d8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x555d86d355d8
  `-ParmVarDecl 0x555d86d356e8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x555d86d14d10 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x555d86d14e28 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x555d86d14eb8 <col:16, col:22> col:16 public
|-TypedefDecl 0x555d86d14ef8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x555d869eafd0 'const char *'
|   `-QualType 0x555d869ea521 'const char' const
|     `-BuiltinType 0x555d869ea520 'char'
|-TypedefDecl 0x555d86d14f80 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x555d86d14f50 'String::const_iterator' sugar
|   |-Typedef 0x555d86d14ef8 'const_iterator'
|   `-PointerType 0x555d869eafd0 'const char *'
|     `-QualType 0x555d869ea521 'const char' const
|       `-BuiltinType 0x555d869ea520 'char'
|-TypedefDecl 0x555d86d150f0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x555d86d15060 'int (String::*)() const'
|   |-RecordType 0x555d86d14da0 'String'
|   | `-CXXRecord 0x555d86d14d10 'String'
|   `-ParenType 0x555d86d15000 'int () const' sugar
|     `-FunctionProtoType 0x555d86ce8b90 'int () const' const cdecl
|       `-BuiltinType 0x555d869ea580 'int'
|-TypedefDecl 0x555d86d15158 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x555d86b3d770 'int64_t' sugar
|   |-Typedef 0x555d86a53390 'int64_t'
|   `-TypedefType 0x555d86a2c630 '__int64_t' sugar
|     |-Typedef 0x555d86a2c208 '__int64_t'
|     `-BuiltinType 0x555d869ea5a0 'long'
|-TypedefDecl 0x555d86d151c0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x555d86b3d690 'uint64_t' sugar
|   |-Typedef 0x555d86a53530 'uint64_t'
|   `-TypedefType 0x555d86a2c6c0 '__uint64_t' sugar
|     |-Typedef 0x555d86a2c278 '__uint64_t'
|     `-BuiltinType 0x555d869ea640 'unsigned long'
|-TypedefDecl 0x555d86d15250 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x555d86d15220 'String::intmax_t' sugar
|   |-Typedef 0x555d86d15158 'intmax_t'
|   `-TypedefType 0x555d86b3d770 'int64_t' sugar
|     |-Typedef 0x555d86a53390 'int64_t'
|     `-TypedefType 0x555d86a2c630 '__int64_t' sugar
|       |-Typedef 0x555d86a2c208 '__int64_t'
|       `-BuiltinType 0x555d869ea5a0 'long'
|-TypedefDecl 0x555d86d152e0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x555d86d152b0 'String::uintmax_t' sugar
|   |-Typedef 0x555d86d151c0 'uintmax_t'
|   `-TypedefType 0x555d86b3d690 'uint64_t' sugar
|     |-Typedef 0x555d86a53530 'uint64_t'
|     `-TypedefType 0x555d86a2c6c0 '__uint64_t' sugar
|       |-Typedef 0x555d86a2c278 '__uint64_t'
|       `-BuiltinType 0x555d869ea640 'unsigned long'
|-CXXConstructorDecl 0x555d86d153a0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x555d86d15548 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x555d86d15488 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x555d86d156f8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x555d86d15638 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x555d86d15850 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x555d86d157c0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x555d86d15a68 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x555d86d15918 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x555d86d15998 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x555d86d15c88 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x555d86d15b38 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x555d86d15bb8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x555d86d15ea8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x555d86d15d58 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x555d86d15dd8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x555d86d160c8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x555d86d15f78 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x555d86d15ff8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x555d86d16258 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x555d86d16190 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x555d86d163d8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x555d86d16318 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x555d86d16568 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x555d86d164a0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x555d86d166c0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x555d86d16630 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x555d86d16818 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x555d86d16788 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x555d86d16970 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x555d86d168e0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x555d86d16af8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x555d86d16a38 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x555d86d16c88 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x555d86d16bc0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x555d86d16e18 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x555d86d16d50 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x555d86d16fa8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x555d86d16ee0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x555d86d170a0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x555d86d171c8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x555d86d17348 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x555d86d17280 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x555d86d17498 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x555d86d17408 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x555d86d17550 <col:63> "" ""
|-CXXMethodDecl 0x555d86d17698 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x555d86d175d8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x555d86d178a8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x555d86d17758 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x555d86d177d8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x555d86d17ac8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x555d86d17970 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x555d86d179f0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x555d86d17da8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x555d86d17b88 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x555d86d17c08 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x555d86d23bf0 <col:55> 'int' 10
| `-ParmVarDecl 0x555d86d17c80 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x555d86d23c10 <col:76> 'bool' true
|-CXXMethodDecl 0x555d86d18088 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x555d86d17e70 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x555d86d17ef0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x555d86d23c20 <col:56> 'int' 10
| `-ParmVarDecl 0x555d86d17f68 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x555d86d23c40 <col:77> 'bool' true
|-CXXMethodDecl 0x555d86d18190 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x555d86d18258 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x555d86d18320 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x555d86d183c0 <col:20>
| `-OptimizeNoneAttr 0x555d86d18418 <col:30>
|-CXXConversionDecl 0x555d86d18508 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x555d86d185d8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x555d86d18698 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x555d86d18788 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x555d86d18848 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x555d86d189c8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x555d86d18900 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x555d86d18b18 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x555d86d18a88 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x555d86d18c08 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x555d86d18cc8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x555d86d18f18 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x555d86d18d80 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x555d86d18e00 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x555d86d19178 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x555d86d18fe0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x555d86d19060 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x555d86d19248 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x555d86d19458 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x555d86d19300 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x555d86d19380 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x555d86d19678 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x555d86d19520 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x555d86d195a0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x555d86d19808 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x555d86d19740 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x555d86d198f8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x555d86d19a68 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x555d86d199a8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x555d86d19c78 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x555d86d19b28 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x555d86d19ba8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x555d86d19e90 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x555d86d19d38 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x555d86d19db0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x555d86d1a020 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x555d86d19f50 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x555d86d1a240 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x555d86d1a0e0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x555d86d1a160 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x555d86d1a390 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x555d86d1a300 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x555d86d1a568 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x555d86d1a450 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x555d86d1a4d0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x555d86d1a6b8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x555d86d1a628 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x555d86d1a8d0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x555d86d1a770 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x555d86d1a7f0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x555d86d23c50 <col:39> 'int' 0
|-CXXMethodDecl 0x555d86d1aaf0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x555d86d1a990 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x555d86d1aa10 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x555d86d23c70 <col:48> 'int' 0
|-CXXMethodDecl 0x555d86d1acd0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x555d86d1abb0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x555d86d1ac30 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x555d86d23c90 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x555d86d1ada0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x555d86d1ae60 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x555d86d1af20 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x555d86d1afe0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x555d86d1b0a0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x555d86d1b248 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x555d86d1b150 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x555d86d1b3c8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x555d86d1b300 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x555d86d1b5a0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x555d86d1b488 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x555d86d1b718 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x555d86d1b658 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x555d86d1b860 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x555d86d1b7d0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x555d86d1b9b0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x555d86d1b920 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x555d86d1bb88 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x555d86d1ba70 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x555d86d1baf0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x555d86d1bd68 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x555d86d1bc50 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x555d86d1bcd0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x555d86d1beb8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x555d86d1be28 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x555d86d1c0c8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x555d86d1bf78 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x555d86d1bff8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x555d86d1c228 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x555d86d1c190 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x555d86d1c380 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x555d86d1c2e8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x555d86d1c428 <col:57> "" ""
|-CXXMethodDecl 0x555d86d1c538 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x555d86d1c4a8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x555d86d1c688 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x555d86d1c5f8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x555d86d1c808 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x555d86d1c740 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x555d86d1c8d0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x555d86d1c990 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x555d86d1ca50 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x555d86d1caf0 <col:49> "" ""
|-CXXMethodDecl 0x555d86d1cb80 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x555d86d1cc40 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x555d86d1cd30 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x555d86d1cdf8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x555d86d1ceb8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x555d86d1cf78 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x555d86d1d070 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x555d86d1d138 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x555d86d1d200 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x555d86d1d3d8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x555d86d1d2b8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x555d86d1d338 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x555d86d1d600 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x555d86d1d4a0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x555d86d1d520 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x555d86d1d710 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x555d86d1d778 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x555d86d1d7a0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x555d86d1d8b8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x555d86d1d958 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x555d86d1d9b8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x555d86d1da18 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x555d86d1dac8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x555d86d1db30 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x555d86d1dd68 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x555d86d1ddb8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555d86d1dd48 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x555d86d1dc58 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x555d86d1dc00 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x555d86d1dc40 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x555d86d1dc20 <col:32> 'int' 8
|-CXXRecordDecl 0x555d86d1ddd0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x555d86d1dee8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x555d86d1df90 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x555d86d1dff8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x555d86d1e088 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x555d86d24120 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x555d86d24558 <col:12>
| |-CXXConstructorDecl 0x555d86d24228 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x555d86d24338 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x555d86d1df90 'data' 'const char *'
| | | `-ImplicitCastExpr 0x555d86d26ae0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x555d86d26ab0 <col:12> 'const char *const' lvalue .data 0x555d86d1df90
| | |     `-DeclRefExpr 0x555d86d26a90 <col:12> 'const String::rep_t' lvalue ParmVar 0x555d86d24338 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x555d86d1dff8 'length' 'int'
| | | `-ImplicitCastExpr 0x555d86d26b70 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x555d86d26b40 <col:12> 'const int' lvalue .length 0x555d86d1dff8
| | |     `-DeclRefExpr 0x555d86d26b20 <col:12> 'const String::rep_t' lvalue ParmVar 0x555d86d24338 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x555d86d1e088 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x555d86d26c00 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x555d86d26bd0 <col:12> 'String::memo_t *const' lvalue .memo 0x555d86d1e088
| | |     `-DeclRefExpr 0x555d86d26bb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x555d86d24338 '' 'const String::rep_t &'
| | `-CompoundStmt 0x555d86d26c58 <col:12>
| |-CXXConstructorDecl 0x555d86d243d8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x555d86d243d8
| | `-ParmVarDecl 0x555d86d244e8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x555d86d29a40 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x555d86d35458 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x555d86d35568 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x555d86d35a80 <col:12>
| |   |-BinaryOperator 0x555d86d35898 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x555d86d35850 <col:12> 'const char *' lvalue ->data 0x555d86d1df90
| |   | | `-CXXThisExpr 0x555d86d35840 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x555d86d35880 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x555d86d35810 <col:12> 'const char *const' lvalue .data 0x555d86d1df90
| |   |     `-DeclRefExpr 0x555d86d357f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x555d86d35568 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x555d86d35960 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x555d86d35918 <col:12> 'int' lvalue ->length 0x555d86d1dff8
| |   | | `-CXXThisExpr 0x555d86d35908 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x555d86d35948 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x555d86d358d8 <col:12> 'const int' lvalue .length 0x555d86d1dff8
| |   |     `-DeclRefExpr 0x555d86d358b8 <col:12> 'const String::rep_t' lvalue ParmVar 0x555d86d35568 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x555d86d35a28 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x555d86d359e0 <col:12> 'String::memo_t *' lvalue ->memo 0x555d86d1e088
| |   | | `-CXXThisExpr 0x555d86d359d0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x555d86d35a10 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x555d86d359a0 <col:12> 'String::memo_t *const' lvalue .memo 0x555d86d1e088
| |   |     `-DeclRefExpr 0x555d86d35980 <col:12> 'const String::rep_t' lvalue ParmVar 0x555d86d35568 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x555d86d35a70 <col:12>
| |     `-UnaryOperator 0x555d86d35a58 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x555d86d35a48 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x555d86d355d8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x555d86d355d8
|   `-ParmVarDecl 0x555d86d356e8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x555d86d1e100 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x555d86d1e348 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x555d86d1e168 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x555d86d1e1e8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x555d86d1e260 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x555d86d240e0 <col:79, line:261:5>
|   |-BinaryOperator 0x555d86d23d58 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x555d86d23cf0 <col:2, col:5> 'const char *' lvalue .data 0x555d86d1df90
|   | | `-MemberExpr 0x555d86d23cc0 <col:2> 'String::rep_t' lvalue ->_r 0x555d86d1e100
|   | |   `-CXXThisExpr 0x555d86d23cb0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x555d86d23d40 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x555d86d23d20 <col:12> 'const char *' lvalue ParmVar 0x555d86d1e168 'data' 'const char *'
|   |-BinaryOperator 0x555d86d23e20 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x555d86d23db8 <col:2, col:5> 'int' lvalue .length 0x555d86d1dff8
|   | | `-MemberExpr 0x555d86d23d88 <col:2> 'String::rep_t' lvalue ->_r 0x555d86d1e100
|   | |   `-CXXThisExpr 0x555d86d23d78 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x555d86d23e08 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555d86d23de8 <col:14> 'int' lvalue ParmVar 0x555d86d1e1e8 'length' 'int'
|   `-IfStmt 0x555d86d240c8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x555d86d23f40 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x555d86d23f28 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x555d86d23f08 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x555d86d23ee8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x555d86d23e80 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x555d86d1e088
|     |       | `-MemberExpr 0x555d86d23e50 <col:7> 'String::rep_t' lvalue ->_r 0x555d86d1e100
|     |       |   `-CXXThisExpr 0x555d86d23e40 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x555d86d23ed0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x555d86d23eb0 <col:17> 'String::memo_t *' lvalue ParmVar 0x555d86d1e260 'memo' 'String::memo_t *'
|     `-CallExpr 0x555d86d240a0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x555d86d24088 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x555d86d23f90 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x555d86d0cd78 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x555d86d23ff8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x555d86d1d958
|         `-ImplicitCastExpr 0x555d86d23fe0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x555d86d23fc0 <col:27> 'String::memo_t *' lvalue ParmVar 0x555d86d1e260 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x555d86d1e5f8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x555d86d1e418 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x555d86d1e498 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x555d86d1e510 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x555d86d1e100 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x555d86d24568 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x555d86d246f8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x555d86d24660 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x555d86d245d0 <col:2> '<bound member function type>' ->assign_memo 0x555d86d1e348
|     | `-ImplicitCastExpr 0x555d86d24698 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x555d86d245c0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x555d86d246b0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x555d86d24600 <col:14> 'const char *' lvalue ParmVar 0x555d86d1e418 'data' 'const char *'
|     |-ImplicitCastExpr 0x555d86d246c8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x555d86d24620 <col:20> 'int' lvalue ParmVar 0x555d86d1e498 'length' 'int'
|     `-ImplicitCastExpr 0x555d86d246e0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x555d86d24640 <col:28> 'String::memo_t *' lvalue ParmVar 0x555d86d1e510 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x555d86d1e788 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x555d86d1e6c8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x555d86d24950 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x555d86d248d0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x555d86d24720 <col:2> '<bound member function type>' ->assign_memo 0x555d86d1e348
|     | `-CXXThisExpr 0x555d86d24710 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x555d86d24908 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x555d86d247a0 <col:14, col:19> 'const char *' lvalue .data 0x555d86d1df90
|     |   `-MemberExpr 0x555d86d24770 <col:14, col:16> 'String::rep_t' lvalue ._r 0x555d86d1e100
|     |     `-DeclRefExpr 0x555d86d24750 <col:14> 'const String' lvalue ParmVar 0x555d86d1e6c8 'x' 'const String &'
|     |-ImplicitCastExpr 0x555d86d24920 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x555d86d24820 <col:25, col:30> 'int' lvalue .length 0x555d86d1dff8
|     |   `-MemberExpr 0x555d86d247f0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x555d86d1e100
|     |     `-DeclRefExpr 0x555d86d247d0 <col:25> 'const String' lvalue ParmVar 0x555d86d1e6c8 'x' 'const String &'
|     `-ImplicitCastExpr 0x555d86d24938 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x555d86d248a0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x555d86d1e088
|         `-MemberExpr 0x555d86d24870 <col:38, col:40> 'String::rep_t' lvalue ._r 0x555d86d1e100
|           `-DeclRefExpr 0x555d86d24850 <col:38> 'const String' lvalue ParmVar 0x555d86d1e6c8 'x' 'const String &'
|-CXXMethodDecl 0x555d86d1e850 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x555d86d25310 <col:31, line:278:5>
|   `-IfStmt 0x555d86d252f8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x555d86d249f0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x555d86d249d8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x555d86d249a8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x555d86d1e088
|     |     `-MemberExpr 0x555d86d24978 <col:6> 'String::rep_t' lvalue ->_r 0x555d86d1e100
|     |       `-CXXThisExpr 0x555d86d24968 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x555d86d252d0 <col:15, line:277:2>
|       |-ParenExpr 0x555d86d24ea0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x555d86d24e70 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x555d86d24b00 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x555d86d24ae8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x555d86d24ad0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x555d86d24a90 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x555d86d1d958
|       |   |       `-ImplicitCastExpr 0x555d86d24a78 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x555d86d24a48 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x555d86d1e088
|       |   |           `-MemberExpr 0x555d86d24a18 <col:27> 'String::rep_t' lvalue ->_r 0x555d86d1e100
|       |   |             `-CXXThisExpr 0x555d86d24a08 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x555d86d24b60 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x555d86d24b40 <col:54> 'int' 0
|       |   `-CallExpr 0x555d86d24dd0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x555d86d24db8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x555d86d24d38 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x555d86a83f80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x555d86d24e10 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x555d86d24c48 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x555d86d24e28 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x555d86d24c78 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x555d86d24e40 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x555d86d24cb0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x555d86d24e58 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x555d86d24d20 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x555d86d24d08 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x555d86d24cd0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x555d86d251f0 <line:274:6, line:275:22>
|       | |-CallExpr 0x555d86d250b0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x555d86d25098 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x555d86d25010 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x555d86d0e1c0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x555d86d24fe0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x555d86d1d958
|       | |   `-ImplicitCastExpr 0x555d86d24fc8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x555d86d24f98 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x555d86d1e088
|       | |       `-MemberExpr 0x555d86d24f68 <col:40> 'String::rep_t' lvalue ->_r 0x555d86d1e100
|       | |         `-CXXThisExpr 0x555d86d24f58 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x555d86d251b0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x555d86d25198 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x555d86d250d8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x555d86d23030 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x555d86d251d8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x555d86d25138 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x555d86d1e088
|       |       `-MemberExpr 0x555d86d25108 <col:15> 'String::rep_t' lvalue ->_r 0x555d86d1e100
|       |         `-CXXThisExpr 0x555d86d250f8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x555d86d252b0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x555d86d25248 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x555d86d1e088
|         | `-MemberExpr 0x555d86d25218 <col:6> 'String::rep_t' lvalue ->_r 0x555d86d1e100
|         |   `-CXXThisExpr 0x555d86d25208 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x555d86d25298 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x555d86d25278 <col:16> 'int' 0
|-CXXMethodDecl 0x555d86d1eae8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x555d86d1e908 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x555d86d1e988 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x555d86d1ea00 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x555d86d1ebc0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x555d86d1ee10 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x555d86d1ec78 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x555d86d1ecf8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x555d86d1ed70 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x555d86d1eff8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x555d86d1eee0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x555d86d1ef60 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x555d86d1f0f8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x555d86d253e8 <col:41, line:286:5>
|   `-ReturnStmt 0x555d86d253d8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x555d86d253a8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x555d86d25370 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x555d86d25358 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x555d86d25338 <col:46> 'int' 1
|-CXXMethodDecl 0x555d86d1f398 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x555d86d1f1b0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x555d86d1f230 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x555d86d1f2b0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x555d86d23030 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x555d86d1f460 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x555d86d23100 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x555d86d232d0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x555d86d231b8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x555d86d23238 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x555d86d23390 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x555d86d23458 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x555d86d23558 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x555d86d235d0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x555d86d23648 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x555d86d236b0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x555d86d237b0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x555d86d23800 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x555d86d23790 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x555d86d23770 <col:22> 'int' 14
|-CXXMethodDecl 0x555d86d23a18 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x555d86d23830 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x555d86d238b0 <col:38> col:41 'int'
| `-ParmVarDecl 0x555d86d23930 <col:43> col:46 'int'
|-FriendDecl 0x555d86d23b20 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x555d86d23bb0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
