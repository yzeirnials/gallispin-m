
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55edd8e84dd8 prev 0x55edd8e7c578 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55edd8e84ed0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55edd8e84f60 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55edd8e84fd8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55edd8e85098 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55edd8e85160 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55edd8e852d8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55edd8e85210 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55edd8e85380 <col:24>
| `-OptimizeNoneAttr 0x55edd8e853d8 <col:34>
|-CXXMethodDecl 0x55edd8e85420 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55edd8e856d8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55edd8e854d0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55edd8e85548 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55edd8e855c8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55edd8e85790 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55edd8e857c8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55edd8e85830 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55edd8e858b8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55edd8e85bd8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55edd8e85970 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55edd8e859e8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55edd8e85a60 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55edd8e85ae0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55edd8e85cf0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55edd8e8d668 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55edd8e8d668
| `-ParmVarDecl 0x55edd8e8d778 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55edd8e8d818 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55edd8e8d818
| `-ParmVarDecl 0x55edd8e8d928 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55edd8df9f80 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55edd8e77df0 prev 0x55edd8e77b70 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55edd8e77ee8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55edd8e77f78 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55edd8e77fd8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55edd8e780c8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55edd8e781c8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55edd8e78398 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55edd8e78248 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55edd8e782c0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55edd8e78528 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55edd8e78460 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55edd8e785d0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55edd8e78708 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55edd8e78640 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55edd8e788a8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55edd8e787e8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55edd8e78a48 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55edd8e78988 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55edd8e78af0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55edd8e78bf0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55edd8e78cd0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e78bd0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55edd8e78bb0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55edd8e78c80 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55edd8e78ce8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55edd8e78c60 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55edd8e78c40 <col:44> 'int' 2
|-CXXMethodDecl 0x55edd8e78e30 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55edd8e78d18 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55edd8e78d98 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55edd8e78f88 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55edd8e78ef8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55edd8e791c8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55edd8e79048 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55edd8e790c0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55edd8e79278 <col:20>
| `-OptimizeNoneAttr 0x55edd8e792d0 <col:30>
|-CXXMethodDecl 0x55edd8e793d8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55edd8e79310 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55edd8e79480 <col:20>
| `-OptimizeNoneAttr 0x55edd8e794d8 <col:30>
|-CXXMethodDecl 0x55edd8e79528 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55edd8e795f0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55edd8e79708 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55edd8e79790 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55edd8e79818 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55edd8e798a0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x55edd8e79928 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55edd8e799b8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55edd8e79a78 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55edd8e79b00 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55edd8e79b88 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55edd8e79c10 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55edd8e79c98 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55edd8e79d20 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55edd8e79db0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55edd8e79e70 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55edd8e79f00 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55edd8e7a050 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55edd8e79fb8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55edd8e7a1e0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55edd8e7a110 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55edd8e7a490 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55edd8e7a298 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55edd8e7a318 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55edd8e7a398 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55edd8e7a548 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55edd8e7a650 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55edd8e7a8e0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e7a630 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55edd8e7a610 <col:33> 'int' 0
| |-EnumConstantDecl 0x55edd8e7a6e0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55edd8e7a8f8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e7a6c0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55edd8e7a6a0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55edd8e7a770 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55edd8e7a910 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e7a750 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55edd8e7a730 <col:38> 'int' 90
| |-EnumConstantDecl 0x55edd8e7a800 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55edd8e7a928 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e7a7e0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55edd8e7a7c0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55edd8e7a890 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55edd8e7a940 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55edd8e7a870 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55edd8e7a850 <col:32> 'int' 2000
|-CXXMethodDecl 0x55edd8e7a980 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55edd8e7adc0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55edd8e7ac30 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55edd8e7aca8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55edd8e7ae90 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55edd8e7b010 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55edd8e7af40 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55edd8e7b218 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55edd8e7b0c8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55edd8e7b140 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55edd8e7b318 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55edd8e7b3b8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55edd8e7b480 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55edd8e7b510 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55edd8e7b740 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e7b4f0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55edd8e7b4d0 <col:36> 'int' EnumConstant 0x55edd8e7b480 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55edd8e7b560 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55edd8e7b5b0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55edd8e7b600 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55edd8e7b650 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55edd8e7b6a0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55edd8e7b6f0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55edd8e7b828 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55edd8e7b768 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55edd8e7b8f0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55edd8e7b9b0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55edd8e7ba70 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55edd8e7bb30 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55edd8e7bc48 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55edd8e7bd10 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55edd8e7be90 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55edd8e7bdc0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55edd8e7bfb8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55edd8e7c1b8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55edd8e7c068 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55edd8e7c0e8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55edd8e89b08 <col:54, line:127:5>
|   |-ParenExpr 0x55edd8e899b8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55edd8e89988 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e89678 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55edd8e89650 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55edd8e89638 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55edd8e89620 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55edd8e895f0 <col:31> 'Router *' lvalue ->_router 0x55edd8e874d0
|   |   |         `-CXXThisExpr 0x55edd8e895e0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55edd8e896d8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e896b8 <col:48> 'int' 0
|   |   `-CallExpr 0x55edd8e898e8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e898d0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e898b0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e89928 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e89748 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55edd8e89940 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e89768 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55edd8e89958 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e897a0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55edd8e89970 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e89898 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e89880 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e89838 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55edd8e89a50 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55edd8e899e8 <col:9> 'Router *' lvalue ->_router 0x55edd8e874d0
|   | | `-CXXThisExpr 0x55edd8e899d8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55edd8e89a38 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55edd8e89a18 <col:19> 'Router *' lvalue ParmVar 0x55edd8e7c068 'r' 'Router *'
|   `-BinaryOperator 0x55edd8e89ae8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55edd8e89a80 <col:9> 'int' lvalue ->_eindex 0x55edd8e87538
|     | `-CXXThisExpr 0x55edd8e89a70 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55edd8e89ad0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55edd8e89ab0 <col:19> 'int' lvalue ParmVar 0x55edd8e7c0e8 'eindex' 'int'
|-CXXMethodDecl 0x55edd8e7c340 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55edd8e7c278 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55edd8e7c410 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55edd8e7c4d8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55edd8e7c578 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55edd8e7c7c8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55edd8e7c640 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55edd8e7c6c0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55edd8e7c878 <col:20>
| `-OptimizeNoneAttr 0x55edd8e7c8d0 <col:30>
|-CXXMethodDecl 0x55edd8e7c9d8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55edd8e7c910 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55edd8e7ca80 <col:20>
| `-OptimizeNoneAttr 0x55edd8e7cad8 <col:30>
|-CXXMethodDecl 0x55edd8e7cba8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55edd8e7cb18 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55edd8e7cc50 <col:20>
| `-OptimizeNoneAttr 0x55edd8e7cca8 <col:30>
|-CXXMethodDecl 0x55edd8e7ce38 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55edd8e7cce0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55edd8e7cd60 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55edd8e7cfc8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55edd8e7cf00 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55edd8e7d118 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55edd8e7d088 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55edd8e7d268 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55edd8e7d1d8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55edd8e7d3b8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55edd8e7d328 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55edd8e7d678 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55edd8e7d470 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55edd8e7d4f0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55edd8e7d598 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55edd8e7d750 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55edd8e7d810 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55edd8e7dae0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55edd8e7d990 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55edd8e7da08 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55edd8e7dc08 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55edd8e7dde0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55edd8e7dcc0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55edd8e7dd40 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55edd8e7dfc8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55edd8e7dea8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55edd8e7df28 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55edd8e7e338 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55edd8e7e088 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55edd8e7e100 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55edd8e7e180 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55edd8e890f0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55edd8e890d0 <col:106> 'int' 0
| `-ParmVarDecl 0x55edd8e7e1f8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55edd8e89128 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55edd8e89108 <col:126> 'int' 0
|-CXXMethodDecl 0x55edd8e7e6d8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55edd8e7e408 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55edd8e7e4a0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55edd8e7e520 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55edd8e7e598 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55edd8e89160 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55edd8e89140 <col:114> 'int' 0
|-CXXMethodDecl 0x55edd8e7ea68 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55edd8e7e7b0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55edd8e7e828 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55edd8e7e8a8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55edd8e89178 <col:96> 'int' 0
| `-ParmVarDecl 0x55edd8e7e920 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55edd8e891b8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55edd8e89198 <col:116> 'int' 0
|-CXXMethodDecl 0x55edd8e7ede8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55edd8e7eb38 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55edd8e7ebb0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55edd8e7ec30 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55edd8e891f0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55edd8e891d0 <col:109> 'int' 0
| `-ParmVarDecl 0x55edd8e7eca8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55edd8e89228 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55edd8e89208 <col:129> 'int' 0
|-CXXMethodDecl 0x55edd8e7f168 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55edd8e7eeb8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55edd8e7ef30 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55edd8e7efb0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55edd8e7f028 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55edd8e89260 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55edd8e89240 <col:117> 'int' 0
|-CXXMethodDecl 0x55edd8e7f4f8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55edd8e7f240 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e7f2b8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55edd8e7f338 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55edd8e89278 <col:99> 'int' 0
| `-ParmVarDecl 0x55edd8e7f3b0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55edd8e892b8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55edd8e89298 <col:119> 'int' 0
|-CXXMethodDecl 0x55edd8e7f918 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55edd8e7f5c8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55edd8e7f648 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55edd8e7f6c0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55edd8e7f740 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55edd8e892f0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55edd8e892d0 <col:108> 'int' 0
| `-ParmVarDecl 0x55edd8e7f7c0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55edd8e89328 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55edd8e89308 <col:141> 'int' 0
|-CXXMethodDecl 0x55edd8e7fd38 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55edd8e7f9f0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55edd8e7fa70 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55edd8e7fae8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55edd8e7fb68 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55edd8e7fbe8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55edd8e89340 <col:121> 'int' 0
|-CXXMethodDecl 0x55edd8e80168 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55edd8e7fe18 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55edd8e7fe98 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55edd8e7ff10 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55edd8e7ff90 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55edd8e89360 <col:98> 'int' 0
| `-ParmVarDecl 0x55edd8e80010 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55edd8e89380 <col:123> 'int' 0
|-CXXMethodDecl 0x55edd8e80430 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55edd8e80240 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55edd8e802c0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55edd8e80340 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55edd8e893a0 <col:80> 'int' 0
|-EnumDecl 0x55edd8e804e8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55edd8e805f0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55edd8e80880 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e805d0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55edd8e805b0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55edd8e80680 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55edd8e80898 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e80660 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55edd8e80640 <col:40> 'int' 2
| |-EnumConstantDecl 0x55edd8e80710 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55edd8e808b0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e806f0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55edd8e806d0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55edd8e807a0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55edd8e808c8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e80780 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55edd8e80760 <col:36> 'int' 7
| `-EnumConstantDecl 0x55edd8e80830 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55edd8e808e0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55edd8e80810 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55edd8e807f0 <col:34> 'int' 6
|-CXXMethodDecl 0x55edd8e80b98 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55edd8e80908 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55edd8e809a8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55edd8e80a28 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55edd8e80aa0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55edd8e89458 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55edd8e89440 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55edd8e89428 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55edd8e89408 <col:98, col:105> 'String' (CXXTemporary 0x55edd8e89408)
|           `-CXXTemporaryObjectExpr 0x55edd8e893d0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55edd8e80e38 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55edd8e80c68 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55edd8e80ce0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55edd8e80d58 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55edd8e89508 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55edd8e894f0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55edd8e894d8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55edd8e894b8 <col:94, col:101> 'String' (CXXTemporary 0x55edd8e894b8)
| |         `-CXXTemporaryObjectExpr 0x55edd8e89480 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55edd8e89cf0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55edd8e89c68 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55edd8e89c38 <col:9> '<bound member function type>' ->add_task_handlers 0x55edd8e80b98
|     | `-CXXThisExpr 0x55edd8e89c28 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55edd8e89ca8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55edd8e89ba8 <col:27> 'Task *' lvalue ParmVar 0x55edd8e80c68 'task' 'Task *'
|     |-ImplicitCastExpr 0x55edd8e89cc0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55edd8e89bc8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55edd8e80ce0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55edd8e89cd8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55edd8e89be8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55edd8e80830 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55edd8e89c08 <col:62> 'const String' lvalue ParmVar 0x55edd8e80d58 'prefix' 'const String &'
|-CXXMethodDecl 0x55edd8e81048 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55edd8e80f00 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55edd8e80f78 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55edd8e895b8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55edd8e895a0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55edd8e89588 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55edd8e89568 <col:70, col:77> 'String' (CXXTemporary 0x55edd8e89568)
| |         `-CXXTemporaryObjectExpr 0x55edd8e89530 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55edd8e89ec8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55edd8e89e40 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55edd8e89e10 <col:9> '<bound member function type>' ->add_task_handlers 0x55edd8e80b98
|     | `-CXXThisExpr 0x55edd8e89e00 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55edd8e89e80 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55edd8e89d80 <col:27> 'Task *' lvalue ParmVar 0x55edd8e80f00 'task' 'Task *'
|     |-ImplicitCastExpr 0x55edd8e89e98 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55edd8e89da0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55edd8e89eb0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55edd8e89dc0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55edd8e80830 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55edd8e89de0 <col:57> 'const String' lvalue ParmVar 0x55edd8e80f78 'prefix' 'const String &'
|-CXXMethodDecl 0x55edd8e81328 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55edd8e81110 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e81190 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e81208 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55edd8e815d8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55edd8e813f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e81478 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e814f8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55edd8e818c8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55edd8e816a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e81728 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e817a0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55edd8e81b78 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55edd8e81998 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e81a18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e81a98 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55edd8e81e28 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55edd8e81c48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e81cc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e81d48 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55edd8e820d8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55edd8e81ef8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e81f78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e81ff0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55edd8e82388 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55edd8e821a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e82228 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e822a8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55edd8e82698 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55edd8e824b0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e82530 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e825b0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55edd8e82978 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55edd8e82768 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e827e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e82890 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55edd8e82c58 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55edd8e82a48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e82ac8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e82b70 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55edd8e82ec0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55edd8e82d28 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55edd8e82da8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55edd8e82e20 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55edd8e83168 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55edd8e82f90 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55edd8e83010 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55edd8e83088 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55edd8e83418 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55edd8e83238 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e832b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e83338 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55edd8e836c8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55edd8e834e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e83568 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e835e0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55edd8e83978 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55edd8e83798 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e83818 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e83890 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55edd8e83c48 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55edd8e83a48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e83ac8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55edd8e83b68 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55edd8e83f78 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55edd8e83d18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55edd8e83d98 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55edd8e83e10 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55edd8e83e88 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55edd8e895d0 <col:93> 'bool' false
|-CXXMethodDecl 0x55edd8e84160 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55edd8e84048 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55edd8e840c8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55edd8e84338 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55edd8e84220 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55edd8e842a0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55edd8e84618 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55edd8e843f8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55edd8e84470 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55edd8e844f0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55edd8e84568 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55edd8e84908 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55edd8e846e8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55edd8e84760 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55edd8e847e0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55edd8e84858 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55edd8e84b40 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55edd8e849e0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55edd8e84a60 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55edd8e84d28 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55edd8e84c08 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55edd8e84c88 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55edd8e84dd8 prev 0x55edd8e7c578 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55edd8e84ed0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55edd8e84f60 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55edd8e84fd8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55edd8e85098 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55edd8e85160 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55edd8e852d8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55edd8e85210 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55edd8e85380 <col:24>
| | `-OptimizeNoneAttr 0x55edd8e853d8 <col:34>
| |-CXXMethodDecl 0x55edd8e85420 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55edd8e856d8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55edd8e854d0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55edd8e85548 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55edd8e855c8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55edd8e85790 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55edd8e857c8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55edd8e85830 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55edd8e858b8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55edd8e85bd8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55edd8e85970 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55edd8e859e8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55edd8e85a60 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55edd8e85ae0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55edd8e85cf0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55edd8e8d668 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55edd8e8d668
| | `-ParmVarDecl 0x55edd8e8d778 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55edd8e8d818 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55edd8e8d818
| | `-ParmVarDecl 0x55edd8e8d928 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55edd8df9f80 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55edd8e85d68 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55edd8e85e08 <col:38> "" ""
|-CXXMethodDecl 0x55edd8e85e98 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55edd8e85f38 <col:44> "" ""
|-AccessSpecDecl 0x55edd8e85fa8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55edd8e85fd0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55edd8e860d0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55edd8e86120 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55edd8e860b0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55edd8e86090 <col:27> 'int' 4
|-FieldDecl 0x55edd8e861d8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55edd8e86388 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55edd8e86440 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55edd8e874d0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55edd8e87538 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55edd8e87688 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55edd8e875c8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55edd8e87838 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55edd8e87748 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55edd8e87a18 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55edd8e878f8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55edd8e87978 <col:25> col:28 'int'
|-CXXMethodDecl 0x55edd8e87cc0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55edd8e87ae0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55edd8e87b60 <col:28> col:31 'int'
| `-ParmVarDecl 0x55edd8e87bd8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55edd8e87d78 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55edd8e87e40 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55edd8e87e90 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55edd8e87ee0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55edd8e880c0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55edd8e87f70 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55edd8e87fe8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55edd8e88368 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55edd8e88188 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55edd8e88208 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55edd8e88280 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55edd8e88588 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55edd8e88438 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55edd8e884b8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55edd8e888c0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55edd8e88648 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55edd8e886c8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55edd8e88740 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55edd8e887c0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55edd8e88aa8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55edd8e88990 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55edd8e88a10 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55edd8e88bf8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55edd8e88b68 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55edd8e88f78 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55edd8e88cb8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55edd8e88d38 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55edd8e88db0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55edd8e88e30 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55edd8e89090 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StripToNetworkHeader
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55edd8e907d8 <../elements/standard/striptonet.hh:28:1, line:37:1> line:28:7 class StripToNetworkHeader definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55edd8e90938 <col:1, col:7> col:7 implicit referenced class StripToNetworkHeader
|-AccessSpecDecl 0x55edd8e909c8 <col:47, col:53> col:47 public
|-CXXConstructorDecl 0x55edd8e90a50 <line:30:5, col:26> col:5 StripToNetworkHeader 'void ()'
|-CXXMethodDecl 0x55edd8e90b50 <line:32:5, col:69> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55edd8e79528 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55edd8e91650 <col:36, col:69>
|   `-ReturnStmt 0x55edd8e91640 <col:38, col:45>
|     `-ImplicitCastExpr 0x55edd8e91628 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55edd8e915f8 <col:45> 'const char [21]' lvalue "StripToNetworkHeader"
|-CXXMethodDecl 0x55edd8e90c18 <line:33:5, col:56> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55edd8e795f0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55edd8e916b0 <col:36, col:56>
|   `-ReturnStmt 0x55edd8e916a0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55edd8e91688 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55edd8e91668 <col:45> 'const char []' lvalue Var 0x55edd8e798a0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x55edd8e90d58 <line:35:5, col:35> col:13 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x55edd8e78708 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x55edd8e90cc8 <col:27, col:34> col:35 'Packet *'
|-CXXConstructorDecl 0x55edd8e90e28 <line:28:7> col:7 implicit StripToNetworkHeader 'void (const StripToNetworkHeader &)' inline default_delete noexcept-unevaluated 0x55edd8e90e28
| `-ParmVarDecl 0x55edd8e90f38 <col:7> col:7 'const StripToNetworkHeader &'
|-CXXConstructorDecl 0x55edd8e90fd8 <col:7> col:7 implicit StripToNetworkHeader 'void (StripToNetworkHeader &&)' inline default_delete noexcept-unevaluated 0x55edd8e90fd8
| `-ParmVarDecl 0x55edd8e910e8 <col:7> col:7 'StripToNetworkHeader &&'
|-CXXMethodDecl 0x55edd8e91188 <col:7> col:7 implicit operator= 'StripToNetworkHeader &(const StripToNetworkHeader &)' inline default_delete noexcept-unevaluated 0x55edd8e91188
| `-ParmVarDecl 0x55edd8e91298 <col:7> col:7 'const StripToNetworkHeader &'
|-CXXMethodDecl 0x55edd8e91308 <col:7> col:7 implicit operator= 'StripToNetworkHeader &(StripToNetworkHeader &&)' inline default_delete noexcept-unevaluated 0x55edd8e91308
| `-ParmVarDecl 0x55edd8e91418 <col:7> col:7 'StripToNetworkHeader &&'
`-CXXDestructorDecl 0x55edd8e914a0 <col:7> col:7 implicit ~StripToNetworkHeader 'void ()' inline default noexcept-unevaluated 0x55edd8e914a0
  `-Overrides: [ 0x55edd8e780c8 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.StripToNetworkHeader = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.StripToNetworkHeader.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55edd8c368a0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55edd8c369b8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55edd8c36a48 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55edd8c36b18 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55edd8c36c00 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55edd8c36e18 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55edd8c36cc0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8c36fc8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55edd8c36ed0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55edd8c37110 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55edd8c37080 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55edd8c37258 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55edd8c371c8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8c373a0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55edd8c37310 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8c37468 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55edd8c375b0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55edd8c37520 <col:28> col:31 'int'
|-CXXMethodDecl 0x55edd8c37678 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55edd8c377c0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55edd8c37730 <col:28> col:31 'int'
|-CXXMethodDecl 0x55edd8c37938 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55edd8c37878 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8c37a80 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55edd8c379f0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8c37b48 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55edd8c37d08 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55edd8c37bf8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55edd8c37c70 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8c37f58 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55edd8c37dc8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55edd8c37e40 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55edd8c38008 <col:86> "" ""
|-CXXMethodDecl 0x55edd8c38278 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55edd8c380e8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55edd8c38160 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8c38428 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55edd8c38338 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55edd8c385d8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55edd8c384e0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55edd8c388a8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55edd8c38690 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55edd8c38708 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55edd8c38780 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8c38b88 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55edd8c38970 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55edd8c389e8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55edd8c38a60 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55edd8c38c40 <col:115> "" ""
|-AccessSpecDecl 0x55edd8c38cb0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55edd8c38ce8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8c3a200 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55edd8c3a200
| `-ParmVarDecl 0x55edd8c3a308 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55edd8c3a3a8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55edd8c3a3a8
| `-ParmVarDecl 0x55edd8c3a4b8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55edd8c6fae8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55edd8e618e0 <col:7>
|-CXXConstructorDecl 0x55edd8c6fbc0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55edd8c6fbc0
| `-ParmVarDecl 0x55edd8c6fcd8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55edd8c6fd48 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55edd8c6fd48
| `-ParmVarDecl 0x55edd8c6fe58 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55edd8e642e0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55edd8e50488 prev 0x55edd8e45690 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55edd8e50580 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55edd8e50670 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55edd8e50798 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55edd8e50918 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55edd8e50a98 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55edd8e50c18 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55edd8e61a48 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55edd8e622b8 <col:11>
|-CXXDestructorDecl 0x55edd8e61b20 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55edd8e61c58 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55edd8e61c58
| `-ParmVarDecl 0x55edd8e61d68 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55edd8e61e08 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55edd8e61e08
| `-ParmVarDecl 0x55edd8e61f18 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55edd8e64cd8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55edd8e64de8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55edd8e65068 <col:11>
|   `-ReturnStmt 0x55edd8e65058 <col:11>
|     `-UnaryOperator 0x55edd8e65040 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55edd8e65030 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55edd8e64e58 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55edd8e64e58
  `-ParmVarDecl 0x55edd8e64f68 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55edd8e50c80 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55edd8e50d98 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55edd8e50e38 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55edd8e50ea0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55edd8e50f08 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55edd8e50f70 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55edd8e50fd0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55edd8e51090 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55edd8e510f0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55edd8e51150 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55edd8e61958 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55edd8e50e38 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55edd8e622c8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55edd8e62320 <col:12>
|-CXXConstructorDecl 0x55edd8e61f88 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55edd8e61f88
| `-ParmVarDecl 0x55edd8e62098 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55edd8e62138 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55edd8e62138
| `-ParmVarDecl 0x55edd8e62248 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55edd8e643c0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55edd8e3eda0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55edd8e3eeb8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55edd8e3ef48 <col:16, col:22> col:16 public
|-EnumDecl 0x55edd8e3ef70 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55edd8e3f070 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55edd8e3f150 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e3f050 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55edd8e3f030 <col:21> 'int' 28
| `-EnumConstantDecl 0x55edd8e3f100 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55edd8e3f168 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55edd8e3f0e0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55edd8e3f0c0 <col:22> 'int' 64
|-CXXMethodDecl 0x55edd8e3f4a8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55edd8e3f190 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55edd8e3f210 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55edd8e3f288 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55edd8e3f300 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55edd8e3f568 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55edd8e3f768 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55edd8e3f5e0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55edd8e3f658 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55edd8e3f818 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55edd8e3f978 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55edd8e3f888 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55edd8e3fa20 <col:72> warn_unused_result ""
|-TypedefDecl 0x55edd8e3fd80 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55edd8e3fd10 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55edd8e3fcb0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55edd8e3fc70 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55edd89182d0 'void'
|       |-PointerType 0x55edd8bbf140 'unsigned char *'
|       | `-BuiltinType 0x55edd89183d0 'unsigned char'
|       |-TypedefType 0x55edd89bb6b0 'size_t' sugar
|       | |-Typedef 0x55edd8988b20 'size_t'
|       | `-BuiltinType 0x55edd8918430 'unsigned long'
|       `-PointerType 0x55edd8918ad0 'void *'
|         `-BuiltinType 0x55edd89182d0 'void'
|-CXXMethodDecl 0x55edd8e401f8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55edd8e3fdf0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55edd8e3fe68 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55edd8e3ff00 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55edd8e3ff80 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55edd8e5a8f0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55edd8e5a8d8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55edd8e5a8a0 <col:58> 'int' 0
| |-ParmVarDecl 0x55edd8e40000 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55edd8e5a918 <col:76> 'int' 0
| |-ParmVarDecl 0x55edd8e40080 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55edd8e5a938 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55edd8e402c8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55edd8e40348 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55edd8e40408 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55edd8e404a8 <col:20>
| `-OptimizeNoneAttr 0x55edd8e40500 <col:30>
|-CXXMethodDecl 0x55edd8e40578 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55edd8e40618 <col:20>
| `-OptimizeNoneAttr 0x55edd8e40670 <col:30>
|-CXXMethodDecl 0x55edd8e406e8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55edd8e40788 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55edd8e40838 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55edd8e408d8 <col:20>
| |-OptimizeNoneAttr 0x55edd8e40930 <col:30>
| `-WarnUnusedResultAttr 0x55edd8e40958 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55edd8e409b0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55edd8e40a50 <col:20>
| `-OptimizeNoneAttr 0x55edd8e40aa8 <col:30>
|-CXXMethodDecl 0x55edd8e40af8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55edd8e40b98 <col:20>
| `-OptimizeNoneAttr 0x55edd8e40bf0 <col:30>
|-CXXMethodDecl 0x55edd8e40c38 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55edd8e40cd8 <col:20>
| `-OptimizeNoneAttr 0x55edd8e40d30 <col:30>
|-CXXMethodDecl 0x55edd8e40d78 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55edd8e40e38 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55edd8e40f00 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55edd8e40fc8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55edd8e41088 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55edd8e411a8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55edd8e5aa00 <col:54, line:99:5>
|   `-ReturnStmt 0x55edd8e5a9f0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55edd8e5a9d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55edd8e5a9a8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55edd8e51488
|         `-CXXThisExpr 0x55edd8e5a998 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55edd8e41348 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55edd8e41258 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55edd8e5aab0 <col:67, line:103:5>
|   `-BinaryOperator 0x55edd8e5aa90 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55edd8e5aa28 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55edd8e51488
|     | `-CXXThisExpr 0x55edd8e5aa18 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55edd8e5aa78 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55edd8e5aa58 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55edd8e41258 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55edd8e41440 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55edd8e5ab30 <col:33, line:107:5>
|   `-ReturnStmt 0x55edd8e5ab20 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55edd8e5ab08 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55edd8e5aad8 <col:16> 'void *' lvalue ->_destructor_argument 0x55edd8e514f0
|         `-CXXThisExpr 0x55edd8e5aac8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55edd8e41500 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55edd8e5b160 <col:25, line:113:5>
|   |-ParenExpr 0x55edd8e5aea8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55edd8e5ae78 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e5abe8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55edd8e5abc0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55edd8e5ab88 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55edd8e5ab58 <col:24> '<bound member function type>' ->shared 0x55edd8e40578
|   |   |       `-ImplicitCastExpr 0x55edd8e5aba8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55edd8e5ab48 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55edd8e5ac48 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e5ac28 <col:42> 'int' 0
|   |   `-CallExpr 0x55edd8e5add8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e5adc0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e5ada0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e5ae18 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5acb8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55edd8e5ae30 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5ace0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e5ae48 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e5ad18 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55edd8e5ae60 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e5ad88 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e5ad70 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e5ad38 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55edd8e5b0a8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55edd8e5aed8 <col:2> 'unsigned char *' lvalue ->_head 0x55edd8e51290
|   | | `-CXXThisExpr 0x55edd8e5aec8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55edd8e5b090 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55edd8e5b070 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55edd8e5af18 <col:10> 'unsigned char *' lvalue ->_data 0x55edd8e512f8
|   |     | `-CXXThisExpr 0x55edd8e5af08 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55edd8e5b058 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55edd8e5b038 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55edd8e5af58 <col:18> 'unsigned char *' lvalue ->_tail 0x55edd8e51360
|   |         | `-CXXThisExpr 0x55edd8e5af48 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55edd8e5b020 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55edd8e5b000 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55edd8e5af98 <col:26> 'unsigned char *' lvalue ->_end 0x55edd8e513c8
|   |             | `-CXXThisExpr 0x55edd8e5af88 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55edd8e5afe8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55edd8e5afc8 <col:33> 'int' 0
|   `-BinaryOperator 0x55edd8e5b140 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55edd8e5b0d8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55edd8e51488
|     | `-CXXThisExpr 0x55edd8e5b0c8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55edd8e5b128 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55edd8e5b108 <col:16> 'int' 0
|-CXXMethodDecl 0x55edd8e41640 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55edd8e415b0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55edd8e416e8 <col:20>
| |-OptimizeNoneAttr 0x55edd8e41740 <col:30>
| `-WarnUnusedResultAttr 0x55edd8e41768 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55edd8e41838 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55edd8e417a8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55edd8e418e0 <col:20>
| |-OptimizeNoneAttr 0x55edd8e41938 <col:30>
| `-WarnUnusedResultAttr 0x55edd8e41960 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55edd8e41a98 <line:171:5, col:76> col:13 used nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55edd8e419a0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55edd8e41b40 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55edd8e41c40 <line:187:5, col:62> col:45 used pull 'void (uint32_t)'
| |-ParmVarDecl 0x55edd8e41bb0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55edd8e41ce8 <col:20>
| `-OptimizeNoneAttr 0x55edd8e41d40 <col:30>
|-CXXMethodDecl 0x55edd8e41e08 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55edd8e41d78 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55edd8e41eb0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55edd8e41fb0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55edd8e41f20 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55edd8e42058 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55edd8e42158 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55edd8e420c8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55edd8e42200 <col:20>
| `-OptimizeNoneAttr 0x55edd8e42258 <col:30>
|-CXXMethodDecl 0x55edd8e423e8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55edd8e42298 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55edd8e42310 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55edd8e5a958 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55edd8e42498 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55edd8e42698 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55edd8e42510 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55edd8e42588 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8e428a8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55edd8e42758 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55edd8e427d0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8e42ab8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55edd8e42968 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55edd8e429e8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55edd8e5a968 <col:39> 'int' 0
|-CXXMethodDecl 0x55edd8e42b88 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55edd8e42c50 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55edd8e42d18 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55edd8e42dd8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55edd8e42ea0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55edd8e42fe8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55edd8e42f58 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55edd8e431b8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55edd8e430a8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55edd8e43120 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8e43288 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55edd8e43348 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55edd8e433e8 <col:20>
| `-OptimizeNoneAttr 0x55edd8e43440 <col:30>
|-CXXMethodDecl 0x55edd8e43490 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55edd8e43530 <col:20>
| `-OptimizeNoneAttr 0x55edd8e43588 <col:30>
|-CXXMethodDecl 0x55edd8e435d8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55edd8e43698 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55edd8e43760 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55edd8e43800 <col:20>
| `-OptimizeNoneAttr 0x55edd8e43858 <col:30>
|-CXXMethodDecl 0x55edd8e439a8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55edd8e43898 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55edd8e43910 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8e43af8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55edd8e43a68 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8e43bd0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55edd8e43c90 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55edd8e43d30 <col:20>
| `-OptimizeNoneAttr 0x55edd8e43d88 <col:30>
|-CXXMethodDecl 0x55edd8e43dd8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55edd8e43e78 <col:20>
| `-OptimizeNoneAttr 0x55edd8e43ed0 <col:30>
|-CXXMethodDecl 0x55edd8e43f20 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55edd8e43fe8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55edd8e44088 <col:20>
| `-OptimizeNoneAttr 0x55edd8e440e0 <col:30>
|-CXXMethodDecl 0x55edd8e44128 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55edd8e44248 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55edd8e443b8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55edd8e442f8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55edd8e444a8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55edd8e44548 <col:20>
| `-OptimizeNoneAttr 0x55edd8e445a0 <col:30>
|-CXXMethodDecl 0x55edd8e445f0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55edd8e446b0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55edd8e448e8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55edd8e44760 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55edd8e447d8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55edd8e44998 <col:20>
| `-OptimizeNoneAttr 0x55edd8e449f0 <col:30>
|-CXXMethodDecl 0x55edd8e44a98 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55edd8e44b38 <col:20>
| `-OptimizeNoneAttr 0x55edd8e44b90 <col:30>
|-CXXMethodDecl 0x55edd8e44be0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55edd8e44c80 <col:20>
| `-OptimizeNoneAttr 0x55edd8e44cd8 <col:30>
|-CXXMethodDecl 0x55edd8e44d20 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55edd8e44dc0 <col:20>
| `-OptimizeNoneAttr 0x55edd8e44e18 <col:30>
|-CXXMethodDecl 0x55edd8e44f18 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55edd8e44e50 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55edd8e44fc0 <col:20>
| `-OptimizeNoneAttr 0x55edd8e45018 <col:30>
|-CXXMethodDecl 0x55edd8e451d8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55edd8e45050 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55edd8e450c8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55edd8e45288 <col:20>
| `-OptimizeNoneAttr 0x55edd8e452e0 <col:30>
|-CXXMethodDecl 0x55edd8e45388 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55edd8e454a8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55edd8e455c8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55edd8e45668 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55edd8e45690 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55edd8e457b8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55edd8e45858 <col:20>
| `-OptimizeNoneAttr 0x55edd8e458b0 <col:30>
|-CXXMethodDecl 0x55edd8e45958 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55edd8e459f8 <col:20>
| `-OptimizeNoneAttr 0x55edd8e45a50 <col:30>
|-AccessSpecDecl 0x55edd8e45a78 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55edd8e45aa0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55edd8e45ba0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55edd8e45bf0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55edd8e45b80 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55edd8e45b60 <col:14> 'int' 48
|-CXXMethodDecl 0x55edd8e45c58 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55edd8e45cf8 <col:20>
| `-OptimizeNoneAttr 0x55edd8e45d50 <col:30>
|-CXXMethodDecl 0x55edd8e45dc8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55edd8e45e68 <col:20>
| `-OptimizeNoneAttr 0x55edd8e45ec0 <col:30>
|-CXXMethodDecl 0x55edd8e45f88 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55edd8e45ef8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55edd8e46128 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55edd8e462c8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55edd8e461d8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55edd8e46370 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55edd8e46470 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55edd8e46820 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e46450 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55edd8e46430 <col:9> 'int' 0
| |-EnumConstantDecl 0x55edd8e46500 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55edd8e46838 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e464e0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55edd8e464c0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55edd8e46590 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55edd8e46850 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e46570 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55edd8e46550 <col:14> 'int' 2
| |-EnumConstantDecl 0x55edd8e46620 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55edd8e46868 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e46600 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55edd8e465e0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55edd8e466b0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55edd8e46880 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e46690 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55edd8e46670 <col:13> 'int' 4
| |-EnumConstantDecl 0x55edd8e46740 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55edd8e46898 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e46720 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55edd8e46700 <col:13> 'int' 5
| `-EnumConstantDecl 0x55edd8e467d0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55edd8e468b0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55edd8e467b0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55edd8e46790 <col:14> 'int' 6
|-CXXMethodDecl 0x55edd8e46918 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55edd8e469b8 <col:20>
| `-OptimizeNoneAttr 0x55edd8e46a10 <col:30>
|-CXXMethodDecl 0x55edd8e46b08 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55edd8e46a48 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55edd8e46bb0 <col:20>
| `-OptimizeNoneAttr 0x55edd8e46c08 <col:30>
|-CXXMethodDecl 0x55edd8e46c78 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55edd8e46da0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55edd8e46f18 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55edd8e46e50 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55edd8e46fe0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55edd8e470a8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55edd8e471e8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55edd8e47158 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55edd8e47290 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55edd8e47390 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55edd8e47590 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e47370 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55edd8e47350 <col:23> 'int' 0
| |-EnumConstantDecl 0x55edd8e47420 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55edd8e475a8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e47400 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55edd8e473e0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55edd8e474b0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55edd8e475c0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e47490 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55edd8e47470 <col:24> 'int' 0
| `-EnumConstantDecl 0x55edd8e47540 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55edd8e475d8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55edd8e47520 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55edd8e47500 <col:47> 'int' 16
|-CXXMethodDecl 0x55edd8e47638 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55edd8e477a8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55edd8e476e8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55edd8e47850 <col:20>
| `-OptimizeNoneAttr 0x55edd8e478a8 <col:30>
|-CXXMethodDecl 0x55edd8e478f8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55edd8e5b280 <col:18, col:36>
|   `-ReturnStmt 0x55edd8e5b270 <col:20, col:33>
|     `-ImplicitCastExpr 0x55edd8e5b258 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55edd8e5b238 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55edd8e5b208 <col:27> '<bound member function type>' ->xanno 0x55edd8e45958
|           `-CXXThisExpr 0x55edd8e5b1f8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55edd8e479f0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55edd8e5b390 <col:30, col:48>
|   `-ReturnStmt 0x55edd8e5b380 <col:32, col:45>
|     `-ImplicitCastExpr 0x55edd8e5b368 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55edd8e5b348 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55edd8e5b318 <col:39> '<bound member function type>' ->xanno 0x55edd8e457b8
|           `-CXXThisExpr 0x55edd8e5b308 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55edd8e47ad8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55edd8e5b528 <col:24, col:50>
|   `-ReturnStmt 0x55edd8e5b518 <col:26, col:47>
|     `-UnaryOperator 0x55edd8e5b500 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55edd8e5b4e0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55edd8e5b4c8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55edd8e5b478 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55edd8e50798
|         |   `-CXXMemberCallExpr 0x55edd8e5b458 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55edd8e5b428 <col:34> '<bound member function type>' ->xanno 0x55edd8e45958
|         |       `-CXXThisExpr 0x55edd8e5b418 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55edd8e5b4a8 <col:46> 'int' 0
|-CXXMethodDecl 0x55edd8e47be0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55edd8e5b6f8 <col:36, col:62>
|   `-ReturnStmt 0x55edd8e5b6e8 <col:38, col:59>
|     `-UnaryOperator 0x55edd8e5b6d0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55edd8e5b6b0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55edd8e5b698 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55edd8e5b610 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55edd8e50798
|         |   `-CXXMemberCallExpr 0x55edd8e5b5f0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55edd8e5b5c0 <col:46> '<bound member function type>' ->xanno 0x55edd8e457b8
|         |       `-CXXThisExpr 0x55edd8e5b5b0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55edd8e5b640 <col:58> 'int' 0
|-CXXMethodDecl 0x55edd8e47cf8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55edd8e5b890 <col:26, col:53>
|   `-ReturnStmt 0x55edd8e5b880 <col:28, col:50>
|     `-UnaryOperator 0x55edd8e5b868 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55edd8e5b848 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55edd8e5b830 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55edd8e5b7e0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55edd8e50a98
|         |   `-CXXMemberCallExpr 0x55edd8e5b7c0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55edd8e5b790 <col:36> '<bound member function type>' ->xanno 0x55edd8e45958
|         |       `-CXXThisExpr 0x55edd8e5b780 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55edd8e5b810 <col:49> 'int' 0
|-CXXMethodDecl 0x55edd8e47e18 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55edd8e5ba68 <col:38, col:65>
|   `-ReturnStmt 0x55edd8e5ba58 <col:40, col:62>
|     `-UnaryOperator 0x55edd8e5ba40 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55edd8e5ba20 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55edd8e5ba08 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55edd8e5b978 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55edd8e50a98
|         |   `-CXXMemberCallExpr 0x55edd8e5b958 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55edd8e5b928 <col:48> '<bound member function type>' ->xanno 0x55edd8e457b8
|         |       `-CXXThisExpr 0x55edd8e5b918 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55edd8e5b9a8 <col:61> 'int' 0
|-CXXMethodDecl 0x55edd8e47fc8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55edd8e47ed0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55edd8e5c138 <col:34, line:463:5>
|   |-ParenExpr 0x55edd8e5bf80 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55edd8e5bf50 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e5bbb8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e5bb88 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e5bad8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e5bac0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e5ba80 <col:23> 'int' lvalue ParmVar 0x55edd8e47ed0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e5baa0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e5bb68 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55edd8e5bb38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e5baf8 <col:33> 'int' lvalue ParmVar 0x55edd8e47ed0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55edd8e5bb50 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55edd8e5bb18 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55edd8e5bc18 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e5bbf8 <col:56> 'int' 0
|   |   `-CallExpr 0x55edd8e5beb0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e5be98 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e5be78 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e5bef0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5bd08 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55edd8e5bf08 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5bd38 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e5bf20 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e5bd70 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55edd8e5bf38 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e5be60 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e5be48 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e5be08 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55edd8e5c128 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55edd8e5c110 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55edd8e5c0f0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55edd8e5c0c0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55edd8e5c070 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55edd8e50798
|         |   `-CXXMemberCallExpr 0x55edd8e5c050 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55edd8e5c020 <col:9> '<bound member function type>' ->xanno 0x55edd8e457b8
|         |       `-CXXThisExpr 0x55edd8e5c010 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55edd8e5c0d8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55edd8e5c0a0 <col:21> 'int' lvalue ParmVar 0x55edd8e47ed0 'i' 'int'
|-CXXMethodDecl 0x55edd8e48218 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55edd8e48088 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55edd8e48100 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55edd8e5c7c8 <col:40, line:472:5>
|   |-ParenExpr 0x55edd8e5c5e0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55edd8e5c5b0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e5c290 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e5c260 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e5c1b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e5c198 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e5c158 <col:23> 'int' lvalue ParmVar 0x55edd8e48088 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e5c178 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e5c240 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55edd8e5c210 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e5c1d0 <col:33> 'int' lvalue ParmVar 0x55edd8e48088 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55edd8e5c228 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55edd8e5c1f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55edd8e5c2f0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e5c2d0 <col:56> 'int' 0
|   |   `-CallExpr 0x55edd8e5c510 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e5c4f8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e5c4d8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e5c550 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5c360 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55edd8e5c568 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5c390 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e5c580 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e5c3c8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55edd8e5c598 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e5c4c0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e5c4a8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e5c468 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55edd8e5c7a8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55edd8e5c750 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55edd8e5c720 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55edd8e5c6d0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55edd8e50798
|     | |   `-CXXMemberCallExpr 0x55edd8e5c6b0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55edd8e5c680 <col:2> '<bound member function type>' ->xanno 0x55edd8e45958
|     | |       `-CXXThisExpr 0x55edd8e5c670 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55edd8e5c738 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55edd8e5c700 <col:14> 'int' lvalue ParmVar 0x55edd8e48088 'i' 'int'
|     `-ImplicitCastExpr 0x55edd8e5c790 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55edd8e5c770 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55edd8e48100 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55edd8e483d8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55edd8e482e0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55edd8e5cf48 <col:36, line:485:5>
|   |-ParenExpr 0x55edd8e5ccb0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55edd8e5cc80 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e5c960 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e5c930 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e5c840 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e5c828 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e5c7e8 <col:23> 'int' lvalue ParmVar 0x55edd8e482e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e5c808 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e5c910 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55edd8e5c8f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e5c860 <col:33> 'int' lvalue ParmVar 0x55edd8e482e0 'i' 'int'
|   |   |     `-BinaryOperator 0x55edd8e5c8d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55edd8e5c8c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55edd8e5c880 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55edd8e5c8a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55edd8e5c9c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e5c9a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55edd8e5cbe0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e5cbc8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e5cba8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e5cc20 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5ca30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55edd8e5cc38 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5ca68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e5cc50 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e5caa0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55edd8e5cc68 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e5cb90 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e5cb78 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e5cb38 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55edd8e5cf38 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55edd8e5cf20 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55edd8e5cf08 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55edd8e5ced8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55edd8e5ce78 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55edd8e5ce48 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55edd8e5cdc0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55edd8e50670
|             |   `-CXXMemberCallExpr 0x55edd8e5cda0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55edd8e5cd70 <col:61> '<bound member function type>' ->xanno 0x55edd8e457b8
|             |       `-CXXThisExpr 0x55edd8e5cd60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55edd8e5ce60 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55edd8e5cdf0 <col:74> 'int' lvalue ParmVar 0x55edd8e482e0 'i' 'int'
|-CXXMethodDecl 0x55edd8e48628 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55edd8e48498 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55edd8e48510 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55edd8e5d698 <col:42, line:500:5>
|   |-ParenExpr 0x55edd8e5d430 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55edd8e5d400 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e5d0e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e5d0b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e5cfc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e5cfa8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e5cf68 <col:23> 'int' lvalue ParmVar 0x55edd8e48498 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e5cf88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e5d090 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55edd8e5d078 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e5cfe0 <col:33> 'int' lvalue ParmVar 0x55edd8e48498 'i' 'int'
|   |   |     `-BinaryOperator 0x55edd8e5d058 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55edd8e5d040 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55edd8e5d000 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55edd8e5d020 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55edd8e5d140 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e5d120 <col:60> 'int' 0
|   |   `-CallExpr 0x55edd8e5d360 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e5d348 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e5d328 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e5d3a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5d1b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55edd8e5d3b8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5d1e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e5d3d0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e5d220 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55edd8e5d3e8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e5d310 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e5d2f8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e5d2b8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55edd8e5d678 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55edd8e5d628 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55edd8e5d5f8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55edd8e5d5a0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55edd8e5d570 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55edd8e5d520 <col:48, col:57> 'char [48]' lvalue ->c 0x55edd8e50670
|     |     |   `-CXXMemberCallExpr 0x55edd8e5d500 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55edd8e5d4d0 <col:48> '<bound member function type>' ->xanno 0x55edd8e45958
|     |     |       `-CXXThisExpr 0x55edd8e5d4c0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55edd8e5d588 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55edd8e5d550 <col:61> 'int' lvalue ParmVar 0x55edd8e48498 'i' 'int'
|     `-ImplicitCastExpr 0x55edd8e5d660 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55edd8e5d640 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55edd8e48510 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55edd8e487e8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55edd8e486f0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55edd8e5ddf8 <col:35, line:513:5>
|   |-ParenExpr 0x55edd8e5db08 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55edd8e5dad8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e5d830 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e5d800 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e5d710 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e5d6f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e5d6b8 <col:23> 'int' lvalue ParmVar 0x55edd8e486f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e5d6d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e5d7e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55edd8e5d7c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e5d730 <col:33> 'int' lvalue ParmVar 0x55edd8e486f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55edd8e5d7a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55edd8e5d790 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55edd8e5d750 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55edd8e5d770 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55edd8e5d890 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e5d870 <col:60> 'int' 0
|   |   `-CallExpr 0x55edd8e5da38 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e5da20 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e5da00 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e5da78 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5d900 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55edd8e5da90 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5d938 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e5daa8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e5d970 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55edd8e5dac0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e5d9e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e5d9d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e5d990 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55edd8e5dde8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55edd8e5ddd0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55edd8e5ddb8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55edd8e5dd88 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55edd8e5dd00 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55edd8e5dcd0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55edd8e5dc80 <col:60, col:69> 'char const[48]' lvalue ->c 0x55edd8e50670
|             |   `-CXXMemberCallExpr 0x55edd8e5dc60 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55edd8e5dc30 <col:60> '<bound member function type>' ->xanno 0x55edd8e457b8
|             |       `-CXXThisExpr 0x55edd8e5dc20 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55edd8e5dce8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55edd8e5dcb0 <col:73> 'int' lvalue ParmVar 0x55edd8e486f0 'i' 'int'
|-CXXMethodDecl 0x55edd8e48a38 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55edd8e488a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55edd8e48920 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55edd8e5e518 <col:41, line:528:5>
|   |-ParenExpr 0x55edd8e5e2a0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55edd8e5e270 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e5df90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e5df60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e5de70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e5de58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e5de18 <col:23> 'int' lvalue ParmVar 0x55edd8e488a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e5de38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e5df40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55edd8e5df28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e5de90 <col:33> 'int' lvalue ParmVar 0x55edd8e488a8 'i' 'int'
|   |   |     `-BinaryOperator 0x55edd8e5df08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55edd8e5def0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55edd8e5deb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55edd8e5ded0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55edd8e5dff0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e5dfd0 <col:60> 'int' 0
|   |   `-CallExpr 0x55edd8e5e1d0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e5e1b8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e5e198 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e5e210 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5e060 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55edd8e5e228 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5e098 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e5e240 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e5e0d0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55edd8e5e258 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e5e180 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e5e168 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e5e128 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55edd8e5e4f8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55edd8e5e4a8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55edd8e5e478 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55edd8e5e420 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55edd8e5e3e0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55edd8e5e390 <col:47, col:56> 'char [48]' lvalue ->c 0x55edd8e50670
|     |     |   `-CXXMemberCallExpr 0x55edd8e5e370 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55edd8e5e340 <col:47> '<bound member function type>' ->xanno 0x55edd8e45958
|     |     |       `-CXXThisExpr 0x55edd8e5e330 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55edd8e5e3f8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55edd8e5e3c0 <col:60> 'int' lvalue ParmVar 0x55edd8e488a8 'i' 'int'
|     `-ImplicitCastExpr 0x55edd8e5e4e0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55edd8e5e4c0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55edd8e48920 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55edd8e48bf8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55edd8e48b00 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55edd8e5ebe8 <col:36, line:541:5>
|   |-ParenExpr 0x55edd8e5e988 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55edd8e5e958 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e5e6b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e5e680 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e5e590 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e5e578 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e5e538 <col:23> 'int' lvalue ParmVar 0x55edd8e48b00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e5e558 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e5e660 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55edd8e5e648 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e5e5b0 <col:33> 'int' lvalue ParmVar 0x55edd8e48b00 'i' 'int'
|   |   |     `-BinaryOperator 0x55edd8e5e628 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55edd8e5e610 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55edd8e5e5d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55edd8e5e5f0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55edd8e5e710 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e5e6f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55edd8e5e8b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e5e8a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e5e880 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e5e8f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5e780 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55edd8e5e910 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5e7b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e5e928 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e5e7f0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55edd8e5e940 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e5e868 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e5e850 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e5e810 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55edd8e5ebd8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55edd8e5ebc0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55edd8e5eba8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55edd8e5eb78 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55edd8e5eb20 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55edd8e5eaf0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55edd8e5eaa0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55edd8e50670
|             |   `-CXXMemberCallExpr 0x55edd8e5ea80 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55edd8e5ea50 <col:61> '<bound member function type>' ->xanno 0x55edd8e457b8
|             |       `-CXXThisExpr 0x55edd8e5ea40 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55edd8e5eb08 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55edd8e5ead0 <col:74> 'int' lvalue ParmVar 0x55edd8e48b00 'i' 'int'
|-CXXMethodDecl 0x55edd8e48dc8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55edd8e48cb8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55edd8e48d30 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55edd8e48e78 <col:20>
| `-OptimizeNoneAttr 0x55edd8e48ed0 <col:30>
|-CXXMethodDecl 0x55edd8e49008 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55edd8e48f10 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55edd8e5f2b8 <col:35, line:562:5>
|   |-ParenExpr 0x55edd8e5f058 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55edd8e5f028 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e5ed80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e5ed50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e5ec60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e5ec48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e5ec08 <col:23> 'int' lvalue ParmVar 0x55edd8e48f10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e5ec28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e5ed30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55edd8e5ed18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e5ec80 <col:33> 'int' lvalue ParmVar 0x55edd8e48f10 'i' 'int'
|   |   |     `-BinaryOperator 0x55edd8e5ecf8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55edd8e5ece0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55edd8e5eca0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55edd8e5ecc0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55edd8e5ede0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e5edc0 <col:60> 'int' 0
|   |   `-CallExpr 0x55edd8e5ef88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e5ef70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e5ef50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e5efc8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5ee50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55edd8e5efe0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5ee88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e5eff8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e5eec0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55edd8e5f010 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e5ef38 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e5ef20 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e5eee0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55edd8e5f2a8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55edd8e5f290 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55edd8e5f278 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55edd8e5f248 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55edd8e5f1f0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55edd8e5f1c0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55edd8e5f170 <col:60, col:69> 'char const[48]' lvalue ->c 0x55edd8e50670
|             |   `-CXXMemberCallExpr 0x55edd8e5f150 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55edd8e5f120 <col:60> '<bound member function type>' ->xanno 0x55edd8e457b8
|             |       `-CXXThisExpr 0x55edd8e5f110 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55edd8e5f1d8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55edd8e5f1a0 <col:73> 'int' lvalue ParmVar 0x55edd8e48f10 'i' 'int'
|-CXXMethodDecl 0x55edd8e49218 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55edd8e490c8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55edd8e49140 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55edd8e5f998 <col:41, line:577:5>
|   |-ParenExpr 0x55edd8e5f728 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55edd8e5f6f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e5f450 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e5f420 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e5f330 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e5f318 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e5f2d8 <col:23> 'int' lvalue ParmVar 0x55edd8e490c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e5f2f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e5f400 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55edd8e5f3e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e5f350 <col:33> 'int' lvalue ParmVar 0x55edd8e490c8 'i' 'int'
|   |   |     `-BinaryOperator 0x55edd8e5f3c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55edd8e5f3b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55edd8e5f370 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55edd8e5f390 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55edd8e5f4b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e5f490 <col:60> 'int' 0
|   |   `-CallExpr 0x55edd8e5f658 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e5f640 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e5f620 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e5f698 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5f520 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55edd8e5f6b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5f558 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e5f6c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e5f590 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55edd8e5f6e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e5f608 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e5f5f0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e5f5b0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55edd8e5f978 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55edd8e5f928 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55edd8e5f8f8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55edd8e5f898 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55edd8e5f868 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55edd8e5f818 <col:47, col:56> 'char [48]' lvalue ->c 0x55edd8e50670
|     |     |   `-CXXMemberCallExpr 0x55edd8e5f7f8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55edd8e5f7c8 <col:47> '<bound member function type>' ->xanno 0x55edd8e45958
|     |     |       `-CXXThisExpr 0x55edd8e5f7b8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55edd8e5f880 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55edd8e5f848 <col:60> 'int' lvalue ParmVar 0x55edd8e490c8 'i' 'int'
|     `-ImplicitCastExpr 0x55edd8e5f960 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55edd8e5f940 <col:65> 'int32_t':'int' lvalue ParmVar 0x55edd8e49140 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55edd8e493d8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55edd8e492e0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55edd8e600c8 <col:36, line:591:5>
|   |-ParenExpr 0x55edd8e5fe08 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55edd8e5fdd8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e5fb30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e5fb00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e5fa10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e5f9f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e5f9b8 <col:23> 'int' lvalue ParmVar 0x55edd8e492e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e5f9d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e5fae0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55edd8e5fac8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e5fa30 <col:33> 'int' lvalue ParmVar 0x55edd8e492e0 'i' 'int'
|   |   |     `-BinaryOperator 0x55edd8e5faa8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55edd8e5fa90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55edd8e5fa50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55edd8e5fa70 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55edd8e5fb90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e5fb70 <col:60> 'int' 0
|   |   `-CallExpr 0x55edd8e5fd38 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e5fd20 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e5fd00 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e5fd78 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5fc00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55edd8e5fd90 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e5fc38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e5fda8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e5fc70 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55edd8e5fdc0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e5fce8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e5fcd0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e5fc90 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55edd8e600b8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55edd8e600a0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55edd8e60088 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55edd8e60058 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55edd8e5ffd0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55edd8e5ffa0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55edd8e5ff50 <col:61, col:70> 'char const[48]' lvalue ->c 0x55edd8e50670
|             |   `-CXXMemberCallExpr 0x55edd8e5ff30 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55edd8e5ff00 <col:61> '<bound member function type>' ->xanno 0x55edd8e457b8
|             |       `-CXXThisExpr 0x55edd8e5fef0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55edd8e5ffb8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55edd8e5ff80 <col:74> 'int' lvalue ParmVar 0x55edd8e492e0 'i' 'int'
|-CXXMethodDecl 0x55edd8e49628 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55edd8e49498 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55edd8e49510 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55edd8e607a8 <col:42, line:606:5>
|   |-ParenExpr 0x55edd8e60538 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55edd8e60508 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e60260 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e60230 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e60140 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e60128 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e600e8 <col:23> 'int' lvalue ParmVar 0x55edd8e49498 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e60108 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e60210 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55edd8e601f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e60160 <col:33> 'int' lvalue ParmVar 0x55edd8e49498 'i' 'int'
|   |   |     `-BinaryOperator 0x55edd8e601d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55edd8e601c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55edd8e60180 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55edd8e601a0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55edd8e602c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e602a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55edd8e60468 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e60450 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e60430 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e604a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e60330 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55edd8e604c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e60368 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e604d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e603a0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55edd8e604f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e60418 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e60400 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e603c0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55edd8e60788 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55edd8e60738 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55edd8e60708 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55edd8e606a8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55edd8e60678 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55edd8e60628 <col:48, col:57> 'char [48]' lvalue ->c 0x55edd8e50670
|     |     |   `-CXXMemberCallExpr 0x55edd8e60608 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55edd8e605d8 <col:48> '<bound member function type>' ->xanno 0x55edd8e45958
|     |     |       `-CXXThisExpr 0x55edd8e605c8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55edd8e60690 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55edd8e60658 <col:61> 'int' lvalue ParmVar 0x55edd8e49498 'i' 'int'
|     `-ImplicitCastExpr 0x55edd8e60770 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55edd8e60750 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55edd8e49510 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55edd8e497c0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55edd8e496f0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55edd8e61018 <col:33, line:620:5>
|   |-ParenExpr 0x55edd8e60d90 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55edd8e60d60 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e609b0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e60980 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e60820 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e60808 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e607c8 <col:23> 'int' lvalue ParmVar 0x55edd8e496f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e607e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e60960 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55edd8e60948 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e60840 <col:33> 'int' lvalue ParmVar 0x55edd8e496f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55edd8e60928 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55edd8e60910 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55edd8e60860 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55edd8e608e8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55edd8e608d0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55edd8e60898 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55edd8e60a10 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e609f0 <col:79> 'int' 0
|   |   `-CallExpr 0x55edd8e60cc0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e60ca8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e60c88 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e60d00 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e60af8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55edd8e60d18 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e60b40 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e60d30 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e60b78 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55edd8e60d48 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e60c70 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e60c58 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e60c18 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55edd8e61008 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55edd8e60ff0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55edd8e60fd8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55edd8e60fa8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55edd8e60f20 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55edd8e60ef0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55edd8e60ea0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55edd8e50670
|             |   `-CXXMemberCallExpr 0x55edd8e60e80 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55edd8e60e50 <col:67> '<bound member function type>' ->xanno 0x55edd8e457b8
|             |       `-CXXThisExpr 0x55edd8e60e40 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55edd8e60f08 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55edd8e60ed0 <col:80> 'int' lvalue ParmVar 0x55edd8e496f0 'i' 'int'
|-CXXMethodDecl 0x55edd8e499d8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55edd8e49880 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55edd8e49900 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55edd8e61840 <col:45, line:635:5>
|   |-ParenExpr 0x55edd8e61588 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55edd8e61558 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55edd8e61220 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55edd8e611f0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55edd8e61090 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55edd8e61078 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55edd8e61038 <col:23> 'int' lvalue ParmVar 0x55edd8e49880 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55edd8e61058 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55edd8e611d0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55edd8e611b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55edd8e610b0 <col:33> 'int' lvalue ParmVar 0x55edd8e49880 'i' 'int'
|   |   |     `-BinaryOperator 0x55edd8e61198 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55edd8e61180 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55edd8e610d0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55edd8e45ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55edd8e61158 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55edd8e61140 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55edd8e61108 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55edd8e61280 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55edd8e61260 <col:79> 'int' 0
|   |   `-CallExpr 0x55edd8e614b8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55edd8e614a0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55edd8e61480 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55edd8e614f8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e612f0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55edd8e61510 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55edd8e61338 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55edd8e61528 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55edd8e61370 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55edd8e61540 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55edd8e61468 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55edd8e61450 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55edd8e61408 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55edd8e61820 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55edd8e61788 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55edd8e61758 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55edd8e616f8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55edd8e616c8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55edd8e61678 <col:54, col:63> 'char [48]' lvalue ->c 0x55edd8e50670
|     |     |   `-CXXMemberCallExpr 0x55edd8e61658 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55edd8e61628 <col:54> '<bound member function type>' ->xanno 0x55edd8e45958
|     |     |       `-CXXThisExpr 0x55edd8e61618 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55edd8e616e0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55edd8e616a8 <col:67> 'int' lvalue ParmVar 0x55edd8e49880 'i' 'int'
|     `-CXXConstCastExpr 0x55edd8e617f0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55edd8e617d8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55edd8e617a0 <col:91> 'const void *' lvalue ParmVar 0x55edd8e49900 'x' 'const void *'
|-CXXMethodDecl 0x55edd8e49aa8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55edd8e618c8 <col:34, line:640:5>
|   `-ReturnStmt 0x55edd8e618b8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55edd8e618a0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55edd8e61870 <col:16> 'Packet *' lvalue ->_data_packet 0x55edd8e51228
|         `-CXXThisExpr 0x55edd8e61860 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55edd8e49be8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55edd8e49b58 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55edd8e5a988 <col:46> 'bool' true
|-CXXMethodDecl 0x55edd8e49d68 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55edd8e49ca0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55edd8e49e10 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55edd8e4a5c0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55edd8e49f10 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55edd8e4a630 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e49ef0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55edd8e49ed0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55edd8e3f070 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55edd8e49fa0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55edd8e4a648 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e49f80 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55edd8e49f60 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55edd8e3f100 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55edd8e4a030 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55edd8e4a660 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e4a010 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55edd8e49ff0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55edd8e4a0c0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55edd8e4a678 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e4a0a0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55edd8e4a080 <col:19> 'int' 16
| |-EnumConstantDecl 0x55edd8e4a150 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55edd8e4a690 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e4a130 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55edd8e4a110 <col:21> 'int' 16
| |-EnumConstantDecl 0x55edd8e4a1e0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55edd8e4a6a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e4a1c0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55edd8e4a1a0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55edd8e4a270 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55edd8e4a6c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e4a250 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55edd8e4a230 <col:19> 'int' EnumConstant 0x55edd8e4a0c0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55edd8e4a300 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55edd8e4a6d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e4a2e0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55edd8e4a2c0 <col:19> 'int' EnumConstant 0x55edd8e4a1e0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55edd8e4a3d0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55edd8e4a6f0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e4a3b0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55edd8e4a390 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55edd8e4a350 <col:23> 'int' EnumConstant 0x55edd8e4a300 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55edd8e4a370 <col:40> 'int' 2
| |-EnumConstantDecl 0x55edd8e4a4a0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55edd8e4a708 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e4a480 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55edd8e4a460 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55edd8e4a420 <col:23> 'int' EnumConstant 0x55edd8e4a300 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55edd8e4a440 <col:40> 'int' 4
| `-EnumConstantDecl 0x55edd8e4a570 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55edd8e4a720 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55edd8e4a550 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55edd8e4a530 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55edd8e4a4f0 <col:23> 'int' EnumConstant 0x55edd8e4a300 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55edd8e4a510 <col:40> 'int' 8
|-CXXMethodDecl 0x55edd8e4a760 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55edd8e4a800 <col:68> "" ""
|-CXXMethodDecl 0x55edd8e4a898 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55edd8e4a938 <col:45> "" ""
|-CXXMethodDecl 0x55edd8e4a9d0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55edd8e4aa70 <col:57> "" ""
|-CXXMethodDecl 0x55edd8e4ab08 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55edd8e4aba8 <col:45> "" ""
|-CXXMethodDecl 0x55edd8e4ac40 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55edd8e4ace0 <col:57> "" ""
|-CXXMethodDecl 0x55edd8e4ad70 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55edd8e4ae10 <col:51> "" ""
|-CXXMethodDecl 0x55edd8e4aea0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55edd8e4af40 <col:63> "" ""
|-CXXMethodDecl 0x55edd8e4afd0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55edd8e4b070 <col:53> "" ""
|-CXXMethodDecl 0x55edd8e4b100 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55edd8e4b1a0 <col:65> "" ""
|-CXXMethodDecl 0x55edd8e4b2b8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55edd8e4b228 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55edd8e4b360 <col:61> "" ""
|-CXXMethodDecl 0x55edd8e4b4f8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55edd8e4b3e8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55edd8e4b460 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55edd8e4b5a8 <col:67> "" ""
|-CXXMethodDecl 0x55edd8e4b6c0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55edd8e4b630 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55edd8e4b768 <col:63> "" ""
|-CXXMethodDecl 0x55edd8e4b900 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55edd8e4b7f0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55edd8e4b868 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55edd8e4b9b0 <col:69> "" ""
|-CXXMethodDecl 0x55edd8e4bac8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55edd8e4ba38 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55edd8e4bb70 <col:63> "" ""
|-CXXMethodDecl 0x55edd8e4e248 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55edd8e4e138 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55edd8e4e1b0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55edd8e4e2f8 <col:69> "" ""
|-CXXMethodDecl 0x55edd8e4e410 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55edd8e4e380 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55edd8e4e4b8 <col:62> "" ""
|-CXXMethodDecl 0x55edd8e4e650 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55edd8e4e540 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55edd8e4e5b8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55edd8e4e700 <col:68> "" ""
|-CXXMethodDecl 0x55edd8e4e818 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55edd8e4e788 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55edd8e4e8c0 <col:63> "" ""
|-CXXMethodDecl 0x55edd8e4ea58 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55edd8e4e948 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55edd8e4e9c0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55edd8e4eb08 <col:69> "" ""
|-CXXMethodDecl 0x55edd8e4eb98 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55edd8e4ec38 <col:64> "" ""
|-CXXMethodDecl 0x55edd8e4ecc8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55edd8e4ed68 <col:52> "" ""
|-CXXMethodDecl 0x55edd8e4edf8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55edd8e4ee98 <col:67> "" ""
|-CXXMethodDecl 0x55edd8e4ef28 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55edd8e4efc8 <col:55> "" ""
|-CXXMethodDecl 0x55edd8e4f0e0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55edd8e4f050 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55edd8e4f188 <col:58> "" ""
|-CXXMethodDecl 0x55edd8e4f320 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55edd8e4f210 <col:33> col:36 'int'
| |-ParmVarDecl 0x55edd8e4f288 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55edd8e4f3d0 <col:62> "" ""
|-CXXMethodDecl 0x55edd8e4f4e8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55edd8e4f458 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55edd8e4f590 <col:58> "" ""
|-CXXMethodDecl 0x55edd8e4f728 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55edd8e4f618 <col:33> col:36 'int'
| |-ParmVarDecl 0x55edd8e4f690 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55edd8e4f7d8 <col:62> "" ""
|-CXXMethodDecl 0x55edd8e4f8f0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55edd8e4f860 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55edd8e4f998 <col:60> "" ""
|-CXXMethodDecl 0x55edd8e4fb30 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55edd8e4fa20 <col:34> col:37 'int'
| |-ParmVarDecl 0x55edd8e4fa98 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55edd8e4fbe0 <col:64> "" ""
|-CXXMethodDecl 0x55edd8e4fcf8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55edd8e4fc68 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55edd8e4fda0 <col:58> "" ""
|-CXXMethodDecl 0x55edd8e4ff38 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55edd8e4fe28 <col:33> col:36 'int'
| |-ParmVarDecl 0x55edd8e4fea0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55edd8e4ffe8 <col:62> "" ""
|-CXXMethodDecl 0x55edd8e50100 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55edd8e50070 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55edd8e501a8 <col:59> "" ""
|-CXXMethodDecl 0x55edd8e50340 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55edd8e50230 <col:33> col:36 'int'
| |-ParmVarDecl 0x55edd8e502a8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55edd8e503f0 <col:63> "" ""
|-AccessSpecDecl 0x55edd8e50460 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55edd8e50488 prev 0x55edd8e45690 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55edd8e50580 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55edd8e50670 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55edd8e50798 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55edd8e50918 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55edd8e50a98 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55edd8e50c18 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55edd8e61a48 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55edd8e622b8 <col:11>
| |-CXXDestructorDecl 0x55edd8e61b20 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55edd8e61c58 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55edd8e61c58
| | `-ParmVarDecl 0x55edd8e61d68 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55edd8e61e08 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55edd8e61e08
| | `-ParmVarDecl 0x55edd8e61f18 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55edd8e64cd8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55edd8e64de8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55edd8e65068 <col:11>
| |   `-ReturnStmt 0x55edd8e65058 <col:11>
| |     `-UnaryOperator 0x55edd8e65040 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55edd8e65030 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55edd8e64e58 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55edd8e64e58
|   `-ParmVarDecl 0x55edd8e64f68 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55edd8e50c80 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55edd8e50d98 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55edd8e50e38 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55edd8e50ea0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55edd8e50f08 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55edd8e50f70 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55edd8e50fd0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55edd8e51090 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55edd8e510f0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55edd8e51150 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55edd8e61958 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55edd8e50e38 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55edd8e622c8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55edd8e62320 <col:12>
| |-CXXConstructorDecl 0x55edd8e61f88 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55edd8e61f88
| | `-ParmVarDecl 0x55edd8e62098 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55edd8e62138 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55edd8e62138
| | `-ParmVarDecl 0x55edd8e62248 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55edd8e643c0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55edd8e511c8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55edd8e51228 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55edd8e51290 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55edd8e512f8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55edd8e51360 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55edd8e513c8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55edd8e51428 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55edd8e51488 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55edd8e514f0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55edd8e51578 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55edd8e511c8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55edd8e618f0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55edd8e51428 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55edd8e62330 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55edd8e62390 <col:21, line:755:5>
|-CXXConstructorDecl 0x55edd8e51718 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55edd8e51658 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55edd8e51810 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55edd8e519f8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55edd8e51900 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55edd8e51cc8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55edd8e51ab0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55edd8e51b28 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55edd8e51ba0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8e51ee8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55edd8e51d98 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55edd8e51e10 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55edd8e5a4c8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55edd8e51fa8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55edd8e52020 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55edd8e52098 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55edd8e5a620 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55edd8e5a590 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8e5a768 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55edd8e5a6d8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55edd8e5a860 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55edd8e916c8 prev 0x55edd8e77c00 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55edd8e917c0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55edd8e91850 <col:22, col:28> col:22 public
|-EnumDecl 0x55edd8e91878 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55edd8e91998 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55edd8e91978 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55edd8e91960 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55edd8e91940 <col:14> 'int' 999
| |-EnumConstantDecl 0x55edd8e91a40 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55edd8e91a20 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55edd8e91a08 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55edd8e919e8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55edd8e91ad0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55edd8e91ab0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55edd8e91a90 <col:17> 'int' 0
| |-EnumConstantDecl 0x55edd8e91b60 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55edd8e91b40 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55edd8e91b20 <col:13> 'int' 1
| |-EnumConstantDecl 0x55edd8e91bf0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55edd8e91bd0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55edd8e91bb0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55edd8e91c80 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55edd8e91c60 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55edd8e91c40 <col:13> 'int' 3
| |-EnumConstantDecl 0x55edd8e91d10 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55edd8e91cf0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55edd8e91cd0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55edd8e91da0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55edd8e91d80 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55edd8e91d60 <col:14> 'int' 5
| |-EnumConstantDecl 0x55edd8e91e30 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55edd8e91e10 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55edd8e91df0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55edd8e91ec0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55edd8e91ea0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55edd8e91e80 <col:13> 'int' 7
|-VarDecl 0x55edd8e91f30 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55edd8e91fb8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55edd8e92040 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55edd8e920c8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55edd8e92150 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55edd8e921d8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55edd8e92260 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55edd8e922e8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55edd8e92370 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55edd8e923f8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55edd8e92480 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55edd8e92580 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55edd8e993d8 '_nerrors' 'int'
| | `-IntegerLiteral 0x55edd8e99b68 <line:128:13> 'int' 0
| `-CompoundStmt 0x55edd8e99bd8 <col:16, line:129:5>
|-CXXDestructorDecl 0x55edd8e92670 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55edd8e99be8 <col:29, line:132:5>
|-CXXMethodDecl 0x55edd8e92828 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55edd8e92760 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55edd8e928f0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55edd8e929d8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55edd8e99c40 <col:44, line:161:5>
|   `-ReturnStmt 0x55edd8e99c30 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55edd8e99c18 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55edd8e99bf8 <col:9> 'ErrorHandler *' lvalue Var 0x55edd8e99438 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55edd8e92b48 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55edd8e92a88 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55edd8e92c10 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55edd8e99ca0 <col:43, line:173:5>
|   `-ReturnStmt 0x55edd8e99c90 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55edd8e99c78 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55edd8e99c58 <col:9> 'ErrorHandler *' lvalue Var 0x55edd8e994b0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55edd8e92cc8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55edd8e92d48 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55edd8e92e58 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55edd8e92dc8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e92fa8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55edd8e92f18 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e93100 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55edd8e93068 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e93258 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55edd8e931c0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e933b0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55edd8e93318 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e935c0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55edd8e93468 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55edd8e934e8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e93798 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55edd8e93680 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55edd8e93700 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e939b8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55edd8e93858 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55edd8e938d8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e93b98 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55edd8e93a78 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55edd8e93af8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e93d78 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55edd8e93c58 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55edd8e93cd8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e93f00 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55edd8e93e38 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55edd8e940d0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55edd8e93fb8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55edd8e94030 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55edd8e99ef8 <col:57, line:234:5>
|   `-ReturnStmt 0x55edd8e99ee8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55edd8e99ed0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55edd8e99e78 <col:9, col:41> 'int'
|         |-MemberExpr 0x55edd8e99e48 <col:9> '<bound member function type>' ->xmessage 0x55edd8e93f00
|         | `-CXXThisExpr 0x55edd8e99e38 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55edd8e99eb8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55edd8e99ea0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55edd8e99e18 <col:18, col:40> 'String' (CXXTemporary 0x55edd8e99e18)
|               `-CallExpr 0x55edd8e99de0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55edd8e99dc8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55edd8e99d40 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55edd8e96158 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55edd8e99d60 <col:31> 'const String' lvalue ParmVar 0x55edd8e94030 'str' 'const String &'
|                 `-DeclRefExpr 0x55edd8e99d80 <col:36> 'const String' lvalue ParmVar 0x55edd8e93fb8 'anno' 'const String &'
|-CXXMethodDecl 0x55edd8e94410 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55edd8e94190 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55edd8e94210 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55edd8e942e0 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55edd8e9a188 <col:68, line:243:5>
|   `-ReturnStmt 0x55edd8e9a178 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55edd8e9a160 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55edd8e9a100 <col:9, col:41> 'int'
|         |-MemberExpr 0x55edd8e9a0d0 <col:9> '<bound member function type>' ->xmessage 0x55edd8e940d0
|         | `-CXXThisExpr 0x55edd8e9a0c0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55edd8e99f98 <col:18> 'const String' lvalue ParmVar 0x55edd8e94190 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55edd8e9a148 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55edd8e9a130 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55edd8e9a0a0 <col:24, col:40> 'String' (CXXTemporary 0x55edd8e9a0a0)
|               `-CXXMemberCallExpr 0x55edd8e9a038 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55edd8e99fc8 <col:24> '<bound member function type>' ->vformat 0x55edd8e955f0
|                 | `-CXXThisExpr 0x55edd8e99fb8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55edd8e9a068 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55edd8e99ff8 <col:32> 'const char *' lvalue ParmVar 0x55edd8e94210 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55edd8e9a080 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55edd8e9a018 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55edd8e942e0 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55edd8e946b0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55edd8e944d8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55edd8e94550 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55edd8e945c8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55edd8e9a4c8 <col:23, line:254:5>
|   `-ReturnStmt 0x55edd8e9a4b8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55edd8e9a4a0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55edd8e9a440 <col:9, col:71> 'int'
|         |-MemberExpr 0x55edd8e9a410 <col:9> '<bound member function type>' ->xmessage 0x55edd8e940d0
|         | `-CXXThisExpr 0x55edd8e9a400 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55edd8e9a488 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55edd8e9a470 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55edd8e9a3c0 <col:18, col:65> 'String' (CXXTemporary 0x55edd8e9a3c0)
|         |     `-CallExpr 0x55edd8e9a358 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55edd8e9a340 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55edd8e9a228 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55edd8e96158 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55edd8e9a248 <col:31> 'const String' lvalue ParmVar 0x55edd8e94550 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55edd8e9a3a0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55edd8e9a388 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55edd8e9a320 <col:37, col:64> 'String' (CXXTemporary 0x55edd8e9a320)
|         |             `-CallExpr 0x55edd8e9a2f0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55edd8e9a2d8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55edd8e9a268 <col:37> 'String (const String &)' lvalue CXXMethod 0x55edd8e967a8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55edd8e9a288 <col:56> 'const String' lvalue ParmVar 0x55edd8e944d8 'landmark' 'const String &'
|         `-DeclRefExpr 0x55edd8e9a3e0 <col:68> 'const String' lvalue ParmVar 0x55edd8e945c8 'str' 'const String &'
|-CXXMethodDecl 0x55edd8e94a30 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55edd8e94778 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55edd8e947f0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55edd8e94870 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55edd8e948e8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55edd8e9a780 <col:34, line:267:5>
|   `-ReturnStmt 0x55edd8e9a770 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55edd8e9a758 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55edd8e9a6f0 <col:9, col:51> 'int'
|         |-MemberExpr 0x55edd8e9a6c0 <col:9> '<bound member function type>' ->xmessage 0x55edd8e946b0
|         | `-CXXThisExpr 0x55edd8e9a6b0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55edd8e9a568 <col:18> 'const String' lvalue ParmVar 0x55edd8e94778 'landmark' 'const String &'
|         |-DeclRefExpr 0x55edd8e9a588 <col:28> 'const String' lvalue ParmVar 0x55edd8e947f0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55edd8e9a740 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55edd8e9a728 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55edd8e9a690 <col:34, col:50> 'String' (CXXTemporary 0x55edd8e9a690)
|               `-CXXMemberCallExpr 0x55edd8e9a628 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55edd8e9a5b8 <col:34> '<bound member function type>' ->vformat 0x55edd8e955f0
|                 | `-CXXThisExpr 0x55edd8e9a5a8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55edd8e9a658 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55edd8e9a5e8 <col:42> 'const char *' lvalue ParmVar 0x55edd8e94870 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55edd8e9a670 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55edd8e9a608 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55edd8e948e8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55edd8e94b40 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55edd8e9a800 <col:25, line:288:5>
|   `-ReturnStmt 0x55edd8e9a7f0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55edd8e9a7d8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55edd8e9a7a8 <col:9> 'const int' lvalue ->_nerrors 0x55edd8e993d8
|         `-CXXThisExpr 0x55edd8e9a798 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55edd8e94d50 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55edd8e94bf8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55edd8e94c78 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e95038 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55edd8e94e18 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55edd8e94e98 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55edd8e94f10 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55edd8e951d0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55edd8e95108 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e95418 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55edd8e95290 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55edd8e95308 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55edd8e9aa60 <col:58, line:357:5>
|   `-ReturnStmt 0x55edd8e9aa50 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55edd8e9aa38 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55edd8e9aa08 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55edd8e9a9f0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55edd8e9a9d0 <col:9, col:29> 'String' (CXXTemporary 0x55edd8e9a9d0)
|             `-CallExpr 0x55edd8e9a960 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55edd8e9a948 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55edd8e9a8c8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55edd8e95038 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55edd8e9a868 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55edd8e9a998 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55edd8e9a888 <col:21> 'const char *' lvalue ParmVar 0x55edd8e95290 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55edd8e9a9b0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55edd8e9a8a8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55edd8e95308 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55edd8e955f0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55edd8e954e0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55edd8e95558 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55edd8e95748 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55edd8e956b8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55edd8e958c8 <line:393:5, col:46> col:20 used decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55edd8e95800 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55edd8e95b60 <line:424:5, col:69> col:19 used emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55edd8e95980 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55edd8e95a00 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55edd8e95a78 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55edd8e95cc0 <line:438:5, line:441:5> line:438:18 used account 'void (int)' virtual
| |-ParmVarDecl 0x55edd8e95c30 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55edd8e9ab78 <col:37, line:441:5>
|   `-IfStmt 0x55edd8e9ab60 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55edd8e9aae8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55edd8e9aab8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55edd8e9aa78 <col:6> 'int' lvalue ParmVar 0x55edd8e95c30 'level' 'int'
|     | `-ImplicitCastExpr 0x55edd8e9aad0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55edd8e9aa98 <col:15> 'ErrorHandler::Level' EnumConstant 0x55edd8e91c80 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55edd8e9ab48 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55edd8e9ab18 <col:8> 'int' lvalue ->_nerrors 0x55edd8e993d8
|         `-CXXThisExpr 0x55edd8e9ab08 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55edd8e95d88 <line:446:5, line:448:5> line:446:18 used clear 'void ()' virtual
| `-CompoundStmt 0x55edd8e9ac10 <col:26, line:448:5>
|   `-BinaryOperator 0x55edd8e9abf0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55edd8e9aba0 <col:2> 'int' lvalue ->_nerrors 0x55edd8e993d8
|     | `-CXXThisExpr 0x55edd8e9ab90 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55edd8e9abd0 <col:13> 'int' 0
|-CXXMethodDecl 0x55edd8e95f50 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55edd8e95e40 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55edd8e95eb8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55edd8e96158 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55edd8e96010 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55edd8e96088 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55edd8e96408 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55edd8e96218 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55edd8e96298 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55edd8e96318 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55edd8e964c0 <col:59> 0 0
|-CXXMethodDecl 0x55edd8e96658 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55edd8e96538 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55edd8e965b8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55edd8e9b280 <col:70, line:534:5>
|   |-DeclStmt 0x55edd8e9ad80 <line:528:2, col:20>
|   | |-VarDecl 0x55edd8e9ac38 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55edd8e9aca0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55edd8e9acd8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55edd8e9ad40 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55edd8e9ae50 <line:529:2, col:23>
|   | `-VarDecl 0x55edd8e9adb0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55edd8e9ae38 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55edd8e9ae18 <col:18> 'const char *' lvalue ParmVar 0x55edd8e96538 'begin' 'const char *'
|   |-DoStmt 0x55edd8e9b218 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55edd8e9b148 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55edd8e9b130 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55edd8e9b110 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55edd8e9ae68 <col:6> 'const char *' lvalue Var 0x55edd8e9adb0 'x' 'const char *'
|   | |     `-CallExpr 0x55edd8e9b060 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55edd8e9b048 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55edd8e9b000 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55edd8e998b0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55edd8e9b0c8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55edd8e9b0b0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55edd8e9af20 <col:20, col:27> 'String' (CXXTemporary 0x55edd8e9af20)
|   | |       |     `-CXXTemporaryObjectExpr 0x55edd8e9aee8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55edd8e9b0e0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55edd8e9af40 <col:30> 'const char *' lvalue Var 0x55edd8e9adb0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55edd8e9b0f8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55edd8e9af60 <col:33> 'const char *' lvalue ParmVar 0x55edd8e965b8 'end' 'const char *'
|   | |       |-UnaryOperator 0x55edd8e9afa0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55edd8e9af80 <col:39> 'String' lvalue Var 0x55edd8e9ac38 'name' 'String'
|   | |       |-UnaryOperator 0x55edd8e9afd8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55edd8e9afb8 <col:46> 'String' lvalue Var 0x55edd8e9acd8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55edd8e9aff0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55edd8e9b200 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55edd8e9b1e8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55edd8e9b1c8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55edd8e9b198 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55edd8c469f8
|   |         `-ImplicitCastExpr 0x55edd8e9b180 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55edd8e9b160 <col:11> 'String' lvalue Var 0x55edd8e9ac38 'name' 'String'
|   `-ReturnStmt 0x55edd8e9b270 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55edd8e9b258 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55edd8e9b238 <col:9> 'const char *' lvalue Var 0x55edd8e9adb0 'x' 'const char *'
|-CXXMethodDecl 0x55edd8e967a8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55edd8e96718 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55edd8e9b888 <col:55, line:550:5>
|   `-IfStmt 0x55edd8e9b860 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55edd8e9b4c0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55edd8e9b4a8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55edd8e9b490 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55edd8e9b470 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55edd8e9b440 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55edd8c469f8
|     | |       `-DeclRefExpr 0x55edd8e9b2e0 <col:6> 'const String' lvalue ParmVar 0x55edd8e96718 'x' 'const String &'
|     | `-BinaryOperator 0x55edd8e9b420 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55edd8e9b3f0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55edd8e9b3a0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55edd8e9b388 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55edd8e9b340 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55edd8c60230 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55edd8e9b300 <col:11> 'const String' lvalue ParmVar 0x55edd8e96718 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55edd8e9b320 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55edd8e9b408 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55edd8e9b3d8 <col:19> 'char' 123
|     |-ReturnStmt 0x55edd8e9b530 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55edd8e9b500 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55edd8e9b4e0 <col:13> 'const String' lvalue ParmVar 0x55edd8e96718 'x' 'const String &'
|     `-IfStmt 0x55edd8e9b838 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55edd8e9b5c8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55edd8e9b5b0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55edd8e9b590 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55edd8e9b560 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55edd8c469f8
|       |       `-DeclRefExpr 0x55edd8e9b540 <col:11> 'const String' lvalue ParmVar 0x55edd8e96718 'x' 'const String &'
|       |-ReturnStmt 0x55edd8e9b750 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55edd8e9b738 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55edd8e9b708 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55edd8e9b6f0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55edd8e9b6d0 <col:13, col:29> 'String' (CXXTemporary 0x55edd8e9b6d0)
|       |         `-CallExpr 0x55edd8e9b680 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55edd8e9b668 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55edd8e9b5e0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55edd8e95f50 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55edd8e9b6b0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55edd8e9b600 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55edd8e9b620 <col:28> 'const String' lvalue ParmVar 0x55edd8e96718 'x' 'const String &'
|       `-ReturnStmt 0x55edd8e9b828 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55edd8e9b810 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55edd8e9b7e0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55edd8e9b7c8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55edd8e9b7a8 <col:13, col:20> 'String' (CXXTemporary 0x55edd8e9b7a8)
|                 `-CXXTemporaryObjectExpr 0x55edd8e9b770 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55edd8e969a8 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55edd8e96860 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55edd8e968d8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55edd8e99b58 <col:71> 'bool' false
|-CXXRecordDecl 0x55edd8e96a58 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55edd8e96d58 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55edd8e96cf0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55edd8e96c90 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55edd8e96c50 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55edd8c43290 'String'
|       | `-CXXRecord 0x55edd8c43200 'String'
|       |-BuiltinType 0x55edd8918370 'int'
|       `-DecayedType 0x55edd8e942b0 '__va_list_tag *' sugar
|         |-TypedefType 0x55edd8e94280 'va_list' sugar
|         | |-Typedef 0x55edd8b34340 'va_list'
|         | `-TypedefType 0x55edd8b342f0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55edd8a6bf18 '__gnuc_va_list'
|         |   `-TypedefType 0x55edd8a6be80 '__builtin_va_list' sugar
|         |     |-Typedef 0x55edd8959bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55edd8959b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55edd89190c0 '__va_list_tag'
|         |         `-CXXRecord 0x55edd8919028 '__va_list_tag'
|         `-PointerType 0x55edd8b39be0 '__va_list_tag *'
|           `-RecordType 0x55edd89190c0 '__va_list_tag'
|             `-CXXRecord 0x55edd8919028 '__va_list_tag'
|-EnumDecl 0x55edd8e96db0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55edd8e96eb0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55edd8e97410 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e96e90 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55edd8e96e70 <col:16> 'int' 1
| |-EnumConstantDecl 0x55edd8e96f40 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55edd8e97428 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e96f20 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55edd8e96f00 <col:21> 'int' 2
| |-EnumConstantDecl 0x55edd8e96fd0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55edd8e97440 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e96fb0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55edd8e96f90 <col:22> 'int' 4
| |-EnumConstantDecl 0x55edd8e97060 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55edd8e97458 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e97040 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55edd8e97020 <col:17> 'int' 8
| |-EnumConstantDecl 0x55edd8e970f0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55edd8e97470 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e970d0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55edd8e970b0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55edd8e97180 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55edd8e97488 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e97160 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55edd8e97140 <col:19> 'int' 32
| |-EnumConstantDecl 0x55edd8e97210 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55edd8e974a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e971f0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55edd8e971d0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55edd8e972a0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55edd8e974b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e97280 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55edd8e97260 <col:14> 'int' 128
| |-EnumConstantDecl 0x55edd8e97330 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55edd8e974d0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55edd8e97310 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55edd8e972f0 <col:16> 'int' 256
| `-EnumConstantDecl 0x55edd8e973c0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55edd8e98f60 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55edd8e973a0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55edd8e97380 <col:12> 'int' 1024
|-CXXMethodDecl 0x55edd8e99168 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55edd8e98f88 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55edd8e99020 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55edd8e992f0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55edd8e99228 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55edd8e99398 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55edd8e993d8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55edd8e99438 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55edd8e994b0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55edd8e998b0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55edd8e99528 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55edd8e995a8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55edd8e99628 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55edd8e996a0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55edd8e99718 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55edd8e99790 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55edd8e999d8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55edd8e999d8
| `-ParmVarDecl 0x55edd8e99ae8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55edd8e9bbe8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55edd8e9bbe8
  `-ParmVarDecl 0x55edd8e9bcf8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55edd8c4bc90 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55edd8c4bda8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55edd8c4be48 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55edd8c4bea8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55edd8c4bf08 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55edd8c4bfb8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55edd8c4c2c0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55edd8c4c3d8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55edd8c4c480 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55edd8c4c4e8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55edd8c4c578 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55edd8c52610 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55edd8c52a48 <col:12>
|-CXXConstructorDecl 0x55edd8c52718 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55edd8c52828 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55edd8c4c480 'data' 'const char *'
| | `-ImplicitCastExpr 0x55edd8c54fd0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55edd8c54fa0 <col:12> 'const char *const' lvalue .data 0x55edd8c4c480
| |     `-DeclRefExpr 0x55edd8c54f80 <col:12> 'const String::rep_t' lvalue ParmVar 0x55edd8c52828 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55edd8c4c4e8 'length' 'int'
| | `-ImplicitCastExpr 0x55edd8c55060 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55edd8c55030 <col:12> 'const int' lvalue .length 0x55edd8c4c4e8
| |     `-DeclRefExpr 0x55edd8c55010 <col:12> 'const String::rep_t' lvalue ParmVar 0x55edd8c52828 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55edd8c4c578 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55edd8c550f0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55edd8c550c0 <col:12> 'String::memo_t *const' lvalue .memo 0x55edd8c4c578
| |     `-DeclRefExpr 0x55edd8c550a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55edd8c52828 '' 'const String::rep_t &'
| `-CompoundStmt 0x55edd8c55148 <col:12>
|-CXXConstructorDecl 0x55edd8c528c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55edd8c528c8
| `-ParmVarDecl 0x55edd8c529d8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55edd8c57f30 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55edd8c63948 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55edd8c63a58 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55edd8c63f70 <col:12>
|   |-BinaryOperator 0x55edd8c63d88 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55edd8c63d40 <col:12> 'const char *' lvalue ->data 0x55edd8c4c480
|   | | `-CXXThisExpr 0x55edd8c63d30 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55edd8c63d70 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55edd8c63d00 <col:12> 'const char *const' lvalue .data 0x55edd8c4c480
|   |     `-DeclRefExpr 0x55edd8c63ce0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55edd8c63a58 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55edd8c63e50 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55edd8c63e08 <col:12> 'int' lvalue ->length 0x55edd8c4c4e8
|   | | `-CXXThisExpr 0x55edd8c63df8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55edd8c63e38 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55edd8c63dc8 <col:12> 'const int' lvalue .length 0x55edd8c4c4e8
|   |     `-DeclRefExpr 0x55edd8c63da8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55edd8c63a58 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55edd8c63f18 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55edd8c63ed0 <col:12> 'String::memo_t *' lvalue ->memo 0x55edd8c4c578
|   | | `-CXXThisExpr 0x55edd8c63ec0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55edd8c63f00 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55edd8c63e90 <col:12> 'String::memo_t *const' lvalue .memo 0x55edd8c4c578
|   |     `-DeclRefExpr 0x55edd8c63e70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55edd8c63a58 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55edd8c63f60 <col:12>
|     `-UnaryOperator 0x55edd8c63f48 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55edd8c63f38 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55edd8c63ac8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55edd8c63ac8
  `-ParmVarDecl 0x55edd8c63bd8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55edd8c43200 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55edd8c43318 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55edd8c433a8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55edd8c433e8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55edd8918dc0 'const char *'
|   `-QualType 0x55edd8918311 'const char' const
|     `-BuiltinType 0x55edd8918310 'char'
|-TypedefDecl 0x55edd8c43470 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55edd8c43440 'String::const_iterator' sugar
|   |-Typedef 0x55edd8c433e8 'const_iterator'
|   `-PointerType 0x55edd8918dc0 'const char *'
|     `-QualType 0x55edd8918311 'const char' const
|       `-BuiltinType 0x55edd8918310 'char'
|-TypedefDecl 0x55edd8c435e0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55edd8c43550 'int (String::*)() const'
|   |-RecordType 0x55edd8c43290 'String'
|   | `-CXXRecord 0x55edd8c43200 'String'
|   `-ParenType 0x55edd8c434f0 'int () const' sugar
|     `-FunctionProtoType 0x55edd8c17080 'int () const' const cdecl
|       `-BuiltinType 0x55edd8918370 'int'
|-TypedefDecl 0x55edd8c43648 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55edd8a6bc60 'int64_t' sugar
|   |-Typedef 0x55edd89812d0 'int64_t'
|   `-TypedefType 0x55edd895a4d0 '__int64_t' sugar
|     |-Typedef 0x55edd895a0a8 '__int64_t'
|     `-BuiltinType 0x55edd8918390 'long'
|-TypedefDecl 0x55edd8c436b0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55edd8a6bb80 'uint64_t' sugar
|   |-Typedef 0x55edd8981470 'uint64_t'
|   `-TypedefType 0x55edd895a560 '__uint64_t' sugar
|     |-Typedef 0x55edd895a118 '__uint64_t'
|     `-BuiltinType 0x55edd8918430 'unsigned long'
|-TypedefDecl 0x55edd8c43740 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55edd8c43710 'String::intmax_t' sugar
|   |-Typedef 0x55edd8c43648 'intmax_t'
|   `-TypedefType 0x55edd8a6bc60 'int64_t' sugar
|     |-Typedef 0x55edd89812d0 'int64_t'
|     `-TypedefType 0x55edd895a4d0 '__int64_t' sugar
|       |-Typedef 0x55edd895a0a8 '__int64_t'
|       `-BuiltinType 0x55edd8918390 'long'
|-TypedefDecl 0x55edd8c437d0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55edd8c437a0 'String::uintmax_t' sugar
|   |-Typedef 0x55edd8c436b0 'uintmax_t'
|   `-TypedefType 0x55edd8a6bb80 'uint64_t' sugar
|     |-Typedef 0x55edd8981470 'uint64_t'
|     `-TypedefType 0x55edd895a560 '__uint64_t' sugar
|       |-Typedef 0x55edd895a118 '__uint64_t'
|       `-BuiltinType 0x55edd8918430 'unsigned long'
|-CXXConstructorDecl 0x55edd8c43890 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55edd8c43a38 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55edd8c43978 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55edd8c43be8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55edd8c43b28 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55edd8c43d40 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55edd8c43cb0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55edd8c43f58 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55edd8c43e08 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55edd8c43e88 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55edd8c44178 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55edd8c44028 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55edd8c440a8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55edd8c44398 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55edd8c44248 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55edd8c442c8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55edd8c445b8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55edd8c44468 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55edd8c444e8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55edd8c44748 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55edd8c44680 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55edd8c448c8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55edd8c44808 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55edd8c44a58 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55edd8c44990 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55edd8c44bb0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55edd8c44b20 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55edd8c44d08 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55edd8c44c78 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55edd8c44e60 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55edd8c44dd0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55edd8c44fe8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55edd8c44f28 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55edd8c45178 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55edd8c450b0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55edd8c45308 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55edd8c45240 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55edd8c45498 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55edd8c453d0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55edd8c45590 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55edd8c456b8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55edd8c45838 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55edd8c45770 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55edd8c45988 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55edd8c458f8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55edd8c45a40 <col:63> "" ""
|-CXXMethodDecl 0x55edd8c45b88 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55edd8c45ac8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55edd8c45d98 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55edd8c45c48 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55edd8c45cc8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55edd8c45fb8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55edd8c45e60 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55edd8c45ee0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55edd8c46298 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55edd8c46078 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55edd8c460f8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55edd8c520e0 <col:55> 'int' 10
| `-ParmVarDecl 0x55edd8c46170 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55edd8c52100 <col:76> 'bool' true
|-CXXMethodDecl 0x55edd8c46578 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55edd8c46360 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55edd8c463e0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55edd8c52110 <col:56> 'int' 10
| `-ParmVarDecl 0x55edd8c46458 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55edd8c52130 <col:77> 'bool' true
|-CXXMethodDecl 0x55edd8c46680 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55edd8c46748 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55edd8c46810 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55edd8c468b0 <col:20>
| `-OptimizeNoneAttr 0x55edd8c46908 <col:30>
|-CXXConversionDecl 0x55edd8c469f8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55edd8c46ac8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55edd8c46b88 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55edd8c46c78 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55edd8c46d38 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55edd8c46eb8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55edd8c46df0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55edd8c47008 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55edd8c46f78 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55edd8c470f8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55edd8c471b8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55edd8c47408 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55edd8c47270 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55edd8c472f0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55edd8c47668 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55edd8c474d0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55edd8c47550 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55edd8c47738 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55edd8c47948 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55edd8c477f0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55edd8c47870 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55edd8c47b68 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55edd8c47a10 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55edd8c47a90 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55edd8c47cf8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55edd8c47c30 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55edd8c47de8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55edd8c47f58 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55edd8c47e98 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55edd8c48168 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55edd8c48018 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55edd8c48098 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55edd8c48380 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55edd8c48228 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55edd8c482a0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55edd8c48510 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55edd8c48440 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55edd8c48730 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55edd8c485d0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55edd8c48650 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55edd8c48880 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55edd8c487f0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55edd8c48a58 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55edd8c48940 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55edd8c489c0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55edd8c48ba8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55edd8c48b18 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55edd8c48dc0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55edd8c48c60 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55edd8c48ce0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55edd8c52140 <col:39> 'int' 0
|-CXXMethodDecl 0x55edd8c48fe0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55edd8c48e80 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55edd8c48f00 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55edd8c52160 <col:48> 'int' 0
|-CXXMethodDecl 0x55edd8c491c0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55edd8c490a0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55edd8c49120 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55edd8c52180 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55edd8c49290 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55edd8c49350 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55edd8c49410 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55edd8c494d0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55edd8c49590 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55edd8c49738 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55edd8c49640 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55edd8c498b8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55edd8c497f0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55edd8c49a90 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55edd8c49978 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55edd8c49c08 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55edd8c49b48 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55edd8c49d50 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55edd8c49cc0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55edd8c49ea0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55edd8c49e10 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55edd8c4a078 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55edd8c49f60 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55edd8c49fe0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55edd8c4a258 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55edd8c4a140 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55edd8c4a1c0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55edd8c4a3a8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55edd8c4a318 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55edd8c4a5b8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55edd8c4a468 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55edd8c4a4e8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55edd8c4a718 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55edd8c4a680 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55edd8c4a870 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55edd8c4a7d8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55edd8c4a918 <col:57> "" ""
|-CXXMethodDecl 0x55edd8c4aa28 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55edd8c4a998 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55edd8c4ab78 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55edd8c4aae8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55edd8c4acf8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55edd8c4ac30 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55edd8c4adc0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55edd8c4ae80 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55edd8c4af40 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55edd8c4afe0 <col:49> "" ""
|-CXXMethodDecl 0x55edd8c4b070 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55edd8c4b130 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55edd8c4b220 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55edd8c4b2e8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55edd8c4b3a8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55edd8c4b468 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55edd8c4b560 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55edd8c4b628 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55edd8c4b6f0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55edd8c4b8c8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55edd8c4b7a8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55edd8c4b828 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55edd8c4baf0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55edd8c4b990 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55edd8c4ba10 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55edd8c4bc00 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55edd8c4bc68 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55edd8c4bc90 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55edd8c4bda8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55edd8c4be48 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55edd8c4bea8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55edd8c4bf08 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55edd8c4bfb8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55edd8c4c020 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55edd8c4c258 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55edd8c4c2a8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55edd8c4c238 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55edd8c4c148 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55edd8c4c0f0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55edd8c4c130 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55edd8c4c110 <col:32> 'int' 8
|-CXXRecordDecl 0x55edd8c4c2c0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55edd8c4c3d8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55edd8c4c480 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55edd8c4c4e8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55edd8c4c578 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55edd8c52610 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55edd8c52a48 <col:12>
| |-CXXConstructorDecl 0x55edd8c52718 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55edd8c52828 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55edd8c4c480 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55edd8c54fd0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55edd8c54fa0 <col:12> 'const char *const' lvalue .data 0x55edd8c4c480
| | |     `-DeclRefExpr 0x55edd8c54f80 <col:12> 'const String::rep_t' lvalue ParmVar 0x55edd8c52828 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55edd8c4c4e8 'length' 'int'
| | | `-ImplicitCastExpr 0x55edd8c55060 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55edd8c55030 <col:12> 'const int' lvalue .length 0x55edd8c4c4e8
| | |     `-DeclRefExpr 0x55edd8c55010 <col:12> 'const String::rep_t' lvalue ParmVar 0x55edd8c52828 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55edd8c4c578 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55edd8c550f0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55edd8c550c0 <col:12> 'String::memo_t *const' lvalue .memo 0x55edd8c4c578
| | |     `-DeclRefExpr 0x55edd8c550a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55edd8c52828 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55edd8c55148 <col:12>
| |-CXXConstructorDecl 0x55edd8c528c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55edd8c528c8
| | `-ParmVarDecl 0x55edd8c529d8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55edd8c57f30 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55edd8c63948 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55edd8c63a58 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55edd8c63f70 <col:12>
| |   |-BinaryOperator 0x55edd8c63d88 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55edd8c63d40 <col:12> 'const char *' lvalue ->data 0x55edd8c4c480
| |   | | `-CXXThisExpr 0x55edd8c63d30 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55edd8c63d70 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55edd8c63d00 <col:12> 'const char *const' lvalue .data 0x55edd8c4c480
| |   |     `-DeclRefExpr 0x55edd8c63ce0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55edd8c63a58 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55edd8c63e50 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55edd8c63e08 <col:12> 'int' lvalue ->length 0x55edd8c4c4e8
| |   | | `-CXXThisExpr 0x55edd8c63df8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55edd8c63e38 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55edd8c63dc8 <col:12> 'const int' lvalue .length 0x55edd8c4c4e8
| |   |     `-DeclRefExpr 0x55edd8c63da8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55edd8c63a58 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55edd8c63f18 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55edd8c63ed0 <col:12> 'String::memo_t *' lvalue ->memo 0x55edd8c4c578
| |   | | `-CXXThisExpr 0x55edd8c63ec0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55edd8c63f00 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55edd8c63e90 <col:12> 'String::memo_t *const' lvalue .memo 0x55edd8c4c578
| |   |     `-DeclRefExpr 0x55edd8c63e70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55edd8c63a58 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55edd8c63f60 <col:12>
| |     `-UnaryOperator 0x55edd8c63f48 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55edd8c63f38 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55edd8c63ac8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55edd8c63ac8
|   `-ParmVarDecl 0x55edd8c63bd8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55edd8c4c5f0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55edd8c4c838 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55edd8c4c658 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55edd8c4c6d8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55edd8c4c750 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55edd8c525d0 <col:79, line:261:5>
|   |-BinaryOperator 0x55edd8c52248 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55edd8c521e0 <col:2, col:5> 'const char *' lvalue .data 0x55edd8c4c480
|   | | `-MemberExpr 0x55edd8c521b0 <col:2> 'String::rep_t' lvalue ->_r 0x55edd8c4c5f0
|   | |   `-CXXThisExpr 0x55edd8c521a0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55edd8c52230 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55edd8c52210 <col:12> 'const char *' lvalue ParmVar 0x55edd8c4c658 'data' 'const char *'
|   |-BinaryOperator 0x55edd8c52310 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55edd8c522a8 <col:2, col:5> 'int' lvalue .length 0x55edd8c4c4e8
|   | | `-MemberExpr 0x55edd8c52278 <col:2> 'String::rep_t' lvalue ->_r 0x55edd8c4c5f0
|   | |   `-CXXThisExpr 0x55edd8c52268 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55edd8c522f8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55edd8c522d8 <col:14> 'int' lvalue ParmVar 0x55edd8c4c6d8 'length' 'int'
|   `-IfStmt 0x55edd8c525b8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55edd8c52430 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55edd8c52418 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55edd8c523f8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55edd8c523d8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55edd8c52370 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55edd8c4c578
|     |       | `-MemberExpr 0x55edd8c52340 <col:7> 'String::rep_t' lvalue ->_r 0x55edd8c4c5f0
|     |       |   `-CXXThisExpr 0x55edd8c52330 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55edd8c523c0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55edd8c523a0 <col:17> 'String::memo_t *' lvalue ParmVar 0x55edd8c4c750 'memo' 'String::memo_t *'
|     `-CallExpr 0x55edd8c52590 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55edd8c52578 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55edd8c52480 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55edd8c3b268 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55edd8c524e8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55edd8c4be48
|         `-ImplicitCastExpr 0x55edd8c524d0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55edd8c524b0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55edd8c4c750 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55edd8c4cae8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55edd8c4c908 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55edd8c4c988 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55edd8c4ca00 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55edd8c4c5f0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55edd8c52a58 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55edd8c52be8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55edd8c52b50 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55edd8c52ac0 <col:2> '<bound member function type>' ->assign_memo 0x55edd8c4c838
|     | `-ImplicitCastExpr 0x55edd8c52b88 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55edd8c52ab0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55edd8c52ba0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55edd8c52af0 <col:14> 'const char *' lvalue ParmVar 0x55edd8c4c908 'data' 'const char *'
|     |-ImplicitCastExpr 0x55edd8c52bb8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55edd8c52b10 <col:20> 'int' lvalue ParmVar 0x55edd8c4c988 'length' 'int'
|     `-ImplicitCastExpr 0x55edd8c52bd0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55edd8c52b30 <col:28> 'String::memo_t *' lvalue ParmVar 0x55edd8c4ca00 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55edd8c4cc78 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55edd8c4cbb8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55edd8c52e40 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55edd8c52dc0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55edd8c52c10 <col:2> '<bound member function type>' ->assign_memo 0x55edd8c4c838
|     | `-CXXThisExpr 0x55edd8c52c00 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55edd8c52df8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55edd8c52c90 <col:14, col:19> 'const char *' lvalue .data 0x55edd8c4c480
|     |   `-MemberExpr 0x55edd8c52c60 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55edd8c4c5f0
|     |     `-DeclRefExpr 0x55edd8c52c40 <col:14> 'const String' lvalue ParmVar 0x55edd8c4cbb8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55edd8c52e10 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55edd8c52d10 <col:25, col:30> 'int' lvalue .length 0x55edd8c4c4e8
|     |   `-MemberExpr 0x55edd8c52ce0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55edd8c4c5f0
|     |     `-DeclRefExpr 0x55edd8c52cc0 <col:25> 'const String' lvalue ParmVar 0x55edd8c4cbb8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55edd8c52e28 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55edd8c52d90 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55edd8c4c578
|         `-MemberExpr 0x55edd8c52d60 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55edd8c4c5f0
|           `-DeclRefExpr 0x55edd8c52d40 <col:38> 'const String' lvalue ParmVar 0x55edd8c4cbb8 'x' 'const String &'
|-CXXMethodDecl 0x55edd8c4cd40 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55edd8c53800 <col:31, line:278:5>
|   `-IfStmt 0x55edd8c537e8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55edd8c52ee0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55edd8c52ec8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55edd8c52e98 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55edd8c4c578
|     |     `-MemberExpr 0x55edd8c52e68 <col:6> 'String::rep_t' lvalue ->_r 0x55edd8c4c5f0
|     |       `-CXXThisExpr 0x55edd8c52e58 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55edd8c537c0 <col:15, line:277:2>
|       |-ParenExpr 0x55edd8c53390 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55edd8c53360 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55edd8c52ff0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55edd8c52fd8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55edd8c52fc0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55edd8c52f80 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55edd8c4be48
|       |   |       `-ImplicitCastExpr 0x55edd8c52f68 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55edd8c52f38 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55edd8c4c578
|       |   |           `-MemberExpr 0x55edd8c52f08 <col:27> 'String::rep_t' lvalue ->_r 0x55edd8c4c5f0
|       |   |             `-CXXThisExpr 0x55edd8c52ef8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55edd8c53050 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55edd8c53030 <col:54> 'int' 0
|       |   `-CallExpr 0x55edd8c532c0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55edd8c532a8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55edd8c53228 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55edd89b24c0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55edd8c53300 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55edd8c53138 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55edd8c53318 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55edd8c53168 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55edd8c53330 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55edd8c531a0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55edd8c53348 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55edd8c53210 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55edd8c531f8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55edd8c531c0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55edd8c536e0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55edd8c535a0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55edd8c53588 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55edd8c53500 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55edd8c3c6b0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55edd8c534d0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55edd8c4be48
|       | |   `-ImplicitCastExpr 0x55edd8c534b8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55edd8c53488 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55edd8c4c578
|       | |       `-MemberExpr 0x55edd8c53458 <col:40> 'String::rep_t' lvalue ->_r 0x55edd8c4c5f0
|       | |         `-CXXThisExpr 0x55edd8c53448 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55edd8c536a0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55edd8c53688 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55edd8c535c8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55edd8c51520 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55edd8c536c8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55edd8c53628 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55edd8c4c578
|       |       `-MemberExpr 0x55edd8c535f8 <col:15> 'String::rep_t' lvalue ->_r 0x55edd8c4c5f0
|       |         `-CXXThisExpr 0x55edd8c535e8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55edd8c537a0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55edd8c53738 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55edd8c4c578
|         | `-MemberExpr 0x55edd8c53708 <col:6> 'String::rep_t' lvalue ->_r 0x55edd8c4c5f0
|         |   `-CXXThisExpr 0x55edd8c536f8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55edd8c53788 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55edd8c53768 <col:16> 'int' 0
|-CXXMethodDecl 0x55edd8c4cfd8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55edd8c4cdf8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55edd8c4ce78 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55edd8c4cef0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55edd8c4d0b0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55edd8c4d300 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55edd8c4d168 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55edd8c4d1e8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55edd8c4d260 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55edd8c4d4e8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55edd8c4d3d0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55edd8c4d450 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55edd8c4d5e8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55edd8c538d8 <col:41, line:286:5>
|   `-ReturnStmt 0x55edd8c538c8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55edd8c53898 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55edd8c53860 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55edd8c53848 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55edd8c53828 <col:46> 'int' 1
|-CXXMethodDecl 0x55edd8c4d888 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55edd8c4d6a0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55edd8c4d720 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55edd8c4d7a0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55edd8c51520 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55edd8c4d950 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55edd8c515f0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55edd8c517c0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55edd8c516a8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55edd8c51728 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55edd8c51880 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55edd8c51948 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55edd8c51a48 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55edd8c51ac0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55edd8c51b38 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55edd8c51ba0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55edd8c51ca0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55edd8c51cf0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55edd8c51c80 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55edd8c51c60 <col:22> 'int' 14
|-CXXMethodDecl 0x55edd8c51f08 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55edd8c51d20 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55edd8c51da0 <col:38> col:41 'int'
| `-ParmVarDecl 0x55edd8c51e20 <col:43> col:46 'int'
|-FriendDecl 0x55edd8c52010 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55edd8c520a0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55edd8e62430 prev 0x55edd8e3ecf0 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x55edd8e62568 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x55edd8e625f8 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x55edd8e626a0 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x55edd8e62740 <col:20>
| `-OptimizeNoneAttr 0x55edd8e62798 <col:30>
|-CXXMethodDecl 0x55edd8e627e8 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x55edd8e62888 <col:20>
| `-OptimizeNoneAttr 0x55edd8e628e0 <col:30>
|-CXXMethodDecl 0x55edd8e62930 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55edd8e629f8 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55edd8e62ac0 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55edd8e62bd8 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x55edd8e62ca0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x55edd8e62d40 <col:20>
| `-OptimizeNoneAttr 0x55edd8e62d98 <col:30>
|-CXXMethodDecl 0x55edd8e62e08 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x55edd8e62ea8 <col:20>
| `-OptimizeNoneAttr 0x55edd8e62f00 <col:30>
|-CXXMethodDecl 0x55edd8e62fa8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x55edd8e63048 <col:20>
| `-OptimizeNoneAttr 0x55edd8e630a0 <col:30>
|-CXXMethodDecl 0x55edd8e630f0 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55edd8e63208 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x55edd8e63328 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x55edd8e63448 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x55edd8e63510 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x55edd8e635b0 <col:62> "" ""
|-AccessSpecDecl 0x55edd8e63620 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x55edd8e63680 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x55edd8e64278 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x55edd8e644a0 <col:29, col:31>
|-CXXMethodDecl 0x55edd8e63748 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x55edd8e63888 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x55edd8e637f8 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x55edd8e63980 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x55edd8e644b0 <col:23, col:25>
|-CXXMethodDecl 0x55edd8e63b38 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x55edd8e63a70 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x55edd8e63e08 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55edd8e63bf0 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55edd8e63c68 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55edd8e63ce0 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55edd8e63f98 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x55edd8e63ed0 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x55edd8e64090 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x55edd8e640f8 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x55edd8e640f8
  `-ParmVarDecl 0x55edd8e64208 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>
