
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e88078 prev 0x558133e7f818 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558133e88170 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x558133e88200 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x558133e88278 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x558133e88338 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x558133e88400 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x558133e88578 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x558133e884b0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x558133e88620 <col:24>
| `-OptimizeNoneAttr 0x558133e88678 <col:34>
|-CXXMethodDecl 0x558133e886c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x558133e88978 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x558133e88770 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558133e887e8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x558133e88868 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x558133e88a30 <line:229:7, col:14> col:7 private
|-FieldDecl 0x558133e88a68 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x558133e88ad0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x558133e88b58 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x558133e88e78 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x558133e88c10 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558133e88c88 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x558133e88d00 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x558133e88d80 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x558133e88f90 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x558133e90908 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x558133e90908
| `-ParmVarDecl 0x558133e90a18 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x558133e90ab8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x558133e90ab8
| `-ParmVarDecl 0x558133e90bc8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x558133f52ab8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e7b090 prev 0x558133e7ae10 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558133e7b188 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x558133e7b218 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x558133e7b278 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x558133e7b368 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x558133e7b468 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x558133e7b638 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x558133e7b4e8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x558133e7b560 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x558133e7b7c8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x558133e7b700 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x558133e7b870 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x558133e7b9a8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x558133e7b8e0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x558133e7bb48 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x558133e7ba88 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x558133e7bce8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x558133e7bc28 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x558133e7bd90 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x558133e7be90 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x558133e7bf70 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e7be70 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x558133e7be50 <col:26> 'int' 1
| `-EnumConstantDecl 0x558133e7bf20 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x558133e7bf88 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e7bf00 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x558133e7bee0 <col:44> 'int' 2
|-CXXMethodDecl 0x558133e7c0d0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x558133e7bfb8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x558133e7c038 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x558133e7c228 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x558133e7c198 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x558133e7c468 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x558133e7c2e8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x558133e7c360 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x558133e7c518 <col:20>
| `-OptimizeNoneAttr 0x558133e7c570 <col:30>
|-CXXMethodDecl 0x558133e7c678 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x558133e7c5b0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x558133e7c720 <col:20>
| `-OptimizeNoneAttr 0x558133e7c778 <col:30>
|-CXXMethodDecl 0x558133e7c7c8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x558133e7c890 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x558133e7c9a8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x558133e7ca30 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x558133e7cab8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x558133e7cb40 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x558133e7cbc8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x558133e7cc58 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x558133e7cd18 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x558133e7cda0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x558133e7ce28 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x558133e7ceb0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x558133e7cf38 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x558133e7cfc0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x558133e7d050 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x558133e7d110 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x558133e7d1a0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x558133e7d2f0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x558133e7d258 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x558133e7d480 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x558133e7d3b0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x558133e7d730 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x558133e7d538 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x558133e7d5b8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x558133e7d638 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x558133e7d7e8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x558133e7d8f0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558133e7db80 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e7d8d0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x558133e7d8b0 <col:33> 'int' 0
| |-EnumConstantDecl 0x558133e7d980 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558133e7db98 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e7d960 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x558133e7d940 <col:32> 'int' 20
| |-EnumConstantDecl 0x558133e7da10 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558133e7dbb0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e7d9f0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x558133e7d9d0 <col:38> 'int' 90
| |-EnumConstantDecl 0x558133e7daa0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558133e7dbc8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e7da80 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x558133e7da60 <col:35> 'int' 100
| `-EnumConstantDecl 0x558133e7db30 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x558133e7dbe0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e7db10 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x558133e7daf0 <col:32> 'int' 2000
|-CXXMethodDecl 0x558133e7dc20 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x558133e7e060 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558133e7ded0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x558133e7df48 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558133e7e130 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x558133e7e2b0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x558133e7e1e0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558133e7e4b8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558133e7e368 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x558133e7e3e0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558133e7e5b8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x558133e7e658 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x558133e7e720 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x558133e7e7b0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x558133e7e9e0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e7e790 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x558133e7e770 <col:36> 'int' EnumConstant 0x558133e7e720 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x558133e7e800 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558133e7e850 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558133e7e8a0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558133e7e8f0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558133e7e940 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x558133e7e990 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x558133e7eac8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x558133e7ea08 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x558133e7eb90 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x558133e7ec50 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x558133e7ed10 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x558133e7edd0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x558133e7eee8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x558133e7efb0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x558133e7f130 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x558133e7f060 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x558133e7f258 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x558133e7f458 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x558133e7f308 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x558133e7f388 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x558133e8cda8 <col:54, line:127:5>
|   |-ParenExpr 0x558133e8cc58 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x558133e8cc28 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x558133e8c918 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x558133e8c8f0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x558133e8c8d8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x558133e8c8c0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x558133e8c890 <col:31> 'Router *' lvalue ->_router 0x558133e8a770
|   |   |         `-CXXThisExpr 0x558133e8c880 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x558133e8c978 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e8c958 <col:48> 'int' 0
|   |   `-CallExpr 0x558133e8cb88 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x558133e8cb70 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e8cb50 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e8cbc8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e8c9e8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x558133e8cbe0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e8ca08 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x558133e8cbf8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e8ca40 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x558133e8cc10 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e8cb38 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e8cb20 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e8cad8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x558133e8ccf0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x558133e8cc88 <col:9> 'Router *' lvalue ->_router 0x558133e8a770
|   | | `-CXXThisExpr 0x558133e8cc78 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x558133e8ccd8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558133e8ccb8 <col:19> 'Router *' lvalue ParmVar 0x558133e7f308 'r' 'Router *'
|   `-BinaryOperator 0x558133e8cd88 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x558133e8cd20 <col:9> 'int' lvalue ->_eindex 0x558133e8a7d8
|     | `-CXXThisExpr 0x558133e8cd10 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x558133e8cd70 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x558133e8cd50 <col:19> 'int' lvalue ParmVar 0x558133e7f388 'eindex' 'int'
|-CXXMethodDecl 0x558133e7f5e0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x558133e7f518 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x558133e7f6b0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x558133e7f778 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x558133e7f818 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x558133e7fa68 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x558133e7f8e0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x558133e7f960 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x558133e7fb18 <col:20>
| `-OptimizeNoneAttr 0x558133e7fb70 <col:30>
|-CXXMethodDecl 0x558133e7fc78 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x558133e7fbb0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x558133e7fd20 <col:20>
| `-OptimizeNoneAttr 0x558133e7fd78 <col:30>
|-CXXMethodDecl 0x558133e7fe48 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x558133e7fdb8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x558133e7fef0 <col:20>
| `-OptimizeNoneAttr 0x558133e7ff48 <col:30>
|-CXXMethodDecl 0x558133e800d8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x558133e7ff80 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x558133e80000 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x558133e80268 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x558133e801a0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x558133e803b8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x558133e80328 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x558133e80508 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x558133e80478 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x558133e80658 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x558133e805c8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x558133e80918 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x558133e80710 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x558133e80790 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x558133e80838 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x558133e809f0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x558133e80ab0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x558133e80d80 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558133e80c30 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x558133e80ca8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x558133e80ea8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x558133e81080 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x558133e80f60 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x558133e80fe0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x558133e81268 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x558133e81148 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x558133e811c8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x558133e815d8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x558133e81328 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558133e813a0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558133e81420 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558133e8c390 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558133e8c370 <col:106> 'int' 0
| `-ParmVarDecl 0x558133e81498 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558133e8c3c8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558133e8c3a8 <col:126> 'int' 0
|-CXXMethodDecl 0x558133e81978 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558133e816a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558133e81740 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558133e817c0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x558133e81838 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558133e8c400 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558133e8c3e0 <col:114> 'int' 0
|-CXXMethodDecl 0x558133e81d08 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558133e81a50 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x558133e81ac8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558133e81b48 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x558133e8c418 <col:96> 'int' 0
| `-ParmVarDecl 0x558133e81bc0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558133e8c458 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558133e8c438 <col:116> 'int' 0
|-CXXMethodDecl 0x558133e82088 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x558133e81dd8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x558133e81e50 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558133e81ed0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558133e8c490 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558133e8c470 <col:109> 'int' 0
| `-ParmVarDecl 0x558133e81f48 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558133e8c4c8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558133e8c4a8 <col:129> 'int' 0
|-CXXMethodDecl 0x558133e82408 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558133e82158 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x558133e821d0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558133e82250 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x558133e822c8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558133e8c500 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558133e8c4e0 <col:117> 'int' 0
|-CXXMethodDecl 0x558133e82798 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558133e824e0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e82558 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558133e825d8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x558133e8c518 <col:99> 'int' 0
| `-ParmVarDecl 0x558133e82650 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558133e8c558 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558133e8c538 <col:119> 'int' 0
|-CXXMethodDecl 0x558133e82bb8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x558133e82868 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x558133e828e8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x558133e82960 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558133e829e0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558133e8c590 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558133e8c570 <col:108> 'int' 0
| `-ParmVarDecl 0x558133e82a60 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x558133e8c5c8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x558133e8c5a8 <col:141> 'int' 0
|-CXXMethodDecl 0x558133e82fd8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x558133e82c90 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x558133e82d10 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x558133e82d88 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558133e82e08 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x558133e82e88 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x558133e8c5e0 <col:121> 'int' 0
|-CXXMethodDecl 0x558133e83408 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x558133e830b8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x558133e83138 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x558133e831b0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558133e83230 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x558133e8c600 <col:98> 'int' 0
| `-ParmVarDecl 0x558133e832b0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x558133e8c620 <col:123> 'int' 0
|-CXXMethodDecl 0x558133e836d0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x558133e834e0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558133e83560 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x558133e835e0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x558133e8c640 <col:80> 'int' 0
|-EnumDecl 0x558133e83788 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x558133e83890 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558133e83b20 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e83870 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x558133e83850 <col:42> 'int' 1
| |-EnumConstantDecl 0x558133e83920 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558133e83b38 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e83900 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x558133e838e0 <col:40> 'int' 2
| |-EnumConstantDecl 0x558133e839b0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558133e83b50 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e83990 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x558133e83970 <col:44> 'int' 4
| |-EnumConstantDecl 0x558133e83a40 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558133e83b68 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e83a20 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x558133e83a00 <col:36> 'int' 7
| `-EnumConstantDecl 0x558133e83ad0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x558133e83b80 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e83ab0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x558133e83a90 <col:34> 'int' 6
|-CXXMethodDecl 0x558133e83e38 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x558133e83ba8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x558133e83c48 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x558133e83cc8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x558133e83d40 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x558133e8c6f8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x558133e8c6e0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x558133e8c6c8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x558133e8c6a8 <col:98, col:105> 'String' (CXXTemporary 0x558133e8c6a8)
|           `-CXXTemporaryObjectExpr 0x558133e8c670 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x558133e840d8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x558133e83f08 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x558133e83f80 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x558133e83ff8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x558133e8c7a8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x558133e8c790 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x558133e8c778 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x558133e8c758 <col:94, col:101> 'String' (CXXTemporary 0x558133e8c758)
| |         `-CXXTemporaryObjectExpr 0x558133e8c720 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x558133e8cf90 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x558133e8cf08 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x558133e8ced8 <col:9> '<bound member function type>' ->add_task_handlers 0x558133e83e38
|     | `-CXXThisExpr 0x558133e8cec8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x558133e8cf48 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x558133e8ce48 <col:27> 'Task *' lvalue ParmVar 0x558133e83f08 'task' 'Task *'
|     |-ImplicitCastExpr 0x558133e8cf60 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x558133e8ce68 <col:33> 'NotifierSignal *' lvalue ParmVar 0x558133e83f80 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x558133e8cf78 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558133e8ce88 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x558133e83ad0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x558133e8cea8 <col:62> 'const String' lvalue ParmVar 0x558133e83ff8 'prefix' 'const String &'
|-CXXMethodDecl 0x558133e842e8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x558133e841a0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x558133e84218 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x558133e8c858 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x558133e8c840 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x558133e8c828 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x558133e8c808 <col:70, col:77> 'String' (CXXTemporary 0x558133e8c808)
| |         `-CXXTemporaryObjectExpr 0x558133e8c7d0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x558133e8d168 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x558133e8d0e0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x558133e8d0b0 <col:9> '<bound member function type>' ->add_task_handlers 0x558133e83e38
|     | `-CXXThisExpr 0x558133e8d0a0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x558133e8d120 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x558133e8d020 <col:27> 'Task *' lvalue ParmVar 0x558133e841a0 'task' 'Task *'
|     |-ImplicitCastExpr 0x558133e8d138 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x558133e8d040 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x558133e8d150 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558133e8d060 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x558133e83ad0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x558133e8d080 <col:57> 'const String' lvalue ParmVar 0x558133e84218 'prefix' 'const String &'
|-CXXMethodDecl 0x558133e845c8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x558133e843b0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e84430 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e844a8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x558133e84878 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x558133e84698 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e84718 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e84798 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x558133e84b68 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x558133e84948 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e849c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e84a40 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x558133e84e18 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x558133e84c38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e84cb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e84d38 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x558133e850c8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x558133e84ee8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e84f68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e84fe8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x558133e85378 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x558133e85198 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e85218 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e85290 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x558133e85628 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x558133e85448 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e854c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e85548 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x558133e85938 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x558133e85750 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e857d0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e85850 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x558133e85c18 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x558133e85a08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e85a88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e85b30 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x558133e85ef8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x558133e85ce8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e85d68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e85e10 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x558133e86160 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x558133e85fc8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x558133e86048 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x558133e860c0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x558133e86408 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x558133e86230 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x558133e862b0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x558133e86328 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x558133e866b8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x558133e864d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e86558 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e865d8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x558133e86968 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x558133e86788 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e86808 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e86880 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x558133e86c18 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x558133e86a38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e86ab8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e86b30 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x558133e86ee8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x558133e86ce8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e86d68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558133e86e08 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x558133e87218 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x558133e86fb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558133e87038 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x558133e870b0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x558133e87128 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558133e8c870 <col:93> 'bool' false
|-CXXMethodDecl 0x558133e87400 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558133e872e8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x558133e87368 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x558133e875d8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558133e874c0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x558133e87540 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x558133e878b8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558133e87698 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x558133e87710 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x558133e87790 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x558133e87808 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x558133e87ba8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558133e87988 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x558133e87a00 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x558133e87a80 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x558133e87af8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x558133e87de0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x558133e87c80 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x558133e87d00 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x558133e87fc8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x558133e87ea8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x558133e87f28 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x558133e88078 prev 0x558133e7f818 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558133e88170 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x558133e88200 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x558133e88278 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x558133e88338 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x558133e88400 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x558133e88578 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x558133e884b0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x558133e88620 <col:24>
| | `-OptimizeNoneAttr 0x558133e88678 <col:34>
| |-CXXMethodDecl 0x558133e886c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x558133e88978 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x558133e88770 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x558133e887e8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x558133e88868 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x558133e88a30 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x558133e88a68 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x558133e88ad0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x558133e88b58 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x558133e88e78 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x558133e88c10 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x558133e88c88 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x558133e88d00 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x558133e88d80 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x558133e88f90 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x558133e90908 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x558133e90908
| | `-ParmVarDecl 0x558133e90a18 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x558133e90ab8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x558133e90ab8
| | `-ParmVarDecl 0x558133e90bc8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x558133f52ab8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558133e89008 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x558133e890a8 <col:38> "" ""
|-CXXMethodDecl 0x558133e89138 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x558133e891d8 <col:44> "" ""
|-AccessSpecDecl 0x558133e89248 <line:260:3, col:10> col:3 private
|-EnumDecl 0x558133e89270 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x558133e89370 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x558133e893c0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e89350 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x558133e89330 <col:27> 'int' 4
|-FieldDecl 0x558133e89478 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x558133e89628 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x558133e896e0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x558133e8a770 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x558133e8a7d8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x558133e8a928 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x558133e8a868 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x558133e8aad8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x558133e8a9e8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x558133e8acb8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x558133e8ab98 <col:20> col:23 'int'
| `-ParmVarDecl 0x558133e8ac18 <col:25> col:28 'int'
|-CXXMethodDecl 0x558133e8af60 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x558133e8ad80 <col:23> col:26 'int'
| |-ParmVarDecl 0x558133e8ae00 <col:28> col:31 'int'
| `-ParmVarDecl 0x558133e8ae78 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x558133e8b018 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x558133e8b0e0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x558133e8b130 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x558133e8b180 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x558133e8b360 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x558133e8b210 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x558133e8b288 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558133e8b608 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x558133e8b428 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x558133e8b4a8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x558133e8b520 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x558133e8b828 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x558133e8b6d8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x558133e8b758 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x558133e8bb60 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x558133e8b8e8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x558133e8b968 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x558133e8b9e0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x558133e8ba60 <col:57> col:60 'int'
|-CXXMethodDecl 0x558133e8bd48 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558133e8bc30 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x558133e8bcb0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x558133e8be98 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x558133e8be08 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x558133e8c218 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x558133e8bf58 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x558133e8bfd8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x558133e8c050 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x558133e8c0d0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x558133e8c330 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class Idle
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Notifier _notifier
       112 |     (Notifier vtable pointer)
       120 |     class NotifierSignal _signal
       120 |       union NotifierSignal::vmvalue _v
       120 |         class atomic_uint32_t * v1
       120 |         struct NotifierSignal::vmpair * vm
       128 |       uint32_t _mask
       136 |     enum Notifier::SearchOp _search_op
           | [sizeof=144, dsize=144, align=8,
           |  nvsize=144, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133c39b40 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558133c39c58 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x558133c39ce8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x558133c39db8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x558133c39ea0 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x558133c3a0b8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558133c39f60 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133c3a268 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x558133c3a170 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x558133c3a3b0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x558133c3a320 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x558133c3a4f8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558133c3a468 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133c3a640 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558133c3a5b0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133c3a708 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x558133c3a850 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x558133c3a7c0 <col:28> col:31 'int'
|-CXXMethodDecl 0x558133c3a918 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x558133c3aa60 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x558133c3a9d0 <col:28> col:31 'int'
|-CXXMethodDecl 0x558133c3abd8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x558133c3ab18 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133c3ad20 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x558133c3ac90 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133c3ade8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x558133c3afa8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558133c3ae98 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558133c3af10 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133c3b1f8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558133c3b068 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558133c3b0e0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558133c3b2a8 <col:86> "" ""
|-CXXMethodDecl 0x558133c3b518 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x558133c3b388 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x558133c3b400 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133c3b6c8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x558133c3b5d8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x558133c3b878 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x558133c3b780 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x558133c3bb48 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x558133c3b930 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x558133c3b9a8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558133c3ba20 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133c3be28 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x558133c3bc10 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x558133c3bc88 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558133c3bd00 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558133c3bee0 <col:115> "" ""
|-AccessSpecDecl 0x558133c3bf50 <line:84:3, col:10> col:3 private
|-FieldDecl 0x558133c3bf88 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133c3c490 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x558133c3c490
| `-ParmVarDecl 0x558133c3c598 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x558133c3c638 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x558133c3c638
| `-ParmVarDecl 0x558133c3c748 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x558133c71d78 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558133e64b80 <col:7>
|-CXXConstructorDecl 0x558133c71e50 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x558133c71e50
| `-ParmVarDecl 0x558133c71f68 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x558133c71fd8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x558133c71fd8
| `-ParmVarDecl 0x558133c720e8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x558133e67580 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133f34788 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558133f348a8 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x558133f34948 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x558133f349a8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x558133f3ddf8 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x558133f3ddf8

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133f34a10 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558133f34b28 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x558133f34bc8 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x558133f34c58 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x558133f3c990 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558133f3cdc8 <col:11>
|-CXXConstructorDecl 0x558133f3ca98 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x558133f3ca98
| `-ParmVarDecl 0x558133f3cba8 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x558133f3cc48 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x558133f3cc48
| `-ParmVarDecl 0x558133f3cd58 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x558133f3dac0 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133f326c0 prev 0x558133e7ad60 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558133f327b8 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x558133f32848 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x558133f32978 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x558133f328f0 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x558133e7adf0 'NotifierSignal'
|   | `-CXXRecord 0x558133f326c0 'NotifierSignal'
|   `-ParenType 0x558133f32890 'bool () const' sugar
|     `-FunctionProtoType 0x5581339c1710 'bool () const' const cdecl
|       `-BuiltinType 0x558133918500 'bool'
|-CXXConstructorDecl 0x558133f32a08 <line:16:5, col:27> col:12 NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x558133f32c48 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x558133f32ac0 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x558133f32b38 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558133f32df8 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x558133f32d38 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x558133f32ef0 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x558133f33018 <line:21:5, col:46> col:34 used idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x558133f330d8 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x558133f33198 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x558133f33258 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x558133f33348 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x558133f334b8 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558133f33638 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x558133f33578 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x558133f33700 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x558133f337c0 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x558133f33880 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x558133f33940 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x558133f33bf8 <line:36:5, col:76> col:17
| `-FunctionDecl 0x558133f33b38 parent 0x558133918488 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x558133f339f0 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x558133f33a68 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x558133f33e18 <line:37:5, col:76> col:17
| `-FunctionDecl 0x558133f33d58 parent 0x558133918488 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x558133f33c48 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x558133f33cc0 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x558133f33f58 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x558133f33e68 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x558133f340a0 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x558133f34010 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x558133f34368 <line:41:5, col:78> col:27
| `-FunctionDecl 0x558133f342a8 parent 0x558133918488 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x558133f34158 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x558133f341d0 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x558133f34478 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x558133f343b8 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x558133f345f8 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x558133f34530 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x558133f346c0 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x558133f34760 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x558133f34788 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558133f348a8 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x558133f34948 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x558133f349a8 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x558133f3ddf8 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x558133f3ddf8
|-CXXRecordDecl 0x558133f34a10 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558133f34b28 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x558133f34bc8 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x558133f34c58 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x558133f3c990 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558133f3cdc8 <col:11>
| |-CXXConstructorDecl 0x558133f3ca98 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x558133f3ca98
| | `-ParmVarDecl 0x558133f3cba8 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x558133f3cc48 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x558133f3cc48
| | `-ParmVarDecl 0x558133f3cd58 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x558133f3dac0 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x558133f34cd0 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x558133f34d30 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x558133f34d80 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x558133f34e80 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x558133f35080 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133f34e60 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x558133f34e40 <col:14> 'int' 1
| |-EnumConstantDecl 0x558133f34f10 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x558133f35098 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133f34ef0 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x558133f34ed0 <col:30> 'int' 2
| |-EnumConstantDecl 0x558133f34fa0 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x558133f350b0 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133f34f80 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x558133f34f60 <col:52> 'int' 4
| `-EnumConstantDecl 0x558133f35030 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x558133f350c8 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133f35010 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x558133f34ff0 <col:23> 'int' 8
|-VarDecl 0x558133f350f0 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x558133f351f8 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x558133f35168 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x558133f353c0 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x558133f352b0 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x558133f35328 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x558133f355f8 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x558133f354a8 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x558133f35520 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133f356a8 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x558133f357c8 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x558133f35858 <col:18, col:24> col:18 public
|-EnumDecl 0x558133f35880 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x558133f35980 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x558133f35a70 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133f35960 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x558133f35940 <col:35> 'int' 0
| |-EnumConstantDecl 0x558133f359d0 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x558133f35a20 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x558133f35cb8 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x558133f35c50 'void (*)(void *, Notifier *)'
|   `-ParenType 0x558133f35bf0 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x558133f35bb0 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x5581339184e0 'void'
|       |-PointerType 0x558133918ce0 'void *'
|       | `-BuiltinType 0x5581339184e0 'void'
|       `-PointerType 0x558133f35b10 'Notifier *'
|         `-RecordType 0x558133f35740 'Notifier'
|           `-CXXRecord 0x558133f356a8 'Notifier'
|-CXXConstructorDecl 0x558133f35df8 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x558133f35d20 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x558133f3ab98 <col:35> 'Notifier::SearchOp' EnumConstant 0x558133f35980 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x558133f36008 <line:79:5, col:76> col:12 used Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x558133f35eb8 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x558133f35f30 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x558133f3abb8 <col:65> 'Notifier::SearchOp' EnumConstant 0x558133f35980 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x558133f36108 <line:80:5, col:23> col:13 used ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x558133f36238 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x558133f3ac78 <col:37, line:85:5>
|   `-ReturnStmt 0x558133f3ac68 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x558133f3ac48 <col:9, col:29> 'bool'
|       `-MemberExpr 0x558133f3ac18 <col:9, col:17> '<bound member function type>' .initialized 0x558133f33940
|         `-MemberExpr 0x558133f3abe8 <col:9> 'const NotifierSignal' lvalue ->_signal 0x558133f3a5b8
|           `-CXXThisExpr 0x558133f3abd8 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x558133f36440 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x558133f362f0 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x558133f36368 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x558133f36538 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x558133f36628 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x558133f366e8 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x558133f36828 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x558133f36798 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x558133f368f0 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x558133f377c0 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x558133f37a30 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x558133f37890 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558133f37910 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x558133f37c88 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x558133f37af0 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558133f37b70 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x558133f37e10 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x558133f37d48 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x558133f37f58 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x558133f37ec8 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x558133f380e0 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x558133f38010 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x558133f38258 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x558133f38198 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x558133f38320 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x558133f383a8 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x558133f38578 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x558133f38420 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x558133f384a0 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x558133f38818 <line:109:5, col:88> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x558133f38638 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558133f386b8 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x558133f38730 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x558133f38ab8 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x558133f388e0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558133f38960 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x558133f389d8 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x558133f38e38 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x558133f38b80 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x558133f38c00 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x558133f38c78 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558133f38cf8 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x558133f39020 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x558133f38f08 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x558133f38f88 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x558133f39278 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x558133f390e0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x558133f39160 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x558133f391d8 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x558133f394d8 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x558133f39340 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x558133f393c0 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x558133f39438 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x558133f397c0 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x558133f395a0 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x558133f39620 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x558133f39698 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558133f39718 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x558133f39a78 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x558133f39890 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558133f39910 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x558133f39990 <col:78> col:81 'int'
| `-DeprecatedAttr 0x558133f39b30 <col:98> "" ""
|-CXXMethodDecl 0x558133f39e18 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x558133f39bb0 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558133f39c30 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x558133f39cb0 <col:78> col:81 'int'
| |-ParmVarDecl 0x558133f39d28 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x558133f39ed8 <col:110> "" ""
|-CXXMethodDecl 0x558133f3a0f8 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x558133f39f58 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x558133f39fd8 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x558133f3a058 <col:79> col:82 'int'
| `-DeprecatedAttr 0x558133f3a1b0 <col:99> "" ""
|-CXXMethodDecl 0x558133f3a450 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x558133f3a230 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x558133f3a2b0 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x558133f3a330 <col:79> col:82 'int'
| |-ParmVarDecl 0x558133f3a3a8 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x558133f3a510 <col:111> "" ""
|-AccessSpecDecl 0x558133f3a580 <line:123:3, col:10> col:3 private
|-FieldDecl 0x558133f3a5b8 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x558133f3a618 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x558133f3a790 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x558133f3a680 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x558133f3a6f8 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x558133f3a868 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x558133f3a868
| `-ParmVarDecl 0x558133f3a978 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x558133f3aa18 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x558133f3aa18
  `-ParmVarDecl 0x558133f3ab28 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133f51138 <../elements/standard/idle.hh:29:1, line:47:1> line:29:7 class Idle definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x558133f51298 <col:1, col:7> col:7 implicit referenced class Idle
|-AccessSpecDecl 0x558133f51328 <col:31, col:37> col:31 public
|-CXXConstructorDecl 0x558133f513b0 <line:31:3, col:8> col:3 Idle 'void ()'
|-CXXMethodDecl 0x558133f514b0 <line:33:3, col:51> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x558133e7c7c8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x558133f525c0 <col:34, col:51>
|   `-ReturnStmt 0x558133f525b0 <col:36, col:43>
|     `-ImplicitCastExpr 0x558133f52598 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558133f52578 <col:43> 'const char [5]' lvalue "Idle"
|-CXXMethodDecl 0x558133f51578 <line:34:3, col:50> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x558133e7c890 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x558133f52620 <col:34, col:50>
|   `-ReturnStmt 0x558133f52610 <col:36, col:43>
|     `-ImplicitCastExpr 0x558133f525f8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558133f525d8 <col:43> 'const char [4]' lvalue "-/-"
|-CXXMethodDecl 0x558133f51640 <line:35:3, col:50> col:15 processing 'const char *() const'
| |-Overrides: [ 0x558133e7cc58 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x558133f52680 <col:34, col:50>
|   `-ReturnStmt 0x558133f52670 <col:36, col:43>
|     `-ImplicitCastExpr 0x558133f52658 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558133f52638 <col:43> 'const char [4]' lvalue "a/a"
|-CXXMethodDecl 0x558133f51708 <line:36:3, col:49> col:15 flow_code 'const char *() const'
| |-Overrides: [ 0x558133e7d050 Element::flow_code 'const char *() const' ]
| `-CompoundStmt 0x558133f526e0 <col:33, col:49>
|   `-ReturnStmt 0x558133f526d0 <col:35, col:42>
|     `-ImplicitCastExpr 0x558133f526b8 <col:42> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558133f52698 <col:42> 'const char [4]' lvalue "x/y"
|-CXXMethodDecl 0x558133f51858 <line:37:3, col:26> col:9 cast 'void *(const char *)'
| |-Overrides: [ 0x558133e7d480 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x558133f517c0 <col:14, col:25> col:26 'const char *'
|-CXXMethodDecl 0x558133f51928 <line:38:3, col:44> col:15 flags 'const char *() const'
| |-Overrides: [ 0x558133e7d1a0 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x558133f52740 <col:29, col:44>
|   `-ReturnStmt 0x558133f52730 <col:31, col:38>
|     `-ImplicitCastExpr 0x558133f52718 <col:38> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558133f526f8 <col:38> 'const char [3]' lvalue "S0"
|-CXXMethodDecl 0x558133f51af0 <line:40:3, col:26> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x558133e7b638 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x558133f519e0 <col:13> col:16 'int'
| `-ParmVarDecl 0x558133f51a58 <col:18, col:25> col:26 'Packet *'
|-CXXMethodDecl 0x558133f51c48 <line:41:3, col:19> col:11 pull 'Packet *(int)'
| |-Overrides: [ 0x558133e7b7c8 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x558133f51bb8 <col:16> col:19 'int'
|-AccessSpecDecl 0x558133f51cf0 <line:43:3, col:10> col:3 private
|-FieldDecl 0x558133f51d28 <line:45:5, col:14> col:14 _notifier 'Notifier'
|-CXXConstructorDecl 0x558133f51da8 <line:29:7> col:7 implicit Idle 'void (const Idle &)' inline default_delete noexcept-unevaluated 0x558133f51da8
| `-ParmVarDecl 0x558133f51eb8 <col:7> col:7 'const Idle &'
|-CXXConstructorDecl 0x558133f51f58 <col:7> col:7 implicit Idle 'void (Idle &&)' inline default_delete noexcept-unevaluated 0x558133f51f58
| `-ParmVarDecl 0x558133f52068 <col:7> col:7 'Idle &&'
|-CXXMethodDecl 0x558133f52108 <col:7> col:7 implicit operator= 'Idle &(const Idle &)' inline default_delete noexcept-unevaluated 0x558133f52108
| `-ParmVarDecl 0x558133f52218 <col:7> col:7 'const Idle &'
|-CXXMethodDecl 0x558133f52288 <col:7> col:7 implicit operator= 'Idle &(Idle &&)' inline default_delete noexcept-unevaluated 0x558133f52288
| `-ParmVarDecl 0x558133f52398 <col:7> col:7 'Idle &&'
`-CXXDestructorDecl 0x558133f52420 <col:7> col:7 implicit ~Idle 'void ()' inline default noexcept-unevaluated 0x558133f52420
  `-Overrides: [ 0x558133e7b368 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.Idle = type { %class.Element.base, [4 x i8], %class.Notifier }
  NonVirtualBaseLLVMType:%class.Idle = type { %class.Element.base, [4 x i8], %class.Notifier }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e53728 prev 0x558133e48930 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558133e53820 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x558133e53910 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x558133e53a38 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x558133e53bb8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x558133e53d38 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x558133e53eb8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x558133e64ce8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558133e65558 <col:11>
|-CXXDestructorDecl 0x558133e64dc0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x558133e64ef8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x558133e64ef8
| `-ParmVarDecl 0x558133e65008 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x558133e650a8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558133e650a8
| `-ParmVarDecl 0x558133e651b8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x558133e67f78 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x558133e68088 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x558133e68308 <col:11>
|   `-ReturnStmt 0x558133e682f8 <col:11>
|     `-UnaryOperator 0x558133e682e0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558133e682d0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x558133e680f8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558133e680f8
  `-ParmVarDecl 0x558133e68208 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e53f20 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558133e54038 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x558133e540d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x558133e54140 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x558133e541a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x558133e54210 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x558133e54270 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x558133e54330 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x558133e54390 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x558133e543f0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x558133e64bf8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x558133e540d8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x558133e65568 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x558133e655c0 <col:12>
|-CXXConstructorDecl 0x558133e65228 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x558133e65228
| `-ParmVarDecl 0x558133e65338 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x558133e653d8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x558133e653d8
| `-ParmVarDecl 0x558133e654e8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x558133e67660 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e42040 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558133e42158 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x558133e421e8 <col:16, col:22> col:16 public
|-EnumDecl 0x558133e42210 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x558133e42310 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x558133e423f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e422f0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x558133e422d0 <col:21> 'int' 28
| `-EnumConstantDecl 0x558133e423a0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x558133e42408 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e42380 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x558133e42360 <col:22> 'int' 64
|-CXXMethodDecl 0x558133e42748 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x558133e42430 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558133e424b0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x558133e42528 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558133e425a0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558133e42808 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x558133e42a08 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x558133e42880 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x558133e428f8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558133e42ab8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x558133e42c18 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x558133e42b28 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558133e42cc0 <col:72> warn_unused_result ""
|-TypedefDecl 0x558133e43020 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x558133e42fb0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x558133e42f50 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x558133e42f10 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5581339184e0 'void'
|       |-PointerType 0x558133bc23e0 'unsigned char *'
|       | `-BuiltinType 0x5581339185e0 'unsigned char'
|       |-TypedefType 0x5581339be9d0 'size_t' sugar
|       | |-Typedef 0x558133988be0 'size_t'
|       | `-BuiltinType 0x558133918640 'unsigned long'
|       `-PointerType 0x558133918ce0 'void *'
|         `-BuiltinType 0x5581339184e0 'void'
|-CXXMethodDecl 0x558133e43498 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x558133e43090 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x558133e43108 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558133e431a0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x558133e43220 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x558133e5db90 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x558133e5db78 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x558133e5db40 <col:58> 'int' 0
| |-ParmVarDecl 0x558133e432a0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x558133e5dbb8 <col:76> 'int' 0
| |-ParmVarDecl 0x558133e43320 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x558133e5dbd8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x558133e43568 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x558133e435e8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x558133e436a8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x558133e43748 <col:20>
| `-OptimizeNoneAttr 0x558133e437a0 <col:30>
|-CXXMethodDecl 0x558133e43818 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x558133e438b8 <col:20>
| `-OptimizeNoneAttr 0x558133e43910 <col:30>
|-CXXMethodDecl 0x558133e43988 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x558133e43a28 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x558133e43ad8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x558133e43b78 <col:20>
| |-OptimizeNoneAttr 0x558133e43bd0 <col:30>
| `-WarnUnusedResultAttr 0x558133e43bf8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x558133e43c50 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x558133e43cf0 <col:20>
| `-OptimizeNoneAttr 0x558133e43d48 <col:30>
|-CXXMethodDecl 0x558133e43d98 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x558133e43e38 <col:20>
| `-OptimizeNoneAttr 0x558133e43e90 <col:30>
|-CXXMethodDecl 0x558133e43ed8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x558133e43f78 <col:20>
| `-OptimizeNoneAttr 0x558133e43fd0 <col:30>
|-CXXMethodDecl 0x558133e44018 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x558133e440d8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x558133e441a0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558133e44268 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558133e44328 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558133e44448 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x558133e5dca0 <col:54, line:99:5>
|   `-ReturnStmt 0x558133e5dc90 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x558133e5dc78 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x558133e5dc48 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558133e54728
|         `-CXXThisExpr 0x558133e5dc38 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x558133e445e8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x558133e444f8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x558133e5dd50 <col:67, line:103:5>
|   `-BinaryOperator 0x558133e5dd30 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x558133e5dcc8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558133e54728
|     | `-CXXThisExpr 0x558133e5dcb8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x558133e5dd18 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x558133e5dcf8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x558133e444f8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x558133e446e0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x558133e5ddd0 <col:33, line:107:5>
|   `-ReturnStmt 0x558133e5ddc0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x558133e5dda8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x558133e5dd78 <col:16> 'void *' lvalue ->_destructor_argument 0x558133e54790
|         `-CXXThisExpr 0x558133e5dd68 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x558133e447a0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x558133e5e400 <col:25, line:113:5>
|   |-ParenExpr 0x558133e5e148 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x558133e5e118 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x558133e5de88 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x558133e5de60 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x558133e5de28 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x558133e5ddf8 <col:24> '<bound member function type>' ->shared 0x558133e43818
|   |   |       `-ImplicitCastExpr 0x558133e5de48 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x558133e5dde8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x558133e5dee8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e5dec8 <col:42> 'int' 0
|   |   `-CallExpr 0x558133e5e078 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x558133e5e060 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e5e040 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e5e0b8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e5df58 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x558133e5e0d0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e5df80 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e5e0e8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e5dfb8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x558133e5e100 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e5e028 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e5e010 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e5dfd8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x558133e5e348 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x558133e5e178 <col:2> 'unsigned char *' lvalue ->_head 0x558133e54530
|   | | `-CXXThisExpr 0x558133e5e168 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x558133e5e330 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x558133e5e310 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x558133e5e1b8 <col:10> 'unsigned char *' lvalue ->_data 0x558133e54598
|   |     | `-CXXThisExpr 0x558133e5e1a8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x558133e5e2f8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x558133e5e2d8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x558133e5e1f8 <col:18> 'unsigned char *' lvalue ->_tail 0x558133e54600
|   |         | `-CXXThisExpr 0x558133e5e1e8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x558133e5e2c0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x558133e5e2a0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x558133e5e238 <col:26> 'unsigned char *' lvalue ->_end 0x558133e54668
|   |             | `-CXXThisExpr 0x558133e5e228 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x558133e5e288 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x558133e5e268 <col:33> 'int' 0
|   `-BinaryOperator 0x558133e5e3e0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x558133e5e378 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558133e54728
|     | `-CXXThisExpr 0x558133e5e368 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x558133e5e3c8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x558133e5e3a8 <col:16> 'int' 0
|-CXXMethodDecl 0x558133e448e0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558133e44850 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558133e44988 <col:20>
| |-OptimizeNoneAttr 0x558133e449e0 <col:30>
| `-WarnUnusedResultAttr 0x558133e44a08 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x558133e44ad8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558133e44a48 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558133e44b80 <col:20>
| |-OptimizeNoneAttr 0x558133e44bd8 <col:30>
| `-WarnUnusedResultAttr 0x558133e44c00 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x558133e44d38 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x558133e44c40 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558133e44de0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x558133e44ee0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x558133e44e50 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558133e44f88 <col:20>
| `-OptimizeNoneAttr 0x558133e44fe0 <col:30>
|-CXXMethodDecl 0x558133e450a8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558133e45018 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558133e45150 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x558133e45250 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x558133e451c0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558133e452f8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x558133e453f8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x558133e45368 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558133e454a0 <col:20>
| `-OptimizeNoneAttr 0x558133e454f8 <col:30>
|-CXXMethodDecl 0x558133e45688 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x558133e45538 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x558133e455b0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x558133e5dbf8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x558133e45738 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x558133e45938 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558133e457b0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x558133e45828 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e45b48 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558133e459f8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558133e45a70 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e45d58 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x558133e45c08 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x558133e45c88 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x558133e5dc08 <col:39> 'int' 0
|-CXXMethodDecl 0x558133e45e28 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x558133e45ef0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558133e45fb8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x558133e46078 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558133e46140 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x558133e46288 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x558133e461f8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x558133e46458 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558133e46348 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x558133e463c0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e46528 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x558133e465e8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x558133e46688 <col:20>
| `-OptimizeNoneAttr 0x558133e466e0 <col:30>
|-CXXMethodDecl 0x558133e46730 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x558133e467d0 <col:20>
| `-OptimizeNoneAttr 0x558133e46828 <col:30>
|-CXXMethodDecl 0x558133e46878 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x558133e46938 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558133e46a00 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x558133e46aa0 <col:20>
| `-OptimizeNoneAttr 0x558133e46af8 <col:30>
|-CXXMethodDecl 0x558133e46c48 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558133e46b38 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x558133e46bb0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e46d98 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x558133e46d08 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e46e70 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x558133e46f30 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x558133e46fd0 <col:20>
| `-OptimizeNoneAttr 0x558133e47028 <col:30>
|-CXXMethodDecl 0x558133e47078 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x558133e47118 <col:20>
| `-OptimizeNoneAttr 0x558133e47170 <col:30>
|-CXXMethodDecl 0x558133e471c0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x558133e47288 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x558133e47328 <col:20>
| `-OptimizeNoneAttr 0x558133e47380 <col:30>
|-CXXMethodDecl 0x558133e473c8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x558133e474e8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x558133e47658 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x558133e47598 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x558133e47748 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x558133e477e8 <col:20>
| `-OptimizeNoneAttr 0x558133e47840 <col:30>
|-CXXMethodDecl 0x558133e47890 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x558133e47950 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558133e47b88 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x558133e47a00 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x558133e47a78 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558133e47c38 <col:20>
| `-OptimizeNoneAttr 0x558133e47c90 <col:30>
|-CXXMethodDecl 0x558133e47d38 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x558133e47dd8 <col:20>
| `-OptimizeNoneAttr 0x558133e47e30 <col:30>
|-CXXMethodDecl 0x558133e47e80 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x558133e47f20 <col:20>
| `-OptimizeNoneAttr 0x558133e47f78 <col:30>
|-CXXMethodDecl 0x558133e47fc0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x558133e48060 <col:20>
| `-OptimizeNoneAttr 0x558133e480b8 <col:30>
|-CXXMethodDecl 0x558133e481b8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x558133e480f0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x558133e48260 <col:20>
| `-OptimizeNoneAttr 0x558133e482b8 <col:30>
|-CXXMethodDecl 0x558133e48478 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x558133e482f0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x558133e48368 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558133e48528 <col:20>
| `-OptimizeNoneAttr 0x558133e48580 <col:30>
|-CXXMethodDecl 0x558133e48628 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x558133e48748 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x558133e48868 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x558133e48908 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x558133e48930 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x558133e48a58 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x558133e48af8 <col:20>
| `-OptimizeNoneAttr 0x558133e48b50 <col:30>
|-CXXMethodDecl 0x558133e48bf8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x558133e48c98 <col:20>
| `-OptimizeNoneAttr 0x558133e48cf0 <col:30>
|-AccessSpecDecl 0x558133e48d18 <line:344:3, col:9> col:3 public
|-EnumDecl 0x558133e48d40 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x558133e48e40 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x558133e48e90 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e48e20 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x558133e48e00 <col:14> 'int' 48
|-CXXMethodDecl 0x558133e48ef8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x558133e48f98 <col:20>
| `-OptimizeNoneAttr 0x558133e48ff0 <col:30>
|-CXXMethodDecl 0x558133e49068 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x558133e49108 <col:20>
| `-OptimizeNoneAttr 0x558133e49160 <col:30>
|-CXXMethodDecl 0x558133e49228 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558133e49198 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x558133e493c8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x558133e49568 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x558133e49478 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x558133e49610 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x558133e49710 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558133e49ac0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e496f0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x558133e496d0 <col:9> 'int' 0
| |-EnumConstantDecl 0x558133e497a0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558133e49ad8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e49780 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x558133e49760 <col:14> 'int' 1
| |-EnumConstantDecl 0x558133e49830 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558133e49af0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e49810 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x558133e497f0 <col:14> 'int' 2
| |-EnumConstantDecl 0x558133e498c0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558133e49b08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e498a0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x558133e49880 <col:14> 'int' 3
| |-EnumConstantDecl 0x558133e49950 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558133e49b20 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e49930 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x558133e49910 <col:13> 'int' 4
| |-EnumConstantDecl 0x558133e499e0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558133e49b38 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e499c0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x558133e499a0 <col:13> 'int' 5
| `-EnumConstantDecl 0x558133e49a70 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x558133e49b50 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e49a50 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x558133e49a30 <col:14> 'int' 6
|-CXXMethodDecl 0x558133e49bb8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x558133e49c58 <col:20>
| `-OptimizeNoneAttr 0x558133e49cb0 <col:30>
|-CXXMethodDecl 0x558133e49da8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x558133e49ce8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x558133e49e50 <col:20>
| `-OptimizeNoneAttr 0x558133e49ea8 <col:30>
|-CXXMethodDecl 0x558133e49f18 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x558133e4a040 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x558133e4a1b8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x558133e4a0f0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x558133e4a280 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x558133e4a348 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x558133e4a488 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x558133e4a3f8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x558133e4a530 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x558133e4a630 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558133e4a830 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4a610 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x558133e4a5f0 <col:23> 'int' 0
| |-EnumConstantDecl 0x558133e4a6c0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558133e4a848 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4a6a0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x558133e4a680 <col:45> 'int' 4
| |-EnumConstantDecl 0x558133e4a750 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558133e4a860 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4a730 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x558133e4a710 <col:24> 'int' 0
| `-EnumConstantDecl 0x558133e4a7e0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x558133e4a878 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e4a7c0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x558133e4a7a0 <col:47> 'int' 16
|-CXXMethodDecl 0x558133e4a8d8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x558133e4aa48 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x558133e4a988 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x558133e4aaf0 <col:20>
| `-OptimizeNoneAttr 0x558133e4ab48 <col:30>
|-CXXMethodDecl 0x558133e4ab98 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x558133e5e520 <col:18, col:36>
|   `-ReturnStmt 0x558133e5e510 <col:20, col:33>
|     `-ImplicitCastExpr 0x558133e5e4f8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x558133e5e4d8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x558133e5e4a8 <col:27> '<bound member function type>' ->xanno 0x558133e48bf8
|           `-CXXThisExpr 0x558133e5e498 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x558133e4ac90 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x558133e5e630 <col:30, col:48>
|   `-ReturnStmt 0x558133e5e620 <col:32, col:45>
|     `-ImplicitCastExpr 0x558133e5e608 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x558133e5e5e8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x558133e5e5b8 <col:39> '<bound member function type>' ->xanno 0x558133e48a58
|           `-CXXThisExpr 0x558133e5e5a8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x558133e4ad78 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x558133e5e7c8 <col:24, col:50>
|   `-ReturnStmt 0x558133e5e7b8 <col:26, col:47>
|     `-UnaryOperator 0x558133e5e7a0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558133e5e780 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x558133e5e768 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558133e5e718 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x558133e53a38
|         |   `-CXXMemberCallExpr 0x558133e5e6f8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x558133e5e6c8 <col:34> '<bound member function type>' ->xanno 0x558133e48bf8
|         |       `-CXXThisExpr 0x558133e5e6b8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x558133e5e748 <col:46> 'int' 0
|-CXXMethodDecl 0x558133e4ae80 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x558133e5e998 <col:36, col:62>
|   `-ReturnStmt 0x558133e5e988 <col:38, col:59>
|     `-UnaryOperator 0x558133e5e970 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558133e5e950 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x558133e5e938 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558133e5e8b0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x558133e53a38
|         |   `-CXXMemberCallExpr 0x558133e5e890 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558133e5e860 <col:46> '<bound member function type>' ->xanno 0x558133e48a58
|         |       `-CXXThisExpr 0x558133e5e850 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x558133e5e8e0 <col:58> 'int' 0
|-CXXMethodDecl 0x558133e4af98 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x558133e5eb30 <col:26, col:53>
|   `-ReturnStmt 0x558133e5eb20 <col:28, col:50>
|     `-UnaryOperator 0x558133e5eb08 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558133e5eae8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x558133e5ead0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558133e5ea80 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x558133e53d38
|         |   `-CXXMemberCallExpr 0x558133e5ea60 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x558133e5ea30 <col:36> '<bound member function type>' ->xanno 0x558133e48bf8
|         |       `-CXXThisExpr 0x558133e5ea20 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x558133e5eab0 <col:49> 'int' 0
|-CXXMethodDecl 0x558133e4b0b8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x558133e5ed08 <col:38, col:65>
|   `-ReturnStmt 0x558133e5ecf8 <col:40, col:62>
|     `-UnaryOperator 0x558133e5ece0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558133e5ecc0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x558133e5eca8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558133e5ec18 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x558133e53d38
|         |   `-CXXMemberCallExpr 0x558133e5ebf8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558133e5ebc8 <col:48> '<bound member function type>' ->xanno 0x558133e48a58
|         |       `-CXXThisExpr 0x558133e5ebb8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x558133e5ec48 <col:61> 'int' 0
|-CXXMethodDecl 0x558133e4b268 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x558133e4b170 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x558133e5f3d8 <col:34, line:463:5>
|   |-ParenExpr 0x558133e5f220 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x558133e5f1f0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x558133e5ee58 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e5ee28 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e5ed78 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e5ed60 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e5ed20 <col:23> 'int' lvalue ParmVar 0x558133e4b170 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e5ed40 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e5ee08 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558133e5edd8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e5ed98 <col:33> 'int' lvalue ParmVar 0x558133e4b170 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x558133e5edf0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x558133e5edb8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x558133e5eeb8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e5ee98 <col:56> 'int' 0
|   |   `-CallExpr 0x558133e5f150 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x558133e5f138 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e5f118 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e5f190 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e5efa8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x558133e5f1a8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e5efd8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e5f1c0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e5f010 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x558133e5f1d8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e5f100 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e5f0e8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e5f0a8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x558133e5f3c8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x558133e5f3b0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x558133e5f390 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x558133e5f360 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558133e5f310 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x558133e53a38
|         |   `-CXXMemberCallExpr 0x558133e5f2f0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558133e5f2c0 <col:9> '<bound member function type>' ->xanno 0x558133e48a58
|         |       `-CXXThisExpr 0x558133e5f2b0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x558133e5f378 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x558133e5f340 <col:21> 'int' lvalue ParmVar 0x558133e4b170 'i' 'int'
|-CXXMethodDecl 0x558133e4b4b8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x558133e4b328 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x558133e4b3a0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x558133e5fa68 <col:40, line:472:5>
|   |-ParenExpr 0x558133e5f880 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x558133e5f850 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x558133e5f530 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e5f500 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e5f450 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e5f438 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e5f3f8 <col:23> 'int' lvalue ParmVar 0x558133e4b328 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e5f418 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e5f4e0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558133e5f4b0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e5f470 <col:33> 'int' lvalue ParmVar 0x558133e4b328 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x558133e5f4c8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x558133e5f490 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x558133e5f590 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e5f570 <col:56> 'int' 0
|   |   `-CallExpr 0x558133e5f7b0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x558133e5f798 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e5f778 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e5f7f0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e5f600 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x558133e5f808 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e5f630 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e5f820 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e5f668 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x558133e5f838 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e5f760 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e5f748 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e5f708 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x558133e5fa48 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x558133e5f9f0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x558133e5f9c0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x558133e5f970 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x558133e53a38
|     | |   `-CXXMemberCallExpr 0x558133e5f950 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x558133e5f920 <col:2> '<bound member function type>' ->xanno 0x558133e48bf8
|     | |       `-CXXThisExpr 0x558133e5f910 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x558133e5f9d8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x558133e5f9a0 <col:14> 'int' lvalue ParmVar 0x558133e4b328 'i' 'int'
|     `-ImplicitCastExpr 0x558133e5fa30 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x558133e5fa10 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x558133e4b3a0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x558133e4b678 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x558133e4b580 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558133e601e8 <col:36, line:485:5>
|   |-ParenExpr 0x558133e5ff50 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x558133e5ff20 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558133e5fc00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e5fbd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e5fae0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e5fac8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e5fa88 <col:23> 'int' lvalue ParmVar 0x558133e4b580 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e5faa8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e5fbb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558133e5fb98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e5fb00 <col:33> 'int' lvalue ParmVar 0x558133e4b580 'i' 'int'
|   |   |     `-BinaryOperator 0x558133e5fb78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558133e5fb60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558133e5fb20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558133e5fb40 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558133e5fc60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e5fc40 <col:60> 'int' 0
|   |   `-CallExpr 0x558133e5fe80 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558133e5fe68 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e5fe48 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e5fec0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e5fcd0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558133e5fed8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e5fd08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e5fef0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e5fd40 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x558133e5ff08 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e5fe30 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e5fe18 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e5fdd8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x558133e601d8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x558133e601c0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x558133e601a8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558133e60178 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x558133e60118 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558133e600e8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558133e60060 <col:61, col:70> 'char const[48]' lvalue ->c 0x558133e53910
|             |   `-CXXMemberCallExpr 0x558133e60040 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558133e60010 <col:61> '<bound member function type>' ->xanno 0x558133e48a58
|             |       `-CXXThisExpr 0x558133e60000 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558133e60100 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558133e60090 <col:74> 'int' lvalue ParmVar 0x558133e4b580 'i' 'int'
|-CXXMethodDecl 0x558133e4b8c8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x558133e4b738 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558133e4b7b0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x558133e60938 <col:42, line:500:5>
|   |-ParenExpr 0x558133e606d0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x558133e606a0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558133e60380 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e60350 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e60260 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e60248 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e60208 <col:23> 'int' lvalue ParmVar 0x558133e4b738 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e60228 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e60330 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558133e60318 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e60280 <col:33> 'int' lvalue ParmVar 0x558133e4b738 'i' 'int'
|   |   |     `-BinaryOperator 0x558133e602f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558133e602e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558133e602a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558133e602c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558133e603e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e603c0 <col:60> 'int' 0
|   |   `-CallExpr 0x558133e60600 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558133e605e8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e605c8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e60640 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e60450 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558133e60658 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e60488 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e60670 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e604c0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x558133e60688 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e605b0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e60598 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e60558 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x558133e60918 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x558133e608c8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558133e60898 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x558133e60840 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558133e60810 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558133e607c0 <col:48, col:57> 'char [48]' lvalue ->c 0x558133e53910
|     |     |   `-CXXMemberCallExpr 0x558133e607a0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558133e60770 <col:48> '<bound member function type>' ->xanno 0x558133e48bf8
|     |     |       `-CXXThisExpr 0x558133e60760 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558133e60828 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558133e607f0 <col:61> 'int' lvalue ParmVar 0x558133e4b738 'i' 'int'
|     `-ImplicitCastExpr 0x558133e60900 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x558133e608e0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x558133e4b7b0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x558133e4ba88 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x558133e4b990 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558133e61098 <col:35, line:513:5>
|   |-ParenExpr 0x558133e60da8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x558133e60d78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558133e60ad0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e60aa0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e609b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e60998 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e60958 <col:23> 'int' lvalue ParmVar 0x558133e4b990 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e60978 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e60a80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558133e60a68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e609d0 <col:33> 'int' lvalue ParmVar 0x558133e4b990 'i' 'int'
|   |   |     `-BinaryOperator 0x558133e60a48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558133e60a30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558133e609f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558133e60a10 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558133e60b30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e60b10 <col:60> 'int' 0
|   |   `-CallExpr 0x558133e60cd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558133e60cc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e60ca0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e60d18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e60ba0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558133e60d30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e60bd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e60d48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e60c10 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x558133e60d60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e60c88 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e60c70 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e60c30 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x558133e61088 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x558133e61070 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x558133e61058 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558133e61028 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x558133e60fa0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x558133e60f70 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558133e60f20 <col:60, col:69> 'char const[48]' lvalue ->c 0x558133e53910
|             |   `-CXXMemberCallExpr 0x558133e60f00 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558133e60ed0 <col:60> '<bound member function type>' ->xanno 0x558133e48a58
|             |       `-CXXThisExpr 0x558133e60ec0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558133e60f88 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558133e60f50 <col:73> 'int' lvalue ParmVar 0x558133e4b990 'i' 'int'
|-CXXMethodDecl 0x558133e4bcd8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x558133e4bb48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558133e4bbc0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x558133e617b8 <col:41, line:528:5>
|   |-ParenExpr 0x558133e61540 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x558133e61510 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558133e61230 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e61200 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e61110 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e610f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e610b8 <col:23> 'int' lvalue ParmVar 0x558133e4bb48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e610d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e611e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558133e611c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e61130 <col:33> 'int' lvalue ParmVar 0x558133e4bb48 'i' 'int'
|   |   |     `-BinaryOperator 0x558133e611a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558133e61190 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558133e61150 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558133e61170 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558133e61290 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e61270 <col:60> 'int' 0
|   |   `-CallExpr 0x558133e61470 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558133e61458 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e61438 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e614b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e61300 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558133e614c8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e61338 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e614e0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e61370 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x558133e614f8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e61420 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e61408 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e613c8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x558133e61798 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x558133e61748 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558133e61718 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x558133e616c0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558133e61680 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558133e61630 <col:47, col:56> 'char [48]' lvalue ->c 0x558133e53910
|     |     |   `-CXXMemberCallExpr 0x558133e61610 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558133e615e0 <col:47> '<bound member function type>' ->xanno 0x558133e48bf8
|     |     |       `-CXXThisExpr 0x558133e615d0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558133e61698 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558133e61660 <col:60> 'int' lvalue ParmVar 0x558133e4bb48 'i' 'int'
|     `-ImplicitCastExpr 0x558133e61780 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x558133e61760 <col:65> 'int16_t':'short' lvalue ParmVar 0x558133e4bbc0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x558133e4be98 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x558133e4bda0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558133e61e88 <col:36, line:541:5>
|   |-ParenExpr 0x558133e61c28 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x558133e61bf8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558133e61950 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e61920 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e61830 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e61818 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e617d8 <col:23> 'int' lvalue ParmVar 0x558133e4bda0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e617f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e61900 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558133e618e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e61850 <col:33> 'int' lvalue ParmVar 0x558133e4bda0 'i' 'int'
|   |   |     `-BinaryOperator 0x558133e618c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558133e618b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558133e61870 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558133e61890 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558133e619b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e61990 <col:60> 'int' 0
|   |   `-CallExpr 0x558133e61b58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558133e61b40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e61b20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e61b98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e61a20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558133e61bb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e61a58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e61bc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e61a90 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x558133e61be0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e61b08 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e61af0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e61ab0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x558133e61e78 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x558133e61e60 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x558133e61e48 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558133e61e18 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x558133e61dc0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558133e61d90 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558133e61d40 <col:61, col:70> 'char const[48]' lvalue ->c 0x558133e53910
|             |   `-CXXMemberCallExpr 0x558133e61d20 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558133e61cf0 <col:61> '<bound member function type>' ->xanno 0x558133e48a58
|             |       `-CXXThisExpr 0x558133e61ce0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558133e61da8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558133e61d70 <col:74> 'int' lvalue ParmVar 0x558133e4bda0 'i' 'int'
|-CXXMethodDecl 0x558133e4c068 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x558133e4bf58 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x558133e4bfd0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558133e4c118 <col:20>
| `-OptimizeNoneAttr 0x558133e4c170 <col:30>
|-CXXMethodDecl 0x558133e4c2a8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x558133e4c1b0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558133e62558 <col:35, line:562:5>
|   |-ParenExpr 0x558133e622f8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x558133e622c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558133e62020 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e61ff0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e61f00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e61ee8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e61ea8 <col:23> 'int' lvalue ParmVar 0x558133e4c1b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e61ec8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e61fd0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558133e61fb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e61f20 <col:33> 'int' lvalue ParmVar 0x558133e4c1b0 'i' 'int'
|   |   |     `-BinaryOperator 0x558133e61f98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558133e61f80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558133e61f40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558133e61f60 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558133e62080 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e62060 <col:60> 'int' 0
|   |   `-CallExpr 0x558133e62228 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558133e62210 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e621f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e62268 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e620f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558133e62280 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e62128 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e62298 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e62160 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x558133e622b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e621d8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e621c0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e62180 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x558133e62548 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x558133e62530 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x558133e62518 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558133e624e8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x558133e62490 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x558133e62460 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558133e62410 <col:60, col:69> 'char const[48]' lvalue ->c 0x558133e53910
|             |   `-CXXMemberCallExpr 0x558133e623f0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558133e623c0 <col:60> '<bound member function type>' ->xanno 0x558133e48a58
|             |       `-CXXThisExpr 0x558133e623b0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558133e62478 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558133e62440 <col:73> 'int' lvalue ParmVar 0x558133e4c1b0 'i' 'int'
|-CXXMethodDecl 0x558133e4c4b8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x558133e4c368 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558133e4c3e0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x558133e62c38 <col:41, line:577:5>
|   |-ParenExpr 0x558133e629c8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x558133e62998 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558133e626f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e626c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e625d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e625b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e62578 <col:23> 'int' lvalue ParmVar 0x558133e4c368 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e62598 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e626a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558133e62688 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e625f0 <col:33> 'int' lvalue ParmVar 0x558133e4c368 'i' 'int'
|   |   |     `-BinaryOperator 0x558133e62668 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558133e62650 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558133e62610 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558133e62630 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558133e62750 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e62730 <col:60> 'int' 0
|   |   `-CallExpr 0x558133e628f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558133e628e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e628c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e62938 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e627c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558133e62950 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e627f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e62968 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e62830 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x558133e62980 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e628a8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e62890 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e62850 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x558133e62c18 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x558133e62bc8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558133e62b98 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x558133e62b38 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558133e62b08 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558133e62ab8 <col:47, col:56> 'char [48]' lvalue ->c 0x558133e53910
|     |     |   `-CXXMemberCallExpr 0x558133e62a98 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558133e62a68 <col:47> '<bound member function type>' ->xanno 0x558133e48bf8
|     |     |       `-CXXThisExpr 0x558133e62a58 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558133e62b20 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558133e62ae8 <col:60> 'int' lvalue ParmVar 0x558133e4c368 'i' 'int'
|     `-ImplicitCastExpr 0x558133e62c00 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x558133e62be0 <col:65> 'int32_t':'int' lvalue ParmVar 0x558133e4c3e0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x558133e4c678 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x558133e4c580 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558133e63368 <col:36, line:591:5>
|   |-ParenExpr 0x558133e630a8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x558133e63078 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558133e62dd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e62da0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e62cb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e62c98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e62c58 <col:23> 'int' lvalue ParmVar 0x558133e4c580 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e62c78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e62d80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558133e62d68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e62cd0 <col:33> 'int' lvalue ParmVar 0x558133e4c580 'i' 'int'
|   |   |     `-BinaryOperator 0x558133e62d48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558133e62d30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558133e62cf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558133e62d10 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x558133e62e30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e62e10 <col:60> 'int' 0
|   |   `-CallExpr 0x558133e62fd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558133e62fc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e62fa0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e63018 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e62ea0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x558133e63030 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e62ed8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e63048 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e62f10 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x558133e63060 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e62f88 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e62f70 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e62f30 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x558133e63358 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x558133e63340 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x558133e63328 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558133e632f8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x558133e63270 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558133e63240 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558133e631f0 <col:61, col:70> 'char const[48]' lvalue ->c 0x558133e53910
|             |   `-CXXMemberCallExpr 0x558133e631d0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558133e631a0 <col:61> '<bound member function type>' ->xanno 0x558133e48a58
|             |       `-CXXThisExpr 0x558133e63190 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558133e63258 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558133e63220 <col:74> 'int' lvalue ParmVar 0x558133e4c580 'i' 'int'
|-CXXMethodDecl 0x558133e4c8c8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x558133e4c738 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558133e4c7b0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x558133e63a48 <col:42, line:606:5>
|   |-ParenExpr 0x558133e637d8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x558133e637a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558133e63500 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e634d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e633e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e633c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e63388 <col:23> 'int' lvalue ParmVar 0x558133e4c738 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e633a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e634b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558133e63498 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e63400 <col:33> 'int' lvalue ParmVar 0x558133e4c738 'i' 'int'
|   |   |     `-BinaryOperator 0x558133e63478 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558133e63460 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558133e63420 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558133e63440 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x558133e63560 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e63540 <col:60> 'int' 0
|   |   `-CallExpr 0x558133e63708 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558133e636f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e636d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e63748 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e635d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x558133e63760 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e63608 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e63778 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e63640 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x558133e63790 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e636b8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e636a0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e63660 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x558133e63a28 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x558133e639d8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558133e639a8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x558133e63948 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558133e63918 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558133e638c8 <col:48, col:57> 'char [48]' lvalue ->c 0x558133e53910
|     |     |   `-CXXMemberCallExpr 0x558133e638a8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558133e63878 <col:48> '<bound member function type>' ->xanno 0x558133e48bf8
|     |     |       `-CXXThisExpr 0x558133e63868 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558133e63930 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558133e638f8 <col:61> 'int' lvalue ParmVar 0x558133e4c738 'i' 'int'
|     `-ImplicitCastExpr 0x558133e63a10 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x558133e639f0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x558133e4c7b0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x558133e4ca60 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x558133e4c990 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x558133e642b8 <col:33, line:620:5>
|   |-ParenExpr 0x558133e64030 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x558133e64000 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x558133e63c50 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e63c20 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e63ac0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e63aa8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e63a68 <col:23> 'int' lvalue ParmVar 0x558133e4c990 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e63a88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e63c00 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x558133e63be8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e63ae0 <col:33> 'int' lvalue ParmVar 0x558133e4c990 'i' 'int'
|   |   |     `-BinaryOperator 0x558133e63bc8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558133e63bb0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558133e63b00 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x558133e63b88 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x558133e63b70 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x558133e63b38 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x558133e63cb0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e63c90 <col:79> 'int' 0
|   |   `-CallExpr 0x558133e63f60 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x558133e63f48 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e63f28 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e63fa0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e63d98 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x558133e63fb8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e63de0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e63fd0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e63e18 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x558133e63fe8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e63f10 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e63ef8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e63eb8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x558133e642a8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x558133e64290 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x558133e64278 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558133e64248 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x558133e641c0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x558133e64190 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558133e64140 <col:67, col:76> 'char const[48]' lvalue ->c 0x558133e53910
|             |   `-CXXMemberCallExpr 0x558133e64120 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558133e640f0 <col:67> '<bound member function type>' ->xanno 0x558133e48a58
|             |       `-CXXThisExpr 0x558133e640e0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558133e641a8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558133e64170 <col:80> 'int' lvalue ParmVar 0x558133e4c990 'i' 'int'
|-CXXMethodDecl 0x558133e4cc78 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x558133e4cb20 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558133e4cba0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x558133e64ae0 <col:45, line:635:5>
|   |-ParenExpr 0x558133e64828 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x558133e647f8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x558133e644c0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558133e64490 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558133e64330 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558133e64318 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558133e642d8 <col:23> 'int' lvalue ParmVar 0x558133e4cb20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558133e642f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558133e64470 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x558133e64458 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558133e64350 <col:33> 'int' lvalue ParmVar 0x558133e4cb20 'i' 'int'
|   |   |     `-BinaryOperator 0x558133e64438 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558133e64420 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558133e64370 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558133e48e40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x558133e643f8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x558133e643e0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x558133e643a8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x558133e64520 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558133e64500 <col:79> 'int' 0
|   |   `-CallExpr 0x558133e64758 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x558133e64740 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e64720 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558133e64798 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e64590 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x558133e647b0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558133e645d8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558133e647c8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558133e64610 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x558133e647e0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558133e64708 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558133e646f0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558133e646a8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x558133e64ac0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x558133e64a28 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558133e649f8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x558133e64998 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558133e64968 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558133e64918 <col:54, col:63> 'char [48]' lvalue ->c 0x558133e53910
|     |     |   `-CXXMemberCallExpr 0x558133e648f8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558133e648c8 <col:54> '<bound member function type>' ->xanno 0x558133e48bf8
|     |     |       `-CXXThisExpr 0x558133e648b8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558133e64980 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558133e64948 <col:67> 'int' lvalue ParmVar 0x558133e4cb20 'i' 'int'
|     `-CXXConstCastExpr 0x558133e64a90 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x558133e64a78 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x558133e64a40 <col:91> 'const void *' lvalue ParmVar 0x558133e4cba0 'x' 'const void *'
|-CXXMethodDecl 0x558133e4cd48 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x558133e64b68 <col:34, line:640:5>
|   `-ReturnStmt 0x558133e64b58 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x558133e64b40 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x558133e64b10 <col:16> 'Packet *' lvalue ->_data_packet 0x558133e544c8
|         `-CXXThisExpr 0x558133e64b00 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x558133e4ce88 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x558133e4cdf8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558133e5dc28 <col:46> 'bool' true
|-CXXMethodDecl 0x558133e4d008 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x558133e4cf40 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x558133e4d0b0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x558133e4d860 <line:660:22> "" ""
| |-EnumConstantDecl 0x558133e4d1b0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558133e4d8d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4d190 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x558133e4d170 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x558133e42310 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x558133e4d240 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558133e4d8e8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4d220 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x558133e4d200 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x558133e423a0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x558133e4d2d0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558133e4d900 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4d2b0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x558133e4d290 <col:21> 'int' 0
| |-EnumConstantDecl 0x558133e4d360 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558133e4d918 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4d340 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x558133e4d320 <col:19> 'int' 16
| |-EnumConstantDecl 0x558133e4d3f0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558133e4d930 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4d3d0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x558133e4d3b0 <col:21> 'int' 16
| |-EnumConstantDecl 0x558133e4d480 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558133e4d948 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4d460 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x558133e4d440 <col:19> 'int' 32
| |-EnumConstantDecl 0x558133e4d510 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558133e4d960 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4d4f0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x558133e4d4d0 <col:19> 'int' EnumConstant 0x558133e4d360 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x558133e4d5a0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558133e4d978 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4d580 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x558133e4d560 <col:19> 'int' EnumConstant 0x558133e4d480 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x558133e4d670 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558133e4d990 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4d650 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x558133e4d630 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x558133e4d5f0 <col:23> 'int' EnumConstant 0x558133e4d5a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x558133e4d610 <col:40> 'int' 2
| |-EnumConstantDecl 0x558133e4d740 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558133e4d9a8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e4d720 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x558133e4d700 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x558133e4d6c0 <col:23> 'int' EnumConstant 0x558133e4d5a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x558133e4d6e0 <col:40> 'int' 4
| `-EnumConstantDecl 0x558133e4d810 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x558133e4d9c0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e4d7f0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x558133e4d7d0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x558133e4d790 <col:23> 'int' EnumConstant 0x558133e4d5a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x558133e4d7b0 <col:40> 'int' 8
|-CXXMethodDecl 0x558133e4da00 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x558133e4daa0 <col:68> "" ""
|-CXXMethodDecl 0x558133e4db38 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x558133e4dbd8 <col:45> "" ""
|-CXXMethodDecl 0x558133e4dc70 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x558133e4dd10 <col:57> "" ""
|-CXXMethodDecl 0x558133e4dda8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x558133e4de48 <col:45> "" ""
|-CXXMethodDecl 0x558133e4dee0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x558133e4df80 <col:57> "" ""
|-CXXMethodDecl 0x558133e4e010 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x558133e4e0b0 <col:51> "" ""
|-CXXMethodDecl 0x558133e4e140 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x558133e4e1e0 <col:63> "" ""
|-CXXMethodDecl 0x558133e4e270 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x558133e4e310 <col:53> "" ""
|-CXXMethodDecl 0x558133e4e3a0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x558133e4e440 <col:65> "" ""
|-CXXMethodDecl 0x558133e4e558 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x558133e4e4c8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x558133e4e600 <col:61> "" ""
|-CXXMethodDecl 0x558133e4e798 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x558133e4e688 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x558133e4e700 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x558133e4e848 <col:67> "" ""
|-CXXMethodDecl 0x558133e4e960 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x558133e4e8d0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558133e4ea08 <col:63> "" ""
|-CXXMethodDecl 0x558133e4eba0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x558133e4ea90 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558133e4eb08 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x558133e4ec50 <col:69> "" ""
|-CXXMethodDecl 0x558133e4ed68 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x558133e4ecd8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558133e4ee10 <col:63> "" ""
|-CXXMethodDecl 0x558133e514e8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558133e513d8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558133e51450 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558133e51598 <col:69> "" ""
|-CXXMethodDecl 0x558133e516b0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x558133e51620 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x558133e51758 <col:62> "" ""
|-CXXMethodDecl 0x558133e518f0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x558133e517e0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558133e51858 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x558133e519a0 <col:68> "" ""
|-CXXMethodDecl 0x558133e51ab8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x558133e51a28 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558133e51b60 <col:63> "" ""
|-CXXMethodDecl 0x558133e51cf8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x558133e51be8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558133e51c60 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x558133e51da8 <col:69> "" ""
|-CXXMethodDecl 0x558133e51e38 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x558133e51ed8 <col:64> "" ""
|-CXXMethodDecl 0x558133e51f68 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x558133e52008 <col:52> "" ""
|-CXXMethodDecl 0x558133e52098 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x558133e52138 <col:67> "" ""
|-CXXMethodDecl 0x558133e521c8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x558133e52268 <col:55> "" ""
|-CXXMethodDecl 0x558133e52380 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x558133e522f0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558133e52428 <col:58> "" ""
|-CXXMethodDecl 0x558133e525c0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x558133e524b0 <col:33> col:36 'int'
| |-ParmVarDecl 0x558133e52528 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x558133e52670 <col:62> "" ""
|-CXXMethodDecl 0x558133e52788 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x558133e526f8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558133e52830 <col:58> "" ""
|-CXXMethodDecl 0x558133e529c8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x558133e528b8 <col:33> col:36 'int'
| |-ParmVarDecl 0x558133e52930 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x558133e52a78 <col:62> "" ""
|-CXXMethodDecl 0x558133e52b90 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x558133e52b00 <col:34> col:37 'int'
| `-DeprecatedAttr 0x558133e52c38 <col:60> "" ""
|-CXXMethodDecl 0x558133e52dd0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x558133e52cc0 <col:34> col:37 'int'
| |-ParmVarDecl 0x558133e52d38 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x558133e52e80 <col:64> "" ""
|-CXXMethodDecl 0x558133e52f98 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x558133e52f08 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558133e53040 <col:58> "" ""
|-CXXMethodDecl 0x558133e531d8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x558133e530c8 <col:33> col:36 'int'
| |-ParmVarDecl 0x558133e53140 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x558133e53288 <col:62> "" ""
|-CXXMethodDecl 0x558133e533a0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x558133e53310 <col:33> col:36 'int'
| `-DeprecatedAttr 0x558133e53448 <col:59> "" ""
|-CXXMethodDecl 0x558133e535e0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558133e534d0 <col:33> col:36 'int'
| |-ParmVarDecl 0x558133e53548 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558133e53690 <col:63> "" ""
|-AccessSpecDecl 0x558133e53700 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x558133e53728 prev 0x558133e48930 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558133e53820 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x558133e53910 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x558133e53a38 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x558133e53bb8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x558133e53d38 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x558133e53eb8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x558133e64ce8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558133e65558 <col:11>
| |-CXXDestructorDecl 0x558133e64dc0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x558133e64ef8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x558133e64ef8
| | `-ParmVarDecl 0x558133e65008 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x558133e650a8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558133e650a8
| | `-ParmVarDecl 0x558133e651b8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x558133e67f78 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558133e68088 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x558133e68308 <col:11>
| |   `-ReturnStmt 0x558133e682f8 <col:11>
| |     `-UnaryOperator 0x558133e682e0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558133e682d0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x558133e680f8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558133e680f8
|   `-ParmVarDecl 0x558133e68208 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x558133e53f20 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558133e54038 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x558133e540d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x558133e54140 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x558133e541a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x558133e54210 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x558133e54270 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x558133e54330 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x558133e54390 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x558133e543f0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x558133e64bf8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x558133e540d8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x558133e65568 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x558133e655c0 <col:12>
| |-CXXConstructorDecl 0x558133e65228 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x558133e65228
| | `-ParmVarDecl 0x558133e65338 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x558133e653d8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x558133e653d8
| | `-ParmVarDecl 0x558133e654e8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x558133e67660 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x558133e54468 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x558133e544c8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x558133e54530 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x558133e54598 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x558133e54600 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x558133e54668 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x558133e546c8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x558133e54728 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x558133e54790 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x558133e54818 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x558133e54468 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x558133e64b90 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x558133e546c8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x558133e655d0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x558133e65630 <col:21, line:755:5>
|-CXXConstructorDecl 0x558133e549b8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x558133e548f8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x558133e54ab0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x558133e54c98 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x558133e54ba0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x558133e54f68 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x558133e54d50 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558133e54dc8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558133e54e40 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e55188 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x558133e55038 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x558133e550b0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x558133e5d768 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x558133e55248 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x558133e552c0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x558133e55338 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x558133e5d8c0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x558133e5d830 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e5da08 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x558133e5d978 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x558133e5db00 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e989b0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558133e98ac8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x558133e98b98 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x558133e98bf8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x558133e98c60 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x558133e98ce8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x558133e98f50 <col:16, line:46:5>
|   |-BinaryOperator 0x558133e98e98 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x558133e98db8 <col:9> 'TaskLink *' lvalue ->_prev 0x558133e98b98
|   | | `-CXXThisExpr 0x558133e98da8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x558133e98e80 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x558133e98e60 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x558133e98df8 <col:17> 'TaskLink *' lvalue ->_next 0x558133e98bf8
|   |     | `-CXXThisExpr 0x558133e98de8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x558133e98e48 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x558133e98e28 <col:25> 'int' 0
|   `-BinaryOperator 0x558133e98f30 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x558133e98ec8 <col:9> 'unsigned int' lvalue ->_pass 0x558133e98c60
|     | `-CXXThisExpr 0x558133e98eb8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x558133e98f18 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x558133e98ef8 <col:17> 'int' 0
|-CXXConstructorDecl 0x558133f25488 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x558133f25488
| `-ParmVarDecl 0x558133f25598 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x558133f25638 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x558133f25638
| `-ParmVarDecl 0x558133f25748 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x558133f25938 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x558133f25938
|-CXXMethodDecl 0x558133f26138 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x558133f26138
| `-ParmVarDecl 0x558133f26248 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x558133f262b8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x558133f262b8
  `-ParmVarDecl 0x558133f263c8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133dfc078 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x558133dfc1a8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x558133dfc208 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x558133dfc268 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x558133f2c648 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x558133f2c720 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558133f2c720
|-CXXConstructorDecl 0x558133f2c9d8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x558133f2c9d8
| `-ParmVarDecl 0x558133f2cae8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x558133f2cb88 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x558133f2cb88
  `-ParmVarDecl 0x558133f2cc98 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133dfbec8 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x558133dfbfe8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x558133dfc078 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x558133dfc1a8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x558133dfc208 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x558133dfc268 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x558133f2c648 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x558133f2c720 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558133f2c720
| |-CXXConstructorDecl 0x558133f2c9d8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x558133f2c9d8
| | `-ParmVarDecl 0x558133f2cae8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x558133f2cb88 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x558133f2cb88
|   `-ParmVarDecl 0x558133f2cc98 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x558133dfc328 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x558133dfc388 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x558133dfc328 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x558133dfc1a8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x558133dfc3e0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x558133dfc328 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x558133dfc208 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x558133dfc438 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x558133dfc328 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x558133dfc268 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x558133dfc490 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558133f2c558 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558133f2ceb8 <col:11>
|-CXXConstructorDecl 0x558133f2c828 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x558133f2c828
| `-ParmVarDecl 0x558133f2c938 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x558133f2cd38 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x558133f2cd38
  `-ParmVarDecl 0x558133f2ce48 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e139c0 prev 0x558133e0a800 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558133e13ab8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x558133e13b58 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x558133e1a920 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558133e1ad08 <col:11>
|-CXXConstructorDecl 0x558133e1aa00 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558133e1aae8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x558133e1b450 <col:11>
|-CXXConstructorDecl 0x558133e1ab88 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558133e1ac98 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x558133e1cca8 <col:11>
|-CXXDestructorDecl 0x558133e1bfb8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558133b22b68 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558133b22c78 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x558133b23540 <col:11>
|   `-ReturnStmt 0x558133b23530 <col:11>
|     `-UnaryOperator 0x558133b23518 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558133b23508 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x558133b22ce8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x558133b22df8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x558133eb53e0 <col:11>
    `-ReturnStmt 0x558133eb53d0 <col:11>
      `-UnaryOperator 0x558133eb53b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x558133eb53a8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e099b8 prev 0x558133e096c8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558133e09ab0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x558133e09b40 <col:19, col:25> col:19 public
|-TypedefDecl 0x558133e09b78 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x558133a6ed60 'int32_t' sugar
|   |-Typedef 0x558133981328 'int32_t'
|   `-TypedefType 0x55813395a510 '__int32_t' sugar
|     |-Typedef 0x55813395a128 '__int32_t'
|     `-BuiltinType 0x558133918580 'int'
|-TypedefDecl 0x558133e09be0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x558133a6ef20 'int64_t' sugar
|   |-Typedef 0x558133981390 'int64_t'
|   `-TypedefType 0x55813395a630 '__int64_t' sugar
|     |-Typedef 0x55813395a208 '__int64_t'
|     `-BuiltinType 0x5581339185a0 'long'
|-EnumDecl 0x558133e09c38 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x558133e09db0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x558133e09d90 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x558133e09d68 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x558133e09d50 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x558133e09d20 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x558133e09ea8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x558133e09e88 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x558133e09e60 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x558133e09e48 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x558133e09e20 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x558133e09e00 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x558133e09ef8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x558133e0a000 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558133e0a550 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e09fe0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x558133e09fc0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x558133e0a090 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558133e0a568 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e0a070 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x558133e0a050 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x558133e0a120 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558133e0a580 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e0a100 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x558133e0a0e0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x558133e0a1b0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558133e0a598 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e0a190 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x558133e0a170 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x558133e0a240 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558133e0a5b0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e0a220 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x558133e0a200 <col:25> 'int' 1000
| |-EnumConstantDecl 0x558133e0a2d0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558133e0a5c8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e0a2b0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x558133e0a290 <col:24> 'int' 1000
| |-EnumConstantDecl 0x558133e0a360 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558133e0a5e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e0a340 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x558133e0a320 <col:26> 'int' EnumConstant 0x558133e0a000 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x558133e0a430 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558133e0a5f8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e0a410 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x558133e0a3f0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x558133e0a3b0 <col:27> 'int' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x558133e0a3d0 <col:44> 'int' EnumConstant 0x558133e0a2d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x558133e0a500 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x558133e0a610 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e0a4e0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x558133e0a4c0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x558133e0a480 <col:27> 'int' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x558133e0a4a0 <col:44> 'int' EnumConstant 0x558133e0a1b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x558133e0a628 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x558133e0a730 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x558133e0a780 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e0a710 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x558133e0a6f0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x558133e0a7a8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x558133a6e990 'uninitialized_type'
|   `-CXXRecord 0x558133a6e8f8 'uninitialized_type'
|-CXXRecordDecl 0x558133e0a800 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x558133e0a910 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x558133e14b08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558133e1ad18 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558133e1ae38 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x558133e1adf0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x558133e1ad80 <col:9> '<bound member function type>' ->assign 0x558133e0f558
|     | `-CXXThisExpr 0x558133e1ad70 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x558133e1adb0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x558133e1ae20 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x558133e1add0 <col:19> 'int' 0
|-CXXConstructorDecl 0x558133e0ab58 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x558133e0a9d0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x558133e0aa48 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558133e16650 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558133e16630 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x558133e14b08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558133e1ae50 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558133e1afa0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x558133e1af28 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x558133e1aeb8 <col:9> '<bound member function type>' ->assign 0x558133e0f558
|     | `-CXXThisExpr 0x558133e1aea8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558133e1af70 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x558133e1af58 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x558133e1aee8 <col:16> 'long' lvalue ParmVar 0x558133e0a9d0 'sec' 'long'
|     `-ImplicitCastExpr 0x558133e1af88 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558133e1af08 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e0aa48 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558133e0adb8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558133e0ac28 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x558133e0aca0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558133e16688 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558133e16668 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x558133e14b08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558133e1afb8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558133e1b0f0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x558133e1b090 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x558133e1b020 <col:9> '<bound member function type>' ->assign 0x558133e0f558
|     | `-CXXThisExpr 0x558133e1b010 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558133e1b0c0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558133e1b050 <col:16> 'int' lvalue ParmVar 0x558133e0ac28 'sec' 'int'
|     `-ImplicitCastExpr 0x558133e1b0d8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558133e1b070 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e0aca0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558133e0b018 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x558133e0ae88 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x558133e0af00 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558133e166c0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558133e166a0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x558133e14b08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558133e1b108 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558133e1b258 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x558133e1b1e0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x558133e1b170 <col:9> '<bound member function type>' ->assign 0x558133e0f558
|     | `-CXXThisExpr 0x558133e1b160 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558133e1b228 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x558133e1b210 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x558133e1b1a0 <col:16> 'unsigned long' lvalue ParmVar 0x558133e0ae88 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x558133e1b240 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558133e1b1c0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e0af00 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558133e0c1b0 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x558133e0b0e8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x558133e0b160 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558133e166f8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558133e166d8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x558133e14b08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558133e1b270 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558133e1b3c0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x558133e1b348 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x558133e1b2d8 <col:9> '<bound member function type>' ->assign 0x558133e0f558
|     | `-CXXThisExpr 0x558133e1b2c8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558133e1b390 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x558133e1b378 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x558133e1b308 <col:16> 'unsigned int' lvalue ParmVar 0x558133e0b0e8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x558133e1b3a8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558133e1b328 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e0b160 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558133e0c310 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x558133e0c280 <col:31> col:37 'double'
|-CXXConstructorDecl 0x558133e0c4a8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x558133e0c3e8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x558133e0c6d8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x558133e0c5e0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x558133e0c888 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x558133e0c7c8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x558133e14b08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558133e1b460 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x558133e1b3d8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x558133e0c7c8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x558133e1b4c0 <col:19, line:214:5>
|-CXXConstructorDecl 0x558133e0ca58 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x558133e0c998 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x558133e14b08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558133e1b4d0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558133e1b580 <col:53, line:219:5>
|   `-CStyleCastExpr 0x558133e1b558 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x558133e1b528 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x558133e0c998 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x558133e0cc48 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x558133e0cbc0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x558133e09760 'Timestamp'
|   | `-CXXRecord 0x558133e099b8 'Timestamp'
|   `-ParenType 0x558133e0cb60 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x558133e0cb30 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x558133e09d00 'Timestamp::seconds_type' sugar
|         |-Typedef 0x558133e09b78 'seconds_type'
|         `-TypedefType 0x558133a6ed60 'int32_t' sugar
|           |-Typedef 0x558133981328 'int32_t'
|           `-TypedefType 0x55813395a510 '__int32_t' sugar
|             |-Typedef 0x55813395a128 '__int32_t'
|             `-BuiltinType 0x558133918580 'int'
|-CXXConversionDecl 0x558133e0cd88 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558133e0ce58 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x558133e1b688 <col:37, line:231:5>
|   `-ReturnStmt 0x558133e1b678 <line:227:9, col:23>
|     `-BinaryOperator 0x558133e1b658 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x558133e1b628 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558133e1b5d8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x558133e13b58
|       |   `-MemberExpr 0x558133e1b5a8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x558133e14b08
|       |     `-CXXThisExpr 0x558133e1b598 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558133e1b640 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x558133e1b608 <col:23> 'int' 0
|-CXXMethodDecl 0x558133e0cf18 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x558133e0cfd8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x558133e0d098 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x558133e0d158 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x558133e0d218 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x558133e0d388 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x558133e0d2c8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x558133e0d4d0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x558133e0d440 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e0d598 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x558133e0d638 <col:54> "" ""
|-CXXMethodDecl 0x558133e0d6c8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x558133e0d768 <col:54> "" ""
|-CXXMethodDecl 0x558133e0d7f8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x558133e0d898 <col:54> "" ""
|-CXXMethodDecl 0x558133e0d998 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x558133e0da68 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x558133e0db98 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x558133e0dc90 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x558133e0ddc8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x558133e1b8a0 <col:39, line:271:5>
|   `-ReturnStmt 0x558133e1b890 <line:267:9, col:61>
|     `-CallExpr 0x558133e1b830 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x558133e1b818 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558133e1b6a0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x558133e14e38 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x558133e1b860 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558133e1b700 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x558133e13b58
|       |   `-MemberExpr 0x558133e1b6d0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x558133e14b08
|       |     `-CXXThisExpr 0x558133e1b6c0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558133e1b878 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x558133e1b7a0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x558133e1b770 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x558133e1b730 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x558133e1b788 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x558133e1b750 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a2d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558133e0de88 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x558133e1ba60 <col:39, line:279:5>
|   `-ReturnStmt 0x558133e1ba50 <line:275:9, col:61>
|     `-CallExpr 0x558133e1b9f0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x558133e1b9d8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558133e1b8b8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x558133e14e38 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x558133e1ba20 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558133e1b918 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x558133e13b58
|       |   `-MemberExpr 0x558133e1b8e8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x558133e14b08
|       |     `-CXXThisExpr 0x558133e1b8d8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558133e1ba38 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x558133e1b9b8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x558133e1b988 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x558133e1b948 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x558133e1b9a0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x558133e1b968 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a1b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558133e0df48 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x558133e1bbf8 <col:39, line:287:5>
|   `-ReturnStmt 0x558133e1bbe8 <line:283:9, col:53>
|     `-BinaryOperator 0x558133e1bbc8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x558133e1bb98 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558133e1bab8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x558133e13b58
|       |   `-MemberExpr 0x558133e1ba88 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x558133e14b08
|       |     `-CXXThisExpr 0x558133e1ba78 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558133e1bbb0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x558133e1bb78 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558133e1bb58 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x558133e1bb28 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558133e1bae8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a000 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558133e1bb40 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558133e1bb08 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558133e0e038 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x558133e1ce90 <col:40, line:293:5>
|   |-DeclStmt 0x558133e1bd40 <line:291:9, col:48>
|   | `-VarDecl 0x558133e1bc20 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x558133e1bd20 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x558133e1bcc8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x558133e1bc98 <col:22> '<bound member function type>' ->subsec 0x558133e0cfd8
|   |     |   `-CXXThisExpr 0x558133e1bc88 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x558133e1bd08 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x558133e1bce8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a430 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558133e1ce80 <line:292:9, col:70>
|     `-ExprWithCleanups 0x558133e1ce68 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x558133e1ce38 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558133e1ce20 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x558133e1ce00 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x558133e1cdd0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x558133e1cb68 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x558133e1cb50 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x558133e1bd58 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x558133e1bc20 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x558133e1cd70 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x558133e1cd58 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x558133e1cd28 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x558133e1cb80 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x558133e1caf0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x558133e1cad8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x558133e1ca88 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558133e09908 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x558133e1ca28 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x558133e1bd88 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x558133e1bd78 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x558133e1ca70 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x558133e1ca58 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x558133e1c248 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x558133e1bdb0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x558133e1be40 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x558133e1be10 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x558133e1bdd0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a430 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x558133e1be28 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x558133e1bdf0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x558133e1bc20 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x558133e1cda0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x558133e1cb38 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x558133e1cb28 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x558133e0e0f8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x558133e1d3e8 <col:40, line:302:5>
|   |-DeclStmt 0x558133e1cfe0 <line:297:9, col:48>
|   | `-VarDecl 0x558133e1cec0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x558133e1cfc0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x558133e1cf68 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x558133e1cf38 <col:22> '<bound member function type>' ->subsec 0x558133e0cfd8
|   |     |   `-CXXThisExpr 0x558133e1cf28 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x558133e1cfa8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x558133e1cf88 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a500 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558133e1d3d8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x558133e1d3c0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x558133e1d390 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558133e1d378 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x558133e1d358 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x558133e1d328 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x558133e1d250 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x558133e1d238 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x558133e1cff8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x558133e1cec0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x558133e1d2c8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x558133e1d2b0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x558133e1d280 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x558133e1d268 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x558133e1d1d8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x558133e1d1c0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x558133e1d1a0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558133e09908 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x558133e1d140 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x558133e1d028 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x558133e1d018 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x558133e1d188 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x558133e1d170 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x558133e1d100 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x558133e1d050 <col:39> 'int' 0
|               |               `-BinaryOperator 0x558133e1d0e0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x558133e1d0b0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x558133e1d070 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a500 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x558133e1d0c8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x558133e1d090 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x558133e1cec0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x558133e1d2f8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x558133e1d220 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x558133e1d210 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x558133e0e1b8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x558133e1d470 <col:40, line:306:5>
|   `-ReturnStmt 0x558133e1d460 <line:305:9, col:17>
|     `-CXXConstructExpr 0x558133e1d430 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x558133e1d418 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558133e1d408 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x558133e0e358 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x558133e0e268 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x558133e0e528 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x558133e0e430 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x558133e0e618 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x558133e0e788 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x558133e0e6c8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x558133e1d5b8 <col:56, line:320:5>
|   `-ReturnStmt 0x558133e1d5a8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x558133e1d590 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x558133e1d560 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558133e1d548 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558133e1d508 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558133e1d4d8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558133e1d498 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558133e0e6c8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x558133e1d4f0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x558133e1d4b8 <col:31> 'int' 0
|-CXXMethodDecl 0x558133e0e9c8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x558133e0e840 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558133e0e8b8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e1d788 <col:72, line:326:5>
|   `-ReturnStmt 0x558133e1d778 <line:325:9, col:51>
|     `-ExprWithCleanups 0x558133e1d760 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x558133e1d730 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558133e1d718 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558133e1d6d8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558133e1d6c0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558133e1d5e0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558133e0e840 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x558133e1d680 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x558133e1d668 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558133e1d600 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558133e132b0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x558133e1d6a8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558133e1d620 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e0e8b8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e0eb78 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x558133e0ea88 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x558133e1de50 <col:56, line:337:5>
|   |-DeclStmt 0x558133e1da88 <line:329:9, col:51>
|   | `-VarDecl 0x558133e1d7b0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x558133e1da70 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x558133e1da40 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558133e1da28 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x558133e1da10 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x558133e1d9e0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x558133e1d9c8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x558133e1d9b0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x558133e1d8a0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x558133e1dc40 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x558133e1daf0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x558133e13b58
|   | | `-MemberExpr 0x558133e1dac0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x558133e14b08
|   | |   `-DeclRefExpr 0x558133e1daa0 <col:9> 'Timestamp' lvalue Var 0x558133e1d7b0 't' 'Timestamp'
|   | `-BinaryOperator 0x558133e1dc20 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x558133e1dbf0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558133e1db20 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x558133e0ea88 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x558133e1dc08 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x558133e1dbd0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x558133e1dbb0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x558133e1db80 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x558133e1db40 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x558133e1db98 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x558133e1db60 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a2d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558133e1de38 <line:336:9, col:16>
|     `-CXXConstructExpr 0x558133e1de08 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558133e1ddf0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x558133e1ddd0 <col:16> 'Timestamp' lvalue Var 0x558133e1d7b0 't' 'Timestamp'
|-CXXMethodDecl 0x558133e0ed40 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x558133e0ec30 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558133e0eca8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e1e008 <col:72, line:343:5>
|   `-ReturnStmt 0x558133e1dff8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x558133e1dfe0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x558133e1dfb0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558133e1df98 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558133e1df58 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558133e1df40 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558133e1de88 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558133e0ec30 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x558133e1df00 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x558133e1dee8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558133e1dea8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558133e133f8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x558133e1df28 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558133e1dec8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e0eca8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e0ee90 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x558133e0ee00 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x558133e1e450 <col:56, line:354:5>
|   |-DeclStmt 0x558133e1e1f8 <line:346:9, col:51>
|   | `-VarDecl 0x558133e1e030 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x558133e1e1e0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x558133e1e1b0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558133e1e198 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x558133e1e180 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x558133e1e150 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x558133e1e138 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x558133e1e120 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x558133e1e0f0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x558133e1e3b0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x558133e1e260 <col:9, col:14> 'int64_t':'long' lvalue .x 0x558133e13b58
|   | | `-MemberExpr 0x558133e1e230 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x558133e14b08
|   | |   `-DeclRefExpr 0x558133e1e210 <col:9> 'Timestamp' lvalue Var 0x558133e1e030 't' 'Timestamp'
|   | `-BinaryOperator 0x558133e1e390 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x558133e1e360 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558133e1e290 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x558133e0ee00 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x558133e1e378 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x558133e1e340 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x558133e1e320 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x558133e1e2f0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x558133e1e2b0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x558133e1e308 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x558133e1e2d0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a1b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558133e1e438 <line:353:9, col:16>
|     `-CXXConstructExpr 0x558133e1e408 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558133e1e3f0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x558133e1e3d0 <col:16> 'Timestamp' lvalue Var 0x558133e1e030 't' 'Timestamp'
|-CXXMethodDecl 0x558133e0f058 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x558133e0ef48 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558133e0efc0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e1e608 <col:72, line:360:5>
|   `-ReturnStmt 0x558133e1e5f8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x558133e1e5e0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x558133e1e5b0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558133e1e598 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558133e1e558 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558133e1e540 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558133e1e488 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558133e0ef48 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x558133e1e500 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x558133e1e4e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558133e1e4a8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558133e13540 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x558133e1e528 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558133e1e4c8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e0efc0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e0f1a8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x558133e0f118 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x558133e2af78 <col:56, line:371:5>
|   |-DeclStmt 0x558133e1e7f8 <line:363:9, col:51>
|   | `-VarDecl 0x558133e1e630 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x558133e1e7e0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x558133e1e7b0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558133e1e798 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x558133e1e780 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x558133e1e750 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x558133e1e738 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x558133e1e720 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x558133e1e6f0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x558133e2aed8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x558133e1e860 <col:9, col:14> 'int64_t':'long' lvalue .x 0x558133e13b58
|   | | `-MemberExpr 0x558133e1e830 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x558133e14b08
|   | |   `-DeclRefExpr 0x558133e1e810 <col:9> 'Timestamp' lvalue Var 0x558133e1e630 't' 'Timestamp'
|   | `-CallExpr 0x558133e2ae78 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x558133e2ae60 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x558133e1e890 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x558133e14e38 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x558133e2aea8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558133e1e8b0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x558133e0f118 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x558133e2aec0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x558133e2ae40 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x558133e2ae10 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x558133e1e8d0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a000 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x558133e2ae28 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x558133e1e8f0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558133e2af60 <line:370:9, col:16>
|     `-CXXConstructExpr 0x558133e2af30 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558133e2af18 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x558133e2aef8 <col:16> 'Timestamp' lvalue Var 0x558133e1e630 't' 'Timestamp'
|-CXXMethodDecl 0x558133e0f298 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x558133e2b0b8 <col:39, line:377:5>
|   `-ReturnStmt 0x558133e2b0a8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x558133e2b090 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x558133e2b060 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558133e2b048 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558133e2b008 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x558133e2afb0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x558133e2aff0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x558133e2afd0 <col:29> 'int' 1
|-CXXMethodDecl 0x558133e0f358 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x558133e2b198 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x558133e2b150 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x558133e2b0e0 <col:9> '<bound member function type>' ->assign 0x558133e0f558
|     | `-CXXThisExpr 0x558133e2b0d0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x558133e2b110 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x558133e2b180 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x558133e2b130 <col:19> 'int' 0
|-CXXMethodDecl 0x558133e0f558 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558133e0f408 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558133e0f480 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558133e16730 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558133e16710 <col:60> 'int' 0
| `-CompoundStmt 0x558133e2b390 <col:63, line:395:5>
|   `-BinaryOperator 0x558133e2b370 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x558133e2b1f0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x558133e13b58
|     | `-MemberExpr 0x558133e2b1c0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x558133e14b08
|     |   `-CXXThisExpr 0x558133e2b1b0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x558133e2b350 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x558133e2b2e0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x558133e2b280 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x558133e2b268 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x558133e2b250 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x558133e2b220 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558133e0f408 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x558133e2b2c8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x558133e2b2a8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x558133e2b338 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x558133e2b320 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x558133e2b300 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e0f480 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e0f728 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558133e0f618 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558133e0f690 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e2b4e8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x558133e2b4a0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x558133e2b3b8 <col:9> '<bound member function type>' ->assign 0x558133e0f558
|     | `-CXXThisExpr 0x558133e2b3a8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558133e2b4d0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558133e2b3e8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558133e0f618 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x558133e2b460 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x558133e2b448 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558133e2b408 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558133e133f8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x558133e2b488 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558133e2b428 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e0f690 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e0f8f8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558133e0f7e8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558133e0f860 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e2b640 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x558133e2b5f8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x558133e2b510 <col:9> '<bound member function type>' ->assign 0x558133e0f558
|     | `-CXXThisExpr 0x558133e2b500 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558133e2b628 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558133e2b540 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558133e0f7e8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x558133e2b5b8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x558133e2b5a0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558133e2b560 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558133e13540 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x558133e2b5e0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558133e2b580 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e0f860 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e0fac8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558133e0f9b8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558133e0fa30 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558133e16768 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558133e16748 <col:57> 'int' 0
| `-DeprecatedAttr 0x558133e0fb78 <col:75> "" ""
|-CXXMethodDecl 0x558133e0fd08 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558133e0fbf8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558133e0fc70 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558133e0fdb8 <col:74> "" ""
|-CXXMethodDecl 0x558133e0ff48 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558133e0fe38 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558133e0feb0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558133e0fff8 <col:74> "" ""
|-CXXMethodDecl 0x558133e10088 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x558133e10128 <col:42> "" ""
|-CXXMethodDecl 0x558133e12960 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x558133e12840 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x558133e128c0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x558133e12a30 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x558133e12af0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x558133e12b90 <col:20>
| `-OptimizeNoneAttr 0x558133e12be8 <col:30>
|-CXXMethodDecl 0x558133e12c30 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x558133e12cf0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x558133e12db0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x558133e12e70 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x558133e12f30 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x558133e12ff0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x558133e130b0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x558133e13170 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x558133e132b0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558133e13220 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e2b788 <col:58, line:512:5>
|   `-ReturnStmt 0x558133e2b778 <line:511:9, col:53>
|     `-BinaryOperator 0x558133e2b758 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x558133e2b728 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558133e2b658 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e13220 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558133e2b740 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558133e2b708 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558133e2b6e8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x558133e2b6b8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558133e2b678 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558133e2b6d0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558133e2b698 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a2d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558133e133f8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558133e13368 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e2b8d0 <col:58, line:516:5>
|   `-ReturnStmt 0x558133e2b8c0 <line:515:9, col:53>
|     `-BinaryOperator 0x558133e2b8a0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x558133e2b870 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558133e2b7a0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e13368 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558133e2b888 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558133e2b850 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558133e2b830 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x558133e2b800 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558133e2b7c0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558133e2b818 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558133e2b7e0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a1b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558133e13540 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558133e134b0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e2ba18 <col:58, line:520:5>
|   `-ReturnStmt 0x558133e2ba08 <line:519:9, col:53>
|     `-BinaryOperator 0x558133e2b9e8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x558133e2b9b8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558133e2b8e8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e134b0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558133e2b9d0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558133e2b998 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558133e2b978 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x558133e2b948 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558133e2b908 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a000 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558133e2b960 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558133e2b928 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558133e13688 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558133e135f8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e2bb60 <col:60, line:524:5>
|   `-ReturnStmt 0x558133e2bb50 <line:523:9, col:55>
|     `-BinaryOperator 0x558133e2bb30 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x558133e2bb00 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558133e2ba30 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e135f8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558133e2bb18 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558133e2bae0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x558133e2bac0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x558133e2ba90 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558133e2ba50 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558133e2baa8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558133e2ba70 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a2d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558133e137d0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558133e13740 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e2bca8 <col:60, line:528:5>
|   `-ReturnStmt 0x558133e2bc98 <line:527:9, col:55>
|     `-BinaryOperator 0x558133e2bc78 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x558133e2bc48 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558133e2bb78 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e13740 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558133e2bc60 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558133e2bc28 <col:25, col:55> 'int'
|           `-BinaryOperator 0x558133e2bc08 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x558133e2bbd8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558133e2bb98 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558133e2bbf0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558133e2bbb8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a1b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558133e13918 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558133e13888 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e2bdf0 <col:60, line:532:5>
|   `-ReturnStmt 0x558133e2bde0 <line:531:9, col:55>
|     `-BinaryOperator 0x558133e2bdc0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x558133e2bd90 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558133e2bcc0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e13888 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558133e2bda8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558133e2bd70 <col:25, col:55> 'int'
|           `-BinaryOperator 0x558133e2bd50 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x558133e2bd20 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558133e2bce0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a000 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558133e2bd38 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558133e2bd00 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558133e0a360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x558133e139c0 prev 0x558133e0a800 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558133e13ab8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x558133e13b58 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x558133e1a920 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558133e1ad08 <col:11>
| |-CXXConstructorDecl 0x558133e1aa00 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558133e1aae8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x558133e1b450 <col:11>
| |-CXXConstructorDecl 0x558133e1ab88 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x558133e1ac98 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x558133e1cca8 <col:11>
| |-CXXDestructorDecl 0x558133e1bfb8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x558133b22b68 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558133b22c78 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x558133b23540 <col:11>
| |   `-ReturnStmt 0x558133b23530 <col:11>
| |     `-UnaryOperator 0x558133b23518 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558133b23508 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x558133b22ce8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x558133b22df8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x558133eb53e0 <col:11>
|     `-ReturnStmt 0x558133eb53d0 <col:11>
|       `-UnaryOperator 0x558133eb53b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558133eb53a8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x558133e13bc0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x558133e13cc0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x558133e13ec0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e13ca0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x558133e13c80 <col:21> 'int' 0
| |-EnumConstantDecl 0x558133e13d50 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x558133e13ed8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e13d30 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x558133e13d10 <col:23> 'int' 1
| |-EnumConstantDecl 0x558133e13de0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x558133e13ef0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e13dc0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x558133e13da0 <col:23> 'int' 2
| `-EnumConstantDecl 0x558133e13e70 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x558133e13f08 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e13e50 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x558133e13e30 <col:27> 'int' 3
|-CXXMethodDecl 0x558133e13f48 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x558133e14010 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x558133e14218 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x558133e140c0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x558133e14140 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x558133e16780 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x558133e14428 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x558133e142d8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x558133e14350 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x558133e144f8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x558133e145b8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x558133e14728 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x558133e14668 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x558133e147f0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x558133e148b0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x558133e14970 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x558133e14a30 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x558133e14ad0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x558133e14b08 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x558133e14b78 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x558133e2be08 <col:27, line:684:5>
|-CXXMethodDecl 0x558133e14c38 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x558133e2be18 <col:27, line:696:5>
|-CXXMethodDecl 0x558133e14e38 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x558133e14ce8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x558133e14d60 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e2bfa0 <col:66, line:700:5>
|   `-ReturnStmt 0x558133e2bf90 <line:699:9, col:31>
|     `-CallExpr 0x558133e2bf30 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x558133e2bf18 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558133e2bec8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x558133c971e8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x558133e2bf60 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x558133e2be88 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x558133e14ce8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x558133e2bf78 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558133e2bea8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e14d60 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e151a8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x558133e14ef8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x558133e14f70 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x558133e14fe8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x558133e15060 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133e2c2f0 <col:64, line:707:5>
|   |-DeclStmt 0x558133e2c030 <line:704:9, col:24>
|   | `-VarDecl 0x558133e2bfc8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x558133e2c240 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x558133e2c048 <col:9> 'int32_t':'int' lvalue ParmVar 0x558133e14f70 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x558133e2c228 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x558133e2c1c0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x558133e2c1a8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558133e2c128 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x558133c9c4b8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x558133e2c1f8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x558133e2c0c8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x558133e14fe8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x558133e2c210 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x558133e2c0e8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e15060 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x558133e2c108 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x558133e2bfc8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x558133e2c2d0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x558133e2c260 <col:9> 'int32_t':'int' lvalue ParmVar 0x558133e14ef8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x558133e2c2b8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x558133e2c2a0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x558133e2c280 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x558133e2bfc8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x558133e15448 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x558133e15278 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x558133e152f0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x558133e15368 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x558133e156e8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x558133e15510 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x558133e15588 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x558133e15600 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x558133e15878 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x558133e157b0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x558133e15a78 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x558133e15930 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x558133e159a8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x558133e15d48 <line:717:5, col:73> col:24
| `-FunctionDecl 0x558133e15c88 parent 0x558133918488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558133e15b38 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x558133e15bb0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x558133e15f68 <line:718:5, col:72> col:24
| `-FunctionDecl 0x558133e15ea8 parent 0x558133918488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558133e15d98 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x558133e15e10 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x558133e16130 <line:719:5, col:57> col:29
| `-FunctionDecl 0x558133e16078 parent 0x558133918488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x558133e15fb8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x558133e163b8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x558133e162f8 parent 0x558133918488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558133e161a8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x558133e16220 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x558133e165d8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x558133e16518 parent 0x558133918488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558133e16408 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x558133e16480 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x558133e1be60 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x558133e1bf48 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x558133e14b08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558133e1c9b8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x558133e1c970 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x558133e14b08
| |     `-DeclRefExpr 0x558133e1c950 <col:7> 'const Timestamp' lvalue ParmVar 0x558133e1bf48 '' 'const Timestamp &'
| `-CompoundStmt 0x558133e1ca18 <col:7>
|-CXXConstructorDecl 0x558133e1c0c8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558133e1c1d8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x558133e14b08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558133e1ccb8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x558133e1cc60 <col:7> 'Timestamp::rep_t' xvalue ._t 0x558133e14b08
| |     `-CXXStaticCastExpr 0x558133e1cc30 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x558133e1cc00 <col:7> 'Timestamp' lvalue ParmVar 0x558133e1c1d8 '' 'Timestamp &&'
| `-CompoundStmt 0x558133e1cd18 <col:7>
|-CXXDestructorDecl 0x558133e1c288 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558133b229b8 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x558133b22ac8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x558133b235b8 <col:7>
|   |-CXXMemberCallExpr 0x558133b23558 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x558133b23498 <col:7> '<bound member function type>' .operator= 0x558133b22b68
|   | | `-MemberExpr 0x558133b233a8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x558133e14b08
|   | |   `-CXXThisExpr 0x558133b23398 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x558133b23468 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x558133e14b08
|   |   `-DeclRefExpr 0x558133b23448 <col:7> 'const Timestamp' lvalue ParmVar 0x558133b22ac8 '' 'const Timestamp &'
|   `-ReturnStmt 0x558133b235a8 <col:7>
|     `-UnaryOperator 0x558133b23590 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558133b23580 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x558133b22e68 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x558133b22f78 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x558133eb5458 <col:7>
    |-CXXMemberCallExpr 0x558133eb53f8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x558133eb5360 <col:7> '<bound member function type>' .operator= 0x558133b22ce8
    | | `-MemberExpr 0x558133eb5230 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x558133e14b08
    | |   `-CXXThisExpr 0x558133eb5220 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x558133eb5330 <col:7> 'Timestamp::rep_t' xvalue ._t 0x558133e14b08
    |   `-CXXStaticCastExpr 0x558133eb5300 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x558133eb52d0 <col:7> 'Timestamp' lvalue ParmVar 0x558133b22f78 '' 'Timestamp &&'
    `-ReturnStmt 0x558133eb5448 <col:7>
      `-UnaryOperator 0x558133eb5430 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x558133eb5420 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558133eba150 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x558133eba328 prev 0x558133eba150 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558133eba3b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x558133eba3e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558133918580 'int'
|-TypedefDecl 0x558133ebfde0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x558133ebfd90 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x558133eba890 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x558133eba790 'type'
|     `-TemplateSpecializationType 0x558133eba720 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558133eba600 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x558133eba5e0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558133eba5c0 <col:24> 'unsigned long' 16
|       `-RecordType 0x558133eba700 'char_array<16>'
|         `-ClassTemplateSpecialization 0x558133eba620 'char_array'
|-TypedefDecl 0x558133ebfe98 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x558133ebfe60 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x558133ebfe40 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x558133ebfde0 'type'
|     `-ElaboratedType 0x558133ebfd90 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x558133eba890 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x558133eba790 'type'
|         `-TemplateSpecializationType 0x558133eba720 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558133eba600 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x558133eba5e0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558133eba5c0 <col:24> 'unsigned long' 16
|           `-RecordType 0x558133eba700 'char_array<16>'
|             `-ClassTemplateSpecialization 0x558133eba620 'char_array'
|-CXXMethodDecl 0x558133ec0018 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x558133ebff28 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x558133ec0108 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558133ec01e8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558133ec01e8
|-CXXMethodDecl 0x558133ec04b8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x558133ec03c0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x558133ec06f8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558133ec0570 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558133ec05e8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558133ec08c8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558133ec07b8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558133ec0830 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558133ec0a28 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x558133ec0af8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x558133ec0d48 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558133ec0bb8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x558133ec0c30 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558133ec0fa8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x558133ec0e18 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x558133ec0e90 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558133ec1168 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x558133ec1078 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558133ec1328 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x558133ec1230 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558133ec13e0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558133ec1490 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558133ec16c8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558133ec1540 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558133ec15b8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558133ec1968 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x558133ec1870 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x558133ec1a30 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x558133ec1a80 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558133ec1ad0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558133eb8a68 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x558133eb8c78 prev 0x558133eb8a68 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558133eba0c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x558133eba070 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x558133eba050 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x558133eb9f00 'type'
|     `-SubstTemplateTypeParmType 0x558133eb9d20 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x558133bdf370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133bdf318 'T'
|       `-RecordType 0x558133eb9870 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x558133eb9788 'sized_array_memory'
|-FieldDecl 0x558133ec1b20 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x558133ec1b70 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558133ec1ba8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x558133eb8d10 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558133c17008 'T'
|   `-RecordType 0x558133eb7c70 'TimerSet::heap_element'
|     `-CXXRecord 0x558133eb7be0 'heap_element'
|-TypedefDecl 0x558133ec1c68 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x558133ec1c30 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x558133eb8d10 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558133c17008 'T'
|     `-RecordType 0x558133eb7c70 'TimerSet::heap_element'
|       `-CXXRecord 0x558133eb7be0 'heap_element'
|-TypedefDecl 0x558133ec1cf8 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x558133ec1cc0 'const TimerSet::heap_element &'
|   `-QualType 0x558133eb8d11 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558133eb8d10 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-RecordType 0x558133eb7c70 'TimerSet::heap_element'
|         `-CXXRecord 0x558133eb7be0 'heap_element'
|-TypedefDecl 0x558133ec1d88 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x558133ec1d50 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x558133eb8d10 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558133c17008 'T'
|     `-RecordType 0x558133eb7c70 'TimerSet::heap_element'
|       `-CXXRecord 0x558133eb7be0 'heap_element'
|-TypedefDecl 0x558133ec1e48 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x558133ec1e10 'const TimerSet::heap_element *'
|   `-QualType 0x558133eb8d11 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558133eb8d10 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-RecordType 0x558133eb7c70 'TimerSet::heap_element'
|         `-CXXRecord 0x558133eb7be0 'heap_element'
|-TypedefDecl 0x558133ec2cb0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x558133ec2c60 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x558133ec2c40 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x558133ec2b78 'type'
|     `-LValueReferenceType 0x558133ec2b40 'const TimerSet::heap_element &'
|       `-QualType 0x558133ec28e1 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x558133ec28e0 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x558133be9a40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558133be99e8 'T'
|           `-RecordType 0x558133eb7c70 'TimerSet::heap_element'
|             `-CXXRecord 0x558133eb7be0 'heap_element'
|-TypedefDecl 0x558133ec2d18 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x558133ec1cc0 'const TimerSet::heap_element &'
|   `-QualType 0x558133eb8d11 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558133eb8d10 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-RecordType 0x558133eb7c70 'TimerSet::heap_element'
|         `-CXXRecord 0x558133eb7be0 'heap_element'
|-TypedefDecl 0x558133ec2d70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558133918580 'int'
|-TypedefDecl 0x558133ec2dd8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x558133ec1d50 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x558133eb8d10 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558133c17008 'T'
|     `-RecordType 0x558133eb7c70 'TimerSet::heap_element'
|       `-CXXRecord 0x558133eb7be0 'heap_element'
|-TypedefDecl 0x558133ec2e40 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x558133ec1e10 'const TimerSet::heap_element *'
|   `-QualType 0x558133eb8d11 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558133eb8d10 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-RecordType 0x558133eb7c70 'TimerSet::heap_element'
|         `-CXXRecord 0x558133eb7be0 'heap_element'
|-EnumDecl 0x558133ec2e98 <line:134:5> col:5
| `-EnumConstantDecl 0x558133ec2f90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558133ec2f70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558133c186e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558133c186c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558133c186a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x558133ec3018 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558133ec32a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558133ec30d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558133ec3170 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x558133ec3568 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x558133ec3450 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x558133ec3828 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x558133ec3710 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x558133ec3b70 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x558133ec3a50 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x558133ec3e80 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x558133ec3d60 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x558133ec4170 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558133ec3fb8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558133ec4030 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558133ec42c8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x558133ec43a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133ec4400 <col:30> Inherited
|-CXXMethodDecl 0x558133ec4448 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x558133ec44f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133ec4550 <col:30> Inherited
|-CXXMethodDecl 0x558133ec4618 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558133ec46c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133ec4720 <col:30> Inherited
|-CXXMethodDecl 0x558133ec4768 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558133ec4818 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133ec4870 <col:30> Inherited
|-CXXMethodDecl 0x558133ec48b8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558133ec4968 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133ec49c0 <col:30> Inherited
|-CXXMethodDecl 0x558133ec4a08 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558133ec4ab8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133ec4b10 <col:30> Inherited
|-CXXMethodDecl 0x558133ec4b38 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558133ec4be8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558133ec4c98 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x558133ec4e58 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558133ec4d48 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558133ec4dc0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558133ec4fa8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558133ec4f18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133ec5158 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x558133ec5060 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558133ec5210 <col:20>
| `-OptimizeNoneAttr 0x558133ec5268 <col:30>
|-CXXMethodDecl 0x558133ec5388 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x558133ec5290 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558133ec5440 <col:20>
| `-OptimizeNoneAttr 0x558133ec5498 <col:30>
|-CXXMethodDecl 0x558133ec5550 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x558133ec54c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133ec5698 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558133ec5608 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133ec57c8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x558133ec58f8 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x558133ec59c8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x558133ec5a98 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x558133ec5bd8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x558133ec5b48 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133ec5d20 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558133ec5c90 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133ec5e68 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x558133ec5dd8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558133ec5f20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558133ec6020 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558133ec5f90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558133ec60d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558133ec6198 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x558133ec6298 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x558133ec6448 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x558133ec6358 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x558133ec6c38 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558133ec6500 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x558133ec6b98 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x558133ec6a98 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x558133ec6d18 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558133ec6e68 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x558133ec6dd8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558133ec6f20 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558133ec7168 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558133ec6fe0 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x558133ec7058 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558133ec73c0 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x558133ec7238 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x558133ec7618 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x558133ec7488 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x558133ec7500 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x558133ec76d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558133ec7938 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x558133ec7840 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x558133ec7a08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558133ec7a08

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558133ec8f30 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x558133ec9108 prev 0x558133ec8f30 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558133ec9198 <col:46, col:52> col:46 public
|-TypedefDecl 0x558133ec91c0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558133918580 'int'
|-TypedefDecl 0x558133ecad90 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x558133ecad40 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x558133ec9670 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x558133ec9570 'type'
|     `-TemplateSpecializationType 0x558133ec9500 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558133ec93e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x558133ec93c0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558133ec93a0 <col:24> 'unsigned long' 8
|       `-RecordType 0x558133ec94e0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x558133ec9400 'char_array'
|-TypedefDecl 0x558133ecae48 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x558133ecae10 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x558133ecadf0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x558133ecad90 'type'
|     `-ElaboratedType 0x558133ecad40 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x558133ec9670 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x558133ec9570 'type'
|         `-TemplateSpecializationType 0x558133ec9500 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558133ec93e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x558133ec93c0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558133ec93a0 <col:24> 'unsigned long' 8
|           `-RecordType 0x558133ec94e0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x558133ec9400 'char_array'
|-CXXMethodDecl 0x558133ecafc8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x558133ecaed8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x558133ecb0b8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558133ecb198 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558133ecb198
|-CXXMethodDecl 0x558133ecb468 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x558133ecb370 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x558133ecb6a8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558133ecb520 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558133ecb598 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558133ecb878 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558133ecb768 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558133ecb7e0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558133ecb9d8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x558133ecbaa8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x558133ecbcf8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558133ecbb68 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x558133ecbbe0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558133ecbf58 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x558133ecbdc8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x558133ecbe40 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558133ecc118 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x558133ecc028 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558133ecc2d8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x558133ecc1e0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558133ecc390 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558133ecc440 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558133ecc678 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558133ecc4f0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558133ecc568 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558133ecc918 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x558133ecc820 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x558133ecc9e0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x558133ecca30 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558133ecca80 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558133ec7b50 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x558133ec7d58 prev 0x558133ec7b50 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558133ec8ea0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x558133ec8e50 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x558133ec8e30 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x558133ec8ce0 'type'
|     `-SubstTemplateTypeParmType 0x558133ec8b00 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x558133bdf370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133bdf318 'T'
|       `-RecordType 0x558133ec8650 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x558133ec8568 'sized_array_memory'
|-FieldDecl 0x558133eccad0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x558133eccb20 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558133eccb58 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x558133ec7df0 'Timer *' sugar
|   |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558133c17008 'T'
|   `-PointerType 0x558133e7bbf0 'Timer *'
|     `-RecordType 0x558133e7ad40 'Timer'
|       `-CXXRecord 0x558133dfe9d8 'Timer'
|-TypedefDecl 0x558133eccc18 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x558133eccbe0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x558133ec7df0 'Timer *' sugar
|     |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558133c17008 'T'
|     `-PointerType 0x558133e7bbf0 'Timer *'
|       `-RecordType 0x558133e7ad40 'Timer'
|         `-CXXRecord 0x558133dfe9d8 'Timer'
|-TypedefDecl 0x558133ecccd8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x558133eccca0 'Timer *const &'
|   `-QualType 0x558133ec7df1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558133ec7df0 'Timer *' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-PointerType 0x558133e7bbf0 'Timer *'
|         `-RecordType 0x558133e7ad40 'Timer'
|           `-CXXRecord 0x558133dfe9d8 'Timer'
|-TypedefDecl 0x558133eccd98 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x558133eccd60 'Timer **'
|   `-SubstTemplateTypeParmType 0x558133ec7df0 'Timer *' sugar
|     |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558133c17008 'T'
|     `-PointerType 0x558133e7bbf0 'Timer *'
|       `-RecordType 0x558133e7ad40 'Timer'
|         `-CXXRecord 0x558133dfe9d8 'Timer'
|-TypedefDecl 0x558133ecce58 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x558133ecce20 'Timer *const *'
|   `-QualType 0x558133ec7df1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558133ec7df0 'Timer *' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-PointerType 0x558133e7bbf0 'Timer *'
|         `-RecordType 0x558133e7ad40 'Timer'
|           `-CXXRecord 0x558133dfe9d8 'Timer'
|-TypedefDecl 0x558133ecda30 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x558133ecd9e0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x558133ecd9c0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x558133ecd950 'type'
|     `-SubstTemplateTypeParmType 0x558133ecd710 'Timer *' sugar
|       |-TemplateTypeParmType 0x558133bea170 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133bea120 'T'
|       `-PointerType 0x558133e7bbf0 'Timer *'
|         `-RecordType 0x558133e7ad40 'Timer'
|           `-CXXRecord 0x558133dfe9d8 'Timer'
|-TypedefDecl 0x558133ecda98 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x558133eccca0 'Timer *const &'
|   `-QualType 0x558133ec7df1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558133ec7df0 'Timer *' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-PointerType 0x558133e7bbf0 'Timer *'
|         `-RecordType 0x558133e7ad40 'Timer'
|           `-CXXRecord 0x558133dfe9d8 'Timer'
|-TypedefDecl 0x558133ecdaf0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558133918580 'int'
|-TypedefDecl 0x558133ecdb58 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x558133eccd60 'Timer **'
|   `-SubstTemplateTypeParmType 0x558133ec7df0 'Timer *' sugar
|     |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558133c17008 'T'
|     `-PointerType 0x558133e7bbf0 'Timer *'
|       `-RecordType 0x558133e7ad40 'Timer'
|         `-CXXRecord 0x558133dfe9d8 'Timer'
|-TypedefDecl 0x558133ecdbc0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x558133ecce20 'Timer *const *'
|   `-QualType 0x558133ec7df1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558133ec7df0 'Timer *' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-PointerType 0x558133e7bbf0 'Timer *'
|         `-RecordType 0x558133e7ad40 'Timer'
|           `-CXXRecord 0x558133dfe9d8 'Timer'
|-EnumDecl 0x558133ecdc18 <line:134:5> col:5
| `-EnumConstantDecl 0x558133ecdd10 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558133ecdcf0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558133c186e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558133c186c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558133c186a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x558133ecdd98 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558133ece028 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558133ecde50 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558133ecdef0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x558133ece2e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x558133ece1d0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x558133ece5a8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x558133ece490 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x558133ece8f0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x558133ece7d0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x558133ecec00 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x558133eceae0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x558133eceef0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558133eced38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558133ecedb0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558133ecf048 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x558133ecf128 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133ecf180 <col:30> Inherited
|-CXXMethodDecl 0x558133ecf1c8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x558133ecf278 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133ecf2d0 <col:30> Inherited
|-CXXMethodDecl 0x558133ed33e0 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558133ed3490 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133ed34e8 <col:30> Inherited
|-CXXMethodDecl 0x558133ed3530 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558133ed35e0 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133ed3638 <col:30> Inherited
|-CXXMethodDecl 0x558133ed3680 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558133ed3730 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133ed3788 <col:30> Inherited
|-CXXMethodDecl 0x558133ed37d0 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558133ed3880 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133ed38d8 <col:30> Inherited
|-CXXMethodDecl 0x558133ed3900 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558133ed39b0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558133ed3a60 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558133ed3c20 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558133ed3b10 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558133ed3b88 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558133ed3d70 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558133ed3ce0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133ed3f18 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x558133ed3e28 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558133ed3fd0 <col:20>
| `-OptimizeNoneAttr 0x558133ed4028 <col:30>
|-CXXMethodDecl 0x558133ed4148 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x558133ed4050 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558133ed4200 <col:20>
| `-OptimizeNoneAttr 0x558133ed4258 <col:30>
|-CXXMethodDecl 0x558133ed4310 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x558133ed4280 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133ed4458 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558133ed43c8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133ed4588 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x558133ed46b8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x558133ed4788 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x558133ed4858 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x558133ed4998 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x558133ed4908 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133ed4ae0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558133ed4a50 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133ed4c28 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x558133ed4b98 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558133ed4ce0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558133ed4de0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558133ed4d50 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558133ed4e98 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558133ed4f58 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x558133ed5058 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x558133ed51d8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x558133ed5118 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x558133ed5998 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558133ed5290 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x558133ed58f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x558133ed57f8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x558133ed5a78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558133ed5bc8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x558133ed5b38 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558133ed5c80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558133ed5ec8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558133ed5d40 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x558133ed5db8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558133ed6088 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x558133ed5f98 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x558133ed62d8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x558133ed6150 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x558133ed61c8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x558133ed6398 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558133ed65f8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x558133ed6500 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x558133ed66c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558133ed66c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e952a0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558133e953b8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x558133e95448 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x558133e954d0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x558133e955c0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x558133e956c0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x558133e95780 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x558133e95840 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x558133e95968 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x558133e95968
| `-ParmVarDecl 0x558133e95a78 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x558133ed7478 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x558133ed7478
  `-ParmVarDecl 0x558133ed7588 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133eb6d60 prev 0x558133e02b88 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x558133eb6e58 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x558133eb6ee8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x558133eb6f70 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x558133eb7068 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x558133ed78f0 <col:43, col:67>
|   `-ReturnStmt 0x558133ed78e0 <col:45, col:52>
|     `-CXXConstructExpr 0x558133ed78b0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x558133ed7880 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x558133eb8850
|         `-CXXThisExpr 0x558133ed7870 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x558133eb7128 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x558133eb7330 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x558133eb71d8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x558133eb7250 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x558133eb7428 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x558133eb74f0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x558133ed7970 <col:39, col:67>
|   `-ReturnStmt 0x558133ed7960 <col:41, col:48>
|     `-ImplicitCastExpr 0x558133ed7948 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558133ed7918 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x558133eb8938
|         `-CXXThisExpr 0x558133ed7908 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x558133eb75b8 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x558133ed79f0 <col:35, col:59>
|   `-ReturnStmt 0x558133ed79e0 <col:37, col:44>
|     `-ImplicitCastExpr 0x558133ed79c8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558133ed7998 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x558133eb89a0
|         `-CXXThisExpr 0x558133ed7988 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x558133eb7700 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x558133eb7670 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x558133eb7848 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x558133eb77b8 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x558133eb7a48 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x558133eb7900 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x558133eb7978 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x558133eb7b18 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x558133eb7bb8 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x558133eb7be0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558133eb7cf8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x558133eb7d98 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x558133eb7df8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x558133eb7f28 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x558133eb7e58 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x558133eb7d98 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x558133ed7ac8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x558133ed7a70 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x558133ed7a40 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x558133e00018
|   |       `-ImplicitCastExpr 0x558133ed7a90 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x558133ed7a28 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x558133ed7a08 <col:17> 'Timer *' lvalue ParmVar 0x558133eb7e58 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x558133eb7df8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x558133ed7b60 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558133ed7b20 <col:41> 'Timer *' lvalue ParmVar 0x558133eb7e58 't_' 'Timer *'
|   `-CompoundStmt 0x558133ed7bb0 <col:45, line:44:2>
|-CXXRecordDecl 0x558133eb7ff0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558133eb8108 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x558133eb8358 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x558133eb81d8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x558133eb8250 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x558133ed7ce0 <col:71, line:49:2>
|     `-ReturnStmt 0x558133ed7cd0 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x558133ed7c98 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x558133ed7c80 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558133ed7c60 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x558133e38f58 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x558133ed7be0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x558133eb7d98
|         | `-DeclRefExpr 0x558133ed7bc0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x558133eb81d8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x558133ed7c30 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x558133eb7d98
|           `-DeclRefExpr 0x558133ed7c10 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x558133eb8250 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x558133eb8420 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558133eb8538 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x558133eb8758 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x558133eb85d8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x558133eb8650 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x558133ed7ee8 <col:63, line:54:2>
|     `-BinaryOperator 0x558133ed7ec8 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x558133ed7d78 <col:6, col:12> 'int' lvalue ->_schedpos1 0x558133e02028
|       | `-ImplicitCastExpr 0x558133ed7d60 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x558133ed7d30 <col:6, col:9> 'Timer *' lvalue ->t 0x558133eb7df8
|       |     `-ImplicitCastExpr 0x558133ed7d18 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x558133ed7cf8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x558133eb8650 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x558133ed7eb0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x558133ed7e90 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x558133ed7e38 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x558133ed7e18 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x558133ed7de8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x558133ed7da8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x558133eb8650 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x558133ed7e00 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x558133ed7dc8 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x558133eb85d8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x558133ed7e78 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x558133ed7e58 <col:39> 'int' 1
|-FieldDecl 0x558133eb8850 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x558133eb88c0 <col:44, col:53> aligned
|   `-ConstantExpr 0x558133eb88a0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x558133eb8820 <col:52> 'int' 8
|-FieldDecl 0x558133eb8938 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x558133eb89a0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x558133eb8a08 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x558133ec7af0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x558133ed67b0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x558133ed6810 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x558133ed6870 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x558133ed68d0 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133ed69c0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x558133ed6930 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x558133ed6a88 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x558133ed8340 <col:29, line:81:5>
|   `-IfStmt 0x558133ed8318 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x558133ed7fd0 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x558133ed7f70 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x558133ed7f40 <col:6, col:18> '<bound member function type>' .size 0x558133ec4b38
|     |     `-ImplicitCastExpr 0x558133ed7fb8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x558133ed7f10 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x558133ec7af0
|     |         `-CXXThisExpr 0x558133ed7f00 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x558133ed81c0 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x558133ed81a8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x558133ed8188 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x558133b229b8 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x558133ed7ff8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x558133eb8850
|     | | `-CXXThisExpr 0x558133ed7fe8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x558133ed8170 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x558133ed8140 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x558133eb7d98
|     |     `-CXXMemberCallExpr 0x558133ed8118 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x558133ed80e8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x558133ec5bd8
|     |       | `-MemberExpr 0x558133ed8038 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x558133ec7af0
|     |       |   `-CXXThisExpr 0x558133ed8028 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x558133ed80c8 <col:47> 'int' 0
|     `-ExprWithCleanups 0x558133ed8300 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x558133ed82c8 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x558133ed82b0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558133ed8290 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x558133b22e68 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x558133ed8208 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x558133eb8850
|         | `-CXXThisExpr 0x558133ed81f8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x558133ed8278 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558133ed8248 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x558133ed6bc8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x558133ed6b38 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x558133ed6c90 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x558133ed6d50 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x558133ed6e10 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x558133ed6f00 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x558133ed6f68 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x558133ed6f68
| `-ParmVarDecl 0x558133ed7078 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x558133ed7118 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x558133ed7118
| `-ParmVarDecl 0x558133ed7228 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x558133ed72c8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x558133ed72c8
| `-ParmVarDecl 0x558133ed73d8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x558133ed75f8 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x558133ed75f8
| `-ParmVarDecl 0x558133ed7708 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x558133ed7790 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x558133ed7790

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558133f0e1d8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x558133f0e3e8 prev 0x558133f0e1d8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558133f0f4c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x558133f0f470 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x558133f0f450 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x558133f0f300 'type'
|     `-SubstTemplateTypeParmType 0x558133ec8b00 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x558133bdf370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133bdf318 'T'
|       `-RecordType 0x558133ec8650 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x558133ec8568 'sized_array_memory'
|-FieldDecl 0x558133f0f5c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x558133f0f610 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558133f0f648 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x558133f0e480 'pollfd' sugar
|   |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558133c17008 'T'
|   `-RecordType 0x558133f02250 'pollfd'
|     `-CXXRecord 0x558133f021c0 'pollfd'
|-TypedefDecl 0x558133f0f708 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x558133f0f6d0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x558133f0e480 'pollfd' sugar
|     |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558133c17008 'T'
|     `-RecordType 0x558133f02250 'pollfd'
|       `-CXXRecord 0x558133f021c0 'pollfd'
|-TypedefDecl 0x558133f0f7c8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x558133f0f790 'const pollfd &'
|   `-QualType 0x558133f0e481 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558133f0e480 'pollfd' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-RecordType 0x558133f02250 'pollfd'
|         `-CXXRecord 0x558133f021c0 'pollfd'
|-TypedefDecl 0x558133f0f858 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x558133f0f820 'pollfd *'
|   `-SubstTemplateTypeParmType 0x558133f0e480 'pollfd' sugar
|     |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558133c17008 'T'
|     `-RecordType 0x558133f02250 'pollfd'
|       `-CXXRecord 0x558133f021c0 'pollfd'
|-TypedefDecl 0x558133f0f918 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x558133f0f8e0 'const pollfd *'
|   `-QualType 0x558133f0e481 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558133f0e480 'pollfd' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-RecordType 0x558133f02250 'pollfd'
|         `-CXXRecord 0x558133f021c0 'pollfd'
|-TypedefDecl 0x558133f104f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x558133f104a0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x558133f10480 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x558133f10410 'type'
|     `-SubstTemplateTypeParmType 0x558133f101d0 'pollfd' sugar
|       |-TemplateTypeParmType 0x558133bea170 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133bea120 'T'
|       `-RecordType 0x558133f02250 'pollfd'
|         `-CXXRecord 0x558133f021c0 'pollfd'
|-TypedefDecl 0x558133f10558 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x558133f0f790 'const pollfd &'
|   `-QualType 0x558133f0e481 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558133f0e480 'pollfd' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-RecordType 0x558133f02250 'pollfd'
|         `-CXXRecord 0x558133f021c0 'pollfd'
|-TypedefDecl 0x558133f105b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558133918580 'int'
|-TypedefDecl 0x558133f10618 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x558133f0f820 'pollfd *'
|   `-SubstTemplateTypeParmType 0x558133f0e480 'pollfd' sugar
|     |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558133c17008 'T'
|     `-RecordType 0x558133f02250 'pollfd'
|       `-CXXRecord 0x558133f021c0 'pollfd'
|-TypedefDecl 0x558133f10680 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x558133f0f8e0 'const pollfd *'
|   `-QualType 0x558133f0e481 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558133f0e480 'pollfd' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-RecordType 0x558133f02250 'pollfd'
|         `-CXXRecord 0x558133f021c0 'pollfd'
|-EnumDecl 0x558133f106d8 <line:134:5> col:5
| `-EnumConstantDecl 0x558133f107d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558133f107b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558133c186e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558133c186c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558133c186a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x558133f10858 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558133f10ae8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558133f10910 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558133f109b0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x558133f10da8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x558133f10c90 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x558133f11068 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x558133f10f50 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x558133f113b0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x558133f11290 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x558133f116c0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x558133f115a0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x558133f119b0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558133f117f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558133f11870 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558133f11b08 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x558133f11be8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133f11c40 <col:30> Inherited
|-CXXMethodDecl 0x558133f11c88 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x558133f11d38 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133f11d90 <col:30> Inherited
|-CXXMethodDecl 0x558133f11e58 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558133f11f08 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133f11f60 <col:30> Inherited
|-CXXMethodDecl 0x558133f11fa8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558133f12058 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133f120b0 <col:30> Inherited
|-CXXMethodDecl 0x558133f120f8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558133f121a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133f12200 <col:30> Inherited
|-CXXMethodDecl 0x558133f12248 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558133f122f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133f12350 <col:30> Inherited
|-CXXMethodDecl 0x558133f12378 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558133f12428 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558133f124d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558133f12698 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558133f12588 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558133f12600 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558133f127e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558133f12758 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133f12998 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x558133f128a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558133f12a50 <col:20>
| `-OptimizeNoneAttr 0x558133f12aa8 <col:30>
|-CXXMethodDecl 0x558133f12bc8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x558133f12ad0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558133f12c80 <col:20>
| `-OptimizeNoneAttr 0x558133f12cd8 <col:30>
|-CXXMethodDecl 0x558133f12d90 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x558133f12d00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133f12ed8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558133f12e48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133f13008 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x558133f13138 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x558133f13208 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x558133f132d8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x558133f13418 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x558133f13388 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133f13560 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558133f134d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133f136a8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x558133f13618 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558133f13760 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558133f13860 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558133f137d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558133f13918 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558133f139d8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x558133f13ad8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x558133f13c88 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x558133f13b98 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x558133f14448 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558133f13d40 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x558133f143a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x558133f142a8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x558133f14528 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558133f14678 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x558133f145e8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558133f14730 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558133f14978 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558133f147f0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x558133f14868 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558133f14b38 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x558133f14a48 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x558133f14d88 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x558133f14c00 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x558133f14c78 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x558133f14e48 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558133f150c8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x558133f14fb0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x558133f15198 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558133f15198

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558133f16780 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x558133f16958 prev 0x558133f16780 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558133f169e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x558133f16a10 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558133918580 'int'
|-TypedefDecl 0x558133f185e0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x558133f18590 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x558133f16ec0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x558133f16dc0 'type'
|     `-TemplateSpecializationType 0x558133f16d50 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558133f16c30 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x558133f16c10 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558133f16bf0 <col:24> 'unsigned long' 24
|       `-RecordType 0x558133f16d30 'char_array<24>'
|         `-ClassTemplateSpecialization 0x558133f16c50 'char_array'
|-TypedefDecl 0x558133f18698 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x558133f18660 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x558133f18640 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x558133f185e0 'type'
|     `-ElaboratedType 0x558133f18590 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x558133f16ec0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x558133f16dc0 'type'
|         `-TemplateSpecializationType 0x558133f16d50 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558133f16c30 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x558133f16c10 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558133f16bf0 <col:24> 'unsigned long' 24
|           `-RecordType 0x558133f16d30 'char_array<24>'
|             `-ClassTemplateSpecialization 0x558133f16c50 'char_array'
|-CXXMethodDecl 0x558133f18818 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x558133f18728 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x558133f18908 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558133f189e8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558133f189e8
|-CXXMethodDecl 0x558133f18cb8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x558133f18bc0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x558133f18ef8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558133f18d70 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558133f18de8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558133f190c8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558133f18fb8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558133f19030 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558133f19228 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x558133f192f8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x558133f19548 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558133f193b8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x558133f19430 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558133f197a8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x558133f19618 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x558133f19690 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558133f19968 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x558133f19878 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558133f19b28 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x558133f19a30 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558133f19be0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558133f19c90 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558133f19ec8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558133f19d40 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558133f19db8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558133f1a168 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x558133f1a070 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x558133f1a230 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x558133f1a280 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558133f1a2d0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558133f152e0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x558133f154e8 prev 0x558133f152e0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558133f166f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x558133f166a0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x558133f16680 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x558133f16530 'type'
|     `-SubstTemplateTypeParmType 0x558133f16350 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x558133bdf370 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133bdf318 'T'
|       `-RecordType 0x558133f15ea0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x558133f15dc0 'sized_array_memory'
|-FieldDecl 0x558133f1a320 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x558133f1a370 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558133f1a3a8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x558133f15580 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558133c17008 'T'
|   `-RecordType 0x558133f0dd40 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x558133f0dcb0 'SelectorInfo'
|-TypedefDecl 0x558133f1a468 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x558133f1a430 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x558133f15580 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558133c17008 'T'
|     `-RecordType 0x558133f0dd40 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x558133f0dcb0 'SelectorInfo'
|-TypedefDecl 0x558133f1a528 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x558133f1a4f0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x558133f15581 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558133f15580 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-RecordType 0x558133f0dd40 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558133f0dcb0 'SelectorInfo'
|-TypedefDecl 0x558133f1a5b8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x558133f1a580 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x558133f15580 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558133c17008 'T'
|     `-RecordType 0x558133f0dd40 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x558133f0dcb0 'SelectorInfo'
|-TypedefDecl 0x558133f1a678 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x558133f1a640 'const SelectSet::SelectorInfo *'
|   `-QualType 0x558133f15581 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558133f15580 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-RecordType 0x558133f0dd40 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558133f0dcb0 'SelectorInfo'
|-TypedefDecl 0x558133f1b2d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x558133f1b280 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x558133f1b260 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x558133f1b198 'type'
|     `-LValueReferenceType 0x558133f1b160 'const SelectSet::SelectorInfo &'
|       `-QualType 0x558133f1af01 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x558133f1af00 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x558133be9a40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558133be99e8 'T'
|           `-RecordType 0x558133f0dd40 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x558133f0dcb0 'SelectorInfo'
|-TypedefDecl 0x558133f1b338 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x558133f1a4f0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x558133f15581 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558133f15580 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-RecordType 0x558133f0dd40 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558133f0dcb0 'SelectorInfo'
|-TypedefDecl 0x558133f1b390 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558133918580 'int'
|-TypedefDecl 0x558133f1b3f8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x558133f1a580 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x558133f15580 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558133c17008 'T'
|     `-RecordType 0x558133f0dd40 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x558133f0dcb0 'SelectorInfo'
|-TypedefDecl 0x558133f1b460 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x558133f1a640 'const SelectSet::SelectorInfo *'
|   `-QualType 0x558133f15581 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558133f15580 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558133c17060 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558133c17008 'T'
|       `-RecordType 0x558133f0dd40 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558133f0dcb0 'SelectorInfo'
|-EnumDecl 0x558133f1b4b8 <line:134:5> col:5
| `-EnumConstantDecl 0x558133f1b5b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558133f1b590 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558133c186e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558133c186c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558133c186a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x558133f1b638 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558133f1b8c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558133f1b6f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558133f1b790 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x558133f1bb88 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x558133f1ba70 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x558133f1be48 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x558133f1bd30 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x558133f1c190 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x558133f1c070 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x558133f1c4a0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x558133f1c380 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x558133f1c790 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558133f1c5d8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558133f1c650 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558133f1c8e8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x558133f1c9c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133f1ca20 <col:30> Inherited
|-CXXMethodDecl 0x558133f1ca68 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x558133f1cb18 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133f1cb70 <col:30> Inherited
|-CXXMethodDecl 0x558133f1cc38 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558133f1cce8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133f1cd40 <col:30> Inherited
|-CXXMethodDecl 0x558133f1cd88 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558133f1ce38 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133f1ce90 <col:30> Inherited
|-CXXMethodDecl 0x558133f1ced8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558133f1cf88 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133f1cfe0 <col:30> Inherited
|-CXXMethodDecl 0x558133f1d080 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558133f1d130 <col:20> Inherited
| `-OptimizeNoneAttr 0x558133f1d188 <col:30> Inherited
|-CXXMethodDecl 0x558133f1d1b0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558133f1d260 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558133f1d310 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558133f1d4d0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558133f1d3c0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558133f1d438 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558133f1d620 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558133f1d590 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133f1d7c8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x558133f1d6d8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558133f1d880 <col:20>
| `-OptimizeNoneAttr 0x558133f1d8d8 <col:30>
|-CXXMethodDecl 0x558133f1d9f8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x558133f1d900 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558133f1dab0 <col:20>
| `-OptimizeNoneAttr 0x558133f1db08 <col:30>
|-CXXMethodDecl 0x558133f1dbc0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x558133f1db30 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133f1dd08 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558133f1dc78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133f1de38 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x558133f1df68 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x558133f1e038 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x558133f1e108 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x558133f1e248 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x558133f1e1b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133f1e390 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558133f1e300 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558133f1e4d8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x558133f1e448 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558133f1e590 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558133f1e690 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558133f1e600 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558133f1e748 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558133f1e808 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x558133f1e908 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x558133f1eab8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x558133f1e9c8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x558133f1f278 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558133f1eb70 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x558133f1f1d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x558133f1f0d8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x558133f1f358 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558133f1f4a8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x558133f1f418 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558133f1f560 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558133f1f7a8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558133f1f620 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x558133f1f698 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558133f1f968 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x558133f1f878 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x558133f1fbb8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x558133f1fa30 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x558133f1faa8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x558133f1fc78 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558133f1fed8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x558133f1fde0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x558133f1ffa8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558133f1ffa8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133f02e50 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558133f02f68 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x558133f02ff8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x558133f0d0c0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x558133f0d1b0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x558133f0d1b0
|-CXXMethodDecl 0x558133f0d2b0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x558133f0d550 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x558133f0d368 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x558133f0d3e0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x558133f0d460 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x558133f0d7c0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x558133f0d620 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x558133f0d698 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x558133f0d718 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x558133f0d918 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x558133f0d888 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x558133f0d9e0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x558133f21658 <col:34, line:50:5>
|   |-BinaryOperator 0x558133f21028 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x558133f20fe8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x558133f0e168
|   | | `-CXXThisExpr 0x558133f20fd8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x558133f21018 <col:23> 'bool' true
|   `-CallExpr 0x558133f21630 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x558133f21618 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x558133f21598 <col:2> 'void (long)' lvalue Function 0x558133f21498 'ignore_result' 'void (long)' (FunctionTemplate 0x558133bda318 'ignore_result')
|     `-CallExpr 0x558133f21240 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x558133f21228 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558133f211a8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x558133edb3f0 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x558133f21278 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x558133f21150 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x558133f21138 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x558133f210e8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x558133f0e108
|       |   |   `-CXXThisExpr 0x558133f210d8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x558133f21118 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x558133f212a8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x558133f21290 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x558133f21170 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x558133f212c0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x558133f21188 <col:41> 'int' 1
|-CXXMethodDecl 0x558133f0db20 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x558133f0da90 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x558133f0dbe8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x558133f0dc88 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x558133f0dcb0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558133f0ddc8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x558133f0de68 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x558133f0dec8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x558133f0df30 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x558133f0dfe0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x558133f0de68 'read' 'Element *'
|   | `-ImplicitCastExpr 0x558133f216b8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x558133f21678 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x558133f0dec8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x558133f21738 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x558133f216f8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x558133f0df30 'pollfd' 'int'
|   | `-UnaryOperator 0x558133f21798 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x558133f21778 <col:35> 'int' 1
|   `-CompoundStmt 0x558133f21810 <line:64:2, line:65:2>
|-FieldDecl 0x558133f0e108 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x558133f0e168 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x558133f15280 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x558133f20090 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x558133f202c8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x558133f200f8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x558133f20170 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x558133f201e8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x558133f204b0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x558133f20398 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x558133f20418 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x558133f206f8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x558133f20578 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x558133f205f8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x558133f20908 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x558133f207b8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x558133f20830 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x558133f20a58 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x558133f209c8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x558133f20b20 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x558133f20be0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x558133f20ca8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x558133f20ca8
| `-ParmVarDecl 0x558133f20db8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x558133f20e58 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x558133f20e58
  `-ParmVarDecl 0x558133f20f68 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e94208 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558133e94328 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x558133e943b8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x558133e94440 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x558133e94530 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x558133e94630 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x558133e946f0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x558133e947b0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x558133e94898 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x558133e949b8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x558133e949b8
| `-ParmVarDecl 0x558133e94ac8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x558133f26468 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x558133f26468
  `-ParmVarDecl 0x558133f26578 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133dfc748 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558133dfc868 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x558133dfc908 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x558133dfc968 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x558133f25a68 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558133f25a68
| `-ParmVarDecl 0x558133f25b78 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x558133f25c18 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558133f25c18
| `-ParmVarDecl 0x558133f25d28 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x558133f25d98 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x558133f25d98
|-CXXMethodDecl 0x558133f26618 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558133f26618
| `-ParmVarDecl 0x558133f26728 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x558133f26798 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558133f26798
| `-ParmVarDecl 0x558133f268a8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x558133f2cf18 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x558133f2cff0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e96100 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558133e96218 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x558133e962a8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x558133e96330 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x558133e963f0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x558133918580 'int'
|-CXXMethodDecl 0x558133e964b8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x558133e96558 <col:45> always_inline
|-CXXMethodDecl 0x558133e96688 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x558133e965c0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x558133e96730 <col:49> always_inline
|-CXXConstructorDecl 0x558133e96828 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x558133e96828
| `-ParmVarDecl 0x558133e96938 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x558133e969d8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x558133e969d8
| `-ParmVarDecl 0x558133e96ae8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x558133f25e80 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x558133f25e80
|-CXXMethodDecl 0x558133f26948 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x558133f26948
| `-ParmVarDecl 0x558133f26a58 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x558133f26ac8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x558133f26ac8
  `-ParmVarDecl 0x558133f26bd8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133f21c80 prev 0x558133f02dc0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x558133f21d78 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x558133f21e08 <col:22, col:28> col:22 public
|-EnumDecl 0x558133f21e30 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x558133f21f48 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x558133f21f28 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x558133f21f10 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x558133f21ef0 <col:32> 'int' 1
| `-EnumConstantDecl 0x558133f21ff0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x558133f21fd0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x558133f21fb8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x558133f21f98 <col:53> 'int' 1000
|-CXXMethodDecl 0x558133f22090 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x558133f22150 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x558133f22238 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x558133f26c98 <col:34, col:52>
|   `-ReturnStmt 0x558133f26c88 <col:36, col:43>
|     `-MemberExpr 0x558133f26c58 <col:43> 'TimerSet' lvalue ->_timers 0x558133f23f08
|       `-CXXThisExpr 0x558133f26c48 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x558133f22328 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x558133f26d00 <col:46, col:64>
|   `-ReturnStmt 0x558133f26cf0 <col:48, col:55>
|     `-MemberExpr 0x558133f26cc0 <col:55> 'const TimerSet' lvalue ->_timers 0x558133f23f08
|       `-CXXThisExpr 0x558133f26cb0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x558133f22418 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x558133f26d68 <col:36, col:55>
|   `-ReturnStmt 0x558133f26d58 <col:38, col:45>
|     `-MemberExpr 0x558133f26d28 <col:45> 'SelectSet' lvalue ->_selects 0x558133f23f68
|       `-CXXThisExpr 0x558133f26d18 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x558133f22508 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x558133f26dd0 <col:48, col:67>
|   `-ReturnStmt 0x558133f26dc0 <col:50, col:57>
|     `-MemberExpr 0x558133f26d90 <col:57> 'const SelectSet' lvalue ->_selects 0x558133f23f68
|       `-CXXThisExpr 0x558133f26d80 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x558133f225c8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x558133f226b8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x558133f22828 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x558133f22768 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x558133f228f0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x558133f22d38 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x558133f229a0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x558133f22c20 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x558133f22e08 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x558133f22ec8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x558133f22f88 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x558133f230c8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x558133f23038 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x558133f23190 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x558133f23250 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x558133f23310 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x558133f233d0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x558133f23510 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x558133f23480 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x558133f235d8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x558133f23698 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x558133f23738 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x558133f23800 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558133f23850 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558133f238a0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558133f238f0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558133f23940 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558133f23990 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558133f239e0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558133f23a30 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558133f23a80 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558133f23ad0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x558133f23b20 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x558133f23c18 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x558133f23b88 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x558133f23d68 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x558133f23cd8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x558133f23e10 <line:104:3, col:10> col:3 private
|-FieldDecl 0x558133f23e48 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x558133f23ea8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x558133f23f08 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x558133f23f68 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x558133f23fe8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x558133f24058 <col:40, col:50> aligned
|   `-ConstantExpr 0x558133f24038 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x558133f23fb8 <col:48> 'int' 64
|-FieldDecl 0x558133f240c8 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x558133f24128 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x558133f24220 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x558133f24330 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x558133f24390 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x558133f24410 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x558133f24480 <col:36, col:46> aligned
|   `-ConstantExpr 0x558133f24460 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x558133f243e0 <col:44> 'int' 64
|-FieldDecl 0x558133f244f8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x558133f24558 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x558133f245a8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x558133f245e8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x558133f24650 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x558133f246a0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x558133f24848 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x558133f246d8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x558133f24758 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x558133f24948 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x558133f24948
|-CXXMethodDecl 0x558133f24a50 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x558133f24b18 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x558133f26ec8 <col:34, line:217:5>
|   `-ReturnStmt 0x558133f26eb8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x558133f26ea0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558133f26e70 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x558133e98c60
|         `-ImplicitCastExpr 0x558133f26e58 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x558133f26e28 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x558133e98bf8
|             `-MemberExpr 0x558133f26df8 <col:16> 'const TaskLink' lvalue ->_task_link 0x558133f23e48
|               `-CXXThisExpr 0x558133f26de8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x558133f24bd8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x558133f24c98 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x558133f275f0 <col:39, line:226:5>
|   |-DeclStmt 0x558133f27118 <line:223:9, col:68>
|   | `-VarDecl 0x558133f26ef0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x558133f270d0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x558133f270a0 <col:24, col:38> '<bound member function type>' .compare_swap 0x558133c3f950
|   |     | `-MemberExpr 0x558133f26f68 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x558133f240c8
|   |     |   `-CXXThisExpr 0x558133f26f58 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x558133f27058 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x558133f27040 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x558133f27018 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x558133f26ff8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x558133f27100 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x558133f27080 <col:66> 'int' 0
|   |-CStyleCastExpr 0x558133f27160 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x558133f27130 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x558133f26ef0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x558133f275d0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x558133f275a0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x558133f27278 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x558133f27248 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x558133f27230 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x558133f27188 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x558133f26ef0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x558133f27208 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x558133f271f0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x558133f271c8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x558133f271a8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x558133f272d8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x558133f272b8 <col:60> 'int' 0
|       `-CallExpr 0x558133f27500 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x558133f274e8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558133f274c8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x558133f27540 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x558133f273c8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x558133f27558 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x558133f273f8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x558133f27570 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x558133f27438 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x558133f27588 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x558133f274b0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x558133f27498 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x558133f27458 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x558133f24de0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x558133f24d50 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x558133f24ea8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x558133f24f68 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x558133f25090 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x558133f25150 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x558133f25210 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x558133f25300 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x558133f25360 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x558133f253f0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x558133f257b8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x558133f257b8
| `-ParmVarDecl 0x558133f258c8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x558133f25f88 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x558133f25f88
  `-ParmVarDecl 0x558133f26098 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e98f70 prev 0x558133e7ac00 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x558133e990a8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x558133e99138 <col:33, col:39> col:33 public
|-EnumDecl 0x558133e99160 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x558133e992a0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x558133e99280 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x558133e99260 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x558133e99220 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x558133e99240 <col:26> 'int' 16
| `-EnumConstantDecl 0x558133e99370 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x558133e99350 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x558133e99330 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x558133e992f0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x558133e99310 <col:47> 'int' 31
|-EnumDecl 0x558133e993c0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x558133e99500 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x558133e99620 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558133e994e0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x558133e994c0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x558133e99480 <col:26> 'int' 1
| |       `-IntegerLiteral 0x558133e994a0 <col:29> 'int' 15
| `-EnumConstantDecl 0x558133e995d0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x558133e99638 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e995b0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x558133e99590 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x558133e99550 <col:51> 'int' 1
|         `-IntegerLiteral 0x558133e99570 <col:54> 'int' 10
|-CXXConstructorDecl 0x558133e99808 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x558133e99660 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x558133e996e0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x558133e99998 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x558133e998d0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x558133e99a90 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x558133e99a90
|-CXXMethodDecl 0x558133e99c18 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x558133dfd8a8 <col:42, line:100:5>
|   `-ReturnStmt 0x558133dfd898 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x558133dfd880 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x558133dfd850 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x558133dfc5d0
|         `-CXXThisExpr 0x558133dfd840 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558133e99ce0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x558133dfd928 <col:36, line:105:5>
|   `-ReturnStmt 0x558133dfd918 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x558133dfd900 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x558133dfd8d0 <col:16> 'void *const' lvalue ->_thunk 0x558133dfc638
|         `-CXXThisExpr 0x558133dfd8c0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558133e99da0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x558133dfd9a8 <col:37, line:110:5>
|   `-ReturnStmt 0x558133dfd998 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x558133dfd980 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x558133dfd950 <col:16> 'Element *const' lvalue ->_owner 0x558133dfc6f8
|         `-CXXThisExpr 0x558133dfd940 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558133e99e60 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x558133e99f28 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x558133e99fe8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x558133e9a0a8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x558133dfda90 <col:35, line:137:5>
|   `-ReturnStmt 0x558133dfda80 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x558133dfda48 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x558133dfda18 <col:16, col:24> '<bound member function type>' ->router 0x558133e8d410
|         `-ImplicitCastExpr 0x558133dfda68 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x558133dfda00 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x558133dfd9d0 <col:16> 'Element *const' lvalue ->_owner 0x558133dfc6f8
|               `-CXXThisExpr 0x558133dfd9c0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558133e9a168 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x558133e9a368 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x558133e9a218 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x558133e9a290 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x558133e9a578 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x558133e9a428 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x558133e9a4a0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x558133e9a648 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x558133dfdba0 <col:35, line:181:5>
|   `-ReturnStmt 0x558133dfdb90 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x558133dfdb78 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x558133dfdb60 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x558133dfdb30 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x558133dfc208
|           `-MemberExpr 0x558133dfdae8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558133dfc328
|             `-MemberExpr 0x558133dfdab8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x558133dfc558
|               `-CXXThisExpr 0x558133dfdaa8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558133dfb250 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x558133dfdcb8 <col:30, line:192:5>
|   `-BinaryOperator 0x558133dfdc98 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x558133dfdc40 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558133dfc208
|     | `-MemberExpr 0x558133dfdbf8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558133dfc328
|     |   `-MemberExpr 0x558133dfdbc8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558133dfc558
|     |     `-CXXThisExpr 0x558133dfdbb8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x558133dfdc80 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x558133dfdc70 <col:32> 'bool' false
|-CXXMethodDecl 0x558133dfb310 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x558133dfe008 <col:30, line:206:5>
|   |-BinaryOperator 0x558133dfddb0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x558133dfdd58 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558133dfc208
|   | | `-MemberExpr 0x558133dfdd10 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558133dfc328
|   | |   `-MemberExpr 0x558133dfdce0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558133dfc558
|   | |     `-CXXThisExpr 0x558133dfdcd0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x558133dfdd98 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x558133dfdd88 <col:32> 'bool' true
|   |-CallExpr 0x558133dfde50 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x558133dfde38 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558133dfde18 <col:9> 'void ()' lvalue Function 0x558133e93dc0 'click_fence' 'void ()'
|   `-IfStmt 0x558133dfdff0 <line:204:9, line:205:32>
|     |-BinaryOperator 0x558133dfdf30 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x558133dfdf00 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x558133dfdeb0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x558133dfc968
|     | |   `-MemberExpr 0x558133dfde80 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x558133dfc9e0
|     | |     `-CXXThisExpr 0x558133dfde70 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x558133dfdf18 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x558133dfdee0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x558133dfdfb0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x558133dfdf60 <col:13> '<bound member function type>' ->complete_schedule 0x558133dfd3e0
|       | `-CXXThisExpr 0x558133dfdf50 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x558133dfdfd8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x558133dfdf90 <col:31> 'int' 0
|-CXXMethodDecl 0x558133dfb3d0 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x558133dfe130 <col:35, line:240:5>
|   `-BinaryOperator 0x558133dfe110 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x558133dfe0b8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558133dfc208
|     | `-MemberExpr 0x558133dfe070 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558133dfc328
|     |   `-MemberExpr 0x558133dfe040 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558133dfc558
|     |     `-CXXThisExpr 0x558133dfe030 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x558133dfe0f8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x558133dfe0e8 <col:32> 'bool' true
|-CXXMethodDecl 0x558133dfb490 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x558133dfe348 <col:37, line:253:5>
|   |-BinaryOperator 0x558133dfe228 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x558133dfe1d0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558133dfc208
|   | | `-MemberExpr 0x558133dfe188 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558133dfc328
|   | |   `-MemberExpr 0x558133dfe158 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558133dfc558
|   | |     `-CXXThisExpr 0x558133dfe148 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x558133dfe210 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x558133dfe200 <col:32> 'bool' false
|   `-BinaryOperator 0x558133dfe328 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x558133dfe2d0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x558133dfc268
|     | `-MemberExpr 0x558133dfe288 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558133dfc328
|     |   `-MemberExpr 0x558133dfe258 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558133dfc558
|     |     `-CXXThisExpr 0x558133dfe248 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x558133dfe310 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x558133dfe300 <col:41> 'bool' true
|-CXXMethodDecl 0x558133dfb550 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x558133dfe4c8 <col:37, line:264:5>
|   |-BinaryOperator 0x558133dfe448 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x558133dfe3f0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x558133dfc268
|   | | `-MemberExpr 0x558133dfe3a8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558133dfc328
|   | |   `-MemberExpr 0x558133dfe378 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558133dfc558
|   | |     `-CXXThisExpr 0x558133dfe368 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x558133dfe430 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x558133dfe420 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x558133dfe4a8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x558133dfe478 <col:9> '<bound member function type>' ->reschedule 0x558133dfb310
|       `-CXXThisExpr 0x558133dfe468 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x558133dfb698 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x558133dfb608 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x558133dfb768 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x558133dfb8b0 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x558133dfb820 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x558133dfba00 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x558133dfb970 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x558133dfbac8 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x558133dfbb88 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x558133dfbc28 <col:53> "" ""
|-CXXMethodDecl 0x558133dfbcc0 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x558133dfbd60 <col:47> "" ""
|-AccessSpecDecl 0x558133dfbdd0 <line:303:3, col:10> col:3 private
|-FieldDecl 0x558133dfbe10 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x558133dfbe78 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x558133dfbec8 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558133dfbfe8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x558133dfc078 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x558133dfc1a8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x558133dfc208 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x558133dfc268 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x558133f2c648 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x558133f2c720 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558133f2c720
| | |-CXXConstructorDecl 0x558133f2c9d8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x558133f2c9d8
| | | `-ParmVarDecl 0x558133f2cae8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x558133f2cb88 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x558133f2cb88
| |   `-ParmVarDecl 0x558133f2cc98 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x558133dfc328 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x558133dfc388 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x558133dfc328 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x558133dfc1a8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x558133dfc3e0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x558133dfc328 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x558133dfc208 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x558133dfc438 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x558133dfc328 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x558133dfc268 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x558133dfc490 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x558133f2c558 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558133f2ceb8 <col:11>
| |-CXXConstructorDecl 0x558133f2c828 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x558133f2c828
| | `-ParmVarDecl 0x558133f2c938 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x558133f2cd38 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x558133f2cd38
|   `-ParmVarDecl 0x558133f2ce48 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x558133dfc558 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x558133dfc5d0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x558133dfc638 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x558133dfc698 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x558133dfc6f8 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x558133dfc748 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558133dfc868 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x558133dfc908 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x558133dfc968 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x558133f25a68 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558133f25a68
| | `-ParmVarDecl 0x558133f25b78 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x558133f25c18 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558133f25c18
| | `-ParmVarDecl 0x558133f25d28 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x558133f25d98 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x558133f25d98
| |-CXXMethodDecl 0x558133f26618 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558133f26618
| | `-ParmVarDecl 0x558133f26728 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x558133f26798 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558133f26798
| | `-ParmVarDecl 0x558133f268a8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x558133f2cf18 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x558133f2cff0 <col:11>
|-FieldDecl 0x558133dfc9e0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x558133dfcb28 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x558133dfca68 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x558133dfccd8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x558133dfcbe8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x558133dfcda0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x558133dfce60 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x558133dfcf20 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x558133dfe5d8 <col:41, line:355:5>
|   `-ReturnStmt 0x558133dfe5c8 <line:354:9, col:38>
|     `-BinaryOperator 0x558133dfe5a8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x558133dfe578 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x558133dfe528 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x558133dfc968
|       |   `-MemberExpr 0x558133dfe4f8 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x558133dfc9e0
|       |     `-CXXThisExpr 0x558133dfe4e8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x558133dfe590 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x558133dfe558 <col:38> 'int' 0
|-CXXMethodDecl 0x558133dfcfe0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x558133dfd120 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x558133dfd090 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x558133dfd298 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x558133dfd1d8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x558133dfd3e0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x558133dfd350 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x558133dfd4a8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x558133dfd670 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x558133dfd558 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x558133dfd5d8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x558133dfd770 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x558133dfd800 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133e020d8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x558133e02208 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x558133e02cf8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133dfe9d8 prev 0x558133e7acb0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558133dfead0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x558133dfeb60 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x558133dfebc0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x558133dfec68 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x558133dfed88 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x558133dfef28 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x558133dfee68 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x558133dff178 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x558133dfefe8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x558133dff068 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x558133dff2d0 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x558133dff240 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x558133dff458 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x558133dff390 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x558133dff608 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x558133dff548 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x558133dff700 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x558133e02ed0 <col:21, line:58:5>
|   `-IfStmt 0x558133e02eb8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x558133e02e20 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x558133e02df0 <col:6> '<bound member function type>' ->scheduled 0x558133dfff58
|     |   `-ImplicitCastExpr 0x558133e02e40 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x558133e02de0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x558133e02e98 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x558133e02e68 <col:6> '<bound member function type>' ->unschedule 0x558133e01580
|         `-CXXThisExpr 0x558133e02e58 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x558133dff800 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x558133e03070 <col:26, line:65:5>
|   |-BinaryOperator 0x558133e02f90 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558133e02f28 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558133e02208
|   | | `-MemberExpr 0x558133e02ef8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558133e022c8
|   | |   `-CXXThisExpr 0x558133e02ee8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558133e02f78 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558133e02f58 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x558133e02728 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x558133e03050 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x558133e02fc0 <col:2> 'void *' lvalue ->_thunk 0x558133e02348
|     | `-CXXThisExpr 0x558133e02fb0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x558133e03028 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x558133e02ff0 <col:20> 'int' 1
|-CXXMethodDecl 0x558133dff940 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x558133dff8b0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x558133e031d0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x558133e030c0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x558133e03090 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x558133dff8b0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x558133e031b0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x558133e03180 <col:2> '<bound member function type>' ->assign 0x558133dff800
|       `-CXXThisExpr 0x558133e03170 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x558133dffb10 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x558133dff9f8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x558133dffa78 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x558133eb36b0 <col:58, line:79:5>
|   |-BinaryOperator 0x558133eb35f8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558133eb3590 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558133e02208
|   | | `-MemberExpr 0x558133e03200 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558133e022c8
|   | |   `-CXXThisExpr 0x558133e031f0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558133eb35e0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x558133eb35c0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x558133dff9f8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x558133eb3690 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x558133eb3628 <col:2> 'void *' lvalue ->_thunk 0x558133e02348
|     | `-CXXThisExpr 0x558133eb3618 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x558133eb3678 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x558133eb3658 <col:11> 'void *' lvalue ParmVar 0x558133dffa78 'user_data' 'void *'
|-CXXMethodDecl 0x558133dffc60 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x558133dffbd0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x558133eb3848 <col:35, line:87:5>
|   |-BinaryOperator 0x558133eb3778 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558133eb3710 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558133e02208
|   | | `-MemberExpr 0x558133eb36e0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558133e022c8
|   | |   `-CXXThisExpr 0x558133eb36d0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558133eb3760 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558133eb3740 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x558133e02900 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x558133eb3828 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x558133eb37a8 <col:2> 'void *' lvalue ->_thunk 0x558133e02348
|     | `-CXXThisExpr 0x558133eb3798 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x558133eb3810 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x558133eb37f8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x558133eb37d8 <col:11> 'Element *' lvalue ParmVar 0x558133dffbd0 'element' 'Element *'
|-CXXMethodDecl 0x558133dffda8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x558133dffd18 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x558133eb39e0 <col:29, line:94:5>
|   |-BinaryOperator 0x558133eb3910 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558133eb38a8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558133e02208
|   | | `-MemberExpr 0x558133eb3878 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558133e022c8
|   | |   `-CXXThisExpr 0x558133eb3868 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558133eb38f8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558133eb38d8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x558133e02ad8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x558133eb39c0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x558133eb3940 <col:2> 'void *' lvalue ->_thunk 0x558133e02348
|     | `-CXXThisExpr 0x558133eb3930 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x558133eb39a8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x558133eb3990 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x558133eb3970 <col:11> 'Task *' lvalue ParmVar 0x558133dffd18 'task' 'Task *'
|-CXXMethodDecl 0x558133dffe98 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x558133eb3ac0 <col:37, line:100:5>
|   `-ReturnStmt 0x558133eb3ab0 <line:99:2, col:19>
|     `-BinaryOperator 0x558133eb3a90 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x558133eb3a60 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x558133eb3a10 <col:9> 'Element *const' lvalue ->_owner 0x558133e023a8
|       |   `-CXXThisExpr 0x558133eb3a00 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x558133eb3a78 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x558133eb3a40 <col:19> 'int' 0
|-CXXMethodDecl 0x558133dfff58 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x558133eb3b80 <col:35, line:105:5>
|   `-ReturnStmt 0x558133eb3b70 <line:104:2, col:23>
|     `-BinaryOperator 0x558133eb3b50 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x558133eb3b38 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x558133eb3ae8 <col:9> 'const int' lvalue ->_schedpos1 0x558133e02028
|       |   `-CXXThisExpr 0x558133eb3ad8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x558133eb3b18 <col:23> 'int' 0
|-CXXMethodDecl 0x558133e00018 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x558133eb3be8 <col:51, line:118:5>
|   `-ReturnStmt 0x558133eb3bd8 <line:117:2, col:9>
|     `-MemberExpr 0x558133eb3ba8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x558133e02088
|       `-CXXThisExpr 0x558133eb3b98 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558133e000d8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x558133eb4140 <col:37, line:136:5>
|   `-IfStmt 0x558133eb4118 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x558133eb3ca8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x558133eb3c90 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x558133eb3c70 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x558133eb3c40 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x558133e0cd88
|     |       `-MemberExpr 0x558133eb3c10 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x558133e02088
|     |         `-CXXThisExpr 0x558133eb3c00 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x558133eb4088 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x558133eb4070 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x558133eb4040 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x558133eb4028 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x558133eb3ff0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x558133eb3fd8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x558133eb3fb8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558133e3b560 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x558133eb3f58 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x558133eb3f40 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x558133eb3e68 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x558133eb3e50 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x558133eb3e30 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558133e3b220 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x558133eb3dd0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x558133eb3cd0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x558133e02088
|     |         |     |   `-CXXThisExpr 0x558133eb3cc0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x558133eb3e18 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x558133eb3e00 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x558133eb3db0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x558133eb3d98 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x558133eb3d38 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x558133e2e880 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x558133eb3fa0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x558133eb3f88 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x558133eb3f20 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x558133eb3f08 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x558133eb3ed8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x558133c89dd0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x558133eb4108 <line:135:6, col:13>
|       `-CXXConstructExpr 0x558133eb40d8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x558133eb40a8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x558133e02088
|           `-CXXThisExpr 0x558133eb4098 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x558133e00198 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x558133eb4228 <col:35, line:141:5>
|   `-ReturnStmt 0x558133eb4218 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x558133eb41e0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x558133eb41b0 <col:9, col:17> '<bound member function type>' ->router 0x558133e8d410
|         `-ImplicitCastExpr 0x558133eb4200 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x558133eb4198 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x558133eb4168 <col:9> 'Element *const' lvalue ->_owner 0x558133e023a8
|               `-CXXThisExpr 0x558133eb4158 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558133e00258 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x558133eb42a8 <col:37, line:146:5>
|   `-ReturnStmt 0x558133eb4298 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x558133eb4280 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x558133eb4250 <col:9> 'Element *const' lvalue ->_owner 0x558133e023a8
|         `-CXXThisExpr 0x558133eb4240 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558133e00318 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x558133eb4328 <col:41, line:151:5>
|   `-ReturnStmt 0x558133eb4318 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x558133eb4300 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x558133eb42d0 <col:9> 'RouterThread *const' lvalue ->_thread 0x558133e02408
|         `-CXXThisExpr 0x558133eb42c0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558133e003e0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x558133e005a0 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x558133e00490 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x558133e00508 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558133e02ce8 <col:50> 'bool' false
|-CXXMethodDecl 0x558133e00728 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x558133e00660 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x558133e00870 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x558133e007e0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x558133e009b8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x558133e00928 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x558133e00b00 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558133e00a70 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x558133e00c48 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558133e00bb8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x558133e00d10 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x558133eb4490 <col:32, line:223:5>
|   `-ExprWithCleanups 0x558133eb4478 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x558133eb4420 <col:2, col:47> 'void'
|       |-MemberExpr 0x558133eb4350 <col:2> '<bound member function type>' ->schedule_at_steady 0x558133e00870
|       | `-CXXThisExpr 0x558133eb4340 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558133eb4460 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558133eb4448 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x558133eb4400 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x558133eb43e8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x558133eb43b8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x558133c89dd0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x558133e00e50 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x558133e00dc0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x558133e00f98 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558133e00f08 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133eb4618 <col:56, line:241:5>
|   `-ExprWithCleanups 0x558133eb4600 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x558133eb45a8 <col:2, col:40> 'void'
|       |-MemberExpr 0x558133eb44b8 <col:2> '<bound member function type>' ->schedule_after 0x558133e00e50
|       | `-CXXThisExpr 0x558133eb44a8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558133eb45e8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558133eb45d0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x558133eb4568 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x558133eb4538 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x558133eb44f8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e00f08 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x558133eb4550 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x558133eb4518 <col:38> 'int' 0
|-CXXMethodDecl 0x558133e010e0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558133e01050 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133eb4888 <col:58, line:249:5>
|   `-ExprWithCleanups 0x558133eb4870 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x558133eb4818 <col:2, col:49> 'void'
|       |-MemberExpr 0x558133eb4640 <col:2> '<bound member function type>' ->schedule_after 0x558133e00e50
|       | `-CXXThisExpr 0x558133eb4630 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558133eb4858 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558133eb4840 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x558133eb47c0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x558133eb47a8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558133eb4718 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x558133e0eb78 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x558133eb4800 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x558133eb47e8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558133eb46f8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e01050 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e01228 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x558133e01198 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x558133eb4a68 <col:58, line:261:5>
|   `-ExprWithCleanups 0x558133eb4a50 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x558133eb49f8 <col:2, col:38> 'void'
|       |-MemberExpr 0x558133eb48b0 <col:2> '<bound member function type>' ->schedule_at_steady 0x558133e00870
|       | `-CXXThisExpr 0x558133eb48a0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558133eb4a38 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558133eb4a20 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x558133eb49c0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x558133eb49a8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558133eb4988 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558133e3b220 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x558133eb4958 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x558133eb4940 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x558133eb48f0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x558133e02088
|             |     `-CXXThisExpr 0x558133eb48e0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x558133eb4920 <col:33> 'const Timestamp' lvalue ParmVar 0x558133e01198 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x558133e01370 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558133e012e0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133eb4d40 <col:58, line:270:5>
|   `-ExprWithCleanups 0x558133eb4d28 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x558133eb4cd0 <col:2, col:79> 'void'
|       |-MemberExpr 0x558133eb4a90 <col:2> '<bound member function type>' ->schedule_at_steady 0x558133e00870
|       | `-CXXThisExpr 0x558133eb4a80 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558133eb4d10 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558133eb4cf8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x558133eb4c90 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x558133eb4bc8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x558133eb4bb0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x558133eb4b40 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x558133eb4b10 <col:31, col:41> '<bound member function type>' .sec 0x558133c8b8c8
|             | |     `-ImplicitCastExpr 0x558133eb4b60 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x558133eb4ae0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x558133e02088
|             | |         `-CXXThisExpr 0x558133eb4ad0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x558133eb4b98 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x558133eb4b78 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e012e0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x558133eb4c58 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x558133eb4c28 <col:60, col:70> '<bound member function type>' .subsec 0x558133c8bfc0
|                 `-ImplicitCastExpr 0x558133eb4c78 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x558133eb4bf8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x558133e02088
|                     `-CXXThisExpr 0x558133eb4be8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x558133e014b8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558133e01428 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558133eb5078 <col:60, line:279:5>
|   `-ExprWithCleanups 0x558133eb5060 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x558133eb5008 <col:2, col:65> 'void'
|       |-MemberExpr 0x558133eb4d68 <col:2> '<bound member function type>' ->schedule_at_steady 0x558133e00870
|       | `-CXXThisExpr 0x558133eb4d58 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558133eb5048 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558133eb5030 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x558133eb4fd0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x558133eb4fb8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558133eb4f98 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558133e3b220 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x558133eb4f38 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x558133eb4f20 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x558133eb4da8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x558133e02088
|             |     `-CXXThisExpr 0x558133eb4d98 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x558133eb4f80 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x558133eb4f68 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x558133eb4ec8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x558133eb4eb0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x558133eb4e80 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x558133e0eb78 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x558133eb4f08 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x558133eb4ef0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x558133eb4e60 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x558133e01428 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558133e01580 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x558133e01640 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x558133eb5540 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x558133eb50d0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x558133eb50a0 <col:2> '<bound member function type>' ->unschedule 0x558133e01580
|   |   `-CXXThisExpr 0x558133eb5090 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x558133eb5528 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x558133eb54f0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x558133eb54d8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558133eb5188 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x558133b22e68 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x558133eb5100 <col:2> 'Timestamp' lvalue ->_expiry_s 0x558133e02088
|       | `-CXXThisExpr 0x558133eb50f0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558133eb5170 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x558133eb5140 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x558133e01700 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x558133eb5898 <col:42, line:310:5>
|   |-IfStmt 0x558133eb56e0 <line:306:2, line:307:23>
|   | |-CallExpr 0x558133eb5610 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x558133eb55f8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x558133eb5598 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x558133e2ccf0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x558133eb56d0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x558133eb56b8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x558133eb5688 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558133eb5670 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x558133eb5640 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x558133eb5888 <line:309:2, col:33>
|     `-ExprWithCleanups 0x558133eb5870 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x558133eb5840 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558133eb5828 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x558133eb57e8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x558133eb57d0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558133eb57a0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x558133e0ee90 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x558133eb5810 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x558133eb5780 <col:30> 'int' 500
|-CXXMethodDecl 0x558133e01840 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x558133e017b0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558133e018e8 <col:69> "" ""
|-CXXMethodDecl 0x558133e019f8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x558133e01968 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558133e01aa0 <col:70> "" ""
|-CXXMethodDecl 0x558133e01bb0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x558133e01b20 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558133e01c58 <col:71> "" ""
|-CXXMethodDecl 0x558133e01d68 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x558133e01cd8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558133e01e10 <col:72> "" ""
|-EnumDecl 0x558133e01e80 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x558133e01f80 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x558133e01fd0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133e01f60 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x558133e01f40 <col:25> 'int' 1
|-AccessSpecDecl 0x558133e01fe8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x558133e02028 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x558133e02088 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x558133e020d8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x558133e02208 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x558133e02cf8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x558133e022c8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x558133e02348 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x558133e023a8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x558133e02408 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x558133e02558 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x558133e02468 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x558133e02728 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x558133e02610 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x558133e02690 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x558133e02900 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x558133e027e8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x558133e02868 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x558133e02ad8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x558133e029c0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x558133e02a40 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x558133e02ca8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133c4df20 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x558133c4e038 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x558133c4e0d8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x558133c4e138 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x558133c4e198 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x558133c4e248 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133c4e550 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558133c4e668 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x558133c4e710 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x558133c4e778 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x558133c4e808 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x558133c548a0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558133c54cd8 <col:12>
|-CXXConstructorDecl 0x558133c549a8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558133c54ab8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558133c4e710 'data' 'const char *'
| | `-ImplicitCastExpr 0x558133c57260 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x558133c57230 <col:12> 'const char *const' lvalue .data 0x558133c4e710
| |     `-DeclRefExpr 0x558133c57210 <col:12> 'const String::rep_t' lvalue ParmVar 0x558133c54ab8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558133c4e778 'length' 'int'
| | `-ImplicitCastExpr 0x558133c572f0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x558133c572c0 <col:12> 'const int' lvalue .length 0x558133c4e778
| |     `-DeclRefExpr 0x558133c572a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558133c54ab8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558133c4e808 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x558133c57380 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x558133c57350 <col:12> 'String::memo_t *const' lvalue .memo 0x558133c4e808
| |     `-DeclRefExpr 0x558133c57330 <col:12> 'const String::rep_t' lvalue ParmVar 0x558133c54ab8 '' 'const String::rep_t &'
| `-CompoundStmt 0x558133c573d8 <col:12>
|-CXXConstructorDecl 0x558133c54b58 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558133c54b58
| `-ParmVarDecl 0x558133c54c68 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x558133c5a1c0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558133c65bd8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558133c65ce8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x558133c66200 <col:12>
|   |-BinaryOperator 0x558133c66018 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x558133c65fd0 <col:12> 'const char *' lvalue ->data 0x558133c4e710
|   | | `-CXXThisExpr 0x558133c65fc0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558133c66000 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x558133c65f90 <col:12> 'const char *const' lvalue .data 0x558133c4e710
|   |     `-DeclRefExpr 0x558133c65f70 <col:12> 'const String::rep_t' lvalue ParmVar 0x558133c65ce8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x558133c660e0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x558133c66098 <col:12> 'int' lvalue ->length 0x558133c4e778
|   | | `-CXXThisExpr 0x558133c66088 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558133c660c8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x558133c66058 <col:12> 'const int' lvalue .length 0x558133c4e778
|   |     `-DeclRefExpr 0x558133c66038 <col:12> 'const String::rep_t' lvalue ParmVar 0x558133c65ce8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x558133c661a8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x558133c66160 <col:12> 'String::memo_t *' lvalue ->memo 0x558133c4e808
|   | | `-CXXThisExpr 0x558133c66150 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558133c66190 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x558133c66120 <col:12> 'String::memo_t *const' lvalue .memo 0x558133c4e808
|   |     `-DeclRefExpr 0x558133c66100 <col:12> 'const String::rep_t' lvalue ParmVar 0x558133c65ce8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x558133c661f0 <col:12>
|     `-UnaryOperator 0x558133c661d8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558133c661c8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x558133c65d58 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558133c65d58
  `-ParmVarDecl 0x558133c65e68 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558133c45490 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558133c455a8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x558133c45638 <col:16, col:22> col:16 public
|-TypedefDecl 0x558133c45678 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x558133918fd0 'const char *'
|   `-QualType 0x558133918521 'const char' const
|     `-BuiltinType 0x558133918520 'char'
|-TypedefDecl 0x558133c45700 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x558133c456d0 'String::const_iterator' sugar
|   |-Typedef 0x558133c45678 'const_iterator'
|   `-PointerType 0x558133918fd0 'const char *'
|     `-QualType 0x558133918521 'const char' const
|       `-BuiltinType 0x558133918520 'char'
|-TypedefDecl 0x558133c45870 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x558133c457e0 'int (String::*)() const'
|   |-RecordType 0x558133c45520 'String'
|   | `-CXXRecord 0x558133c45490 'String'
|   `-ParenType 0x558133c45780 'int () const' sugar
|     `-FunctionProtoType 0x558133c1a320 'int () const' const cdecl
|       `-BuiltinType 0x558133918580 'int'
|-TypedefDecl 0x558133c458d8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x558133a6ef20 'int64_t' sugar
|   |-Typedef 0x558133981390 'int64_t'
|   `-TypedefType 0x55813395a630 '__int64_t' sugar
|     |-Typedef 0x55813395a208 '__int64_t'
|     `-BuiltinType 0x5581339185a0 'long'
|-TypedefDecl 0x558133c45940 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x558133a6ee40 'uint64_t' sugar
|   |-Typedef 0x558133981530 'uint64_t'
|   `-TypedefType 0x55813395a6c0 '__uint64_t' sugar
|     |-Typedef 0x55813395a278 '__uint64_t'
|     `-BuiltinType 0x558133918640 'unsigned long'
|-TypedefDecl 0x558133c459d0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x558133c459a0 'String::intmax_t' sugar
|   |-Typedef 0x558133c458d8 'intmax_t'
|   `-TypedefType 0x558133a6ef20 'int64_t' sugar
|     |-Typedef 0x558133981390 'int64_t'
|     `-TypedefType 0x55813395a630 '__int64_t' sugar
|       |-Typedef 0x55813395a208 '__int64_t'
|       `-BuiltinType 0x5581339185a0 'long'
|-TypedefDecl 0x558133c45a60 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x558133c45a30 'String::uintmax_t' sugar
|   |-Typedef 0x558133c45940 'uintmax_t'
|   `-TypedefType 0x558133a6ee40 'uint64_t' sugar
|     |-Typedef 0x558133981530 'uint64_t'
|     `-TypedefType 0x55813395a6c0 '__uint64_t' sugar
|       |-Typedef 0x55813395a278 '__uint64_t'
|       `-BuiltinType 0x558133918640 'unsigned long'
|-CXXConstructorDecl 0x558133c45b20 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x558133c45cc8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x558133c45c08 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x558133c45e78 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x558133c45db8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x558133c45fd0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x558133c45f40 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x558133c461e8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x558133c46098 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x558133c46118 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x558133c46408 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x558133c462b8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x558133c46338 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x558133c46628 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x558133c464d8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x558133c46558 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x558133c46848 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x558133c466f8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x558133c46778 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x558133c469d8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x558133c46910 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x558133c46b58 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x558133c46a98 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x558133c46ce8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x558133c46c20 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x558133c46e40 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x558133c46db0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x558133c46f98 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x558133c46f08 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x558133c470f0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x558133c47060 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x558133c47278 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x558133c471b8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x558133c47408 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x558133c47340 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x558133c47598 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x558133c474d0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x558133c47728 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x558133c47660 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x558133c47820 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x558133c47948 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x558133c47ac8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x558133c47a00 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x558133c47c18 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x558133c47b88 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x558133c47cd0 <col:63> "" ""
|-CXXMethodDecl 0x558133c47e18 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x558133c47d58 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x558133c48028 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x558133c47ed8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x558133c47f58 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x558133c48248 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x558133c480f0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x558133c48170 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x558133c48528 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x558133c48308 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x558133c48388 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x558133c54370 <col:55> 'int' 10
| `-ParmVarDecl 0x558133c48400 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558133c54390 <col:76> 'bool' true
|-CXXMethodDecl 0x558133c48808 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x558133c485f0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x558133c48670 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x558133c543a0 <col:56> 'int' 10
| `-ParmVarDecl 0x558133c486e8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558133c543c0 <col:77> 'bool' true
|-CXXMethodDecl 0x558133c48910 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x558133c489d8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x558133c48aa0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x558133c48b40 <col:20>
| `-OptimizeNoneAttr 0x558133c48b98 <col:30>
|-CXXConversionDecl 0x558133c48c88 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558133c48d58 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x558133c48e18 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x558133c48f08 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x558133c48fc8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x558133c49148 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x558133c49080 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x558133c49298 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x558133c49208 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x558133c49388 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x558133c49448 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x558133c49698 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x558133c49500 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x558133c49580 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x558133c498f8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x558133c49760 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x558133c497e0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x558133c499c8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x558133c49bd8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x558133c49a80 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x558133c49b00 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x558133c49df8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x558133c49ca0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x558133c49d20 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x558133c49f88 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x558133c49ec0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x558133c4a078 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x558133c4a1e8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x558133c4a128 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558133c4a3f8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x558133c4a2a8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x558133c4a328 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x558133c4a610 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x558133c4a4b8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x558133c4a530 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x558133c4a7a0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x558133c4a6d0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558133c4a9c0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x558133c4a860 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x558133c4a8e0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x558133c4ab10 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x558133c4aa80 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x558133c4ace8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x558133c4abd0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x558133c4ac50 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x558133c4ae38 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x558133c4ada8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x558133c4b050 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x558133c4aef0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x558133c4af70 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x558133c543d0 <col:39> 'int' 0
|-CXXMethodDecl 0x558133c4b270 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x558133c4b110 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x558133c4b190 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x558133c543f0 <col:48> 'int' 0
|-CXXMethodDecl 0x558133c4b450 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x558133c4b330 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x558133c4b3b0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x558133c54410 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x558133c4b520 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x558133c4b5e0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x558133c4b6a0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x558133c4b760 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x558133c4b820 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x558133c4b9c8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x558133c4b8d0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x558133c4bb48 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x558133c4ba80 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x558133c4bd20 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x558133c4bc08 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x558133c4be98 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x558133c4bdd8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x558133c4bfe0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x558133c4bf50 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558133c4c130 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x558133c4c0a0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x558133c4c308 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x558133c4c1f0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x558133c4c270 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x558133c4c4e8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x558133c4c3d0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x558133c4c450 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x558133c4c638 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x558133c4c5a8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x558133c4c848 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x558133c4c6f8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x558133c4c778 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x558133c4c9a8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x558133c4c910 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x558133c4cb00 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x558133c4ca68 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x558133c4cba8 <col:57> "" ""
|-CXXMethodDecl 0x558133c4ccb8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x558133c4cc28 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x558133c4ce08 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x558133c4cd78 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x558133c4cf88 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x558133c4cec0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x558133c4d050 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x558133c4d110 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x558133c4d1d0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x558133c4d270 <col:49> "" ""
|-CXXMethodDecl 0x558133c4d300 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x558133c4d3c0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x558133c4d4b0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x558133c4d578 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x558133c4d638 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x558133c4d6f8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x558133c4d7f0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x558133c4d8b8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x558133c4d980 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x558133c4db58 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x558133c4da38 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x558133c4dab8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x558133c4dd80 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x558133c4dc20 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x558133c4dca0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x558133c4de90 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x558133c4def8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x558133c4df20 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558133c4e038 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x558133c4e0d8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x558133c4e138 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x558133c4e198 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x558133c4e248 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x558133c4e2b0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x558133c4e4e8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x558133c4e538 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133c4e4c8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x558133c4e3d8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x558133c4e380 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x558133c4e3c0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x558133c4e3a0 <col:32> 'int' 8
|-CXXRecordDecl 0x558133c4e550 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558133c4e668 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x558133c4e710 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x558133c4e778 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x558133c4e808 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x558133c548a0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558133c54cd8 <col:12>
| |-CXXConstructorDecl 0x558133c549a8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558133c54ab8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558133c4e710 'data' 'const char *'
| | | `-ImplicitCastExpr 0x558133c57260 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x558133c57230 <col:12> 'const char *const' lvalue .data 0x558133c4e710
| | |     `-DeclRefExpr 0x558133c57210 <col:12> 'const String::rep_t' lvalue ParmVar 0x558133c54ab8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558133c4e778 'length' 'int'
| | | `-ImplicitCastExpr 0x558133c572f0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x558133c572c0 <col:12> 'const int' lvalue .length 0x558133c4e778
| | |     `-DeclRefExpr 0x558133c572a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558133c54ab8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558133c4e808 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x558133c57380 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x558133c57350 <col:12> 'String::memo_t *const' lvalue .memo 0x558133c4e808
| | |     `-DeclRefExpr 0x558133c57330 <col:12> 'const String::rep_t' lvalue ParmVar 0x558133c54ab8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x558133c573d8 <col:12>
| |-CXXConstructorDecl 0x558133c54b58 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558133c54b58
| | `-ParmVarDecl 0x558133c54c68 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x558133c5a1c0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x558133c65bd8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558133c65ce8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x558133c66200 <col:12>
| |   |-BinaryOperator 0x558133c66018 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x558133c65fd0 <col:12> 'const char *' lvalue ->data 0x558133c4e710
| |   | | `-CXXThisExpr 0x558133c65fc0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558133c66000 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x558133c65f90 <col:12> 'const char *const' lvalue .data 0x558133c4e710
| |   |     `-DeclRefExpr 0x558133c65f70 <col:12> 'const String::rep_t' lvalue ParmVar 0x558133c65ce8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x558133c660e0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x558133c66098 <col:12> 'int' lvalue ->length 0x558133c4e778
| |   | | `-CXXThisExpr 0x558133c66088 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558133c660c8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x558133c66058 <col:12> 'const int' lvalue .length 0x558133c4e778
| |   |     `-DeclRefExpr 0x558133c66038 <col:12> 'const String::rep_t' lvalue ParmVar 0x558133c65ce8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x558133c661a8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x558133c66160 <col:12> 'String::memo_t *' lvalue ->memo 0x558133c4e808
| |   | | `-CXXThisExpr 0x558133c66150 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558133c66190 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x558133c66120 <col:12> 'String::memo_t *const' lvalue .memo 0x558133c4e808
| |   |     `-DeclRefExpr 0x558133c66100 <col:12> 'const String::rep_t' lvalue ParmVar 0x558133c65ce8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x558133c661f0 <col:12>
| |     `-UnaryOperator 0x558133c661d8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558133c661c8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x558133c65d58 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558133c65d58
|   `-ParmVarDecl 0x558133c65e68 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x558133c4e880 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x558133c4eac8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x558133c4e8e8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x558133c4e968 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x558133c4e9e0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x558133c54860 <col:79, line:261:5>
|   |-BinaryOperator 0x558133c544d8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x558133c54470 <col:2, col:5> 'const char *' lvalue .data 0x558133c4e710
|   | | `-MemberExpr 0x558133c54440 <col:2> 'String::rep_t' lvalue ->_r 0x558133c4e880
|   | |   `-CXXThisExpr 0x558133c54430 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x558133c544c0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558133c544a0 <col:12> 'const char *' lvalue ParmVar 0x558133c4e8e8 'data' 'const char *'
|   |-BinaryOperator 0x558133c545a0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x558133c54538 <col:2, col:5> 'int' lvalue .length 0x558133c4e778
|   | | `-MemberExpr 0x558133c54508 <col:2> 'String::rep_t' lvalue ->_r 0x558133c4e880
|   | |   `-CXXThisExpr 0x558133c544f8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x558133c54588 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558133c54568 <col:14> 'int' lvalue ParmVar 0x558133c4e968 'length' 'int'
|   `-IfStmt 0x558133c54848 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x558133c546c0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x558133c546a8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x558133c54688 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x558133c54668 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x558133c54600 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x558133c4e808
|     |       | `-MemberExpr 0x558133c545d0 <col:7> 'String::rep_t' lvalue ->_r 0x558133c4e880
|     |       |   `-CXXThisExpr 0x558133c545c0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x558133c54650 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x558133c54630 <col:17> 'String::memo_t *' lvalue ParmVar 0x558133c4e9e0 'memo' 'String::memo_t *'
|     `-CallExpr 0x558133c54820 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x558133c54808 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558133c54710 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x558133c3d4f8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x558133c54778 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558133c4e0d8
|         `-ImplicitCastExpr 0x558133c54760 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x558133c54740 <col:27> 'String::memo_t *' lvalue ParmVar 0x558133c4e9e0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x558133c4ed78 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x558133c4eb98 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x558133c4ec18 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x558133c4ec90 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x558133c4e880 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x558133c54ce8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558133c54e78 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x558133c54de0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x558133c54d50 <col:2> '<bound member function type>' ->assign_memo 0x558133c4eac8
|     | `-ImplicitCastExpr 0x558133c54e18 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x558133c54d40 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x558133c54e30 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x558133c54d80 <col:14> 'const char *' lvalue ParmVar 0x558133c4eb98 'data' 'const char *'
|     |-ImplicitCastExpr 0x558133c54e48 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558133c54da0 <col:20> 'int' lvalue ParmVar 0x558133c4ec18 'length' 'int'
|     `-ImplicitCastExpr 0x558133c54e60 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x558133c54dc0 <col:28> 'String::memo_t *' lvalue ParmVar 0x558133c4ec90 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x558133c4ef08 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x558133c4ee48 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x558133c550d0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x558133c55050 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x558133c54ea0 <col:2> '<bound member function type>' ->assign_memo 0x558133c4eac8
|     | `-CXXThisExpr 0x558133c54e90 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x558133c55088 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x558133c54f20 <col:14, col:19> 'const char *' lvalue .data 0x558133c4e710
|     |   `-MemberExpr 0x558133c54ef0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x558133c4e880
|     |     `-DeclRefExpr 0x558133c54ed0 <col:14> 'const String' lvalue ParmVar 0x558133c4ee48 'x' 'const String &'
|     |-ImplicitCastExpr 0x558133c550a0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x558133c54fa0 <col:25, col:30> 'int' lvalue .length 0x558133c4e778
|     |   `-MemberExpr 0x558133c54f70 <col:25, col:27> 'String::rep_t' lvalue ._r 0x558133c4e880
|     |     `-DeclRefExpr 0x558133c54f50 <col:25> 'const String' lvalue ParmVar 0x558133c4ee48 'x' 'const String &'
|     `-ImplicitCastExpr 0x558133c550b8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x558133c55020 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x558133c4e808
|         `-MemberExpr 0x558133c54ff0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x558133c4e880
|           `-DeclRefExpr 0x558133c54fd0 <col:38> 'const String' lvalue ParmVar 0x558133c4ee48 'x' 'const String &'
|-CXXMethodDecl 0x558133c4efd0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x558133c55a90 <col:31, line:278:5>
|   `-IfStmt 0x558133c55a78 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x558133c55170 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x558133c55158 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x558133c55128 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x558133c4e808
|     |     `-MemberExpr 0x558133c550f8 <col:6> 'String::rep_t' lvalue ->_r 0x558133c4e880
|     |       `-CXXThisExpr 0x558133c550e8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x558133c55a50 <col:15, line:277:2>
|       |-ParenExpr 0x558133c55620 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x558133c555f0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x558133c55280 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x558133c55268 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x558133c55250 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x558133c55210 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558133c4e0d8
|       |   |       `-ImplicitCastExpr 0x558133c551f8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x558133c551c8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x558133c4e808
|       |   |           `-MemberExpr 0x558133c55198 <col:27> 'String::rep_t' lvalue ->_r 0x558133c4e880
|       |   |             `-CXXThisExpr 0x558133c55188 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x558133c552e0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x558133c552c0 <col:54> 'int' 0
|       |   `-CallExpr 0x558133c55550 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x558133c55538 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x558133c554b8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5581339b5730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x558133c55590 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x558133c553c8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x558133c555a8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x558133c553f8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x558133c555c0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x558133c55430 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x558133c555d8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x558133c554a0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x558133c55488 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x558133c55450 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x558133c55970 <line:274:6, line:275:22>
|       | |-CallExpr 0x558133c55830 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x558133c55818 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x558133c55790 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x558133c3e940 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x558133c55760 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558133c4e0d8
|       | |   `-ImplicitCastExpr 0x558133c55748 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x558133c55718 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x558133c4e808
|       | |       `-MemberExpr 0x558133c556e8 <col:40> 'String::rep_t' lvalue ->_r 0x558133c4e880
|       | |         `-CXXThisExpr 0x558133c556d8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x558133c55930 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x558133c55918 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x558133c55858 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x558133c537b0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x558133c55958 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x558133c558b8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x558133c4e808
|       |       `-MemberExpr 0x558133c55888 <col:15> 'String::rep_t' lvalue ->_r 0x558133c4e880
|       |         `-CXXThisExpr 0x558133c55878 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x558133c55a30 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x558133c559c8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x558133c4e808
|         | `-MemberExpr 0x558133c55998 <col:6> 'String::rep_t' lvalue ->_r 0x558133c4e880
|         |   `-CXXThisExpr 0x558133c55988 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x558133c55a18 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x558133c559f8 <col:16> 'int' 0
|-CXXMethodDecl 0x558133c4f268 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x558133c4f088 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x558133c4f108 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x558133c4f180 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x558133c4f340 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x558133c4f590 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x558133c4f3f8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x558133c4f478 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x558133c4f4f0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x558133c4f778 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x558133c4f660 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x558133c4f6e0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x558133c4f878 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x558133c55b68 <col:41, line:286:5>
|   `-ReturnStmt 0x558133c55b58 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x558133c55b28 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x558133c55af0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x558133c55ad8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x558133c55ab8 <col:46> 'int' 1
|-CXXMethodDecl 0x558133c4fb18 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x558133c4f930 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x558133c4f9b0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x558133c4fa30 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x558133c537b0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x558133c4fbe0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x558133c53880 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x558133c53a50 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x558133c53938 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x558133c539b8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x558133c53b10 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x558133c53bd8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x558133c53cd8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x558133c53d50 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x558133c53dc8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x558133c53e30 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x558133c53f30 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x558133c53f80 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558133c53f10 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x558133c53ef0 <col:22> 'int' 14
|-CXXMethodDecl 0x558133c54198 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x558133c53fb0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x558133c54030 <col:38> col:41 'int'
| `-ParmVarDecl 0x558133c540b0 <col:43> col:46 'int'
|-FriendDecl 0x558133c542a0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x558133c54330 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558133eba620 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x558133f7e758 <line:167:18>
|-CXXRecordDecl 0x558133f7e818 prev 0x558133eba620 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x558133f7e928 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
