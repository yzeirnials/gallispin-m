
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3eccd28 prev 0x5563c3ec44c8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5563c3ecce20 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5563c3ecceb0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5563c3eccf28 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5563c3eccfe8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5563c3ecd0b0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5563c3ecd228 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5563c3ecd160 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5563c3ecd2d0 <col:24>
| `-OptimizeNoneAttr 0x5563c3ecd328 <col:34>
|-CXXMethodDecl 0x5563c3ecd370 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5563c3ecd628 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5563c3ecd420 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5563c3ecd498 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5563c3ecd518 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5563c3ecd6e0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5563c3ecd718 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5563c3ecd780 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5563c3ecd808 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5563c3ecdb28 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5563c3ecd8c0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5563c3ecd938 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5563c3ecd9b0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5563c3ecda30 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5563c3ecdc40 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5563c3ed55b8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5563c3ed55b8
| `-ParmVarDecl 0x5563c3ed56c8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5563c3ed5768 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5563c3ed5768
| `-ParmVarDecl 0x5563c3ed5878 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5563c406dbd0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3c7e7f0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5563c3c7e908 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5563c3c7e998 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5563c3c7ea68 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5563c3c7eb50 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5563c3c7ed68 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5563c3c7ec10 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3c7ef18 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5563c3c7ee20 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5563c3c7f060 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5563c3c7efd0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5563c3c7f1a8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5563c3c7f118 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3c7f2f0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5563c3c7f260 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3c7f3b8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x5563c3c7f500 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x5563c3c7f470 <col:28> col:31 'int'
|-CXXMethodDecl 0x5563c3c7f5c8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x5563c3c7f710 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5563c3c7f680 <col:28> col:31 'int'
|-CXXMethodDecl 0x5563c3c7f888 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5563c3c7f7c8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3c7f9d0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5563c3c7f940 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3c7fa98 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5563c3c7fc58 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5563c3c7fb48 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5563c3c7fbc0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3c7fea8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5563c3c7fd18 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5563c3c7fd90 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5563c3c7ff58 <col:86> "" ""
|-CXXMethodDecl 0x5563c3c801c8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5563c3c80038 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5563c3c800b0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3c80378 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5563c3c80288 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5563c3c80528 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5563c3c80430 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5563c3c807f8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5563c3c805e0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5563c3c80658 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5563c3c806d0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3c80ad8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5563c3c808c0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5563c3c80938 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5563c3c809b0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5563c3c80b90 <col:115> "" ""
|-AccessSpecDecl 0x5563c3c80c00 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5563c3c80c38 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3c82150 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5563c3c82150
| `-ParmVarDecl 0x5563c3c82258 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5563c3c822f8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5563c3c822f8
| `-ParmVarDecl 0x5563c3c82408 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5563c3cb7a38 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5563c3ea9830 <col:7>
|-CXXConstructorDecl 0x5563c3cb7b10 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5563c3cb7b10
| `-ParmVarDecl 0x5563c3cb7c28 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5563c3cb7c98 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5563c3cb7c98
| `-ParmVarDecl 0x5563c3cb7da8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5563c3eac230 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3f87f90 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x5563c3f88168 prev 0x5563c3f87f90 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5563c3f881f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5563c3f88220 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f89df0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x5563c3f89da0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x5563c3f886d0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x5563c3f885d0 'type'
|     `-TemplateSpecializationType 0x5563c3f88560 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5563c3f88440 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x5563c3f88420 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5563c3f88400 <col:24> 'unsigned long' 8
|       `-RecordType 0x5563c3f88540 'char_array<8>'
|         `-ClassTemplateSpecialization 0x5563c3f88460 'char_array'
|-TypedefDecl 0x5563c3f89ea8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x5563c3f89e70 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x5563c3f89e50 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x5563c3f89df0 'type'
|     `-ElaboratedType 0x5563c3f89da0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x5563c3f886d0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x5563c3f885d0 'type'
|         `-TemplateSpecializationType 0x5563c3f88560 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5563c3f88440 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x5563c3f88420 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5563c3f88400 <col:24> 'unsigned long' 8
|           `-RecordType 0x5563c3f88540 'char_array<8>'
|             `-ClassTemplateSpecialization 0x5563c3f88460 'char_array'
|-CXXMethodDecl 0x5563c3f8a028 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x5563c3f89f38 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x5563c3f8a118 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5563c3f8a1f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5563c3f8a1f8
|-CXXMethodDecl 0x5563c3f8a4c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x5563c3f8a3d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x5563c3f8a708 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5563c3f8a580 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3f8a5f8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5563c3f8a8d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5563c3f8a7c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3f8a840 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5563c3f8aa38 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x5563c3f8ab08 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x5563c3f8ad58 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5563c3f8abc8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5563c3f8ac40 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5563c3f8afb8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x5563c3f8ae28 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5563c3f8aea0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5563c3f8b178 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5563c3f8b088 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5563c3f8b338 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5563c3f8b240 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5563c3f8b3f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c3f8b4a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c3f8b6d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5563c3f8b550 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3f8b5c8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5563c3f8b978 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x5563c3f8b880 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x5563c3f8ba40 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x5563c3f8ba90 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5563c3f8bae0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3fe71a8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x5563c3ff2108 prev 0x5563c3fe71a8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5563c3ff3120 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5563c3ff30d0 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x5563c3ff30b0 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x5563c3ff2f60 'type'
|     `-SubstTemplateTypeParmType 0x5563c3f868c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5563c3c24020 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c23fc8 'T'
|       `-RecordType 0x5563c3f86410 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5563c3f86328 'sized_array_memory'
|-FieldDecl 0x5563c3ff3220 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5563c3ff3270 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5563c3ff32a8 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x5563c3ff21a0 'Element *' sugar
|   |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|   `-PointerType 0x5563c3eb6270 'Element *'
|     `-RecordType 0x5563c3eb5ff0 'Element'
|       `-CXXRecord 0x5563c3ebfd40 'Element'
|-TypedefDecl 0x5563c3ff3368 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x5563c3ff3330 'Element *&'
|   `-SubstTemplateTypeParmType 0x5563c3ff21a0 'Element *' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-PointerType 0x5563c3eb6270 'Element *'
|       `-RecordType 0x5563c3eb5ff0 'Element'
|         `-CXXRecord 0x5563c3ebfd40 'Element'
|-TypedefDecl 0x5563c3ff3428 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x5563c3ff33f0 'Element *const &'
|   `-QualType 0x5563c3ff21a1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5563c3ff21a0 'Element *' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-PointerType 0x5563c3eb6270 'Element *'
|         `-RecordType 0x5563c3eb5ff0 'Element'
|           `-CXXRecord 0x5563c3ebfd40 'Element'
|-TypedefDecl 0x5563c3ff34b8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x5563c3ff3480 'Element **'
|   `-SubstTemplateTypeParmType 0x5563c3ff21a0 'Element *' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-PointerType 0x5563c3eb6270 'Element *'
|       `-RecordType 0x5563c3eb5ff0 'Element'
|         `-CXXRecord 0x5563c3ebfd40 'Element'
|-TypedefDecl 0x5563c3ff3578 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x5563c3ff3540 'Element *const *'
|   `-QualType 0x5563c3ff21a1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5563c3ff21a0 'Element *' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-PointerType 0x5563c3eb6270 'Element *'
|         `-RecordType 0x5563c3eb5ff0 'Element'
|           `-CXXRecord 0x5563c3ebfd40 'Element'
|-TypedefDecl 0x5563c3ffa010 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x5563c3ff4100 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x5563c3ff40e0 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x5563c3ff4070 'type'
|     `-SubstTemplateTypeParmType 0x5563c3ff3e30 'Element *' sugar
|       |-TemplateTypeParmType 0x5563c3c2ee20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c2edd0 'T'
|       `-PointerType 0x5563c3eb6270 'Element *'
|         `-RecordType 0x5563c3eb5ff0 'Element'
|           `-CXXRecord 0x5563c3ebfd40 'Element'
|-TypedefDecl 0x5563c3ffa078 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x5563c3ff33f0 'Element *const &'
|   `-QualType 0x5563c3ff21a1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5563c3ff21a0 'Element *' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-PointerType 0x5563c3eb6270 'Element *'
|         `-RecordType 0x5563c3eb5ff0 'Element'
|           `-CXXRecord 0x5563c3ebfd40 'Element'
|-TypedefDecl 0x5563c3ffa0d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3ffa138 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x5563c3ff3480 'Element **'
|   `-SubstTemplateTypeParmType 0x5563c3ff21a0 'Element *' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-PointerType 0x5563c3eb6270 'Element *'
|       `-RecordType 0x5563c3eb5ff0 'Element'
|         `-CXXRecord 0x5563c3ebfd40 'Element'
|-TypedefDecl 0x5563c3ffa1a0 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x5563c3ff3540 'Element *const *'
|   `-QualType 0x5563c3ff21a1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5563c3ff21a0 'Element *' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-PointerType 0x5563c3eb6270 'Element *'
|         `-RecordType 0x5563c3eb5ff0 'Element'
|           `-CXXRecord 0x5563c3ebfd40 'Element'
|-EnumDecl 0x5563c3ffa1f8 <line:134:5> col:5
| `-EnumConstantDecl 0x5563c3ffa2f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5563c3ffa2d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5563c3c5d398 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5563c3c5d370 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5563c3c5d350 <col:40> 'int' 1
|-CXXConstructorDecl 0x5563c3ffa378 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5563c3ffa608 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3ffa430 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3ffa4d0 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x5563c3ffa898 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x5563c3ffa780 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x5563c3ffab58 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x5563c3ffaa40 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x5563c3ffae70 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x5563c3ffad50 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x5563c3ffb180 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x5563c3ffb060 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x5563c3ffb470 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3ffb2b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3ffb330 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5563c3ffb5c8 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x5563c3ffb6a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3ffb700 <col:30> Inherited
|-CXXMethodDecl 0x5563c3ffb748 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x5563c3ffb7f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3ffb850 <col:30> Inherited
|-CXXMethodDecl 0x5563c3ffb918 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5563c3ffb9c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3ffba20 <col:30> Inherited
|-CXXMethodDecl 0x5563c3ffba68 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5563c3ffbb18 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3ffbb70 <col:30> Inherited
|-CXXMethodDecl 0x5563c3ffbbb8 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5563c3ffbc68 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3ffbcc0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3ffbd08 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5563c3ffbdb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3ffbe10 <col:30> Inherited
|-CXXMethodDecl 0x5563c3ffbe38 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3ffbee8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3ffbf98 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5563c3ffc158 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3ffc048 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3ffc0c0 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5563c3ffc2a8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3ffc218 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3ffc458 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x5563c3ffc360 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3ffc510 <col:20>
| `-OptimizeNoneAttr 0x5563c3ffc568 <col:30>
|-CXXMethodDecl 0x5563c3ffc688 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5563c3ffc590 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3ffc740 <col:20>
| `-OptimizeNoneAttr 0x5563c3ffc798 <col:30>
|-CXXMethodDecl 0x5563c3ffc850 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3ffc7c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3ffc998 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3ffc908 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3ffcac8 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x5563c3ffcbf8 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x5563c3ffccc8 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x5563c3ffcd98 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x5563c3ffced8 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3ffce48 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3ffd020 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3ffcf90 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3ffd168 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5563c3ffd0d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3ffd220 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5563c3ffd320 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5563c3ffd290 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3ffd3d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5563c3ffd498 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x5563c3ffd598 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x5563c3ffd718 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3ffd658 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x5563c3ffded8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5563c3ffd7d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x5563c3ffde38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x5563c3ffdd38 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x5563c3ffdfb8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c3ffe108 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3ffe078 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5563c3ffe1c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5563c3ffe408 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3ffe280 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x5563c3ffe2f8 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5563c3ffe5c8 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x5563c3ffe4d8 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x5563c3ffe818 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x5563c3ffe690 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x5563c3ffe708 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x5563c3ffe8d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c3ffeb38 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x5563c3ffea40 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x5563c3ffec08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5563c3ffec08

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3c93be0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5563c3c93cf8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5563c3c93d98 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5563c3c93df8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5563c3c93e58 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5563c3c93f08 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3c94210 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5563c3c94328 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5563c3c943d0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5563c3c94438 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5563c3c944c8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5563c3c9a560 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5563c3c9a998 <col:12>
|-CXXConstructorDecl 0x5563c3c9a668 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5563c3c9a778 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5563c3c943d0 'data' 'const char *'
| | `-ImplicitCastExpr 0x5563c3c9cf20 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5563c3c9cef0 <col:12> 'const char *const' lvalue .data 0x5563c3c943d0
| |     `-DeclRefExpr 0x5563c3c9ced0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5563c3c9a778 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5563c3c94438 'length' 'int'
| | `-ImplicitCastExpr 0x5563c3c9cfb0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5563c3c9cf80 <col:12> 'const int' lvalue .length 0x5563c3c94438
| |     `-DeclRefExpr 0x5563c3c9cf60 <col:12> 'const String::rep_t' lvalue ParmVar 0x5563c3c9a778 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5563c3c944c8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5563c3c9d040 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5563c3c9d010 <col:12> 'String::memo_t *const' lvalue .memo 0x5563c3c944c8
| |     `-DeclRefExpr 0x5563c3c9cff0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5563c3c9a778 '' 'const String::rep_t &'
| `-CompoundStmt 0x5563c3c9d098 <col:12>
|-CXXConstructorDecl 0x5563c3c9a818 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5563c3c9a818
| `-ParmVarDecl 0x5563c3c9a928 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5563c3c9fe80 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5563c3cab898 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5563c3cab9a8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5563c3cabec0 <col:12>
|   |-BinaryOperator 0x5563c3cabcd8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5563c3cabc90 <col:12> 'const char *' lvalue ->data 0x5563c3c943d0
|   | | `-CXXThisExpr 0x5563c3cabc80 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5563c3cabcc0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5563c3cabc50 <col:12> 'const char *const' lvalue .data 0x5563c3c943d0
|   |     `-DeclRefExpr 0x5563c3cabc30 <col:12> 'const String::rep_t' lvalue ParmVar 0x5563c3cab9a8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5563c3cabda0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5563c3cabd58 <col:12> 'int' lvalue ->length 0x5563c3c94438
|   | | `-CXXThisExpr 0x5563c3cabd48 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5563c3cabd88 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5563c3cabd18 <col:12> 'const int' lvalue .length 0x5563c3c94438
|   |     `-DeclRefExpr 0x5563c3cabcf8 <col:12> 'const String::rep_t' lvalue ParmVar 0x5563c3cab9a8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5563c3cabe68 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5563c3cabe20 <col:12> 'String::memo_t *' lvalue ->memo 0x5563c3c944c8
|   | | `-CXXThisExpr 0x5563c3cabe10 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5563c3cabe50 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5563c3cabde0 <col:12> 'String::memo_t *const' lvalue .memo 0x5563c3c944c8
|   |     `-DeclRefExpr 0x5563c3cabdc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5563c3cab9a8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5563c3cabeb0 <col:12>
|     `-UnaryOperator 0x5563c3cabe98 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5563c3cabe88 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5563c3caba18 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5563c3caba18
  `-ParmVarDecl 0x5563c3cabb28 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3c8b150 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5563c3c8b268 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5563c3c8b2f8 <col:16, col:22> col:16 public
|-TypedefDecl 0x5563c3c8b338 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5563c395bdc0 'const char *'
|   `-QualType 0x5563c395b311 'const char' const
|     `-BuiltinType 0x5563c395b310 'char'
|-TypedefDecl 0x5563c3c8b3c0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5563c3c8b390 'String::const_iterator' sugar
|   |-Typedef 0x5563c3c8b338 'const_iterator'
|   `-PointerType 0x5563c395bdc0 'const char *'
|     `-QualType 0x5563c395b311 'const char' const
|       `-BuiltinType 0x5563c395b310 'char'
|-TypedefDecl 0x5563c3c8b530 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5563c3c8b4a0 'int (String::*)() const'
|   |-RecordType 0x5563c3c8b1e0 'String'
|   | `-CXXRecord 0x5563c3c8b150 'String'
|   `-ParenType 0x5563c3c8b440 'int () const' sugar
|     `-FunctionProtoType 0x5563c3c5efd0 'int () const' const cdecl
|       `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3c8b598 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5563c3ab3bb0 'int64_t' sugar
|   |-Typedef 0x5563c39c42d0 'int64_t'
|   `-TypedefType 0x5563c399d4d0 '__int64_t' sugar
|     |-Typedef 0x5563c399d0a8 '__int64_t'
|     `-BuiltinType 0x5563c395b390 'long'
|-TypedefDecl 0x5563c3c8b600 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5563c3ab3ad0 'uint64_t' sugar
|   |-Typedef 0x5563c39c4470 'uint64_t'
|   `-TypedefType 0x5563c399d560 '__uint64_t' sugar
|     |-Typedef 0x5563c399d118 '__uint64_t'
|     `-BuiltinType 0x5563c395b430 'unsigned long'
|-TypedefDecl 0x5563c3c8b690 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5563c3c8b660 'String::intmax_t' sugar
|   |-Typedef 0x5563c3c8b598 'intmax_t'
|   `-TypedefType 0x5563c3ab3bb0 'int64_t' sugar
|     |-Typedef 0x5563c39c42d0 'int64_t'
|     `-TypedefType 0x5563c399d4d0 '__int64_t' sugar
|       |-Typedef 0x5563c399d0a8 '__int64_t'
|       `-BuiltinType 0x5563c395b390 'long'
|-TypedefDecl 0x5563c3c8b720 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5563c3c8b6f0 'String::uintmax_t' sugar
|   |-Typedef 0x5563c3c8b600 'uintmax_t'
|   `-TypedefType 0x5563c3ab3ad0 'uint64_t' sugar
|     |-Typedef 0x5563c39c4470 'uint64_t'
|     `-TypedefType 0x5563c399d560 '__uint64_t' sugar
|       |-Typedef 0x5563c399d118 '__uint64_t'
|       `-BuiltinType 0x5563c395b430 'unsigned long'
|-CXXConstructorDecl 0x5563c3c8b7e0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5563c3c8b988 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5563c3c8b8c8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5563c3c8bb38 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5563c3c8ba78 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5563c3c8bc90 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5563c3c8bc00 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5563c3c8bea8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5563c3c8bd58 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5563c3c8bdd8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5563c3c8c0c8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5563c3c8bf78 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5563c3c8bff8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5563c3c8c2e8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5563c3c8c198 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5563c3c8c218 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5563c3c8c508 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5563c3c8c3b8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5563c3c8c438 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5563c3c8c698 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x5563c3c8c5d0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5563c3c8c818 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5563c3c8c758 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5563c3c8c9a8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5563c3c8c8e0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5563c3c8cb00 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5563c3c8ca70 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5563c3c8cc58 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5563c3c8cbc8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5563c3c8cdb0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5563c3c8cd20 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5563c3c8cf38 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5563c3c8ce78 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5563c3c8d0c8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5563c3c8d000 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5563c3c8d258 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5563c3c8d190 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5563c3c8d3e8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5563c3c8d320 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5563c3c8d4e0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5563c3c8d608 <line:69:5, col:44> col:33 used make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5563c3c8d788 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5563c3c8d6c0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5563c3c8d8d8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5563c3c8d848 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5563c3c8d990 <col:63> "" ""
|-CXXMethodDecl 0x5563c3c8dad8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5563c3c8da18 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5563c3c8dce8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5563c3c8db98 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5563c3c8dc18 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5563c3c8df08 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5563c3c8ddb0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5563c3c8de30 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5563c3c8e1e8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5563c3c8dfc8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5563c3c8e048 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5563c3c9a030 <col:55> 'int' 10
| `-ParmVarDecl 0x5563c3c8e0c0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5563c3c9a050 <col:76> 'bool' true
|-CXXMethodDecl 0x5563c3c8e4c8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5563c3c8e2b0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5563c3c8e330 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5563c3c9a060 <col:56> 'int' 10
| `-ParmVarDecl 0x5563c3c8e3a8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5563c3c9a080 <col:77> 'bool' true
|-CXXMethodDecl 0x5563c3c8e5d0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5563c3c8e698 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5563c3c8e760 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5563c3c8e800 <col:20>
| `-OptimizeNoneAttr 0x5563c3c8e858 <col:30>
|-CXXConversionDecl 0x5563c3c8e948 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5563c3c8ea18 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5563c3c8ead8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5563c3c8ebc8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5563c3c8ec88 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5563c3c8ee08 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5563c3c8ed40 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5563c3c8ef58 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5563c3c8eec8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5563c3c8f048 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5563c3c8f108 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5563c3c8f358 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5563c3c8f1c0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5563c3c8f240 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5563c3c8f5b8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5563c3c8f420 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5563c3c8f4a0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5563c3c8f688 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5563c3c8f898 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5563c3c8f740 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5563c3c8f7c0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5563c3c8fab8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5563c3c8f960 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5563c3c8f9e0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5563c3c8fc48 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5563c3c8fb80 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5563c3c8fd38 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5563c3c8fea8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5563c3c8fde8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5563c3c900b8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5563c3c8ff68 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5563c3c8ffe8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5563c3c902d0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5563c3c90178 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5563c3c901f0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5563c3c90460 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5563c3c90390 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5563c3c90680 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5563c3c90520 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5563c3c905a0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5563c3c907d0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5563c3c90740 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5563c3c909a8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5563c3c90890 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5563c3c90910 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5563c3c90af8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5563c3c90a68 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5563c3c90d10 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5563c3c90bb0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5563c3c90c30 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5563c3c9a090 <col:39> 'int' 0
|-CXXMethodDecl 0x5563c3c90f30 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5563c3c90dd0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5563c3c90e50 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5563c3c9a0b0 <col:48> 'int' 0
|-CXXMethodDecl 0x5563c3c91110 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5563c3c90ff0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5563c3c91070 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5563c3c9a0d0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5563c3c911e0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5563c3c912a0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5563c3c91360 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5563c3c91420 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5563c3c914e0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5563c3c91688 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5563c3c91590 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5563c3c91808 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5563c3c91740 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5563c3c919e0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5563c3c918c8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5563c3c91b58 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5563c3c91a98 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5563c3c91ca0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5563c3c91c10 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5563c3c91df0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5563c3c91d60 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5563c3c91fc8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5563c3c91eb0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5563c3c91f30 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5563c3c921a8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5563c3c92090 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5563c3c92110 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5563c3c922f8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5563c3c92268 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5563c3c92508 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5563c3c923b8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5563c3c92438 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5563c3c92668 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5563c3c925d0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5563c3c927c0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5563c3c92728 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5563c3c92868 <col:57> "" ""
|-CXXMethodDecl 0x5563c3c92978 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5563c3c928e8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5563c3c92ac8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5563c3c92a38 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5563c3c92c48 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5563c3c92b80 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5563c3c92d10 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5563c3c92dd0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5563c3c92e90 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5563c3c92f30 <col:49> "" ""
|-CXXMethodDecl 0x5563c3c92fc0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5563c3c93080 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5563c3c93170 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5563c3c93238 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5563c3c932f8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5563c3c933b8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5563c3c934b0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5563c3c93578 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5563c3c93640 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5563c3c93818 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5563c3c936f8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5563c3c93778 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5563c3c93a40 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5563c3c938e0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5563c3c93960 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5563c3c93b50 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5563c3c93bb8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5563c3c93be0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5563c3c93cf8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5563c3c93d98 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5563c3c93df8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5563c3c93e58 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5563c3c93f08 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5563c3c93f70 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5563c3c941a8 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5563c3c941f8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3c94188 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5563c3c94098 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5563c3c94040 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5563c3c94080 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5563c3c94060 <col:32> 'int' 8
|-CXXRecordDecl 0x5563c3c94210 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5563c3c94328 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5563c3c943d0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5563c3c94438 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5563c3c944c8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5563c3c9a560 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5563c3c9a998 <col:12>
| |-CXXConstructorDecl 0x5563c3c9a668 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5563c3c9a778 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5563c3c943d0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5563c3c9cf20 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5563c3c9cef0 <col:12> 'const char *const' lvalue .data 0x5563c3c943d0
| | |     `-DeclRefExpr 0x5563c3c9ced0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5563c3c9a778 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5563c3c94438 'length' 'int'
| | | `-ImplicitCastExpr 0x5563c3c9cfb0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5563c3c9cf80 <col:12> 'const int' lvalue .length 0x5563c3c94438
| | |     `-DeclRefExpr 0x5563c3c9cf60 <col:12> 'const String::rep_t' lvalue ParmVar 0x5563c3c9a778 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5563c3c944c8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5563c3c9d040 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5563c3c9d010 <col:12> 'String::memo_t *const' lvalue .memo 0x5563c3c944c8
| | |     `-DeclRefExpr 0x5563c3c9cff0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5563c3c9a778 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5563c3c9d098 <col:12>
| |-CXXConstructorDecl 0x5563c3c9a818 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5563c3c9a818
| | `-ParmVarDecl 0x5563c3c9a928 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5563c3c9fe80 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5563c3cab898 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5563c3cab9a8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5563c3cabec0 <col:12>
| |   |-BinaryOperator 0x5563c3cabcd8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5563c3cabc90 <col:12> 'const char *' lvalue ->data 0x5563c3c943d0
| |   | | `-CXXThisExpr 0x5563c3cabc80 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5563c3cabcc0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5563c3cabc50 <col:12> 'const char *const' lvalue .data 0x5563c3c943d0
| |   |     `-DeclRefExpr 0x5563c3cabc30 <col:12> 'const String::rep_t' lvalue ParmVar 0x5563c3cab9a8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5563c3cabda0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5563c3cabd58 <col:12> 'int' lvalue ->length 0x5563c3c94438
| |   | | `-CXXThisExpr 0x5563c3cabd48 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5563c3cabd88 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5563c3cabd18 <col:12> 'const int' lvalue .length 0x5563c3c94438
| |   |     `-DeclRefExpr 0x5563c3cabcf8 <col:12> 'const String::rep_t' lvalue ParmVar 0x5563c3cab9a8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5563c3cabe68 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5563c3cabe20 <col:12> 'String::memo_t *' lvalue ->memo 0x5563c3c944c8
| |   | | `-CXXThisExpr 0x5563c3cabe10 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5563c3cabe50 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5563c3cabde0 <col:12> 'String::memo_t *const' lvalue .memo 0x5563c3c944c8
| |   |     `-DeclRefExpr 0x5563c3cabdc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5563c3cab9a8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5563c3cabeb0 <col:12>
| |     `-UnaryOperator 0x5563c3cabe98 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5563c3cabe88 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5563c3caba18 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5563c3caba18
|   `-ParmVarDecl 0x5563c3cabb28 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5563c3c94540 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5563c3c94788 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5563c3c945a8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5563c3c94628 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5563c3c946a0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5563c3c9a520 <col:79, line:261:5>
|   |-BinaryOperator 0x5563c3c9a198 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5563c3c9a130 <col:2, col:5> 'const char *' lvalue .data 0x5563c3c943d0
|   | | `-MemberExpr 0x5563c3c9a100 <col:2> 'String::rep_t' lvalue ->_r 0x5563c3c94540
|   | |   `-CXXThisExpr 0x5563c3c9a0f0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5563c3c9a180 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563c3c9a160 <col:12> 'const char *' lvalue ParmVar 0x5563c3c945a8 'data' 'const char *'
|   |-BinaryOperator 0x5563c3c9a260 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5563c3c9a1f8 <col:2, col:5> 'int' lvalue .length 0x5563c3c94438
|   | | `-MemberExpr 0x5563c3c9a1c8 <col:2> 'String::rep_t' lvalue ->_r 0x5563c3c94540
|   | |   `-CXXThisExpr 0x5563c3c9a1b8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5563c3c9a248 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563c3c9a228 <col:14> 'int' lvalue ParmVar 0x5563c3c94628 'length' 'int'
|   `-IfStmt 0x5563c3c9a508 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5563c3c9a380 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5563c3c9a368 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5563c3c9a348 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5563c3c9a328 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5563c3c9a2c0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5563c3c944c8
|     |       | `-MemberExpr 0x5563c3c9a290 <col:7> 'String::rep_t' lvalue ->_r 0x5563c3c94540
|     |       |   `-CXXThisExpr 0x5563c3c9a280 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5563c3c9a310 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5563c3c9a2f0 <col:17> 'String::memo_t *' lvalue ParmVar 0x5563c3c946a0 'memo' 'String::memo_t *'
|     `-CallExpr 0x5563c3c9a4e0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5563c3c9a4c8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5563c3c9a3d0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5563c3c831b8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5563c3c9a438 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5563c3c93d98
|         `-ImplicitCastExpr 0x5563c3c9a420 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5563c3c9a400 <col:27> 'String::memo_t *' lvalue ParmVar 0x5563c3c946a0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5563c3c94a38 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5563c3c94858 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5563c3c948d8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5563c3c94950 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5563c3c94540 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5563c3c9a9a8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5563c3c9ab38 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5563c3c9aaa0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5563c3c9aa10 <col:2> '<bound member function type>' ->assign_memo 0x5563c3c94788
|     | `-ImplicitCastExpr 0x5563c3c9aad8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5563c3c9aa00 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5563c3c9aaf0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5563c3c9aa40 <col:14> 'const char *' lvalue ParmVar 0x5563c3c94858 'data' 'const char *'
|     |-ImplicitCastExpr 0x5563c3c9ab08 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5563c3c9aa60 <col:20> 'int' lvalue ParmVar 0x5563c3c948d8 'length' 'int'
|     `-ImplicitCastExpr 0x5563c3c9ab20 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3c9aa80 <col:28> 'String::memo_t *' lvalue ParmVar 0x5563c3c94950 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5563c3c94bc8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5563c3c94b08 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5563c3c9ad90 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5563c3c9ad10 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5563c3c9ab60 <col:2> '<bound member function type>' ->assign_memo 0x5563c3c94788
|     | `-CXXThisExpr 0x5563c3c9ab50 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5563c3c9ad48 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5563c3c9abe0 <col:14, col:19> 'const char *' lvalue .data 0x5563c3c943d0
|     |   `-MemberExpr 0x5563c3c9abb0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5563c3c94540
|     |     `-DeclRefExpr 0x5563c3c9ab90 <col:14> 'const String' lvalue ParmVar 0x5563c3c94b08 'x' 'const String &'
|     |-ImplicitCastExpr 0x5563c3c9ad60 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5563c3c9ac60 <col:25, col:30> 'int' lvalue .length 0x5563c3c94438
|     |   `-MemberExpr 0x5563c3c9ac30 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5563c3c94540
|     |     `-DeclRefExpr 0x5563c3c9ac10 <col:25> 'const String' lvalue ParmVar 0x5563c3c94b08 'x' 'const String &'
|     `-ImplicitCastExpr 0x5563c3c9ad78 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5563c3c9ace0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5563c3c944c8
|         `-MemberExpr 0x5563c3c9acb0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5563c3c94540
|           `-DeclRefExpr 0x5563c3c9ac90 <col:38> 'const String' lvalue ParmVar 0x5563c3c94b08 'x' 'const String &'
|-CXXMethodDecl 0x5563c3c94c90 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5563c3c9b750 <col:31, line:278:5>
|   `-IfStmt 0x5563c3c9b738 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5563c3c9ae30 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5563c3c9ae18 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5563c3c9ade8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5563c3c944c8
|     |     `-MemberExpr 0x5563c3c9adb8 <col:6> 'String::rep_t' lvalue ->_r 0x5563c3c94540
|     |       `-CXXThisExpr 0x5563c3c9ada8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5563c3c9b710 <col:15, line:277:2>
|       |-ParenExpr 0x5563c3c9b2e0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5563c3c9b2b0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5563c3c9af40 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5563c3c9af28 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5563c3c9af10 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5563c3c9aed0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5563c3c93d98
|       |   |       `-ImplicitCastExpr 0x5563c3c9aeb8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5563c3c9ae88 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5563c3c944c8
|       |   |           `-MemberExpr 0x5563c3c9ae58 <col:27> 'String::rep_t' lvalue ->_r 0x5563c3c94540
|       |   |             `-CXXThisExpr 0x5563c3c9ae48 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5563c3c9afa0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5563c3c9af80 <col:54> 'int' 0
|       |   `-CallExpr 0x5563c3c9b210 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5563c3c9b1f8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5563c3c9b178 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5563c3c9b250 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5563c3c9b088 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5563c3c9b268 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5563c3c9b0b8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5563c3c9b280 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5563c3c9b0f0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5563c3c9b298 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5563c3c9b160 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5563c3c9b148 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5563c3c9b110 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5563c3c9b630 <line:274:6, line:275:22>
|       | |-CallExpr 0x5563c3c9b4f0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5563c3c9b4d8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5563c3c9b450 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5563c3c84600 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5563c3c9b420 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5563c3c93d98
|       | |   `-ImplicitCastExpr 0x5563c3c9b408 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5563c3c9b3d8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5563c3c944c8
|       | |       `-MemberExpr 0x5563c3c9b3a8 <col:40> 'String::rep_t' lvalue ->_r 0x5563c3c94540
|       | |         `-CXXThisExpr 0x5563c3c9b398 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5563c3c9b5f0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5563c3c9b5d8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5563c3c9b518 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5563c3c99470 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5563c3c9b618 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5563c3c9b578 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5563c3c944c8
|       |       `-MemberExpr 0x5563c3c9b548 <col:15> 'String::rep_t' lvalue ->_r 0x5563c3c94540
|       |         `-CXXThisExpr 0x5563c3c9b538 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5563c3c9b6f0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5563c3c9b688 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5563c3c944c8
|         | `-MemberExpr 0x5563c3c9b658 <col:6> 'String::rep_t' lvalue ->_r 0x5563c3c94540
|         |   `-CXXThisExpr 0x5563c3c9b648 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5563c3c9b6d8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5563c3c9b6b8 <col:16> 'int' 0
|-CXXMethodDecl 0x5563c3c94f28 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5563c3c94d48 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5563c3c94dc8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5563c3c94e40 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5563c3c95000 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5563c3c95250 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5563c3c950b8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5563c3c95138 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5563c3c951b0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5563c3c95438 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5563c3c95320 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5563c3c953a0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5563c3c95538 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5563c3c9b828 <col:41, line:286:5>
|   `-ReturnStmt 0x5563c3c9b818 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5563c3c9b7e8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5563c3c9b7b0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5563c3c9b798 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5563c3c9b778 <col:46> 'int' 1
|-CXXMethodDecl 0x5563c3c957d8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5563c3c955f0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5563c3c95670 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5563c3c956f0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5563c3c99470 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5563c3c958a0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5563c3c99540 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5563c3c99710 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5563c3c995f8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5563c3c99678 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5563c3c997d0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5563c3c99898 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5563c3c99998 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5563c3c99a10 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5563c3c99a88 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5563c3c99af0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5563c3c99bf0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5563c3c99c40 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3c99bd0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5563c3c99bb0 <col:22> 'int' 14
|-CXXMethodDecl 0x5563c3c99e58 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5563c3c99c70 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5563c3c99cf0 <col:38> col:41 'int'
| `-ParmVarDecl 0x5563c3c99d70 <col:43> col:46 'int'
|-FriendDecl 0x5563c3c99f60 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5563c3c99ff0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3efab30 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x5563c3efad08 prev 0x5563c3efab30 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5563c3efad98 <col:46, col:52> col:46 public
|-TypedefDecl 0x5563c3efadc0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3efc720 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x5563c3efc6d0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x5563c3efc6b0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x5563c3efafd8 'type'
|     `-SubstTemplateTypeParmType 0x5563c3efafa0 'String' sugar
|       |-TemplateTypeParmType 0x5563c3c4e9f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c4e9a0 'T'
|       `-RecordType 0x5563c3c8b1e0 'String'
|         `-CXXRecord 0x5563c3c8b150 'String'
|-TypedefDecl 0x5563c3efc7d8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x5563c3efc7a0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x5563c3efc780 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5563c3efc720 'type'
|     `-ElaboratedType 0x5563c3efc6d0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x5563c3efc6b0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x5563c3efafd8 'type'
|         `-SubstTemplateTypeParmType 0x5563c3efafa0 'String' sugar
|           |-TemplateTypeParmType 0x5563c3c4e9f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5563c3c4e9a0 'T'
|           `-RecordType 0x5563c3c8b1e0 'String'
|             `-CXXRecord 0x5563c3c8b150 'String'
|-CXXMethodDecl 0x5563c3efc958 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x5563c3efc868 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x5563c3efca48 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5563c3efcb28 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x5563c3efcdf8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5563c3efcd00 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x5563c3efd038 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5563c3efceb0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3efcf28 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5563c3efd208 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5563c3efd0f8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3efd170 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5563c3efd368 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5563c3efd438 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5563c3efd688 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5563c3efd4f8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5563c3efd570 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5563c3efd8e8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x5563c3efd758 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5563c3efd7d0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5563c3efdaa8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5563c3efd9b8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5563c3efdc68 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5563c3efdb70 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5563c3efdd20 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c3efddd0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c3efe008 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5563c3efde80 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3efdef8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5563c3efe2a8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5563c3efe1b0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x5563c3efe370 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x5563c3efe3c0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5563c3efe410 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3ec2980 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x5563c3ef9598 prev 0x5563c3ec2980 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5563c3efaaa0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x5563c3efaa50 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x5563c3efaa30 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5563c3efa8e0 'type'
|     `-SubstTemplateTypeParmType 0x5563c3efa770 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x5563c3c247a0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5563c3c24748 'F'
|       `-RecordType 0x5563c3efa3d0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x5563c3efa2f0 'typed_array_memory'
|-FieldDecl 0x5563c3efe460 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x5563c3efe4b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5563c3efe4e8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x5563c3ef9630 'String' sugar
|   |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|   `-RecordType 0x5563c3c8b1e0 'String'
|     `-CXXRecord 0x5563c3c8b150 'String'
|-TypedefDecl 0x5563c3efe578 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x5563c3efe540 'String &'
|   `-SubstTemplateTypeParmType 0x5563c3ef9630 'String' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3c8b1e0 'String'
|       `-CXXRecord 0x5563c3c8b150 'String'
|-TypedefDecl 0x5563c3efe608 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x5563c3efe5d0 'const String &'
|   `-QualType 0x5563c3ef9631 'const String' const
|     `-SubstTemplateTypeParmType 0x5563c3ef9630 'String' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3c8b1e0 'String'
|         `-CXXRecord 0x5563c3c8b150 'String'
|-TypedefDecl 0x5563c3efe698 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x5563c3efe660 'String *'
|   `-SubstTemplateTypeParmType 0x5563c3ef9630 'String' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3c8b1e0 'String'
|       `-CXXRecord 0x5563c3c8b150 'String'
|-TypedefDecl 0x5563c3efe728 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x5563c3efe6f0 'const String *'
|   `-QualType 0x5563c3ef9631 'const String' const
|     `-SubstTemplateTypeParmType 0x5563c3ef9630 'String' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3c8b1e0 'String'
|         `-CXXRecord 0x5563c3c8b150 'String'
|-TypedefDecl 0x5563c3eff380 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x5563c3eff330 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x5563c3eff310 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x5563c3eff248 'type'
|     `-LValueReferenceType 0x5563c3eff210 'const String &'
|       `-QualType 0x5563c3efefb1 'const String' const
|         `-SubstTemplateTypeParmType 0x5563c3efefb0 'String' sugar
|           |-TemplateTypeParmType 0x5563c3c2e6f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5563c3c2e698 'T'
|           `-RecordType 0x5563c3c8b1e0 'String'
|             `-CXXRecord 0x5563c3c8b150 'String'
|-TypedefDecl 0x5563c3eff3e8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x5563c3efe5d0 'const String &'
|   `-QualType 0x5563c3ef9631 'const String' const
|     `-SubstTemplateTypeParmType 0x5563c3ef9630 'String' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3c8b1e0 'String'
|         `-CXXRecord 0x5563c3c8b150 'String'
|-TypedefDecl 0x5563c3eff440 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3eff4a8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x5563c3efe660 'String *'
|   `-SubstTemplateTypeParmType 0x5563c3ef9630 'String' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3c8b1e0 'String'
|       `-CXXRecord 0x5563c3c8b150 'String'
|-TypedefDecl 0x5563c3eff510 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x5563c3efe6f0 'const String *'
|   `-QualType 0x5563c3ef9631 'const String' const
|     `-SubstTemplateTypeParmType 0x5563c3ef9630 'String' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3c8b1e0 'String'
|         `-CXXRecord 0x5563c3c8b150 'String'
|-EnumDecl 0x5563c3eff568 <line:134:5> col:5
| `-EnumConstantDecl 0x5563c3eff660 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5563c3eff640 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5563c3c5d398 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5563c3c5d370 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5563c3c5d350 <col:40> 'int' 1
|-CXXConstructorDecl 0x5563c3eff6e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5563c3eff978 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3eff7a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3eff840 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x5563c3effc08 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x5563c3effaf0 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x5563c3effec8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x5563c3effdb0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x5563c3f001e0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x5563c3f000c0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x5563c3f004f0 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x5563c3f003d0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x5563c3f007e0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f00628 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3f006a0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5563c3f00908 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5563c3f009e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f00a40 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f00a88 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5563c3f00b38 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f00b90 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f00c58 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f00d08 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f00d60 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f00da8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f00e58 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f00eb0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f00ef8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f00fa8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f01000 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f01048 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f010f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f01150 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f01178 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3f01228 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3f012d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5563c3f014d0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f01388 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3f01400 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5563c3f01620 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3f01590 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f017c8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x5563c3f016d8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3f01880 <col:20>
| `-OptimizeNoneAttr 0x5563c3f018d8 <col:30>
|-CXXMethodDecl 0x5563c3f019c8 <line:164:5, col:73> col:49 used operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x5563c3f01900 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3f01a80 <col:20>
| `-OptimizeNoneAttr 0x5563c3f01ad8 <col:30>
|-CXXMethodDecl 0x5563c3f01b90 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3f01b00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f01cd8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3f01c48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f01e08 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x5563c3f01f08 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x5563c3f01fd8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x5563c3f020a8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x5563c3f021e8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3f02158 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f02330 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3f022a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f02478 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x5563c3f023e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3f02530 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5563c3f02630 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5563c3f025a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3f026e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5563c3f027a8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x5563c3f028a8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x5563c3f02a28 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3f02968 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x5563c3f031e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5563c3f02ae0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x5563c3f03148 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x5563c3f03048 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x5563c3f032c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c3f03418 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3f03388 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5563c3f034d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5563c3f03718 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f03590 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5563c3f03608 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5563c3f038a8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x5563c3f037e8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5563c3f03ab8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x5563c3f03970 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5563c3f039e8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5563c3f03b78 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x5563c3f03dd8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x5563c3f03ce0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x5563c3f03ea8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x5563c406dcc0 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3f08bd0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x5563c3f08da8 prev 0x5563c3f08bd0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5563c3f08e38 <col:46, col:52> col:46 public
|-TypedefDecl 0x5563c3f08e60 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f0aa50 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x5563c3f0aa00 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x5563c3f09310 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x5563c3f09210 'type'
|     `-TemplateSpecializationType 0x5563c3f091a0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5563c3f09080 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x5563c3f09060 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5563c3f09040 <col:24> 'unsigned long' 4
|       `-RecordType 0x5563c3f09180 'char_array<4>'
|         `-ClassTemplateSpecialization 0x5563c3f090a0 'char_array'
|-TypedefDecl 0x5563c3f0ab08 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x5563c3f0aad0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x5563c3f0aab0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x5563c3f0aa50 'type'
|     `-ElaboratedType 0x5563c3f0aa00 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x5563c3f09310 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x5563c3f09210 'type'
|         `-TemplateSpecializationType 0x5563c3f091a0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5563c3f09080 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x5563c3f09060 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5563c3f09040 <col:24> 'unsigned long' 4
|           `-RecordType 0x5563c3f09180 'char_array<4>'
|             `-ClassTemplateSpecialization 0x5563c3f090a0 'char_array'
|-CXXMethodDecl 0x5563c3f0ac88 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x5563c3f0ab98 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x5563c3f0ad78 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5563c3f0ae58 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x5563c3f0b128 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x5563c3f0b030 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x5563c3f0b368 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5563c3f0b1e0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3f0b258 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5563c3f0b538 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5563c3f0b428 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3f0b4a0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5563c3f0b698 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x5563c3f0b768 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x5563c3f0b9b8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5563c3f0b828 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x5563c3f0b8a0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5563c3f0bc18 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x5563c3f0ba88 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x5563c3f0bb00 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5563c3f0bdd8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x5563c3f0bce8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5563c3f0bf98 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x5563c3f0bea0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5563c3f0c050 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c3f0c100 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c3f0c338 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5563c3f0c1b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3f0c228 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5563c3f0c5d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x5563c3f0c4e0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x5563c3f0c6a0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x5563c3f0c6f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5563c3f0c740 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3ffef50 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x5563c3fff158 prev 0x5563c3ffef50 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5563c4000170 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x5563c4000120 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x5563c4000100 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x5563c3ffffb0 'type'
|     `-SubstTemplateTypeParmType 0x5563c3f087a0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x5563c3c24020 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c23fc8 'T'
|       `-RecordType 0x5563c3f082f0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x5563c3f08208 'sized_array_memory'
|-FieldDecl 0x5563c4000270 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x5563c40002c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5563c40002f8 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x5563c3fff1f0 'unsigned int' sugar
|   |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|   `-BuiltinType 0x5563c395b410 'unsigned int'
|-TypedefDecl 0x5563c4000388 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x5563c4000350 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x5563c3fff1f0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-BuiltinType 0x5563c395b410 'unsigned int'
|-TypedefDecl 0x5563c4000448 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x5563c4000410 'const unsigned int &'
|   `-QualType 0x5563c3fff1f1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5563c3fff1f0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-BuiltinType 0x5563c395b410 'unsigned int'
|-TypedefDecl 0x5563c40004d8 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x5563c40004a0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x5563c3fff1f0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-BuiltinType 0x5563c395b410 'unsigned int'
|-TypedefDecl 0x5563c4000568 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x5563c4000530 'const unsigned int *'
|   `-QualType 0x5563c3fff1f1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5563c3fff1f0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-BuiltinType 0x5563c395b410 'unsigned int'
|-TypedefDecl 0x5563c4001150 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x5563c4001100 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x5563c40010e0 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x5563c4001070 'type'
|     `-SubstTemplateTypeParmType 0x5563c4000e30 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5563c3c2ee20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c2edd0 'T'
|       `-BuiltinType 0x5563c395b410 'unsigned int'
|-TypedefDecl 0x5563c40011b8 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x5563c4000410 'const unsigned int &'
|   `-QualType 0x5563c3fff1f1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5563c3fff1f0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-BuiltinType 0x5563c395b410 'unsigned int'
|-TypedefDecl 0x5563c4001210 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c4001278 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x5563c40004a0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x5563c3fff1f0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-BuiltinType 0x5563c395b410 'unsigned int'
|-TypedefDecl 0x5563c40012e0 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x5563c4000530 'const unsigned int *'
|   `-QualType 0x5563c3fff1f1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5563c3fff1f0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-BuiltinType 0x5563c395b410 'unsigned int'
|-EnumDecl 0x5563c4001338 <line:134:5> col:5
| `-EnumConstantDecl 0x5563c4001430 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5563c4001410 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5563c3c5d398 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5563c3c5d370 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5563c3c5d350 <col:40> 'int' 1
|-CXXConstructorDecl 0x5563c40014b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5563c4001708 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c4001570 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c4001610 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x5563c40019c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5563c40018b0 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x5563c4001c88 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x5563c4001b70 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x5563c4003480 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5563c4001eb0 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x5563c4003790 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x5563c4003670 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x5563c4003a80 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c40038c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c4003940 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5563c4003ba8 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x5563c4003c88 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4003ce0 <col:30> Inherited
|-CXXMethodDecl 0x5563c4003d28 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x5563c4003dd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4003e30 <col:30> Inherited
|-CXXMethodDecl 0x5563c4003ec8 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5563c4003f78 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4003fd0 <col:30> Inherited
|-CXXMethodDecl 0x5563c4004018 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5563c40040c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4004120 <col:30> Inherited
|-CXXMethodDecl 0x5563c4004168 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5563c4004218 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4004270 <col:30> Inherited
|-CXXMethodDecl 0x5563c40042b8 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5563c4004368 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c40043c0 <col:30> Inherited
|-CXXMethodDecl 0x5563c40043e8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c4004498 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c4004548 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5563c4004708 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c40045f8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c4004670 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5563c4004858 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5563c40047c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c4004a08 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x5563c4004910 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c4004ac0 <col:20>
| `-OptimizeNoneAttr 0x5563c4004b18 <col:30>
|-CXXMethodDecl 0x5563c4004c38 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x5563c4004b40 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c4004cf0 <col:20>
| `-OptimizeNoneAttr 0x5563c4004d48 <col:30>
|-CXXMethodDecl 0x5563c4004e00 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c4004d70 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c4004f48 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c4004eb8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c4005078 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x5563c40051a8 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x5563c4005278 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x5563c4005348 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x5563c4005488 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c40053f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c40055d0 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c4005540 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c4005718 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x5563c4005688 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c40057d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5563c40058d0 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5563c4005840 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c4005988 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5563c4005a48 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x5563c4005b48 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x5563c4005cc8 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c4005c08 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x5563c4006488 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5563c4005d80 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x5563c40063e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x5563c40062e8 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x5563c4006568 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c40066b8 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c4006628 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5563c4006770 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5563c40069b8 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c4006830 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x5563c40068a8 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5563c4006b78 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x5563c4006a88 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x5563c4006dc8 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x5563c4006c40 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x5563c4006cb8 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x5563c4006e88 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c40070e8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5563c4006ff0 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x5563c40071b8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5563c40071b8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3f075d8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x5563c3f077e8 prev 0x5563c3f075d8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5563c3f08b40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x5563c3f08af0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x5563c3f08ad0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x5563c3f08980 'type'
|     `-SubstTemplateTypeParmType 0x5563c3f087a0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x5563c3c24020 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c23fc8 'T'
|       `-RecordType 0x5563c3f082f0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x5563c3f08208 'sized_array_memory'
|-FieldDecl 0x5563c3f0c790 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x5563c3f0c7e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5563c3f0c818 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x5563c3f07880 'int' sugar
|   |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|   `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f0c8a8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x5563c3f0c870 'int &'
|   `-SubstTemplateTypeParmType 0x5563c3f07880 'int' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f0c968 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x5563c3f0c930 'const int &'
|   `-QualType 0x5563c3f07881 'const int' const
|     `-SubstTemplateTypeParmType 0x5563c3f07880 'int' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f0c9f8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x5563c3f0c9c0 'int *'
|   `-SubstTemplateTypeParmType 0x5563c3f07880 'int' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f0ca88 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x5563c3f0ca50 'const int *'
|   `-QualType 0x5563c3f07881 'const int' const
|     `-SubstTemplateTypeParmType 0x5563c3f07880 'int' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f0d670 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x5563c3f0d620 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x5563c3f0d600 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x5563c3f0d590 'type'
|     `-SubstTemplateTypeParmType 0x5563c3f0d350 'int' sugar
|       |-TemplateTypeParmType 0x5563c3c2ee20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c2edd0 'T'
|       `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f0d6d8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x5563c3f0c930 'const int &'
|   `-QualType 0x5563c3f07881 'const int' const
|     `-SubstTemplateTypeParmType 0x5563c3f07880 'int' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f0d730 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f0d798 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x5563c3f0c9c0 'int *'
|   `-SubstTemplateTypeParmType 0x5563c3f07880 'int' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f0d800 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x5563c3f0ca50 'const int *'
|   `-QualType 0x5563c3f07881 'const int' const
|     `-SubstTemplateTypeParmType 0x5563c3f07880 'int' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-BuiltinType 0x5563c395b370 'int'
|-EnumDecl 0x5563c3f0d858 <line:134:5> col:5
| `-EnumConstantDecl 0x5563c3f0d950 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5563c3f0d930 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5563c3c5d398 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5563c3c5d370 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5563c3c5d350 <col:40> 'int' 1
|-CXXConstructorDecl 0x5563c3f0d9d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5563c3f0dc28 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f0da90 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3f0db30 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x5563c3f0dee8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x5563c3f0ddd0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x5563c3f0e1a8 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x5563c3f0e090 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x5563c3f0e4f0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x5563c3f0e3d0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x5563c3f0e800 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x5563c3f0e6e0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x5563c3f0eaf0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f0e938 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3f0e9b0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5563c3f0ec18 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x5563c3f0ecf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f0ed50 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f0ed98 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x5563c3f0ee48 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f0eea0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f0ef68 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f0f018 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f0f070 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f0f0b8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f0f168 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f0f1c0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f0f208 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f0f2b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f0f310 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f0f358 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f0f408 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f0f460 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f0f488 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3f0f538 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3f0f5e8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5563c3f0f7a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f0f698 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3f0f710 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5563c3f0f8f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3f0f868 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f0faa8 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x5563c3f0f9b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3f0fb60 <col:20>
| `-OptimizeNoneAttr 0x5563c3f0fbb8 <col:30>
|-CXXMethodDecl 0x5563c3f0fcd8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x5563c3f0fbe0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3f0fd90 <col:20>
| `-OptimizeNoneAttr 0x5563c3f0fde8 <col:30>
|-CXXMethodDecl 0x5563c3f0fea0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3f0fe10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f0ffe8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3f0ff58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f10118 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x5563c3f10248 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x5563c3f10318 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x5563c3f103e8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x5563c3f10528 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3f10498 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f10670 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3f105e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f107b8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x5563c3f10728 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3f10870 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5563c3f10970 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5563c3f108e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3f10a28 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5563c3f10ae8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x5563c3f10be8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x5563c3f10d68 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3f10ca8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x5563c3f15570 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5563c3f10e20 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x5563c3f154d0 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x5563c3f11388 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x5563c3f15650 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c3f157a0 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3f15710 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5563c3f15858 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5563c3f15aa8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f15918 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x5563c3f15990 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5563c3f15c68 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x5563c3f15b78 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x5563c3f15eb8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x5563c3f15d30 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x5563c3f15da8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x5563c3f15f78 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c3f161d8 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x5563c3f160e0 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x5563c3f162a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x5563c406dcb0 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c4007400 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5563c4007518 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x5563c40075b8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x5563c4007618 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x5563c40076b0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5563c40076b0
| `-ParmVarDecl 0x5563c40077c8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x5563c4007868 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5563c4007868
| `-ParmVarDecl 0x5563c4007978 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x5563c4007a18 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5563c4007a18
| `-ParmVarDecl 0x5563c4007b28 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5563c4007b98 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5563c4007b98
| `-ParmVarDecl 0x5563c4007ca8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x5563c4007d30 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x5563c4007d30

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c40092c0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x5563c4009498 prev 0x5563c40092c0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5563c4009528 <col:46, col:52> col:46 public
|-TypedefDecl 0x5563c4009550 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c400af10 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x5563c400aec0 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x5563c400aea0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x5563c4009768 'type'
|     `-SubstTemplateTypeParmType 0x5563c4009730 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5563c3c4e9f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c4e9a0 'T'
|       `-RecordType 0x5563c4007490 'Router::element_landmark_t'
|         `-CXXRecord 0x5563c4007400 'element_landmark_t'
|-TypedefDecl 0x5563c400afc8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x5563c400af90 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x5563c400af70 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x5563c400af10 'type'
|     `-ElaboratedType 0x5563c400aec0 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x5563c400aea0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x5563c4009768 'type'
|         `-SubstTemplateTypeParmType 0x5563c4009730 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x5563c3c4e9f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5563c3c4e9a0 'T'
|           `-RecordType 0x5563c4007490 'Router::element_landmark_t'
|             `-CXXRecord 0x5563c4007400 'element_landmark_t'
|-CXXMethodDecl 0x5563c400b148 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x5563c400b058 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x5563c400b238 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5563c400b318 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5563c400b318
|-CXXMethodDecl 0x5563c400d548 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x5563c400d450 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x5563c400d788 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5563c400d600 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c400d678 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5563c400d958 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5563c400d848 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c400d8c0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5563c400dab8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x5563c400db88 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x5563c400ddd8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5563c400dc48 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x5563c400dcc0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5563c400e038 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x5563c400dea8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x5563c400df20 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5563c400e1f8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x5563c400e108 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5563c400e3b8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x5563c400e2c0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5563c400e470 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c400e520 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c400e758 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5563c400e5d0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c400e648 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5563c400e9f8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x5563c400e900 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x5563c400eac0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x5563c400eb10 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5563c400eb60 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c4007e20 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x5563c4008028 prev 0x5563c4007e20 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5563c4009230 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x5563c40091e0 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x5563c40091c0 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x5563c4009070 'type'
|     `-SubstTemplateTypeParmType 0x5563c4008f00 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x5563c3c247a0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5563c3c24748 'F'
|       `-RecordType 0x5563c4008b60 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x5563c4008a80 'typed_array_memory'
|-FieldDecl 0x5563c400ebb0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x5563c400ec00 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5563c400ec38 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x5563c40080c0 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|   `-RecordType 0x5563c4007490 'Router::element_landmark_t'
|     `-CXXRecord 0x5563c4007400 'element_landmark_t'
|-TypedefDecl 0x5563c400ecc8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x5563c400ec90 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x5563c40080c0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c4007490 'Router::element_landmark_t'
|       `-CXXRecord 0x5563c4007400 'element_landmark_t'
|-TypedefDecl 0x5563c400ed58 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x5563c400ed20 'const Router::element_landmark_t &'
|   `-QualType 0x5563c40080c1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5563c40080c0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c4007490 'Router::element_landmark_t'
|         `-CXXRecord 0x5563c4007400 'element_landmark_t'
|-TypedefDecl 0x5563c400ede8 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x5563c400edb0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x5563c40080c0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c4007490 'Router::element_landmark_t'
|       `-CXXRecord 0x5563c4007400 'element_landmark_t'
|-TypedefDecl 0x5563c400ee78 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x5563c400ee40 'const Router::element_landmark_t *'
|   `-QualType 0x5563c40080c1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5563c40080c0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c4007490 'Router::element_landmark_t'
|         `-CXXRecord 0x5563c4007400 'element_landmark_t'
|-TypedefDecl 0x5563c400fad0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x5563c400fa80 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x5563c400fa60 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x5563c400f998 'type'
|     `-LValueReferenceType 0x5563c400f960 'const Router::element_landmark_t &'
|       `-QualType 0x5563c400f701 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x5563c400f700 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x5563c3c2e6f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5563c3c2e698 'T'
|           `-RecordType 0x5563c4007490 'Router::element_landmark_t'
|             `-CXXRecord 0x5563c4007400 'element_landmark_t'
|-TypedefDecl 0x5563c400fb38 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x5563c400ed20 'const Router::element_landmark_t &'
|   `-QualType 0x5563c40080c1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5563c40080c0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c4007490 'Router::element_landmark_t'
|         `-CXXRecord 0x5563c4007400 'element_landmark_t'
|-TypedefDecl 0x5563c400fb90 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c400fbf8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x5563c400edb0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x5563c40080c0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c4007490 'Router::element_landmark_t'
|       `-CXXRecord 0x5563c4007400 'element_landmark_t'
|-TypedefDecl 0x5563c400fc60 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x5563c400ee40 'const Router::element_landmark_t *'
|   `-QualType 0x5563c40080c1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5563c40080c0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c4007490 'Router::element_landmark_t'
|         `-CXXRecord 0x5563c4007400 'element_landmark_t'
|-EnumDecl 0x5563c400fcb8 <line:134:5> col:5
| `-EnumConstantDecl 0x5563c400fdb0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5563c400fd90 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5563c3c5d398 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5563c3c5d370 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5563c3c5d350 <col:40> 'int' 1
|-CXXConstructorDecl 0x5563c400fe38 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5563c40100c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c400fef0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c400ff90 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x5563c4010388 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x5563c4010270 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x5563c4010648 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x5563c4010530 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x5563c4010990 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x5563c4010870 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x5563c4010ca0 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x5563c4010b80 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x5563c4010f90 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c4010dd8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c4010e50 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5563c40110b8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x5563c4011198 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c40111f0 <col:30> Inherited
|-CXXMethodDecl 0x5563c4011238 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x5563c40112e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4011340 <col:30> Inherited
|-CXXMethodDecl 0x5563c4011408 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5563c40114b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4011510 <col:30> Inherited
|-CXXMethodDecl 0x5563c4011558 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5563c4011608 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4011660 <col:30> Inherited
|-CXXMethodDecl 0x5563c40116a8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5563c4011758 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c40117b0 <col:30> Inherited
|-CXXMethodDecl 0x5563c40117f8 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5563c40118a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4011900 <col:30> Inherited
|-CXXMethodDecl 0x5563c4011928 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c40119d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c4011a88 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5563c4011c48 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c4011b38 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c4011bb0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5563c4011d98 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5563c4011d08 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c4011f48 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x5563c4011e50 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c4012000 <col:20>
| `-OptimizeNoneAttr 0x5563c4012058 <col:30>
|-CXXMethodDecl 0x5563c4012178 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x5563c4012080 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c4012230 <col:20>
| `-OptimizeNoneAttr 0x5563c4012288 <col:30>
|-CXXMethodDecl 0x5563c4012340 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c40122b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c4012488 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c40123f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c40125b8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x5563c40126e8 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x5563c40127b8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x5563c4012888 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x5563c40129c8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c4012938 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c4012b10 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c4012a80 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c4012c58 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x5563c4012bc8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c4012d10 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5563c4012e10 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5563c4012d80 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c4012ec8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5563c4012f88 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x5563c4013088 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x5563c4013208 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c4013148 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x5563c4013998 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5563c40132c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x5563c40138f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x5563c40137f8 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x5563c4013a78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c4013bc8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c4013b38 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5563c4013c80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5563c4013ec8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c4013d40 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x5563c4013db8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5563c4014058 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x5563c4013f98 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x5563c4014268 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x5563c4014120 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x5563c4014198 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x5563c4014328 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c4014588 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x5563c4014490 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x5563c4014658 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5563c4014658

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3f7bf80 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x5563c3f7c158 prev 0x5563c3f7bf80 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5563c3f7c1e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5563c3f7c210 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f7dde0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x5563c3f7dd90 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x5563c3f7c6c0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x5563c3f7c5c0 'type'
|     `-TemplateSpecializationType 0x5563c3f7c550 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5563c3f7c430 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x5563c3f7c410 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5563c3f7c3f0 <col:24> 'unsigned long' 16
|       `-RecordType 0x5563c3f7c530 'char_array<16>'
|         `-ClassTemplateSpecialization 0x5563c3f7c450 'char_array'
|-TypedefDecl 0x5563c3f7de98 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x5563c3f7de60 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x5563c3f7de40 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x5563c3f7dde0 'type'
|     `-ElaboratedType 0x5563c3f7dd90 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x5563c3f7c6c0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x5563c3f7c5c0 'type'
|         `-TemplateSpecializationType 0x5563c3f7c550 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5563c3f7c430 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x5563c3f7c410 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5563c3f7c3f0 <col:24> 'unsigned long' 16
|           `-RecordType 0x5563c3f7c530 'char_array<16>'
|             `-ClassTemplateSpecialization 0x5563c3f7c450 'char_array'
|-CXXMethodDecl 0x5563c3f7e018 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x5563c3f7df28 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x5563c3f7e108 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5563c3f7e1e8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5563c3f7e1e8
|-CXXMethodDecl 0x5563c3f7e4b8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x5563c3f7e3c0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x5563c3f7e6f8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5563c3f7e570 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3f7e5e8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5563c3f7e970 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5563c3f7e7b8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3f7e830 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5563c3f7eac8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x5563c3f7eb98 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x5563c3f7ede8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5563c3f7ec58 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x5563c3f7ecd0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5563c3f7f048 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x5563c3f7eeb8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x5563c3f7ef30 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5563c3f7f208 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x5563c3f7f118 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5563c3f7f3c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x5563c3f7f2d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5563c3f7f480 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c3f7f530 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c3f7f768 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5563c3f7f5e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3f7f658 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5563c3f7fa08 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x5563c3f7f910 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x5563c3f7fad0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x5563c3f7fb20 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5563c3f7fb70 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c4014d70 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x5563c4014f78 prev 0x5563c4014d70 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5563c4019000 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x5563c4018fb0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x5563c4018f90 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x5563c4018e40 'type'
|     `-SubstTemplateTypeParmType 0x5563c3f7bb50 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x5563c3c24020 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c23fc8 'T'
|       `-RecordType 0x5563c3f7b6a0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x5563c3f7b5b8 'sized_array_memory'
|-FieldDecl 0x5563c4019100 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x5563c4019150 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5563c4019188 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x5563c4015010 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|   `-RecordType 0x5563c3ff07a0 'Router::Connection'
|     `-CXXRecord 0x5563c3ff0710 'Connection'
|-TypedefDecl 0x5563c4019248 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x5563c4019210 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x5563c4015010 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3ff07a0 'Router::Connection'
|       `-CXXRecord 0x5563c3ff0710 'Connection'
|-TypedefDecl 0x5563c40192d8 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x5563c40192a0 'const Router::Connection &'
|   `-QualType 0x5563c4015011 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x5563c4015010 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3ff07a0 'Router::Connection'
|         `-CXXRecord 0x5563c3ff0710 'Connection'
|-TypedefDecl 0x5563c4019368 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x5563c4019330 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x5563c4015010 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3ff07a0 'Router::Connection'
|       `-CXXRecord 0x5563c3ff0710 'Connection'
|-TypedefDecl 0x5563c40193f8 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x5563c40193c0 'const Router::Connection *'
|   `-QualType 0x5563c4015011 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x5563c4015010 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3ff07a0 'Router::Connection'
|         `-CXXRecord 0x5563c3ff0710 'Connection'
|-TypedefDecl 0x5563c401a050 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x5563c401a000 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x5563c4019fe0 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x5563c4019f18 'type'
|     `-LValueReferenceType 0x5563c4019ee0 'const Router::Connection &'
|       `-QualType 0x5563c4019c81 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x5563c4019c80 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x5563c3c2e6f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5563c3c2e698 'T'
|           `-RecordType 0x5563c3ff07a0 'Router::Connection'
|             `-CXXRecord 0x5563c3ff0710 'Connection'
|-TypedefDecl 0x5563c401a0b8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x5563c40192a0 'const Router::Connection &'
|   `-QualType 0x5563c4015011 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x5563c4015010 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3ff07a0 'Router::Connection'
|         `-CXXRecord 0x5563c3ff0710 'Connection'
|-TypedefDecl 0x5563c401a110 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c401a178 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x5563c4019330 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x5563c4015010 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3ff07a0 'Router::Connection'
|       `-CXXRecord 0x5563c3ff0710 'Connection'
|-TypedefDecl 0x5563c401a1e0 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x5563c40193c0 'const Router::Connection *'
|   `-QualType 0x5563c4015011 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x5563c4015010 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3ff07a0 'Router::Connection'
|         `-CXXRecord 0x5563c3ff0710 'Connection'
|-EnumDecl 0x5563c401a238 <line:134:5> col:5
| `-EnumConstantDecl 0x5563c401a330 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5563c401a310 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5563c3c5d398 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5563c3c5d370 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5563c3c5d350 <col:40> 'int' 1
|-CXXConstructorDecl 0x5563c401a3b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5563c401a648 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c401a470 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c401a510 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x5563c401a908 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x5563c401a7f0 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x5563c401abc8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x5563c401aab0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x5563c401af10 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x5563c401adf0 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x5563c401b220 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x5563c401b100 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x5563c401b510 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c401b358 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c401b3d0 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5563c401b668 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x5563c401b748 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c401b7a0 <col:30> Inherited
|-CXXMethodDecl 0x5563c401b7e8 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x5563c401b898 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c401b8f0 <col:30> Inherited
|-CXXMethodDecl 0x5563c401b9b8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5563c401ba68 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c401bac0 <col:30> Inherited
|-CXXMethodDecl 0x5563c401bb08 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5563c401bbb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c401bc10 <col:30> Inherited
|-CXXMethodDecl 0x5563c401bc58 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5563c401bd08 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c401bd60 <col:30> Inherited
|-CXXMethodDecl 0x5563c401bda8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5563c401be58 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c401beb0 <col:30> Inherited
|-CXXMethodDecl 0x5563c401bed8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c401bf88 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c401c038 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5563c401c1f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c401c0e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c401c160 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5563c401c348 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5563c401c2b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c401c4f8 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x5563c401c400 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c401c5b0 <col:20>
| `-OptimizeNoneAttr 0x5563c401c608 <col:30>
|-CXXMethodDecl 0x5563c401c728 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x5563c401c630 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c401c7e0 <col:20>
| `-OptimizeNoneAttr 0x5563c401c838 <col:30>
|-CXXMethodDecl 0x5563c401c8f0 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c401c860 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c401ca38 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c401c9a8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c401cb68 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x5563c401cc98 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x5563c401cd68 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x5563c401ce38 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x5563c401cf78 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c401cee8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c401d0c0 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c401d030 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c401d208 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x5563c401d178 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c401d2c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5563c401d3c0 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5563c401d330 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c401d478 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5563c401d538 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x5563c401d638 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x5563c401d7e8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c401d6f8 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x5563c401dfa8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5563c401d8a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x5563c401df08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x5563c401de08 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x5563c401e088 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c401e1d8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c401e148 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5563c401e290 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5563c401e4d8 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c401e350 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x5563c401e3c8 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5563c401e698 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x5563c401e5a8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x5563c401e8e8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x5563c401e760 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x5563c401e7d8 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x5563c401e9a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c401ec08 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x5563c401eb10 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x5563c401ecd8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5563c401ecd8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3f521c8 prev 0x5563c3f1d198 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5563c3f522c0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x5563c3f52350 <col:22, col:28> col:22 public
|-EnumDecl 0x5563c3f52378 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x5563c3f52498 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x5563c3f52478 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x5563c3f52460 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5563c3f52440 <col:14> 'int' 999
| |-EnumConstantDecl 0x5563c3f52540 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x5563c3f52520 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x5563c3f52508 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5563c3f524e8 <col:14> 'int' 1
| |-EnumConstantDecl 0x5563c3f525d0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x5563c3f525b0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x5563c3f52590 <col:17> 'int' 0
| |-EnumConstantDecl 0x5563c3f52660 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x5563c3f52640 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x5563c3f52620 <col:13> 'int' 1
| |-EnumConstantDecl 0x5563c3f526f0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x5563c3f526d0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x5563c3f526b0 <col:16> 'int' 2
| |-EnumConstantDecl 0x5563c3f52780 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x5563c3f52760 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x5563c3f52740 <col:13> 'int' 3
| |-EnumConstantDecl 0x5563c3f52810 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x5563c3f527f0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x5563c3f527d0 <col:15> 'int' 4
| |-EnumConstantDecl 0x5563c3f528a0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x5563c3f52880 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x5563c3f52860 <col:14> 'int' 5
| |-EnumConstantDecl 0x5563c3f52930 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x5563c3f52910 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x5563c3f528f0 <col:12> 'int' 6
| `-EnumConstantDecl 0x5563c3f529c0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x5563c3f529a0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x5563c3f52980 <col:13> 'int' 7
|-VarDecl 0x5563c3f52a30 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x5563c3f52ab8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x5563c3f52b40 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x5563c3f52bc8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x5563c3f52c50 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x5563c3f52cd8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x5563c3f52d60 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x5563c3f52de8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x5563c3f52e70 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x5563c3f52ef8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x5563c3f52f80 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x5563c3f53080 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x5563c3f58e88 '_nerrors' 'int'
| | `-IntegerLiteral 0x5563c3f59618 <line:128:13> 'int' 0
| `-CompoundStmt 0x5563c3f59688 <col:16, line:129:5>
|-CXXDestructorDecl 0x5563c3f53170 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x5563c3f59698 <col:29, line:132:5>
|-CXXMethodDecl 0x5563c3f53328 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x5563c3f53260 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f533f0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5563c3f534d8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5563c3f596f0 <col:44, line:161:5>
|   `-ReturnStmt 0x5563c3f596e0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x5563c3f596c8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3f596a8 <col:9> 'ErrorHandler *' lvalue Var 0x5563c3f58ee8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f53648 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x5563c3f53588 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f53710 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5563c3f59750 <col:43, line:173:5>
|   `-ReturnStmt 0x5563c3f59740 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x5563c3f59728 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3f59708 <col:9> 'ErrorHandler *' lvalue Var 0x5563c3f58f60 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x5563c3f537c8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x5563c3f53848 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x5563c3f53958 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x5563c3f538c8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f53aa8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x5563c3f53a18 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f53c00 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x5563c3f53b68 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f53d58 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x5563c3f53cc0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f53eb0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x5563c3f53e18 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f540c0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5563c3f53f68 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x5563c3f53fe8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f54298 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5563c3f54180 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x5563c3f54200 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f544b8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5563c3f54358 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x5563c3f543d8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f54698 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5563c3f54578 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5563c3f545f8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f54878 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5563c3f54758 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5563c3f547d8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f54a00 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x5563c3f54938 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x5563c3f54bd0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x5563c3f54ab8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5563c3f54b30 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x5563c3f599a8 <col:57, line:234:5>
|   `-ReturnStmt 0x5563c3f59998 <line:233:2, col:41>
|     `-ExprWithCleanups 0x5563c3f59980 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5563c3f59928 <col:9, col:41> 'int'
|         |-MemberExpr 0x5563c3f598f8 <col:9> '<bound member function type>' ->xmessage 0x5563c3f54a00
|         | `-CXXThisExpr 0x5563c3f598e8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x5563c3f59968 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5563c3f59950 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5563c3f598c8 <col:18, col:40> 'String' (CXXTemporary 0x5563c3f598c8)
|               `-CallExpr 0x5563c3f59890 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x5563c3f59878 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x5563c3f597f0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5563c3f576b8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x5563c3f59810 <col:31> 'const String' lvalue ParmVar 0x5563c3f54b30 'str' 'const String &'
|                 `-DeclRefExpr 0x5563c3f59830 <col:36> 'const String' lvalue ParmVar 0x5563c3f54ab8 'anno' 'const String &'
|-CXXMethodDecl 0x5563c3f54f10 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5563c3f54c90 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5563c3f54d10 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x5563c3f54de0 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5563c3f59c38 <col:68, line:243:5>
|   `-ReturnStmt 0x5563c3f59c28 <line:242:2, col:41>
|     `-ExprWithCleanups 0x5563c3f59c10 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5563c3f59bb0 <col:9, col:41> 'int'
|         |-MemberExpr 0x5563c3f59b80 <col:9> '<bound member function type>' ->xmessage 0x5563c3f54bd0
|         | `-CXXThisExpr 0x5563c3f59b70 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5563c3f59a48 <col:18> 'const String' lvalue ParmVar 0x5563c3f54c90 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5563c3f59bf8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5563c3f59be0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5563c3f59b50 <col:24, col:40> 'String' (CXXTemporary 0x5563c3f59b50)
|               `-CXXMemberCallExpr 0x5563c3f59ae8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x5563c3f59a78 <col:24> '<bound member function type>' ->vformat 0x5563c3f56b80
|                 | `-CXXThisExpr 0x5563c3f59a68 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5563c3f59b18 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5563c3f59aa8 <col:32> 'const char *' lvalue ParmVar 0x5563c3f54d10 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5563c3f59b30 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5563c3f59ac8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5563c3f54de0 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5563c3f551b0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x5563c3f54fd8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5563c3f55050 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5563c3f550c8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x5563c3f59f78 <col:23, line:254:5>
|   `-ReturnStmt 0x5563c3f59f68 <line:253:2, col:71>
|     `-ExprWithCleanups 0x5563c3f59f50 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x5563c3f59ef0 <col:9, col:71> 'int'
|         |-MemberExpr 0x5563c3f59ec0 <col:9> '<bound member function type>' ->xmessage 0x5563c3f54bd0
|         | `-CXXThisExpr 0x5563c3f59eb0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x5563c3f59f38 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x5563c3f59f20 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x5563c3f59e70 <col:18, col:65> 'String' (CXXTemporary 0x5563c3f59e70)
|         |     `-CallExpr 0x5563c3f59e08 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x5563c3f59df0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x5563c3f59cd8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5563c3f576b8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x5563c3f59cf8 <col:31> 'const String' lvalue ParmVar 0x5563c3f55050 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x5563c3f59e50 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x5563c3f59e38 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x5563c3f59dd0 <col:37, col:64> 'String' (CXXTemporary 0x5563c3f59dd0)
|         |             `-CallExpr 0x5563c3f59da0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x5563c3f59d88 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x5563c3f59d18 <col:37> 'String (const String &)' lvalue CXXMethod 0x5563c3f57d08 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x5563c3f59d38 <col:56> 'const String' lvalue ParmVar 0x5563c3f54fd8 'landmark' 'const String &'
|         `-DeclRefExpr 0x5563c3f59e90 <col:68> 'const String' lvalue ParmVar 0x5563c3f550c8 'str' 'const String &'
|-CXXMethodDecl 0x5563c3f55530 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5563c3f55278 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5563c3f552f0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5563c3f55370 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x5563c3f553e8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5563c3f5a230 <col:34, line:267:5>
|   `-ReturnStmt 0x5563c3f5a220 <line:266:2, col:51>
|     `-ExprWithCleanups 0x5563c3f5a208 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x5563c3f5a1a0 <col:9, col:51> 'int'
|         |-MemberExpr 0x5563c3f5a170 <col:9> '<bound member function type>' ->xmessage 0x5563c3f551b0
|         | `-CXXThisExpr 0x5563c3f5a160 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5563c3f5a018 <col:18> 'const String' lvalue ParmVar 0x5563c3f55278 'landmark' 'const String &'
|         |-DeclRefExpr 0x5563c3f5a038 <col:28> 'const String' lvalue ParmVar 0x5563c3f552f0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5563c3f5a1f0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x5563c3f5a1d8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5563c3f5a140 <col:34, col:50> 'String' (CXXTemporary 0x5563c3f5a140)
|               `-CXXMemberCallExpr 0x5563c3f5a0d8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x5563c3f5a068 <col:34> '<bound member function type>' ->vformat 0x5563c3f56b80
|                 | `-CXXThisExpr 0x5563c3f5a058 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5563c3f5a108 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5563c3f5a098 <col:42> 'const char *' lvalue ParmVar 0x5563c3f55370 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5563c3f5a120 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5563c3f5a0b8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5563c3f553e8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5563c3f55640 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x5563c3f5a2b0 <col:25, line:288:5>
|   `-ReturnStmt 0x5563c3f5a2a0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x5563c3f5a288 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x5563c3f5a258 <col:9> 'const int' lvalue ->_nerrors 0x5563c3f58e88
|         `-CXXThisExpr 0x5563c3f5a248 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x5563c3f55850 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x5563c3f556f8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x5563c3f55778 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f55b38 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5563c3f55918 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x5563c3f55998 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x5563c3f55a10 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5563c3f55cd0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x5563c3f55c08 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f55f18 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5563c3f55d90 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x5563c3f55e08 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5563c3f5a510 <col:58, line:357:5>
|   `-ReturnStmt 0x5563c3f5a500 <line:356:2, col:29>
|     `-ExprWithCleanups 0x5563c3f5a4e8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x5563c3f5a4b8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5563c3f5a4a0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5563c3f5a480 <col:9, col:29> 'String' (CXXTemporary 0x5563c3f5a480)
|             `-CallExpr 0x5563c3f5a410 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x5563c3f5a3f8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5563c3f5a378 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x5563c3f55b38 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x5563c3f5a318 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x5563c3f5a448 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x5563c3f5a338 <col:21> 'const char *' lvalue ParmVar 0x5563c3f55d90 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x5563c3f5a460 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x5563c3f5a358 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5563c3f55e08 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5563c3f56b80 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x5563c3f55fe0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x5563c3f56058 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5563c3f56cd8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x5563c3f56c48 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x5563c3f56e20 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x5563c3f56d90 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x5563c3f570c0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x5563c3f56ed8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x5563c3f56f58 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x5563c3f56fd0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x5563c3f57220 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x5563c3f57190 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x5563c3f5a628 <col:37, line:441:5>
|   `-IfStmt 0x5563c3f5a610 <line:439:2, line:440:8>
|     |-BinaryOperator 0x5563c3f5a598 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x5563c3f5a568 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x5563c3f5a528 <col:6> 'int' lvalue ParmVar 0x5563c3f57190 'level' 'int'
|     | `-ImplicitCastExpr 0x5563c3f5a580 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x5563c3f5a548 <col:15> 'ErrorHandler::Level' EnumConstant 0x5563c3f52780 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x5563c3f5a5f8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x5563c3f5a5c8 <col:8> 'int' lvalue ->_nerrors 0x5563c3f58e88
|         `-CXXThisExpr 0x5563c3f5a5b8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x5563c3f572e8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x5563c3f5a6c0 <col:26, line:448:5>
|   `-BinaryOperator 0x5563c3f5a6a0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x5563c3f5a650 <col:2> 'int' lvalue ->_nerrors 0x5563c3f58e88
|     | `-CXXThisExpr 0x5563c3f5a640 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x5563c3f5a680 <col:13> 'int' 0
|-CXXMethodDecl 0x5563c3f574b0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x5563c3f573a0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5563c3f57418 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x5563c3f576b8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x5563c3f57570 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x5563c3f575e8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x5563c3f57968 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x5563c3f57778 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x5563c3f577f8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x5563c3f57878 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x5563c3f57a20 <col:59> 0 0
|-CXXMethodDecl 0x5563c3f57bb8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x5563c3f57a98 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x5563c3f57b18 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x5563c3f5ad30 <col:70, line:534:5>
|   |-DeclStmt 0x5563c3f5a830 <line:528:2, col:20>
|   | |-VarDecl 0x5563c3f5a6e8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x5563c3f5a750 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x5563c3f5a788 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x5563c3f5a7f0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x5563c3f5a900 <line:529:2, col:23>
|   | `-VarDecl 0x5563c3f5a860 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x5563c3f5a8e8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5563c3f5a8c8 <col:18> 'const char *' lvalue ParmVar 0x5563c3f57a98 'begin' 'const char *'
|   |-DoStmt 0x5563c3f5acc8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x5563c3f5abf8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x5563c3f5abe0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x5563c3f5abc0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x5563c3f5a918 <col:6> 'const char *' lvalue Var 0x5563c3f5a860 'x' 'const char *'
|   | |     `-CallExpr 0x5563c3f5ab10 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x5563c3f5aaf8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x5563c3f5aab0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x5563c3f59360 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x5563c3f5ab78 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x5563c3f5ab60 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x5563c3f5a9d0 <col:20, col:27> 'String' (CXXTemporary 0x5563c3f5a9d0)
|   | |       |     `-CXXTemporaryObjectExpr 0x5563c3f5a998 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x5563c3f5ab90 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5563c3f5a9f0 <col:30> 'const char *' lvalue Var 0x5563c3f5a860 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x5563c3f5aba8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5563c3f5aa10 <col:33> 'const char *' lvalue ParmVar 0x5563c3f57b18 'end' 'const char *'
|   | |       |-UnaryOperator 0x5563c3f5aa50 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5563c3f5aa30 <col:39> 'String' lvalue Var 0x5563c3f5a6e8 'name' 'String'
|   | |       |-UnaryOperator 0x5563c3f5aa88 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5563c3f5aa68 <col:46> 'String' lvalue Var 0x5563c3f5a788 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x5563c3f5aaa0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x5563c3f5acb0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x5563c3f5ac98 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x5563c3f5ac78 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x5563c3f5ac48 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5563c3c8e948
|   |         `-ImplicitCastExpr 0x5563c3f5ac30 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x5563c3f5ac10 <col:11> 'String' lvalue Var 0x5563c3f5a6e8 'name' 'String'
|   `-ReturnStmt 0x5563c3f5ad20 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x5563c3f5ad08 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3f5ace8 <col:9> 'const char *' lvalue Var 0x5563c3f5a860 'x' 'const char *'
|-CXXMethodDecl 0x5563c3f57d08 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x5563c3f57c78 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x5563c3f5b338 <col:55, line:550:5>
|   `-IfStmt 0x5563c3f5b310 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x5563c3f5af70 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x5563c3f5af58 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x5563c3f5af40 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x5563c3f5af20 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x5563c3f5aef0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x5563c3c8e948
|     | |       `-DeclRefExpr 0x5563c3f5ad90 <col:6> 'const String' lvalue ParmVar 0x5563c3f57c78 'x' 'const String &'
|     | `-BinaryOperator 0x5563c3f5aed0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x5563c3f5aea0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x5563c3f5ae50 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x5563c3f5ae38 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x5563c3f5adf0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x5563c3ca8180 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x5563c3f5adb0 <col:11> 'const String' lvalue ParmVar 0x5563c3f57c78 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x5563c3f5add0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x5563c3f5aeb8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x5563c3f5ae88 <col:19> 'char' 123
|     |-ReturnStmt 0x5563c3f5afe0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x5563c3f5afb0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x5563c3f5af90 <col:13> 'const String' lvalue ParmVar 0x5563c3f57c78 'x' 'const String &'
|     `-IfStmt 0x5563c3f5b2e8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x5563c3f5b078 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x5563c3f5b060 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x5563c3f5b040 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x5563c3f5b010 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5563c3c8e948
|       |       `-DeclRefExpr 0x5563c3f5aff0 <col:11> 'const String' lvalue ParmVar 0x5563c3f57c78 'x' 'const String &'
|       |-ReturnStmt 0x5563c3f5b200 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x5563c3f5b1e8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x5563c3f5b1b8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x5563c3f5b1a0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x5563c3f5b180 <col:13, col:29> 'String' (CXXTemporary 0x5563c3f5b180)
|       |         `-CallExpr 0x5563c3f5b130 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x5563c3f5b118 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x5563c3f5b090 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x5563c3f574b0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x5563c3f5b160 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x5563c3f5b0b0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x5563c3f5b0d0 <col:28> 'const String' lvalue ParmVar 0x5563c3f57c78 'x' 'const String &'
|       `-ReturnStmt 0x5563c3f5b2d8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x5563c3f5b2c0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x5563c3f5b290 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x5563c3f5b278 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x5563c3f5b258 <col:13, col:20> 'String' (CXXTemporary 0x5563c3f5b258)
|                 `-CXXTemporaryObjectExpr 0x5563c3f5b220 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x5563c3f57ed0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x5563c3f57dc0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x5563c3f57e38 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5563c3f59608 <col:71> 'bool' false
|-CXXRecordDecl 0x5563c3f57f80 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x5563c3f58278 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x5563c3f58210 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x5563c3f581b0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x5563c3f58170 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x5563c3c8b1e0 'String'
|       | `-CXXRecord 0x5563c3c8b150 'String'
|       |-BuiltinType 0x5563c395b370 'int'
|       `-DecayedType 0x5563c3f54db0 '__va_list_tag *' sugar
|         |-TypedefType 0x5563c3f54d80 'va_list' sugar
|         | |-Typedef 0x5563c3b7c290 'va_list'
|         | `-TypedefType 0x5563c3b7c240 '__gnuc_va_list' sugar
|         |   |-Typedef 0x5563c3ab3e68 '__gnuc_va_list'
|         |   `-TypedefType 0x5563c3ab3dd0 '__builtin_va_list' sugar
|         |     |-Typedef 0x5563c399cbd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x5563c399cb80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x5563c395c0c0 '__va_list_tag'
|         |         `-CXXRecord 0x5563c395c028 '__va_list_tag'
|         `-PointerType 0x5563c3b81b30 '__va_list_tag *'
|           `-RecordType 0x5563c395c0c0 '__va_list_tag'
|             `-CXXRecord 0x5563c395c028 '__va_list_tag'
|-EnumDecl 0x5563c3f582d0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x5563c3f583d0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5563c3f58930 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f583b0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x5563c3f58390 <col:16> 'int' 1
| |-EnumConstantDecl 0x5563c3f58460 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5563c3f58948 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f58440 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x5563c3f58420 <col:21> 'int' 2
| |-EnumConstantDecl 0x5563c3f584f0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5563c3f58960 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f584d0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x5563c3f584b0 <col:22> 'int' 4
| |-EnumConstantDecl 0x5563c3f58580 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5563c3f58978 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f58560 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x5563c3f58540 <col:17> 'int' 8
| |-EnumConstantDecl 0x5563c3f58610 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5563c3f58990 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f585f0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x5563c3f585d0 <col:22> 'int' 16
| |-EnumConstantDecl 0x5563c3f586a0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5563c3f589a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f58680 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5563c3f58660 <col:19> 'int' 32
| |-EnumConstantDecl 0x5563c3f58730 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5563c3f589c0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f58710 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x5563c3f586f0 <col:17> 'int' 64
| |-EnumConstantDecl 0x5563c3f587c0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5563c3f589d8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f587a0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x5563c3f58780 <col:14> 'int' 128
| |-EnumConstantDecl 0x5563c3f58850 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5563c3f589f0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f58830 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x5563c3f58810 <col:16> 'int' 256
| `-EnumConstantDecl 0x5563c3f588e0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x5563c3f58a08 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3f588c0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x5563c3f588a0 <col:12> 'int' 1024
|-CXXMethodDecl 0x5563c3f58c18 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x5563c3f58a30 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x5563c3f58ad0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x5563c3f58da0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x5563c3f58cd8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x5563c3f58e48 <line:580:3, col:10> col:3 private
|-FieldDecl 0x5563c3f58e88 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x5563c3f58ee8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x5563c3f58f60 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x5563c3f59360 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x5563c3f58fd8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x5563c3f59058 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x5563c3f590d8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x5563c3f59150 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x5563c3f591c8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x5563c3f59240 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x5563c3f59488 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x5563c3f59488
| `-ParmVarDecl 0x5563c3f59598 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x5563c3f5b698 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x5563c3f5b698
  `-ParmVarDecl 0x5563c3f5b7a8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3ebb2a0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5563c3ebb3f0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x5563c3ebb470 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x5563c3ebc268 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5563c3ebc268
| `-ParmVarDecl 0x5563c3ebc378 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x5563c3ebc418 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5563c3ebc418
| `-ParmVarDecl 0x5563c3ebc528 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x5563c3ebc598 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5563c3ebc598
|-CXXMethodDecl 0x5563c3ebce68 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5563c3ebce68
| `-ParmVarDecl 0x5563c3ebcf78 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x5563c3ebcfe8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5563c3ebcfe8
| `-ParmVarDecl 0x5563c3ebd0f8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x5563c4038de0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x5563c4038ec0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3ebb5a0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5563c3ebb6c8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x5563c3ebb750 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x5563c3ebc6c8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5563c3ebc6c8
| `-ParmVarDecl 0x5563c3ebc7d8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x5563c3ebc878 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5563c3ebc878
| `-ParmVarDecl 0x5563c3ebc988 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x5563c3ebc9f8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5563c3ebc9f8
|-CXXMethodDecl 0x5563c3ebd198 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5563c3ebd198
| `-ParmVarDecl 0x5563c3ebd2a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x5563c3ebd318 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5563c3ebd318
| `-ParmVarDecl 0x5563c3ebd428 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x5563c4038f20 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x5563c4039000 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3eb6c28 prev 0x5563c3eb60c0 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 referenced class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5563c3eb6d20 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x5563c3eb6db0 <col:17, col:23> col:17 public
|-EnumDecl 0x5563c3eb6dd8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x5563c3eb6ee0 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7c30 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb6ec0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x5563c3eb6ea0 <col:11> 'int' 1
| |-EnumConstantDecl 0x5563c3eb6f70 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7c48 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb6f50 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x5563c3eb6f30 <col:12> 'int' 2
| |-EnumConstantDecl 0x5563c3eb7000 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7c60 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb6fe0 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x5563c3eb6fc0 <col:17> 'int' 4
| |-EnumConstantDecl 0x5563c3eb7090 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7c78 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb7070 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x5563c3eb7050 <col:16> 'int' 0
| |-EnumConstantDecl 0x5563c3eb7120 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7c90 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb7100 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5563c3eb70e0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5563c3eb71b0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7ca8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb7190 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x5563c3eb7170 <col:10> 'int' 64
| |-EnumConstantDecl 0x5563c3eb7240 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7cc0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb7220 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x5563c3eb7200 <col:19> 'int' 128
| |-EnumConstantDecl 0x5563c3eb72d0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7cd8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb72b0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x5563c3eb7290 <col:20> 'int' 256
| |-EnumConstantDecl 0x5563c3eb7360 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7cf0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb7340 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x5563c3eb7320 <col:17> 'int' 512
| |-EnumConstantDecl 0x5563c3eb73f0 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7d08 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb73d0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x5563c3eb73b0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x5563c3eb7480 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7d20 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb7460 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x5563c3eb7440 <col:11> 'int' 2048
| |-EnumConstantDecl 0x5563c3eb7510 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7d38 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb74f0 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x5563c3eb74d0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x5563c3eb75a0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7d50 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb7580 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x5563c3eb7560 <col:13> 'int' 8192
| |-EnumConstantDecl 0x5563c3eb7630 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7d68 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb7610 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x5563c3eb75f0 <col:15> 'int' 16384
| |-EnumConstantDecl 0x5563c3eb7700 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x5563c3eb76e0 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x5563c3eb76c0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5563c3eb7680 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x5563c3eb76a0 <col:20> 'int' 26
| |-EnumConstantDecl 0x5563c3eb77d0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x5563c3eb77b0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x5563c3eb7790 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5563c3eb7750 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x5563c3eb7770 <col:27> 'int' 27
| |-EnumConstantDecl 0x5563c3eb7860 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7d80 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb7840 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x5563c3eb7820 <col:17> 'int' 28
| |-EnumConstantDecl 0x5563c3eb7930 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x5563c3eb7910 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x5563c3eb78f0 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5563c3eb78b0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x5563c3eb78d0 <col:18> 'int' EnumConstant 0x5563c3eb7860 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb79c0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7d98 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb79a0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x5563c3eb7980 <col:25> 'int' 8
| |-EnumConstantDecl 0x5563c3eb7a50 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5563c3eb7db0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb7a30 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x5563c3eb7a10 <col:26> 'int' 16
| `-EnumConstantDecl 0x5563c3eb7be0 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x5563c3eb7dc8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3eb7bc0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x5563c3eb7ba0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x5563c3eb7b60 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x5563c3eb7b20 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x5563c3eb7ae0 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x5563c3eb7aa0 <col:14> 'int' EnumConstant 0x5563c3eb6ee0 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x5563c3eb7ac0 <col:23> 'int' EnumConstant 0x5563c3eb6f70 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x5563c3eb7b00 <col:33> 'int' EnumConstant 0x5563c3eb7000 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x5563c3eb7b40 <col:48> 'int' EnumConstant 0x5563c3eb79c0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x5563c3eb7b80 <col:71> 'int' EnumConstant 0x5563c3eb7a50 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x5563c3eb7e28 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x5563c3ebd848 <col:39, line:64:5>
|   `-ReturnStmt 0x5563c3ebd838 <line:63:2, col:9>
|     `-MemberExpr 0x5563c3ebd808 <col:9> 'const String' lvalue ->_name 0x5563c3ebb250
|       `-CXXThisExpr 0x5563c3ebd7f8 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5563c3eb7ee8 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x5563c3ebd8c8 <col:35, line:71:5>
|   `-ReturnStmt 0x5563c3ebd8b8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x5563c3ebd8a0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5563c3ebd870 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5563c3ebb960
|         `-CXXThisExpr 0x5563c3ebd860 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5563c3eb8038 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x5563c3eb7fa0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x5563c3ebda48 <col:42, line:77:5>
|   `-ReturnStmt 0x5563c3ebda38 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x5563c3ebda20 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x5563c3ebd9f0 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x5563c3ebd950 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x5563c3ebd920 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x5563c3ebd8e0 <col:9> 'int' lvalue ParmVar 0x5563c3eb7fa0 'op' 'int'
|         | `-ImplicitCastExpr 0x5563c3ebd938 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x5563c3ebd900 <col:15> 'Handler::Flags' EnumConstant 0x5563c3eb6f70 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x5563c3ebd980 <col:25> 'void *const' lvalue ->_write_user_data 0x5563c3ebb900
|         | `-CXXThisExpr 0x5563c3ebd970 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x5563c3ebd9c0 <col:44> 'void *const' lvalue ->_read_user_data 0x5563c3ebb898
|           `-CXXThisExpr 0x5563c3ebd9b0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x5563c3eb8108 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x5563c3ebdac8 <col:41, line:82:5>
|   `-ReturnStmt 0x5563c3ebdab8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x5563c3ebdaa0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5563c3ebda70 <col:9> 'void *const' lvalue ->_read_user_data 0x5563c3ebb898
|         `-CXXThisExpr 0x5563c3ebda60 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5563c3eb81d0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x5563c3ebdb48 <col:42, line:87:5>
|   `-ReturnStmt 0x5563c3ebdb38 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x5563c3ebdb20 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5563c3ebdaf0 <col:9> 'void *const' lvalue ->_write_user_data 0x5563c3ebb900
|         `-CXXThisExpr 0x5563c3ebdae0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5563c3eb8298 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x5563c3eb8338 <col:52> "" ""
|-CXXMethodDecl 0x5563c3eb83d0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x5563c3eb8470 <col:52> "" ""
|-CXXMethodDecl 0x5563c3eb8500 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x5563c3ebdc38 <col:34, line:98:5>
|   `-ReturnStmt 0x5563c3ebdc28 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x5563c3ebdc10 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5563c3ebdbf0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5563c3ebdbc0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5563c3ebdb70 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5563c3ebb960
|         |   `-CXXThisExpr 0x5563c3ebdb60 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5563c3ebdbd8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5563c3ebdba0 <col:18> 'Handler::Flags' EnumConstant 0x5563c3eb6ee0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x5563c3eb85c0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x5563c3ebdd28 <col:36, line:104:5>
|   `-ReturnStmt 0x5563c3ebdd18 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x5563c3ebdd00 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5563c3ebdce0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5563c3ebdcb0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5563c3ebdc60 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5563c3ebb960
|         |   `-CXXThisExpr 0x5563c3ebdc50 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5563c3ebdcc8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5563c3ebdc90 <col:18> 'Handler::Flags' EnumConstant 0x5563c3eb7000 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x5563c3eb8680 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x5563c3ebdf08 <col:38, line:113:5>
|   `-ReturnStmt 0x5563c3ebdef8 <line:112:2, col:49>
|     `-BinaryOperator 0x5563c3ebded8 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x5563c3ebde80 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x5563c3ebde60 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5563c3ebde30 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5563c3ebdd50 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5563c3ebb960
|       |   |   `-CXXThisExpr 0x5563c3ebdd40 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x5563c3ebde48 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x5563c3ebde10 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x5563c3ebddf0 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x5563c3ebddc0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x5563c3ebdd80 <col:20> 'Handler::Flags' EnumConstant 0x5563c3eb6ee0 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x5563c3ebddd8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x5563c3ebdda0 <col:29> 'Handler::Flags' EnumConstant 0x5563c3eb7240 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x5563c3ebdec0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x5563c3ebdea0 <col:49> 'Handler::Flags' EnumConstant 0x5563c3eb6ee0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x5563c3eb8740 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x5563c3ebdff8 <col:34, line:118:5>
|   `-ReturnStmt 0x5563c3ebdfe8 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x5563c3ebdfd0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5563c3ebdfb0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5563c3ebdf80 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5563c3ebdf30 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5563c3ebb960
|         |   `-CXXThisExpr 0x5563c3ebdf20 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5563c3ebdf98 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5563c3ebdf60 <col:18> 'Handler::Flags' EnumConstant 0x5563c3eb6f70 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x5563c3eb8800 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x5563c3ebe1d8 <col:39, line:127:5>
|   `-ReturnStmt 0x5563c3ebe1c8 <line:126:2, col:51>
|     `-BinaryOperator 0x5563c3ebe1a8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x5563c3ebe150 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x5563c3ebe130 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5563c3ebe100 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5563c3ebe020 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5563c3ebb960
|       |   |   `-CXXThisExpr 0x5563c3ebe010 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x5563c3ebe118 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x5563c3ebe0e0 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x5563c3ebe0c0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x5563c3ebe090 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x5563c3ebe050 <col:20> 'Handler::Flags' EnumConstant 0x5563c3eb6f70 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x5563c3ebe0a8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x5563c3ebe070 <col:30> 'Handler::Flags' EnumConstant 0x5563c3eb72d0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x5563c3ebe190 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x5563c3ebe170 <col:51> 'Handler::Flags' EnumConstant 0x5563c3eb6f70 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x5563c3eb88c0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x5563c3ebe2e0 <col:33, line:132:5>
|   `-ReturnStmt 0x5563c3ebe2d0 <line:131:2, col:41>
|     `-BinaryOperator 0x5563c3ebe2b0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x5563c3ebe230 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x5563c3ebe200 <col:9> '<bound member function type>' ->read_visible 0x5563c3eb8680
|       |   `-CXXThisExpr 0x5563c3ebe1f0 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x5563c3ebe290 <col:27, col:41> 'bool'
|         `-MemberExpr 0x5563c3ebe260 <col:27> '<bound member function type>' ->write_visible 0x5563c3eb8800
|           `-CXXThisExpr 0x5563c3ebe250 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x5563c3eb8980 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x5563c3ebe418 <col:51, line:138:5>
|   `-ReturnStmt 0x5563c3ebe408 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x5563c3ebe3f0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x5563c3ebe3d0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x5563c3ebe388 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x5563c3ebe358 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x5563c3ebe308 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5563c3ebb960
|           |   `-CXXThisExpr 0x5563c3ebe2f8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x5563c3ebe370 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x5563c3ebe338 <col:26> 'Handler::Flags' EnumConstant 0x5563c3eb7120 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x5563c3eb8a40 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x5563c3ebe528 <col:50, line:144:5>
|   `-ReturnStmt 0x5563c3ebe518 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x5563c3ebe500 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x5563c3ebe4e0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x5563c3ebe4c0 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x5563c3ebe490 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x5563c3ebe440 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5563c3ebb960
|           |   `-CXXThisExpr 0x5563c3ebe430 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x5563c3ebe4a8 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x5563c3ebe470 <col:26> 'Handler::Flags' EnumConstant 0x5563c3eb7120 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x5563c3eb8b00 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x5563c3ebe618 <col:29, line:166:5>
|   `-ReturnStmt 0x5563c3ebe608 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x5563c3ebe5f0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5563c3ebe5d0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5563c3ebe5a0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5563c3ebe550 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5563c3ebb960
|         |   `-CXXThisExpr 0x5563c3ebe540 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5563c3ebe5b8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5563c3ebe580 <col:18> 'Handler::Flags' EnumConstant 0x5563c3eb71b0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x5563c3eb8d88 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x5563c3eb8bb0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x5563c3eb8c28 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x5563c3eb8ca0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3eb8f98 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x5563c3eb8e50 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x5563c3eb8ec8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x5563c3ebd730 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x5563c3ebd710 <col:62> 'int' 0
| `-CompoundStmt 0x5563c3ebe8b8 <col:71, line:188:5>
|   `-ReturnStmt 0x5563c3ebe8a8 <line:187:2, col:36>
|     `-ExprWithCleanups 0x5563c3ebe890 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x5563c3ebe860 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5563c3ebe848 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5563c3ebe828 <col:9, col:36> 'String' (CXXTemporary 0x5563c3ebe828)
|             `-CXXMemberCallExpr 0x5563c3ebe788 <col:9, col:36> 'String'
|               |-MemberExpr 0x5563c3ebe758 <col:9> '<bound member function type>' ->call_read 0x5563c3eb8d88
|               | `-CXXThisExpr 0x5563c3ebe748 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x5563c3ebe7c0 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x5563c3ebe6a0 <col:19> 'Element *' lvalue ParmVar 0x5563c3eb8e50 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x5563c3ebe7f0 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x5563c3ebe7d8 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x5563c3ebe708 <col:22, col:29> 'String' (CXXTemporary 0x5563c3ebe708)
|               |     `-CXXTemporaryObjectExpr 0x5563c3ebe6d0 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x5563c3ebe808 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x5563c3ebe728 <col:32> 'ErrorHandler *' lvalue ParmVar 0x5563c3eb8ec8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3eb9230 <line:198:5, col:73> col:9 used call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x5563c3eb9058 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x5563c3eb90d0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5563c3eb9148 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3eb93b8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x5563c3eb92f8 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x5563c3eb95e8 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x5563c3eb9470 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x5563c3eb94e8 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x5563c3eb96e8 <line:223:5, line:225:5> line:223:34 used blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x5563c3ebe918 <col:50, line:225:5>
|   `-ReturnStmt 0x5563c3ebe908 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x5563c3ebe8f0 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3ebe8d0 <col:9> 'const Handler *' lvalue Var 0x5563c3ebba90 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x5563c3eb9788 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x5563c3eb9890 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba430 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9870 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x5563c3eb9850 <col:11> 'Handler::Flags' EnumConstant 0x5563c3eb6ee0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb9920 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba448 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9900 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x5563c3eb98e0 <col:12> 'Handler::Flags' EnumConstant 0x5563c3eb6f70 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb99b0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba460 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9990 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x5563c3eb9970 <col:17> 'Handler::Flags' EnumConstant 0x5563c3eb7000 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb9a40 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba478 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9a20 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x5563c3eb9a00 <col:16> 'Handler::Flags' EnumConstant 0x5563c3eb7090 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb9ad0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba490 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9ab0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x5563c3eb9a90 <col:19> 'Handler::Flags' EnumConstant 0x5563c3eb7120 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb9b60 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba4a8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9b40 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x5563c3eb9b20 <col:10> 'Handler::Flags' EnumConstant 0x5563c3eb71b0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb9bf0 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba4c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9bd0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x5563c3eb9bb0 <col:19> 'Handler::Flags' EnumConstant 0x5563c3eb7240 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb9c80 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba4d8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9c60 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x5563c3eb9c40 <col:20> 'Handler::Flags' EnumConstant 0x5563c3eb72d0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb9d10 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba4f0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9cf0 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x5563c3eb9cd0 <col:17> 'Handler::Flags' EnumConstant 0x5563c3eb7360 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb9da0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba508 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9d80 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x5563c3eb9d60 <col:15> 'Handler::Flags' EnumConstant 0x5563c3eb73f0 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb9e30 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba520 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9e10 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x5563c3eb9df0 <col:11> 'Handler::Flags' EnumConstant 0x5563c3eb7480 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb9ec0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba538 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9ea0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x5563c3eb9e80 <col:16> 'Handler::Flags' EnumConstant 0x5563c3eb7510 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb9f50 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba550 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9f30 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x5563c3eb9f10 <col:13> 'Handler::Flags' EnumConstant 0x5563c3eb75a0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eb9fe0 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba568 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eb9fc0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x5563c3eb9fa0 <col:15> 'Handler::Flags' EnumConstant 0x5563c3eb7630 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eba070 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba580 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eba050 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x5563c3eba030 <col:20> 'Handler::Flags' EnumConstant 0x5563c3eb7700 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eba100 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba598 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eba0e0 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x5563c3eba0c0 <col:27> 'Handler::Flags' EnumConstant 0x5563c3eb77d0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eba190 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba5b0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eba170 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x5563c3eba150 <col:22> 'Handler::Flags' EnumConstant 0x5563c3eb7860 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eba220 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba5c8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eba200 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x5563c3eba1e0 <col:18> 'Handler::Flags' EnumConstant 0x5563c3eb7930 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eba2b0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba5e0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eba290 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x5563c3eba270 <col:25> 'Handler::Flags' EnumConstant 0x5563c3eb79c0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eba340 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5563c3eba5f8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eba320 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x5563c3eba300 <col:26> 'Handler::Flags' EnumConstant 0x5563c3eb7a50 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x5563c3eba3e0 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x5563c3eba610 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3eba3c0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x5563c3eba390 <col:20> 'Handler::Flags' EnumConstant 0x5563c3eb7be0 'f_special' 'Handler::Flags'
|-EnumDecl 0x5563c3eba628 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x5563c3eba730 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5563c3ebac90 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eba710 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x5563c3eba6f0 <col:12> 'Handler::Flags' EnumConstant 0x5563c3eb6ee0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eba7c0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5563c3ebaca8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eba7a0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x5563c3eba780 <col:13> 'Handler::Flags' EnumConstant 0x5563c3eb6f70 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eba850 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5563c3ebacc0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eba830 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x5563c3eba810 <col:15> 'Handler::Flags' EnumConstant 0x5563c3eb7000 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eba8e0 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5563c3ebacd8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eba8c0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x5563c3eba8a0 <col:8> 'Handler::Flags' EnumConstant 0x5563c3eb71b0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3eba970 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5563c3ebacf0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eba950 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x5563c3eba930 <col:9> 'Handler::Flags' EnumConstant 0x5563c3eb7480 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3ebaa00 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5563c3ebad08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3eba9e0 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x5563c3eba9c0 <col:14> 'Handler::Flags' EnumConstant 0x5563c3eb7510 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3ebaa90 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5563c3ebad20 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ebaa70 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x5563c3ebaa50 <col:11> 'Handler::Flags' EnumConstant 0x5563c3eb75a0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3ebab20 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5563c3ebad38 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ebab00 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x5563c3ebaae0 <col:13> 'Handler::Flags' EnumConstant 0x5563c3eb7630 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x5563c3ebabb0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5563c3ebad50 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ebab90 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x5563c3ebab70 <col:20> 'Handler::Flags' EnumConstant 0x5563c3eb7860 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x5563c3ebac40 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x5563c3ebad68 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3ebac20 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x5563c3ebac00 <col:16> 'Handler::Flags' EnumConstant 0x5563c3eb7930 'f_user0' 'Handler::Flags'
|-EnumDecl 0x5563c3ebad80 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x5563c3ebae40 <col:25> "" ""
| |-EnumConstantDecl 0x5563c3ebaef0 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x5563c3ebafd0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ebaed0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x5563c3ebaeb0 <col:14> 'Handler::Flags' EnumConstant 0x5563c3eb7090 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x5563c3ebaf80 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x5563c3ebafe8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3ebaf60 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x5563c3ebaf40 <col:17> 'Handler::Flags' EnumConstant 0x5563c3eb7120 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x5563c3ebb168 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x5563c3ebb010 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x5563c3ebb090 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x5563c3ebefd8 <col:70, line:284:5>
|   |-ParenExpr 0x5563c3ebedf8 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x5563c3ebedc8 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ebeaf8 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ebeac8 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x5563c3ebea70 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x5563c3ebea50 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x5563c3ebea20 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x5563c3ebe940 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5563c3ebb960
|   |   |   |   |   `-CXXThisExpr 0x5563c3ebe930 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x5563c3ebea38 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x5563c3ebea00 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x5563c3ebe9e0 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x5563c3ebe9b0 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x5563c3ebe970 <col:34> 'Handler::Flags' EnumConstant 0x5563c3eb6ee0 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x5563c3ebe9c8 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x5563c3ebe990 <col:43> 'Handler::Flags' EnumConstant 0x5563c3eb79c0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x5563c3ebeab0 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x5563c3ebea90 <col:69> 'Handler::Flags' EnumConstant 0x5563c3eb6ee0 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x5563c3ebeb58 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ebeb38 <col:85> 'int' 0
|   |   `-CallExpr 0x5563c3ebed28 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ebed10 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ebecf0 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ebed68 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ebebc8 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x5563c3ebed80 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ebec18 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x5563c3ebed98 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ebec50 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x5563c3ebedb0 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ebecd8 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ebecc0 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ebec70 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x5563c3ebefc8 <line:283:2, col:38>
|     `-ExprWithCleanups 0x5563c3ebefb0 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x5563c3ebef80 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5563c3ebef68 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5563c3ebef48 <col:9, col:38> 'String' (CXXTemporary 0x5563c3ebef48)
|             `-CallExpr 0x5563c3ebeee0 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x5563c3ebeec8 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x5563c3ebee58 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x5563c3ebb470
|               |   `-MemberExpr 0x5563c3ebee28 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x5563c3ebb538
|               |     `-CXXThisExpr 0x5563c3ebee18 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x5563c3ebef10 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x5563c3ebee88 <col:22> 'Element *' lvalue ParmVar 0x5563c3ebb010 'e' 'Element *'
|               `-ImplicitCastExpr 0x5563c3ebef28 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x5563c3ebeea8 <col:25> 'void *' lvalue ParmVar 0x5563c3ebb090 'new_user_data' 'void *'
|-AccessSpecDecl 0x5563c3ebb218 <line:287:3, col:10> col:3 private
|-FieldDecl 0x5563c3ebb250 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x5563c3ebb2a0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5563c3ebb3f0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x5563c3ebb470 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x5563c3ebc268 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5563c3ebc268
| | `-ParmVarDecl 0x5563c3ebc378 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x5563c3ebc418 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5563c3ebc418
| | `-ParmVarDecl 0x5563c3ebc528 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x5563c3ebc598 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5563c3ebc598
| |-CXXMethodDecl 0x5563c3ebce68 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5563c3ebce68
| | `-ParmVarDecl 0x5563c3ebcf78 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x5563c3ebcfe8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5563c3ebcfe8
| | `-ParmVarDecl 0x5563c3ebd0f8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x5563c4038de0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5563c4038ec0 <col:5>
|-FieldDecl 0x5563c3ebb538 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x5563c3ebb5a0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5563c3ebb6c8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x5563c3ebb750 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x5563c3ebc6c8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5563c3ebc6c8
| | `-ParmVarDecl 0x5563c3ebc7d8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x5563c3ebc878 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5563c3ebc878
| | `-ParmVarDecl 0x5563c3ebc988 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x5563c3ebc9f8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5563c3ebc9f8
| |-CXXMethodDecl 0x5563c3ebd198 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5563c3ebd198
| | `-ParmVarDecl 0x5563c3ebd2a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x5563c3ebd318 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5563c3ebd318
| | `-ParmVarDecl 0x5563c3ebd428 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x5563c4038f20 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5563c4039000 <col:5>
|-FieldDecl 0x5563c3ebb818 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x5563c3ebb898 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x5563c3ebb900 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x5563c3ebb960 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x5563c3ebb9c8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x5563c3ebba30 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x5563c3ebba90 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x5563c3ebbbb0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x5563c3ebbb08 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x5563c3ebd7e0 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5563c3ebd7c8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x5563c3ebd7b0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5563c3ebd790 <col:30, col:37> 'String' (CXXTemporary 0x5563c3ebd790)
|           `-CXXTemporaryObjectExpr 0x5563c3ebd758 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x5563c3ebbd58 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x5563c3ebbc98 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x5563c3ebbed8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x5563c3ebbe10 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x5563c3ebc098 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x5563c3ebc0d8 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x5563c3ebc0d8
| `-ParmVarDecl 0x5563c3ebc1b8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x5563c3ebcb08 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x5563c3ebcb08
| `-ParmVarDecl 0x5563c3ebcc18 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x5563c3ebccb8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x5563c3ebccb8
| `-ParmVarDecl 0x5563c3ebcdc8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x5563c3ebd498 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x5563c3ebd498
| `-ParmVarDecl 0x5563c3ebd5a8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x5563c3ebd630 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x5563c3ebd630

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c401f848 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x5563c401fa58 prev 0x5563c401f848 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5563c40222e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5563c4022290 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x5563c4022270 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x5563c4022120 'type'
|     `-SubstTemplateTypeParmType 0x5563c3f868c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5563c3c24020 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c23fc8 'T'
|       `-RecordType 0x5563c3f86410 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5563c3f86328 'sized_array_memory'
|-FieldDecl 0x5563c40223e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5563c4022430 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5563c4022468 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x5563c401faf0 'void *' sugar
|   |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|   `-PointerType 0x5563c395bad0 'void *'
|     `-BuiltinType 0x5563c395b2d0 'void'
|-TypedefDecl 0x5563c40224f8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x5563c40224c0 'void *&'
|   `-SubstTemplateTypeParmType 0x5563c401faf0 'void *' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-PointerType 0x5563c395bad0 'void *'
|       `-BuiltinType 0x5563c395b2d0 'void'
|-TypedefDecl 0x5563c40225b8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x5563c4022580 'void *const &'
|   `-QualType 0x5563c401faf1 'void *const' const
|     `-SubstTemplateTypeParmType 0x5563c401faf0 'void *' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-PointerType 0x5563c395bad0 'void *'
|         `-BuiltinType 0x5563c395b2d0 'void'
|-TypedefDecl 0x5563c4022648 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x5563c4022610 'void **'
|   `-SubstTemplateTypeParmType 0x5563c401faf0 'void *' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-PointerType 0x5563c395bad0 'void *'
|       `-BuiltinType 0x5563c395b2d0 'void'
|-TypedefDecl 0x5563c40226d8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x5563c40226a0 'void *const *'
|   `-QualType 0x5563c401faf1 'void *const' const
|     `-SubstTemplateTypeParmType 0x5563c401faf0 'void *' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-PointerType 0x5563c395bad0 'void *'
|         `-BuiltinType 0x5563c395b2d0 'void'
|-TypedefDecl 0x5563c40232c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x5563c4023270 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x5563c4023250 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x5563c40231e0 'type'
|     `-SubstTemplateTypeParmType 0x5563c4022fa0 'void *' sugar
|       |-TemplateTypeParmType 0x5563c3c2ee20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c2edd0 'T'
|       `-PointerType 0x5563c395bad0 'void *'
|         `-BuiltinType 0x5563c395b2d0 'void'
|-TypedefDecl 0x5563c4023328 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x5563c4022580 'void *const &'
|   `-QualType 0x5563c401faf1 'void *const' const
|     `-SubstTemplateTypeParmType 0x5563c401faf0 'void *' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-PointerType 0x5563c395bad0 'void *'
|         `-BuiltinType 0x5563c395b2d0 'void'
|-TypedefDecl 0x5563c4023380 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c40233e8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x5563c4022610 'void **'
|   `-SubstTemplateTypeParmType 0x5563c401faf0 'void *' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-PointerType 0x5563c395bad0 'void *'
|       `-BuiltinType 0x5563c395b2d0 'void'
|-TypedefDecl 0x5563c4023450 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x5563c40226a0 'void *const *'
|   `-QualType 0x5563c401faf1 'void *const' const
|     `-SubstTemplateTypeParmType 0x5563c401faf0 'void *' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-PointerType 0x5563c395bad0 'void *'
|         `-BuiltinType 0x5563c395b2d0 'void'
|-EnumDecl 0x5563c40234a8 <line:134:5> col:5
| `-EnumConstantDecl 0x5563c40235a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5563c4023580 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5563c3c5d398 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5563c3c5d370 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5563c3c5d350 <col:40> 'int' 1
|-CXXConstructorDecl 0x5563c4023628 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5563c4023878 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c40236e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c4023780 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x5563c4023b38 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x5563c4023a20 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x5563c4023df8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x5563c4023ce0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x5563c4024140 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x5563c4024020 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x5563c4024450 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x5563c4024330 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x5563c4024740 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c4024588 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c4024600 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5563c4024898 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x5563c4024978 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c40249d0 <col:30> Inherited
|-CXXMethodDecl 0x5563c4024a18 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x5563c4024ac8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4024b20 <col:30> Inherited
|-CXXMethodDecl 0x5563c4024be8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x5563c4024c98 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4024cf0 <col:30> Inherited
|-CXXMethodDecl 0x5563c4024d38 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x5563c4024de8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4024e40 <col:30> Inherited
|-CXXMethodDecl 0x5563c4024e88 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x5563c4024f38 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c4024f90 <col:30> Inherited
|-CXXMethodDecl 0x5563c4024fd8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x5563c4025088 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c40250e0 <col:30> Inherited
|-CXXMethodDecl 0x5563c4025108 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c40251b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c4025268 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5563c4025428 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c4025318 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c4025390 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5563c4025578 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5563c40254e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c4025728 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x5563c4025630 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c40257e0 <col:20>
| `-OptimizeNoneAttr 0x5563c4025838 <col:30>
|-CXXMethodDecl 0x5563c4025958 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5563c4025860 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c4025a10 <col:20>
| `-OptimizeNoneAttr 0x5563c4025a68 <col:30>
|-CXXMethodDecl 0x5563c4025b20 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c4025a90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c4025c68 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c4025bd8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c4025d98 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x5563c4025ec8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x5563c4025f98 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x5563c4026068 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x5563c40261a8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c4026118 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c40262f0 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c4026260 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c4026438 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5563c40263a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c40264f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5563c40265f0 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5563c4026560 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c40266a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5563c4026768 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x5563c4026868 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x5563c40269e8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c4026928 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x5563c40271a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5563c4026aa0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x5563c4027108 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x5563c4027008 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x5563c4027288 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c40273d8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c4027348 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5563c4027490 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5563c40276d8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c4027550 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x5563c40275c8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5563c4027898 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x5563c40277a8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x5563c4027ae8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x5563c4027960 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x5563c40279d8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x5563c4027ba8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c4027e08 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x5563c4027d10 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x5563c4027ed8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5563c4027ed8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c40280d0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5563c40281e8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x5563c4028278 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x5563c4028380 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x5563c40283d0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c4028360 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x5563c4028340 <col:27> 'int' 4096
|-FieldDecl 0x5563c40283f8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x5563c4028460 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x5563c4028658 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x5563c40286e8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x5563c40288a8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x5563c4028748 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x5563c40287c0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x5563c40283f8 'name' 'String'
| | `-CXXConstructExpr 0x5563c4033da8 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x5563c4033d68 <col:20> 'const String' lvalue ParmVar 0x5563c4028748 'n' 'const String &'
| |-CXXCtorInitializer Field 0x5563c4028460 'nsig' 'int'
| | `-IntegerLiteral 0x5563c4033e00 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x5563c4028658 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x5563c4033ee8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5563c40286e8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x5563c4033ea8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x5563c4033e68 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x5563c40287c0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x5563c4034178 <col:42, line:289:9>
|   `-CallExpr 0x5563c4034128 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x5563c4034110 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5563c40340f0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x5563c3bbe6d8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x5563c4034160 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x5563c4034038 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x5563c4034018 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x5563c4034000 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5563c4033fb0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x5563c4028658
|     |     |   `-CXXThisExpr 0x5563c4033fa0 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x5563c4033fe0 <col:25> 'int' 0
|     |-IntegerLiteral 0x5563c4034050 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x5563c40340d0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x5563c40340b0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x5563c4034080 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x5563c4028658 non_odr_use_unevaluated
|           `-CXXThisExpr 0x5563c4034070 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x5563c4028988 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x5563c4028988
| `-ParmVarDecl 0x5563c4028a98 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x5563c4028b38 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5563c4028b38
| `-ParmVarDecl 0x5563c4028c48 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x5563c4028ce8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x5563c4028ce8
| `-ParmVarDecl 0x5563c4028df8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x5563c4028e68 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5563c4028e68
| `-ParmVarDecl 0x5563c4028f78 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x5563c4029000 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x5563c4029000

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3fe56b0 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5563c3fe57c8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x5563c3fe5858 <col:21, col:27> col:21 public
|-EnumDecl 0x5563c3fe5880 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x5563c3fe5998 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x5563c3fe5978 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5563c3fe5960 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5563c3fe5940 <col:32> 'int' 1
| `-EnumConstantDecl 0x5563c3fe5a40 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x5563c3fe5a20 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5563c3fe5a08 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5563c3fe59e8 <col:53> 'int' 1000
|-CXXConstructorDecl 0x5563c3fe5af0 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x5563c3fe6028 <col:19, col:21>
|-CXXDestructorDecl 0x5563c3fe5be0 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x5563c3fe6038 <col:28, col:30>
|-CXXMethodDecl 0x5563c3fe5da0 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x5563c3fe5cd0 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x5563c3fe5ea8 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x5563c3fe5ea8
  `-ParmVarDecl 0x5563c3fe5fb8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3fe65e0 prev 0x5563c3fb87b0 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5563c3fe66d8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x5563c3fe6768 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x5563c3fe67d8 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5563c3fe6898 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x5563c3fe6958 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x5563c3fe6a18 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x5563c3fe6ad8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x5563c3fe6b78 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x5563c3fe6cd8 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x5563c3fe6cb8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x5563c3fe6c98 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x5563c3fe6c60 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x5563c3fe6c40 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x5563c3fe6c78 <col:42> 'int' 1
|-CXXMethodDecl 0x5563c3fe6d78 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x5563c3fe6ee8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x5563c3fe6e28 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x5563c3fe7030 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x5563c3fe6fa0 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x5563c3fe70f8 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x5563c3fe7420 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x5563c3fe74e8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x5563c3fe7668 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x5563c3fe75a0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x5563c3fe7730 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x5563c3fe7938 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x5563c3fe77e0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x5563c3fe7860 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x5563c3fe7a90 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x5563c3fe7a00 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x5563c3fe7be0 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x5563c3fe7b50 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x5563c3fe7d30 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x5563c3fe7ca0 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x5563c3fe7e80 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x5563c3fe7df0 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x5563c3fe8050 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x5563c3fe7f40 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x5563c3fe7fb8 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x5563c3fe8258 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x5563c3fe8110 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x5563c3fe8188 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x5563c40309f0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x5563c40309d0 <col:60> 'int' 0
|-CXXMethodDecl 0x5563c3fe84e8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x5563c3fe8318 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x5563c3fe8390 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x5563c3fe8408 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x5563c4030a28 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x5563c4030a08 <col:76> 'int' 0
|-CXXMethodDecl 0x5563c3fe8788 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x5563c3fe85b0 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x5563c3fe8628 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x5563c3fe86a0 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x5563c4030a60 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x5563c4030a40 <col:84> 'int' 0
|-CXXMethodDecl 0x5563c3fe8ae0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5563c3fe8850 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x5563c3fe88c8 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x5563c3fe8948 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x5563c3fe89e8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5563c3fe8d90 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5563c3fe8bb0 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x5563c3fe8c30 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x5563c3fe8ca8 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5563c3fe8ff8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5563c3fe8e58 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x5563c3fe8ed8 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x5563c3fe8f50 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5563c3fe94b0 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x5563c3fe90c0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x5563c3fe9140 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x5563c3fe91e8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x5563c3fe9360 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x5563c3fe9570 <col:115> "" ""
|-CXXMethodDecl 0x5563c3fe9930 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x5563c3fe95f0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x5563c3fe9670 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x5563c3fe96e8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x5563c3fe9830 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x5563c3fe99f0 <col:113> "" ""
|-CXXMethodDecl 0x5563c3fe9b40 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x5563c3fe9a78 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x5563c3fe9d10 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x5563c3fe9c00 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x5563c3fe9c78 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x5563c3fe9f18 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x5563c3fe9dd0 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x5563c3fe9e48 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x5563c3fea318 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x5563c3fe9fd8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x5563c3fea050 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x5563c3fea0c8 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5563c3fea148 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x5563c3fea1c0 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5563c4030a98 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5563c4030a78 <col:137> 'int' 0
|-CXXMethodDecl 0x5563c3fea728 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x5563c3fea3f0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x5563c3fea468 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x5563c3fea4e0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5563c3fea560 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x5563c3fea5d8 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5563c4030ad0 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5563c4030ab0 <col:139> 'int' 0
|-CXXMethodDecl 0x5563c3feabd8 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x5563c3fea800 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x5563c3fea878 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x5563c3fea8f0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5563c3fea968 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5563c3fea9e8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x5563c4030b08 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x5563c4030ae8 <col:133> 'int' 0
| `-ParmVarDecl 0x5563c3feaa68 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x5563c4030b40 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x5563c4030b20 <col:160> 'int' 0
|-CXXMethodDecl 0x5563c3feaf70 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5563c3feacb8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x5563c3fead30 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x5563c3feada8 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5563c3feae20 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5563c4030b78 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5563c4030b58 <col:116> 'int' 0
|-EnumDecl 0x5563c3feb030 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x5563c3feb130 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x5563c3feb180 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3feb110 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x5563c3feb0f0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x5563c3feb300 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x5563c3feb1a8 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x5563c3feb220 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x5563c3fec308 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x5563c3fec1b0 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x5563c3fec230 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x5563c3fec638 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x5563c3fec3c8 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x5563c3fec520 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x5563c3fec7c0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x5563c3fec6f8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x5563c3fec970 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x5563c3fec878 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x5563c3fecb80 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x5563c3feca28 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x5563c3fecaa8 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x5563c3fecd08 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x5563c3fecc40 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x5563c3fece28 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x5563c3fecf18 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x5563c3fed088 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x5563c3fecfc8 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x5563c3fed210 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x5563c3fed140 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x5563c3fed418 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x5563c3fed2c8 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x5563c3fed348 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x5563c3fed548 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x5563c3fed638 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x5563c3fed6f8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x5563c3fed8f8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5563c3fed7a8 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x5563c3fed820 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5563c4030c28 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5563c4030c10 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x5563c4030bf8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5563c4030bd8 <col:58, col:65> 'String' (CXXTemporary 0x5563c4030bd8)
|           `-CXXTemporaryObjectExpr 0x5563c4030ba0 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x5563c3fedac8 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5563c3fed9b8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x5563c3feda30 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5563c4030cd8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5563c4030cc0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x5563c4030ca8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5563c4030c88 <col:71, col:78> 'String' (CXXTemporary 0x5563c4030c88)
|           `-CXXTemporaryObjectExpr 0x5563c4030c50 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x5563c3fedc98 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5563c3fedb88 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x5563c3fedc00 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5563c4030d88 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5563c4030d70 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x5563c4030d58 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5563c4030d38 <col:71, col:78> 'String' (CXXTemporary 0x5563c4030d38)
|           `-CXXTemporaryObjectExpr 0x5563c4030d00 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x5563c3fede68 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5563c3fedd58 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x5563c3feddd0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5563c4030e38 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5563c4030e20 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x5563c4030e08 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5563c4030de8 <col:70, col:77> 'String' (CXXTemporary 0x5563c4030de8)
|           `-CXXTemporaryObjectExpr 0x5563c4030db0 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x5563c3fedfe8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x5563c3fedf28 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x5563c3fee208 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x5563c3fee0a0 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x5563c3fee118 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x5563c3fee308 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x5563c3fee308
|-CXXMethodDecl 0x5563c3fee410 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x5563c3fee4d0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5563c3fee590 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x5563c3fee650 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x5563c3fee848 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x5563c3fee700 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x5563c3fee778 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x5563c3feec00 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x5563c3fee908 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x5563c3fee980 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x5563c3fee9f8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x5563c3feea70 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x5563c3feeaf0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x5563c3feef60 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x5563c3feece0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x5563c3feed60 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x5563c3feede0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x5563c3feee60 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x5563c3fef040 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x5563c3fef180 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x5563c3fef0f0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x5563c3fef2d0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5563c3fef238 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3fef4d8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x5563c3fef388 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x5563c3fef400 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3fef628 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x5563c3fef598 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3fef770 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x5563c3fef6e0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x5563c3fef9b0 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x5563c3fef830 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5563c3fef8d8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x5563c3fefb38 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x5563c3fefa70 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x5563c3fefbe0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5563c3fefcf8 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x5563c3fefda0 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x5563c3fefe08 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x5563c3fefec0 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x5563c4030e60 <col:16, line:150:9>
| |-CXXConstructorDecl 0x5563c3ff0098 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x5563c3feff80 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x5563c3ff0000 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x5563c3fefda0 'idx' 'int'
| | | `-ImplicitCastExpr 0x5563c4030eb0 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x5563c4030e70 <col:19> 'int' lvalue ParmVar 0x5563c3feff80 'i' 'int'
| | |-CXXCtorInitializer Field 0x5563c3fefe08 'port' 'int'
| | | `-ImplicitCastExpr 0x5563c4030f30 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x5563c4030ef0 <col:28> 'int' lvalue ParmVar 0x5563c3ff0000 'p' 'int'
| | `-CompoundStmt 0x5563c4030f80 <col:31, line:153:9>
| |-CXXMethodDecl 0x5563c3ff0278 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5563c3ff0188 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x5563c4031180 <col:46, line:157:9>
| |   `-ReturnStmt 0x5563c4031170 <line:156:13, col:46>
| |     `-BinaryOperator 0x5563c4031150 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x5563c4031050 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x5563c4031020 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5563c4030fa0 <col:20> 'const int' lvalue ->idx 0x5563c3fefda0
| |       | |   `-CXXThisExpr 0x5563c4030f90 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5563c4031038 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5563c4030ff0 <col:27, col:29> 'const int' lvalue .idx 0x5563c3fefda0
| |       |     `-DeclRefExpr 0x5563c4030fd0 <col:27> 'const Router::Port' lvalue ParmVar 0x5563c3ff0188 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x5563c4031130 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x5563c4031100 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x5563c4031080 <col:36> 'const int' lvalue ->port 0x5563c3fefe08
| |         |   `-CXXThisExpr 0x5563c4031070 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x5563c4031118 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x5563c40310d0 <col:44, col:46> 'const int' lvalue .port 0x5563c3fefe08
| |             `-DeclRefExpr 0x5563c40310b0 <col:44> 'const Router::Port' lvalue ParmVar 0x5563c3ff0188 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5563c3ff03c0 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5563c3ff0330 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x5563c4031388 <col:46, line:160:9>
| |   `-ReturnStmt 0x5563c4031378 <line:159:13, col:46>
| |     `-BinaryOperator 0x5563c4031358 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x5563c4031258 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x5563c4031228 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5563c40311a8 <col:20> 'const int' lvalue ->idx 0x5563c3fefda0
| |       | |   `-CXXThisExpr 0x5563c4031198 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5563c4031240 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5563c40311f8 <col:27, col:29> 'const int' lvalue .idx 0x5563c3fefda0
| |       |     `-DeclRefExpr 0x5563c40311d8 <col:27> 'const Router::Port' lvalue ParmVar 0x5563c3ff0330 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x5563c4031338 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x5563c4031308 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x5563c4031288 <col:36> 'const int' lvalue ->port 0x5563c3fefe08
| |         |   `-CXXThisExpr 0x5563c4031278 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x5563c4031320 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x5563c40312d8 <col:44, col:46> 'const int' lvalue .port 0x5563c3fefe08
| |             `-DeclRefExpr 0x5563c40312b8 <col:44> 'const Router::Port' lvalue ParmVar 0x5563c3ff0330 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5563c3ff0508 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5563c3ff0478 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x5563c40316b0 <col:45, line:163:9>
| |   `-ReturnStmt 0x5563c40316a0 <line:162:13, col:65>
| |     `-BinaryOperator 0x5563c4031680 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x5563c4031460 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x5563c4031430 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5563c40313b0 <col:20> 'const int' lvalue ->idx 0x5563c3fefda0
| |       | |   `-CXXThisExpr 0x5563c40313a0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5563c4031448 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5563c4031400 <col:26, col:28> 'const int' lvalue .idx 0x5563c3fefda0
| |       |     `-DeclRefExpr 0x5563c40313e0 <col:26> 'const Router::Port' lvalue ParmVar 0x5563c3ff0478 'x' 'const Router::Port &'
| |       `-ParenExpr 0x5563c4031660 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x5563c4031640 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x5563c4031540 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x5563c4031510 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x5563c4031490 <col:36> 'const int' lvalue ->idx 0x5563c3fefda0
| |           | |   `-CXXThisExpr 0x5563c4031480 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x5563c4031528 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x5563c40314e0 <col:43, col:45> 'const int' lvalue .idx 0x5563c3fefda0
| |           |     `-DeclRefExpr 0x5563c40314c0 <col:43> 'const Router::Port' lvalue ParmVar 0x5563c3ff0478 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x5563c4031620 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x5563c40315f0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x5563c4031570 <col:52> 'const int' lvalue ->port 0x5563c3fefe08
| |             |   `-CXXThisExpr 0x5563c4031560 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x5563c4031608 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x5563c40315c0 <col:59, col:61> 'const int' lvalue .port 0x5563c3fefe08
| |                 `-DeclRefExpr 0x5563c40315a0 <col:59> 'const Router::Port' lvalue ParmVar 0x5563c3ff0478 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5563c3ff0650 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5563c3ff05c0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x5563c40319d8 <col:46, line:166:9>
| |   `-ReturnStmt 0x5563c40319c8 <line:165:13, col:66>
| |     `-BinaryOperator 0x5563c40319a8 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x5563c4031788 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x5563c4031758 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5563c40316d8 <col:20> 'const int' lvalue ->idx 0x5563c3fefda0
| |       | |   `-CXXThisExpr 0x5563c40316c8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5563c4031770 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5563c4031728 <col:26, col:28> 'const int' lvalue .idx 0x5563c3fefda0
| |       |     `-DeclRefExpr 0x5563c4031708 <col:26> 'const Router::Port' lvalue ParmVar 0x5563c3ff05c0 'x' 'const Router::Port &'
| |       `-ParenExpr 0x5563c4031988 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x5563c4031968 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x5563c4031868 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x5563c4031838 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x5563c40317b8 <col:36> 'const int' lvalue ->idx 0x5563c3fefda0
| |           | |   `-CXXThisExpr 0x5563c40317a8 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x5563c4031850 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x5563c4031808 <col:43, col:45> 'const int' lvalue .idx 0x5563c3fefda0
| |           |     `-DeclRefExpr 0x5563c40317e8 <col:43> 'const Router::Port' lvalue ParmVar 0x5563c3ff05c0 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x5563c4031948 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x5563c4031918 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x5563c4031898 <col:52> 'const int' lvalue ->port 0x5563c3fefe08
| |             |   `-CXXThisExpr 0x5563c4031888 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x5563c4031930 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x5563c40318e8 <col:60, col:62> 'const int' lvalue .port 0x5563c3fefe08
| |                 `-DeclRefExpr 0x5563c40318c8 <col:60> 'const Router::Port' lvalue ParmVar 0x5563c3ff05c0 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x5563c40319f0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x5563c40319f0
| | `-ParmVarDecl 0x5563c4031b08 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x5563c4031ba8 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x5563c4031ba8
| | `-ParmVarDecl 0x5563c4031cb8 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x5563c4031d50 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5563c4032020 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x5563c4032020
| | `-ParmVarDecl 0x5563c4032128 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x5563c4032198 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x5563c40322a8 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x5563c40325c8 <col:12>
|     |-BinaryOperator 0x5563c4032468 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x5563c4032420 <col:12> 'int' lvalue ->idx 0x5563c3fefda0
|     | | `-CXXThisExpr 0x5563c4032410 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x5563c4032450 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x5563c40323e0 <col:12> 'int' xvalue .idx 0x5563c3fefda0
|     |     `-CXXStaticCastExpr 0x5563c40323b0 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x5563c4032380 <col:12> 'Router::Port' lvalue ParmVar 0x5563c40322a8 '' 'Router::Port &&'
|     |-BinaryOperator 0x5563c4032570 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x5563c4032528 <col:12> 'int' lvalue ->port 0x5563c3fefe08
|     | | `-CXXThisExpr 0x5563c4032518 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x5563c4032558 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x5563c40324e8 <col:12> 'int' xvalue .port 0x5563c3fefe08
|     |     `-CXXStaticCastExpr 0x5563c40324b8 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x5563c4032488 <col:12> 'Router::Port' lvalue ParmVar 0x5563c40322a8 '' 'Router::Port &&'
|     `-ReturnStmt 0x5563c40325b8 <col:12>
|       `-UnaryOperator 0x5563c40325a0 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5563c4032590 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x5563c3ff0710 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5563c3ff0828 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x5563c3ff0a18 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x5563c3ff0ad0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x5563c3ff0a18 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x5563c4031d28 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x5563c4031e60 <col:22, line:173:9>
| |-CXXConstructorDecl 0x5563c3ff0e08 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x5563c3ff0b90 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x5563c3ff0c10 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x5563c3ff0c90 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x5563c3ff0d10 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x5563c3ff0a18 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x5563c4031e70 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x5563c40328a8 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x5563c4032698 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x5563c4032660 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x5563c4032648 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x5563c4032330 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x5563c4032198 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x5563c4031f40 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x5563c4031f28 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x5563c4031ed8 <col:13> 'Router::Port [2]' lvalue ->p 0x5563c3ff0a18
| |   |   | |   `-CXXThisExpr 0x5563c4031ec8 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x5563c4031f08 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x5563c4032318 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x5563c4031fe0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x5563c4031fb0 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x5563c4031f70 <col:25> 'int' lvalue ParmVar 0x5563c3ff0c90 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x5563c4031fc8 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x5563c4031f90 <col:33> 'int' lvalue ParmVar 0x5563c3ff0d10 'to_port' 'int'
| |   `-ExprWithCleanups 0x5563c4032890 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x5563c4032858 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x5563c4032840 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x5563c4032820 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x5563c4032198 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x5563c4032728 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x5563c4032710 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x5563c40326c0 <col:13> 'Router::Port [2]' lvalue ->p 0x5563c3ff0a18
| |       | |   `-CXXThisExpr 0x5563c40326b0 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x5563c40326f0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x5563c4032808 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x5563c40327c8 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x5563c4032798 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x5563c4032758 <col:25> 'int' lvalue ParmVar 0x5563c3ff0b90 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x5563c40327b0 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x5563c4032778 <col:35> 'int' lvalue ParmVar 0x5563c3ff0c10 'from_port' 'int'
| |-CXXMethodDecl 0x5563c3ff0fd8 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x5563c3ff0ee8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x5563c4032e68 <col:45, line:182:9>
| |   |-ParenExpr 0x5563c4032d48 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x5563c4032d18 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x5563c40329e8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x5563c40329b8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x5563c4032920 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x5563c4032908 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x5563c40328c8 <col:34> 'int' lvalue ParmVar 0x5563c3ff0ee8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x5563c40328e8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x5563c4032998 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x5563c4032980 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x5563c4032940 <col:44> 'int' lvalue ParmVar 0x5563c3ff0ee8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x5563c4032960 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x5563c4032a48 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x5563c4032a28 <col:59> 'int' 0
| |   |   `-CallExpr 0x5563c4032c78 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x5563c4032c60 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x5563c4032c40 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x5563c4032cb8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x5563c4032ab8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x5563c4032cd0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x5563c4032ae0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x5563c4032ce8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x5563c4032b18 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x5563c4032d00 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x5563c4032c28 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x5563c4032c10 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x5563c4032bb8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x5563c4032e58 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x5563c4032e38 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x5563c4032e08 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x5563c4032d78 <col:20> 'Router::Port const[2]' lvalue ->p 0x5563c3ff0a18
| |       |   `-CXXThisExpr 0x5563c4032d68 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x5563c4032e20 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x5563c4032da8 <col:22> 'int' lvalue ParmVar 0x5563c3ff0ee8 'i' 'int'
| |-CXXMethodDecl 0x5563c3ff1188 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x5563c3ff1098 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x5563c40333e0 <col:33, line:186:9>
| |   |-ParenExpr 0x5563c4033300 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x5563c40332d0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x5563c4032fa8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x5563c4032f78 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x5563c4032ee0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x5563c4032ec8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x5563c4032e88 <col:34> 'int' lvalue ParmVar 0x5563c3ff1098 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x5563c4032ea8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x5563c4032f58 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x5563c4032f40 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x5563c4032f00 <col:44> 'int' lvalue ParmVar 0x5563c3ff1098 'i' 'int'
| |   |   |     `-IntegerLiteral 0x5563c4032f20 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x5563c4033008 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x5563c4032fe8 <col:59> 'int' 0
| |   |   `-CallExpr 0x5563c4033230 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x5563c4033218 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x5563c40331f8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x5563c4033270 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x5563c4033078 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x5563c4033288 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x5563c40330a0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x5563c40332a0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x5563c40330d8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x5563c40332b8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x5563c40331e0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x5563c40331c8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x5563c4033178 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x5563c40333d0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x5563c40333b0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x5563c4033380 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x5563c4033330 <col:20> 'Router::Port [2]' lvalue ->p 0x5563c3ff0a18
| |       |   `-CXXThisExpr 0x5563c4033320 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x5563c4033398 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x5563c4033360 <col:22> 'int' lvalue ParmVar 0x5563c3ff1098 'i' 'int'
| |-CXXMethodDecl 0x5563c3ff1328 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x5563c3ff1268 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x5563c40337b8 <col:52, line:190:9>
| |   `-ReturnStmt 0x5563c40337a8 <line:189:13, col:51>
| |     `-BinaryOperator 0x5563c4033788 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x5563c40335a0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x5563c4033588 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x5563c4033540 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5563c3ff0278 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x5563c4033478 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x5563c4033460 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x5563c4033410 <col:20> 'Router::Port const[2]' lvalue ->p 0x5563c3ff0a18
| |       | | |   `-CXXThisExpr 0x5563c4033400 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x5563c4033440 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x5563c4033520 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x5563c4033508 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x5563c40334b8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x5563c3ff0a18
| |       |   |   `-DeclRefExpr 0x5563c4033498 <col:28> 'const Router::Connection' lvalue ParmVar 0x5563c3ff1268 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x5563c40334e8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x5563c4033750 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x5563c4033738 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x5563c4033718 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5563c3ff0278 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x5563c4033650 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x5563c4033638 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x5563c40335e8 <col:38> 'Router::Port const[2]' lvalue ->p 0x5563c3ff0a18
| |         | |   `-CXXThisExpr 0x5563c40335d8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x5563c4033618 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x5563c40336f8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x5563c40336e0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x5563c4033690 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x5563c3ff0a18
| |           |   `-DeclRefExpr 0x5563c4033670 <col:46> 'const Router::Connection' lvalue ParmVar 0x5563c3ff1268 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x5563c40336c0 <col:50> 'int' 1
| `-CXXMethodDecl 0x5563c3ff1470 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x5563c3ff13e0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x5563c4033d50 <col:51, line:193:9>
|     `-ReturnStmt 0x5563c4033d40 <line:192:13, col:69>
|       `-BinaryOperator 0x5563c4033d20 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x5563c4033948 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x5563c4033930 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x5563c4033910 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5563c3ff0508 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x5563c4033848 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x5563c4033830 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x5563c40337e0 <col:20> 'Router::Port const[2]' lvalue ->p 0x5563c3ff0a18
|         | | |   `-CXXThisExpr 0x5563c40337d0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x5563c4033810 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x5563c40338f0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x5563c40338d8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x5563c4033888 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x5563c3ff0a18
|         |   |   `-DeclRefExpr 0x5563c4033868 <col:27> 'const Router::Connection' lvalue ParmVar 0x5563c3ff13e0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x5563c40338b8 <col:31> 'int' 0
|         `-ParenExpr 0x5563c4033d00 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x5563c4033ce0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x5563c4033af8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x5563c4033ae0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x5563c4033ac0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5563c3ff0278 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x5563c40339f8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x5563c40339e0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x5563c4033990 <col:38> 'Router::Port const[2]' lvalue ->p 0x5563c3ff0a18
|             | | |   `-CXXThisExpr 0x5563c4033980 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x5563c40339c0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x5563c4033aa0 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x5563c4033a88 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x5563c4033a38 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x5563c3ff0a18
|             |   |   `-DeclRefExpr 0x5563c4033a18 <col:46> 'const Router::Connection' lvalue ParmVar 0x5563c3ff13e0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x5563c4033a68 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x5563c4033ca8 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x5563c4033c90 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5563c4033c70 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5563c3ff0508 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x5563c4033ba8 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x5563c4033b90 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x5563c4033b40 <col:56> 'Router::Port const[2]' lvalue ->p 0x5563c3ff0a18
|               | |   `-CXXThisExpr 0x5563c4033b30 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x5563c4033b70 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x5563c4033c50 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x5563c4033c38 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x5563c4033be8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x5563c3ff0a18
|                 |   `-DeclRefExpr 0x5563c4033bc8 <col:63> 'const Router::Connection' lvalue ParmVar 0x5563c3ff13e0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x5563c4033c18 <col:67> 'int' 1
|-AccessSpecDecl 0x5563c3ff1530 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x5563c3ff1558 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x5563c3ff1610 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x5563c3ff16d0 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5563c3ff1720 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5563c3ff1770 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5563c3ff17c0 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x5563c3ff1810 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x5563c3ff1860 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x5563c3ff1978 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5563c3ff1958 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x5563c3ff1940 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x5563c3ff1920 <col:25> 'int' 2
| |-EnumConstantDecl 0x5563c3ff1a20 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5563c3ff1a00 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x5563c3ff19e8 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x5563c3ff19c8 <col:48> 'int' 1
| |-EnumConstantDecl 0x5563c3ff1ab0 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5563c3ff1a90 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x5563c3ff1a70 <col:71> 'int' 0
| |-EnumConstantDecl 0x5563c3ff1b40 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5563c3ff1b20 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x5563c3ff1b00 <col:30> 'int' 1
| `-EnumConstantDecl 0x5563c3ff1bd0 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x5563c3ff1bb0 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x5563c3ff1b90 <col:50> 'int' 2
|-FieldDecl 0x5563c3ff1c30 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x5563c3ff1c90 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x5563c3ff1cf8 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x5563c3ff1d98 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x5563c3ff1d78 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x5563c3ff1d48 <col:30> 'int' 1
|-FieldDecl 0x5563c3ff1e38 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x5563c3ff1e18 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x5563c3ff1de8 <col:33> 'int' 1
|-FieldDecl 0x5563c3ff1ed8 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x5563c3ff1eb8 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x5563c3ff1e88 <col:32> 'int' 1
|-FieldDecl 0x5563c3ff1f40 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x5563c3ff1fa0 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x5563c3ffecf0 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x5563c3ffedf0 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5563c3ffeef0 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5563c40072a0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x5563c40073b0 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x5563c4007400 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x5563c4007518 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x5563c40075b8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x5563c4007618 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x5563c40076b0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5563c40076b0
| | `-ParmVarDecl 0x5563c40077c8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x5563c4007868 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5563c4007868
| | `-ParmVarDecl 0x5563c4007978 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x5563c4007a18 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5563c4007a18
| | `-ParmVarDecl 0x5563c4007b28 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x5563c4007b98 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5563c4007b98
| | `-ParmVarDecl 0x5563c4007ca8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x5563c4007d30 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x5563c4007d30
|-FieldDecl 0x5563c4014740 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x5563c40147a0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x5563c40148b0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x5563c4014c08 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x5563c4014d10 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5563c401edc0 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x5563c401eed0 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x5563c401efd0 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5563c401f0e0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5563c401f1f0 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5563c401f300 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5563c401f410 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x5563c401f460 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x5563c401f560 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x5563c401f5b0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c401f540 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x5563c401f520 <col:29> 'int' 256
|-FieldDecl 0x5563c401f610 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x5563c401f678 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x5563c401f6e0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x5563c401f7e0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5563c4027fc0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x5563c4028020 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x5563c4028080 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x5563c40280d0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x5563c40281e8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x5563c4028278 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x5563c4028380 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x5563c40283d0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x5563c4028360 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x5563c4028340 <col:27> 'int' 4096
| |-FieldDecl 0x5563c40283f8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x5563c4028460 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x5563c4028658 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x5563c40286e8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x5563c40288a8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x5563c4028748 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x5563c40287c0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x5563c40283f8 'name' 'String'
| | | `-CXXConstructExpr 0x5563c4033da8 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x5563c4033d68 <col:20> 'const String' lvalue ParmVar 0x5563c4028748 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x5563c4028460 'nsig' 'int'
| | | `-IntegerLiteral 0x5563c4033e00 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x5563c4028658 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x5563c4033ee8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x5563c40286e8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x5563c4033ea8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x5563c4033e68 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x5563c40287c0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x5563c4034178 <col:42, line:289:9>
| |   `-CallExpr 0x5563c4034128 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x5563c4034110 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x5563c40340f0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x5563c3bbe6d8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x5563c4034160 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x5563c4034038 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x5563c4034018 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x5563c4034000 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x5563c4033fb0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x5563c4028658
| |     |     |   `-CXXThisExpr 0x5563c4033fa0 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x5563c4033fe0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x5563c4034050 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x5563c40340d0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x5563c40340b0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x5563c4034080 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x5563c4028658 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x5563c4034070 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x5563c4028988 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x5563c4028988
| | `-ParmVarDecl 0x5563c4028a98 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x5563c4028b38 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5563c4028b38
| | `-ParmVarDecl 0x5563c4028c48 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x5563c4028ce8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x5563c4028ce8
| | `-ParmVarDecl 0x5563c4028df8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x5563c4028e68 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5563c4028e68
| | `-ParmVarDecl 0x5563c4028f78 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x5563c4029000 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x5563c4029000
|-FieldDecl 0x5563c40290f0 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x5563c4029150 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x5563c40291b0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x5563c4029210 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x5563c4029270 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x5563c4029380 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5563c4029480 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5563c40294e0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x5563c4029628 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x5563c4029568 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x5563c40297d8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x5563c40296e8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x5563c4029920 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x5563c4029890 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x5563c402de18 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x5563c40299d8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x5563c4029a50 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x5563c4029ad0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x5563c402dca0 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x5563c402dd18 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5563c4030e50 <col:57> 'bool' false
|-CXXMethodDecl 0x5563c402df88 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5563c402def0 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x5563c402e0d8 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5563c402e040 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x5563c402e228 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5563c402e190 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x5563c402e380 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x5563c402e2e8 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x5563c402e6a0 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x5563c402e438 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x5563c402e4b0 <col:50> col:54 'bool'
| |-ParmVarDecl 0x5563c402e530 <col:56> col:59 'int'
| `-ParmVarDecl 0x5563c402e5a8 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x5563c402e808 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5563c402e770 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x5563c402e8d0 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x5563c402e990 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x5563c402eb90 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x5563c402ea40 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x5563c402eab8 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x5563c402ec60 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x5563c402eda8 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x5563c402ed10 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x5563c40343b0 <col:42, line:326:5>
|   `-ReturnStmt 0x5563c40343a0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x5563c4034388 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x5563c4034368 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x5563c4034338 <col:16, col:45> '<bound member function type>' .back 0x5563c3f103e8
|           `-ArraySubscriptExpr 0x5563c40342b8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x5563c4034288 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5563c40341a0 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x5563c4014c08
|             |   `-CXXThisExpr 0x5563c4034190 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x5563c40342a0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x5563c40341d0 <col:38> 'bool' lvalue ParmVar 0x5563c402ed10 'isout' 'bool'
|-CXXMethodDecl 0x5563c402ef78 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x5563c402ee60 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x5563c402eed8 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x5563c402f0d0 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x5563c402f038 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x5563c402f378 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x5563c402f188 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x5563c402f200 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x5563c402f280 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x5563c402f550 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x5563c402f440 <col:30> col:34 'bool'
| `-ParmVarDecl 0x5563c402f4b8 <col:36> col:40 'bool'
|-CXXMethodDecl 0x5563c402f6d8 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x5563c402f618 <col:30> col:33 'int'
|-CXXMethodDecl 0x5563c402f970 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x5563c402f798 <col:23> col:26 'int'
| |-ParmVarDecl 0x5563c402f810 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x5563c402f888 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x5563c402fb88 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x5563c402fa38 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x5563c402fab0 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x5563c402fd98 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x5563c402fc50 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x5563c402fcc8 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x5563c402ff18 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x5563c402fe58 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x5563c4030118 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x5563c402ffd0 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x5563c4030048 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x5563c40302f0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5563c40301d8 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x5563c4030258 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x5563c40305d0 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c40303b0 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x5563c4030428 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5563c40304a8 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x5563c4030520 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x5563c40306b0 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x5563c4030710 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x5563c4030990 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x5563c4030890 parent 0x5563c3ebfd40 prev 0x5563c3ecf968 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x5563c4030770 <col:36> col:39 'int'
    `-ParmVarDecl 0x5563c40307f0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3ebfd40 prev 0x5563c3ebfac0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5563c3ebfe38 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5563c3ebfec8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5563c3ebff28 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x5563c3ec0018 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5563c3ec0118 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5563c3ec02e8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5563c3ec0198 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5563c3ec0210 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5563c3ec0478 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5563c3ec03b0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5563c3ec0520 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5563c3ec0658 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5563c3ec0590 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5563c3ec07f8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5563c3ec0738 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5563c3ec0998 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5563c3ec08d8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5563c3ec0a40 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5563c3ec0b40 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5563c3ec0c20 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ec0b20 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5563c3ec0b00 <col:26> 'int' 1
| `-EnumConstantDecl 0x5563c3ec0bd0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5563c3ec0c38 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3ec0bb0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5563c3ec0b90 <col:44> 'int' 2
|-CXXMethodDecl 0x5563c3ec0d80 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5563c3ec0c68 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5563c3ec0ce8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5563c3ec0ed8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5563c3ec0e48 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5563c3ec1118 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5563c3ec0f98 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5563c3ec1010 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5563c3ec11c8 <col:20>
| `-OptimizeNoneAttr 0x5563c3ec1220 <col:30>
|-CXXMethodDecl 0x5563c3ec1328 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5563c3ec1260 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5563c3ec13d0 <col:20>
| `-OptimizeNoneAttr 0x5563c3ec1428 <col:30>
|-CXXMethodDecl 0x5563c3ec1478 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5563c3ec1540 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5563c3ec1658 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5563c3ec16e0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5563c3ec1768 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5563c3ec17f0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x5563c3ec1878 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5563c3ec1908 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5563c3ec19c8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5563c3ec1a50 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x5563c3ec1ad8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5563c3ec1b60 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5563c3ec1be8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5563c3ec1c70 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5563c3ec1d00 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5563c3ec1dc0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5563c3ec1e50 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5563c3ec1fa0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5563c3ec1f08 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5563c3ec2130 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5563c3ec2060 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5563c3ec23e0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5563c3ec21e8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5563c3ec2268 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5563c3ec22e8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5563c3ec2498 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5563c3ec25a0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5563c3ec2830 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ec2580 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5563c3ec2560 <col:33> 'int' 0
| |-EnumConstantDecl 0x5563c3ec2630 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5563c3ec2848 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ec2610 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5563c3ec25f0 <col:32> 'int' 20
| |-EnumConstantDecl 0x5563c3ec26c0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5563c3ec2860 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ec26a0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5563c3ec2680 <col:38> 'int' 90
| |-EnumConstantDecl 0x5563c3ec2750 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5563c3ec2878 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ec2730 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5563c3ec2710 <col:35> 'int' 100
| `-EnumConstantDecl 0x5563c3ec27e0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5563c3ec2890 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3ec27c0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5563c3ec27a0 <col:32> 'int' 2000
|-CXXMethodDecl 0x5563c3ec28d0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5563c3ec2d10 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5563c3ec2b80 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5563c3ec2bf8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3ec2de0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5563c3ec2f60 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5563c3ec2e90 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3ec3168 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5563c3ec3018 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5563c3ec3090 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3ec3268 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5563c3ec3308 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5563c3ec33d0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5563c3ec3460 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5563c3ec3690 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ec3440 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5563c3ec3420 <col:36> 'int' EnumConstant 0x5563c3ec33d0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5563c3ec34b0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5563c3ec3500 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5563c3ec3550 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5563c3ec35a0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5563c3ec35f0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5563c3ec3640 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5563c3ec3778 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5563c3ec36b8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5563c3ec3840 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5563c3ec3900 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5563c3ec39c0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5563c3ec3a80 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5563c3ec3b98 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5563c3ec3c60 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x5563c3ec3de0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5563c3ec3d10 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5563c3ec3f08 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5563c3ec4108 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5563c3ec3fb8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5563c3ec4038 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5563c3ed1a58 <col:54, line:127:5>
|   |-ParenExpr 0x5563c3ed1908 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5563c3ed18d8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ed15c8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5563c3ed15a0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5563c3ed1588 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5563c3ed1570 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5563c3ed1540 <col:31> 'Router *' lvalue ->_router 0x5563c3ecf420
|   |   |         `-CXXThisExpr 0x5563c3ed1530 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5563c3ed1628 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ed1608 <col:48> 'int' 0
|   |   `-CallExpr 0x5563c3ed1838 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ed1820 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ed1800 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ed1878 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ed1698 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5563c3ed1890 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ed16b8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5563c3ed18a8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ed16f0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5563c3ed18c0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ed17e8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ed17d0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ed1788 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5563c3ed19a0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5563c3ed1938 <col:9> 'Router *' lvalue ->_router 0x5563c3ecf420
|   | | `-CXXThisExpr 0x5563c3ed1928 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5563c3ed1988 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563c3ed1968 <col:19> 'Router *' lvalue ParmVar 0x5563c3ec3fb8 'r' 'Router *'
|   `-BinaryOperator 0x5563c3ed1a38 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5563c3ed19d0 <col:9> 'int' lvalue ->_eindex 0x5563c3ecf488
|     | `-CXXThisExpr 0x5563c3ed19c0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5563c3ed1a20 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3ed1a00 <col:19> 'int' lvalue ParmVar 0x5563c3ec4038 'eindex' 'int'
|-CXXMethodDecl 0x5563c3ec4290 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5563c3ec41c8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5563c3ec4360 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5563c3ec4428 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5563c3ec44c8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5563c3ec4718 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5563c3ec4590 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5563c3ec4610 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5563c3ec47c8 <col:20>
| `-OptimizeNoneAttr 0x5563c3ec4820 <col:30>
|-CXXMethodDecl 0x5563c3ec4928 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5563c3ec4860 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5563c3ec49d0 <col:20>
| `-OptimizeNoneAttr 0x5563c3ec4a28 <col:30>
|-CXXMethodDecl 0x5563c3ec4af8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5563c3ec4a68 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5563c3ec4ba0 <col:20>
| `-OptimizeNoneAttr 0x5563c3ec4bf8 <col:30>
|-CXXMethodDecl 0x5563c3ec4d88 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5563c3ec4c30 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5563c3ec4cb0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5563c3ec4f18 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5563c3ec4e50 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5563c3ec5068 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5563c3ec4fd8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5563c3ec51b8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5563c3ec5128 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5563c3ec5308 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5563c3ec5278 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5563c3ec55c8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5563c3ec53c0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5563c3ec5440 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5563c3ec54e8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5563c3ec56a0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5563c3ec5760 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5563c3ec5a30 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5563c3ec58e0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5563c3ec5958 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3ec5b58 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5563c3ec5d30 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5563c3ec5c10 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5563c3ec5c90 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5563c3ec5f18 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5563c3ec5df8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5563c3ec5e78 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5563c3ec6288 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5563c3ec5fd8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5563c3ec6050 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5563c3ec60d0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5563c3ed1040 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5563c3ed1020 <col:106> 'int' 0
| `-ParmVarDecl 0x5563c3ec6148 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5563c3ed1078 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5563c3ed1058 <col:126> 'int' 0
|-CXXMethodDecl 0x5563c3ec6628 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5563c3ec6358 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5563c3ec63f0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5563c3ec6470 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5563c3ec64e8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5563c3ed10b0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5563c3ed1090 <col:114> 'int' 0
|-CXXMethodDecl 0x5563c3ec69b8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5563c3ec6700 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5563c3ec6778 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5563c3ec67f8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5563c3ed10c8 <col:96> 'int' 0
| `-ParmVarDecl 0x5563c3ec6870 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5563c3ed1108 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5563c3ed10e8 <col:116> 'int' 0
|-CXXMethodDecl 0x5563c3ec6d38 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5563c3ec6a88 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5563c3ec6b00 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5563c3ec6b80 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5563c3ed1140 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5563c3ed1120 <col:109> 'int' 0
| `-ParmVarDecl 0x5563c3ec6bf8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5563c3ed1178 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5563c3ed1158 <col:129> 'int' 0
|-CXXMethodDecl 0x5563c3ec70b8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5563c3ec6e08 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5563c3ec6e80 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5563c3ec6f00 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5563c3ec6f78 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5563c3ed11b0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5563c3ed1190 <col:117> 'int' 0
|-CXXMethodDecl 0x5563c3ec7448 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5563c3ec7190 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ec7208 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5563c3ec7288 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5563c3ed11c8 <col:99> 'int' 0
| `-ParmVarDecl 0x5563c3ec7300 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5563c3ed1208 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5563c3ed11e8 <col:119> 'int' 0
|-CXXMethodDecl 0x5563c3ec7868 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5563c3ec7518 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5563c3ec7598 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5563c3ec7610 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5563c3ec7690 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5563c3ed1240 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5563c3ed1220 <col:108> 'int' 0
| `-ParmVarDecl 0x5563c3ec7710 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5563c3ed1278 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5563c3ed1258 <col:141> 'int' 0
|-CXXMethodDecl 0x5563c3ec7c88 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5563c3ec7940 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5563c3ec79c0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5563c3ec7a38 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5563c3ec7ab8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5563c3ec7b38 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5563c3ed1290 <col:121> 'int' 0
|-CXXMethodDecl 0x5563c3ec80b8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5563c3ec7d68 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5563c3ec7de8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5563c3ec7e60 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5563c3ec7ee0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5563c3ed12b0 <col:98> 'int' 0
| `-ParmVarDecl 0x5563c3ec7f60 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5563c3ed12d0 <col:123> 'int' 0
|-CXXMethodDecl 0x5563c3ec8380 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5563c3ec8190 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5563c3ec8210 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5563c3ec8290 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5563c3ed12f0 <col:80> 'int' 0
|-EnumDecl 0x5563c3ec8438 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5563c3ec8540 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5563c3ec87d0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ec8520 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5563c3ec8500 <col:42> 'int' 1
| |-EnumConstantDecl 0x5563c3ec85d0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5563c3ec87e8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ec85b0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5563c3ec8590 <col:40> 'int' 2
| |-EnumConstantDecl 0x5563c3ec8660 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5563c3ec8800 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ec8640 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5563c3ec8620 <col:44> 'int' 4
| |-EnumConstantDecl 0x5563c3ec86f0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5563c3ec8818 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3ec86d0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5563c3ec86b0 <col:36> 'int' 7
| `-EnumConstantDecl 0x5563c3ec8780 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5563c3ec8830 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3ec8760 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5563c3ec8740 <col:34> 'int' 6
|-CXXMethodDecl 0x5563c3ec8ae8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5563c3ec8858 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5563c3ec88f8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5563c3ec8978 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5563c3ec89f0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5563c3ed13a8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5563c3ed1390 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5563c3ed1378 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5563c3ed1358 <col:98, col:105> 'String' (CXXTemporary 0x5563c3ed1358)
|           `-CXXTemporaryObjectExpr 0x5563c3ed1320 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5563c3ec8d88 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5563c3ec8bb8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5563c3ec8c30 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5563c3ec8ca8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5563c3ed1458 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5563c3ed1440 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5563c3ed1428 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5563c3ed1408 <col:94, col:101> 'String' (CXXTemporary 0x5563c3ed1408)
| |         `-CXXTemporaryObjectExpr 0x5563c3ed13d0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5563c3ed1c40 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5563c3ed1bb8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5563c3ed1b88 <col:9> '<bound member function type>' ->add_task_handlers 0x5563c3ec8ae8
|     | `-CXXThisExpr 0x5563c3ed1b78 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5563c3ed1bf8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5563c3ed1af8 <col:27> 'Task *' lvalue ParmVar 0x5563c3ec8bb8 'task' 'Task *'
|     |-ImplicitCastExpr 0x5563c3ed1c10 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5563c3ed1b18 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5563c3ec8c30 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5563c3ed1c28 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5563c3ed1b38 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5563c3ec8780 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5563c3ed1b58 <col:62> 'const String' lvalue ParmVar 0x5563c3ec8ca8 'prefix' 'const String &'
|-CXXMethodDecl 0x5563c3ec8f98 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5563c3ec8e50 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5563c3ec8ec8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5563c3ed1508 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5563c3ed14f0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5563c3ed14d8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5563c3ed14b8 <col:70, col:77> 'String' (CXXTemporary 0x5563c3ed14b8)
| |         `-CXXTemporaryObjectExpr 0x5563c3ed1480 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5563c3ed1e18 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5563c3ed1d90 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5563c3ed1d60 <col:9> '<bound member function type>' ->add_task_handlers 0x5563c3ec8ae8
|     | `-CXXThisExpr 0x5563c3ed1d50 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5563c3ed1dd0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5563c3ed1cd0 <col:27> 'Task *' lvalue ParmVar 0x5563c3ec8e50 'task' 'Task *'
|     |-ImplicitCastExpr 0x5563c3ed1de8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5563c3ed1cf0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5563c3ed1e00 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5563c3ed1d10 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5563c3ec8780 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5563c3ed1d30 <col:57> 'const String' lvalue ParmVar 0x5563c3ec8ec8 'prefix' 'const String &'
|-CXXMethodDecl 0x5563c3ec9278 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5563c3ec9060 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ec90e0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3ec9158 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5563c3ec9528 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5563c3ec9348 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ec93c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3ec9448 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5563c3ec9818 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5563c3ec95f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ec9678 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3ec96f0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5563c3ec9ac8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5563c3ec98e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ec9968 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3ec99e8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5563c3ec9d78 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5563c3ec9b98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ec9c18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3ec9c98 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5563c3eca028 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5563c3ec9e48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ec9ec8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3ec9f40 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5563c3eca2d8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5563c3eca0f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3eca178 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3eca1f8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5563c3eca5e8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5563c3eca400 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3eca480 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3eca500 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5563c3eca8c8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5563c3eca6b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3eca738 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3eca7e0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5563c3ecaba8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5563c3eca998 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ecaa18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3ecaac0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5563c3ecae10 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5563c3ecac78 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5563c3ecacf8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5563c3ecad70 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5563c3ecb0b8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5563c3ecaee0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5563c3ecaf60 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5563c3ecafd8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5563c3ecb368 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5563c3ecb188 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ecb208 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3ecb288 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5563c3ecb618 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5563c3ecb438 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ecb4b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3ecb530 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5563c3ecb8c8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5563c3ecb6e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ecb768 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3ecb7e0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5563c3ecbb98 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5563c3ecb998 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ecba18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5563c3ecbab8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5563c3ecbec8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5563c3ecbc68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5563c3ecbce8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5563c3ecbd60 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5563c3ecbdd8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5563c3ed1520 <col:93> 'bool' false
|-CXXMethodDecl 0x5563c3ecc0b0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5563c3ecbf98 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5563c3ecc018 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5563c3ecc288 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5563c3ecc170 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5563c3ecc1f0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5563c3ecc568 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3ecc348 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5563c3ecc3c0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5563c3ecc440 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5563c3ecc4b8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3ecc858 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3ecc638 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5563c3ecc6b0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5563c3ecc730 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5563c3ecc7a8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3ecca90 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5563c3ecc930 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5563c3ecc9b0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5563c3eccc78 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5563c3eccb58 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5563c3eccbd8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5563c3eccd28 prev 0x5563c3ec44c8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5563c3ecce20 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5563c3ecceb0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5563c3eccf28 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5563c3eccfe8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5563c3ecd0b0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5563c3ecd228 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5563c3ecd160 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5563c3ecd2d0 <col:24>
| | `-OptimizeNoneAttr 0x5563c3ecd328 <col:34>
| |-CXXMethodDecl 0x5563c3ecd370 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5563c3ecd628 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5563c3ecd420 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5563c3ecd498 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5563c3ecd518 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5563c3ecd6e0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5563c3ecd718 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5563c3ecd780 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5563c3ecd808 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5563c3ecdb28 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5563c3ecd8c0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5563c3ecd938 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5563c3ecd9b0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5563c3ecda30 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5563c3ecdc40 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5563c3ed55b8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5563c3ed55b8
| | `-ParmVarDecl 0x5563c3ed56c8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5563c3ed5768 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5563c3ed5768
| | `-ParmVarDecl 0x5563c3ed5878 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5563c406dbd0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5563c3ecdcb8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5563c3ecdd58 <col:38> "" ""
|-CXXMethodDecl 0x5563c3ecdde8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5563c3ecde88 <col:44> "" ""
|-AccessSpecDecl 0x5563c3ecdef8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5563c3ecdf20 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5563c3ece020 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5563c3ece070 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3ece000 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5563c3ecdfe0 <col:27> 'int' 4
|-FieldDecl 0x5563c3ece128 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5563c3ece2d8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5563c3ece390 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5563c3ecf420 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5563c3ecf488 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5563c3ecf5d8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5563c3ecf518 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5563c3ecf788 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5563c3ecf698 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5563c3ecf968 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5563c3ecf848 <col:20> col:23 'int'
| `-ParmVarDecl 0x5563c3ecf8c8 <col:25> col:28 'int'
|-CXXMethodDecl 0x5563c3ecfc10 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5563c3ecfa30 <col:23> col:26 'int'
| |-ParmVarDecl 0x5563c3ecfab0 <col:28> col:31 'int'
| `-ParmVarDecl 0x5563c3ecfb28 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5563c3ecfcc8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5563c3ecfd90 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5563c3ecfde0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5563c3ecfe30 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5563c3ed0010 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3ecfec0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5563c3ecff38 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3ed02b8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5563c3ed00d8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5563c3ed0158 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5563c3ed01d0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3ed04d8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5563c3ed0388 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5563c3ed0408 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5563c3ed0810 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5563c3ed0598 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5563c3ed0618 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5563c3ed0690 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5563c3ed0710 <col:57> col:60 'int'
|-CXXMethodDecl 0x5563c3ed09f8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5563c3ed08e0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5563c3ed0960 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5563c3ed0b48 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5563c3ed0ab8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5563c3ed0ec8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5563c3ed0c08 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5563c3ed0c88 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5563c3ed0d00 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5563c3ed0d80 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5563c3ed0fe0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Script
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Vector<int> _insns
       112 |     class vector_memory<class sized_array_memory<4> > vm_
       112 |       vector_memory<class sized_array_memory<4> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   class Vector<int> _args
       128 |     class vector_memory<class sized_array_memory<4> > vm_
       128 |       vector_memory<class sized_array_memory<4> >::type * l_
       136 |       vector_memory::size_type n_
       140 |       vector_memory::size_type capacity_
       144 |   class Vector<int> _args2
       144 |     class vector_memory<class sized_array_memory<4> > vm_
       144 |       vector_memory<class sized_array_memory<4> >::type * l_
       152 |       vector_memory::size_type n_
       156 |       vector_memory::size_type capacity_
       160 |   class Vector<class String> _args3
       160 |     class vector_memory<class typed_array_memory<class String> > vm_
       160 |       vector_memory<class typed_array_memory<class String> >::type * l_
       168 |       vector_memory::size_type n_
       172 |       vector_memory::size_type capacity_
       176 |   class Vector<class String> _vars
       176 |     class vector_memory<class typed_array_memory<class String> > vm_
       176 |       vector_memory<class typed_array_memory<class String> >::type * l_
       184 |       vector_memory::size_type n_
       188 |       vector_memory::size_type capacity_
       192 |   class String _run_handler_name
       192 |     struct String::rep_t _r
       192 |       const char * data
       200 |       int length
       208 |       struct String::memo_t * memo
       216 |   class String _run_args
       216 |     struct String::rep_t _r
       216 |       const char * data
       224 |       int length
       232 |       struct String::memo_t * memo
       240 |   int _run_op
       244 |   int _insn_pos
       248 |   int _step_count
       252 |   int _type
       256 |   int _write_status
       264 |   class Vector<int> _signos
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Timer _timer
       280 |     int _schedpos1
       288 |     class Timestamp _expiry_s
       288 |       union Timestamp::rep_t _t
       288 |         int64_t x
       296 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       296 |       TimerCallback callback
       304 |     void * _thunk
       312 |     class Element * _owner
       320 |     class RouterThread * _thread
       328 |   int * _cur_steps
           | [sizeof=336, dsize=336, align=8,
           |  nvsize=336, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3e58670 prev 0x5563c3e4f4b0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5563c3e58768 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x5563c3e58808 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x5563c3e5f5d0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5563c3e5f9b8 <col:11>
|-CXXConstructorDecl 0x5563c3e5f6b0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5563c3e5f798 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5563c3e60100 <col:11>
|-CXXConstructorDecl 0x5563c3e5f838 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5563c3e5f948 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x5563c3e61958 <col:11>
|-CXXDestructorDecl 0x5563c3e60c68 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5563c3b67818 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5563c3b67928 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5563c3b681f0 <col:11>
|   `-ReturnStmt 0x5563c3b681e0 <col:11>
|     `-UnaryOperator 0x5563c3b681c8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5563c3b681b8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x5563c3b67998 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5563c3b67aa8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x5563c3ef5c90 <col:11>
    `-ReturnStmt 0x5563c3ef5c80 <col:11>
      `-UnaryOperator 0x5563c3ef5c68 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5563c3ef5c58 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3e4e668 prev 0x5563c3e4e378 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5563c3e4e760 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x5563c3e4e7f0 <col:19, col:25> col:19 public
|-TypedefDecl 0x5563c3e4e828 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x5563c3ab39f0 'int32_t' sugar
|   |-Typedef 0x5563c39c4268 'int32_t'
|   `-TypedefType 0x5563c399d3b0 '__int32_t' sugar
|     |-Typedef 0x5563c399cfc8 '__int32_t'
|     `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3e4e890 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x5563c3ab3bb0 'int64_t' sugar
|   |-Typedef 0x5563c39c42d0 'int64_t'
|   `-TypedefType 0x5563c399d4d0 '__int64_t' sugar
|     |-Typedef 0x5563c399d0a8 '__int64_t'
|     `-BuiltinType 0x5563c395b390 'long'
|-EnumDecl 0x5563c3e4e8e8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x5563c3e4ea60 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x5563c3e4ea40 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x5563c3e4ea18 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x5563c3e4ea00 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x5563c3e4e9d0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x5563c3e4eb58 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x5563c3e4eb38 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x5563c3e4eb10 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x5563c3e4eaf8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x5563c3e4ead0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x5563c3e4eab0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x5563c3e4eba8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x5563c3e4ecb0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5563c3e4f200 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e4ec90 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x5563c3e4ec70 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x5563c3e4ed40 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5563c3e4f218 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e4ed20 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5563c3e4ed00 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x5563c3e4edd0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5563c3e4f230 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e4edb0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x5563c3e4ed90 <col:25> 'int' 1000
| |-EnumConstantDecl 0x5563c3e4ee60 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5563c3e4f248 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e4ee40 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5563c3e4ee20 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x5563c3e4eef0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5563c3e4f260 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e4eed0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x5563c3e4eeb0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x5563c3e4ef80 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5563c3e4f278 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e4ef60 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x5563c3e4ef40 <col:24> 'int' 1000
| |-EnumConstantDecl 0x5563c3e4f010 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5563c3e4f290 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e4eff0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x5563c3e4efd0 <col:26> 'int' EnumConstant 0x5563c3e4ecb0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x5563c3e4f0e0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5563c3e4f2a8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e4f0c0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x5563c3e4f0a0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x5563c3e4f060 <col:27> 'int' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x5563c3e4f080 <col:44> 'int' EnumConstant 0x5563c3e4ef80 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x5563c3e4f1b0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x5563c3e4f2c0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3e4f190 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x5563c3e4f170 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x5563c3e4f130 <col:27> 'int' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x5563c3e4f150 <col:44> 'int' EnumConstant 0x5563c3e4ee60 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x5563c3e4f2d8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x5563c3e4f3e0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x5563c3e4f430 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3e4f3c0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x5563c3e4f3a0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x5563c3e4f458 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x5563c3ab3620 'uninitialized_type'
|   `-CXXRecord 0x5563c3ab3588 'uninitialized_type'
|-CXXRecordDecl 0x5563c3e4f4b0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x5563c3e4f5c0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x5563c3e597b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5563c3e5f9c8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5563c3e5fae8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x5563c3e5faa0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x5563c3e5fa30 <col:9> '<bound member function type>' ->assign 0x5563c3e54208
|     | `-CXXThisExpr 0x5563c3e5fa20 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5563c3e5fa60 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5563c3e5fad0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5563c3e5fa80 <col:19> 'int' 0
|-CXXConstructorDecl 0x5563c3e4f808 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e4f680 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x5563c3e4f6f8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5563c3e5b300 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5563c3e5b2e0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x5563c3e597b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5563c3e5fb00 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5563c3e5fc50 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x5563c3e5fbd8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x5563c3e5fb68 <col:9> '<bound member function type>' ->assign 0x5563c3e54208
|     | `-CXXThisExpr 0x5563c3e5fb58 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5563c3e5fc20 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5563c3e5fc08 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5563c3e5fb98 <col:16> 'long' lvalue ParmVar 0x5563c3e4f680 'sec' 'long'
|     `-ImplicitCastExpr 0x5563c3e5fc38 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3e5fbb8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e4f6f8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5563c3e4fa68 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e4f8d8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x5563c3e4f950 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5563c3e5b338 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5563c3e5b318 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x5563c3e597b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5563c3e5fc68 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5563c3e5fda0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x5563c3e5fd40 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x5563c3e5fcd0 <col:9> '<bound member function type>' ->assign 0x5563c3e54208
|     | `-CXXThisExpr 0x5563c3e5fcc0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5563c3e5fd70 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5563c3e5fd00 <col:16> 'int' lvalue ParmVar 0x5563c3e4f8d8 'sec' 'int'
|     `-ImplicitCastExpr 0x5563c3e5fd88 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3e5fd20 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e4f950 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5563c3e4fcc8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e4fb38 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x5563c3e4fbb0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5563c3e5b370 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5563c3e5b350 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x5563c3e597b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5563c3e5fdb8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5563c3e5ff08 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x5563c3e5fe90 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x5563c3e5fe20 <col:9> '<bound member function type>' ->assign 0x5563c3e54208
|     | `-CXXThisExpr 0x5563c3e5fe10 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5563c3e5fed8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5563c3e5fec0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5563c3e5fe50 <col:16> 'unsigned long' lvalue ParmVar 0x5563c3e4fb38 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x5563c3e5fef0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3e5fe70 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e4fbb0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5563c3e50e60 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e4fd98 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x5563c3e4fe10 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5563c3e5b3a8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5563c3e5b388 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x5563c3e597b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5563c3e5ff20 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5563c3e60070 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x5563c3e5fff8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x5563c3e5ff88 <col:9> '<bound member function type>' ->assign 0x5563c3e54208
|     | `-CXXThisExpr 0x5563c3e5ff78 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5563c3e60040 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5563c3e60028 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5563c3e5ffb8 <col:16> 'unsigned int' lvalue ParmVar 0x5563c3e4fd98 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x5563c3e60058 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3e5ffd8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e4fe10 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5563c3e50fc0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x5563c3e50f30 <col:31> col:37 'double'
|-CXXConstructorDecl 0x5563c3e51158 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x5563c3e51098 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x5563c3e51388 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x5563c3e51290 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x5563c3e51538 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x5563c3e51478 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x5563c3e597b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5563c3e60110 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x5563c3e60088 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x5563c3e51478 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5563c3e60170 <col:19, line:214:5>
|-CXXConstructorDecl 0x5563c3e51708 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x5563c3e51648 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x5563c3e597b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5563c3e60180 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5563c3e60230 <col:53, line:219:5>
|   `-CStyleCastExpr 0x5563c3e60208 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x5563c3e601d8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x5563c3e51648 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x5563c3e518f8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x5563c3e51870 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x5563c3e4e410 'Timestamp'
|   | `-CXXRecord 0x5563c3e4e668 'Timestamp'
|   `-ParenType 0x5563c3e51810 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x5563c3e517e0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x5563c3e4e9b0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x5563c3e4e828 'seconds_type'
|         `-TypedefType 0x5563c3ab39f0 'int32_t' sugar
|           |-Typedef 0x5563c39c4268 'int32_t'
|           `-TypedefType 0x5563c399d3b0 '__int32_t' sugar
|             |-Typedef 0x5563c399cfc8 '__int32_t'
|             `-BuiltinType 0x5563c395b370 'int'
|-CXXConversionDecl 0x5563c3e51a38 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5563c3e51b08 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x5563c3e60338 <col:37, line:231:5>
|   `-ReturnStmt 0x5563c3e60328 <line:227:9, col:23>
|     `-BinaryOperator 0x5563c3e60308 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x5563c3e602d8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5563c3e60288 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x5563c3e58808
|       |   `-MemberExpr 0x5563c3e60258 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x5563c3e597b8
|       |     `-CXXThisExpr 0x5563c3e60248 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5563c3e602f0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x5563c3e602b8 <col:23> 'int' 0
|-CXXMethodDecl 0x5563c3e51bc8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x5563c3e51c88 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x5563c3e51d48 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x5563c3e51e08 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x5563c3e51ec8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x5563c3e52038 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x5563c3e51f78 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x5563c3e52180 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x5563c3e520f0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e52248 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5563c3e522e8 <col:54> "" ""
|-CXXMethodDecl 0x5563c3e52378 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5563c3e52418 <col:54> "" ""
|-CXXMethodDecl 0x5563c3e524a8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5563c3e52548 <col:54> "" ""
|-CXXMethodDecl 0x5563c3e52648 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x5563c3e52718 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x5563c3e52848 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x5563c3e52940 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x5563c3e52a78 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5563c3e60550 <col:39, line:271:5>
|   `-ReturnStmt 0x5563c3e60540 <line:267:9, col:61>
|     `-CallExpr 0x5563c3e604e0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5563c3e604c8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5563c3e60350 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5563c3e59ae8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5563c3e60510 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5563c3e603b0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x5563c3e58808
|       |   `-MemberExpr 0x5563c3e60380 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x5563c3e597b8
|       |     `-CXXThisExpr 0x5563c3e60370 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5563c3e60528 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5563c3e60450 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5563c3e60420 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5563c3e603e0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5563c3e60438 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5563c3e60400 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4ef80 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5563c3e52b38 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5563c3e60710 <col:39, line:279:5>
|   `-ReturnStmt 0x5563c3e60700 <line:275:9, col:61>
|     `-CallExpr 0x5563c3e606a0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5563c3e60688 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5563c3e60568 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5563c3e59ae8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5563c3e606d0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5563c3e605c8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x5563c3e58808
|       |   `-MemberExpr 0x5563c3e60598 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x5563c3e597b8
|       |     `-CXXThisExpr 0x5563c3e60588 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5563c3e606e8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5563c3e60668 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5563c3e60638 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5563c3e605f8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5563c3e60650 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5563c3e60618 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4ee60 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5563c3e52bf8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5563c3e608a8 <col:39, line:287:5>
|   `-ReturnStmt 0x5563c3e60898 <line:283:9, col:53>
|     `-BinaryOperator 0x5563c3e60878 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x5563c3e60848 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5563c3e60768 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x5563c3e58808
|       |   `-MemberExpr 0x5563c3e60738 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x5563c3e597b8
|       |     `-CXXThisExpr 0x5563c3e60728 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5563c3e60860 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x5563c3e60828 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5563c3e60808 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5563c3e607d8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5563c3e60798 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4ecb0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5563c3e607f0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5563c3e607b8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5563c3e52ce8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5563c3e61b40 <col:40, line:293:5>
|   |-DeclStmt 0x5563c3e609f0 <line:291:9, col:48>
|   | `-VarDecl 0x5563c3e608d0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x5563c3e609d0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x5563c3e60978 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5563c3e60948 <col:22> '<bound member function type>' ->subsec 0x5563c3e51c88
|   |     |   `-CXXThisExpr 0x5563c3e60938 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x5563c3e609b8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x5563c3e60998 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f0e0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5563c3e61b30 <line:292:9, col:70>
|     `-ExprWithCleanups 0x5563c3e61b18 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5563c3e61ae8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5563c3e61ad0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5563c3e61ab0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5563c3e61a80 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5563c3e61818 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5563c3e61800 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5563c3e60a08 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x5563c3e608d0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5563c3e61a20 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5563c3e61a08 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5563c3e619d8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5563c3e61830 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x5563c3e617a0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x5563c3e61788 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5563c3e61738 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5563c3e4e5b8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5563c3e616d8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5563c3e60a38 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5563c3e60a28 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5563c3e61720 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5563c3e61708 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5563c3e60ef8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5563c3e60a60 <col:39> 'int' 0
|               |               `-BinaryOperator 0x5563c3e60af0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5563c3e60ac0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5563c3e60a80 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f0e0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x5563c3e60ad8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5563c3e60aa0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x5563c3e608d0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x5563c3e61a50 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5563c3e617e8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5563c3e617d8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x5563c3e52da8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5563c3e62098 <col:40, line:302:5>
|   |-DeclStmt 0x5563c3e61c90 <line:297:9, col:48>
|   | `-VarDecl 0x5563c3e61b70 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x5563c3e61c70 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x5563c3e61c18 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5563c3e61be8 <col:22> '<bound member function type>' ->subsec 0x5563c3e51c88
|   |     |   `-CXXThisExpr 0x5563c3e61bd8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x5563c3e61c58 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x5563c3e61c38 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f1b0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5563c3e62088 <line:298:9, col:70>
|     `-ExprWithCleanups 0x5563c3e62070 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5563c3e62040 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5563c3e62028 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5563c3e62008 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5563c3e61fd8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5563c3e61f00 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5563c3e61ee8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5563c3e61ca8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x5563c3e61b70 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5563c3e61f78 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5563c3e61f60 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5563c3e61f30 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5563c3e61f18 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x5563c3e61e88 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x5563c3e61e70 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5563c3e61e50 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5563c3e4e5b8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5563c3e61df0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5563c3e61cd8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5563c3e61cc8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5563c3e61e38 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5563c3e61e20 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5563c3e61db0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5563c3e61d00 <col:39> 'int' 0
|               |               `-BinaryOperator 0x5563c3e61d90 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5563c3e61d60 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5563c3e61d20 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f1b0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x5563c3e61d78 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5563c3e61d40 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x5563c3e61b70 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x5563c3e61fa8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5563c3e61ed0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5563c3e61ec0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x5563c3e52e68 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5563c3e62120 <col:40, line:306:5>
|   `-ReturnStmt 0x5563c3e62110 <line:305:9, col:17>
|     `-CXXConstructExpr 0x5563c3e620e0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x5563c3e620c8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5563c3e620b8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x5563c3e53008 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x5563c3e52f18 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e531d8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x5563c3e530e0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x5563c3e532c8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x5563c3e53438 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x5563c3e53378 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x5563c3e62268 <col:56, line:320:5>
|   `-ReturnStmt 0x5563c3e62258 <line:319:9, col:32>
|     `-ExprWithCleanups 0x5563c3e62240 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x5563c3e62210 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5563c3e621f8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5563c3e621b8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5563c3e62188 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5563c3e62148 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5563c3e53378 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x5563c3e621a0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5563c3e62168 <col:31> 'int' 0
|-CXXMethodDecl 0x5563c3e53678 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e534f0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5563c3e53568 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e62438 <col:72, line:326:5>
|   `-ReturnStmt 0x5563c3e62428 <line:325:9, col:51>
|     `-ExprWithCleanups 0x5563c3e62410 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5563c3e623e0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5563c3e623c8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5563c3e62388 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5563c3e62370 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5563c3e62290 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5563c3e534f0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5563c3e62330 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5563c3e62318 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5563c3e622b0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5563c3e57f60 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5563c3e62358 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5563c3e622d0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e53568 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e53828 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5563c3e53738 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5563c3e62b00 <col:56, line:337:5>
|   |-DeclStmt 0x5563c3e62738 <line:329:9, col:51>
|   | `-VarDecl 0x5563c3e62460 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5563c3e62720 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5563c3e626f0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5563c3e626d8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5563c3e626c0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5563c3e62690 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5563c3e62678 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5563c3e62660 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5563c3e62550 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5563c3e628f0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5563c3e627a0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5563c3e58808
|   | | `-MemberExpr 0x5563c3e62770 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5563c3e597b8
|   | |   `-DeclRefExpr 0x5563c3e62750 <col:9> 'Timestamp' lvalue Var 0x5563c3e62460 't' 'Timestamp'
|   | `-BinaryOperator 0x5563c3e628d0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5563c3e628a0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563c3e627d0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x5563c3e53738 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5563c3e628b8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5563c3e62880 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5563c3e62860 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5563c3e62830 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5563c3e627f0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5563c3e62848 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5563c3e62810 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4ef80 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5563c3e62ae8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x5563c3e62ab8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5563c3e62aa0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5563c3e62a80 <col:16> 'Timestamp' lvalue Var 0x5563c3e62460 't' 'Timestamp'
|-CXXMethodDecl 0x5563c3e539f0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e538e0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5563c3e53958 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e62cb8 <col:72, line:343:5>
|   `-ReturnStmt 0x5563c3e62ca8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x5563c3e62c90 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5563c3e62c60 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5563c3e62c48 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5563c3e62c08 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5563c3e62bf0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5563c3e62b38 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5563c3e538e0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5563c3e62bb0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5563c3e62b98 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5563c3e62b58 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5563c3e580a8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5563c3e62bd8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5563c3e62b78 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e53958 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e53b40 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5563c3e53ab0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5563c3e63100 <col:56, line:354:5>
|   |-DeclStmt 0x5563c3e62ea8 <line:346:9, col:51>
|   | `-VarDecl 0x5563c3e62ce0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5563c3e62e90 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5563c3e62e60 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5563c3e62e48 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5563c3e62e30 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5563c3e62e00 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5563c3e62de8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5563c3e62dd0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5563c3e62da0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5563c3e63060 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5563c3e62f10 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5563c3e58808
|   | | `-MemberExpr 0x5563c3e62ee0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5563c3e597b8
|   | |   `-DeclRefExpr 0x5563c3e62ec0 <col:9> 'Timestamp' lvalue Var 0x5563c3e62ce0 't' 'Timestamp'
|   | `-BinaryOperator 0x5563c3e63040 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5563c3e63010 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563c3e62f40 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x5563c3e53ab0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5563c3e63028 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5563c3e62ff0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5563c3e62fd0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5563c3e62fa0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5563c3e62f60 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5563c3e62fb8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5563c3e62f80 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4ee60 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5563c3e630e8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x5563c3e630b8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5563c3e630a0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5563c3e63080 <col:16> 'Timestamp' lvalue Var 0x5563c3e62ce0 't' 'Timestamp'
|-CXXMethodDecl 0x5563c3e53d08 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e53bf8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5563c3e53c70 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e632b8 <col:72, line:360:5>
|   `-ReturnStmt 0x5563c3e632a8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x5563c3e63290 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5563c3e63260 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5563c3e63248 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5563c3e63208 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5563c3e631f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5563c3e63138 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5563c3e53bf8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5563c3e631b0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5563c3e63198 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5563c3e63158 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5563c3e581f0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5563c3e631d8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5563c3e63178 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e53c70 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e53e58 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5563c3e53dc8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5563c3e6fc28 <col:56, line:371:5>
|   |-DeclStmt 0x5563c3e634a8 <line:363:9, col:51>
|   | `-VarDecl 0x5563c3e632e0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5563c3e63490 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5563c3e63460 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5563c3e63448 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5563c3e63430 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5563c3e63400 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5563c3e633e8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5563c3e633d0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5563c3e633a0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5563c3e6fb88 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5563c3e63510 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5563c3e58808
|   | | `-MemberExpr 0x5563c3e634e0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5563c3e597b8
|   | |   `-DeclRefExpr 0x5563c3e634c0 <col:9> 'Timestamp' lvalue Var 0x5563c3e632e0 't' 'Timestamp'
|   | `-CallExpr 0x5563c3e6fb28 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x5563c3e6fb10 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5563c3e63540 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5563c3e59ae8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x5563c3e6fb58 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563c3e63560 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x5563c3e53dc8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5563c3e6fb70 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x5563c3e6faf0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x5563c3e6fac0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x5563c3e63580 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4ecb0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x5563c3e6fad8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x5563c3e635a0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5563c3e6fc10 <line:370:9, col:16>
|     `-CXXConstructExpr 0x5563c3e6fbe0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5563c3e6fbc8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5563c3e6fba8 <col:16> 'Timestamp' lvalue Var 0x5563c3e632e0 't' 'Timestamp'
|-CXXMethodDecl 0x5563c3e53f48 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x5563c3e6fd68 <col:39, line:377:5>
|   `-ReturnStmt 0x5563c3e6fd58 <line:376:9, col:30>
|     `-ExprWithCleanups 0x5563c3e6fd40 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x5563c3e6fd10 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5563c3e6fcf8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5563c3e6fcb8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x5563c3e6fc60 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x5563c3e6fca0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5563c3e6fc80 <col:29> 'int' 1
|-CXXMethodDecl 0x5563c3e54008 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x5563c3e6fe48 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x5563c3e6fe00 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x5563c3e6fd90 <col:9> '<bound member function type>' ->assign 0x5563c3e54208
|     | `-CXXThisExpr 0x5563c3e6fd80 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5563c3e6fdc0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5563c3e6fe30 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5563c3e6fde0 <col:19> 'int' 0
|-CXXMethodDecl 0x5563c3e54208 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e540b8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5563c3e54130 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5563c3e5b3e0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5563c3e5b3c0 <col:60> 'int' 0
| `-CompoundStmt 0x5563c3e70040 <col:63, line:395:5>
|   `-BinaryOperator 0x5563c3e70020 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x5563c3e6fea0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x5563c3e58808
|     | `-MemberExpr 0x5563c3e6fe70 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x5563c3e597b8
|     |   `-CXXThisExpr 0x5563c3e6fe60 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x5563c3e70000 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x5563c3e6ff90 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x5563c3e6ff30 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x5563c3e6ff18 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x5563c3e6ff00 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x5563c3e6fed0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5563c3e540b8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x5563c3e6ff78 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x5563c3e6ff58 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x5563c3e6ffe8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x5563c3e6ffd0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x5563c3e6ffb0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e54130 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e543d8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e542c8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5563c3e54340 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e70198 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x5563c3e70150 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x5563c3e70068 <col:9> '<bound member function type>' ->assign 0x5563c3e54208
|     | `-CXXThisExpr 0x5563c3e70058 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5563c3e70180 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5563c3e70098 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5563c3e542c8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5563c3e70110 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5563c3e700f8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5563c3e700b8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5563c3e580a8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5563c3e70138 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5563c3e700d8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e54340 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e545a8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e54498 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5563c3e54510 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e702f0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x5563c3e702a8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x5563c3e701c0 <col:9> '<bound member function type>' ->assign 0x5563c3e54208
|     | `-CXXThisExpr 0x5563c3e701b0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5563c3e702d8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5563c3e701f0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5563c3e54498 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5563c3e70268 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5563c3e70250 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5563c3e70210 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5563c3e581f0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5563c3e70290 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5563c3e70230 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e54510 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e54778 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e54668 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5563c3e546e0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5563c3e5b418 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5563c3e5b3f8 <col:57> 'int' 0
| `-DeprecatedAttr 0x5563c3e54828 <col:75> "" ""
|-CXXMethodDecl 0x5563c3e549b8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e548a8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5563c3e54920 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5563c3e54a68 <col:74> "" ""
|-CXXMethodDecl 0x5563c3e54bf8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e54ae8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5563c3e54b60 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5563c3e54ca8 <col:74> "" ""
|-CXXMethodDecl 0x5563c3e54d38 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x5563c3e54dd8 <col:42> "" ""
|-CXXMethodDecl 0x5563c3e57610 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x5563c3e574f0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5563c3e57570 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x5563c3e576e0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x5563c3e577a0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x5563c3e57840 <col:20>
| `-OptimizeNoneAttr 0x5563c3e57898 <col:30>
|-CXXMethodDecl 0x5563c3e578e0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x5563c3e579a0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x5563c3e57a60 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x5563c3e57b20 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x5563c3e57be0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x5563c3e57ca0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x5563c3e57d60 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x5563c3e57e20 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x5563c3e57f60 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e57ed0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e70438 <col:58, line:512:5>
|   `-ReturnStmt 0x5563c3e70428 <line:511:9, col:53>
|     `-BinaryOperator 0x5563c3e70408 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5563c3e703d8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5563c3e70308 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e57ed0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5563c3e703f0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5563c3e703b8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5563c3e70398 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5563c3e70368 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5563c3e70328 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5563c3e70380 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5563c3e70348 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4ef80 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5563c3e580a8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e58018 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e70580 <col:58, line:516:5>
|   `-ReturnStmt 0x5563c3e70570 <line:515:9, col:53>
|     `-BinaryOperator 0x5563c3e70550 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5563c3e70520 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5563c3e70450 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e58018 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5563c3e70538 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5563c3e70500 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5563c3e704e0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5563c3e704b0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5563c3e70470 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5563c3e704c8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5563c3e70490 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4ee60 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5563c3e581f0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e58160 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e706c8 <col:58, line:520:5>
|   `-ReturnStmt 0x5563c3e706b8 <line:519:9, col:53>
|     `-BinaryOperator 0x5563c3e70698 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5563c3e70668 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5563c3e70598 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e58160 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5563c3e70680 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5563c3e70648 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5563c3e70628 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5563c3e705f8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5563c3e705b8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4ecb0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5563c3e70610 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5563c3e705d8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5563c3e58338 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e582a8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e70810 <col:60, line:524:5>
|   `-ReturnStmt 0x5563c3e70800 <line:523:9, col:55>
|     `-BinaryOperator 0x5563c3e707e0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5563c3e707b0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5563c3e706e0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e582a8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5563c3e707c8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5563c3e70790 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5563c3e70770 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5563c3e70740 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5563c3e70700 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5563c3e70758 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5563c3e70720 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4ef80 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5563c3e58480 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e583f0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e70958 <col:60, line:528:5>
|   `-ReturnStmt 0x5563c3e70948 <line:527:9, col:55>
|     `-BinaryOperator 0x5563c3e70928 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5563c3e708f8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5563c3e70828 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e583f0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5563c3e70910 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5563c3e708d8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5563c3e708b8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5563c3e70888 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5563c3e70848 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5563c3e708a0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5563c3e70868 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4ee60 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5563c3e585c8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e58538 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e70aa0 <col:60, line:532:5>
|   `-ReturnStmt 0x5563c3e70a90 <line:531:9, col:55>
|     `-BinaryOperator 0x5563c3e70a70 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5563c3e70a40 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5563c3e70970 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e58538 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5563c3e70a58 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5563c3e70a20 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5563c3e70a00 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5563c3e709d0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5563c3e70990 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4ecb0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5563c3e709e8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5563c3e709b0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5563c3e4f010 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x5563c3e58670 prev 0x5563c3e4f4b0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5563c3e58768 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x5563c3e58808 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x5563c3e5f5d0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5563c3e5f9b8 <col:11>
| |-CXXConstructorDecl 0x5563c3e5f6b0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5563c3e5f798 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5563c3e60100 <col:11>
| |-CXXConstructorDecl 0x5563c3e5f838 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x5563c3e5f948 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x5563c3e61958 <col:11>
| |-CXXDestructorDecl 0x5563c3e60c68 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5563c3b67818 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5563c3b67928 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5563c3b681f0 <col:11>
| |   `-ReturnStmt 0x5563c3b681e0 <col:11>
| |     `-UnaryOperator 0x5563c3b681c8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5563c3b681b8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x5563c3b67998 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x5563c3b67aa8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x5563c3ef5c90 <col:11>
|     `-ReturnStmt 0x5563c3ef5c80 <col:11>
|       `-UnaryOperator 0x5563c3ef5c68 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5563c3ef5c58 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x5563c3e58870 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x5563c3e58970 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5563c3e58b70 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e58950 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5563c3e58930 <col:21> 'int' 0
| |-EnumConstantDecl 0x5563c3e58a00 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5563c3e58b88 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e589e0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x5563c3e589c0 <col:23> 'int' 1
| |-EnumConstantDecl 0x5563c3e58a90 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5563c3e58ba0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e58a70 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x5563c3e58a50 <col:23> 'int' 2
| `-EnumConstantDecl 0x5563c3e58b20 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x5563c3e58bb8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3e58b00 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x5563c3e58ae0 <col:27> 'int' 3
|-CXXMethodDecl 0x5563c3e58bf8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x5563c3e58cc0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x5563c3e58ec8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x5563c3e58d70 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x5563c3e58df0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x5563c3e5b430 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x5563c3e590d8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x5563c3e58f88 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x5563c3e59000 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x5563c3e591a8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x5563c3e59268 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x5563c3e593d8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x5563c3e59318 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x5563c3e594a0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x5563c3e59560 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x5563c3e59620 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x5563c3e596e0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x5563c3e59780 <line:670:3, col:10> col:3 private
|-FieldDecl 0x5563c3e597b8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x5563c3e59828 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x5563c3e70ab8 <col:27, line:684:5>
|-CXXMethodDecl 0x5563c3e598e8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x5563c3e70ac8 <col:27, line:696:5>
|-CXXMethodDecl 0x5563c3e59ae8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e59998 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x5563c3e59a10 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e70c50 <col:66, line:700:5>
|   `-ReturnStmt 0x5563c3e70c40 <line:699:9, col:31>
|     `-CallExpr 0x5563c3e70be0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x5563c3e70bc8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5563c3e70b78 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x5563c3cdbe98 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x5563c3e70c10 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x5563c3e70b38 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x5563c3e59998 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x5563c3e70c28 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5563c3e70b58 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e59a10 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e59e58 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e59ba8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x5563c3e59c20 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x5563c3e59c98 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x5563c3e59d10 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3e70fa0 <col:64, line:707:5>
|   |-DeclStmt 0x5563c3e70ce0 <line:704:9, col:24>
|   | `-VarDecl 0x5563c3e70c78 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x5563c3e70ef0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x5563c3e70cf8 <col:9> 'int32_t':'int' lvalue ParmVar 0x5563c3e59c20 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x5563c3e70ed8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x5563c3e70e70 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x5563c3e70e58 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3e70dd8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x5563c3ce1168 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x5563c3e70ea8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5563c3e70d78 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x5563c3e59c98 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x5563c3e70ec0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5563c3e70d98 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3e59d10 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x5563c3e70db8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x5563c3e70c78 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x5563c3e70f80 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x5563c3e70f10 <col:9> 'int32_t':'int' lvalue ParmVar 0x5563c3e59ba8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x5563c3e70f68 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x5563c3e70f50 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x5563c3e70f30 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x5563c3e70c78 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x5563c3e5a0f8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x5563c3e59f28 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x5563c3e59fa0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x5563c3e5a018 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x5563c3e5a398 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x5563c3e5a1c0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x5563c3e5a238 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x5563c3e5a2b0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x5563c3e5a528 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x5563c3e5a460 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x5563c3e5a728 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x5563c3e5a5e0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x5563c3e5a658 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x5563c3e5a9f8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x5563c3e5a938 parent 0x5563c395b278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5563c3e5a7e8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x5563c3e5a860 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x5563c3e5ac18 <line:718:5, col:72> col:24
| `-FunctionDecl 0x5563c3e5ab58 parent 0x5563c395b278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5563c3e5aa48 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x5563c3e5aac0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x5563c3e5ade0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x5563c3e5ad28 parent 0x5563c395b278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x5563c3e5ac68 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x5563c3e5b068 <line:720:5, col:73> col:30
| `-FunctionDecl 0x5563c3e5afa8 parent 0x5563c395b278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5563c3e5ae58 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x5563c3e5aed0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x5563c3e5b288 <line:721:5, col:73> col:30
| `-FunctionDecl 0x5563c3e5b1c8 parent 0x5563c395b278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5563c3e5b0b8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x5563c3e5b130 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x5563c3e60b10 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5563c3e60bf8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x5563c3e597b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5563c3e61668 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x5563c3e61620 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x5563c3e597b8
| |     `-DeclRefExpr 0x5563c3e61600 <col:7> 'const Timestamp' lvalue ParmVar 0x5563c3e60bf8 '' 'const Timestamp &'
| `-CompoundStmt 0x5563c3e616c8 <col:7>
|-CXXConstructorDecl 0x5563c3e60d78 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5563c3e60e88 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x5563c3e597b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5563c3e61968 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x5563c3e61910 <col:7> 'Timestamp::rep_t' xvalue ._t 0x5563c3e597b8
| |     `-CXXStaticCastExpr 0x5563c3e618e0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x5563c3e618b0 <col:7> 'Timestamp' lvalue ParmVar 0x5563c3e60e88 '' 'Timestamp &&'
| `-CompoundStmt 0x5563c3e619c8 <col:7>
|-CXXDestructorDecl 0x5563c3e60f38 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5563c3b67668 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5563c3b67778 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x5563c3b68268 <col:7>
|   |-CXXMemberCallExpr 0x5563c3b68208 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x5563c3b68148 <col:7> '<bound member function type>' .operator= 0x5563c3b67818
|   | | `-MemberExpr 0x5563c3b68058 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x5563c3e597b8
|   | |   `-CXXThisExpr 0x5563c3b68048 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x5563c3b68118 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x5563c3e597b8
|   |   `-DeclRefExpr 0x5563c3b680f8 <col:7> 'const Timestamp' lvalue ParmVar 0x5563c3b67778 '' 'const Timestamp &'
|   `-ReturnStmt 0x5563c3b68258 <col:7>
|     `-UnaryOperator 0x5563c3b68240 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5563c3b68230 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x5563c3b67b18 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5563c3b67c28 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x5563c3ef5d08 <col:7>
    |-CXXMemberCallExpr 0x5563c3ef5ca8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x5563c3ef5c10 <col:7> '<bound member function type>' .operator= 0x5563c3b67998
    | | `-MemberExpr 0x5563c3ef5ae0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x5563c3e597b8
    | |   `-CXXThisExpr 0x5563c3ef5ad0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x5563c3ef5be0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x5563c3e597b8
    |   `-CXXStaticCastExpr 0x5563c3ef5bb0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x5563c3ef5b80 <col:7> 'Timestamp' lvalue ParmVar 0x5563c3b67c28 '' 'Timestamp &&'
    `-ReturnStmt 0x5563c3ef5cf8 <col:7>
      `-UnaryOperator 0x5563c3ef5ce0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5563c3ef5cd0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3ef2ce8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5563c3ef2e18 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x5563c3ef3908 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.13 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3f68f50 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5563c3f69068 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x5563c3f69138 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x5563c3f69198 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x5563c3f69200 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x5563c3f69288 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x5563c3f694f0 <col:16, line:46:5>
|   |-BinaryOperator 0x5563c3f69438 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x5563c3f69358 <col:9> 'TaskLink *' lvalue ->_prev 0x5563c3f69138
|   | | `-CXXThisExpr 0x5563c3f69348 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x5563c3f69420 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x5563c3f69400 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x5563c3f69398 <col:17> 'TaskLink *' lvalue ->_next 0x5563c3f69198
|   |     | `-CXXThisExpr 0x5563c3f69388 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x5563c3f693e8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x5563c3f693c8 <col:25> 'int' 0
|   `-BinaryOperator 0x5563c3f694d0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x5563c3f69468 <col:9> 'unsigned int' lvalue ->_pass 0x5563c3f69200
|     | `-CXXThisExpr 0x5563c3f69458 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x5563c3f694b8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5563c3f69498 <col:17> 'int' 0
|-CXXConstructorDecl 0x5563c3fd2c58 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x5563c3fd2c58
| `-ParmVarDecl 0x5563c3fd2d68 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x5563c3fd2e08 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x5563c3fd2e08
| `-ParmVarDecl 0x5563c3fd2f18 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x5563c3fd3108 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x5563c3fd3108
|-CXXMethodDecl 0x5563c3fd3908 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x5563c3fd3908
| `-ParmVarDecl 0x5563c3fd3a18 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x5563c3fd3a88 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x5563c3fd3a88
  `-ParmVarDecl 0x5563c3fd3b98 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3f7aad8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x5563c3f7ace8 prev 0x5563c3f7aad8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5563c3f7bef0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x5563c3f7bea0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x5563c3f7be80 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x5563c3f7bd30 'type'
|     `-SubstTemplateTypeParmType 0x5563c3f7bb50 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x5563c3c24020 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c23fc8 'T'
|       `-RecordType 0x5563c3f7b6a0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x5563c3f7b5b8 'sized_array_memory'
|-FieldDecl 0x5563c3f7fbc0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x5563c3f7fc10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5563c3f7fc48 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x5563c3f7ad80 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|   `-RecordType 0x5563c3f79ce0 'TimerSet::heap_element'
|     `-CXXRecord 0x5563c3f79c50 'heap_element'
|-TypedefDecl 0x5563c3f7fd08 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x5563c3f7fcd0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x5563c3f7ad80 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3f79ce0 'TimerSet::heap_element'
|       `-CXXRecord 0x5563c3f79c50 'heap_element'
|-TypedefDecl 0x5563c3f7fd98 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x5563c3f7fd60 'const TimerSet::heap_element &'
|   `-QualType 0x5563c3f7ad81 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5563c3f7ad80 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3f79ce0 'TimerSet::heap_element'
|         `-CXXRecord 0x5563c3f79c50 'heap_element'
|-TypedefDecl 0x5563c3f7fe28 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x5563c3f7fdf0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x5563c3f7ad80 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3f79ce0 'TimerSet::heap_element'
|       `-CXXRecord 0x5563c3f79c50 'heap_element'
|-TypedefDecl 0x5563c3f7fee8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x5563c3f7feb0 'const TimerSet::heap_element *'
|   `-QualType 0x5563c3f7ad81 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5563c3f7ad80 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3f79ce0 'TimerSet::heap_element'
|         `-CXXRecord 0x5563c3f79c50 'heap_element'
|-TypedefDecl 0x5563c3f80b40 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x5563c3f80af0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x5563c3f80ad0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x5563c3f80a08 'type'
|     `-LValueReferenceType 0x5563c3f809d0 'const TimerSet::heap_element &'
|       `-QualType 0x5563c3f80771 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x5563c3f80770 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x5563c3c2e6f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5563c3c2e698 'T'
|           `-RecordType 0x5563c3f79ce0 'TimerSet::heap_element'
|             `-CXXRecord 0x5563c3f79c50 'heap_element'
|-TypedefDecl 0x5563c3f80ba8 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x5563c3f7fd60 'const TimerSet::heap_element &'
|   `-QualType 0x5563c3f7ad81 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5563c3f7ad80 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3f79ce0 'TimerSet::heap_element'
|         `-CXXRecord 0x5563c3f79c50 'heap_element'
|-TypedefDecl 0x5563c3f80c00 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f80c68 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x5563c3f7fdf0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x5563c3f7ad80 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3f79ce0 'TimerSet::heap_element'
|       `-CXXRecord 0x5563c3f79c50 'heap_element'
|-TypedefDecl 0x5563c3f80cd0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x5563c3f7feb0 'const TimerSet::heap_element *'
|   `-QualType 0x5563c3f7ad81 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5563c3f7ad80 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3f79ce0 'TimerSet::heap_element'
|         `-CXXRecord 0x5563c3f79c50 'heap_element'
|-EnumDecl 0x5563c3f80d28 <line:134:5> col:5
| `-EnumConstantDecl 0x5563c3f80e20 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5563c3f80e00 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5563c3c5d398 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5563c3c5d370 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5563c3c5d350 <col:40> 'int' 1
|-CXXConstructorDecl 0x5563c3f80ea8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5563c3f81138 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f80f60 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3f81000 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x5563c3f813f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5563c3f812e0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x5563c3f816b8 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x5563c3f815a0 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x5563c3f81a00 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5563c3f818e0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x5563c3f81d10 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x5563c3f81bf0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x5563c3f82000 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f81e48 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3f81ec0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5563c3f82158 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x5563c3f82238 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f82290 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f822d8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x5563c3f82388 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f823e0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f824a8 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f82558 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f825b0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f825f8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f826a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f82700 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f82748 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f827f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f82850 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f82898 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f82948 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f829a0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f829c8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3f82a78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3f82b28 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5563c3f82ce8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f82bd8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3f82c50 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5563c3f82e38 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3f82da8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f82fe8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x5563c3f82ef0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3f830a0 <col:20>
| `-OptimizeNoneAttr 0x5563c3f830f8 <col:30>
|-CXXMethodDecl 0x5563c3f83218 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x5563c3f83120 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3f832d0 <col:20>
| `-OptimizeNoneAttr 0x5563c3f83328 <col:30>
|-CXXMethodDecl 0x5563c3f833e0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3f83350 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f83528 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3f83498 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f83658 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x5563c3f83788 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x5563c3f83858 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x5563c3f83928 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x5563c3f83a68 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3f839d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f83bb0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3f83b20 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f83cf8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x5563c3f83c68 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3f83db0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5563c3f83eb0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5563c3f83e20 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3f83f68 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5563c3f84028 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x5563c3f84128 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x5563c3f842d8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3f841e8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x5563c3f84a98 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5563c3f84390 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x5563c3f849f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x5563c3f848f8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x5563c3f84b78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c3f84cc8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3f84c38 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5563c3f84d80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5563c3f84fc8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f84e40 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x5563c3f84eb8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5563c3f85188 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x5563c3f85098 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x5563c3f853d8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x5563c3f85250 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x5563c3f852c8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x5563c3f85498 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c3f856f8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5563c3f85600 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x5563c3f857c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5563c3f857c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3f85910 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x5563c3f85b18 prev 0x5563c3f85910 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5563c3f87f00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5563c3f87eb0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x5563c3f87e90 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x5563c3f87d48 'type'
|     `-SubstTemplateTypeParmType 0x5563c3f868c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5563c3c24020 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c23fc8 'T'
|       `-RecordType 0x5563c3f86410 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5563c3f86328 'sized_array_memory'
|-FieldDecl 0x5563c3f8bb30 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5563c3f8bb80 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5563c3f8bbb8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x5563c3f85bb0 'Timer *' sugar
|   |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|   `-PointerType 0x5563c3ec08a0 'Timer *'
|     `-RecordType 0x5563c3ebf9f0 'Timer'
|       `-CXXRecord 0x5563c3edd518 'Timer'
|-TypedefDecl 0x5563c3f8bc78 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x5563c3f8bc40 'Timer *&'
|   `-SubstTemplateTypeParmType 0x5563c3f85bb0 'Timer *' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-PointerType 0x5563c3ec08a0 'Timer *'
|       `-RecordType 0x5563c3ebf9f0 'Timer'
|         `-CXXRecord 0x5563c3edd518 'Timer'
|-TypedefDecl 0x5563c3f8bd38 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x5563c3f8bd00 'Timer *const &'
|   `-QualType 0x5563c3f85bb1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5563c3f85bb0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-PointerType 0x5563c3ec08a0 'Timer *'
|         `-RecordType 0x5563c3ebf9f0 'Timer'
|           `-CXXRecord 0x5563c3edd518 'Timer'
|-TypedefDecl 0x5563c3f8bdf8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x5563c3f8bdc0 'Timer **'
|   `-SubstTemplateTypeParmType 0x5563c3f85bb0 'Timer *' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-PointerType 0x5563c3ec08a0 'Timer *'
|       `-RecordType 0x5563c3ebf9f0 'Timer'
|         `-CXXRecord 0x5563c3edd518 'Timer'
|-TypedefDecl 0x5563c3f8beb8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x5563c3f8be80 'Timer *const *'
|   `-QualType 0x5563c3f85bb1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5563c3f85bb0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-PointerType 0x5563c3ec08a0 'Timer *'
|         `-RecordType 0x5563c3ebf9f0 'Timer'
|           `-CXXRecord 0x5563c3edd518 'Timer'
|-TypedefDecl 0x5563c3f8ca90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x5563c3f8ca40 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x5563c3f8ca20 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x5563c3f8c9b0 'type'
|     `-SubstTemplateTypeParmType 0x5563c3f8c770 'Timer *' sugar
|       |-TemplateTypeParmType 0x5563c3c2ee20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c2edd0 'T'
|       `-PointerType 0x5563c3ec08a0 'Timer *'
|         `-RecordType 0x5563c3ebf9f0 'Timer'
|           `-CXXRecord 0x5563c3edd518 'Timer'
|-TypedefDecl 0x5563c3f8caf8 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x5563c3f8bd00 'Timer *const &'
|   `-QualType 0x5563c3f85bb1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5563c3f85bb0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-PointerType 0x5563c3ec08a0 'Timer *'
|         `-RecordType 0x5563c3ebf9f0 'Timer'
|           `-CXXRecord 0x5563c3edd518 'Timer'
|-TypedefDecl 0x5563c3f8cb50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3f8cbb8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x5563c3f8bdc0 'Timer **'
|   `-SubstTemplateTypeParmType 0x5563c3f85bb0 'Timer *' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-PointerType 0x5563c3ec08a0 'Timer *'
|       `-RecordType 0x5563c3ebf9f0 'Timer'
|         `-CXXRecord 0x5563c3edd518 'Timer'
|-TypedefDecl 0x5563c3f8cc20 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x5563c3f8be80 'Timer *const *'
|   `-QualType 0x5563c3f85bb1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5563c3f85bb0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-PointerType 0x5563c3ec08a0 'Timer *'
|         `-RecordType 0x5563c3ebf9f0 'Timer'
|           `-CXXRecord 0x5563c3edd518 'Timer'
|-EnumDecl 0x5563c3f8cc78 <line:134:5> col:5
| `-EnumConstantDecl 0x5563c3f8cd70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5563c3f8cd50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5563c3c5d398 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5563c3c5d370 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5563c3c5d350 <col:40> 'int' 1
|-CXXConstructorDecl 0x5563c3f8cdf8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5563c3f8d088 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f8ceb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3f8cf50 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x5563c3f8d348 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5563c3f8d230 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x5563c3f8d608 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x5563c3f8d4f0 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x5563c3f8d950 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5563c3f8d830 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x5563c3f8dc60 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x5563c3f8db40 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x5563c3f8df50 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f8dd98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3f8de10 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5563c3f8e0a8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x5563c3f8e188 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f8e1e0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f8e228 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x5563c3f8e2d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f8e330 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f8e3f8 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f8e4a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f8e500 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f8e548 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f8e5f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f8e650 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f8e698 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f8e748 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f8e7a0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f8e7e8 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5563c3f8e898 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3f8e8f0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3f8e918 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3f8e9c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3f8ea78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5563c3f8ec38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f8eb28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3f8eba0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5563c3f8ed88 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3f8ecf8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f8ef38 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x5563c3f8ee40 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3f8eff0 <col:20>
| `-OptimizeNoneAttr 0x5563c3f8f048 <col:30>
|-CXXMethodDecl 0x5563c3f8f168 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5563c3f8f070 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3f8f220 <col:20>
| `-OptimizeNoneAttr 0x5563c3f8f278 <col:30>
|-CXXMethodDecl 0x5563c3f8f330 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3f8f2a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f8f478 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3f8f3e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f8f5a8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x5563c3f8f6d8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x5563c3f8f7a8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x5563c3f8f878 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x5563c3f8f9b8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3f8f928 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f8fb00 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3f8fa70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3f91620 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5563c3f91590 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3f916d8 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5563c3f917d8 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5563c3f91748 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3f91890 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5563c3f91948 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x5563c3f91a48 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x5563c3f91bc8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3f91b08 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x5563c3f92388 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5563c3f91c80 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x5563c3f922e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x5563c3f921e8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x5563c3f92468 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c3f925b8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3f92528 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5563c3f92670 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5563c3f928b8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3f92730 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x5563c3f927a8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5563c3f92a78 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x5563c3f92988 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x5563c3f92cc8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x5563c3f92b40 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x5563c3f92bb8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x5563c3f92d88 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c3f92fe8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5563c3f92ef0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x5563c3f930b8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5563c3f930b8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3ed9f50 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5563c3eda068 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x5563c3eda0f8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x5563c3eda180 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x5563c3eda270 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x5563c3eda370 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x5563c3eda430 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x5563c3eda4f0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x5563c3eda618 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x5563c3eda618
| `-ParmVarDecl 0x5563c3eda728 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x5563c3f93e68 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x5563c3f93e68
  `-ParmVarDecl 0x5563c3f93f78 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3f78dd0 prev 0x5563c3ef3798 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5563c3f78ec8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x5563c3f78f58 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x5563c3f78fe0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x5563c3f790d8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x5563c3f942e0 <col:43, col:67>
|   `-ReturnStmt 0x5563c3f942d0 <col:45, col:52>
|     `-CXXConstructExpr 0x5563c3f942a0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x5563c3f94270 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x5563c3f7a8c0
|         `-CXXThisExpr 0x5563c3f94260 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5563c3f79198 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x5563c3f793a0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x5563c3f79248 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x5563c3f792c0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x5563c3f79498 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x5563c3f79560 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x5563c3f94360 <col:39, col:67>
|   `-ReturnStmt 0x5563c3f94350 <col:41, col:48>
|     `-ImplicitCastExpr 0x5563c3f94338 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5563c3f94308 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x5563c3f7a9a8
|         `-CXXThisExpr 0x5563c3f942f8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5563c3f79628 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x5563c3f943e0 <col:35, col:59>
|   `-ReturnStmt 0x5563c3f943d0 <col:37, col:44>
|     `-ImplicitCastExpr 0x5563c3f943b8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5563c3f94388 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x5563c3f7aa10
|         `-CXXThisExpr 0x5563c3f94378 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5563c3f79770 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x5563c3f796e0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x5563c3f798b8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5563c3f79828 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5563c3f79ab8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x5563c3f79970 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x5563c3f799e8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x5563c3f79b88 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x5563c3f79c28 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x5563c3f79c50 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5563c3f79d68 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x5563c3f79e08 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x5563c3f79e68 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x5563c3f79f98 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x5563c3f79ec8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x5563c3f79e08 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x5563c3f944b8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x5563c3f94460 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x5563c3f94430 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x5563c3edeb88
|   |       `-ImplicitCastExpr 0x5563c3f94480 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x5563c3f94418 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x5563c3f943f8 <col:17> 'Timer *' lvalue ParmVar 0x5563c3f79ec8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x5563c3f79e68 't' 'Timer *'
|   | `-ImplicitCastExpr 0x5563c3f94550 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563c3f94510 <col:41> 'Timer *' lvalue ParmVar 0x5563c3f79ec8 't_' 'Timer *'
|   `-CompoundStmt 0x5563c3f945a0 <col:45, line:44:2>
|-CXXRecordDecl 0x5563c3f7a060 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5563c3f7a178 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x5563c3f7a3c8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x5563c3f7a248 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x5563c3f7a2c0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x5563c3f946d0 <col:71, line:49:2>
|     `-ReturnStmt 0x5563c3f946c0 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x5563c3f94688 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x5563c3f94670 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5563c3f94650 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x5563c3e7dc08 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x5563c3f945d0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x5563c3f79e08
|         | `-DeclRefExpr 0x5563c3f945b0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x5563c3f7a248 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x5563c3f94620 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x5563c3f79e08
|           `-DeclRefExpr 0x5563c3f94600 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x5563c3f7a2c0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x5563c3f7a490 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5563c3f7a5a8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x5563c3f7a7c8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x5563c3f7a648 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x5563c3f7a6c0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x5563c3f948d8 <col:63, line:54:2>
|     `-BinaryOperator 0x5563c3f948b8 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x5563c3f94768 <col:6, col:12> 'int' lvalue ->_schedpos1 0x5563c3ef2c38
|       | `-ImplicitCastExpr 0x5563c3f94750 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x5563c3f94720 <col:6, col:9> 'Timer *' lvalue ->t 0x5563c3f79e68
|       |     `-ImplicitCastExpr 0x5563c3f94708 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x5563c3f946e8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x5563c3f7a6c0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x5563c3f948a0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x5563c3f94880 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x5563c3f94828 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x5563c3f94808 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x5563c3f947d8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x5563c3f94798 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x5563c3f7a6c0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x5563c3f947f0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x5563c3f947b8 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x5563c3f7a648 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x5563c3f94868 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x5563c3f94848 <col:39> 'int' 1
|-FieldDecl 0x5563c3f7a8c0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x5563c3f7a930 <col:44, col:53> aligned
|   `-ConstantExpr 0x5563c3f7a910 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x5563c3f7a890 <col:52> 'int' 8
|-FieldDecl 0x5563c3f7a9a8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x5563c3f7aa10 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x5563c3f7aa78 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x5563c3f858b0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x5563c3f931a0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x5563c3f93200 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x5563c3f93260 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x5563c3f932c0 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3f933b0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x5563c3f93320 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x5563c3f93478 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x5563c3f94d30 <col:29, line:81:5>
|   `-IfStmt 0x5563c3f94d08 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x5563c3f949c0 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x5563c3f94960 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x5563c3f94930 <col:6, col:18> '<bound member function type>' .size 0x5563c3f829c8
|     |     `-ImplicitCastExpr 0x5563c3f949a8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x5563c3f94900 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x5563c3f858b0
|     |         `-CXXThisExpr 0x5563c3f948f0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x5563c3f94bb0 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x5563c3f94b98 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x5563c3f94b78 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x5563c3b67668 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x5563c3f949e8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x5563c3f7a8c0
|     | | `-CXXThisExpr 0x5563c3f949d8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x5563c3f94b60 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x5563c3f94b30 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x5563c3f79e08
|     |     `-CXXMemberCallExpr 0x5563c3f94b08 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x5563c3f94ad8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x5563c3f83a68
|     |       | `-MemberExpr 0x5563c3f94a28 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x5563c3f858b0
|     |       |   `-CXXThisExpr 0x5563c3f94a18 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x5563c3f94ab8 <col:47> 'int' 0
|     `-ExprWithCleanups 0x5563c3f94cf0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x5563c3f94cb8 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x5563c3f94ca0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5563c3f94c80 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x5563c3b67b18 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x5563c3f94bf8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x5563c3f7a8c0
|         | `-CXXThisExpr 0x5563c3f94be8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x5563c3f94c68 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5563c3f94c38 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x5563c3f935b8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x5563c3f93528 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x5563c3f93680 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x5563c3f93740 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x5563c3f93800 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x5563c3f938f0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x5563c3f93958 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x5563c3f93958
| `-ParmVarDecl 0x5563c3f93a68 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x5563c3f93b08 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x5563c3f93b08
| `-ParmVarDecl 0x5563c3f93c18 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x5563c3f93cb8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x5563c3f93cb8
| `-ParmVarDecl 0x5563c3f93dc8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x5563c3f93fe8 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x5563c3f93fe8
| `-ParmVarDecl 0x5563c3f940f8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x5563c3f94180 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x5563c3f94180

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3fb9c18 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x5563c3fb9e28 prev 0x5563c3fb9c18 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5563c3fbbf30 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5563c3fbbee0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x5563c3fbbec0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x5563c3fbbd70 'type'
|     `-SubstTemplateTypeParmType 0x5563c3f868c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5563c3c24020 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c23fc8 'T'
|       `-RecordType 0x5563c3f86410 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5563c3f86328 'sized_array_memory'
|-FieldDecl 0x5563c3fbc030 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5563c3fbc080 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5563c3fbc0b8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x5563c3fb9ec0 'pollfd' sugar
|   |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|   `-RecordType 0x5563c3fb7cd0 'pollfd'
|     `-CXXRecord 0x5563c3fb7c40 'pollfd'
|-TypedefDecl 0x5563c3fbc178 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x5563c3fbc140 'pollfd &'
|   `-SubstTemplateTypeParmType 0x5563c3fb9ec0 'pollfd' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3fb7cd0 'pollfd'
|       `-CXXRecord 0x5563c3fb7c40 'pollfd'
|-TypedefDecl 0x5563c3fbc238 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x5563c3fbc200 'const pollfd &'
|   `-QualType 0x5563c3fb9ec1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5563c3fb9ec0 'pollfd' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3fb7cd0 'pollfd'
|         `-CXXRecord 0x5563c3fb7c40 'pollfd'
|-TypedefDecl 0x5563c3fbc2c8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x5563c3fbc290 'pollfd *'
|   `-SubstTemplateTypeParmType 0x5563c3fb9ec0 'pollfd' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3fb7cd0 'pollfd'
|       `-CXXRecord 0x5563c3fb7c40 'pollfd'
|-TypedefDecl 0x5563c3fbc388 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x5563c3fbc350 'const pollfd *'
|   `-QualType 0x5563c3fb9ec1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5563c3fb9ec0 'pollfd' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3fb7cd0 'pollfd'
|         `-CXXRecord 0x5563c3fb7c40 'pollfd'
|-TypedefDecl 0x5563c3fbcf60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x5563c3fbcf10 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x5563c3fbcef0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x5563c3fbce80 'type'
|     `-SubstTemplateTypeParmType 0x5563c3fbcc40 'pollfd' sugar
|       |-TemplateTypeParmType 0x5563c3c2ee20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c2edd0 'T'
|       `-RecordType 0x5563c3fb7cd0 'pollfd'
|         `-CXXRecord 0x5563c3fb7c40 'pollfd'
|-TypedefDecl 0x5563c3fbcfc8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x5563c3fbc200 'const pollfd &'
|   `-QualType 0x5563c3fb9ec1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5563c3fb9ec0 'pollfd' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3fb7cd0 'pollfd'
|         `-CXXRecord 0x5563c3fb7c40 'pollfd'
|-TypedefDecl 0x5563c3fbd020 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3fbd088 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x5563c3fbc290 'pollfd *'
|   `-SubstTemplateTypeParmType 0x5563c3fb9ec0 'pollfd' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3fb7cd0 'pollfd'
|       `-CXXRecord 0x5563c3fb7c40 'pollfd'
|-TypedefDecl 0x5563c3fbd0f0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x5563c3fbc350 'const pollfd *'
|   `-QualType 0x5563c3fb9ec1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5563c3fb9ec0 'pollfd' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3fb7cd0 'pollfd'
|         `-CXXRecord 0x5563c3fb7c40 'pollfd'
|-EnumDecl 0x5563c3fbd148 <line:134:5> col:5
| `-EnumConstantDecl 0x5563c3fbd240 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5563c3fbd220 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5563c3c5d398 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5563c3c5d370 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5563c3c5d350 <col:40> 'int' 1
|-CXXConstructorDecl 0x5563c3fbd2c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5563c3fbd558 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3fbd380 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3fbd420 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x5563c3fbd818 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5563c3fbd700 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x5563c3fbdad8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x5563c3fbd9c0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x5563c3fbde20 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5563c3fbdd00 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x5563c3fbe130 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x5563c3fbe010 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x5563c3fbe420 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3fbe268 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3fbe2e0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5563c3fbe578 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x5563c3fbe658 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3fbe6b0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3fbe6f8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x5563c3fbe7a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3fbe800 <col:30> Inherited
|-CXXMethodDecl 0x5563c3fbe8c8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5563c3fbe978 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3fbe9d0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3fbea18 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5563c3fbeac8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3fbeb20 <col:30> Inherited
|-CXXMethodDecl 0x5563c3fbeb68 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5563c3fbec18 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3fbec70 <col:30> Inherited
|-CXXMethodDecl 0x5563c3fbecb8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5563c3fbed68 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3fbedc0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3fbede8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3fbee98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3fbef48 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5563c3fbf108 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3fbeff8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3fbf070 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5563c3fbf258 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3fbf1c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3fbf408 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x5563c3fbf310 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3fbf4c0 <col:20>
| `-OptimizeNoneAttr 0x5563c3fbf518 <col:30>
|-CXXMethodDecl 0x5563c3fbf638 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x5563c3fbf540 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3fbf6f0 <col:20>
| `-OptimizeNoneAttr 0x5563c3fbf748 <col:30>
|-CXXMethodDecl 0x5563c3fbf800 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3fbf770 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3fbf948 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3fbf8b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3fbfa78 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x5563c3fbfba8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x5563c3fbfc78 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x5563c3fbfd48 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x5563c3fbfe88 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3fbfdf8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3fbffd0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3fbff40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3fc0118 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x5563c3fc0088 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3fc01d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5563c3fc02d0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5563c3fc0240 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3fc0388 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5563c3fc0448 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x5563c3fc0548 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x5563c3fc06f8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3fc0608 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x5563c3fc0eb8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5563c3fc07b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x5563c3fc0e18 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x5563c3fc0d18 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x5563c3fc0f98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c3fc10e8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3fc1058 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5563c3fc11a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5563c3fc13e8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3fc1260 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5563c3fc12d8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5563c3fc15a8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x5563c3fc14b8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5563c3fc17f8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x5563c3fc1670 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5563c3fc16e8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5563c3fc18b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c3fc1b18 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5563c3fc1a20 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x5563c3fc1be8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5563c3fc1be8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3fc30d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x5563c3fc32f0 prev 0x5563c3fc30d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5563c3fc3380 <col:46, col:52> col:46 public
|-TypedefDecl 0x5563c3fc33a8 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3fc4f70 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x5563c3fc4f20 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x5563c3fc3850 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x5563c3fc3750 'type'
|     `-TemplateSpecializationType 0x5563c3fc36e0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5563c3fc35c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x5563c3fc35a0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5563c3fc3580 <col:24> 'unsigned long' 24
|       `-RecordType 0x5563c3fc36c0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x5563c3fc35e0 'char_array'
|-TypedefDecl 0x5563c3fc5028 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x5563c3fc4ff0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x5563c3fc4fd0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x5563c3fc4f70 'type'
|     `-ElaboratedType 0x5563c3fc4f20 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x5563c3fc3850 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x5563c3fc3750 'type'
|         `-TemplateSpecializationType 0x5563c3fc36e0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5563c3fc35c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x5563c3fc35a0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5563c3fc3580 <col:24> 'unsigned long' 24
|           `-RecordType 0x5563c3fc36c0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x5563c3fc35e0 'char_array'
|-CXXMethodDecl 0x5563c3fc51a8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x5563c3fc50b8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x5563c3fc5298 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5563c3fc5378 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5563c3fc5378
|-CXXMethodDecl 0x5563c3fc5648 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5563c3fc5550 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x5563c3fc5888 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5563c3fc5700 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3fc5778 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5563c3fc5a58 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5563c3fc5948 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3fc59c0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5563c3fc5bb8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5563c3fc5c88 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5563c3fc5ed8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5563c3fc5d48 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5563c3fc5dc0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5563c3fc6138 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x5563c3fc5fa8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5563c3fc6020 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5563c3fc62f8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5563c3fc6208 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5563c3fc64b8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5563c3fc63c0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5563c3fc6570 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c3fc6620 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c3fc6858 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5563c3fc66d0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5563c3fc6748 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5563c3fc6af8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5563c3fc6a00 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x5563c3fc6bc0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x5563c3fc6c10 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5563c3fc6c60 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3fc1d30 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x5563c3fc1f38 prev 0x5563c3fc1d30 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5563c3fc3040 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x5563c3fc2ff0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x5563c3fc2fd0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x5563c3fc2e80 'type'
|     `-SubstTemplateTypeParmType 0x5563c3fc2ca0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x5563c3c24020 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c23fc8 'T'
|       `-RecordType 0x5563c3efa250 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x5563c3efa168 'sized_array_memory'
|-FieldDecl 0x5563c3fc6cb0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x5563c3fc6d00 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5563c3fc6d38 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x5563c3fc1fd0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|   `-RecordType 0x5563c3fb9780 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x5563c3fb96f0 'SelectorInfo'
|-TypedefDecl 0x5563c3fc6df8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5563c3fc6dc0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x5563c3fc1fd0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3fb9780 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5563c3fb96f0 'SelectorInfo'
|-TypedefDecl 0x5563c3fc6eb8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5563c3fc6e80 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5563c3fc1fd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5563c3fc1fd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3fb9780 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5563c3fb96f0 'SelectorInfo'
|-TypedefDecl 0x5563c3fc6f48 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x5563c3fc6f10 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5563c3fc1fd0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3fb9780 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5563c3fb96f0 'SelectorInfo'
|-TypedefDecl 0x5563c3fc7008 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5563c3fc6fd0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5563c3fc1fd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5563c3fc1fd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3fb9780 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5563c3fb96f0 'SelectorInfo'
|-TypedefDecl 0x5563c3fc7c60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x5563c3fc7c10 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x5563c3fc7bf0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x5563c3fc7b28 'type'
|     `-LValueReferenceType 0x5563c3fc7af0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x5563c3fc7891 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x5563c3fc7890 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x5563c3c2e6f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5563c3c2e698 'T'
|           `-RecordType 0x5563c3fb9780 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x5563c3fb96f0 'SelectorInfo'
|-TypedefDecl 0x5563c3fc7cc8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5563c3fc6e80 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5563c3fc1fd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5563c3fc1fd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3fb9780 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5563c3fb96f0 'SelectorInfo'
|-TypedefDecl 0x5563c3fc7d20 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-TypedefDecl 0x5563c3fc7d88 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x5563c3fc6f10 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5563c3fc1fd0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|     `-RecordType 0x5563c3fb9780 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5563c3fb96f0 'SelectorInfo'
|-TypedefDecl 0x5563c3fc7df0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5563c3fc6fd0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5563c3fc1fd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5563c3fc1fd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5563c3c5bd10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5563c3c5bcb8 'T'
|       `-RecordType 0x5563c3fb9780 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5563c3fb96f0 'SelectorInfo'
|-EnumDecl 0x5563c3fc7e48 <line:134:5> col:5
| `-EnumConstantDecl 0x5563c3fc7f40 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5563c3fc7f20 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5563c3c5d398 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5563c3c5d370 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5563c3c5d350 <col:40> 'int' 1
|-CXXConstructorDecl 0x5563c3fc7fc8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5563c3fc8258 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3fc8080 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3fc8120 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x5563c3fc8518 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5563c3fc8400 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x5563c3fc87d8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5563c3fc86c0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5563c3fc8b20 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5563c3fc8a00 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x5563c3fc8e30 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5563c3fc8d10 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5563c3fc9120 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3fc8f68 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3fc8fe0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5563c3fc9278 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5563c3fc9358 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3fc93b0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3fc93f8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5563c3fc94a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3fc9500 <col:30> Inherited
|-CXXMethodDecl 0x5563c3fc95c8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5563c3fc9678 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3fc96d0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3fc9718 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5563c3fc97c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3fc9820 <col:30> Inherited
|-CXXMethodDecl 0x5563c3fc9868 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5563c3fc9918 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3fc9970 <col:30> Inherited
|-CXXMethodDecl 0x5563c3fc99b8 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5563c3fc9a68 <col:20> Inherited
| `-OptimizeNoneAttr 0x5563c3fc9ac0 <col:30> Inherited
|-CXXMethodDecl 0x5563c3fc9ae8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3fc9b98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5563c3fc9c48 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5563c3fc9e08 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3fc9cf8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5563c3fc9d70 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5563c3fc9f58 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3fc9ec8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3fca108 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x5563c3fca010 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3fca1c0 <col:20>
| `-OptimizeNoneAttr 0x5563c3fca218 <col:30>
|-CXXMethodDecl 0x5563c3fca338 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x5563c3fca240 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5563c3fca3f0 <col:20>
| `-OptimizeNoneAttr 0x5563c3fca448 <col:30>
|-CXXMethodDecl 0x5563c3fca500 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3fca470 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3fca648 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3fca5b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3fca778 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5563c3fca8a8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5563c3fca978 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5563c3fcaa48 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5563c3fcab88 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5563c3fcaaf8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3fcacd0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5563c3fcac40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5563c3fcae18 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x5563c3fcad88 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3fcaed0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5563c3fcafd0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5563c3fcaf40 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5563c3fcb088 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5563c3fcb148 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x5563c3fcb248 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x5563c3fcc2e8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3fcc1f0 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x5563c3fccaa8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5563c3fcc3a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x5563c3fcca08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x5563c3fcc908 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x5563c3fccb88 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5563c3fcccd8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5563c3fccc48 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5563c3fccd90 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5563c3fccfd8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5563c3fcce50 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5563c3fccec8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5563c3fcd198 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x5563c3fcd0a8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5563c3fcd3e8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x5563c3fcd260 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5563c3fcd2d8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5563c3fcd4a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5563c3fcd708 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5563c3fcd610 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x5563c3fcd7d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5563c3fcd7d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3fb88d0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5563c3fb89e8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x5563c3fb8a78 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x5563c3fb8b00 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x5563c3fb8bf0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x5563c3fb8bf0
|-CXXMethodDecl 0x5563c3fb8cf0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x5563c3fb8f90 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x5563c3fb8da8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x5563c3fb8e20 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x5563c3fb8ea0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x5563c3fb9200 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x5563c3fb9060 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x5563c3fb90d8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x5563c3fb9158 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x5563c3fb9358 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x5563c3fb92c8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x5563c3fb9420 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x5563c3fcee88 <col:34, line:50:5>
|   |-BinaryOperator 0x5563c3fce858 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x5563c3fce818 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x5563c3fb9ba8
|   | | `-CXXThisExpr 0x5563c3fce808 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x5563c3fce848 <col:23> 'bool' true
|   `-CallExpr 0x5563c3fcee60 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x5563c3fcee48 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5563c3fcedc8 <col:2> 'void (long)' lvalue Function 0x5563c3fcecc8 'ignore_result' 'void (long)' (FunctionTemplate 0x5563c3c1efc8 'ignore_result')
|     `-CallExpr 0x5563c3fcea70 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x5563c3fcea58 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5563c3fce9d8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x5563c3f97d58 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x5563c3fceaa8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x5563c3fce980 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x5563c3fce968 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x5563c3fce918 <col:22> 'int [2]' lvalue ->_wake_pipe 0x5563c3fb9b48
|       |   |   `-CXXThisExpr 0x5563c3fce908 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x5563c3fce948 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x5563c3fcead8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x5563c3fceac0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x5563c3fce9a0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x5563c3fceaf0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5563c3fce9b8 <col:41> 'int' 1
|-CXXMethodDecl 0x5563c3fb9560 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5563c3fb94d0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5563c3fb9628 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x5563c3fb96c8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x5563c3fb96f0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5563c3fb9808 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x5563c3fb98a8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x5563c3fb9908 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x5563c3fb9970 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x5563c3fb9a20 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x5563c3fb98a8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x5563c3fceee8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5563c3fceea8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x5563c3fb9908 'write' 'Element *'
|   | `-ImplicitCastExpr 0x5563c3fcef68 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5563c3fcef28 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x5563c3fb9970 'pollfd' 'int'
|   | `-UnaryOperator 0x5563c3fcefc8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x5563c3fcefa8 <col:35> 'int' 1
|   `-CompoundStmt 0x5563c3fcf040 <line:64:2, line:65:2>
|-FieldDecl 0x5563c3fb9b48 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x5563c3fb9ba8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x5563c3fc1cd0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x5563c3fcd8c0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x5563c3fcdaf8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x5563c3fcd928 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x5563c3fcd9a0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x5563c3fcda18 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x5563c3fcdce0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x5563c3fcdbc8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x5563c3fcdc48 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x5563c3fcdf28 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x5563c3fcdda8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x5563c3fcde28 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x5563c3fce138 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x5563c3fcdfe8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x5563c3fce060 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x5563c3fce288 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x5563c3fce1f8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x5563c3fce350 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x5563c3fce410 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x5563c3fce4d8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x5563c3fce4d8
| `-ParmVarDecl 0x5563c3fce5e8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x5563c3fce688 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x5563c3fce688
  `-ParmVarDecl 0x5563c3fce798 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3ed8eb8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5563c3ed8fd8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x5563c3ed9068 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x5563c3ed90f0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x5563c3ed91e0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x5563c3ed92e0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x5563c3ed93a0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x5563c3ed9460 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x5563c3ed9548 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x5563c3ed9668 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x5563c3ed9668
| `-ParmVarDecl 0x5563c3ed9778 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x5563c3fd3c38 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x5563c3fd3c38
  `-ParmVarDecl 0x5563c3fd3d48 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3f76d78 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5563c3f76e98 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x5563c3f76f38 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x5563c3f76f98 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x5563c3fd3238 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5563c3fd3238
| `-ParmVarDecl 0x5563c3fd3348 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x5563c3fd33e8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5563c3fd33e8
| `-ParmVarDecl 0x5563c3fd34f8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x5563c3fd3568 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5563c3fd3568
|-CXXMethodDecl 0x5563c3fd3de8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5563c3fd3de8
| `-ParmVarDecl 0x5563c3fd3ef8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x5563c3fd3f68 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5563c3fd3f68
| `-ParmVarDecl 0x5563c3fd4078 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x5563c3fdefb8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x5563c3fdf090 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3edadb0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5563c3edaec8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x5563c3edaf58 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x5563c3edafe0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x5563c3edb0a0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x5563c395b370 'int'
|-CXXMethodDecl 0x5563c3edb168 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x5563c3edb208 <col:45> always_inline
|-CXXMethodDecl 0x5563c3edb338 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x5563c3edb270 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x5563c3edb3e0 <col:49> always_inline
|-CXXConstructorDecl 0x5563c3edb4d8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5563c3edb4d8
| `-ParmVarDecl 0x5563c3edb5e8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x5563c3edb688 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5563c3edb688
| `-ParmVarDecl 0x5563c3edb798 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x5563c3fd3650 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x5563c3fd3650
|-CXXMethodDecl 0x5563c3fd4118 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5563c3fd4118
| `-ParmVarDecl 0x5563c3fd8af8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x5563c3fd8b68 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5563c3fd8b68
  `-ParmVarDecl 0x5563c3fd8c78 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3fcf4b0 prev 0x5563c3fb8840 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5563c3fcf5a8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x5563c3fcf638 <col:22, col:28> col:22 public
|-EnumDecl 0x5563c3fcf660 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x5563c3fcf778 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x5563c3fcf758 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5563c3fcf740 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5563c3fcf720 <col:32> 'int' 1
| `-EnumConstantDecl 0x5563c3fcf820 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x5563c3fcf800 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5563c3fcf7e8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5563c3fcf7c8 <col:53> 'int' 1000
|-CXXMethodDecl 0x5563c3fcf8c0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x5563c3fcf980 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5563c3fcfa68 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x5563c3fd8d38 <col:34, col:52>
|   `-ReturnStmt 0x5563c3fd8d28 <col:36, col:43>
|     `-MemberExpr 0x5563c3fd8cf8 <col:43> 'TimerSet' lvalue ->_timers 0x5563c3fd1738
|       `-CXXThisExpr 0x5563c3fd8ce8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5563c3fcfb58 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x5563c3fd8da0 <col:46, col:64>
|   `-ReturnStmt 0x5563c3fd8d90 <col:48, col:55>
|     `-MemberExpr 0x5563c3fd8d60 <col:55> 'const TimerSet' lvalue ->_timers 0x5563c3fd1738
|       `-CXXThisExpr 0x5563c3fd8d50 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5563c3fcfc48 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x5563c3fd8e08 <col:36, col:55>
|   `-ReturnStmt 0x5563c3fd8df8 <col:38, col:45>
|     `-MemberExpr 0x5563c3fd8dc8 <col:45> 'SelectSet' lvalue ->_selects 0x5563c3fd1798
|       `-CXXThisExpr 0x5563c3fd8db8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5563c3fcfd38 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x5563c3fd8e70 <col:48, col:67>
|   `-ReturnStmt 0x5563c3fd8e60 <col:50, col:57>
|     `-MemberExpr 0x5563c3fd8e30 <col:57> 'const SelectSet' lvalue ->_selects 0x5563c3fd1798
|       `-CXXThisExpr 0x5563c3fd8e20 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5563c3fcfdf8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x5563c3fcfee8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x5563c3fd0058 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x5563c3fcff98 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x5563c3fd0120 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x5563c3fd0568 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x5563c3fd01d0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x5563c3fd0450 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x5563c3fd0638 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x5563c3fd06f8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x5563c3fd07b8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x5563c3fd08f8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x5563c3fd0868 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x5563c3fd09c0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x5563c3fd0a80 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x5563c3fd0b40 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x5563c3fd0c00 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x5563c3fd0d40 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5563c3fd0cb0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5563c3fd0e08 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x5563c3fd0ec8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x5563c3fd0f68 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x5563c3fd1030 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5563c3fd1080 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5563c3fd10d0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5563c3fd1120 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5563c3fd1170 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5563c3fd11c0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5563c3fd1210 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5563c3fd1260 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5563c3fd12b0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5563c3fd1300 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x5563c3fd1350 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x5563c3fd1448 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x5563c3fd13b8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x5563c3fd1598 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x5563c3fd1508 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x5563c3fd1640 <line:104:3, col:10> col:3 private
|-FieldDecl 0x5563c3fd1678 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x5563c3fd16d8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x5563c3fd1738 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x5563c3fd1798 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x5563c3fd1818 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x5563c3fd1888 <col:40, col:50> aligned
|   `-ConstantExpr 0x5563c3fd1868 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x5563c3fd17e8 <col:48> 'int' 64
|-FieldDecl 0x5563c3fd18f8 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x5563c3fd1958 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x5563c3fd1a50 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x5563c3fd1b60 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x5563c3fd1bc0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x5563c3fd1c40 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x5563c3fd1cb0 <col:36, col:46> aligned
|   `-ConstantExpr 0x5563c3fd1c90 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x5563c3fd1c10 <col:44> 'int' 64
|-FieldDecl 0x5563c3fd1d28 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x5563c3fd1d88 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x5563c3fd1dd8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x5563c3fd1e18 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x5563c3fd1e80 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x5563c3fd1ed0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x5563c3fd2078 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x5563c3fd1f08 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x5563c3fd1f88 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x5563c3fd2178 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x5563c3fd2178
|-CXXMethodDecl 0x5563c3fd2280 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x5563c3fd2348 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x5563c3fd8f68 <col:34, line:217:5>
|   `-ReturnStmt 0x5563c3fd8f58 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x5563c3fd8f40 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5563c3fd8f10 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x5563c3f69200
|         `-ImplicitCastExpr 0x5563c3fd8ef8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x5563c3fd8ec8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x5563c3f69198
|             `-MemberExpr 0x5563c3fd8e98 <col:16> 'const TaskLink' lvalue ->_task_link 0x5563c3fd1678
|               `-CXXThisExpr 0x5563c3fd8e88 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5563c3fd2408 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x5563c3fd24c8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x5563c3fd9690 <col:39, line:226:5>
|   |-DeclStmt 0x5563c3fd91b8 <line:223:9, col:68>
|   | `-VarDecl 0x5563c3fd8f90 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x5563c3fd9170 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x5563c3fd9140 <col:24, col:38> '<bound member function type>' .compare_swap 0x5563c3c85610
|   |     | `-MemberExpr 0x5563c3fd9008 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x5563c3fd18f8
|   |     |   `-CXXThisExpr 0x5563c3fd8ff8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x5563c3fd90f8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x5563c3fd90e0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x5563c3fd90b8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x5563c3fd9098 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x5563c3fd91a0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x5563c3fd9120 <col:66> 'int' 0
|   |-CStyleCastExpr 0x5563c3fd9200 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5563c3fd91d0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x5563c3fd8f90 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x5563c3fd9670 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x5563c3fd9640 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x5563c3fd9318 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x5563c3fd92e8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5563c3fd92d0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x5563c3fd9228 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x5563c3fd8f90 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x5563c3fd92a8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x5563c3fd9290 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x5563c3fd9268 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x5563c3fd9248 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x5563c3fd9378 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x5563c3fd9358 <col:60> 'int' 0
|       `-CallExpr 0x5563c3fd95a0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x5563c3fd9588 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5563c3fd9568 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x5563c3fd95e0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5563c3fd9468 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x5563c3fd95f8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5563c3fd9498 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x5563c3fd9610 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x5563c3fd94d8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x5563c3fd9628 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x5563c3fd9550 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x5563c3fd9538 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x5563c3fd94f8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x5563c3fd2610 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x5563c3fd2580 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x5563c3fd26d8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x5563c3fd2798 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x5563c3fd2858 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x5563c3fd2918 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x5563c3fd29d8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x5563c3fd2ad0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x5563c3fd2b30 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x5563c3fd2bc0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x5563c3fd2f88 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x5563c3fd2f88
| `-ParmVarDecl 0x5563c3fd3098 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x5563c3fd3758 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x5563c3fd3758
  `-ParmVarDecl 0x5563c3fd3868 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3edd518 prev 0x5563c3ebf960 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5563c3edd610 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x5563c3edd6a0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x5563c3edd700 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x5563c3edd7a8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x5563c3edd8c8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x5563c3edda68 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x5563c3edd9a8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x5563c3eddcb8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x5563c3eddb28 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x5563c3eddba8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x5563c3edde48 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x5563c3eddd80 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x5563c3eddfc8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x5563c3eddf08 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x5563c3ede178 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x5563c3ede0b8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x5563c3ede270 <line:55:5, line:58:5> line:55:12 used ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x5563c3ef3ae0 <col:21, line:58:5>
|   `-IfStmt 0x5563c3ef3ac8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x5563c3ef3a30 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x5563c3ef3a00 <col:6> '<bound member function type>' ->scheduled 0x5563c3edeac8
|     |   `-ImplicitCastExpr 0x5563c3ef3a50 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x5563c3ef39f0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x5563c3ef3aa8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x5563c3ef3a78 <col:6> '<bound member function type>' ->unschedule 0x5563c3ef2190
|         `-CXXThisExpr 0x5563c3ef3a68 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x5563c3ede370 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x5563c3ef3c80 <col:26, line:65:5>
|   |-BinaryOperator 0x5563c3ef3ba0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5563c3ef3b38 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5563c3ef2e18
|   | | `-MemberExpr 0x5563c3ef3b08 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5563c3ef2ed8
|   | |   `-CXXThisExpr 0x5563c3ef3af8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5563c3ef3b88 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563c3ef3b68 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x5563c3ef3338 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5563c3ef3c60 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x5563c3ef3bd0 <col:2> 'void *' lvalue ->_thunk 0x5563c3ef2f58
|     | `-CXXThisExpr 0x5563c3ef3bc0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x5563c3ef3c38 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x5563c3ef3c00 <col:20> 'int' 1
|-CXXMethodDecl 0x5563c3ede4b0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x5563c3ede420 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x5563c3ef3de0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x5563c3ef3cd0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5563c3ef3ca0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x5563c3ede420 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x5563c3ef3dc0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x5563c3ef3d90 <col:2> '<bound member function type>' ->assign 0x5563c3ede370
|       `-CXXThisExpr 0x5563c3ef3d80 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x5563c3ede680 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x5563c3ede568 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x5563c3ede5e8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x5563c3ef3f60 <col:58, line:79:5>
|   |-BinaryOperator 0x5563c3ef3ea8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5563c3ef3e40 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5563c3ef2e18
|   | | `-MemberExpr 0x5563c3ef3e10 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5563c3ef2ed8
|   | |   `-CXXThisExpr 0x5563c3ef3e00 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5563c3ef3e90 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563c3ef3e70 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x5563c3ede568 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x5563c3ef3f40 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x5563c3ef3ed8 <col:2> 'void *' lvalue ->_thunk 0x5563c3ef2f58
|     | `-CXXThisExpr 0x5563c3ef3ec8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5563c3ef3f28 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3ef3f08 <col:11> 'void *' lvalue ParmVar 0x5563c3ede5e8 'user_data' 'void *'
|-CXXMethodDecl 0x5563c3ede7d0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x5563c3ede740 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x5563c3ef40f8 <col:35, line:87:5>
|   |-BinaryOperator 0x5563c3ef4028 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5563c3ef3fc0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5563c3ef2e18
|   | | `-MemberExpr 0x5563c3ef3f90 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5563c3ef2ed8
|   | |   `-CXXThisExpr 0x5563c3ef3f80 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5563c3ef4010 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563c3ef3ff0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x5563c3ef3510 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5563c3ef40d8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x5563c3ef4058 <col:2> 'void *' lvalue ->_thunk 0x5563c3ef2f58
|     | `-CXXThisExpr 0x5563c3ef4048 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5563c3ef40c0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x5563c3ef40a8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x5563c3ef4088 <col:11> 'Element *' lvalue ParmVar 0x5563c3ede740 'element' 'Element *'
|-CXXMethodDecl 0x5563c3ede918 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x5563c3ede888 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x5563c3ef4290 <col:29, line:94:5>
|   |-BinaryOperator 0x5563c3ef41c0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5563c3ef4158 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5563c3ef2e18
|   | | `-MemberExpr 0x5563c3ef4128 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5563c3ef2ed8
|   | |   `-CXXThisExpr 0x5563c3ef4118 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5563c3ef41a8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563c3ef4188 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x5563c3ef36e8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5563c3ef4270 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x5563c3ef41f0 <col:2> 'void *' lvalue ->_thunk 0x5563c3ef2f58
|     | `-CXXThisExpr 0x5563c3ef41e0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5563c3ef4258 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x5563c3ef4240 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x5563c3ef4220 <col:11> 'Task *' lvalue ParmVar 0x5563c3ede888 'task' 'Task *'
|-CXXMethodDecl 0x5563c3edea08 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x5563c3ef4370 <col:37, line:100:5>
|   `-ReturnStmt 0x5563c3ef4360 <line:99:2, col:19>
|     `-BinaryOperator 0x5563c3ef4340 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x5563c3ef4310 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x5563c3ef42c0 <col:9> 'Element *const' lvalue ->_owner 0x5563c3ef2fb8
|       |   `-CXXThisExpr 0x5563c3ef42b0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x5563c3ef4328 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x5563c3ef42f0 <col:19> 'int' 0
|-CXXMethodDecl 0x5563c3edeac8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x5563c3ef4430 <col:35, line:105:5>
|   `-ReturnStmt 0x5563c3ef4420 <line:104:2, col:23>
|     `-BinaryOperator 0x5563c3ef4400 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x5563c3ef43e8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x5563c3ef4398 <col:9> 'const int' lvalue ->_schedpos1 0x5563c3ef2c38
|       |   `-CXXThisExpr 0x5563c3ef4388 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x5563c3ef43c8 <col:23> 'int' 0
|-CXXMethodDecl 0x5563c3edeb88 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x5563c3ef4498 <col:51, line:118:5>
|   `-ReturnStmt 0x5563c3ef4488 <line:117:2, col:9>
|     `-MemberExpr 0x5563c3ef4458 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x5563c3ef2c98
|       `-CXXThisExpr 0x5563c3ef4448 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5563c3edec48 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x5563c3ef49f0 <col:37, line:136:5>
|   `-IfStmt 0x5563c3ef49c8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x5563c3ef4558 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x5563c3ef4540 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x5563c3ef4520 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x5563c3ef44f0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x5563c3e51a38
|     |       `-MemberExpr 0x5563c3ef44c0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x5563c3ef2c98
|     |         `-CXXThisExpr 0x5563c3ef44b0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x5563c3ef4938 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x5563c3ef4920 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x5563c3ef48f0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x5563c3ef48d8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x5563c3ef48a0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x5563c3ef4888 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x5563c3ef4868 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5563c3e80210 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x5563c3ef4808 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x5563c3ef47f0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x5563c3ef4718 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x5563c3ef4700 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x5563c3ef46e0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5563c3e7fed0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x5563c3ef4680 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x5563c3ef4580 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x5563c3ef2c98
|     |         |     |   `-CXXThisExpr 0x5563c3ef4570 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x5563c3ef46c8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x5563c3ef46b0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x5563c3ef4660 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x5563c3ef4648 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x5563c3ef45e8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x5563c3e73530 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x5563c3ef4850 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x5563c3ef4838 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x5563c3ef47d0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x5563c3ef47b8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x5563c3ef4788 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x5563c3ccea80 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x5563c3ef49b8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x5563c3ef4988 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x5563c3ef4958 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x5563c3ef2c98
|           `-CXXThisExpr 0x5563c3ef4948 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x5563c3eded08 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x5563c3ef4ad8 <col:35, line:141:5>
|   `-ReturnStmt 0x5563c3ef4ac8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x5563c3ef4a90 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x5563c3ef4a60 <col:9, col:17> '<bound member function type>' ->router 0x5563c3ed20c0
|         `-ImplicitCastExpr 0x5563c3ef4ab0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x5563c3ef4a48 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x5563c3ef4a18 <col:9> 'Element *const' lvalue ->_owner 0x5563c3ef2fb8
|               `-CXXThisExpr 0x5563c3ef4a08 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5563c3ededc8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x5563c3ef4b58 <col:37, line:146:5>
|   `-ReturnStmt 0x5563c3ef4b48 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x5563c3ef4b30 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x5563c3ef4b00 <col:9> 'Element *const' lvalue ->_owner 0x5563c3ef2fb8
|         `-CXXThisExpr 0x5563c3ef4af0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5563c3edee88 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x5563c3ef4bd8 <col:41, line:151:5>
|   `-ReturnStmt 0x5563c3ef4bc8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x5563c3ef4bb0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x5563c3ef4b80 <col:9> 'RouterThread *const' lvalue ->_thread 0x5563c3ef3018
|         `-CXXThisExpr 0x5563c3ef4b70 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5563c3edef50 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x5563c3edf148 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x5563c3edf000 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x5563c3edf078 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5563c3ef38f8 <col:50> 'bool' false
|-CXXMethodDecl 0x5563c3edf2c8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x5563c3edf208 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x5563c3ef1480 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x5563c3edf380 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x5563c3ef15c8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x5563c3ef1538 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x5563c3ef1710 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5563c3ef1680 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x5563c3ef1858 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5563c3ef17c8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x5563c3ef1920 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x5563c3ef4d40 <col:32, line:223:5>
|   `-ExprWithCleanups 0x5563c3ef4d28 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x5563c3ef4cd0 <col:2, col:47> 'void'
|       |-MemberExpr 0x5563c3ef4c00 <col:2> '<bound member function type>' ->schedule_at_steady 0x5563c3ef1480
|       | `-CXXThisExpr 0x5563c3ef4bf0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5563c3ef4d10 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5563c3ef4cf8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x5563c3ef4cb0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x5563c3ef4c98 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x5563c3ef4c68 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x5563c3ccea80 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x5563c3ef1a60 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x5563c3ef19d0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x5563c3ef1ba8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5563c3ef1b18 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3ef4ec8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x5563c3ef4eb0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x5563c3ef4e58 <col:2, col:40> 'void'
|       |-MemberExpr 0x5563c3ef4d68 <col:2> '<bound member function type>' ->schedule_after 0x5563c3ef1a60
|       | `-CXXThisExpr 0x5563c3ef4d58 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5563c3ef4e98 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5563c3ef4e80 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x5563c3ef4e18 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x5563c3ef4de8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x5563c3ef4da8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3ef1b18 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x5563c3ef4e00 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5563c3ef4dc8 <col:38> 'int' 0
|-CXXMethodDecl 0x5563c3ef1cf0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5563c3ef1c60 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3ef5138 <col:58, line:249:5>
|   `-ExprWithCleanups 0x5563c3ef5120 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x5563c3ef50c8 <col:2, col:49> 'void'
|       |-MemberExpr 0x5563c3ef4ef0 <col:2> '<bound member function type>' ->schedule_after 0x5563c3ef1a60
|       | `-CXXThisExpr 0x5563c3ef4ee0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5563c3ef5108 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5563c3ef50f0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x5563c3ef5070 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x5563c3ef5058 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5563c3ef4fc8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5563c3e53828 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x5563c3ef50b0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x5563c3ef5098 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5563c3ef4fa8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3ef1c60 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3ef1e38 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x5563c3ef1da8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x5563c3ef5318 <col:58, line:261:5>
|   `-ExprWithCleanups 0x5563c3ef5300 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x5563c3ef52a8 <col:2, col:38> 'void'
|       |-MemberExpr 0x5563c3ef5160 <col:2> '<bound member function type>' ->schedule_at_steady 0x5563c3ef1480
|       | `-CXXThisExpr 0x5563c3ef5150 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5563c3ef52e8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5563c3ef52d0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x5563c3ef5270 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x5563c3ef5258 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5563c3ef5238 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5563c3e7fed0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x5563c3ef5208 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x5563c3ef51f0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x5563c3ef51a0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x5563c3ef2c98
|             |     `-CXXThisExpr 0x5563c3ef5190 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x5563c3ef51d0 <col:33> 'const Timestamp' lvalue ParmVar 0x5563c3ef1da8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x5563c3ef1f80 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5563c3ef1ef0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3ef55f0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x5563c3ef55d8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x5563c3ef5580 <col:2, col:79> 'void'
|       |-MemberExpr 0x5563c3ef5340 <col:2> '<bound member function type>' ->schedule_at_steady 0x5563c3ef1480
|       | `-CXXThisExpr 0x5563c3ef5330 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5563c3ef55c0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5563c3ef55a8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x5563c3ef5540 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x5563c3ef5478 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x5563c3ef5460 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x5563c3ef53f0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x5563c3ef53c0 <col:31, col:41> '<bound member function type>' .sec 0x5563c3cd0578
|             | |     `-ImplicitCastExpr 0x5563c3ef5410 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x5563c3ef5390 <col:31> 'Timestamp' lvalue ->_expiry_s 0x5563c3ef2c98
|             | |         `-CXXThisExpr 0x5563c3ef5380 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x5563c3ef5448 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x5563c3ef5428 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3ef1ef0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x5563c3ef5508 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x5563c3ef54d8 <col:60, col:70> '<bound member function type>' .subsec 0x5563c3cd0c70
|                 `-ImplicitCastExpr 0x5563c3ef5528 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x5563c3ef54a8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x5563c3ef2c98
|                     `-CXXThisExpr 0x5563c3ef5498 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x5563c3ef20c8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5563c3ef2038 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5563c3ef5928 <col:60, line:279:5>
|   `-ExprWithCleanups 0x5563c3ef5910 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x5563c3ef58b8 <col:2, col:65> 'void'
|       |-MemberExpr 0x5563c3ef5618 <col:2> '<bound member function type>' ->schedule_at_steady 0x5563c3ef1480
|       | `-CXXThisExpr 0x5563c3ef5608 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5563c3ef58f8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5563c3ef58e0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x5563c3ef5880 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x5563c3ef5868 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5563c3ef5848 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5563c3e7fed0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x5563c3ef57e8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x5563c3ef57d0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x5563c3ef5658 <col:21> 'Timestamp' lvalue ->_expiry_s 0x5563c3ef2c98
|             |     `-CXXThisExpr 0x5563c3ef5648 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x5563c3ef5830 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x5563c3ef5818 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x5563c3ef5778 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x5563c3ef5760 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x5563c3ef5730 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5563c3e53828 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x5563c3ef57b8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x5563c3ef57a0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x5563c3ef5710 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x5563c3ef2038 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3ef2190 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x5563c3ef2250 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x5563c3ef5df0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x5563c3ef5980 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x5563c3ef5950 <col:2> '<bound member function type>' ->unschedule 0x5563c3ef2190
|   |   `-CXXThisExpr 0x5563c3ef5940 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x5563c3ef5dd8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x5563c3ef5da0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x5563c3ef5d88 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5563c3ef5a38 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x5563c3b67b18 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x5563c3ef59b0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x5563c3ef2c98
|       | `-CXXThisExpr 0x5563c3ef59a0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5563c3ef5a20 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x5563c3ef59f0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x5563c3ef2310 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x5563c3ef6148 <col:42, line:310:5>
|   |-IfStmt 0x5563c3ef5f90 <line:306:2, line:307:23>
|   | |-CallExpr 0x5563c3ef5ec0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x5563c3ef5ea8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x5563c3ef5e48 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x5563c3e719a0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x5563c3ef5f80 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x5563c3ef5f68 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x5563c3ef5f38 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5563c3ef5f20 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x5563c3ef5ef0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x5563c3ef6138 <line:309:2, col:33>
|     `-ExprWithCleanups 0x5563c3ef6120 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x5563c3ef60f0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5563c3ef60d8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x5563c3ef6098 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x5563c3ef6080 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5563c3ef6050 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5563c3e53b40 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x5563c3ef60c0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x5563c3ef6030 <col:30> 'int' 500
|-CXXMethodDecl 0x5563c3ef2450 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x5563c3ef23c0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5563c3ef24f8 <col:69> "" ""
|-CXXMethodDecl 0x5563c3ef2608 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x5563c3ef2578 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5563c3ef26b0 <col:70> "" ""
|-CXXMethodDecl 0x5563c3ef27c0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x5563c3ef2730 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5563c3ef2868 <col:71> "" ""
|-CXXMethodDecl 0x5563c3ef2978 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x5563c3ef28e8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5563c3ef2a20 <col:72> "" ""
|-EnumDecl 0x5563c3ef2a90 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x5563c3ef2b90 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x5563c3ef2be0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3ef2b70 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x5563c3ef2b50 <col:25> 'int' 1
|-AccessSpecDecl 0x5563c3ef2bf8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x5563c3ef2c38 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x5563c3ef2c98 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x5563c3ef2ce8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5563c3ef2e18 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x5563c3ef3908 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x5563c3ef2ed8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x5563c3ef2f58 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x5563c3ef2fb8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x5563c3ef3018 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x5563c3ef3168 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x5563c3ef3078 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x5563c3ef3338 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5563c3ef3220 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x5563c3ef32a0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x5563c3ef3510 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5563c3ef33f8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x5563c3ef3478 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x5563c3ef36e8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5563c3ef35d0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x5563c3ef3650 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x5563c3ef38b8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.13, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.13, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3f05398 <../elements/standard/script.hh:444:1, line:549:1> line:444:7 referenced class Script definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5563c3f054f8 <col:1, col:7> col:7 implicit referenced class Script
|-AccessSpecDecl 0x5563c3f05588 <col:33, col:39> col:33 public
|-CXXConstructorDecl 0x5563c3f05610 <line:446:5, col:12> col:5 used Script 'void ()'
|-CXXMethodDecl 0x5563c3f056d8 <line:448:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x5563c3f05798 <line:449:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5563c3f05890 <line:451:5, col:55> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5563c3ec1478 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5563c3f1c3c8 <col:36, col:55>
|   `-ReturnStmt 0x5563c3f1c3b8 <col:38, col:45>
|     `-ImplicitCastExpr 0x5563c3f1c3a0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5563c3f1c380 <col:45> 'const char [7]' lvalue "Script"
|-CXXMethodDecl 0x5563c3f05958 <line:452:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x5563c3ec1540 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5563c3f1c428 <col:36, col:52>
|   `-ReturnStmt 0x5563c3f1c418 <col:38, col:45>
|     `-ImplicitCastExpr 0x5563c3f1c400 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5563c3f1c3e0 <col:45> 'const char [4]' lvalue "-/-"
|-CXXMethodDecl 0x5563c3f05a20 <line:453:5, col:54> col:17 processing 'const char *() const'
| |-Overrides: [ 0x5563c3ec1908 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x5563c3f1c488 <col:36, col:54>
|   `-ReturnStmt 0x5563c3f1c478 <col:38, col:45>
|     `-ImplicitCastExpr 0x5563c3f1c460 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5563c3f1c440 <col:45> 'const char [6]' lvalue "ah/ah"
|-CXXMethodDecl 0x5563c3f05cf0 <line:454:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5563c3ec2d10 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5563c3f05ba0 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x5563c3f05c18 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f05e48 <line:455:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x5563c3ec2f60 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x5563c3f05db0 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f05f10 <line:456:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x5563c3ec2de0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x5563c3f060d8 <line:458:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5563c3ec02e8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5563c3f05fc8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x5563c3f06040 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x5563c3f06230 <line:459:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x5563c3ec0478 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x5563c3f061a0 <col:18, col:22> col:22 port 'int'
|-CXXMethodDecl 0x5563c3f06378 <line:460:5, col:27> col:10 run_timer 'void (Timer *)'
| |-Overrides: [ 0x5563c3ec0998 Element::run_timer 'void (Timer *)' ]
| `-ParmVarDecl 0x5563c3f062e8 <col:20, col:26> col:27 'Timer *'
|-EnumDecl 0x5563c3f06420 <line:462:5, line:475:5> line:462:10 Insn
| |-EnumConstantDecl 0x5563c3f064e0 <line:463:9> col:9 INSN_INITIAL 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06530 <col:23> col:23 INSN_WAIT_STEP 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06580 <col:39> col:39 INSN_WAIT_TIME 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f065d0 <line:464:9> col:9 INSN_PRINT 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06620 <col:21> col:21 INSN_PRINTQ 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06670 <col:34> col:34 INSN_PRINTN 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f066c0 <col:47> col:47 INSN_PRINTNQ 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06710 <line:465:9> col:9 INSN_READ 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06760 <col:20> col:20 INSN_READQ 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f067b0 <col:32> col:32 INSN_WRITE 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06800 <col:44> col:44 INSN_WRITEQ 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06850 <line:466:9> col:9 INSN_SET 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f068a0 <col:19> col:19 insn_setq 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f068f0 <col:30> col:30 insn_init 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06940 <col:41> col:41 insn_initq 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06990 <col:53> col:53 insn_export 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f069e0 <col:66> col:66 insn_exportq 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06a30 <line:468:9> col:9 insn_save 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06a80 <col:20> col:20 insn_append 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06ad0 <line:470:9> col:9 INSN_LABEL 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06b20 <col:21> col:21 INSN_GOTO 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06b70 <col:32> col:32 INSN_RETURN 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06bc0 <col:45> col:45 insn_returnq 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06c10 <line:471:9> col:9 INSN_WAIT_PSEUDO 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06c60 <col:27> col:27 INSN_LOOP_PSEUDO 'Script::Insn'
| |-EnumConstantDecl 0x5563c3f06d08 <line:473:9, col:22> col:9 insn_exit 'Script::Insn'
| | `-ConstantExpr 0x5563c3f06ce8 <col:21, col:22> 'int' Int: -1
| |   `-UnaryOperator 0x5563c3f06cd0 <col:21, col:22> 'int' prefix '-'
| |     `-IntegerLiteral 0x5563c3f06cb0 <col:22> 'int' 1
| |-EnumConstantDecl 0x5563c3f06db0 <col:25, col:37> col:25 insn_end 'Script::Insn'
| | `-ConstantExpr 0x5563c3f06d90 <col:36, col:37> 'int' Int: -2
| |   `-UnaryOperator 0x5563c3f06d78 <col:36, col:37> 'int' prefix '-'
| |     `-IntegerLiteral 0x5563c3f06d58 <col:37> 'int' 2
| |-EnumConstantDecl 0x5563c3f06e58 <col:40, col:53> col:40 insn_stop 'Script::Insn'
| | `-ConstantExpr 0x5563c3f06e38 <col:52, col:53> 'int' Int: -3
| |   `-UnaryOperator 0x5563c3f06e20 <col:52, col:53> 'int' prefix '-'
| |     `-IntegerLiteral 0x5563c3f06e00 <col:53> 'int' 3
| |-EnumConstantDecl 0x5563c3f06f00 <col:56, col:70> col:56 insn_error 'Script::Insn'
| | `-ConstantExpr 0x5563c3f06ee0 <col:69, col:70> 'int' Int: -4
| |   `-UnaryOperator 0x5563c3f06ec8 <col:69, col:70> 'int' prefix '-'
| |     `-IntegerLiteral 0x5563c3f06ea8 <col:70> 'int' 4
| `-EnumConstantDecl 0x5563c3f06fa8 <line:474:9, col:24> col:9 insn_errorq 'Script::Insn'
|   `-ConstantExpr 0x5563c3f06f88 <col:23, col:24> 'int' Int: -5
|     `-UnaryOperator 0x5563c3f06f70 <col:23, col:24> 'int' prefix '-'
|       `-IntegerLiteral 0x5563c3f06f50 <col:24> 'int' 5
|-AccessSpecDecl 0x5563c3f06ff8 <line:477:3, col:10> col:3 private
|-EnumDecl 0x5563c3f07020 <line:479:5, line:482:5> line:479:10 Type
| |-EnumConstantDecl 0x5563c3f070e0 <line:480:9> col:9 type_active 'Script::Type'
| |-EnumConstantDecl 0x5563c3f07130 <col:22> col:22 referenced type_driver 'Script::Type'
| |-EnumConstantDecl 0x5563c3f07180 <col:35> col:35 type_signal 'Script::Type'
| |-EnumConstantDecl 0x5563c3f071d0 <col:48> col:48 type_passive 'Script::Type'
| |-EnumConstantDecl 0x5563c3f07220 <col:62> col:62 type_proxy 'Script::Type'
| `-EnumConstantDecl 0x5563c3f07270 <line:481:9> col:9 type_push 'Script::Type'
|-EnumDecl 0x5563c3f072c0 <line:484:5, line:486:5> line:484:5
| |-EnumConstantDecl 0x5563c3f073c0 <line:485:9, col:21> col:9 max_jumps 'Script::(anonymous enum at ../elements/standard/script.hh:484:5)'
| | `-ImplicitCastExpr 0x5563c3f07590 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f073a0 <col:21> 'int' Int: 1000
| |     `-IntegerLiteral 0x5563c3f07380 <col:21> 'int' 1000
| |-EnumConstantDecl 0x5563c3f07450 <col:27, col:41> col:27 STEP_NORMAL 'Script::(anonymous enum at ../elements/standard/script.hh:484:5)'
| | `-ImplicitCastExpr 0x5563c3f075a8 <col:41> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f07430 <col:41> 'int' Int: 0
| |     `-IntegerLiteral 0x5563c3f07410 <col:41> 'int' 0
| |-EnumConstantDecl 0x5563c3f074a0 <col:44> col:44 STEP_ROUTER 'Script::(anonymous enum at ../elements/standard/script.hh:484:5)'
| |-EnumConstantDecl 0x5563c3f074f0 <col:57> col:57 STEP_TIMER 'Script::(anonymous enum at ../elements/standard/script.hh:484:5)'
| `-EnumConstantDecl 0x5563c3f07540 <col:69> col:69 STEP_JUMP 'Script::(anonymous enum at ../elements/standard/script.hh:484:5)'
|-FieldDecl 0x5563c3f16390 <line:488:5, col:17> col:17 _insns 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5563c3f164a0 <line:489:5, col:17> col:17 _args 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5563c3f165b0 <line:490:5, col:17> col:17 _args2 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5563c3f166b0 <line:491:5, col:20> col:20 _args3 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5563c3f167b0 <line:493:5, col:20> col:20 _vars 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5563c3f16810 <line:494:5, col:12> col:12 _run_handler_name 'String'
|-FieldDecl 0x5563c3f16870 <line:495:5, col:12> col:12 _run_args 'String'
|-FieldDecl 0x5563c3f168d8 <line:496:5, col:9> col:9 _run_op 'int'
|-FieldDecl 0x5563c3f16940 <line:498:5, col:9> col:9 _insn_pos 'int'
|-FieldDecl 0x5563c3f169a8 <line:499:5, col:9> col:9 _step_count 'int'
|-FieldDecl 0x5563c3f16a10 <line:500:5, col:9> col:9 referenced _type 'int'
|-FieldDecl 0x5563c3f16a78 <line:501:5, col:9> col:9 _write_status 'int'
|-FieldDecl 0x5563c3f16b80 <line:503:5, col:17> col:17 _signos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5563c3f16be0 <line:506:5, col:11> col:11 _timer 'Timer'
|-FieldDecl 0x5563c3f16c48 <line:507:5, col:10> col:10 _cur_steps 'int *'
|-CXXRecordDecl 0x5563c3f16c98 <line:509:5, line:513:5> line:509:11 class Expander definition
| |-DefinitionData polymorphic
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-public 'VariableExpander'
| |-CXXRecordDecl 0x5563c3f16df8 <col:5, col:11> col:11 implicit class Expander
| |-AccessSpecDecl 0x5563c3f16e88 <col:48, col:54> col:48 public
| |-FieldDecl 0x5563c3f16ec0 <line:510:9, col:17> col:17 script 'Script *'
| |-FieldDecl 0x5563c3f16f20 <line:511:9, col:23> col:23 errh 'ErrorHandler *'
| |-CXXMethodDecl 0x5563c3f171d0 <line:512:9, col:82> col:13 expand 'int (const String &, String &, int, int) const'
| | |-Overrides: [ 0x5563c3ef7ba0 VariableExpander::expand 'int (const String &, String &, int, int) const' ]
| | |-ParmVarDecl 0x5563c3f16f80 <col:20, col:34> col:34 var 'const String &'
| | |-ParmVarDecl 0x5563c3f16ff8 <col:39, col:47> col:47 expansion 'String &'
| | |-ParmVarDecl 0x5563c3f17078 <col:58, col:62> col:62 vartype 'int'
| | `-ParmVarDecl 0x5563c3f170f8 <col:71, col:75> col:75 depth 'int'
| |-CXXConstructorDecl 0x5563c3f172d0 <line:509:11> col:11 implicit constexpr Expander 'void (const Script::Expander &)' inline default noexcept-unevaluated 0x5563c3f172d0
| | `-ParmVarDecl 0x5563c3f173e8 <col:11> col:11 'const Script::Expander &'
| |-CXXConstructorDecl 0x5563c3f17488 <col:11> col:11 implicit constexpr Expander 'void (Script::Expander &&)' inline default noexcept-unevaluated 0x5563c3f17488
| | `-ParmVarDecl 0x5563c3f17598 <col:11> col:11 'Script::Expander &&'
| |-CXXMethodDecl 0x5563c3f17638 <col:11> col:11 implicit operator= 'Script::Expander &(const Script::Expander &)' inline default noexcept-unevaluated 0x5563c3f17638
| | `-ParmVarDecl 0x5563c3f17748 <col:11> col:11 'const Script::Expander &'
| |-CXXMethodDecl 0x5563c3f177b8 <col:11> col:11 implicit operator= 'Script::Expander &(Script::Expander &&)' inline default noexcept-unevaluated 0x5563c3f177b8
| | `-ParmVarDecl 0x5563c3f178c8 <col:11> col:11 'Script::Expander &&'
| `-CXXDestructorDecl 0x5563c3f17950 <col:11> col:11 implicit ~Expander 'void ()' inline default noexcept-unevaluated 0x5563c3f17950
|   `-Overrides: [ 0x5563c3ef7810 VariableExpander::~VariableExpander 'void () noexcept' ]
|-EnumDecl 0x5563c3f17a30 <line:515:5, line:525:5> line:515:5
| |-EnumConstantDecl 0x5563c3f17b30 <line:516:9, col:19> col:9 ST_STEP 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| | `-ImplicitCastExpr 0x5563c3f18980 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f17b10 <col:19> 'int' Int: 0
| |     `-IntegerLiteral 0x5563c3f17af0 <col:19> 'int' 0
| |-EnumConstantDecl 0x5563c3f17b80 <col:22> col:22 ST_RUN 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f17bd0 <col:30> col:30 ST_GOTO 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f17c60 <line:517:9, col:18> col:9 ar_add 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| | `-ImplicitCastExpr 0x5563c3f18998 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f17c40 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x5563c3f17c20 <col:18> 'int' 0
| |-EnumConstantDecl 0x5563c3f17cb0 <col:21> col:21 ar_sub 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f17d00 <col:29> col:29 ar_min 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f17d50 <col:37> col:37 ar_max 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f17da0 <col:45> col:45 ar_mul 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f17df0 <col:53> col:53 ar_div 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f17e40 <col:61> col:61 ar_idiv 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f17e90 <col:70> col:70 ar_mod 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f17ee0 <col:78> col:78 ar_rem 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f17f30 <line:518:9> col:9 ar_neg 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f17f80 <col:17> col:17 ar_abs 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f17fd0 <line:519:9> col:9 AR_LT 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18020 <col:16> col:16 AR_EQ 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18070 <col:23> col:23 AR_GT 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f180c0 <col:30> col:30 AR_GE 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18110 <col:37> col:37 AR_NE 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18160 <col:44> col:44 AR_LE 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f181b0 <line:520:9> col:9 AR_FIRST 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18200 <col:19> col:19 AR_NOT 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18250 <col:27> col:27 AR_SPRINTF 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f182a0 <col:39> col:39 ar_random 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f182f0 <col:50> col:50 ar_cat 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18340 <col:58> col:58 ar_catq 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18390 <line:521:9> col:9 ar_and 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f183e0 <col:17> col:17 ar_or 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18430 <col:24> col:24 ar_nand 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18480 <col:33> col:33 ar_nor 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f184d0 <col:41> col:41 ar_now 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18520 <col:49> col:49 ar_if 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18570 <col:56> col:56 ar_in 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f185c0 <line:522:9> col:9 ar_readable 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18610 <col:22> col:22 ar_writable 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18660 <col:35> col:35 ar_length 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f186b0 <col:46> col:46 ar_unquote 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18700 <col:58> col:58 ar_kill 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18750 <line:523:9> col:9 ar_htons 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f187a0 <col:19> col:19 ar_htonl 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f187f0 <col:29> col:29 ar_ntohs 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18840 <col:39> col:39 ar_ntohl 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f18890 <line:524:9> col:9 vh_get 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| |-EnumConstantDecl 0x5563c3f188e0 <col:17> col:17 vh_set 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
| `-EnumConstantDecl 0x5563c3f18930 <col:25> col:25 vh_shift 'Script::(anonymous enum at ../elements/standard/script.hh:515:5)'
|-CXXMethodDecl 0x5563c3f18c38 <line:527:5, col:63> col:10 add_insn 'void (int, int, int, const String &)'
| |-ParmVarDecl 0x5563c3f189c8 <col:19> col:22 'int'
| |-ParmVarDecl 0x5563c3f18a48 <col:24> col:27 'int'
| |-ParmVarDecl 0x5563c3f18ac8 <col:29, col:35> col:33 'int' cinit
| | `-IntegerLiteral 0x5563c3f1c2b0 <col:35> 'int' 0
| `-ParmVarDecl 0x5563c3f18b40 <col:38, col:62> col:53 'const String &' cinit
|   `-ExprWithCleanups 0x5563c3f1c368 <col:55, col:62> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5563c3f1c350 <col:55, col:62> 'const String' lvalue
|       `-ImplicitCastExpr 0x5563c3f1c338 <col:55, col:62> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5563c3f1c318 <col:55, col:62> 'String' (CXXTemporary 0x5563c3f1c318)
|           `-CXXTemporaryObjectExpr 0x5563c3f1c2e0 <col:55, col:62> 'String' 'void ()'
|-CXXMethodDecl 0x5563c3f18f80 <line:528:5, col:71> col:9 step 'int (int, int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5563c3f18d10 <col:14, col:18> col:18 nsteps 'int'
| |-ParmVarDecl 0x5563c3f18d90 <col:26, col:30> col:30 step_type 'int'
| |-ParmVarDecl 0x5563c3f18e10 <col:41, col:45> col:45 njumps 'int'
| `-ParmVarDecl 0x5563c3f18e88 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f19120 <line:529:5, col:37> col:9 complete_step 'int (String *)'
| `-ParmVarDecl 0x5563c3f19050 <col:23, col:31> col:31 retval 'String *'
|-CXXMethodDecl 0x5563c3f19270 <line:530:5, col:36> col:9 find_label 'int (const String &) const'
| `-ParmVarDecl 0x5563c3f191d8 <col:20, col:33> col:34 'const String &'
|-CXXMethodDecl 0x5563c3f19480 <line:531:5, col:51> col:9 find_variable 'int (const String &, bool)'
| |-ParmVarDecl 0x5563c3f19328 <col:23, col:37> col:37 name 'const String &'
| `-ParmVarDecl 0x5563c3f193a0 <col:43, col:48> col:48 add 'bool'
|-CXXMethodDecl 0x5563c3f197e0 <line:533:5, col:82> col:16 step_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3f19548 <col:29> col:32 'int'
| |-ParmVarDecl 0x5563c3f195c0 <col:34, col:40> col:41 'String &'
| |-ParmVarDecl 0x5563c3f19638 <col:43, col:50> col:51 'Element *'
| |-ParmVarDecl 0x5563c3f196b0 <col:53, col:66> col:67 'const Handler *'
| `-ParmVarDecl 0x5563c3f19728 <col:69, col:81> col:82 'ErrorHandler *'
|-EnumDecl 0x5563c3f198a8 <line:534:5, col:48> col:5
| |-EnumConstantDecl 0x5563c3f19970 <col:12> col:12 error_one_number 'Script::(anonymous enum at ../elements/standard/script.hh:534:5)'
| `-EnumConstantDecl 0x5563c3f199c0 <col:30> col:30 error_two_numbers 'Script::(anonymous enum at ../elements/standard/script.hh:534:5)'
|-CXXMethodDecl 0x5563c3f19b80 <line:535:5, col:60> col:16 normal_error 'int (int, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3f19a28 <col:29, col:33> col:33 message 'int'
| `-ParmVarDecl 0x5563c3f19aa0 <col:42, col:56> col:56 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f19ee0 <line:536:5, col:101> col:16 arithmetic_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3f19c48 <col:35> col:38 'int'
| |-ParmVarDecl 0x5563c3f19cc0 <col:40, col:48> col:48 str 'String &'
| |-ParmVarDecl 0x5563c3f19d38 <col:53, col:62> col:62 e 'Element *'
| |-ParmVarDecl 0x5563c3f19db0 <col:65, col:80> col:80 h 'const Handler *'
| `-ParmVarDecl 0x5563c3f19e28 <col:83, col:97> col:97 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f1a258 <line:537:5, col:97> col:16 modrem_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3f19fc0 <col:31> col:34 'int'
| |-ParmVarDecl 0x5563c3f1a038 <col:36, col:44> col:44 str 'String &'
| |-ParmVarDecl 0x5563c3f1a0b0 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x5563c3f1a128 <col:61, col:76> col:76 h 'const Handler *'
| `-ParmVarDecl 0x5563c3f1a1a0 <col:79, col:93> col:93 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f1a5d0 <line:538:5, col:97> col:16 negabs_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3f1a338 <col:31> col:34 'int'
| |-ParmVarDecl 0x5563c3f1a3b0 <col:36, col:44> col:44 str 'String &'
| |-ParmVarDecl 0x5563c3f1a428 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x5563c3f1a4a0 <col:61, col:76> col:76 h 'const Handler *'
| `-ParmVarDecl 0x5563c3f1a518 <col:79, col:93> col:93 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f1a948 <line:539:5, col:98> col:16 compare_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3f1a6b0 <col:32> col:35 'int'
| |-ParmVarDecl 0x5563c3f1a728 <col:37, col:45> col:45 str 'String &'
| |-ParmVarDecl 0x5563c3f1a7a0 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x5563c3f1a818 <col:62, col:77> col:77 h 'const Handler *'
| `-ParmVarDecl 0x5563c3f1a890 <col:80, col:94> col:94 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f1acc0 <line:540:5, col:98> col:16 sprintf_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3f1aa28 <col:32> col:35 'int'
| |-ParmVarDecl 0x5563c3f1aaa0 <col:37, col:45> col:45 str 'String &'
| |-ParmVarDecl 0x5563c3f1ab18 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x5563c3f1ab90 <col:62, col:77> col:77 h 'const Handler *'
| `-ParmVarDecl 0x5563c3f1ac08 <col:80, col:94> col:94 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f1b038 <line:541:5, col:83> col:16 basic_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3f1ada0 <col:30> col:33 'int'
| |-ParmVarDecl 0x5563c3f1ae18 <col:35, col:41> col:42 'String &'
| |-ParmVarDecl 0x5563c3f1ae90 <col:44, col:51> col:52 'Element *'
| |-ParmVarDecl 0x5563c3f1af08 <col:54, col:67> col:68 'const Handler *'
| `-ParmVarDecl 0x5563c3f1af80 <col:70, col:82> col:83 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f1b228 <line:542:5, col:54> col:19 read_export_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5563c3f1b110 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x5563c3f1b190 <col:49, col:53> col:54 'void *'
|-CXXMethodDecl 0x5563c3f1b588 <line:543:5, col:94> col:16 var_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3f1b2f0 <col:28> col:31 'int'
| |-ParmVarDecl 0x5563c3f1b368 <col:33, col:41> col:41 str 'String &'
| |-ParmVarDecl 0x5563c3f1b3e0 <col:46, col:55> col:55 e 'Element *'
| |-ParmVarDecl 0x5563c3f1b458 <col:58, col:73> col:73 h 'const Handler *'
| `-ParmVarDecl 0x5563c3f1b4d0 <col:76, col:90> col:90 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5563c3f1b880 <line:544:5, col:80> col:16 star_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5563c3f1b660 <col:35, col:47> col:48 'const String &'
| |-ParmVarDecl 0x5563c3f1b6d8 <col:50, col:57> col:58 'Element *'
| |-ParmVarDecl 0x5563c3f1b758 <col:60, col:64> col:65 'void *'
| `-ParmVarDecl 0x5563c3f1b7d0 <col:67, col:79> col:80 'ErrorHandler *'
|-FriendDecl 0x5563c3f1ba58 <line:546:5, col:18> col:12 'class DriverManager':'DriverManager'
|-FriendDecl 0x5563c3f1baf0 <line:547:5, col:18> col:12 'class Expander':'Script::Expander'
|-CXXConstructorDecl 0x5563c3f1bb58 <line:444:7> col:7 implicit Script 'void (const Script &)' inline default_delete noexcept-unevaluated 0x5563c3f1bb58
| `-ParmVarDecl 0x5563c3f1bc68 <col:7> col:7 'const Script &'
|-CXXConstructorDecl 0x5563c3f1bd08 <col:7> col:7 implicit Script 'void (Script &&)' inline default_delete noexcept-unevaluated 0x5563c3f1bd08
| `-ParmVarDecl 0x5563c3f1be18 <col:7> col:7 'Script &&'
|-CXXMethodDecl 0x5563c3f1beb8 <col:7> col:7 implicit operator= 'Script &(const Script &)' inline default_delete noexcept-unevaluated 0x5563c3f1beb8
| `-ParmVarDecl 0x5563c3f1bfc8 <col:7> col:7 'const Script &'
|-CXXMethodDecl 0x5563c3f1c038 <col:7> col:7 implicit operator= 'Script &(Script &&)' inline default_delete noexcept-unevaluated 0x5563c3f1c038
| `-ParmVarDecl 0x5563c3f1c148 <col:7> col:7 'Script &&'
`-CXXDestructorDecl 0x5563c3f1c1d0 <col:7> col:7 implicit used ~Script 'void () noexcept' inline default
  |-Overrides: [ 0x5563c3ec0018 Element::~Element 'void () noexcept' ]
  `-CompoundStmt 0x5563c406dcd0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.Script = type { %class.Element.base, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.0, %class.Vector.0, %class.String, %class.String, i32, i32, i32, i32, i32, %class.Vector.5, %class.Timer, i32* }
  NonVirtualBaseLLVMType:%class.Script = type { %class.Element.base, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.0, %class.Vector.0, %class.String, %class.String, i32, i32, i32, i32, i32, %class.Vector.5, %class.Timer, i32* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class DriverManager
         0 |   class Script (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |     class Vector<int> _insns
       112 |       class vector_memory<class sized_array_memory<4> > vm_
       112 |         vector_memory<class sized_array_memory<4> >::type * l_
       120 |         vector_memory::size_type n_
       124 |         vector_memory::size_type capacity_
       128 |     class Vector<int> _args
       128 |       class vector_memory<class sized_array_memory<4> > vm_
       128 |         vector_memory<class sized_array_memory<4> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<int> _args2
       144 |       class vector_memory<class sized_array_memory<4> > vm_
       144 |         vector_memory<class sized_array_memory<4> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       160 |     class Vector<class String> _args3
       160 |       class vector_memory<class typed_array_memory<class String> > vm_
       160 |         vector_memory<class typed_array_memory<class String> >::type * l_
       168 |         vector_memory::size_type n_
       172 |         vector_memory::size_type capacity_
       176 |     class Vector<class String> _vars
       176 |       class vector_memory<class typed_array_memory<class String> > vm_
       176 |         vector_memory<class typed_array_memory<class String> >::type * l_
       184 |         vector_memory::size_type n_
       188 |         vector_memory::size_type capacity_
       192 |     class String _run_handler_name
       192 |       struct String::rep_t _r
       192 |         const char * data
       200 |         int length
       208 |         struct String::memo_t * memo
       216 |     class String _run_args
       216 |       struct String::rep_t _r
       216 |         const char * data
       224 |         int length
       232 |         struct String::memo_t * memo
       240 |     int _run_op
       244 |     int _insn_pos
       248 |     int _step_count
       252 |     int _type
       256 |     int _write_status
       264 |     class Vector<int> _signos
       264 |       class vector_memory<class sized_array_memory<4> > vm_
       264 |         vector_memory<class sized_array_memory<4> >::type * l_
       272 |         vector_memory::size_type n_
       276 |         vector_memory::size_type capacity_
       280 |     class Timer _timer
       280 |       int _schedpos1
       288 |       class Timestamp _expiry_s
       288 |         union Timestamp::rep_t _t
       288 |           int64_t x
       296 |       union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       296 |         TimerCallback callback
       304 |       void * _thunk
       312 |       class Element * _owner
       320 |       class RouterThread * _thread
       328 |     int * _cur_steps
           | [sizeof=336, dsize=336, align=8,
           |  nvsize=336, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3f1c4a0 prev 0x5563c3f1b940 <../elements/standard/drivermanager.hh:46:1, line:52:1> line:46:7 class DriverManager definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-public 'Script'
|-CXXRecordDecl 0x5563c3f1c5d8 <col:1, col:7> col:7 implicit referenced class DriverManager
|-AccessSpecDecl 0x5563c3f1c668 <col:39, col:45> col:39 public
|-CXXConstructorDecl 0x5563c3f1c6f0 <line:48:5, col:19> col:5 DriverManager 'void ()'
|-CXXMethodDecl 0x5563c3f1c7f0 <line:50:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5563c3f05890 Script::class_name 'const char *() const' ]
| `-CompoundStmt 0x5563c3f1d060 <col:36, col:62>
|   `-ReturnStmt 0x5563c3f1d050 <col:38, col:45>
|     `-ImplicitCastExpr 0x5563c3f1d038 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5563c3f1d010 <col:45> 'const char [14]' lvalue "DriverManager"
|-CXXConstructorDecl 0x5563c3f1c8b8 <line:46:7> col:7 implicit DriverManager 'void (const DriverManager &)' inline default_delete noexcept-unevaluated 0x5563c3f1c8b8
| `-ParmVarDecl 0x5563c3f1c9c8 <col:7> col:7 'const DriverManager &'
|-CXXConstructorDecl 0x5563c3f1ca68 <col:7> col:7 implicit DriverManager 'void (DriverManager &&)' inline default_delete noexcept-unevaluated 0x5563c3f1ca68
| `-ParmVarDecl 0x5563c3f1cb78 <col:7> col:7 'DriverManager &&'
|-CXXMethodDecl 0x5563c3f1cc18 <col:7> col:7 implicit operator= 'DriverManager &(const DriverManager &)' inline default_delete noexcept-unevaluated 0x5563c3f1cc18
| `-ParmVarDecl 0x5563c3f1cd28 <col:7> col:7 'const DriverManager &'
|-CXXMethodDecl 0x5563c3f1cd98 <col:7> col:7 implicit operator= 'DriverManager &(DriverManager &&)' inline default_delete noexcept-unevaluated 0x5563c3f1cd98
| `-ParmVarDecl 0x5563c3f1cea8 <col:7> col:7 'DriverManager &&'
`-CXXDestructorDecl 0x5563c3f1cf30 <col:7> col:7 implicit ~DriverManager 'void ()' inline default noexcept-unevaluated 0x5563c3f1cf30
  `-Overrides: [ 0x5563c3f1c1d0 Script::~Script 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.DriverManager = type { %class.Script }
  NonVirtualBaseLLVMType:%class.DriverManager = type { %class.Script }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3f6ba58 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5563c3f6bb88 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x5563c3f6bbe8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x5563c3f6bc48 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x5563c3fde6e8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x5563c3fde7c0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5563c3fde7c0
|-CXXConstructorDecl 0x5563c3fdea78 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5563c3fdea78
| `-ParmVarDecl 0x5563c3fdeb88 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x5563c3fdec28 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5563c3fdec28
  `-ParmVarDecl 0x5563c3fded38 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3f6b8b0 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5563c3f6b9c8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x5563c3f6ba58 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5563c3f6bb88 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x5563c3f6bbe8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x5563c3f6bc48 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x5563c3fde6e8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x5563c3fde7c0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5563c3fde7c0
| |-CXXConstructorDecl 0x5563c3fdea78 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5563c3fdea78
| | `-ParmVarDecl 0x5563c3fdeb88 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x5563c3fdec28 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5563c3fdec28
|   `-ParmVarDecl 0x5563c3fded38 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x5563c3f76960 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x5563c3f769c0 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x5563c3f76960 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5563c3f6bb88 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x5563c3f76a18 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x5563c3f76960 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5563c3f6bbe8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x5563c3f76a70 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x5563c3f76960 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5563c3f6bc48 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x5563c3f76ac8 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5563c3fde5f8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5563c3fdef58 <col:11>
|-CXXConstructorDecl 0x5563c3fde8c8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5563c3fde8c8
| `-ParmVarDecl 0x5563c3fde9d8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x5563c3fdedd8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5563c3fdedd8
  `-ParmVarDecl 0x5563c3fdeee8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3f69510 prev 0x5563c3ebf8b0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x5563c3f69648 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x5563c3f696d8 <col:33, col:39> col:33 public
|-EnumDecl 0x5563c3f69700 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x5563c3f69840 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x5563c3f69820 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x5563c3f69800 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5563c3f697c0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x5563c3f697e0 <col:26> 'int' 16
| `-EnumConstantDecl 0x5563c3f69910 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x5563c3f698f0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x5563c3f698d0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x5563c3f69890 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x5563c3f698b0 <col:47> 'int' 31
|-EnumDecl 0x5563c3f69960 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x5563c3f69aa0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x5563c3f69bc0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3f69a80 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x5563c3f69a60 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x5563c3f69a20 <col:26> 'int' 1
| |       `-IntegerLiteral 0x5563c3f69a40 <col:29> 'int' 15
| `-EnumConstantDecl 0x5563c3f69b70 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x5563c3f69bd8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3f69b50 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x5563c3f69b30 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x5563c3f69af0 <col:51> 'int' 1
|         `-IntegerLiteral 0x5563c3f69b10 <col:54> 'int' 10
|-CXXConstructorDecl 0x5563c3f69da8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x5563c3f69c00 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x5563c3f69c80 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x5563c3f69f00 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x5563c3f69e70 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x5563c3f69ff8 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x5563c3f69ff8
|-CXXMethodDecl 0x5563c3f6a188 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x5563c3f77ed8 <col:42, line:100:5>
|   `-ReturnStmt 0x5563c3f77ec8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x5563c3f77eb0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x5563c3f77e80 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x5563c3f76c00
|         `-CXXThisExpr 0x5563c3f77e70 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5563c3f6a250 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x5563c3f77f58 <col:36, line:105:5>
|   `-ReturnStmt 0x5563c3f77f48 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x5563c3f77f30 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5563c3f77f00 <col:16> 'void *const' lvalue ->_thunk 0x5563c3f76c68
|         `-CXXThisExpr 0x5563c3f77ef0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5563c3f6a310 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x5563c3f77fd8 <col:37, line:110:5>
|   `-ReturnStmt 0x5563c3f77fc8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x5563c3f77fb0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x5563c3f77f80 <col:16> 'Element *const' lvalue ->_owner 0x5563c3f76d28
|         `-CXXThisExpr 0x5563c3f77f70 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5563c3f6a3d0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x5563c3f6a498 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x5563c3f6a558 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x5563c3f6a618 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x5563c3f780c0 <col:35, line:137:5>
|   `-ReturnStmt 0x5563c3f780b0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x5563c3f78078 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x5563c3f78048 <col:16, col:24> '<bound member function type>' ->router 0x5563c3ed20c0
|         `-ImplicitCastExpr 0x5563c3f78098 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x5563c3f78030 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x5563c3f78000 <col:16> 'Element *const' lvalue ->_owner 0x5563c3f76d28
|               `-CXXThisExpr 0x5563c3f77ff0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5563c3f6a6d8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x5563c3f6a898 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x5563c3f6a788 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x5563c3f6a800 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x5563c3f6aaa8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x5563c3f6a958 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x5563c3f6a9d0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x5563c3f6ab78 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x5563c3f781d0 <col:35, line:181:5>
|   `-ReturnStmt 0x5563c3f781c0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x5563c3f781a8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x5563c3f78190 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x5563c3f78160 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x5563c3f6bbe8
|           `-MemberExpr 0x5563c3f78118 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5563c3f76960
|             `-MemberExpr 0x5563c3f780e8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x5563c3f76b88
|               `-CXXThisExpr 0x5563c3f780d8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5563c3f6ac38 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x5563c3f782e8 <col:30, line:192:5>
|   `-BinaryOperator 0x5563c3f782c8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x5563c3f78270 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5563c3f6bbe8
|     | `-MemberExpr 0x5563c3f78228 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5563c3f76960
|     |   `-MemberExpr 0x5563c3f781f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5563c3f76b88
|     |     `-CXXThisExpr 0x5563c3f781e8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x5563c3f782b0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x5563c3f782a0 <col:32> 'bool' false
|-CXXMethodDecl 0x5563c3f6acf8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x5563c3f78638 <col:30, line:206:5>
|   |-BinaryOperator 0x5563c3f783e0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x5563c3f78388 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5563c3f6bbe8
|   | | `-MemberExpr 0x5563c3f78340 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5563c3f76960
|   | |   `-MemberExpr 0x5563c3f78310 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5563c3f76b88
|   | |     `-CXXThisExpr 0x5563c3f78300 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x5563c3f783c8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x5563c3f783b8 <col:32> 'bool' true
|   |-CallExpr 0x5563c3f78480 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x5563c3f78468 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563c3f78448 <col:9> 'void ()' lvalue Function 0x5563c3ed8a70 'click_fence' 'void ()'
|   `-IfStmt 0x5563c3f78620 <line:204:9, line:205:32>
|     |-BinaryOperator 0x5563c3f78560 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x5563c3f78530 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x5563c3f784e0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x5563c3f76f98
|     | |   `-MemberExpr 0x5563c3f784b0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x5563c3f77010
|     | |     `-CXXThisExpr 0x5563c3f784a0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x5563c3f78548 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x5563c3f78510 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x5563c3f785e0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x5563c3f78590 <col:13> '<bound member function type>' ->complete_schedule 0x5563c3f77a10
|       | `-CXXThisExpr 0x5563c3f78580 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x5563c3f78608 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x5563c3f785c0 <col:31> 'int' 0
|-CXXMethodDecl 0x5563c3f6adb8 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x5563c3f78760 <col:35, line:240:5>
|   `-BinaryOperator 0x5563c3f78740 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x5563c3f786e8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5563c3f6bbe8
|     | `-MemberExpr 0x5563c3f786a0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5563c3f76960
|     |   `-MemberExpr 0x5563c3f78670 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5563c3f76b88
|     |     `-CXXThisExpr 0x5563c3f78660 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x5563c3f78728 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x5563c3f78718 <col:32> 'bool' true
|-CXXMethodDecl 0x5563c3f6ae78 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x5563c3f78978 <col:37, line:253:5>
|   |-BinaryOperator 0x5563c3f78858 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x5563c3f78800 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5563c3f6bbe8
|   | | `-MemberExpr 0x5563c3f787b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5563c3f76960
|   | |   `-MemberExpr 0x5563c3f78788 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5563c3f76b88
|   | |     `-CXXThisExpr 0x5563c3f78778 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x5563c3f78840 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x5563c3f78830 <col:32> 'bool' false
|   `-BinaryOperator 0x5563c3f78958 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x5563c3f78900 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x5563c3f6bc48
|     | `-MemberExpr 0x5563c3f788b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5563c3f76960
|     |   `-MemberExpr 0x5563c3f78888 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5563c3f76b88
|     |     `-CXXThisExpr 0x5563c3f78878 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x5563c3f78940 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x5563c3f78930 <col:41> 'bool' true
|-CXXMethodDecl 0x5563c3f6af38 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x5563c3f78af8 <col:37, line:264:5>
|   |-BinaryOperator 0x5563c3f78a78 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x5563c3f78a20 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x5563c3f6bc48
|   | | `-MemberExpr 0x5563c3f789d8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5563c3f76960
|   | |   `-MemberExpr 0x5563c3f789a8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5563c3f76b88
|   | |     `-CXXThisExpr 0x5563c3f78998 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x5563c3f78a60 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x5563c3f78a50 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x5563c3f78ad8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x5563c3f78aa8 <col:9> '<bound member function type>' ->reschedule 0x5563c3f6acf8
|       `-CXXThisExpr 0x5563c3f78a98 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x5563c3f6b080 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x5563c3f6aff0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x5563c3f6b150 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x5563c3f6b298 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x5563c3f6b208 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x5563c3f6b3e8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x5563c3f6b358 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x5563c3f6b4b0 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x5563c3f6b570 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x5563c3f6b610 <col:53> "" ""
|-CXXMethodDecl 0x5563c3f6b6a8 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x5563c3f6b748 <col:47> "" ""
|-AccessSpecDecl 0x5563c3f6b7b8 <line:303:3, col:10> col:3 private
|-FieldDecl 0x5563c3f6b7f8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x5563c3f6b860 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x5563c3f6b8b0 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5563c3f6b9c8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x5563c3f6ba58 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x5563c3f6bb88 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x5563c3f6bbe8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x5563c3f6bc48 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x5563c3fde6e8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x5563c3fde7c0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5563c3fde7c0
| | |-CXXConstructorDecl 0x5563c3fdea78 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5563c3fdea78
| | | `-ParmVarDecl 0x5563c3fdeb88 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x5563c3fdec28 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5563c3fdec28
| |   `-ParmVarDecl 0x5563c3fded38 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x5563c3f76960 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x5563c3f769c0 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x5563c3f76960 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5563c3f6bb88 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x5563c3f76a18 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x5563c3f76960 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5563c3f6bbe8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x5563c3f76a70 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x5563c3f76960 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5563c3f6bc48 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x5563c3f76ac8 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x5563c3fde5f8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5563c3fdef58 <col:11>
| |-CXXConstructorDecl 0x5563c3fde8c8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5563c3fde8c8
| | `-ParmVarDecl 0x5563c3fde9d8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x5563c3fdedd8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5563c3fdedd8
|   `-ParmVarDecl 0x5563c3fdeee8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x5563c3f76b88 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x5563c3f76c00 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x5563c3f76c68 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x5563c3f76cc8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x5563c3f76d28 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x5563c3f76d78 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5563c3f76e98 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x5563c3f76f38 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x5563c3f76f98 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x5563c3fd3238 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5563c3fd3238
| | `-ParmVarDecl 0x5563c3fd3348 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x5563c3fd33e8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5563c3fd33e8
| | `-ParmVarDecl 0x5563c3fd34f8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x5563c3fd3568 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5563c3fd3568
| |-CXXMethodDecl 0x5563c3fd3de8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5563c3fd3de8
| | `-ParmVarDecl 0x5563c3fd3ef8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x5563c3fd3f68 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5563c3fd3f68
| | `-ParmVarDecl 0x5563c3fd4078 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x5563c3fdefb8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5563c3fdf090 <col:11>
|-FieldDecl 0x5563c3f77010 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x5563c3f77158 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x5563c3f77098 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x5563c3f77308 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x5563c3f77218 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x5563c3f773d0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x5563c3f77490 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x5563c3f77550 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x5563c3f78c08 <col:41, line:355:5>
|   `-ReturnStmt 0x5563c3f78bf8 <line:354:9, col:38>
|     `-BinaryOperator 0x5563c3f78bd8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x5563c3f78ba8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x5563c3f78b58 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x5563c3f76f98
|       |   `-MemberExpr 0x5563c3f78b28 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x5563c3f77010
|       |     `-CXXThisExpr 0x5563c3f78b18 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x5563c3f78bc0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5563c3f78b88 <col:38> 'int' 0
|-CXXMethodDecl 0x5563c3f77610 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x5563c3f77750 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x5563c3f776c0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x5563c3f778c8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x5563c3f77808 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x5563c3f77a10 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x5563c3f77980 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x5563c3f77ad8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x5563c3f77ca0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x5563c3f77b88 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x5563c3f77c08 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x5563c3f77da0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x5563c3f77e30 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3f7c450 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x5563c40716c8 <line:167:18>
|-CXXRecordDecl 0x5563c4071788 prev 0x5563c3f7c450 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x5563c4071898 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<4>
         0 |   char [4] x
           | [sizeof=4, dsize=4, align=1,
           |  nvsize=4, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5563c3f090a0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 4
|-PackedAttr 0x5563c40724e8 <line:167:18>
|-CXXRecordDecl 0x5563c40725a8 prev 0x5563c3f090a0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x5563c40726b8 <line:166:5, col:13> col:10 x 'char [4]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.4 = type { [4 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.4 = type { [4 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3e983d8 prev 0x5563c3e8d5e0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5563c3e984d0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5563c3e985c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5563c3e986e8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5563c3e98868 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5563c3e989e8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5563c3e98b68 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5563c3ea9998 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5563c3eaa208 <col:11>
|-CXXDestructorDecl 0x5563c3ea9a70 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5563c3ea9ba8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5563c3ea9ba8
| `-ParmVarDecl 0x5563c3ea9cb8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5563c3ea9d58 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5563c3ea9d58
| `-ParmVarDecl 0x5563c3ea9e68 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5563c3eacc28 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5563c3eacd38 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5563c3eacfb8 <col:11>
|   `-ReturnStmt 0x5563c3eacfa8 <col:11>
|     `-UnaryOperator 0x5563c3eacf90 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5563c3eacf80 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5563c3eacda8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5563c3eacda8
  `-ParmVarDecl 0x5563c3eaceb8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3e98bd0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5563c3e98ce8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5563c3e98d88 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5563c3e98df0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5563c3e98e58 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5563c3e98ec0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5563c3e98f20 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5563c3e98fe0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5563c3e99040 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5563c3e990a0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5563c3ea98a8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5563c3e98d88 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5563c3eaa218 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5563c3eaa270 <col:12>
|-CXXConstructorDecl 0x5563c3ea9ed8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5563c3ea9ed8
| `-ParmVarDecl 0x5563c3ea9fe8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5563c3eaa088 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5563c3eaa088
| `-ParmVarDecl 0x5563c3eaa198 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5563c3eac310 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5563c3e86cf0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5563c3e86e08 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5563c3e86e98 <col:16, col:22> col:16 public
|-EnumDecl 0x5563c3e86ec0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5563c3e86fc0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5563c3e870a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e86fa0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5563c3e86f80 <col:21> 'int' 28
| `-EnumConstantDecl 0x5563c3e87050 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5563c3e870b8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3e87030 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5563c3e87010 <col:22> 'int' 64
|-CXXMethodDecl 0x5563c3e873f8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5563c3e870e0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5563c3e87160 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5563c3e871d8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5563c3e87250 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5563c3e874b8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5563c3e876b8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e87530 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5563c3e875a8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5563c3e87768 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5563c3e878c8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5563c3e877d8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5563c3e87970 <col:72> warn_unused_result ""
|-TypedefDecl 0x5563c3e87cd0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5563c3e87c60 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5563c3e87c00 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5563c3e87bc0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5563c395b2d0 'void'
|       |-PointerType 0x5563c3c07090 'unsigned char *'
|       | `-BuiltinType 0x5563c395b3d0 'unsigned char'
|       |-TypedefType 0x5563c3a03600 'size_t' sugar
|       | |-Typedef 0x5563c39cbb20 'size_t'
|       | `-BuiltinType 0x5563c395b430 'unsigned long'
|       `-PointerType 0x5563c395bad0 'void *'
|         `-BuiltinType 0x5563c395b2d0 'void'
|-CXXMethodDecl 0x5563c3e88148 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5563c3e87d40 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5563c3e87db8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5563c3e87e50 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5563c3e87ed0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5563c3ea2840 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5563c3ea2828 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5563c3ea27f0 <col:58> 'int' 0
| |-ParmVarDecl 0x5563c3e87f50 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5563c3ea2868 <col:76> 'int' 0
| |-ParmVarDecl 0x5563c3e87fd0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5563c3ea2888 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5563c3e88218 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5563c3e88298 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5563c3e88358 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5563c3e883f8 <col:20>
| `-OptimizeNoneAttr 0x5563c3e88450 <col:30>
|-CXXMethodDecl 0x5563c3e884c8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5563c3e88568 <col:20>
| `-OptimizeNoneAttr 0x5563c3e885c0 <col:30>
|-CXXMethodDecl 0x5563c3e88638 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5563c3e886d8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5563c3e88788 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5563c3e88828 <col:20>
| |-OptimizeNoneAttr 0x5563c3e88880 <col:30>
| `-WarnUnusedResultAttr 0x5563c3e888a8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5563c3e88900 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5563c3e889a0 <col:20>
| `-OptimizeNoneAttr 0x5563c3e889f8 <col:30>
|-CXXMethodDecl 0x5563c3e88a48 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5563c3e88ae8 <col:20>
| `-OptimizeNoneAttr 0x5563c3e88b40 <col:30>
|-CXXMethodDecl 0x5563c3e88b88 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5563c3e88c28 <col:20>
| `-OptimizeNoneAttr 0x5563c3e88c80 <col:30>
|-CXXMethodDecl 0x5563c3e88cc8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5563c3e88d88 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5563c3e88e50 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5563c3e88f18 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5563c3e88fd8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5563c3e890f8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5563c3ea2950 <col:54, line:99:5>
|   `-ReturnStmt 0x5563c3ea2940 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5563c3ea2928 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5563c3ea28f8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5563c3e993d8
|         `-CXXThisExpr 0x5563c3ea28e8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5563c3e89298 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5563c3e891a8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5563c3ea2a00 <col:67, line:103:5>
|   `-BinaryOperator 0x5563c3ea29e0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5563c3ea2978 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5563c3e993d8
|     | `-CXXThisExpr 0x5563c3ea2968 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5563c3ea29c8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3ea29a8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5563c3e891a8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5563c3e89390 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5563c3ea2a80 <col:33, line:107:5>
|   `-ReturnStmt 0x5563c3ea2a70 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5563c3ea2a58 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5563c3ea2a28 <col:16> 'void *' lvalue ->_destructor_argument 0x5563c3e99440
|         `-CXXThisExpr 0x5563c3ea2a18 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5563c3e89450 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5563c3ea30b0 <col:25, line:113:5>
|   |-ParenExpr 0x5563c3ea2df8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5563c3ea2dc8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea2b38 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5563c3ea2b10 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5563c3ea2ad8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5563c3ea2aa8 <col:24> '<bound member function type>' ->shared 0x5563c3e884c8
|   |   |       `-ImplicitCastExpr 0x5563c3ea2af8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5563c3ea2a98 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5563c3ea2b98 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea2b78 <col:42> 'int' 0
|   |   `-CallExpr 0x5563c3ea2d28 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea2d10 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea2cf0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea2d68 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea2c08 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5563c3ea2d80 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea2c30 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea2d98 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea2c68 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5563c3ea2db0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea2cd8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea2cc0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea2c88 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5563c3ea2ff8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5563c3ea2e28 <col:2> 'unsigned char *' lvalue ->_head 0x5563c3e991e0
|   | | `-CXXThisExpr 0x5563c3ea2e18 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5563c3ea2fe0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5563c3ea2fc0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5563c3ea2e68 <col:10> 'unsigned char *' lvalue ->_data 0x5563c3e99248
|   |     | `-CXXThisExpr 0x5563c3ea2e58 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5563c3ea2fa8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5563c3ea2f88 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5563c3ea2ea8 <col:18> 'unsigned char *' lvalue ->_tail 0x5563c3e992b0
|   |         | `-CXXThisExpr 0x5563c3ea2e98 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5563c3ea2f70 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5563c3ea2f50 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5563c3ea2ee8 <col:26> 'unsigned char *' lvalue ->_end 0x5563c3e99318
|   |             | `-CXXThisExpr 0x5563c3ea2ed8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5563c3ea2f38 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5563c3ea2f18 <col:33> 'int' 0
|   `-BinaryOperator 0x5563c3ea3090 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5563c3ea3028 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5563c3e993d8
|     | `-CXXThisExpr 0x5563c3ea3018 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5563c3ea3078 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5563c3ea3058 <col:16> 'int' 0
|-CXXMethodDecl 0x5563c3e89590 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5563c3e89500 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5563c3e89638 <col:20>
| |-OptimizeNoneAttr 0x5563c3e89690 <col:30>
| `-WarnUnusedResultAttr 0x5563c3e896b8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5563c3e89788 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5563c3e896f8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5563c3e89830 <col:20>
| |-OptimizeNoneAttr 0x5563c3e89888 <col:30>
| `-WarnUnusedResultAttr 0x5563c3e898b0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5563c3e899e8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5563c3e898f0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5563c3e89a90 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5563c3e89b90 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5563c3e89b00 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5563c3e89c38 <col:20>
| `-OptimizeNoneAttr 0x5563c3e89c90 <col:30>
|-CXXMethodDecl 0x5563c3e89d58 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5563c3e89cc8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5563c3e89e00 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5563c3e89f00 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5563c3e89e70 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5563c3e89fa8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5563c3e8a0a8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5563c3e8a018 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5563c3e8a150 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8a1a8 <col:30>
|-CXXMethodDecl 0x5563c3e8a338 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5563c3e8a1e8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5563c3e8a260 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5563c3ea28a8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5563c3e8a3e8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5563c3e8a5e8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e8a460 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5563c3e8a4d8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e8a7f8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e8a6a8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5563c3e8a720 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e8aa08 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5563c3e8a8b8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5563c3e8a938 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5563c3ea28b8 <col:39> 'int' 0
|-CXXMethodDecl 0x5563c3e8aad8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5563c3e8aba0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5563c3e8ac68 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5563c3e8ad28 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5563c3e8adf0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5563c3e8af38 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5563c3e8aea8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5563c3e8b108 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e8aff8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5563c3e8b070 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e8b1d8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5563c3e8b298 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5563c3e8b338 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8b390 <col:30>
|-CXXMethodDecl 0x5563c3e8b3e0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5563c3e8b480 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8b4d8 <col:30>
|-CXXMethodDecl 0x5563c3e8b528 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5563c3e8b5e8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5563c3e8b6b0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5563c3e8b750 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8b7a8 <col:30>
|-CXXMethodDecl 0x5563c3e8b8f8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e8b7e8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5563c3e8b860 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e8ba48 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5563c3e8b9b8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e8bb20 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5563c3e8bbe0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5563c3e8bc80 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8bcd8 <col:30>
|-CXXMethodDecl 0x5563c3e8bd28 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5563c3e8bdc8 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8be20 <col:30>
|-CXXMethodDecl 0x5563c3e8be70 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5563c3e8bf38 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5563c3e8bfd8 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8c030 <col:30>
|-CXXMethodDecl 0x5563c3e8c078 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5563c3e8c198 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5563c3e8c308 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5563c3e8c248 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5563c3e8c3f8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5563c3e8c498 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8c4f0 <col:30>
|-CXXMethodDecl 0x5563c3e8c540 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5563c3e8c600 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5563c3e8c838 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5563c3e8c6b0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5563c3e8c728 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5563c3e8c8e8 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8c940 <col:30>
|-CXXMethodDecl 0x5563c3e8c9e8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5563c3e8ca88 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8cae0 <col:30>
|-CXXMethodDecl 0x5563c3e8cb30 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5563c3e8cbd0 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8cc28 <col:30>
|-CXXMethodDecl 0x5563c3e8cc70 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5563c3e8cd10 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8cd68 <col:30>
|-CXXMethodDecl 0x5563c3e8ce68 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5563c3e8cda0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5563c3e8cf10 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8cf68 <col:30>
|-CXXMethodDecl 0x5563c3e8d128 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5563c3e8cfa0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5563c3e8d018 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5563c3e8d1d8 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8d230 <col:30>
|-CXXMethodDecl 0x5563c3e8d2d8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5563c3e8d3f8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5563c3e8d518 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5563c3e8d5b8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5563c3e8d5e0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5563c3e8d708 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5563c3e8d7a8 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8d800 <col:30>
|-CXXMethodDecl 0x5563c3e8d8a8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5563c3e8d948 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8d9a0 <col:30>
|-AccessSpecDecl 0x5563c3e8d9c8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5563c3e8d9f0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5563c3e8daf0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5563c3e8db40 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3e8dad0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5563c3e8dab0 <col:14> 'int' 48
|-CXXMethodDecl 0x5563c3e8dba8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5563c3e8dc48 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8dca0 <col:30>
|-CXXMethodDecl 0x5563c3e8dd18 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5563c3e8ddb8 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8de10 <col:30>
|-CXXMethodDecl 0x5563c3e8ded8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5563c3e8de48 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5563c3e8e078 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5563c3e8e218 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5563c3e8e128 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5563c3e8e2c0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5563c3e8e3c0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5563c3e8e770 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e8e3a0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5563c3e8e380 <col:9> 'int' 0
| |-EnumConstantDecl 0x5563c3e8e450 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5563c3e8e788 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e8e430 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5563c3e8e410 <col:14> 'int' 1
| |-EnumConstantDecl 0x5563c3e8e4e0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5563c3e8e7a0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e8e4c0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5563c3e8e4a0 <col:14> 'int' 2
| |-EnumConstantDecl 0x5563c3e8e570 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5563c3e8e7b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e8e550 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5563c3e8e530 <col:14> 'int' 3
| |-EnumConstantDecl 0x5563c3e8e600 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5563c3e8e7d0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e8e5e0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5563c3e8e5c0 <col:13> 'int' 4
| |-EnumConstantDecl 0x5563c3e8e690 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5563c3e8e7e8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e8e670 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5563c3e8e650 <col:13> 'int' 5
| `-EnumConstantDecl 0x5563c3e8e720 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5563c3e8e800 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3e8e700 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5563c3e8e6e0 <col:14> 'int' 6
|-CXXMethodDecl 0x5563c3e8e868 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5563c3e8e908 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8e960 <col:30>
|-CXXMethodDecl 0x5563c3e8ea58 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5563c3e8e998 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5563c3e8eb00 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8eb58 <col:30>
|-CXXMethodDecl 0x5563c3e8ebc8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5563c3e8ecf0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5563c3e8ee68 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5563c3e8eda0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5563c3e8ef30 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5563c3e8eff8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5563c3e8f138 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5563c3e8f0a8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5563c3e8f1e0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5563c3e8f2e0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5563c3e8f4e0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e8f2c0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5563c3e8f2a0 <col:23> 'int' 0
| |-EnumConstantDecl 0x5563c3e8f370 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5563c3e8f4f8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e8f350 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5563c3e8f330 <col:45> 'int' 4
| |-EnumConstantDecl 0x5563c3e8f400 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5563c3e8f510 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e8f3e0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5563c3e8f3c0 <col:24> 'int' 0
| `-EnumConstantDecl 0x5563c3e8f490 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5563c3e8f528 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3e8f470 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5563c3e8f450 <col:47> 'int' 16
|-CXXMethodDecl 0x5563c3e8f588 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5563c3e8f6f8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5563c3e8f638 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5563c3e8f7a0 <col:20>
| `-OptimizeNoneAttr 0x5563c3e8f7f8 <col:30>
|-CXXMethodDecl 0x5563c3e8f848 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5563c3ea31d0 <col:18, col:36>
|   `-ReturnStmt 0x5563c3ea31c0 <col:20, col:33>
|     `-ImplicitCastExpr 0x5563c3ea31a8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5563c3ea3188 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5563c3ea3158 <col:27> '<bound member function type>' ->xanno 0x5563c3e8d8a8
|           `-CXXThisExpr 0x5563c3ea3148 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5563c3e8f940 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5563c3ea32e0 <col:30, col:48>
|   `-ReturnStmt 0x5563c3ea32d0 <col:32, col:45>
|     `-ImplicitCastExpr 0x5563c3ea32b8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5563c3ea3298 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5563c3ea3268 <col:39> '<bound member function type>' ->xanno 0x5563c3e8d708
|           `-CXXThisExpr 0x5563c3ea3258 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5563c3e8fa28 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5563c3ea3478 <col:24, col:50>
|   `-ReturnStmt 0x5563c3ea3468 <col:26, col:47>
|     `-UnaryOperator 0x5563c3ea3450 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5563c3ea3430 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5563c3ea3418 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5563c3ea33c8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5563c3e986e8
|         |   `-CXXMemberCallExpr 0x5563c3ea33a8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5563c3ea3378 <col:34> '<bound member function type>' ->xanno 0x5563c3e8d8a8
|         |       `-CXXThisExpr 0x5563c3ea3368 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5563c3ea33f8 <col:46> 'int' 0
|-CXXMethodDecl 0x5563c3e8fb30 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5563c3ea3648 <col:36, col:62>
|   `-ReturnStmt 0x5563c3ea3638 <col:38, col:59>
|     `-UnaryOperator 0x5563c3ea3620 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5563c3ea3600 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5563c3ea35e8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5563c3ea3560 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5563c3e986e8
|         |   `-CXXMemberCallExpr 0x5563c3ea3540 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5563c3ea3510 <col:46> '<bound member function type>' ->xanno 0x5563c3e8d708
|         |       `-CXXThisExpr 0x5563c3ea3500 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5563c3ea3590 <col:58> 'int' 0
|-CXXMethodDecl 0x5563c3e8fc48 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5563c3ea37e0 <col:26, col:53>
|   `-ReturnStmt 0x5563c3ea37d0 <col:28, col:50>
|     `-UnaryOperator 0x5563c3ea37b8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5563c3ea3798 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5563c3ea3780 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5563c3ea3730 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5563c3e989e8
|         |   `-CXXMemberCallExpr 0x5563c3ea3710 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5563c3ea36e0 <col:36> '<bound member function type>' ->xanno 0x5563c3e8d8a8
|         |       `-CXXThisExpr 0x5563c3ea36d0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5563c3ea3760 <col:49> 'int' 0
|-CXXMethodDecl 0x5563c3e8fd68 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5563c3ea39b8 <col:38, col:65>
|   `-ReturnStmt 0x5563c3ea39a8 <col:40, col:62>
|     `-UnaryOperator 0x5563c3ea3990 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5563c3ea3970 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5563c3ea3958 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5563c3ea38c8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5563c3e989e8
|         |   `-CXXMemberCallExpr 0x5563c3ea38a8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5563c3ea3878 <col:48> '<bound member function type>' ->xanno 0x5563c3e8d708
|         |       `-CXXThisExpr 0x5563c3ea3868 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5563c3ea38f8 <col:61> 'int' 0
|-CXXMethodDecl 0x5563c3e8ff18 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5563c3e8fe20 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5563c3ea4088 <col:34, line:463:5>
|   |-ParenExpr 0x5563c3ea3ed0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5563c3ea3ea0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea3b08 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea3ad8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea3a28 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea3a10 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea39d0 <col:23> 'int' lvalue ParmVar 0x5563c3e8fe20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea39f0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea3ab8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5563c3ea3a88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea3a48 <col:33> 'int' lvalue ParmVar 0x5563c3e8fe20 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5563c3ea3aa0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5563c3ea3a68 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5563c3ea3b68 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea3b48 <col:56> 'int' 0
|   |   `-CallExpr 0x5563c3ea3e00 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea3de8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea3dc8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea3e40 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea3c58 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5563c3ea3e58 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea3c88 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea3e70 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea3cc0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5563c3ea3e88 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea3db0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea3d98 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea3d58 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5563c3ea4078 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5563c3ea4060 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5563c3ea4040 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5563c3ea4010 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5563c3ea3fc0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5563c3e986e8
|         |   `-CXXMemberCallExpr 0x5563c3ea3fa0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5563c3ea3f70 <col:9> '<bound member function type>' ->xanno 0x5563c3e8d708
|         |       `-CXXThisExpr 0x5563c3ea3f60 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5563c3ea4028 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5563c3ea3ff0 <col:21> 'int' lvalue ParmVar 0x5563c3e8fe20 'i' 'int'
|-CXXMethodDecl 0x5563c3e90168 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5563c3e8ffd8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5563c3e90050 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5563c3ea4718 <col:40, line:472:5>
|   |-ParenExpr 0x5563c3ea4530 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5563c3ea4500 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea41e0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea41b0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea4100 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea40e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea40a8 <col:23> 'int' lvalue ParmVar 0x5563c3e8ffd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea40c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea4190 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5563c3ea4160 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea4120 <col:33> 'int' lvalue ParmVar 0x5563c3e8ffd8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5563c3ea4178 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5563c3ea4140 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5563c3ea4240 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea4220 <col:56> 'int' 0
|   |   `-CallExpr 0x5563c3ea4460 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea4448 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea4428 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea44a0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea42b0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5563c3ea44b8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea42e0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea44d0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea4318 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5563c3ea44e8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea4410 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea43f8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea43b8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5563c3ea46f8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5563c3ea46a0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5563c3ea4670 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5563c3ea4620 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5563c3e986e8
|     | |   `-CXXMemberCallExpr 0x5563c3ea4600 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5563c3ea45d0 <col:2> '<bound member function type>' ->xanno 0x5563c3e8d8a8
|     | |       `-CXXThisExpr 0x5563c3ea45c0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5563c3ea4688 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5563c3ea4650 <col:14> 'int' lvalue ParmVar 0x5563c3e8ffd8 'i' 'int'
|     `-ImplicitCastExpr 0x5563c3ea46e0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3ea46c0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5563c3e90050 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5563c3e90328 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5563c3e90230 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5563c3ea4e98 <col:36, line:485:5>
|   |-ParenExpr 0x5563c3ea4c00 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5563c3ea4bd0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea48b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea4880 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea4790 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea4778 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea4738 <col:23> 'int' lvalue ParmVar 0x5563c3e90230 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea4758 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea4860 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5563c3ea4848 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea47b0 <col:33> 'int' lvalue ParmVar 0x5563c3e90230 'i' 'int'
|   |   |     `-BinaryOperator 0x5563c3ea4828 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5563c3ea4810 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5563c3ea47d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5563c3ea47f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5563c3ea4910 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea48f0 <col:60> 'int' 0
|   |   `-CallExpr 0x5563c3ea4b30 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea4b18 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea4af8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea4b70 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea4980 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5563c3ea4b88 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea49b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea4ba0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea49f0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5563c3ea4bb8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea4ae0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea4ac8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea4a88 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5563c3ea4e88 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5563c3ea4e70 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5563c3ea4e58 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5563c3ea4e28 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5563c3ea4dc8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5563c3ea4d98 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5563c3ea4d10 <col:61, col:70> 'char const[48]' lvalue ->c 0x5563c3e985c0
|             |   `-CXXMemberCallExpr 0x5563c3ea4cf0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5563c3ea4cc0 <col:61> '<bound member function type>' ->xanno 0x5563c3e8d708
|             |       `-CXXThisExpr 0x5563c3ea4cb0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5563c3ea4db0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5563c3ea4d40 <col:74> 'int' lvalue ParmVar 0x5563c3e90230 'i' 'int'
|-CXXMethodDecl 0x5563c3e90578 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5563c3e903e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5563c3e90460 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5563c3ea55e8 <col:42, line:500:5>
|   |-ParenExpr 0x5563c3ea5380 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5563c3ea5350 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea5030 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea5000 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea4f10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea4ef8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea4eb8 <col:23> 'int' lvalue ParmVar 0x5563c3e903e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea4ed8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea4fe0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5563c3ea4fc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea4f30 <col:33> 'int' lvalue ParmVar 0x5563c3e903e8 'i' 'int'
|   |   |     `-BinaryOperator 0x5563c3ea4fa8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5563c3ea4f90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5563c3ea4f50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5563c3ea4f70 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5563c3ea5090 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea5070 <col:60> 'int' 0
|   |   `-CallExpr 0x5563c3ea52b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea5298 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea5278 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea52f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea5100 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5563c3ea5308 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea5138 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea5320 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea5170 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5563c3ea5338 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea5260 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea5248 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea5208 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5563c3ea55c8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5563c3ea5578 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5563c3ea5548 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5563c3ea54f0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5563c3ea54c0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5563c3ea5470 <col:48, col:57> 'char [48]' lvalue ->c 0x5563c3e985c0
|     |     |   `-CXXMemberCallExpr 0x5563c3ea5450 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5563c3ea5420 <col:48> '<bound member function type>' ->xanno 0x5563c3e8d8a8
|     |     |       `-CXXThisExpr 0x5563c3ea5410 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5563c3ea54d8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5563c3ea54a0 <col:61> 'int' lvalue ParmVar 0x5563c3e903e8 'i' 'int'
|     `-ImplicitCastExpr 0x5563c3ea55b0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3ea5590 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5563c3e90460 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5563c3e90738 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5563c3e90640 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5563c3ea5d48 <col:35, line:513:5>
|   |-ParenExpr 0x5563c3ea5a58 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5563c3ea5a28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea5780 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea5750 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea5660 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea5648 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea5608 <col:23> 'int' lvalue ParmVar 0x5563c3e90640 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea5628 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea5730 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5563c3ea5718 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea5680 <col:33> 'int' lvalue ParmVar 0x5563c3e90640 'i' 'int'
|   |   |     `-BinaryOperator 0x5563c3ea56f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5563c3ea56e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5563c3ea56a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5563c3ea56c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5563c3ea57e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea57c0 <col:60> 'int' 0
|   |   `-CallExpr 0x5563c3ea5988 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea5970 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea5950 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea59c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea5850 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5563c3ea59e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea5888 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea59f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea58c0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5563c3ea5a10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea5938 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea5920 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea58e0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5563c3ea5d38 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5563c3ea5d20 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5563c3ea5d08 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5563c3ea5cd8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5563c3ea5c50 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5563c3ea5c20 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5563c3ea5bd0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5563c3e985c0
|             |   `-CXXMemberCallExpr 0x5563c3ea5bb0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5563c3ea5b80 <col:60> '<bound member function type>' ->xanno 0x5563c3e8d708
|             |       `-CXXThisExpr 0x5563c3ea5b70 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5563c3ea5c38 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5563c3ea5c00 <col:73> 'int' lvalue ParmVar 0x5563c3e90640 'i' 'int'
|-CXXMethodDecl 0x5563c3e90988 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5563c3e907f8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5563c3e90870 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5563c3ea6468 <col:41, line:528:5>
|   |-ParenExpr 0x5563c3ea61f0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5563c3ea61c0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea5ee0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea5eb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea5dc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea5da8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea5d68 <col:23> 'int' lvalue ParmVar 0x5563c3e907f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea5d88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea5e90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5563c3ea5e78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea5de0 <col:33> 'int' lvalue ParmVar 0x5563c3e907f8 'i' 'int'
|   |   |     `-BinaryOperator 0x5563c3ea5e58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5563c3ea5e40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5563c3ea5e00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5563c3ea5e20 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5563c3ea5f40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea5f20 <col:60> 'int' 0
|   |   `-CallExpr 0x5563c3ea6120 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea6108 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea60e8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea6160 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea5fb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5563c3ea6178 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea5fe8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea6190 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea6020 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5563c3ea61a8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea60d0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea60b8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea6078 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5563c3ea6448 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5563c3ea63f8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5563c3ea63c8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5563c3ea6370 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5563c3ea6330 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5563c3ea62e0 <col:47, col:56> 'char [48]' lvalue ->c 0x5563c3e985c0
|     |     |   `-CXXMemberCallExpr 0x5563c3ea62c0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5563c3ea6290 <col:47> '<bound member function type>' ->xanno 0x5563c3e8d8a8
|     |     |       `-CXXThisExpr 0x5563c3ea6280 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5563c3ea6348 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5563c3ea6310 <col:60> 'int' lvalue ParmVar 0x5563c3e907f8 'i' 'int'
|     `-ImplicitCastExpr 0x5563c3ea6430 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3ea6410 <col:65> 'int16_t':'short' lvalue ParmVar 0x5563c3e90870 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5563c3e90b48 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5563c3e90a50 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5563c3ea6b38 <col:36, line:541:5>
|   |-ParenExpr 0x5563c3ea68d8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5563c3ea68a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea6600 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea65d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea64e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea64c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea6488 <col:23> 'int' lvalue ParmVar 0x5563c3e90a50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea64a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea65b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5563c3ea6598 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea6500 <col:33> 'int' lvalue ParmVar 0x5563c3e90a50 'i' 'int'
|   |   |     `-BinaryOperator 0x5563c3ea6578 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5563c3ea6560 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5563c3ea6520 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5563c3ea6540 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5563c3ea6660 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea6640 <col:60> 'int' 0
|   |   `-CallExpr 0x5563c3ea6808 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea67f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea67d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea6848 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea66d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5563c3ea6860 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea6708 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea6878 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea6740 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5563c3ea6890 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea67b8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea67a0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea6760 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5563c3ea6b28 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5563c3ea6b10 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5563c3ea6af8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5563c3ea6ac8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5563c3ea6a70 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5563c3ea6a40 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5563c3ea69f0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5563c3e985c0
|             |   `-CXXMemberCallExpr 0x5563c3ea69d0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5563c3ea69a0 <col:61> '<bound member function type>' ->xanno 0x5563c3e8d708
|             |       `-CXXThisExpr 0x5563c3ea6990 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5563c3ea6a58 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5563c3ea6a20 <col:74> 'int' lvalue ParmVar 0x5563c3e90a50 'i' 'int'
|-CXXMethodDecl 0x5563c3e90d18 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5563c3e90c08 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5563c3e90c80 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5563c3e90dc8 <col:20>
| `-OptimizeNoneAttr 0x5563c3e90e20 <col:30>
|-CXXMethodDecl 0x5563c3e90f58 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5563c3e90e60 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5563c3ea7208 <col:35, line:562:5>
|   |-ParenExpr 0x5563c3ea6fa8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5563c3ea6f78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea6cd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea6ca0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea6bb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea6b98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea6b58 <col:23> 'int' lvalue ParmVar 0x5563c3e90e60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea6b78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea6c80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5563c3ea6c68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea6bd0 <col:33> 'int' lvalue ParmVar 0x5563c3e90e60 'i' 'int'
|   |   |     `-BinaryOperator 0x5563c3ea6c48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5563c3ea6c30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5563c3ea6bf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5563c3ea6c10 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5563c3ea6d30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea6d10 <col:60> 'int' 0
|   |   `-CallExpr 0x5563c3ea6ed8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea6ec0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea6ea0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea6f18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea6da0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5563c3ea6f30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea6dd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea6f48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea6e10 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5563c3ea6f60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea6e88 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea6e70 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea6e30 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5563c3ea71f8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5563c3ea71e0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5563c3ea71c8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5563c3ea7198 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5563c3ea7140 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5563c3ea7110 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5563c3ea70c0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5563c3e985c0
|             |   `-CXXMemberCallExpr 0x5563c3ea70a0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5563c3ea7070 <col:60> '<bound member function type>' ->xanno 0x5563c3e8d708
|             |       `-CXXThisExpr 0x5563c3ea7060 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5563c3ea7128 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5563c3ea70f0 <col:73> 'int' lvalue ParmVar 0x5563c3e90e60 'i' 'int'
|-CXXMethodDecl 0x5563c3e91168 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5563c3e91018 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5563c3e91090 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5563c3ea78e8 <col:41, line:577:5>
|   |-ParenExpr 0x5563c3ea7678 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5563c3ea7648 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea73a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea7370 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea7280 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea7268 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea7228 <col:23> 'int' lvalue ParmVar 0x5563c3e91018 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea7248 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea7350 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5563c3ea7338 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea72a0 <col:33> 'int' lvalue ParmVar 0x5563c3e91018 'i' 'int'
|   |   |     `-BinaryOperator 0x5563c3ea7318 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5563c3ea7300 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5563c3ea72c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5563c3ea72e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5563c3ea7400 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea73e0 <col:60> 'int' 0
|   |   `-CallExpr 0x5563c3ea75a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea7590 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea7570 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea75e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea7470 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5563c3ea7600 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea74a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea7618 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea74e0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5563c3ea7630 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea7558 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea7540 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea7500 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5563c3ea78c8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5563c3ea7878 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5563c3ea7848 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5563c3ea77e8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5563c3ea77b8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5563c3ea7768 <col:47, col:56> 'char [48]' lvalue ->c 0x5563c3e985c0
|     |     |   `-CXXMemberCallExpr 0x5563c3ea7748 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5563c3ea7718 <col:47> '<bound member function type>' ->xanno 0x5563c3e8d8a8
|     |     |       `-CXXThisExpr 0x5563c3ea7708 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5563c3ea77d0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5563c3ea7798 <col:60> 'int' lvalue ParmVar 0x5563c3e91018 'i' 'int'
|     `-ImplicitCastExpr 0x5563c3ea78b0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3ea7890 <col:65> 'int32_t':'int' lvalue ParmVar 0x5563c3e91090 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5563c3e91328 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5563c3e91230 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5563c3ea8018 <col:36, line:591:5>
|   |-ParenExpr 0x5563c3ea7d58 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5563c3ea7d28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea7a80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea7a50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea7960 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea7948 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea7908 <col:23> 'int' lvalue ParmVar 0x5563c3e91230 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea7928 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea7a30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5563c3ea7a18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea7980 <col:33> 'int' lvalue ParmVar 0x5563c3e91230 'i' 'int'
|   |   |     `-BinaryOperator 0x5563c3ea79f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5563c3ea79e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5563c3ea79a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5563c3ea79c0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5563c3ea7ae0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea7ac0 <col:60> 'int' 0
|   |   `-CallExpr 0x5563c3ea7c88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea7c70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea7c50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea7cc8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea7b50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5563c3ea7ce0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea7b88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea7cf8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea7bc0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5563c3ea7d10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea7c38 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea7c20 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea7be0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5563c3ea8008 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5563c3ea7ff0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5563c3ea7fd8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5563c3ea7fa8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5563c3ea7f20 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5563c3ea7ef0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5563c3ea7ea0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5563c3e985c0
|             |   `-CXXMemberCallExpr 0x5563c3ea7e80 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5563c3ea7e50 <col:61> '<bound member function type>' ->xanno 0x5563c3e8d708
|             |       `-CXXThisExpr 0x5563c3ea7e40 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5563c3ea7f08 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5563c3ea7ed0 <col:74> 'int' lvalue ParmVar 0x5563c3e91230 'i' 'int'
|-CXXMethodDecl 0x5563c3e91578 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5563c3e913e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5563c3e91460 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5563c3ea86f8 <col:42, line:606:5>
|   |-ParenExpr 0x5563c3ea8488 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5563c3ea8458 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea81b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea8180 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea8090 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea8078 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea8038 <col:23> 'int' lvalue ParmVar 0x5563c3e913e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea8058 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea8160 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5563c3ea8148 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea80b0 <col:33> 'int' lvalue ParmVar 0x5563c3e913e8 'i' 'int'
|   |   |     `-BinaryOperator 0x5563c3ea8128 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5563c3ea8110 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5563c3ea80d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5563c3ea80f0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5563c3ea8210 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea81f0 <col:60> 'int' 0
|   |   `-CallExpr 0x5563c3ea83b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea83a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea8380 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea83f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea8280 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5563c3ea8410 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea82b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea8428 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea82f0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5563c3ea8440 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea8368 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea8350 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea8310 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5563c3ea86d8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5563c3ea8688 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5563c3ea8658 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5563c3ea85f8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5563c3ea85c8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5563c3ea8578 <col:48, col:57> 'char [48]' lvalue ->c 0x5563c3e985c0
|     |     |   `-CXXMemberCallExpr 0x5563c3ea8558 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5563c3ea8528 <col:48> '<bound member function type>' ->xanno 0x5563c3e8d8a8
|     |     |       `-CXXThisExpr 0x5563c3ea8518 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5563c3ea85e0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5563c3ea85a8 <col:61> 'int' lvalue ParmVar 0x5563c3e913e8 'i' 'int'
|     `-ImplicitCastExpr 0x5563c3ea86c0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5563c3ea86a0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5563c3e91460 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5563c3e91710 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5563c3e91640 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5563c3ea8f68 <col:33, line:620:5>
|   |-ParenExpr 0x5563c3ea8ce0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5563c3ea8cb0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea8900 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea88d0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea8770 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea8758 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea8718 <col:23> 'int' lvalue ParmVar 0x5563c3e91640 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea8738 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea88b0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5563c3ea8898 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea8790 <col:33> 'int' lvalue ParmVar 0x5563c3e91640 'i' 'int'
|   |   |     `-BinaryOperator 0x5563c3ea8878 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5563c3ea8860 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5563c3ea87b0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5563c3ea8838 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5563c3ea8820 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5563c3ea87e8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5563c3ea8960 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea8940 <col:79> 'int' 0
|   |   `-CallExpr 0x5563c3ea8c10 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea8bf8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea8bd8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea8c50 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea8a48 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5563c3ea8c68 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea8a90 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea8c80 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea8ac8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5563c3ea8c98 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea8bc0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea8ba8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea8b68 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5563c3ea8f58 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5563c3ea8f40 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5563c3ea8f28 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5563c3ea8ef8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5563c3ea8e70 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5563c3ea8e40 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5563c3ea8df0 <col:67, col:76> 'char const[48]' lvalue ->c 0x5563c3e985c0
|             |   `-CXXMemberCallExpr 0x5563c3ea8dd0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5563c3ea8da0 <col:67> '<bound member function type>' ->xanno 0x5563c3e8d708
|             |       `-CXXThisExpr 0x5563c3ea8d90 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5563c3ea8e58 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5563c3ea8e20 <col:80> 'int' lvalue ParmVar 0x5563c3e91640 'i' 'int'
|-CXXMethodDecl 0x5563c3e91928 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5563c3e917d0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5563c3e91850 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5563c3ea9790 <col:45, line:635:5>
|   |-ParenExpr 0x5563c3ea94d8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5563c3ea94a8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5563c3ea9170 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5563c3ea9140 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5563c3ea8fe0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5563c3ea8fc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5563c3ea8f88 <col:23> 'int' lvalue ParmVar 0x5563c3e917d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5563c3ea8fa8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5563c3ea9120 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5563c3ea9108 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5563c3ea9000 <col:33> 'int' lvalue ParmVar 0x5563c3e917d0 'i' 'int'
|   |   |     `-BinaryOperator 0x5563c3ea90e8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5563c3ea90d0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5563c3ea9020 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5563c3e8daf0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5563c3ea90a8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5563c3ea9090 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5563c3ea9058 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5563c3ea91d0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5563c3ea91b0 <col:79> 'int' 0
|   |   `-CallExpr 0x5563c3ea9408 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5563c3ea93f0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5563c3ea93d0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5563c39fa410 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5563c3ea9448 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea9240 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5563c3ea9460 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5563c3ea9288 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5563c3ea9478 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5563c3ea92c0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5563c3ea9490 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5563c3ea93b8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5563c3ea93a0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5563c3ea9358 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5563c3ea9770 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5563c3ea96d8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5563c3ea96a8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5563c3ea9648 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5563c3ea9618 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5563c3ea95c8 <col:54, col:63> 'char [48]' lvalue ->c 0x5563c3e985c0
|     |     |   `-CXXMemberCallExpr 0x5563c3ea95a8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5563c3ea9578 <col:54> '<bound member function type>' ->xanno 0x5563c3e8d8a8
|     |     |       `-CXXThisExpr 0x5563c3ea9568 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5563c3ea9630 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5563c3ea95f8 <col:67> 'int' lvalue ParmVar 0x5563c3e917d0 'i' 'int'
|     `-CXXConstCastExpr 0x5563c3ea9740 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5563c3ea9728 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5563c3ea96f0 <col:91> 'const void *' lvalue ParmVar 0x5563c3e91850 'x' 'const void *'
|-CXXMethodDecl 0x5563c3e919f8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5563c3ea9818 <col:34, line:640:5>
|   `-ReturnStmt 0x5563c3ea9808 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5563c3ea97f0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5563c3ea97c0 <col:16> 'Packet *' lvalue ->_data_packet 0x5563c3e99178
|         `-CXXThisExpr 0x5563c3ea97b0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5563c3e91b38 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5563c3e91aa8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5563c3ea28d8 <col:46> 'bool' true
|-CXXMethodDecl 0x5563c3e91cb8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5563c3e91bf0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5563c3e91d60 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5563c3e92510 <line:660:22> "" ""
| |-EnumConstantDecl 0x5563c3e91e60 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5563c3e92580 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e91e40 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5563c3e91e20 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5563c3e86fc0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5563c3e91ef0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5563c3e92598 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e91ed0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5563c3e91eb0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5563c3e87050 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5563c3e91f80 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5563c3e925b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e91f60 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5563c3e91f40 <col:21> 'int' 0
| |-EnumConstantDecl 0x5563c3e92010 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5563c3e925c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e91ff0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5563c3e91fd0 <col:19> 'int' 16
| |-EnumConstantDecl 0x5563c3e920a0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5563c3e925e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e92080 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5563c3e92060 <col:21> 'int' 16
| |-EnumConstantDecl 0x5563c3e92130 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5563c3e925f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e92110 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5563c3e920f0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5563c3e921c0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5563c3e92610 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e921a0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5563c3e92180 <col:19> 'int' EnumConstant 0x5563c3e92010 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5563c3e92250 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5563c3e92628 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e92230 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5563c3e92210 <col:19> 'int' EnumConstant 0x5563c3e92130 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5563c3e92320 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5563c3e92640 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e92300 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5563c3e922e0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5563c3e922a0 <col:23> 'int' EnumConstant 0x5563c3e92250 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5563c3e922c0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5563c3e923f0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5563c3e92658 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5563c3e923d0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5563c3e923b0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5563c3e92370 <col:23> 'int' EnumConstant 0x5563c3e92250 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5563c3e92390 <col:40> 'int' 4
| `-EnumConstantDecl 0x5563c3e924c0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5563c3e92670 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5563c3e924a0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5563c3e92480 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5563c3e92440 <col:23> 'int' EnumConstant 0x5563c3e92250 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5563c3e92460 <col:40> 'int' 8
|-CXXMethodDecl 0x5563c3e926b0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5563c3e92750 <col:68> "" ""
|-CXXMethodDecl 0x5563c3e927e8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5563c3e92888 <col:45> "" ""
|-CXXMethodDecl 0x5563c3e92920 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5563c3e929c0 <col:57> "" ""
|-CXXMethodDecl 0x5563c3e92a58 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5563c3e92af8 <col:45> "" ""
|-CXXMethodDecl 0x5563c3e92b90 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5563c3e92c30 <col:57> "" ""
|-CXXMethodDecl 0x5563c3e92cc0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5563c3e92d60 <col:51> "" ""
|-CXXMethodDecl 0x5563c3e92df0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5563c3e92e90 <col:63> "" ""
|-CXXMethodDecl 0x5563c3e92f20 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5563c3e92fc0 <col:53> "" ""
|-CXXMethodDecl 0x5563c3e93050 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5563c3e930f0 <col:65> "" ""
|-CXXMethodDecl 0x5563c3e93208 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5563c3e93178 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5563c3e932b0 <col:61> "" ""
|-CXXMethodDecl 0x5563c3e93448 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5563c3e93338 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5563c3e933b0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5563c3e934f8 <col:67> "" ""
|-CXXMethodDecl 0x5563c3e93610 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5563c3e93580 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5563c3e936b8 <col:63> "" ""
|-CXXMethodDecl 0x5563c3e93850 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5563c3e93740 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5563c3e937b8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5563c3e93900 <col:69> "" ""
|-CXXMethodDecl 0x5563c3e93a18 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5563c3e93988 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5563c3e93ac0 <col:63> "" ""
|-CXXMethodDecl 0x5563c3e96198 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e96088 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5563c3e96100 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5563c3e96248 <col:69> "" ""
|-CXXMethodDecl 0x5563c3e96360 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5563c3e962d0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5563c3e96408 <col:62> "" ""
|-CXXMethodDecl 0x5563c3e965a0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5563c3e96490 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5563c3e96508 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5563c3e96650 <col:68> "" ""
|-CXXMethodDecl 0x5563c3e96768 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5563c3e966d8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5563c3e96810 <col:63> "" ""
|-CXXMethodDecl 0x5563c3e969a8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5563c3e96898 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5563c3e96910 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5563c3e96a58 <col:69> "" ""
|-CXXMethodDecl 0x5563c3e96ae8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5563c3e96b88 <col:64> "" ""
|-CXXMethodDecl 0x5563c3e96c18 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5563c3e96cb8 <col:52> "" ""
|-CXXMethodDecl 0x5563c3e96d48 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5563c3e96de8 <col:67> "" ""
|-CXXMethodDecl 0x5563c3e96e78 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5563c3e96f18 <col:55> "" ""
|-CXXMethodDecl 0x5563c3e97030 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5563c3e96fa0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5563c3e970d8 <col:58> "" ""
|-CXXMethodDecl 0x5563c3e97270 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5563c3e97160 <col:33> col:36 'int'
| |-ParmVarDecl 0x5563c3e971d8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5563c3e97320 <col:62> "" ""
|-CXXMethodDecl 0x5563c3e97438 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5563c3e973a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5563c3e974e0 <col:58> "" ""
|-CXXMethodDecl 0x5563c3e97678 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5563c3e97568 <col:33> col:36 'int'
| |-ParmVarDecl 0x5563c3e975e0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5563c3e97728 <col:62> "" ""
|-CXXMethodDecl 0x5563c3e97840 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5563c3e977b0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5563c3e978e8 <col:60> "" ""
|-CXXMethodDecl 0x5563c3e97a80 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5563c3e97970 <col:34> col:37 'int'
| |-ParmVarDecl 0x5563c3e979e8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5563c3e97b30 <col:64> "" ""
|-CXXMethodDecl 0x5563c3e97c48 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5563c3e97bb8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5563c3e97cf0 <col:58> "" ""
|-CXXMethodDecl 0x5563c3e97e88 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5563c3e97d78 <col:33> col:36 'int'
| |-ParmVarDecl 0x5563c3e97df0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5563c3e97f38 <col:62> "" ""
|-CXXMethodDecl 0x5563c3e98050 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5563c3e97fc0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5563c3e980f8 <col:59> "" ""
|-CXXMethodDecl 0x5563c3e98290 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5563c3e98180 <col:33> col:36 'int'
| |-ParmVarDecl 0x5563c3e981f8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5563c3e98340 <col:63> "" ""
|-AccessSpecDecl 0x5563c3e983b0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5563c3e983d8 prev 0x5563c3e8d5e0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5563c3e984d0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5563c3e985c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5563c3e986e8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5563c3e98868 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5563c3e989e8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5563c3e98b68 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5563c3ea9998 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5563c3eaa208 <col:11>
| |-CXXDestructorDecl 0x5563c3ea9a70 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5563c3ea9ba8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5563c3ea9ba8
| | `-ParmVarDecl 0x5563c3ea9cb8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5563c3ea9d58 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5563c3ea9d58
| | `-ParmVarDecl 0x5563c3ea9e68 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5563c3eacc28 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5563c3eacd38 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5563c3eacfb8 <col:11>
| |   `-ReturnStmt 0x5563c3eacfa8 <col:11>
| |     `-UnaryOperator 0x5563c3eacf90 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5563c3eacf80 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5563c3eacda8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5563c3eacda8
|   `-ParmVarDecl 0x5563c3eaceb8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5563c3e98bd0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5563c3e98ce8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5563c3e98d88 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5563c3e98df0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5563c3e98e58 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5563c3e98ec0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5563c3e98f20 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5563c3e98fe0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5563c3e99040 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5563c3e990a0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5563c3ea98a8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5563c3e98d88 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5563c3eaa218 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5563c3eaa270 <col:12>
| |-CXXConstructorDecl 0x5563c3ea9ed8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5563c3ea9ed8
| | `-ParmVarDecl 0x5563c3ea9fe8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5563c3eaa088 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5563c3eaa088
| | `-ParmVarDecl 0x5563c3eaa198 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5563c3eac310 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5563c3e99118 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5563c3e99178 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5563c3e991e0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5563c3e99248 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5563c3e992b0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5563c3e99318 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5563c3e99378 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5563c3e993d8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5563c3e99440 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5563c3e994c8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5563c3e99118 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5563c3ea9840 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5563c3e99378 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5563c3eaa280 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5563c3eaa2e0 <col:21, line:755:5>
|-CXXConstructorDecl 0x5563c3e99668 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5563c3e995a8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5563c3e99760 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5563c3e99948 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5563c3e99850 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5563c3e99c18 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5563c3e99a00 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5563c3e99a78 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5563c3e99af0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3e99e38 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5563c3e99ce8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5563c3e99d60 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5563c3ea2418 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5563c3e99ef8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5563c3e99f70 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5563c3e99fe8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5563c3ea2570 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5563c3ea24e0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5563c3ea26b8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5563c3ea2628 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5563c3ea27b0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>
